ARM GAS  C:\Users\strag\AppData\Local\Temp\ccdvwMee.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"protocol.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.pGetpFrame,"ax",%progbits
  22              		.align	2
  23              		.global	pGetpFrame
  24              		.thumb
  25              		.thumb_func
  27              	pGetpFrame:
  28              	.LFB111:
  29              		.file 1 "../user/source/protocol.c"
   1:../user/source/protocol.c **** /*********************************************************************** 
   2:../user/source/protocol.c **** * Copyright (c) 2012, All rights reserved.
   3:../user/source/protocol.c **** *
   4:../user/source/protocol.c **** * 文件名称： UART.c
   5:../user/source/protocol.c **** * 描    述： 串口通信代码文件
   6:../user/source/protocol.c **** * 
   7:../user/source/protocol.c **** * 修改记录：
   8:../user/source/protocol.c **** *
   9:../user/source/protocol.c **** * V1.0，2016.06.19，
  10:../user/source/protocol.c **** ***********************************************************************/
  11:../user/source/protocol.c **** #include "protocol.h"
  12:../user/source/protocol.c **** #include "DLT698.h"
  13:../user/source/protocol.c **** 
  14:../user/source/protocol.c **** /********************************************************************
  15:../user/source/protocol.c **** * 功    能：获取帧指针
  16:../user/source/protocol.c **** * 输    入：应用层缓存指针，数据长度
  17:../user/source/protocol.c **** * 输    出：帧指针
  18:../user/source/protocol.c **** *           
  19:../user/source/protocol.c **** * 编 写 人：
  20:../user/source/protocol.c **** * 编写日期：2018-9-9 08:01:18
  21:../user/source/protocol.c **** **********************************************************************/
  22:../user/source/protocol.c **** uint8_t *pGetpFrame(uint8_t *pframe, uint32_t dwLen, DLT698_FRAME *p698Frame)
  23:../user/source/protocol.c **** {
  30              		.loc 1 23 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccdvwMee.s 			page 2


  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 32
  38              		.cfi_offset 4, -32
  39              		.cfi_offset 5, -28
  40              		.cfi_offset 6, -24
  41              		.cfi_offset 7, -20
  42              		.cfi_offset 8, -16
  43              		.cfi_offset 9, -12
  44              		.cfi_offset 10, -8
  45              		.cfi_offset 14, -4
  46 0004 0E46     		mov	r6, r1
  47 0006 9046     		mov	r8, r2
  48              	.LVL1:
  24:../user/source/protocol.c ****     uint8_t *p;
  25:../user/source/protocol.c ****     UINT16 uwframeLen;
  26:../user/source/protocol.c ****     UINT32 nHCSPos;
  27:../user/source/protocol.c ****     UINT32 nFCSPos;
  28:../user/source/protocol.c ****     UINT16 uwhcs;
  29:../user/source/protocol.c ****     UINT16 uwfcs;
  30:../user/source/protocol.c ****     UINT16 SA_Len;
  31:../user/source/protocol.c ****     int dwAPDULen = 0;
  32:../user/source/protocol.c ****     //if (len > DRV_BUF_SIZE)
  33:../user/source/protocol.c ****     //return NULL;
  34:../user/source/protocol.c ****     p = (uint8_t *)strchr((char *)pframe, 0x68);
  49              		.loc 1 34 0
  50 0008 6821     		movs	r1, #104
  51              	.LVL2:
  52 000a FFF7FEFF 		bl	strchr
  53              	.LVL3:
  35:../user/source/protocol.c **** 
  36:../user/source/protocol.c ****     if (p == NULL)
  54              		.loc 1 36 0
  55 000e D0B3     		cbz	r0, .L3
  56 0010 0446     		mov	r4, r0
  37:../user/source/protocol.c ****         return NULL;
  38:../user/source/protocol.c **** 
  39:../user/source/protocol.c ****     //帧长占2byte，不含头尾
  40:../user/source/protocol.c ****     uwframeLen = MAKE_WORD(*(p + 2), *(p + 1));
  57              		.loc 1 40 0
  58 0012 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  59 0014 8578     		ldrb	r5, [r0, #2]	@ zero_extendqisi2
  60 0016 43EA0525 		orr	r5, r3, r5, lsl #8
  61              	.LVL4:
  41:../user/source/protocol.c **** 
  42:../user/source/protocol.c ****     //if (dwLen + 2 > uwframeLen)
  43:../user/source/protocol.c ****     if (uwframeLen + 2 > dwLen)
  62              		.loc 1 43 0
  63 001a AB1C     		adds	r3, r5, #2
  64 001c B342     		cmp	r3, r6
  65 001e 35D8     		bhi	.L4
  44:../user/source/protocol.c ****         return NULL;
  45:../user/source/protocol.c **** 
  46:../user/source/protocol.c ****     /*SA地址字节数，0代表1个字节*/
  47:../user/source/protocol.c ****     SA_Len = (*(p + 4) & 0x0F) + 2;
  66              		.loc 1 47 0
  67 0020 0679     		ldrb	r6, [r0, #4]	@ zero_extendqisi2
  68              	.LVL5:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccdvwMee.s 			page 3


  69 0022 06F00F06 		and	r6, r6, #15
  70 0026 0236     		adds	r6, r6, #2
  71              	.LVL6:
  48:../user/source/protocol.c ****     nHCSPos += SA_Len + 5;
  72              		.loc 1 48 0
  73 0028 3746     		mov	r7, r6
  74 002a 06F1050A 		add	r10, r6, #5
  75              	.LVL7:
  49:../user/source/protocol.c **** 
  50:../user/source/protocol.c ****     //帧头校验hcs
  51:../user/source/protocol.c ****     uwhcs = PPPINITFCS16;
  52:../user/source/protocol.c ****     uwhcs = pppfcs16(uwhcs, p + 1, nHCSPos - 1);
  76              		.loc 1 52 0
  77 002e 00F10109 		add	r9, r0, #1
  78 0032 321D     		adds	r2, r6, #4
  79 0034 4946     		mov	r1, r9
  80 0036 4FF6FF70 		movw	r0, #65535
  81              	.LVL8:
  82 003a FFF7FEFF 		bl	pppfcs16
  83              	.LVL9:
  53:../user/source/protocol.c **** 
  54:../user/source/protocol.c ****     if (uwhcs != MAKE_WORD(*(p + nHCSPos + 1), *(p + nHCSPos)))
  84              		.loc 1 54 0
  85 003e 14F80A30 		ldrb	r3, [r4, r10]	@ zero_extendqisi2
  86 0042 B21D     		adds	r2, r6, #6
  87 0044 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
  88 0046 43EA0223 		orr	r3, r3, r2, lsl #8
  89 004a 9842     		cmp	r0, r3
  90 004c 21D1     		bne	.L5
  55:../user/source/protocol.c ****     {
  56:../user/source/protocol.c ****         return NULL;
  57:../user/source/protocol.c ****     }
  58:../user/source/protocol.c **** 
  59:../user/source/protocol.c ****     //帧校验fcs
  60:../user/source/protocol.c ****     nFCSPos = uwframeLen - 1;
  91              		.loc 1 60 0
  92 004e 05F1FF3A 		add	r10, r5, #-1
  93              	.LVL10:
  61:../user/source/protocol.c ****     uwfcs = PPPINITFCS16;
  62:../user/source/protocol.c ****     uwfcs = pppfcs16(uwfcs, p + 1, nFCSPos - 1);
  94              		.loc 1 62 0
  95 0052 AA1E     		subs	r2, r5, #2
  96 0054 4946     		mov	r1, r9
  97 0056 4FF6FF70 		movw	r0, #65535
  98              	.LVL11:
  99 005a FFF7FEFF 		bl	pppfcs16
 100              	.LVL12:
  63:../user/source/protocol.c **** 
  64:../user/source/protocol.c ****     if (uwfcs != MAKE_WORD(*(p + nFCSPos + 1), *(p + nFCSPos)))
 101              		.loc 1 64 0
 102 005e 14F80A30 		ldrb	r3, [r4, r10]	@ zero_extendqisi2
 103 0062 625D     		ldrb	r2, [r4, r5]	@ zero_extendqisi2
 104 0064 43EA0223 		orr	r3, r3, r2, lsl #8
 105 0068 9842     		cmp	r0, r3
 106 006a 15D1     		bne	.L6
  65:../user/source/protocol.c ****     {
  66:../user/source/protocol.c ****         return NULL;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccdvwMee.s 			page 4


  67:../user/source/protocol.c ****     }
  68:../user/source/protocol.c **** 
  69:../user/source/protocol.c ****     p698Frame->uwFramelen = uwframeLen;
 107              		.loc 1 69 0
 108 006c A8F80C50 		strh	r5, [r8, #12]	@ movhi
  70:../user/source/protocol.c ****     p698Frame->uwSA_len = SA_Len;
 109              		.loc 1 70 0
 110 0070 A8F80860 		strh	r6, [r8, #8]	@ movhi
  71:../user/source/protocol.c ****     p698Frame->pStart = p;
 111              		.loc 1 71 0
 112 0074 C8F80040 		str	r4, [r8]
  72:../user/source/protocol.c ****     p698Frame->pSecurityData = p + nHCSPos + 2;
 113              		.loc 1 72 0
 114 0078 0737     		adds	r7, r7, #7
 115 007a 2744     		add	r7, r7, r4
 116 007c C8F80470 		str	r7, [r8, #4]
  73:../user/source/protocol.c **** 
  74:../user/source/protocol.c ****     return p;
 117              		.loc 1 74 0
 118 0080 2046     		mov	r0, r4
 119              	.LVL13:
 120 0082 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 121              	.LVL14:
 122              	.L3:
  37:../user/source/protocol.c **** 
 123              		.loc 1 37 0
 124 0086 0020     		movs	r0, #0
 125              	.LVL15:
 126 0088 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 127              	.LVL16:
 128              	.L4:
  44:../user/source/protocol.c **** 
 129              		.loc 1 44 0
 130 008c 0020     		movs	r0, #0
 131              	.LVL17:
 132 008e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 133              	.LVL18:
 134              	.L5:
  56:../user/source/protocol.c ****     }
 135              		.loc 1 56 0
 136 0092 0020     		movs	r0, #0
 137              	.LVL19:
 138 0094 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 139              	.LVL20:
 140              	.L6:
  66:../user/source/protocol.c ****     }
 141              		.loc 1 66 0
 142 0098 0020     		movs	r0, #0
 143              	.LVL21:
  75:../user/source/protocol.c **** }
 144              		.loc 1 75 0
 145 009a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 146              		.cfi_endproc
 147              	.LFE111:
 149 009e 00BF     		.section	.text.dlt645_CalCS,"ax",%progbits
 150              		.align	2
 151              		.global	dlt645_CalCS
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccdvwMee.s 			page 5


 152              		.thumb
 153              		.thumb_func
 155              	dlt645_CalCS:
 156              	.LFB113:
  76:../user/source/protocol.c **** 
  77:../user/source/protocol.c **** /********************************************************************
  78:../user/source/protocol.c **** * 功    能：查询应用层缓存的帧格式
  79:../user/source/protocol.c **** * 输    入：应用层缓存指针，数据长度
  80:../user/source/protocol.c **** * 输    出：规约类型枚举值
  81:../user/source/protocol.c **** *           
  82:../user/source/protocol.c **** * 编 写 人：
  83:../user/source/protocol.c **** * 编写日期：2018-9-9 08:01:18
  84:../user/source/protocol.c **** **********************************************************************/
  85:../user/source/protocol.c **** ProtocolDef GetProtocolType(uint8_t *pbuf, uint32_t len)
  86:../user/source/protocol.c **** {
  87:../user/source/protocol.c ****     ProtocolDef ptype = none;
  88:../user/source/protocol.c ****     uint8_t *pframe;
  89:../user/source/protocol.c ****     pframe = (uint8_t *)strchr((char *)pbuf, 0x68);
  90:../user/source/protocol.c ****     uint32_t dlt645_L = *(pframe + 9) + 12;
  91:../user/source/protocol.c ****     //uint32_t dlt698_L = *(pframe + 1) | (*(pframe + 2) & 0x3F) << 8 + 2;
  92:../user/source/protocol.c ****     uint32_t dlt698_L = MAKE_WORD(*(pframe + 2) & 0x3F, *(pframe + 1)) + 2;
  93:../user/source/protocol.c **** 
  94:../user/source/protocol.c ****     /*8th byte==68*/
  95:../user/source/protocol.c ****     /*last byte== 16*/
  96:../user/source/protocol.c ****     /* CS correct*/
  97:../user/source/protocol.c ****     /*97-645 do not support autobaud*/
  98:../user/source/protocol.c ****     if (*(pframe + 7) == 0x68 &&
  99:../user/source/protocol.c ****         len >= dlt645_L &&
 100:../user/source/protocol.c ****         *(pframe + dlt645_L - 2) == dlt645_CalCS(pframe, dlt645_L - 2) &&
 101:../user/source/protocol.c ****         *(pframe + dlt645_L - 1) == 0x16)
 102:../user/source/protocol.c ****         ptype = dlt645;
 103:../user/source/protocol.c ****     /*last byte== 16*/
 104:../user/source/protocol.c ****     else if (*(pframe + dlt698_L - 1) == 0x16 &&
 105:../user/source/protocol.c ****              len >= dlt698_L)
 106:../user/source/protocol.c ****         ptype = dlt698;
 107:../user/source/protocol.c ****     return ptype;
 108:../user/source/protocol.c **** }
 109:../user/source/protocol.c **** /********************************************************************
 110:../user/source/protocol.c **** * 功    能：dlt645_CS计算`
 111:../user/source/protocol.c **** * 输    入：帧结构指针
 112:../user/source/protocol.c **** * 输    出：CS值
 113:../user/source/protocol.c **** *           
 114:../user/source/protocol.c **** * 编 写 人：
 115:../user/source/protocol.c **** * 编写日期：2018-9-9 08:01:18
 116:../user/source/protocol.c **** **********************************************************************/
 117:../user/source/protocol.c **** uint8_t dlt645_CalCS(uint8_t *pframe, uint32_t cspos)
 118:../user/source/protocol.c **** {
 157              		.loc 1 118 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 162              	.LVL22:
 163 0000 10B4     		push	{r4}
 164              	.LCFI1:
 165              		.cfi_def_cfa_offset 4
 166              		.cfi_offset 4, -4
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccdvwMee.s 			page 6


 167              	.LVL23:
 119:../user/source/protocol.c ****     uint8_t *pbuf;
 120:../user/source/protocol.c ****     uint8_t CS = 0;
 121:../user/source/protocol.c ****     uint8_t i;
 122:../user/source/protocol.c **** 
 123:../user/source/protocol.c ****     pbuf = (uint8_t *)pframe;
 124:../user/source/protocol.c ****     //求取校验和
 125:../user/source/protocol.c ****     for (i = 0; i < cspos; i++)
 168              		.loc 1 125 0
 169 0002 0023     		movs	r3, #0
 120:../user/source/protocol.c ****     uint8_t i;
 170              		.loc 1 120 0
 171 0004 1A46     		mov	r2, r3
 172              		.loc 1 125 0
 173 0006 04E0     		b	.L9
 174              	.LVL24:
 175              	.L10:
 126:../user/source/protocol.c ****     {
 127:../user/source/protocol.c ****         CS += *(pbuf + i);
 176              		.loc 1 127 0 discriminator 3
 177 0008 C45C     		ldrb	r4, [r0, r3]	@ zero_extendqisi2
 178 000a 2244     		add	r2, r2, r4
 179              	.LVL25:
 180 000c D2B2     		uxtb	r2, r2
 181              	.LVL26:
 125:../user/source/protocol.c ****     {
 182              		.loc 1 125 0 discriminator 3
 183 000e 0133     		adds	r3, r3, #1
 184              	.LVL27:
 185 0010 DBB2     		uxtb	r3, r3
 186              	.LVL28:
 187              	.L9:
 125:../user/source/protocol.c ****     {
 188              		.loc 1 125 0 is_stmt 0 discriminator 1
 189 0012 8B42     		cmp	r3, r1
 190 0014 F8D3     		bcc	.L10
 128:../user/source/protocol.c ****     }
 129:../user/source/protocol.c ****     return CS;
 130:../user/source/protocol.c **** }
 191              		.loc 1 130 0 is_stmt 1
 192 0016 1046     		mov	r0, r2
 193              	.LVL29:
 194 0018 5DF8044B 		ldr	r4, [sp], #4
 195              	.LCFI2:
 196              		.cfi_restore 4
 197              		.cfi_def_cfa_offset 0
 198 001c 7047     		bx	lr
 199              		.cfi_endproc
 200              	.LFE113:
 202 001e 00BF     		.section	.text.GetProtocolType,"ax",%progbits
 203              		.align	2
 204              		.global	GetProtocolType
 205              		.thumb
 206              		.thumb_func
 208              	GetProtocolType:
 209              	.LFB112:
  86:../user/source/protocol.c ****     ProtocolDef ptype = none;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccdvwMee.s 			page 7


 210              		.loc 1 86 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              	.LVL30:
 215 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 216              	.LCFI3:
 217              		.cfi_def_cfa_offset 24
 218              		.cfi_offset 4, -24
 219              		.cfi_offset 5, -20
 220              		.cfi_offset 6, -16
 221              		.cfi_offset 7, -12
 222              		.cfi_offset 8, -8
 223              		.cfi_offset 14, -4
 224 0004 0F46     		mov	r7, r1
 225              	.LVL31:
  89:../user/source/protocol.c ****     uint32_t dlt645_L = *(pframe + 9) + 12;
 226              		.loc 1 89 0
 227 0006 6821     		movs	r1, #104
 228              	.LVL32:
 229 0008 FFF7FEFF 		bl	strchr
 230              	.LVL33:
 231 000c 0546     		mov	r5, r0
 232              	.LVL34:
  90:../user/source/protocol.c ****     //uint32_t dlt698_L = *(pframe + 1) | (*(pframe + 2) & 0x3F) << 8 + 2;
 233              		.loc 1 90 0
 234 000e 467A     		ldrb	r6, [r0, #9]	@ zero_extendqisi2
 235              	.LVL35:
  92:../user/source/protocol.c **** 
 236              		.loc 1 92 0
 237 0010 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 238 0012 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 239 0014 2402     		lsls	r4, r4, #8
 240 0016 04F47C54 		and	r4, r4, #16128
 241 001a 1C43     		orrs	r4, r4, r3
 242 001c 0234     		adds	r4, r4, #2
 243              	.LVL36:
  98:../user/source/protocol.c ****         len >= dlt645_L &&
 244              		.loc 1 98 0
 245 001e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 246 0020 682B     		cmp	r3, #104
 247 0022 0DD1     		bne	.L13
 248 0024 0C36     		adds	r6, r6, #12
 249              	.LVL37:
  98:../user/source/protocol.c ****         len >= dlt645_L &&
 250              		.loc 1 98 0 is_stmt 0 discriminator 1
 251 0026 BE42     		cmp	r6, r7
 252 0028 0AD8     		bhi	.L13
 100:../user/source/protocol.c ****         *(pframe + dlt645_L - 1) == 0x16)
 253              		.loc 1 100 0 is_stmt 1
 254 002a B11E     		subs	r1, r6, #2
 255 002c 10F80180 		ldrb	r8, [r0, r1]	@ zero_extendqisi2
 256 0030 FFF7FEFF 		bl	dlt645_CalCS
 257              	.LVL38:
  99:../user/source/protocol.c ****         *(pframe + dlt645_L - 2) == dlt645_CalCS(pframe, dlt645_L - 2) &&
 258              		.loc 1 99 0
 259 0034 8045     		cmp	r8, r0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccdvwMee.s 			page 8


 260 0036 03D1     		bne	.L13
 101:../user/source/protocol.c ****         ptype = dlt645;
 261              		.loc 1 101 0
 262 0038 013E     		subs	r6, r6, #1
 263              	.LVL39:
 264 003a AB5D     		ldrb	r3, [r5, r6]	@ zero_extendqisi2
 100:../user/source/protocol.c ****         *(pframe + dlt645_L - 1) == 0x16)
 265              		.loc 1 100 0
 266 003c 162B     		cmp	r3, #22
 267 003e 08D0     		beq	.L15
 268              	.LVL40:
 269              	.L13:
 104:../user/source/protocol.c ****              len >= dlt698_L)
 270              		.loc 1 104 0
 271 0040 631E     		subs	r3, r4, #1
 272 0042 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 273 0044 162B     		cmp	r3, #22
 274 0046 07D1     		bne	.L16
 104:../user/source/protocol.c ****              len >= dlt698_L)
 275              		.loc 1 104 0 is_stmt 0 discriminator 1
 276 0048 BC42     		cmp	r4, r7
 277 004a 08D9     		bls	.L17
  87:../user/source/protocol.c ****     uint8_t *pframe;
 278              		.loc 1 87 0 is_stmt 1
 279 004c 0220     		movs	r0, #2
 280 004e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 281              	.LVL41:
 282              	.L15:
 102:../user/source/protocol.c ****     /*last byte== 16*/
 283              		.loc 1 102 0
 284 0052 0020     		movs	r0, #0
 285 0054 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 286              	.LVL42:
 287              	.L16:
  87:../user/source/protocol.c ****     uint8_t *pframe;
 288              		.loc 1 87 0
 289 0058 0220     		movs	r0, #2
 290 005a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 291              	.LVL43:
 292              	.L17:
 106:../user/source/protocol.c ****     return ptype;
 293              		.loc 1 106 0
 294 005e 0120     		movs	r0, #1
 295              	.LVL44:
 108:../user/source/protocol.c **** /********************************************************************
 296              		.loc 1 108 0
 297 0060 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 298              		.cfi_endproc
 299              	.LFE112:
 301              		.section	.text.dwUartCopy,"ax",%progbits
 302              		.align	2
 303              		.global	dwUartCopy
 304              		.thumb
 305              		.thumb_func
 307              	dwUartCopy:
 308              	.LFB114:
 131:../user/source/protocol.c **** uint32_t dwUartCopy(UartDef *SrcUart, uint8_t *pdata, UartDef *DestUart)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccdvwMee.s 			page 9


 132:../user/source/protocol.c **** {
 309              		.loc 1 132 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              	.LVL45:
 314 0000 70B5     		push	{r4, r5, r6, lr}
 315              	.LCFI4:
 316              		.cfi_def_cfa_offset 16
 317              		.cfi_offset 4, -16
 318              		.cfi_offset 5, -12
 319              		.cfi_offset 6, -8
 320              		.cfi_offset 14, -4
 321 0002 0E46     		mov	r6, r1
 322 0004 1546     		mov	r5, r2
 133:../user/source/protocol.c ****     uint32_t dwLen;
 134:../user/source/protocol.c ****     dwLen = Uart_Read(SrcUart, pdata, DRV_BUF_SIZE);
 323              		.loc 1 134 0
 324 0006 4FF47A72 		mov	r2, #1000
 325              	.LVL46:
 326 000a FFF7FEFF 		bl	Uart_Read
 327              	.LVL47:
 135:../user/source/protocol.c ****     if (dwLen == 0)
 328              		.loc 1 135 0
 329 000e 40B1     		cbz	r0, .L21
 330 0010 0446     		mov	r4, r0
 136:../user/source/protocol.c ****         return 0;
 137:../user/source/protocol.c ****     /*向下透传*/
 138:../user/source/protocol.c ****     //Uart_Write(DestUart, pdata, dwLen);
 139:../user/source/protocol.c ****     Uart_OnceWrite(DestUart, pdata, dwLen, TICKS_1000MS);
 331              		.loc 1 139 0
 332 0012 0B23     		movs	r3, #11
 333 0014 0246     		mov	r2, r0
 334 0016 3146     		mov	r1, r6
 335 0018 2846     		mov	r0, r5
 336              	.LVL48:
 337 001a FFF7FEFF 		bl	Uart_OnceWrite
 338              	.LVL49:
 140:../user/source/protocol.c ****     return dwLen;
 339              		.loc 1 140 0
 340 001e 2046     		mov	r0, r4
 341 0020 70BD     		pop	{r4, r5, r6, pc}
 342              	.LVL50:
 343              	.L21:
 136:../user/source/protocol.c ****         return 0;
 344              		.loc 1 136 0
 345 0022 0020     		movs	r0, #0
 346              	.LVL51:
 141:../user/source/protocol.c **** }...
 347              		.loc 1 141 0
 348 0024 70BD     		pop	{r4, r5, r6, pc}
 349              		.cfi_endproc
 350              	.LFE114:
 352 0026 00BF     		.text
 353              	.Letext0:
 354              		.file 2 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\machine\\_defaul
 355              		.file 3 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\sys\\_stdint.h"
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccdvwMee.s 			page 10


 356              		.file 4 "../cmsis/include/stm32f37x.h"
 357              		.file 5 "../user/include/BaseDef.h"
 358              		.file 6 "../user/include/uart.h"
 359              		.file 7 "../user/include/DLT698.h"
 360              		.file 8 "../user/include/protocol.h"
 361              		.file 9 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\string.h"
 362              		.file 10 "../cmsis/include/core_cm4.h"
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccdvwMee.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 protocol.c
C:\Users\strag\AppData\Local\Temp\ccdvwMee.s:22     .text.pGetpFrame:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccdvwMee.s:27     .text.pGetpFrame:00000000 pGetpFrame
C:\Users\strag\AppData\Local\Temp\ccdvwMee.s:150    .text.dlt645_CalCS:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccdvwMee.s:155    .text.dlt645_CalCS:00000000 dlt645_CalCS
C:\Users\strag\AppData\Local\Temp\ccdvwMee.s:203    .text.GetProtocolType:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccdvwMee.s:208    .text.GetProtocolType:00000000 GetProtocolType
C:\Users\strag\AppData\Local\Temp\ccdvwMee.s:302    .text.dwUartCopy:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccdvwMee.s:307    .text.dwUartCopy:00000000 dwUartCopy
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
strchr
pppfcs16
Uart_Read
Uart_OnceWrite
