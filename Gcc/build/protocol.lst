ARM GAS  C:\Users\strag\AppData\Local\Temp\ccCQSwkI.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"protocol.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.pGetpFrame,"ax",%progbits
  22              		.align	2
  23              		.global	pGetpFrame
  24              		.thumb
  25              		.thumb_func
  27              	pGetpFrame:
  28              	.LFB111:
  29              		.file 1 "../user/source/protocol.c"
   1:../user/source/protocol.c **** /*********************************************************************** 
   2:../user/source/protocol.c **** * Copyright (c) 2012, All rights reserved.
   3:../user/source/protocol.c **** *
   4:../user/source/protocol.c **** * 文件名称： UART.c
   5:../user/source/protocol.c **** * 描    述： 串口通信代码文件
   6:../user/source/protocol.c **** * 
   7:../user/source/protocol.c **** * 修改记录：
   8:../user/source/protocol.c **** *
   9:../user/source/protocol.c **** * V1.0，2016.06.19，
  10:../user/source/protocol.c **** ***********************************************************************/
  11:../user/source/protocol.c **** #include "protocol.h"
  12:../user/source/protocol.c **** #include "DLT698.h"
  13:../user/source/protocol.c **** 
  14:../user/source/protocol.c **** /********************************************************************
  15:../user/source/protocol.c **** * 功    能：获取帧指针
  16:../user/source/protocol.c **** * 输    入：应用层缓存指针，数据长度
  17:../user/source/protocol.c **** * 输    出：帧指针
  18:../user/source/protocol.c **** *           
  19:../user/source/protocol.c **** * 编 写 人：
  20:../user/source/protocol.c **** * 编写日期：2018-9-9 08:01:18
  21:../user/source/protocol.c **** **********************************************************************/
  22:../user/source/protocol.c **** uint8_t *pGetpFrame(uint8_t *pframe, uint32_t dwLen, DLT698_FRAME *p698Frame)
  23:../user/source/protocol.c **** {
  30              		.loc 1 23 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccCQSwkI.s 			page 2


  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 32
  38              		.cfi_offset 3, -32
  39              		.cfi_offset 4, -28
  40              		.cfi_offset 5, -24
  41              		.cfi_offset 6, -20
  42              		.cfi_offset 7, -16
  43              		.cfi_offset 8, -12
  44              		.cfi_offset 9, -8
  45              		.cfi_offset 14, -4
  46 0004 0D46     		mov	r5, r1
  47 0006 1646     		mov	r6, r2
  48              	.LVL1:
  24:../user/source/protocol.c ****     uint8_t *p;
  25:../user/source/protocol.c ****     UINT16 uwframeLen;
  26:../user/source/protocol.c ****     UINT32 nHCSPos = 0;
  27:../user/source/protocol.c ****     UINT32 nFCSPos;
  28:../user/source/protocol.c ****     UINT16 uwhcs;
  29:../user/source/protocol.c ****     UINT16 uwfcs;
  30:../user/source/protocol.c ****     UINT16 SA_Len;
  31:../user/source/protocol.c ****     //int dwAPDULen = 0;
  32:../user/source/protocol.c ****     //if (len > DRV_BUF_SIZE)
  33:../user/source/protocol.c ****     //return NULL;
  34:../user/source/protocol.c ****     p = (uint8_t *)strchr((char *)pframe, 0x68);
  49              		.loc 1 34 0
  50 0008 6821     		movs	r1, #104
  51              	.LVL2:
  52 000a FFF7FEFF 		bl	strchr
  53              	.LVL3:
  35:../user/source/protocol.c **** 
  36:../user/source/protocol.c ****     if (p == NULL)
  54              		.loc 1 36 0
  55 000e B0B3     		cbz	r0, .L3
  56 0010 0446     		mov	r4, r0
  37:../user/source/protocol.c ****         return NULL;
  38:../user/source/protocol.c **** 
  39:../user/source/protocol.c ****     //帧长占2byte，不含头尾
  40:../user/source/protocol.c ****     uwframeLen = MAKE_WORD(*(p + 2), *(p + 1));
  57              		.loc 1 40 0
  58 0012 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  59 0014 8778     		ldrb	r7, [r0, #2]	@ zero_extendqisi2
  60 0016 43EA0727 		orr	r7, r3, r7, lsl #8
  61              	.LVL4:
  41:../user/source/protocol.c **** 
  42:../user/source/protocol.c ****     //if (dwLen + 2 > uwframeLen)
  43:../user/source/protocol.c ****     if (uwframeLen + 2 > dwLen)
  62              		.loc 1 43 0
  63 001a BB1C     		adds	r3, r7, #2
  64 001c AB42     		cmp	r3, r5
  65 001e 31D8     		bhi	.L4
  44:../user/source/protocol.c ****         return NULL;
  45:../user/source/protocol.c **** 
  46:../user/source/protocol.c ****     /*SA地址字节数，0代表1个字节*/
  47:../user/source/protocol.c ****     SA_Len = (*(p + 4) & 0x0F) + 2;
  66              		.loc 1 47 0
  67 0020 0579     		ldrb	r5, [r0, #4]	@ zero_extendqisi2
  68              	.LVL5:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccCQSwkI.s 			page 3


  69 0022 05F00F05 		and	r5, r5, #15
  70              	.LVL6:
  48:../user/source/protocol.c ****     nHCSPos += SA_Len + 5;
  71              		.loc 1 48 0
  72 0026 05F10709 		add	r9, r5, #7
  73              	.LVL7:
  49:../user/source/protocol.c **** 
  50:../user/source/protocol.c ****     //帧头校验hcs
  51:../user/source/protocol.c ****     uwhcs = PPPINITFCS16;
  52:../user/source/protocol.c ****     uwhcs = pppfcs16(uwhcs, p + 1, nHCSPos - 1);
  74              		.loc 1 52 0
  75 002a 00F10108 		add	r8, r0, #1
  76 002e AA1D     		adds	r2, r5, #6
  77 0030 4146     		mov	r1, r8
  78 0032 4FF6FF70 		movw	r0, #65535
  79              	.LVL8:
  80 0036 FFF7FEFF 		bl	pppfcs16
  81              	.LVL9:
  53:../user/source/protocol.c **** 
  54:../user/source/protocol.c ****     if (uwhcs != MAKE_WORD(*(p + nHCSPos + 1), *(p + nHCSPos)))
  82              		.loc 1 54 0
  83 003a 14F80930 		ldrb	r3, [r4, r9]	@ zero_extendqisi2
  84 003e 05F10802 		add	r2, r5, #8
  47:../user/source/protocol.c ****     nHCSPos += SA_Len + 5;
  85              		.loc 1 47 0
  86 0042 0235     		adds	r5, r5, #2
  87              	.LVL10:
  88              		.loc 1 54 0
  89 0044 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
  90 0046 43EA0223 		orr	r3, r3, r2, lsl #8
  91 004a 9842     		cmp	r0, r3
  92 004c 1DD1     		bne	.L5
  55:../user/source/protocol.c ****     {
  56:../user/source/protocol.c ****         return NULL;
  57:../user/source/protocol.c ****     }
  58:../user/source/protocol.c **** 
  59:../user/source/protocol.c ****     //帧校验fcs
  60:../user/source/protocol.c ****     nFCSPos = uwframeLen - 1;
  93              		.loc 1 60 0
  94 004e 07F1FF39 		add	r9, r7, #-1
  95              	.LVL11:
  61:../user/source/protocol.c ****     uwfcs = PPPINITFCS16;
  62:../user/source/protocol.c ****     uwfcs = pppfcs16(uwfcs, p + 1, nFCSPos - 1);
  96              		.loc 1 62 0
  97 0052 BA1E     		subs	r2, r7, #2
  98 0054 4146     		mov	r1, r8
  99 0056 4FF6FF70 		movw	r0, #65535
 100              	.LVL12:
 101 005a FFF7FEFF 		bl	pppfcs16
 102              	.LVL13:
  63:../user/source/protocol.c **** 
  64:../user/source/protocol.c ****     if (uwfcs != MAKE_WORD(*(p + nFCSPos + 1), *(p + nFCSPos)))
 103              		.loc 1 64 0
 104 005e 14F80930 		ldrb	r3, [r4, r9]	@ zero_extendqisi2
 105 0062 E25D     		ldrb	r2, [r4, r7]	@ zero_extendqisi2
 106 0064 43EA0223 		orr	r3, r3, r2, lsl #8
 107 0068 9842     		cmp	r0, r3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccCQSwkI.s 			page 4


 108 006a 11D1     		bne	.L6
  65:../user/source/protocol.c ****     {
  66:../user/source/protocol.c ****         return NULL;
  67:../user/source/protocol.c ****     }
  68:../user/source/protocol.c **** 
  69:../user/source/protocol.c ****     p698Frame->uwFramelen = uwframeLen;
 109              		.loc 1 69 0
 110 006c B781     		strh	r7, [r6, #12]	@ movhi
  70:../user/source/protocol.c ****     p698Frame->uwSA_len = SA_Len;
 111              		.loc 1 70 0
 112 006e 3581     		strh	r5, [r6, #8]	@ movhi
  71:../user/source/protocol.c ****     p698Frame->pStart = p;
 113              		.loc 1 71 0
 114 0070 3460     		str	r4, [r6]
  72:../user/source/protocol.c ****     p698Frame->pSecurityData = p + nHCSPos + 2;
 115              		.loc 1 72 0
 116 0072 0735     		adds	r5, r5, #7
 117              	.LVL14:
 118 0074 2544     		add	r5, r5, r4
 119              	.LVL15:
 120 0076 7560     		str	r5, [r6, #4]
  73:../user/source/protocol.c **** 
  74:../user/source/protocol.c ****     return p;
 121              		.loc 1 74 0
 122 0078 2046     		mov	r0, r4
 123              	.LVL16:
 124 007a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 125              	.LVL17:
 126              	.L3:
  37:../user/source/protocol.c **** 
 127              		.loc 1 37 0
 128 007e 0020     		movs	r0, #0
 129              	.LVL18:
 130 0080 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 131              	.LVL19:
 132              	.L4:
  44:../user/source/protocol.c **** 
 133              		.loc 1 44 0
 134 0084 0020     		movs	r0, #0
 135              	.LVL20:
 136 0086 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 137              	.LVL21:
 138              	.L5:
  56:../user/source/protocol.c ****     }
 139              		.loc 1 56 0
 140 008a 0020     		movs	r0, #0
 141              	.LVL22:
 142 008c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 143              	.LVL23:
 144              	.L6:
  66:../user/source/protocol.c ****     }
 145              		.loc 1 66 0
 146 0090 0020     		movs	r0, #0
 147              	.LVL24:
  75:../user/source/protocol.c **** }
 148              		.loc 1 75 0
 149 0092 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccCQSwkI.s 			page 5


 150              		.cfi_endproc
 151              	.LFE111:
 153 0096 00BF     		.section	.text.dlt645_CalCS,"ax",%progbits
 154              		.align	2
 155              		.global	dlt645_CalCS
 156              		.thumb
 157              		.thumb_func
 159              	dlt645_CalCS:
 160              	.LFB113:
  76:../user/source/protocol.c **** 
  77:../user/source/protocol.c **** /********************************************************************
  78:../user/source/protocol.c **** * 功    能：查询应用层缓存的帧格式
  79:../user/source/protocol.c **** * 输    入：应用层缓存指针，数据长度
  80:../user/source/protocol.c **** * 输    出：规约类型枚举值
  81:../user/source/protocol.c **** *           
  82:../user/source/protocol.c **** * 编 写 人：
  83:../user/source/protocol.c **** * 编写日期：2018-9-9 08:01:18
  84:../user/source/protocol.c **** **********************************************************************/
  85:../user/source/protocol.c **** ProtocolDef GetProtocolType(uint8_t *pbuf, uint32_t len)
  86:../user/source/protocol.c **** {
  87:../user/source/protocol.c ****     ProtocolDef ptype = none;
  88:../user/source/protocol.c ****     //UINT16 uwframeLen;
  89:../user/source/protocol.c ****     //UINT32 nHCSPos;
  90:../user/source/protocol.c ****     //UINT32 nFCSPos;
  91:../user/source/protocol.c ****     //UINT16 uwhcs;
  92:../user/source/protocol.c ****     //UINT16 uwfcs;
  93:../user/source/protocol.c ****     //UINT16 SA_Len;
  94:../user/source/protocol.c **** 
  95:../user/source/protocol.c ****     uint8_t *pframe;
  96:../user/source/protocol.c ****     pframe = (uint8_t *)strchr((char *)pbuf, 0x68);
  97:../user/source/protocol.c **** 
  98:../user/source/protocol.c ****     if (pframe == NULL)
  99:../user/source/protocol.c ****         return none;
 100:../user/source/protocol.c ****     uint32_t dlt645_L = *(pframe + 9) + 12;
 101:../user/source/protocol.c ****     uint32_t dlt698_L = MAKE_WORD(*(pframe + 2) & 0x3F, *(pframe + 1)) + 2;
 102:../user/source/protocol.c **** 
 103:../user/source/protocol.c ****     /*8th byte==68*/
 104:../user/source/protocol.c ****     /*last byte== 16*/
 105:../user/source/protocol.c ****     /* CS correct*/
 106:../user/source/protocol.c ****     /*97-645 do not support autobaud*/
 107:../user/source/protocol.c ****     if (*(pframe + 7) == 0x68 &&
 108:../user/source/protocol.c ****         len >= dlt645_L &&
 109:../user/source/protocol.c ****         *(pframe + dlt645_L - 2) == dlt645_CalCS(pframe, dlt645_L - 2) &&
 110:../user/source/protocol.c ****         *(pframe + dlt645_L - 1) == 0x16)
 111:../user/source/protocol.c ****     {
 112:../user/source/protocol.c ****         ptype = dlt645;
 113:../user/source/protocol.c ****     }
 114:../user/source/protocol.c ****     /*last byte== 16*/
 115:../user/source/protocol.c ****     else if (*(pframe + dlt698_L - 1) == 0x16 &&
 116:../user/source/protocol.c ****              len >= dlt698_L)
 117:../user/source/protocol.c ****     {
 118:../user/source/protocol.c ****         /*SA地址字节数，0代表1个字节*/
 119:../user/source/protocol.c ****         //SA_Len = (*(pframe + 4) & 0x0F) + 2;
 120:../user/source/protocol.c ****         //jnHCSPos += SA_Len + 5;
 121:../user/source/protocol.c **** 
 122:../user/source/protocol.c ****         //帧头校验hcs
 123:../user/source/protocol.c ****         //uwhcs = PPPINITFCS16;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccCQSwkI.s 			page 6


 124:../user/source/protocol.c ****         //uwhcs = pppfcs16(uwhcs, pframe + 1, nHCSPos - 1);
 125:../user/source/protocol.c **** 
 126:../user/source/protocol.c ****         //if (uwhcs != MAKE_WORD(*(pframe + nHCSPos + 1), *(pframe + nHCSPos)))
 127:../user/source/protocol.c ****         //{
 128:../user/source/protocol.c ****         //   ptype = none;
 129:../user/source/protocol.c ****         //}
 130:../user/source/protocol.c **** 
 131:../user/source/protocol.c ****         //帧校验fcs
 132:../user/source/protocol.c ****         //nFCSPos = dlt698_L - 1;//-2
 133:../user/source/protocol.c ****         //uwfcs = PPPINITFCS16;
 134:../user/source/protocol.c ****         //uwfcs = pppfcs16(uwfcs, pframe + 1, nFCSPos - 1);
 135:../user/source/protocol.c ****         //uwfcs = pppfcs16(uwfcs, pframe + 1, dlt698_L - 4);
 136:../user/source/protocol.c **** 
 137:../user/source/protocol.c ****         //if (uwfcs != MAKE_WORD(*(pframe + nFCSPos + 1), *(pframe + nFCSPos)))
 138:../user/source/protocol.c ****         //{
 139:../user/source/protocol.c ****         //ptype = none;
 140:../user/source/protocol.c ****         //}
 141:../user/source/protocol.c ****         ptype = dlt698;
 142:../user/source/protocol.c ****     }
 143:../user/source/protocol.c ****     return ptype;
 144:../user/source/protocol.c **** }
 145:../user/source/protocol.c **** /********************************************************************
 146:../user/source/protocol.c **** * 功    能：dlt645_CS计算`
 147:../user/source/protocol.c **** * 输    入：帧结构指针
 148:../user/source/protocol.c **** * 输    出：CS值
 149:../user/source/protocol.c **** *           
 150:../user/source/protocol.c **** * 编 写 人：
 151:../user/source/protocol.c **** * 编写日期：2018-9-9 08:01:18
 152:../user/source/protocol.c **** **********************************************************************/
 153:../user/source/protocol.c **** uint8_t dlt645_CalCS(uint8_t *pframe, uint32_t cspos)
 154:../user/source/protocol.c **** {
 161              		.loc 1 154 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166              	.LVL25:
 167 0000 10B4     		push	{r4}
 168              	.LCFI1:
 169              		.cfi_def_cfa_offset 4
 170              		.cfi_offset 4, -4
 171              	.LVL26:
 155:../user/source/protocol.c ****     uint8_t *pbuf;
 156:../user/source/protocol.c ****     uint8_t CS = 0;
 157:../user/source/protocol.c ****     uint8_t i;
 158:../user/source/protocol.c **** 
 159:../user/source/protocol.c ****     pbuf = (uint8_t *)pframe;
 160:../user/source/protocol.c ****     //求取校验和
 161:../user/source/protocol.c ****     for (i = 0; i < cspos; i++)
 172              		.loc 1 161 0
 173 0002 0023     		movs	r3, #0
 156:../user/source/protocol.c ****     uint8_t i;
 174              		.loc 1 156 0
 175 0004 1A46     		mov	r2, r3
 176              		.loc 1 161 0
 177 0006 04E0     		b	.L9
 178              	.LVL27:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccCQSwkI.s 			page 7


 179              	.L10:
 162:../user/source/protocol.c ****     {
 163:../user/source/protocol.c ****         CS += *(pbuf + i);
 180              		.loc 1 163 0 discriminator 3
 181 0008 C45C     		ldrb	r4, [r0, r3]	@ zero_extendqisi2
 182 000a 2244     		add	r2, r2, r4
 183              	.LVL28:
 184 000c D2B2     		uxtb	r2, r2
 185              	.LVL29:
 161:../user/source/protocol.c ****     {
 186              		.loc 1 161 0 discriminator 3
 187 000e 0133     		adds	r3, r3, #1
 188              	.LVL30:
 189 0010 DBB2     		uxtb	r3, r3
 190              	.LVL31:
 191              	.L9:
 161:../user/source/protocol.c ****     {
 192              		.loc 1 161 0 is_stmt 0 discriminator 1
 193 0012 8B42     		cmp	r3, r1
 194 0014 F8D3     		bcc	.L10
 164:../user/source/protocol.c ****     }
 165:../user/source/protocol.c ****     return CS;
 166:../user/source/protocol.c **** }
 195              		.loc 1 166 0 is_stmt 1
 196 0016 1046     		mov	r0, r2
 197              	.LVL32:
 198 0018 5DF8044B 		ldr	r4, [sp], #4
 199              	.LCFI2:
 200              		.cfi_restore 4
 201              		.cfi_def_cfa_offset 0
 202 001c 7047     		bx	lr
 203              		.cfi_endproc
 204              	.LFE113:
 206 001e 00BF     		.section	.text.GetProtocolType,"ax",%progbits
 207              		.align	2
 208              		.global	GetProtocolType
 209              		.thumb
 210              		.thumb_func
 212              	GetProtocolType:
 213              	.LFB112:
  86:../user/source/protocol.c ****     ProtocolDef ptype = none;
 214              		.loc 1 86 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218              	.LVL33:
 219 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 220              	.LCFI3:
 221              		.cfi_def_cfa_offset 24
 222              		.cfi_offset 4, -24
 223              		.cfi_offset 5, -20
 224              		.cfi_offset 6, -16
 225              		.cfi_offset 7, -12
 226              		.cfi_offset 8, -8
 227              		.cfi_offset 14, -4
 228 0004 0F46     		mov	r7, r1
 229              	.LVL34:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccCQSwkI.s 			page 8


  96:../user/source/protocol.c **** 
 230              		.loc 1 96 0
 231 0006 6821     		movs	r1, #104
 232              	.LVL35:
 233 0008 FFF7FEFF 		bl	strchr
 234              	.LVL36:
  98:../user/source/protocol.c ****         return none;
 235              		.loc 1 98 0
 236 000c 10B3     		cbz	r0, .L15
 237 000e 0546     		mov	r5, r0
 100:../user/source/protocol.c ****     uint32_t dlt698_L = MAKE_WORD(*(pframe + 2) & 0x3F, *(pframe + 1)) + 2;
 238              		.loc 1 100 0
 239 0010 467A     		ldrb	r6, [r0, #9]	@ zero_extendqisi2
 240 0012 0C36     		adds	r6, r6, #12
 241              	.LVL37:
 101:../user/source/protocol.c **** 
 242              		.loc 1 101 0
 243 0014 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 244 0016 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 245 0018 2402     		lsls	r4, r4, #8
 246 001a 04F47C54 		and	r4, r4, #16128
 247 001e 1C43     		orrs	r4, r4, r3
 248 0020 0234     		adds	r4, r4, #2
 249              	.LVL38:
 107:../user/source/protocol.c ****         len >= dlt645_L &&
 250              		.loc 1 107 0
 251 0022 C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 252 0024 682B     		cmp	r3, #104
 253 0026 0CD1     		bne	.L14
 107:../user/source/protocol.c ****         len >= dlt645_L &&
 254              		.loc 1 107 0 is_stmt 0 discriminator 1
 255 0028 BE42     		cmp	r6, r7
 256 002a 0AD8     		bhi	.L14
 109:../user/source/protocol.c ****         *(pframe + dlt645_L - 1) == 0x16)
 257              		.loc 1 109 0 is_stmt 1
 258 002c B11E     		subs	r1, r6, #2
 259 002e 10F80180 		ldrb	r8, [r0, r1]	@ zero_extendqisi2
 260 0032 FFF7FEFF 		bl	dlt645_CalCS
 261              	.LVL39:
 108:../user/source/protocol.c ****         *(pframe + dlt645_L - 2) == dlt645_CalCS(pframe, dlt645_L - 2) &&
 262              		.loc 1 108 0
 263 0036 8045     		cmp	r8, r0
 264 0038 03D1     		bne	.L14
 110:../user/source/protocol.c ****     {
 265              		.loc 1 110 0
 266 003a 013E     		subs	r6, r6, #1
 267              	.LVL40:
 268 003c AB5D     		ldrb	r3, [r5, r6]	@ zero_extendqisi2
 109:../user/source/protocol.c ****         *(pframe + dlt645_L - 1) == 0x16)
 269              		.loc 1 109 0
 270 003e 162B     		cmp	r3, #22
 271 0040 0BD0     		beq	.L16
 272              	.LVL41:
 273              	.L14:
 115:../user/source/protocol.c ****              len >= dlt698_L)
 274              		.loc 1 115 0
 275 0042 631E     		subs	r3, r4, #1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccCQSwkI.s 			page 9


 276 0044 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 277 0046 162B     		cmp	r3, #22
 278 0048 0AD1     		bne	.L17
 115:../user/source/protocol.c ****              len >= dlt698_L)
 279              		.loc 1 115 0 is_stmt 0 discriminator 1
 280 004a BC42     		cmp	r4, r7
 281 004c 0BD9     		bls	.L18
  87:../user/source/protocol.c ****     //UINT16 uwframeLen;
 282              		.loc 1 87 0 is_stmt 1
 283 004e 0220     		movs	r0, #2
 284 0050 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 285              	.LVL42:
 286              	.L15:
  99:../user/source/protocol.c ****     uint32_t dlt645_L = *(pframe + 9) + 12;
 287              		.loc 1 99 0
 288 0054 0220     		movs	r0, #2
 289              	.LVL43:
 290 0056 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 291              	.LVL44:
 292              	.L16:
 112:../user/source/protocol.c ****     }
 293              		.loc 1 112 0
 294 005a 0020     		movs	r0, #0
 295 005c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 296              	.LVL45:
 297              	.L17:
  87:../user/source/protocol.c ****     //UINT16 uwframeLen;
 298              		.loc 1 87 0
 299 0060 0220     		movs	r0, #2
 300 0062 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 301              	.LVL46:
 302              	.L18:
 141:../user/source/protocol.c ****     }
 303              		.loc 1 141 0
 304 0066 0120     		movs	r0, #1
 144:../user/source/protocol.c **** /********************************************************************
 305              		.loc 1 144 0
 306 0068 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 307              		.cfi_endproc
 308              	.LFE112:
 310              		.section	.text.dwUartCopy,"ax",%progbits
 311              		.align	2
 312              		.global	dwUartCopy
 313              		.thumb
 314              		.thumb_func
 316              	dwUartCopy:
 317              	.LFB114:
 167:../user/source/protocol.c **** uint32_t dwUartCopy(UartDef *SrcUart, uint8_t *pdata, UartDef *DestUart)
 168:../user/source/protocol.c **** {
 318              		.loc 1 168 0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322              	.LVL47:
 323 0000 70B5     		push	{r4, r5, r6, lr}
 324              	.LCFI4:
 325              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccCQSwkI.s 			page 10


 326              		.cfi_offset 4, -16
 327              		.cfi_offset 5, -12
 328              		.cfi_offset 6, -8
 329              		.cfi_offset 14, -4
 330 0002 0E46     		mov	r6, r1
 331 0004 1546     		mov	r5, r2
 169:../user/source/protocol.c ****     uint32_t dwLen;
 170:../user/source/protocol.c ****     dwLen = Uart_Read(SrcUart, pdata, DRV_BUF_SIZE);
 332              		.loc 1 170 0
 333 0006 4FF47A72 		mov	r2, #1000
 334              	.LVL48:
 335 000a FFF7FEFF 		bl	Uart_Read
 336              	.LVL49:
 171:../user/source/protocol.c ****     if (dwLen == 0)
 337              		.loc 1 171 0
 338 000e 88B1     		cbz	r0, .L22
 339 0010 0446     		mov	r4, r0
 172:../user/source/protocol.c ****         return 0;
 173:../user/source/protocol.c ****     /*向下透传*/
 174:../user/source/protocol.c ****     //Uart_Write(DestUart, pdata, dwLen);
 175:../user/source/protocol.c ****     Uart_OnceWrite(DestUart, pdata, dwLen, TICKS_1000MS);
 340              		.loc 1 175 0
 341 0012 094B     		ldr	r3, .L24
 342 0014 1B68     		ldr	r3, [r3]
 343 0016 094A     		ldr	r2, .L24+4
 344 0018 A2FB0323 		umull	r2, r3, r2, r3
 345 001c 9B09     		lsrs	r3, r3, #6
 346 001e 4FF47A72 		mov	r2, #1000
 347 0022 02FB03F3 		mul	r3, r2, r3
 348 0026 0246     		mov	r2, r0
 349 0028 3146     		mov	r1, r6
 350 002a 2846     		mov	r0, r5
 351              	.LVL50:
 352 002c FFF7FEFF 		bl	Uart_OnceWrite
 353              	.LVL51:
 176:../user/source/protocol.c ****     return dwLen;
 354              		.loc 1 176 0
 355 0030 2046     		mov	r0, r4
 356 0032 70BD     		pop	{r4, r5, r6, pc}
 357              	.LVL52:
 358              	.L22:
 172:../user/source/protocol.c ****         return 0;
 359              		.loc 1 172 0
 360 0034 0020     		movs	r0, #0
 361              	.LVL53:
 177:../user/source/protocol.c **** }...
 362              		.loc 1 177 0
 363 0036 70BD     		pop	{r4, r5, r6, pc}
 364              	.LVL54:
 365              	.L25:
 366              		.align	2
 367              	.L24:
 368 0038 00000000 		.word	gSystickAccuracy
 369 003c D34D6210 		.word	274877907
 370              		.cfi_endproc
 371              	.LFE114:
 373              		.text
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccCQSwkI.s 			page 11


 374              	.Letext0:
 375              		.file 2 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\machine\\_defaul
 376              		.file 3 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\sys\\_stdint.h"
 377              		.file 4 "../cmsis/include/stm32f37x.h"
 378              		.file 5 "../user/include/BaseDef.h"
 379              		.file 6 "../user/include/uart.h"
 380              		.file 7 "../user/include/DLT698.h"
 381              		.file 8 "../user/include/protocol.h"
 382              		.file 9 "../cmsis/include/core_cm4.h"
 383              		.file 10 "../user/include/Time.h"
 384              		.file 11 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\string.h"
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccCQSwkI.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 protocol.c
C:\Users\strag\AppData\Local\Temp\ccCQSwkI.s:22     .text.pGetpFrame:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccCQSwkI.s:27     .text.pGetpFrame:00000000 pGetpFrame
C:\Users\strag\AppData\Local\Temp\ccCQSwkI.s:154    .text.dlt645_CalCS:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccCQSwkI.s:159    .text.dlt645_CalCS:00000000 dlt645_CalCS
C:\Users\strag\AppData\Local\Temp\ccCQSwkI.s:207    .text.GetProtocolType:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccCQSwkI.s:212    .text.GetProtocolType:00000000 GetProtocolType
C:\Users\strag\AppData\Local\Temp\ccCQSwkI.s:311    .text.dwUartCopy:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccCQSwkI.s:316    .text.dwUartCopy:00000000 dwUartCopy
C:\Users\strag\AppData\Local\Temp\ccCQSwkI.s:368    .text.dwUartCopy:00000038 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
strchr
pppfcs16
Uart_Read
Uart_OnceWrite
gSystickAccuracy
