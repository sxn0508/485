ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"DLT645.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.dwCheckFrame,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	dwCheckFrame:
  27              	.LFB112:
  28              		.file 1 "../user/source/DLT645.c"
   1:../user/source/DLT645.c **** #include "DLT645.h"
   2:../user/source/DLT645.c **** #include "Time.h"
   3:../user/source/DLT645.c **** #include "Flash.h"
   4:../user/source/DLT645.c **** 
   5:../user/source/DLT645.c **** /*´®¿ÚÇı¶¯»º´æ*/
   6:../user/source/DLT645.c **** static struct ucbuf Uart1_Rsvbuf, Uart1_Sndbuf, Uart3_Rsvbuf, Uart3_Sndbuf, Uart2_Rsvbuf, Uart2_Snd
   7:../user/source/DLT645.c **** /*Ó¦ÓÃ²ã´®¿Ú½á¹¹Ìå*/
   8:../user/source/DLT645.c **** static UartDef UartZD = {USART1, &Uart1_Rsvbuf, &Uart1_Sndbuf};
   9:../user/source/DLT645.c **** static UartDef UartDB = {USART3, &Uart3_Rsvbuf, &Uart3_Sndbuf};
  10:../user/source/DLT645.c **** static UartDef UartIR = {USART2, &Uart2_Rsvbuf, &Uart2_Sndbuf};
  11:../user/source/DLT645.c **** /*Ó¦ÓÃ²ã´®¿Ú½á¹¹ÌåÖ¸Õë*/
  12:../user/source/DLT645.c **** UartDef *pUartZD = &UartZD;
  13:../user/source/DLT645.c **** UartDef *pUartDB = &UartDB;
  14:../user/source/DLT645.c **** UartDef *pUartIR = &UartIR;
  15:../user/source/DLT645.c **** /*¹æÔ¼Ö¡»º´æ*/
  16:../user/source/DLT645.c **** uint8_t ucApp_Buf_DB2ZD[DATA_BUF_SIZE]; //µç±íÉÏĞĞÖ¡Ó¦ÓÃ»º´æ
  17:../user/source/DLT645.c **** uint8_t ucApp_Buf_ZD2DB[DATA_BUF_SIZE]; //ÖÕ¶ËÏÂĞĞÖ¡Ó¦ÓÃ»º´æ
  18:../user/source/DLT645.c **** uint8_t ucApp_Buf_INFR[DATA_BUF_SIZE];  //ºìÍâ¿ÚÓ¦ÓÃ»º´æ
  19:../user/source/DLT645.c **** /*
  20:../user/source/DLT645.c **** #define ENABLE_ESTATUS						//µç±í×´Ì¬×ÖĞŞ¸Ä¹¦ÄÜ 
  21:../user/source/DLT645.c **** #define ENABLE_CURRENT_DEVIATION			//µçÁ÷¸÷Ïà²îÖµĞŞ¸Ä¹¦ÄÜ
  22:../user/source/DLT645.c **** #define ENABLE_CURRENT_LIMIT				//µçÁ÷×î´óÖµĞŞ¸Ä¹¦ÄÜ
  23:../user/source/DLT645.c **** #define ENABLE_ENERGY_MODIFY				//ĞŞ¸ÄÕıÏòÓĞ¹¦
  24:../user/source/DLT645.c **** */
  25:../user/source/DLT645.c **** const DefDataIDHandle INFRDataID_Handle_List[] = {
  26:../user/source/DLT645.c ****     {{0X33, 0X37, 0X34, 0X35}, Get_VChange_State},       //À©³ä£ºµçÑ¹ĞŞ¸ÄÊ¹ÄÜ/½ûÄÜID_02010400,
  27:../user/source/DLT645.c ****     {{0X33, 0X39, 0X34, 0X35}, Query_Voltage_Limit},     //À©³ä£ºµçÑ¹ÏŞÖµ²éÑ¯ID_02010600,
  28:../user/source/DLT645.c ****     {{0X33, 0X3A, 0X34, 0X35}, Default_Reset},           //À©³ä£ºµçÑ¹ĞŞ¸Ä¹¦ÄÜ»Ö¸´³ö³§ÉèÖÃID_0201070
  29:../user/source/DLT645.c ****     {{0X33, 0X3B, 0X34, 0X35}, vVoltage_SetMaxValue},    //À©³ä£ºµçÑ¹ÉèÖÃºÏ¸ñÉÏÏŞ
  30:../user/source/DLT645.c ****     {{0X33, 0X3C, 0X34, 0X35}, vVoltage_SetMinValue},    //À©³ä£ºµçÑ¹ÉèÖÃºÏ¸ñÏÂÏŞ
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 2


  31:../user/source/DLT645.c ****     {{0X33, 0X3D, 0X34, 0X35}, vVoltage_SetMaxMaxValue}, //À©³ä£ºµçÑ¹ÉèÖÃĞŞ¸ÄÉÏÏŞ
  32:../user/source/DLT645.c ****     {{0X33, 0X3E, 0X34, 0X35}, vVoltage_SetMinMinValue}, //À©³ä£ºµçÑ¹ÉèÖÃĞŞ¸ÄÏÂÏŞ
  33:../user/source/DLT645.c **** #ifdef ENABLE_ENERGY_MODIFY
  34:../user/source/DLT645.c ****     {{0X33, 0X73, 0X34, 0X33}, vEnergy_Modify_AbleSet},   //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸ÄÊ¹ÄÜ/½ûÄÜID_000
  35:../user/source/DLT645.c ****     {{0X33, 0X74, 0X34, 0X33}, vEnergy_Modify_RaitoSet},  //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä±ÈÀıÉèÖÃID_0001
  36:../user/source/DLT645.c ****     {{0X33, 0X75, 0X34, 0X33}, vEnergy_Modify_Reset},     //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä»Ö¸´³ö³§ÉèÖÃID_
  37:../user/source/DLT645.c ****     {{0X33, 0X76, 0X34, 0X33}, vEnergy_Modify_ReadSet},   //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä¶ÁÈ¡Éè£ºÖÃ
  38:../user/source/DLT645.c ****     {{0X33, 0X77, 0X34, 0X33}, vEnergy_Modify_ReadValue}, //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä¶ÁÈ¡Éè£ºÖÃ
  39:../user/source/DLT645.c **** #endif
  40:../user/source/DLT645.c **** /*µçÁ÷ÖØ¹ıÔØ*/
  41:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
  42:../user/source/DLT645.c ****     {{0X33, 0X37, 0X35, 0X35}, vCurrent_Limit_Set},                    //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:µ
  43:../user/source/DLT645.c ****     {{0X33, 0X38, 0X35, 0X35}, vCurrent_Limit_ReadSet},                //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:µ
  44:../user/source/DLT645.c ****     {{0X33, 0X39, 0X35, 0X35}, vCurrent_CTRatio_Set},                  //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:¶
  45:../user/source/DLT645.c ****     {{0X33, 0X3A, 0X35, 0X35}, vCurrent_CTRatio_ReadSet},              //À©³ä£º¶ÁÈ¡µçÁ÷ÖØ¹ıÔØ²ÎÊı:¶
  46:../user/source/DLT645.c ****     {{0X33, 0X3B, 0X35, 0X35}, vCurrent_TransFormer_Capacity_ReadSet}, //À©³ä£º¶ÁÈ¡µçÁ÷ÖØ¹ıÔØ²ÎÊı:±
  47:../user/source/DLT645.c **** #endif
  48:../user/source/DLT645.c ****     {{0X32, 0X32, 0X32, 0X32}, vRead_Version}, //À©³ä£º¶ÁÈ¡³ÌĞò°æ±¾
  49:../user/source/DLT645.c **** };
  50:../user/source/DLT645.c **** const DefDataIDHandle DBDataID_Handle_List[] = {
  51:../user/source/DLT645.c ****     {{0X33, 0X34, 0X34, 0X35}, vVoltageHandle}, //AÏàµçÑ¹ID_02010100,
  52:../user/source/DLT645.c ****     {{0X33, 0X35, 0X34, 0X35}, vVoltageHandle}, //BÏàµçÑ¹ID_02010200,
  53:../user/source/DLT645.c ****     {{0X33, 0X36, 0X34, 0X35}, vVoltageHandle}, //CÏàµçÑ¹ID_02010300,
  54:../user/source/DLT645.c ****     {{0X33, 0X32, 0X34, 0X35}, vVoltageHandle}, //µçÑ¹Êı¾İ¿éID_0201FF00,
  55:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_DEVIATION
  56:../user/source/DLT645.c ****     {{0X33, 0X34, 0X35, 0X35}, vCurrent_Modify}, //AÏàµçÁ÷ID_02020100,
  57:../user/source/DLT645.c ****     {{0X33, 0X35, 0X35, 0X35}, vCurrent_Modify}, //BÏàµçÁ÷ID_02020200,
  58:../user/source/DLT645.c ****     {{0X33, 0X36, 0X35, 0X35}, vCurrent_Modify}, //CÏàµçÁ÷ID_02020300,
  59:../user/source/DLT645.c ****     {{0X33, 0X32, 0X35, 0X35}, vCurrent_Modify}, //µçÁ÷Êı¾İ¿éID_0202FF00,
  60:../user/source/DLT645.c **** #else
  61:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
  62:../user/source/DLT645.c ****     {{0X33, 0X34, 0X35, 0X35}, vCurrent_Limit_Modify}, //AÏàµçÁ÷ID_02020100,
  63:../user/source/DLT645.c ****     {{0X33, 0X35, 0X35, 0X35}, vCurrent_Limit_Modify}, //BÏàµçÁ÷ID_02020200,
  64:../user/source/DLT645.c ****     {{0X33, 0X36, 0X35, 0X35}, vCurrent_Limit_Modify}, //CÏàµçÁ÷ID_02020300,
  65:../user/source/DLT645.c ****     {{0X33, 0X32, 0X35, 0X35}, vCurrent_Limit_Modify}, //µçÁ÷Êı¾İ¿éID_0202FF00,
  66:../user/source/DLT645.c **** #endif
  67:../user/source/DLT645.c **** #endif
  68:../user/source/DLT645.c ****     {{0X37, 0X38, 0X33, 0X38}, Estatus_Modify_CurrentEvent}, //µç±íÔËĞĞ×´Ì¬×Ö4ID_04000504,
  69:../user/source/DLT645.c ****     {{0X38, 0X38, 0X33, 0X38}, Estatus_Modify_CurrentEvent}, //µç±íÔËĞĞ×´Ì¬×Ö5ID_04000505,
  70:../user/source/DLT645.c ****     {{0X39, 0X38, 0X33, 0X38}, Estatus_Modify_CurrentEvent}, //µç±íÔËĞĞ×´Ì¬×Ö6ID_04000506,
  71:../user/source/DLT645.c ****     {{0X3A, 0X38, 0X33, 0X38}, Estatus_Modify_CurrentEvent}, //µç±íÔËĞĞ×´Ì¬×Ö7ID_04000507,
  72:../user/source/DLT645.c ****     {{0X32, 0X38, 0X33, 0X38}, Estatus_Modify_CurrentEvent}, //µç±íÔËĞĞ×´Ì¬×ÖÊı¾İ¿éID_040005FF,
  73:../user/source/DLT645.c ****     {{0X33, 0X33, 0X34, 0X33}, vNowEnergy_Modifier},         //µ±Ç°ÕıÏòÓĞ¹¦×ÜµçÄÜID_00010000,
  74:../user/source/DLT645.c ****     {{0X33, 0X34, 0X34, 0X33}, vNowEnergy_Modifier},         //µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜID_00010100,
  75:../user/source/DLT645.c ****     {{0X33, 0X35, 0X34, 0X33}, vNowEnergy_Modifier},         //µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ2µçÄÜID_00010200,
  76:../user/source/DLT645.c ****     {{0X33, 0X36, 0X34, 0X33}, vNowEnergy_Modifier},         //µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ3µçÄÜID_00010300,
  77:../user/source/DLT645.c ****     {{0X33, 0X37, 0X34, 0X33}, vNowEnergy_Modifier},         //µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ4µçÄÜID_00010400,
  78:../user/source/DLT645.c ****     {{0X33, 0X32, 0X34, 0X33}, vNowEnergy_Modifier},         //µ±Ç°ÕıÏòÓĞ¹¦µçÄÜÊı¾İ¿éID_0001FF00,
  79:../user/source/DLT645.c ****     {{0X33, 0X33, 0X48, 0X33}, vNowEnergy_Modifier},         //µ±Ç°AÏàÕıÏòÓĞ¹¦ID_00150000,
  80:../user/source/DLT645.c ****     {{0X33, 0X33, 0X5C, 0X33}, vNowEnergy_Modifier},         //µ±Ç°BÏàÕıÏòÓĞ¹¦ID_00290000,
  81:../user/source/DLT645.c ****     {{0X33, 0X33, 0X70, 0X33}, vNowEnergy_Modifier},         //µ±Ç°CÏàÕıÏòÓĞ¹¦ID_003D0000,
  82:../user/source/DLT645.c ****     {{0X34, 0X34, 0X39, 0X38}, vDayfrozen_Modifier},         //ÉÏ1ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£©
  83:../user/source/DLT645.c ****     /*{{0X35, 0X34, 0X39, 0X38}, vDayfrozen_Modifier},*/     //ÉÏ2ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£©
  84:../user/source/DLT645.c ****     /*{{0X36, 0X34, 0X39, 0X38}, vDayfrozen_Modifier},*/     //ÉÏ3ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£©
  85:../user/source/DLT645.c ****     {{0X34, 0X33, 0X34, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦×ÜµçÄÜID_00010001,
  86:../user/source/DLT645.c ****     {{0X34, 0X34, 0X34, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜID_0001010
  87:../user/source/DLT645.c ****     {{0X34, 0X35, 0X34, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜ ID_000102
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 3


  88:../user/source/DLT645.c ****     {{0X34, 0X36, 0X34, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜID_0001030
  89:../user/source/DLT645.c ****     {{0X34, 0X37, 0X34, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜID_0001040
  90:../user/source/DLT645.c ****     {{0X34, 0X32, 0X34, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦µçÄÜÊı¾İ¿éID_0001FF
  91:../user/source/DLT645.c ****     {{0X34, 0X33, 0X48, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕAÏàÕıÏòÓĞ¹¦µçÄÜID_00150001,
  92:../user/source/DLT645.c ****     {{0X34, 0X33, 0X5C, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕBÏàÕıÏòÓĞ¹¦µçÄÜID_00290001,
  93:../user/source/DLT645.c ****     {{0X34, 0X33, 0X70, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕCÏàÕıÏòÓĞ¹¦µçÄÜID_003D0001,
  94:../user/source/DLT645.c ****     {{0X33, 0X37, 0X34, 0X35}, Get_VChange_State},           //À©³ä£ºµçÑ¹ĞŞ¸ÄÊ¹ÄÜ/½ûÄÜID_02010400,
  95:../user/source/DLT645.c ****     {{0X33, 0X38, 0X34, 0X35}, Set_Voltage_Limit},           //À©³ä£ºµçÑ¹ÏŞÖµÉèÖÃID_02010500,
  96:../user/source/DLT645.c ****     {{0X33, 0X39, 0X34, 0X35}, Query_Voltage_Limit},         //À©³ä£ºµçÑ¹ÏŞÖµ²éÑ¯ID_02010600,
  97:../user/source/DLT645.c ****     {{0X33, 0X3A, 0X34, 0X35}, Default_Reset},               //À©³ä£ºµçÑ¹ĞŞ¸Ä¹¦ÄÜ»Ö¸´³ö³§ÉèÖÃID_020
  98:../user/source/DLT645.c **** 
  99:../user/source/DLT645.c ****     /*µçÁ÷ÖØ¹ıÔØ*/
 100:../user/source/DLT645.c ****     {{0X33, 0X37, 0X35, 0X35}, vCurrent_Limit_Set},                    //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:µ
 101:../user/source/DLT645.c ****     {{0X33, 0X38, 0X35, 0X35}, vCurrent_Limit_ReadSet},                //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:µ
 102:../user/source/DLT645.c ****     {{0X33, 0X39, 0X35, 0X35}, vCurrent_CTRatio_Set},                  //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:¶
 103:../user/source/DLT645.c ****     {{0X33, 0X3A, 0X35, 0X35}, vCurrent_CTRatio_ReadSet},              //À©³ä£º¶ÁÈ¡µçÁ÷ÖØ¹ıÔØ²ÎÊı:¶
 104:../user/source/DLT645.c ****     {{0X33, 0X3B, 0X35, 0X35}, vCurrent_TransFormer_Capacity_ReadSet}, //À©³ä£º¶ÁÈ¡µçÁ÷ÖØ¹ıÔØ²ÎÊı:±
 105:../user/source/DLT645.c **** 
 106:../user/source/DLT645.c ****     {{0X33, 0X73, 0X34, 0X33}, vEnergy_Modify_AbleSet},   //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸ÄÊ¹ÄÜ/½ûÄÜID_000
 107:../user/source/DLT645.c ****     {{0X33, 0X74, 0X34, 0X33}, vEnergy_Modify_RaitoSet},  //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä±ÈÀıÉèÖÃID_0001
 108:../user/source/DLT645.c ****     {{0X33, 0X75, 0X34, 0X33}, vEnergy_Modify_Reset},     //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿»Ø¸´³ö³§ÉèÖÃID_0001
 109:../user/source/DLT645.c ****     {{0X33, 0X76, 0X34, 0X33}, vEnergy_Modify_ReadSet},   //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä¶ÁÈ¡ÉèÖÃ
 110:../user/source/DLT645.c ****     {{0X33, 0X77, 0X34, 0X33}, vEnergy_Modify_ReadValue}, //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿¶ÁÈ¡´æ´¢µÄÕæÊµÖµºÍĞ
 111:../user/source/DLT645.c ****     /*4ºÅ²¹ÒÅ¸ººÉÇúÏßÁ¬Ğø³­¶Á²¿·ÖÖĞµÄµçÑ¹ÇúÏß¡¢µçÁ÷ÇúÏßĞŞ¸Ä,2018Äê8ÔÂ7ÈÕ20:53:4£º0*/
 112:../user/source/DLT645.c ****     {{0X33, 0X34, 0X43, 0X39}, vLoadProfile_Voltage_Modify}, //AÏàµçÑ¹ÇúÏßÁ¬Ğø³­¶ÁID_06100101,
 113:../user/source/DLT645.c ****     {{0X34, 0X34, 0X43, 0X39}, vLoadProfile_Voltage_Modify}, //BµçÑ¹Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_06100102,
 114:../user/source/DLT645.c ****     {{0X35, 0X34, 0X43, 0X39}, vLoadProfile_Voltage_Modify}, //CµçÑ¹Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_06100103,
 115:../user/source/DLT645.c ****     {{0X32, 0X34, 0X43, 0X39}, vLoadProfile_Voltage_Modify}, //µçÑ¹Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_061001FF,
 116:../user/source/DLT645.c ****     {{0X33, 0X35, 0X43, 0X39}, vLoadProfile_Current_Modify}, //AÏàµçÁ÷ÇúÏßÁ¬Ğø³­¶ÁID_06100201,
 117:../user/source/DLT645.c ****     {{0X34, 0X35, 0X43, 0X39}, vLoadProfile_Current_Modify}, //BµçÁ÷Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_06100202,
 118:../user/source/DLT645.c ****     {{0X35, 0X35, 0X43, 0X39}, vLoadProfile_Current_Modify}, //CµçÁ÷Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_06100203,
 119:../user/source/DLT645.c ****     {{0X32, 0X35, 0X43, 0X39}, vLoadProfile_Current_Modify}, //µçÁ÷Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_061002FF,
 120:../user/source/DLT645.c ****     {{0X32, 0X32, 0X32, 0X32}, vRead_Version},               //À©³ä£º¶ÁÈ¡³ÌĞò°æ±¾
 121:../user/source/DLT645.c **** };
 122:../user/source/DLT645.c **** 
 123:../user/source/DLT645.c **** FrameHandleStatus Voltage_Frame_Status;
 124:../user/source/DLT645.c **** uint8_t ucRcvStatus = 0;
 125:../user/source/DLT645.c **** uint8_t uc645DataDomainLength = 0;                 //645Ö¡Êı¾İÓò³¤¶È
 126:../user/source/DLT645.c **** uint8_t Voltage_Change_State = Voltage_NOChange;   //µçÑ¹ÊÇ·ñĞŞ¸Ä±êÖ¾Î»£¬Ä¬ÈÏĞŞ¸Ä×´Ì¬
 127:../user/source/DLT645.c **** uint8_t Dayfrozen_Change_State = DAYFROZEN_CHANGE; //µçÁ¿ÊÇ·ñĞŞ¸Ä£¬Ä¬ÈÏĞŞ¸Ä
 128:../user/source/DLT645.c **** uint8_t ucDayfrozen_Modify_Ratio;                  //µçÁ¿µ÷Õû±ÈÀı
 129:../user/source/DLT645.c **** int Voltage_MAX;                                   //µçÑ¹ºÏ¸ñÉÏÏŞ
 130:../user/source/DLT645.c **** int Voltage_MIN;                                   //µçÑ¹ºÏ¸ñÏÂÏŞ
 131:../user/source/DLT645.c **** int A_Voltage = WORK_VOLTAGE;                      //×îºóÒ»´ÎĞŞ¸ÄºóµÄAÏàµçÑ¹Öµ
 132:../user/source/DLT645.c **** int B_Voltage = WORK_VOLTAGE;                      //×îºóÒ»´ÎĞŞ¸ÄºóµÄBÏàµçÑ¹Öµ
 133:../user/source/DLT645.c **** int C_Voltage = WORK_VOLTAGE;                      //×îºóÒ»´ÎĞŞ¸ÄºóµÄCÏàµçÑ¹Öµ
 134:../user/source/DLT645.c **** CURRENT Acurrent = {0, 0, false};
 135:../user/source/DLT645.c **** CURRENT Bcurrent = {0, 0, false};
 136:../user/source/DLT645.c **** CURRENT Ccurrent = {0, 0, false};
 137:../user/source/DLT645.c **** 
 138:../user/source/DLT645.c **** /*±äÑ¹Æ÷½á¹¹Ìå¶¨Òå*/
 139:../user/source/DLT645.c **** TransFormer_TypeDef TransFormer;
 140:../user/source/DLT645.c **** 
 141:../user/source/DLT645.c **** /*µçÁ÷ÖØÔØ¡¢¹ıÔØµ÷ÕûÏà¹Ø²ÎÊı
 142:../user/source/DLT645.c **** #ifdef	  TRANSFORMER_CAPACITY_50KVA
 143:../user/source/DLT645.c **** 	#define TransFormer.CT2_CurrentLimit					2700						//50KVA±äÑ¹Æ÷µÄCT¶ş´Î²àÈıÏàµçÁ÷ºÍµÄ×î´óÖµ£¬À©´ó
 144:../user/source/DLT645.c **** #endif
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 4


 145:../user/source/DLT645.c **** #ifdef	  TRANSFORMER_CAPACITY_100KVA
 146:../user/source/DLT645.c **** 	#define TransFormer.CT2_CurrentLimit					5400						//100KVA±äÑ¹Æ÷µÄCT¶ş´Î²àÈıÏàµçÁ÷ºÍµÄ×î´óÖµ£¬À©´
 147:../user/source/DLT645.c **** #endif
 148:../user/source/DLT645.c **** #ifdef	  TRANSFORMER_CAPACITY_200KVA
 149:../user/source/DLT645.c **** 	#define TransFormer.CT2_CurrentLimit					10800						//200KVA±äÑ¹Æ÷µÄCT¶ş´Î²àÈıÏàµçÁ÷ºÍµÄ×î´óÖµ£¬À©
 150:../user/source/DLT645.c **** #endif
 151:../user/source/DLT645.c **** #ifdef	  TRANSFORMER_CAPACITY_400KVA
 152:../user/source/DLT645.c **** 	#define TransFormer.CT2_CurrentLimit					21600						//400KVA±äÑ¹Æ÷µÄCT¶ş´Î²àÈıÏàµçÁ÷ºÍµÄ×î´óÖµ£¬À©
 153:../user/source/DLT645.c **** #endif
 154:../user/source/DLT645.c **** */
 155:../user/source/DLT645.c **** 
 156:../user/source/DLT645.c **** /********************************************************************
 157:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½«±¨ÎÄ´æµ½Ó¦ÓÃ²ã»º´æ£¬²¢ÅĞ¶ÏÊÇ·ñÎª645Ö¡
 158:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë£¬Çı¶¯²ã»º´æÖ¸Õë
 159:../user/source/DLT645.c ****  * Êä    ³ö£ºÈç¹û¶¼ºÏ·¨·µ»Øtrue
 160:../user/source/DLT645.c ****  ·ñÔò·µ»Øfalse
 161:../user/source/DLT645.c ****  *           
 162:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 163:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 164:../user/source/DLT645.c ****  **********************************************************************/
 165:../user/source/DLT645.c **** 
 166:../user/source/DLT645.c **** bool blRecvFrame(struct ucbuf *ucDrv_Buf, uint8_t *ucdata_buf)
 167:../user/source/DLT645.c **** {
 168:../user/source/DLT645.c ****     /*ÊÕÖ¡×´Ì¬*/
 169:../user/source/DLT645.c ****     switch (ucRcvStatus)
 170:../user/source/DLT645.c ****     {
 171:../user/source/DLT645.c ****     /*Ö¡Í·68*/
 172:../user/source/DLT645.c ****     case SEARCH_SOH:
 173:../user/source/DLT645.c ****     {
 174:../user/source/DLT645.c ****         /*Î´¶Áµ½Ö¸¶¨×Ö½ÚÊı£¬Ìø³ö·ÖÖ§£¬·µ»Øfalse*/
 175:../user/source/DLT645.c ****         if (ucDrv_Buf_GetBytes(ucDrv_Buf, ucdata_buf, 1) == false)
 176:../user/source/DLT645.c ****         {
 177:../user/source/DLT645.c ****             break;
 178:../user/source/DLT645.c ****         }
 179:../user/source/DLT645.c ****         /*¶Áµ½Ò»¸ö×Ö½Ú*/
 180:../user/source/DLT645.c ****         else
 181:../user/source/DLT645.c ****         {
 182:../user/source/DLT645.c ****             /*Ö¡Í·²»ºÏ·¨£¬·µ»Øfalse*/
 183:../user/source/DLT645.c ****             if (*(ucdata_buf + 0) != 0X68)
 184:../user/source/DLT645.c ****             {
 185:../user/source/DLT645.c ****                 break;
 186:../user/source/DLT645.c ****             }
 187:../user/source/DLT645.c ****             else
 188:../user/source/DLT645.c ****             {
 189:../user/source/DLT645.c ****                 /*Ö¡Í·ºÏ·¨£¬ÊÕÖ¡×´¸ÄÎªRCV_DATA1*/
 190:../user/source/DLT645.c ****                 ucRcvStatus = RCV_DATA1;
 191:../user/source/DLT645.c ****                 blWordsCounterStatus = true;
 192:../user/source/DLT645.c ****             }
 193:../user/source/DLT645.c ****         }
 194:../user/source/DLT645.c ****     }
 195:../user/source/DLT645.c ****     case RCV_DATA1:
 196:../user/source/DLT645.c ****     {
 197:../user/source/DLT645.c ****         /*¶Á9¸ö×Ö½ÚÊ§°Ü£¬Ìø³ö·ÖÖ§£¬·µ»Øfalse*/
 198:../user/source/DLT645.c ****         if (ucDrv_Buf_GetBytes(ucDrv_Buf, ucdata_buf + 1, 9) == false)
 199:../user/source/DLT645.c ****         {
 200:../user/source/DLT645.c ****             /*DLT645_WORDS_DELAY_MAX£¬×Ö½Ú½ÓÊÕ³¬Ê±*/
 201:../user/source/DLT645.c ****             if (blTime2_Update(uwTime2WordsCounter, DLT645_WORDS_DELAY_MAX))
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 5


 202:../user/source/DLT645.c ****             {
 203:../user/source/DLT645.c ****                 /*³¬Ê±ÔòÖØĞÂÅĞ¶ÏÖ¡Í·68£¬²»³¬Ê±Ôò¼ÌĞøÕÒ³¤¶È£»*/
 204:../user/source/DLT645.c ****                 ucRcvStatus = SEARCH_SOH;
 205:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 206:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 207:../user/source/DLT645.c ****             }
 208:../user/source/DLT645.c ****             break;
 209:../user/source/DLT645.c ****         }
 210:../user/source/DLT645.c ****         else //¶Á68Ö®ºó9¸ö×Ö½Ú³É¹¦
 211:../user/source/DLT645.c ****         {
 212:../user/source/DLT645.c ****             if ((*(ucdata_buf + 7) != 0X68) || ((*(ucdata_buf + 9) + 12) >= 255))
 213:../user/source/DLT645.c ****             {
 214:../user/source/DLT645.c ****                 ucRcvStatus = SEARCH_SOH; //µÚÆß¸ö×Ö½Ú²»Îª68 ,Ìø³ö£¬·µ»Øfalse£¬ÖØĞÂÕÒ68
 215:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 216:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 217:../user/source/DLT645.c ****                 break;
 218:../user/source/DLT645.c ****             }
 219:../user/source/DLT645.c ****             else
 220:../user/source/DLT645.c ****             {                                              //µÚÆß¸ö×Ö½ÚÊÇ68
 221:../user/source/DLT645.c ****                 uc645DataDomainLength = *(ucdata_buf + 9); //¶Á³ö645Ö¡³¤¶ÈL
 222:../user/source/DLT645.c ****                 ucRcvStatus = RCV_DATA2;                   //Ö¸ÏòÏÂÒ»²¿·Ö
 223:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 224:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 225:../user/source/DLT645.c ****                 blWordsCounterStatus = true;
 226:../user/source/DLT645.c ****             }
 227:../user/source/DLT645.c ****         }
 228:../user/source/DLT645.c ****     }
 229:../user/source/DLT645.c ****     case RCV_DATA2:
 230:../user/source/DLT645.c ****     {
 231:../user/source/DLT645.c ****         if (ucDrv_Buf_GetBytes(ucDrv_Buf, ucdata_buf + 10, uc645DataDomainLength + 2) == false)
 232:../user/source/DLT645.c ****         {                                                                    //¶ÁºóĞø×Ö½ÚÊ§°Ü£¬Ìø³ö
 233:../user/source/DLT645.c ****             if (blTime2_Update(uwTime2WordsCounter, DLT645_WORDS_DELAY_MAX)) //DLT645_WORDS_DELAY_M
 234:../user/source/DLT645.c ****             {                                                                //Èç¹û³¬Ê±£¬ÔòÖØĞÂÕÒ68
 235:../user/source/DLT645.c ****                 ucRcvStatus = SEARCH_SOH;
 236:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 237:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 238:../user/source/DLT645.c ****             }
 239:../user/source/DLT645.c ****             break;
 240:../user/source/DLT645.c ****         }
 241:../user/source/DLT645.c ****         else //¶Á³öÖ¸¶¨×Ö½ÚÊıµÄÒ»Ö¡
 242:../user/source/DLT645.c ****         {
 243:../user/source/DLT645.c ****             ucRcvStatus = SEARCH_SOH; //×´Ì¬¸ÄÎª²éÕÒ68£»
 244:../user/source/DLT645.c ****             blWordsCounterStatus = false;
 245:../user/source/DLT645.c ****             uwTime2WordsCounter = 0;
 246:../user/source/DLT645.c ****             if (dwCheckFrame(ucdata_buf) != OK_1)
 247:../user/source/DLT645.c ****             {
 248:../user/source/DLT645.c ****                 //	if (blTime2_Update(uwTime2WordsCounter,DLT645_WORDS_DELAY_MAX)) //DLT645_WORDS_D
 249:../user/source/DLT645.c ****                 //{ //Èç¹û³¬Ê±£¬ÔòÖØĞÂÕÒ68£¬·ñÔòÖØĞÂ½ÓÊÕºóĞø×Ö½Ú£»Ìø³ö·ÖÖ§
 250:../user/source/DLT645.c ****                 //ucRcvStatus = SEARCH_SOH;
 251:../user/source/DLT645.c ****                 //}//Ö¡Ğ£Ñé´íÎó
 252:../user/source/DLT645.c ****                 return false;
 253:../user/source/DLT645.c ****             }
 254:../user/source/DLT645.c ****             else
 255:../user/source/DLT645.c ****             {
 256:../user/source/DLT645.c ****                 //ucRcvStatus = SEARCH_SOH;//×´Ì¬¸ÄÎª²éÕÒ68£»
 257:../user/source/DLT645.c ****                 //blWordsCounterStatus = false;
 258:../user/source/DLT645.c ****                 return true; //ÅĞ¶ÏÊÕÖ¡ÊÇ·ñºÏ¸ñ£¬ºÏ¸ñ·µ»Øtrue£¬·ñÔò·µ»Øfalse
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 6


 259:../user/source/DLT645.c ****             }
 260:../user/source/DLT645.c ****         }
 261:../user/source/DLT645.c ****     }
 262:../user/source/DLT645.c ****     break;
 263:../user/source/DLT645.c ****     default:
 264:../user/source/DLT645.c ****         break;
 265:../user/source/DLT645.c ****     }
 266:../user/source/DLT645.c ****     return false;
 267:../user/source/DLT645.c **** }
 268:../user/source/DLT645.c **** 
 269:../user/source/DLT645.c **** /********************************************************************
 270:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÅĞ¶ÏÖ¡µÄĞ£ÑéºÍ¡¢½áÊø×Ö½ÚÊÇ·ñºÏ·¨
 271:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 272:../user/source/DLT645.c ****  * Êä    ³ö£ºÈç¹û¶¼ºÏ·¨·µ»Øtrue
 273:../user/source/DLT645.c ****  ·ñÔò·µ»Øfalse
 274:../user/source/DLT645.c ****  *           
 275:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 276:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 277:../user/source/DLT645.c ****  **********************************************************************/
 278:../user/source/DLT645.c **** STATUS dwCheckFrame(uint8_t *pucBuffer)
 279:../user/source/DLT645.c **** {
  29              		.loc 1 279 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35 0000 10B4     		push	{r4}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 4, -4
  39              	.LVL1:
 280:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
 281:../user/source/DLT645.c ****     uint8_t i;
 282:../user/source/DLT645.c ****     //ÇóÈ¡Ğ£ÑéºÍ
 283:../user/source/DLT645.c ****     for (i = 0; i < uc645DataDomainLength + 10; i++)
  40              		.loc 1 283 0
  41 0002 0023     		movs	r3, #0
 280:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
  42              		.loc 1 280 0
  43 0004 1A46     		mov	r2, r3
  44              		.loc 1 283 0
  45 0006 04E0     		b	.L2
  46              	.LVL2:
  47              	.L3:
 284:../user/source/DLT645.c ****     {
 285:../user/source/DLT645.c ****         ucCheckData += pucBuffer[i];
  48              		.loc 1 285 0 discriminator 3
  49 0008 C45C     		ldrb	r4, [r0, r3]	@ zero_extendqisi2
  50 000a 2244     		add	r2, r2, r4
  51              	.LVL3:
  52 000c D2B2     		uxtb	r2, r2
  53              	.LVL4:
 283:../user/source/DLT645.c ****     {
  54              		.loc 1 283 0 discriminator 3
  55 000e 0133     		adds	r3, r3, #1
  56              	.LVL5:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 7


  57 0010 DBB2     		uxtb	r3, r3
  58              	.LVL6:
  59              	.L2:
 283:../user/source/DLT645.c ****     {
  60              		.loc 1 283 0 is_stmt 0 discriminator 1
  61 0012 0C4C     		ldr	r4, .L8
  62 0014 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
  63 0016 01F10A04 		add	r4, r1, #10
  64 001a A342     		cmp	r3, r4
  65 001c F4DB     		blt	.L3
 286:../user/source/DLT645.c ****     }
 287:../user/source/DLT645.c ****     //ÅĞ¶ÏĞ£ÑéºÍºÍ½áÊø·û
 288:../user/source/DLT645.c ****     if ((ucCheckData == pucBuffer[uc645DataDomainLength + 10]) &&
  66              		.loc 1 288 0 is_stmt 1
  67 001e 4318     		adds	r3, r0, r1
  68              	.LVL7:
  69 0020 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
  70 0022 9A42     		cmp	r2, r3
  71 0024 06D1     		bne	.L5
 289:../user/source/DLT645.c ****         (pucBuffer[uc645DataDomainLength + 11] == 0x16))
  72              		.loc 1 289 0 discriminator 1
  73 0026 0144     		add	r1, r1, r0
  74 0028 CB7A     		ldrb	r3, [r1, #11]	@ zero_extendqisi2
 288:../user/source/DLT645.c ****         (pucBuffer[uc645DataDomainLength + 11] == 0x16))
  75              		.loc 1 288 0 discriminator 1
  76 002a 162B     		cmp	r3, #22
  77 002c 05D0     		beq	.L6
 290:../user/source/DLT645.c ****     {
 291:../user/source/DLT645.c ****         return OK_1;
 292:../user/source/DLT645.c ****     }
 293:../user/source/DLT645.c ****     else
 294:../user/source/DLT645.c ****     {
 295:../user/source/DLT645.c ****         return ERROR_1;
  78              		.loc 1 295 0
  79 002e 4FF0FF30 		mov	r0, #-1
  80              	.LVL8:
  81 0032 03E0     		b	.L4
  82              	.LVL9:
  83              	.L5:
  84 0034 4FF0FF30 		mov	r0, #-1
  85              	.LVL10:
  86 0038 00E0     		b	.L4
  87              	.LVL11:
  88              	.L6:
 291:../user/source/DLT645.c ****     }
  89              		.loc 1 291 0
  90 003a 0020     		movs	r0, #0
  91              	.LVL12:
  92              	.L4:
 296:../user/source/DLT645.c ****     }
 297:../user/source/DLT645.c **** }
  93              		.loc 1 297 0
  94 003c 5DF8044B 		ldr	r4, [sp], #4
  95              	.LCFI1:
  96              		.cfi_restore 4
  97              		.cfi_def_cfa_offset 0
  98 0040 7047     		bx	lr
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 8


  99              	.L9:
 100 0042 00BF     		.align	2
 101              	.L8:
 102 0044 00000000 		.word	.LANCHOR0
 103              		.cfi_endproc
 104              	.LFE112:
 106              		.section	.text.BCD_Verity,"ax",%progbits
 107              		.align	2
 108              		.thumb
 109              		.thumb_func
 111              	BCD_Verity:
 112              	.LFB122:
 298:../user/source/DLT645.c **** 
 299:../user/source/DLT645.c **** /********************************************************************
 300:../user/source/DLT645.c ****  * ¹¦ ÄÜ£ºµç±í£º²àÊÕÖ¡Êı¾İ±êÊ¶·ÖÎö´¦Àí
 301:../user/source/DLT645.c ****  * Êä Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 302:../user/source/DLT645.c ****  * Êä ³ö£ºÊı¾İ±êÊ¶
 303:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 304:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018 .5.8 *
 305:../user/source/DLT645.c ****  *********************************************************************/
 306:../user/source/DLT645.c **** void vDBDataID_Handle(uint8_t *pucBuffer)
 307:../user/source/DLT645.c **** {
 308:../user/source/DLT645.c ****     uint8_t i;
 309:../user/source/DLT645.c ****     uint16_t idcount;
 310:../user/source/DLT645.c ****     idcount = sizeof(DBDataID_Handle_List) / sizeof(DBDataID_Handle_List[0]);
 311:../user/source/DLT645.c ****     for (i = 0; i < idcount; i++)
 312:../user/source/DLT645.c ****     {
 313:../user/source/DLT645.c ****         if ((DBDataID_Handle_List[i].Data_ID[0] == pucBuffer[10]) &&
 314:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 315:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 316:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 317:../user/source/DLT645.c ****             break;
 318:../user/source/DLT645.c ****     }
 319:../user/source/DLT645.c ****     if (i < idcount)
 320:../user/source/DLT645.c ****     {
 321:../user/source/DLT645.c **** #ifndef ENABLE_CURRENT_DEVIATION
 322:../user/source/DLT645.c ****         if (DBDataID_Handle_List[i].Handle == vCurrent_Modify)
 323:../user/source/DLT645.c ****             return;
 324:../user/source/DLT645.c **** #endif
 325:../user/source/DLT645.c **** #ifndef ENABLE_CURRENT_LIMIT
 326:../user/source/DLT645.c ****         if (DBDataID_Handle_List[i].Handle == vCurrent_Limit_Modify)
 327:../user/source/DLT645.c ****             return;
 328:../user/source/DLT645.c **** #endif
 329:../user/source/DLT645.c **** #ifndef ENABLE_ESTATUS
 330:../user/source/DLT645.c ****         if (DBDataID_Handle_List[i].Handle == Estatus_Modify_CurrentEvent)
 331:../user/source/DLT645.c ****             return;
 332:../user/source/DLT645.c **** #endif
 333:../user/source/DLT645.c **** #ifndef ENABLE_ENERGY_MODIFY
 334:../user/source/DLT645.c ****         if ((DBDataID_Handle_List[i].Handle == vNowEnergy_Modifier) ||
 335:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vDayfrozen_Modifier)) ||
 336:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vAccountEnergy_Modify)) ||
 337:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_AbleSet)) ||
 338:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_RaitoSet)) ||
 339:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_Reset)))
 340:../user/source/DLT645.c ****             return;
 341:../user/source/DLT645.c **** #endif
 342:../user/source/DLT645.c ****         DBDataID_Handle_List[i].Handle(pucBuffer);
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 9


 343:../user/source/DLT645.c ****     }
 344:../user/source/DLT645.c ****     else
 345:../user/source/DLT645.c ****         return;
 346:../user/source/DLT645.c **** }
 347:../user/source/DLT645.c **** 
 348:../user/source/DLT645.c **** /********************************************************************
 349:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ººìÍâ²àÊÕÖ¡Êı¾İ±êÊ¶·ÖÎö´¦Àí
 350:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 351:../user/source/DLT645.c ****  * Êä    ³ö£ºÊı¾İ±êÊ¶
 352:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 353:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.8
 354:../user/source/DLT645.c ****  **********************************************************************/
 355:../user/source/DLT645.c **** void vINFRDataID_Handle(uint8_t *pucBuffer)
 356:../user/source/DLT645.c **** {
 357:../user/source/DLT645.c ****     uint8_t i;
 358:../user/source/DLT645.c ****     uint16_t idcount;
 359:../user/source/DLT645.c ****     idcount = sizeof(INFRDataID_Handle_List) / sizeof(INFRDataID_Handle_List[0]);
 360:../user/source/DLT645.c ****     for (i = 0; i < idcount; i++)
 361:../user/source/DLT645.c ****     {
 362:../user/source/DLT645.c ****         if ((INFRDataID_Handle_List[i].Data_ID[0] == pucBuffer[10]) &&
 363:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 364:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 365:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 366:../user/source/DLT645.c ****             break;
 367:../user/source/DLT645.c ****     }
 368:../user/source/DLT645.c ****     if (i < idcount)
 369:../user/source/DLT645.c ****     {
 370:../user/source/DLT645.c **** #ifndef ENABLE_ENERGY_MODIFY
 371:../user/source/DLT645.c ****         if (((INFRDataID_Handle_List[i].Handle == vEnergy_Modify_AbleSet)) ||
 372:../user/source/DLT645.c ****             ((INFRDataID_Handle_List[i].Handle == vEnergy_Modify_RaitoSet)) ||
 373:../user/source/DLT645.c ****             ((INFRDataID_Handle_List[i].Handle == vEnergy_Modify_Reset)) ||
 374:../user/source/DLT645.c ****             ((INFRDataID_Handle_List[i].Handle == vEnergy_Modify_ReadSet)) ||
 375:../user/source/DLT645.c ****             ((INFRDataID_Handle_List[i].Handle == vEnergy_Modify_ReadValue)))
 376:../user/source/DLT645.c ****             return;
 377:../user/source/DLT645.c **** #endif
 378:../user/source/DLT645.c ****         INFRDataID_Handle_List[i].Handle(pucBuffer);
 379:../user/source/DLT645.c ****     }
 380:../user/source/DLT645.c ****     else
 381:../user/source/DLT645.c ****         return;
 382:../user/source/DLT645.c **** }
 383:../user/source/DLT645.c **** 
 384:../user/source/DLT645.c **** /********************************************************************
 385:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÀ©³äÖ¡£º¸ü¸ÄµçÑ¹ĞŞ¸Ä±êÖ¾Î»
 386:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 387:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
 388:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 389:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 390:../user/source/DLT645.c ****  **********************************************************************/
 391:../user/source/DLT645.c **** void Get_VChange_State(uint8_t *pucBuffer)
 392:../user/source/DLT645.c **** {
 393:../user/source/DLT645.c ****     uint8_t i;
 394:../user/source/DLT645.c ****     if (pucBuffer[14] == 0x34)
 395:../user/source/DLT645.c ****     {
 396:../user/source/DLT645.c ****         Voltage_Change_State = Voltage_NOChange;
 397:../user/source/DLT645.c ****     }
 398:../user/source/DLT645.c ****     if (pucBuffer[14] == 0x33)
 399:../user/source/DLT645.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 10


 400:../user/source/DLT645.c ****         Voltage_Change_State = Voltage_Change;
 401:../user/source/DLT645.c ****     }
 402:../user/source/DLT645.c ****     if (ERROR == Flash_Write_Word(FLASH_VChangeState_Addr, Voltage_Change_State))
 403:../user/source/DLT645.c ****     {
 404:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
 405:../user/source/DLT645.c ****     }
 406:../user/source/DLT645.c ****     else
 407:../user/source/DLT645.c ****         pucBuffer[8] = 0x94;
 408:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
 409:../user/source/DLT645.c ****     pucBuffer[10] = 0x00;
 410:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 411:../user/source/DLT645.c ****     {
 412:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
 413:../user/source/DLT645.c ****     }
 414:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
 415:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 416:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
 417:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 418:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 419:../user/source/DLT645.c ****     {
 420:../user/source/DLT645.c ****         Uart_DataPut(USART3);
 421:../user/source/DLT645.c ****     }
 422:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
 423:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 424:../user/source/DLT645.c ****     {
 425:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
 426:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 427:../user/source/DLT645.c ****     }
 428:../user/source/DLT645.c **** }
 429:../user/source/DLT645.c **** /********************************************************************
 430:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÀ©³äÖ¡£ºµçÑ¹ÏŞÖµÉèÖÃ
 431:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 432:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
 433:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 434:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 435:../user/source/DLT645.c ****  **********************************************************************/
 436:../user/source/DLT645.c **** void Set_Voltage_Limit(uint8_t *pucBuffer)
 437:../user/source/DLT645.c **** {
 438:../user/source/DLT645.c ****     int VMAX = 0;
 439:../user/source/DLT645.c ****     int VMIN = 0;
 440:../user/source/DLT645.c ****     int i = 0;
 441:../user/source/DLT645.c ****     VMAX = Get_Voltage(pucBuffer[14], pucBuffer[15]);
 442:../user/source/DLT645.c ****     VMIN = Get_Voltage(pucBuffer[16], pucBuffer[17]);
 443:../user/source/DLT645.c ****     if ((VMAX > VMIN) && (VMAX < Voltage_MAX_MAX) //µçÑ¹ÏŞÖµÉèÖÃÌõ¼ş£¬ÉÏÏŞ´óÓÚÏÂÏŞÇÒĞ¡ÓÚÉÏÉÏÏŞ
 444:../user/source/DLT645.c ****         && (VMIN > Voltage_MIN_MIN))              //µçÑ¹ÏÂÏŞ´óÓÚÏÂÏÂÏŞ
 445:../user/source/DLT645.c ****     {
 446:../user/source/DLT645.c ****         Voltage_MAX = VMAX;
 447:../user/source/DLT645.c ****         Voltage_MIN = VMIN;
 448:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX1_Addr, pucBuffer[14]);
 449:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX2_Addr, pucBuffer[15]);
 450:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN1_Addr, pucBuffer[16]);
 451:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN2_Addr, pucBuffer[17]);
 452:../user/source/DLT645.c ****         pucBuffer[8] = 0x94; //ÉèÖÃ³É¹¦±êÖ¾
 453:../user/source/DLT645.c ****     }
 454:../user/source/DLT645.c ****     else
 455:../user/source/DLT645.c ****     {
 456:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4; //ÉèÖÃÒì³£±êÖ¾
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 11


 457:../user/source/DLT645.c ****     }
 458:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
 459:../user/source/DLT645.c ****     pucBuffer[10] = 0x00; //ÇóÈ¡Ğ£ÑéºÍ
 460:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 461:../user/source/DLT645.c ****     {
 462:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
 463:../user/source/DLT645.c ****     }
 464:../user/source/DLT645.c ****     pucBuffer[11] = 0x16; //½áÊø·û
 465:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 466:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
 467:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 468:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 469:../user/source/DLT645.c ****     {
 470:../user/source/DLT645.c ****         Uart_DataPut(USART3);
 471:../user/source/DLT645.c ****     }
 472:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
 473:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
 474:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 475:../user/source/DLT645.c ****     {
 476:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
 477:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 478:../user/source/DLT645.c ****     }
 479:../user/source/DLT645.c **** }
 480:../user/source/DLT645.c **** 
 481:../user/source/DLT645.c **** /********************************************************************
 482:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÀ©³äÖ¡£ºµçÑ¹ÏŞÖµ²éÑ¯
 483:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 484:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
 485:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 486:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 487:../user/source/DLT645.c ****  **********************************************************************/
 488:../user/source/DLT645.c **** void Query_Voltage_Limit(uint8_t *pucBuffer)
 489:../user/source/DLT645.c **** {
 490:../user/source/DLT645.c ****     int i = 0;
 491:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
 492:../user/source/DLT645.c ****     pucBuffer[9] = 0x0C;
 493:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(Voltage_MAX_MAX);
 494:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(Voltage_MAX_MAX); //µçÑ¹ÉÏÉÏÏŞ
 495:../user/source/DLT645.c ****     pucBuffer[16] = GetLowByte(Voltage_MIN_MIN);
 496:../user/source/DLT645.c ****     pucBuffer[17] = GetHighByte(Voltage_MIN_MIN); //µçÑ¹ÏÂÏÂÏŞ
 497:../user/source/DLT645.c ****     pucBuffer[18] = GetLowByte(Voltage_MAX);
 498:../user/source/DLT645.c ****     pucBuffer[19] = GetHighByte(Voltage_MAX); //µçÑ¹ÉÏÏŞÖµ
 499:../user/source/DLT645.c ****     pucBuffer[20] = GetLowByte(Voltage_MIN);
 500:../user/source/DLT645.c ****     pucBuffer[21] = GetHighByte(Voltage_MIN); //µçÑ¹ÏÂÏŞÖµ
 501:../user/source/DLT645.c ****     pucBuffer[22] = 0x00;                     //ÇóÈ¡Ğ£ÑéºÍ
 502:../user/source/DLT645.c ****     for (i = 0; i < 24 - 2; i++)              //±¨ÎÄ³¤¶È24
 503:../user/source/DLT645.c ****     {
 504:../user/source/DLT645.c ****         pucBuffer[22] += pucBuffer[i];
 505:../user/source/DLT645.c ****     }
 506:../user/source/DLT645.c ****     pucBuffer[23] = 0x16; //½áÊø·û
 507:../user/source/DLT645.c ****     uc645DataDomainLength = 12;
 508:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 509:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 510:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 511:../user/source/DLT645.c ****     {
 512:../user/source/DLT645.c ****         Uart_DataPut(USART3);
 513:../user/source/DLT645.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 12


 514:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
 515:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 24);
 516:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 517:../user/source/DLT645.c ****     {
 518:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
 519:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 520:../user/source/DLT645.c ****     }
 521:../user/source/DLT645.c **** }
 522:../user/source/DLT645.c **** 
 523:../user/source/DLT645.c **** /********************************************************************
 524:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ÏŞÖµ»Ö¸´³ö³§
 525:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 526:../user/source/DLT645.c ****  * Êä    ³ö£º	none
 527:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 528:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 529:../user/source/DLT645.c ****  **********************************************************************/
 530:../user/source/DLT645.c **** void Default_Reset(uint8_t *pucBuffer)
 531:../user/source/DLT645.c **** {
 532:../user/source/DLT645.c ****     int i = 0;
 533:../user/source/DLT645.c ****     A_Voltage = WORK_VOLTAGE;                                        //AÏàµçÑ¹Öµ¸ÄÎª±ê×¼Öµ
 534:../user/source/DLT645.c ****     B_Voltage = WORK_VOLTAGE;                                        //BÏàµçÑ¹Öµ¸ÄÎª±ê×¼Öµ
 535:../user/source/DLT645.c ****     C_Voltage = WORK_VOLTAGE;                                        //CÏàµçÑ¹Öµ¸ÄÎª±ê×¼Öµ
 536:../user/source/DLT645.c ****     Voltage_Change_State = Voltage_Change;                           //µçÑ¹ĞŞ¸Ä×´Ì¬¸ÄÎª¡°ÓĞĞ§¡±
 537:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VChangeState_Addr, Voltage_Change_State); //´æ´¢µ½FLASHÖĞ
 538:../user/source/DLT645.c ****     Voltage_MAX = Voltage_MAX_Default;                               //µçÑ¹ºÏ¸ñÏŞÖµ»Ö¸´Ä¬ÈÏ²¢ÇÒ´æµµ
 539:../user/source/DLT645.c ****     Voltage_MIN = Voltage_MIN_Default;
 540:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMAX1_Addr, GetLowByte(Voltage_MAX));
 541:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMAX2_Addr, GetHighByte(Voltage_MAX));
 542:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMIN1_Addr, GetLowByte(Voltage_MIN));
 543:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMIN2_Addr, GetHighByte(Voltage_MIN));
 544:../user/source/DLT645.c ****     pucBuffer[8] = 0x94;  //ÇóÈ¡Ğ£ÑéºÍ
 545:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;  //ÇóÈ¡Ğ£ÑéºÍ
 546:../user/source/DLT645.c ****     pucBuffer[10] = 0x00; //ÇóÈ¡Ğ£ÑéºÍ
 547:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 548:../user/source/DLT645.c ****     {
 549:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
 550:../user/source/DLT645.c ****     }
 551:../user/source/DLT645.c ****     pucBuffer[11] = 0x16; //½áÊø·û
 552:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
 553:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 554:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 555:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 556:../user/source/DLT645.c ****     {
 557:../user/source/DLT645.c ****         Uart_DataPut(USART3);
 558:../user/source/DLT645.c ****     }
 559:../user/source/DLT645.c ****     /*ºìÍâ¿Ú·¢ËÍ*/
 560:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
 561:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 562:../user/source/DLT645.c ****     {
 563:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
 564:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 565:../user/source/DLT645.c ****     }
 566:../user/source/DLT645.c **** }
 567:../user/source/DLT645.c **** 
 568:../user/source/DLT645.c **** /********************************************************************
 569:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹Ö¡´¦Àíº¯Êı
 570:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë£¬Çı¶¯²ã»º´æÖ¸Õë
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 13


 571:../user/source/DLT645.c ****  * Êä    ³ö£º
 572:../user/source/DLT645.c ****  *           
 573:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 574:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.10
 575:../user/source/DLT645.c ****  **********************************************************************/
 576:../user/source/DLT645.c **** void vVoltageHandle(uint8_t *pucBuffer)
 577:../user/source/DLT645.c **** {
 578:../user/source/DLT645.c ****     /*µÈ´ıµçÑ¹»ØÖ¡×´Ì¬ÇåÎ»*/
 579:../user/source/DLT645.c ****     Voltage_Frame_Status = FrameReplied;
 580:../user/source/DLT645.c ****     /*¼ÆÊ±Æ÷¸´Î»*/
 581:../user/source/DLT645.c ****     blFramesCounterStatus = false;
 582:../user/source/DLT645.c ****     uwTime2FramesCounter = 0;
 583:../user/source/DLT645.c ****     /*µçÑ¹Ö¡ÅĞ¶Ï´¦Àí*/
 584:../user/source/DLT645.c ****     Voltage_Modifier(pucBuffer);
 585:../user/source/DLT645.c **** }
 586:../user/source/DLT645.c **** 
 587:../user/source/DLT645.c **** /********************************************************************
 588:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ºÏ¸ñÂÊÅĞ¶Ïµ÷Õû
 589:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 590:../user/source/DLT645.c ****  * Êä    ³ö£º	none
 591:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 592:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 593:../user/source/DLT645.c ****  **********************************************************************/
 594:../user/source/DLT645.c **** void Voltage_Modifier(uint8_t *pucBuffer)
 595:../user/source/DLT645.c **** {
 596:../user/source/DLT645.c **** 
 597:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
 598:../user/source/DLT645.c ****     uint8_t i = 0;
 599:../user/source/DLT645.c ****     //IWDG_ReloadCounter();
 600:../user/source/DLT645.c ****     if (Voltage_Change_State == Voltage_NOChange)
 601:../user/source/DLT645.c ****         return;
 602:../user/source/DLT645.c ****     if ((pucBuffer[8] == 0X91) &&
 603:../user/source/DLT645.c ****         (pucBuffer[10] == 0x33) &&
 604:../user/source/DLT645.c ****         (pucBuffer[12] == 0x34) &&
 605:../user/source/DLT645.c ****         (pucBuffer[13] == 0x35))
 606:../user/source/DLT645.c ****     {
 607:../user/source/DLT645.c ****         if (pucBuffer[11] == 0x32) //ÈıÏàµçÑ¹Êı¾İ¿é
 608:../user/source/DLT645.c ****         {
 609:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[14], pucBuffer[15])) //BCDĞ£Ñé
 610:../user/source/DLT645.c ****             {
 611:../user/source/DLT645.c ****                 A_Voltage = Get_Voltage(pucBuffer[14], pucBuffer[15]);
 612:../user/source/DLT645.c ****                 if ((A_Voltage > Voltage_MAX) || (A_Voltage < Voltage_MIN)) //ĞŞ¸ÄAÏàµçÑ¹
 613:../user/source/DLT645.c ****                 {
 614:../user/source/DLT645.c ****                     A_Voltage = Voltage_Modifier_Method(A_Voltage);
 615:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(A_Voltage);
 616:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(A_Voltage);
 617:../user/source/DLT645.c ****                 }
 618:../user/source/DLT645.c ****             }
 619:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[16], pucBuffer[17])) //BCDĞ£Ñé
 620:../user/source/DLT645.c ****             {
 621:../user/source/DLT645.c ****                 B_Voltage = Get_Voltage(pucBuffer[16], pucBuffer[17]);
 622:../user/source/DLT645.c ****                 if ((B_Voltage > Voltage_MAX) || (B_Voltage < Voltage_MIN)) //ĞŞ¸ÄBÏàµçÑ¹
 623:../user/source/DLT645.c ****                 {
 624:../user/source/DLT645.c ****                     B_Voltage = Voltage_Modifier_Method(B_Voltage);
 625:../user/source/DLT645.c ****                     pucBuffer[16] = GetLowByte(B_Voltage);
 626:../user/source/DLT645.c ****                     pucBuffer[17] = GetHighByte(B_Voltage);
 627:../user/source/DLT645.c ****                 }
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 14


 628:../user/source/DLT645.c ****             }
 629:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[18], pucBuffer[19])) //BCDĞ£Ñé
 630:../user/source/DLT645.c ****             {
 631:../user/source/DLT645.c ****                 C_Voltage = Get_Voltage(pucBuffer[18], pucBuffer[19]);
 632:../user/source/DLT645.c ****                 if ((C_Voltage > Voltage_MAX) || (C_Voltage < Voltage_MIN)) //ĞŞ¸ÄCÏàµçÑ¹
 633:../user/source/DLT645.c ****                 {
 634:../user/source/DLT645.c ****                     C_Voltage = Voltage_Modifier_Method(C_Voltage);
 635:../user/source/DLT645.c ****                     pucBuffer[18] = GetLowByte(C_Voltage);
 636:../user/source/DLT645.c ****                     pucBuffer[19] = GetHighByte(C_Voltage);
 637:../user/source/DLT645.c ****                 }
 638:../user/source/DLT645.c ****             }
 639:../user/source/DLT645.c ****         }
 640:../user/source/DLT645.c ****         if (pucBuffer[11] == 0x34) //AÏàµçÑ¹Êı¾İ
 641:../user/source/DLT645.c ****         {
 642:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[14], pucBuffer[15])) //BCDĞ£Ñé
 643:../user/source/DLT645.c ****             {
 644:../user/source/DLT645.c ****                 A_Voltage = Get_Voltage(pucBuffer[14], pucBuffer[15]);
 645:../user/source/DLT645.c ****                 if ((A_Voltage > Voltage_MAX) || (A_Voltage < Voltage_MIN)) //ĞŞ¸ÄAÏàµçÑ¹
 646:../user/source/DLT645.c ****                 {
 647:../user/source/DLT645.c ****                     A_Voltage = Voltage_Modifier_Method(A_Voltage);
 648:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(A_Voltage);
 649:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(A_Voltage);
 650:../user/source/DLT645.c ****                 }
 651:../user/source/DLT645.c ****             }
 652:../user/source/DLT645.c ****         }
 653:../user/source/DLT645.c ****         if (pucBuffer[11] == 0x35) //BÏàµçÑ¹Êı¾İ
 654:../user/source/DLT645.c ****         {
 655:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[14], pucBuffer[15])) //BCDĞ£Ñé
 656:../user/source/DLT645.c ****             {
 657:../user/source/DLT645.c ****                 B_Voltage = Get_Voltage(pucBuffer[14], pucBuffer[15]);
 658:../user/source/DLT645.c ****                 if ((B_Voltage > Voltage_MAX) || (B_Voltage < Voltage_MIN)) //ĞŞ¸ÄBÏàµçÑ¹
 659:../user/source/DLT645.c ****                 {
 660:../user/source/DLT645.c ****                     B_Voltage = Voltage_Modifier_Method(B_Voltage);
 661:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(B_Voltage);
 662:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(B_Voltage);
 663:../user/source/DLT645.c ****                 }
 664:../user/source/DLT645.c ****             }
 665:../user/source/DLT645.c ****         }
 666:../user/source/DLT645.c ****         if (pucBuffer[11] == 0x36) //CÏàµçÑ¹Êı¾İ
 667:../user/source/DLT645.c ****         {
 668:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[14], pucBuffer[15])) //BCDĞ£Ñé
 669:../user/source/DLT645.c ****             {
 670:../user/source/DLT645.c ****                 C_Voltage = Get_Voltage(pucBuffer[14], pucBuffer[15]);
 671:../user/source/DLT645.c ****                 if ((C_Voltage > Voltage_MAX) || (C_Voltage < Voltage_MIN)) //ĞŞ¸ÄCÏàµçÑ¹
 672:../user/source/DLT645.c ****                 {
 673:../user/source/DLT645.c ****                     C_Voltage = Voltage_Modifier_Method(C_Voltage);
 674:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(C_Voltage);
 675:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(C_Voltage);
 676:../user/source/DLT645.c ****                 }
 677:../user/source/DLT645.c ****             }
 678:../user/source/DLT645.c ****         }
 679:../user/source/DLT645.c ****         //ÇóÈ¡Ğ£ÑéºÍ
 680:../user/source/DLT645.c ****         for (i = 0; i < uc645DataDomainLength + 10; i++)
 681:../user/source/DLT645.c ****         {
 682:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
 683:../user/source/DLT645.c ****         }
 684:../user/source/DLT645.c ****         pucBuffer[uc645DataDomainLength + 10] = ucCheckData;
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 15


 685:../user/source/DLT645.c ****     }
 686:../user/source/DLT645.c ****     return;
 687:../user/source/DLT645.c **** }
 688:../user/source/DLT645.c **** /********************************************************************
 689:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º»Ø¸´µçÑ¹Ö¡×éÖ¡º¯Êı
 690:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 691:../user/source/DLT645.c ****  * Êä    ³ö£º	true/false
 692:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 693:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 694:../user/source/DLT645.c ****  **********************************************************************/
 695:../user/source/DLT645.c **** bool blVoltage_Create(uint8_t *pucBuffer)
 696:../user/source/DLT645.c **** {
 697:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
 698:../user/source/DLT645.c ****     uint8_t i = 0;
 699:../user/source/DLT645.c ****     switch (pucBuffer[11])
 700:../user/source/DLT645.c ****     {
 701:../user/source/DLT645.c ****     case 0x32: //ÈıÏàµçÑ¹Êı¾İ¿é
 702:../user/source/DLT645.c ****     {
 703:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 704:../user/source/DLT645.c ****         pucBuffer[9] = 0x0A;
 705:../user/source/DLT645.c ****         //Ê¹ÓÃÉÏ´ÎĞŞ¸ÄµÄºÏ·¨µçÑ¹Öµ»ò1000 2017-10-25:
 706:../user/source/DLT645.c ****         A_Voltage = ((A_Voltage <= Voltage_MAX) && (A_Voltage >= Voltage_MIN)
 707:../user/source/DLT645.c ****                          ? A_Voltage
 708:../user/source/DLT645.c ****                          : WORK_VOLTAGE);
 709:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 710:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(A_Voltage);
 711:../user/source/DLT645.c ****         B_Voltage = ((B_Voltage <= Voltage_MAX) && (B_Voltage >= Voltage_MIN)
 712:../user/source/DLT645.c ****                          ? B_Voltage
 713:../user/source/DLT645.c ****                          : WORK_VOLTAGE);
 714:../user/source/DLT645.c ****         pucBuffer[16] = GetLowByte(B_Voltage);
 715:../user/source/DLT645.c ****         pucBuffer[17] = GetHighByte(B_Voltage);
 716:../user/source/DLT645.c ****         C_Voltage = ((C_Voltage <= Voltage_MAX) && (C_Voltage >= Voltage_MIN)
 717:../user/source/DLT645.c ****                          ? C_Voltage
 718:../user/source/DLT645.c ****                          : WORK_VOLTAGE);
 719:../user/source/DLT645.c ****         pucBuffer[18] = GetLowByte(C_Voltage);
 720:../user/source/DLT645.c ****         pucBuffer[19] = GetHighByte(C_Voltage);
 721:../user/source/DLT645.c ****         for (i = 0; i < 20; i++) //¹Ì¶¨Ö¡³¤22
 722:../user/source/DLT645.c ****         {
 723:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
 724:../user/source/DLT645.c ****         }
 725:../user/source/DLT645.c ****         pucBuffer[20] = ucCheckData;
 726:../user/source/DLT645.c ****         pucBuffer[21] = 0x16;
 727:../user/source/DLT645.c ****         return true;
 728:../user/source/DLT645.c ****     }
 729:../user/source/DLT645.c ****     case 0x34: //AÏàµçÑ¹Êı¾İ
 730:../user/source/DLT645.c ****     {
 731:../user/source/DLT645.c ****         A_Voltage = ((A_Voltage <= Voltage_MAX) && (A_Voltage >= Voltage_MIN)
 732:../user/source/DLT645.c ****                          ? A_Voltage
 733:../user/source/DLT645.c ****                          : WORK_VOLTAGE);
 734:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 735:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 736:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 737:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(A_Voltage);
 738:../user/source/DLT645.c ****         for (i = 0; i < 16; i++) //¹Ì¶¨Ö¡³¤18
 739:../user/source/DLT645.c ****         {
 740:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
 741:../user/source/DLT645.c ****         }
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 16


 742:../user/source/DLT645.c ****         pucBuffer[16] = ucCheckData;
 743:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 744:../user/source/DLT645.c ****         return true;
 745:../user/source/DLT645.c ****     }
 746:../user/source/DLT645.c ****     case 0x35: //BÏàµçÑ¹Êı¾İ
 747:../user/source/DLT645.c ****     {
 748:../user/source/DLT645.c ****         B_Voltage = ((B_Voltage <= Voltage_MAX) && (B_Voltage >= Voltage_MIN)
 749:../user/source/DLT645.c ****                          ? B_Voltage
 750:../user/source/DLT645.c ****                          : WORK_VOLTAGE);
 751:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 752:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 753:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(B_Voltage);
 754:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(B_Voltage);
 755:../user/source/DLT645.c ****         for (i = 0; i < 16; i++) //¹Ì¶¨Ö¡³¤18
 756:../user/source/DLT645.c ****         {
 757:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
 758:../user/source/DLT645.c ****         }
 759:../user/source/DLT645.c ****         pucBuffer[16] = ucCheckData;
 760:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 761:../user/source/DLT645.c ****         return true;
 762:../user/source/DLT645.c ****     }
 763:../user/source/DLT645.c ****     case 0x36: //CÏàµçÑ¹Êı¾İ
 764:../user/source/DLT645.c ****     {
 765:../user/source/DLT645.c ****         C_Voltage = ((C_Voltage <= Voltage_MAX) && (C_Voltage >= Voltage_MIN)
 766:../user/source/DLT645.c ****                          ? C_Voltage
 767:../user/source/DLT645.c ****                          : WORK_VOLTAGE); //¹Ì¶¨Ö¡³¤18
 768:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 769:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 770:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(C_Voltage);
 771:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(C_Voltage);
 772:../user/source/DLT645.c ****         for (i = 0; i < 16; i++)
 773:../user/source/DLT645.c ****         {
 774:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
 775:../user/source/DLT645.c ****         }
 776:../user/source/DLT645.c ****         pucBuffer[16] = ucCheckData;
 777:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 778:../user/source/DLT645.c ****         return true;
 779:../user/source/DLT645.c ****     }
 780:../user/source/DLT645.c ****     default:
 781:../user/source/DLT645.c ****         return false; //Èç¹ûÊÕµ½µÄµçÑ¹Ö¡²»ÊÇÕÙ²âA/B/CÏà£¬ÔòÊÕÖ¡´íÎó£¬¼´Ê¹µç±í»Ø¸´³¬Ê±£¬Ò²²»ÄÜÌæ´ú»Ø
 782:../user/source/DLT645.c ****     }
 783:../user/source/DLT645.c **** }
 784:../user/source/DLT645.c **** /********************************************************************
 785:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºBCDÂëĞ£Ñé
 786:../user/source/DLT645.c ****  * Êä    Èë£ºµçÑ¹Êı¾İµÄµÍ×Ö½ÚºÍ¸ß×Ö½Ú
 787:../user/source/DLT645.c ****  * Êä    ³ö£ºtrue»òfalse
 788:../user/source/DLT645.c ****  *           
 789:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 790:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 791:../user/source/DLT645.c ****  **********************************************************************/
 792:../user/source/DLT645.c **** bool BCD_Verity(uint8_t LowByte, uint8_t HighByte)
 793:../user/source/DLT645.c **** {
 113              		.loc 1 793 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 17


 118              	.LVL13:
 794:../user/source/DLT645.c ****     uint8_t hundreds; //µçÑ¹°ÙÎ»
 795:../user/source/DLT645.c ****     uint8_t tens;     //µçÑ¹Ê®Î»
 796:../user/source/DLT645.c ****     uint8_t ones;     //µçÑ¹¸öÎ»
 797:../user/source/DLT645.c ****     uint8_t decimals; //µçÑ¹Ğ¡ÊıÎ»
 798:../user/source/DLT645.c ****     hundreds = (HighByte & 0xF0) >> 4;
 119              		.loc 1 798 0
 120 0000 0B09     		lsrs	r3, r1, #4
 121              	.LVL14:
 799:../user/source/DLT645.c ****     tens = HighByte & 0x0F;
 122              		.loc 1 799 0
 123 0002 01F00F01 		and	r1, r1, #15
 124              	.LVL15:
 800:../user/source/DLT645.c ****     ones = (LowByte & 0xF0) >> 4;
 125              		.loc 1 800 0
 126 0006 0209     		lsrs	r2, r0, #4
 127              	.LVL16:
 801:../user/source/DLT645.c ****     decimals = LowByte & 0x0F;
 128              		.loc 1 801 0
 129 0008 00F00F00 		and	r0, r0, #15
 130              	.LVL17:
 802:../user/source/DLT645.c ****     if ((hundreds >= 0x03) &&
 131              		.loc 1 802 0
 132 000c 033B     		subs	r3, r3, #3
 133              	.LVL18:
 134 000e DBB2     		uxtb	r3, r3
 135              	.LVL19:
 136 0010 092B     		cmp	r3, #9
 137 0012 0DD8     		bhi	.L12
 803:../user/source/DLT645.c ****         (hundreds <= 0x0C) &&
 138              		.loc 1 803 0
 139 0014 0229     		cmp	r1, #2
 140 0016 0DD9     		bls	.L13
 804:../user/source/DLT645.c ****         (tens >= 0x03) &&
 141              		.loc 1 804 0
 142 0018 0C29     		cmp	r1, #12
 143 001a 0DD8     		bhi	.L14
 805:../user/source/DLT645.c ****         (tens <= 0x0C) &&
 144              		.loc 1 805 0
 145 001c 022A     		cmp	r2, #2
 146 001e 0DD9     		bls	.L15
 806:../user/source/DLT645.c ****         (ones >= 0x03) &&
 147              		.loc 1 806 0
 148 0020 0C2A     		cmp	r2, #12
 149 0022 0DD8     		bhi	.L16
 807:../user/source/DLT645.c ****         (ones <= 0x0C) &&
 150              		.loc 1 807 0
 151 0024 0228     		cmp	r0, #2
 152 0026 0DD9     		bls	.L17
 808:../user/source/DLT645.c ****         (decimals >= 0x03) &&
 153              		.loc 1 808 0
 154 0028 0C28     		cmp	r0, #12
 155 002a 0DD9     		bls	.L18
 809:../user/source/DLT645.c ****         (decimals <= 0x0C))
 810:../user/source/DLT645.c ****     {
 811:../user/source/DLT645.c ****         return true;
 812:../user/source/DLT645.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 18


 813:../user/source/DLT645.c ****     else
 814:../user/source/DLT645.c ****     {
 815:../user/source/DLT645.c ****         return false;
 156              		.loc 1 815 0
 157 002c 0020     		movs	r0, #0
 158              	.LVL20:
 159 002e 7047     		bx	lr
 160              	.LVL21:
 161              	.L12:
 162 0030 0020     		movs	r0, #0
 163              	.LVL22:
 164 0032 7047     		bx	lr
 165              	.LVL23:
 166              	.L13:
 167 0034 0020     		movs	r0, #0
 168              	.LVL24:
 169 0036 7047     		bx	lr
 170              	.LVL25:
 171              	.L14:
 172 0038 0020     		movs	r0, #0
 173              	.LVL26:
 174 003a 7047     		bx	lr
 175              	.LVL27:
 176              	.L15:
 177 003c 0020     		movs	r0, #0
 178              	.LVL28:
 179 003e 7047     		bx	lr
 180              	.LVL29:
 181              	.L16:
 182 0040 0020     		movs	r0, #0
 183              	.LVL30:
 184 0042 7047     		bx	lr
 185              	.LVL31:
 186              	.L17:
 187 0044 0020     		movs	r0, #0
 188              	.LVL32:
 189 0046 7047     		bx	lr
 190              	.LVL33:
 191              	.L18:
 811:../user/source/DLT645.c ****     }
 192              		.loc 1 811 0
 193 0048 0120     		movs	r0, #1
 194              	.LVL34:
 816:../user/source/DLT645.c ****     }
 817:../user/source/DLT645.c **** }
 195              		.loc 1 817 0
 196 004a 7047     		bx	lr
 197              		.cfi_endproc
 198              	.LFE122:
 200              		.section	.text.Get_Voltage,"ax",%progbits
 201              		.align	2
 202              		.thumb
 203              		.thumb_func
 205              	Get_Voltage:
 206              	.LFB123:
 818:../user/source/DLT645.c **** 
 819:../user/source/DLT645.c **** /********************************************************************
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 19


 820:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º´ÓÊı¾İÖ¡ÖĞ¶ÁÈ¡µçÑ¹Öµ
 821:../user/source/DLT645.c ****  * Êä    Èë£ºµçÑ¹ÖµµÍ×Ö½Ú¡¢¸ß×Ö½Ú
 822:../user/source/DLT645.c ****  * Êä    ³ö£ºÊ®½øÖÆµÄµçÑ¹Öµ
 823:../user/source/DLT645.c ****  *           
 824:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 825:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 826:../user/source/DLT645.c ****  **********************************************************************/
 827:../user/source/DLT645.c **** int Get_Voltage(uint8_t LowByte, uint8_t HighByte)
 828:../user/source/DLT645.c **** {
 207              		.loc 1 828 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 212              	.LVL35:
 213 0000 10B4     		push	{r4}
 214              	.LCFI2:
 215              		.cfi_def_cfa_offset 4
 216              		.cfi_offset 4, -4
 217              	.LVL36:
 829:../user/source/DLT645.c ****     int Voltage = 0;
 830:../user/source/DLT645.c ****     uint8_t hundreds; //µçÑ¹°ÙÎ»
 831:../user/source/DLT645.c ****     uint8_t tens;     //µçÑ¹Ê®Î»
 832:../user/source/DLT645.c ****     uint8_t ones;     //µçÑ¹¸öÎ»
 833:../user/source/DLT645.c ****     uint8_t decimals; //µçÑ¹Ğ¡ÊıÎ»
 834:../user/source/DLT645.c ****     hundreds = ((HighByte - 0x33) & 0xF0) >> 4;
 218              		.loc 1 834 0
 219 0002 3339     		subs	r1, r1, #51
 220              	.LVL37:
 221 0004 C1F30314 		ubfx	r4, r1, #4, #4
 222              	.LVL38:
 835:../user/source/DLT645.c ****     tens = (HighByte - 0x33) & 0x0F;
 223              		.loc 1 835 0
 224 0008 01F00F01 		and	r1, r1, #15
 225              	.LVL39:
 836:../user/source/DLT645.c ****     ones = ((LowByte - 0x33) & 0xF0) >> 4;
 226              		.loc 1 836 0
 227 000c 3338     		subs	r0, r0, #51
 228              	.LVL40:
 229 000e C0F30313 		ubfx	r3, r0, #4, #4
 230              	.LVL41:
 837:../user/source/DLT645.c ****     decimals = (LowByte - 0x33) & 0x0F;
 231              		.loc 1 837 0
 232 0012 00F00F00 		and	r0, r0, #15
 233              	.LVL42:
 838:../user/source/DLT645.c ****     Voltage = hundreds * 1000 + tens * 100 + ones * 10 + decimals; //Îª±íÊ¾Ğ¡ÊıÎ»£¬½«ÊıÕûÌåÔö´ó10±¶
 234              		.loc 1 838 0
 235 0016 6422     		movs	r2, #100
 236 0018 02FB01F1 		mul	r1, r2, r1
 237              	.LVL43:
 238 001c 4FF47A72 		mov	r2, #1000
 239 0020 02FB0414 		mla	r4, r2, r4, r1
 240              	.LVL44:
 241 0024 03EB8303 		add	r3, r3, r3, lsl #2
 242              	.LVL45:
 243 0028 5A00     		lsls	r2, r3, #1
 244 002a 2244     		add	r2, r2, r4
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 20


 245              	.LVL46:
 839:../user/source/DLT645.c ****     return Voltage;
 840:../user/source/DLT645.c **** }
 246              		.loc 1 840 0
 247 002c 1044     		add	r0, r0, r2
 248              	.LVL47:
 249 002e 5DF8044B 		ldr	r4, [sp], #4
 250              	.LCFI3:
 251              		.cfi_restore 4
 252              		.cfi_def_cfa_offset 0
 253 0032 7047     		bx	lr
 254              		.cfi_endproc
 255              	.LFE123:
 257              		.section	.text.vGet_Current,"ax",%progbits
 258              		.align	2
 259              		.thumb
 260              		.thumb_func
 262              	vGet_Current:
 263              	.LFB124:
 841:../user/source/DLT645.c **** 
 842:../user/source/DLT645.c **** /********************************************************************
 843:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º´ÓÊı¾İÖ¡ÖĞ¶ÁÈ¡µçÁ÷Öµ
 844:../user/source/DLT645.c ****  * Êä    Èë£ºµçÁ÷ÖµµÍ×Ö½Ú¡¢ÖĞ×Ö½Ú¡¢¸ß×Ö½Ú
 845:../user/source/DLT645.c ****  * Êä    ³ö£ºÊ®½øÖÆµÄµçÁ÷Öµ
 846:../user/source/DLT645.c ****  * Òª    Çó£º
 847:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 848:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 849:../user/source/DLT645.c ****  **********************************************************************/
 850:../user/source/DLT645.c **** void vGet_Current(uint8_t LowByte, uint8_t MidByte, uint8_t HighByte, CURRENT *pcurrent)
 851:../user/source/DLT645.c **** {
 264              		.loc 1 851 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              	.LVL48:
 269 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 270              	.LCFI4:
 271              		.cfi_def_cfa_offset 20
 272              		.cfi_offset 4, -20
 273              		.cfi_offset 5, -16
 274              		.cfi_offset 6, -12
 275              		.cfi_offset 7, -8
 276              		.cfi_offset 14, -4
 852:../user/source/DLT645.c ****     uint8_t million;
 853:../user/source/DLT645.c ****     uint8_t tenkillo;
 854:../user/source/DLT645.c ****     uint8_t killo;
 855:../user/source/DLT645.c ****     uint8_t hundreds;
 856:../user/source/DLT645.c ****     uint8_t tens;
 857:../user/source/DLT645.c ****     uint8_t ones;
 858:../user/source/DLT645.c ****     million = ((HighByte - 0x33) & 0x70) >> 4; //È¡bit7~bit5£¬×î¸ßÎ»ÊÇ·ûºÅÎ»,ºöÂÔ
 277              		.loc 1 858 0
 278 0002 333A     		subs	r2, r2, #51
 279              	.LVL49:
 280 0004 C2F30217 		ubfx	r7, r2, #4, #3
 281              	.LVL50:
 859:../user/source/DLT645.c ****     tenkillo = (HighByte - 0x33) & 0x0F;
 282              		.loc 1 859 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 21


 283 0008 02F00F04 		and	r4, r2, #15
 284              	.LVL51:
 860:../user/source/DLT645.c ****     killo = ((MidByte - 0x33) & 0xF0) >> 4;
 285              		.loc 1 860 0
 286 000c 3339     		subs	r1, r1, #51
 287              	.LVL52:
 288 000e C1F30316 		ubfx	r6, r1, #4, #4
 289              	.LVL53:
 861:../user/source/DLT645.c ****     hundreds = (MidByte - 0x33) & 0x0F;
 290              		.loc 1 861 0
 291 0012 01F00F0C 		and	ip, r1, #15
 292              	.LVL54:
 862:../user/source/DLT645.c ****     tens = ((LowByte - 0x33) & 0xF0) >> 4;
 293              		.loc 1 862 0
 294 0016 3338     		subs	r0, r0, #51
 295              	.LVL55:
 296 0018 C0F30315 		ubfx	r5, r0, #4, #4
 297              	.LVL56:
 863:../user/source/DLT645.c ****     ones = (LowByte - 0x33) & 0x0F;
 298              		.loc 1 863 0
 299 001c 00F00F00 		and	r0, r0, #15
 300              	.LVL57:
 864:../user/source/DLT645.c ****     pcurrent->value = million * 100000 +
 865:../user/source/DLT645.c ****                       tenkillo * 10000 +
 301              		.loc 1 865 0
 302 0020 42F2107E 		movw	lr, #10000
 303 0024 0EFB04FE 		mul	lr, lr, r4
 864:../user/source/DLT645.c ****     pcurrent->value = million * 100000 +
 304              		.loc 1 864 0
 305 0028 0B49     		ldr	r1, .L23
 306 002a 01FB07E7 		mla	r7, r1, r7, lr
 307              	.LVL58:
 308              		.loc 1 865 0
 309 002e 4FF47A71 		mov	r1, #1000
 310 0032 01FB0676 		mla	r6, r1, r6, r7
 311              	.LVL59:
 866:../user/source/DLT645.c ****                       killo * 1000 +
 312              		.loc 1 866 0
 313 0036 6424     		movs	r4, #100
 314              	.LVL60:
 315 0038 04FB0C61 		mla	r1, r4, ip, r6
 867:../user/source/DLT645.c ****                       hundreds * 100 +
 868:../user/source/DLT645.c ****                       tens * 10 + ones;
 316              		.loc 1 868 0
 317 003c 05EB8505 		add	r5, r5, r5, lsl #2
 318              	.LVL61:
 319 0040 6C00     		lsls	r4, r5, #1
 867:../user/source/DLT645.c ****                       hundreds * 100 +
 320              		.loc 1 867 0
 321 0042 0C44     		add	r4, r4, r1
 322              		.loc 1 868 0
 323 0044 0444     		add	r4, r4, r0
 864:../user/source/DLT645.c ****                       tenkillo * 10000 +
 324              		.loc 1 864 0
 325 0046 1C60     		str	r4, [r3]
 869:../user/source/DLT645.c ****     pcurrent->count++;
 326              		.loc 1 869 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 22


 327 0048 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 328 004a 0131     		adds	r1, r1, #1
 329 004c 1971     		strb	r1, [r3, #4]
 870:../user/source/DLT645.c ****     pcurrent->isminus = ((((HighByte - 0x33) & 0x80) != 0) ? true : false);
 330              		.loc 1 870 0
 331 004e C2F3C012 		ubfx	r2, r2, #7, #1
 332              	.LVL62:
 333 0052 5A71     		strb	r2, [r3, #5]
 334 0054 F0BD     		pop	{r4, r5, r6, r7, pc}
 335              	.L24:
 336 0056 00BF     		.align	2
 337              	.L23:
 338 0058 A0860100 		.word	100000
 339              		.cfi_endproc
 340              	.LFE124:
 342              		.section	.text.vPut_Current,"ax",%progbits
 343              		.align	2
 344              		.thumb
 345              		.thumb_func
 347              	vPut_Current:
 348              	.LFB125:
 871:../user/source/DLT645.c **** }
 872:../user/source/DLT645.c **** /********************************************************************
 873:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½«µçÁ÷ÖµĞ´ÈëÖ¡×Ö½Ú
 874:../user/source/DLT645.c ****  * Êä    Èë£ºµçÁ÷ÖµµÍ×Ö½Ú¡¢ÖĞ×Ö½Ú¡¢¸ß×Ö½Ú£¬µçÁ÷Öµ
 875:../user/source/DLT645.c ****  * Êä    ³ö£º
 876:../user/source/DLT645.c ****  * Òª    Çó£ºµçÁ÷Öµ²»Îª¸ºÖµ
 877:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 878:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 879:../user/source/DLT645.c ****  **********************************************************************/
 880:../user/source/DLT645.c **** void vPut_Current(CURRENT pcurrent, uint8_t *pLowByte, uint8_t *pMidByte, uint8_t *pHighByte)
 881:../user/source/DLT645.c **** {
 349              		.loc 1 881 0
 350              		.cfi_startproc
 351              		@ args = 4, pretend = 0, frame = 8
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 354              	.LVL63:
 355 0000 F0B4     		push	{r4, r5, r6, r7}
 356              	.LCFI5:
 357              		.cfi_def_cfa_offset 16
 358              		.cfi_offset 4, -16
 359              		.cfi_offset 5, -12
 360              		.cfi_offset 6, -8
 361              		.cfi_offset 7, -4
 362 0002 82B0     		sub	sp, sp, #8
 363              	.LCFI6:
 364              		.cfi_def_cfa_offset 24
 365 0004 02AC     		add	r4, sp, #8
 366 0006 04E90300 		stmdb	r4, {r0, r1}
 367 000a 0698     		ldr	r0, [sp, #24]
 882:../user/source/DLT645.c ****     *pLowByte = 0x33 + ((uint8_t)(((pcurrent.value / 10) % 10) << 4) |
 368              		.loc 1 882 0
 369 000c 009E     		ldr	r6, [sp]
 370 000e 2849     		ldr	r1, .L28
 371 0010 A1FB0647 		umull	r4, r7, r1, r6
 372 0014 FF08     		lsrs	r7, r7, #3
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 23


 373 0016 A1FB0754 		umull	r5, r4, r1, r7
 374 001a E408     		lsrs	r4, r4, #3
 375 001c 04EB8404 		add	r4, r4, r4, lsl #2
 376 0020 6500     		lsls	r5, r4, #1
 377 0022 7C1B     		subs	r4, r7, r5
 378 0024 2401     		lsls	r4, r4, #4
 379 0026 E4B2     		uxtb	r4, r4
 883:../user/source/DLT645.c ****                         (uint8_t)(pcurrent.value % 10));
 380              		.loc 1 883 0
 381 0028 07EB8707 		add	r7, r7, r7, lsl #2
 382 002c 7D00     		lsls	r5, r7, #1
 383 002e 751B     		subs	r5, r6, r5
 384 0030 EDB2     		uxtb	r5, r5
 882:../user/source/DLT645.c ****     *pLowByte = 0x33 + ((uint8_t)(((pcurrent.value / 10) % 10) << 4) |
 385              		.loc 1 882 0
 386 0032 2C43     		orrs	r4, r4, r5
 387 0034 3334     		adds	r4, r4, #51
 388 0036 1470     		strb	r4, [r2]
 884:../user/source/DLT645.c ****     *pMidByte = 0x33 + ((uint8_t)(((pcurrent.value / 1000) % 10) << 4) |
 389              		.loc 1 884 0
 390 0038 1E4C     		ldr	r4, .L28+4
 391 003a A4FB0624 		umull	r2, r4, r4, r6
 392              	.LVL64:
 393 003e A409     		lsrs	r4, r4, #6
 394 0040 A1FB0452 		umull	r5, r2, r1, r4
 395 0044 D208     		lsrs	r2, r2, #3
 396 0046 02EB8202 		add	r2, r2, r2, lsl #2
 397 004a 5500     		lsls	r5, r2, #1
 398 004c 621B     		subs	r2, r4, r5
 399 004e 1201     		lsls	r2, r2, #4
 400 0050 D5B2     		uxtb	r5, r2
 885:../user/source/DLT645.c ****                         (uint8_t)((pcurrent.value / 100) % 10));
 401              		.loc 1 885 0
 402 0052 194F     		ldr	r7, .L28+8
 403 0054 A7FB0627 		umull	r2, r7, r7, r6
 404 0058 7F09     		lsrs	r7, r7, #5
 405 005a A1FB0724 		umull	r2, r4, r1, r7
 406 005e E208     		lsrs	r2, r4, #3
 407 0060 02EB8202 		add	r2, r2, r2, lsl #2
 408 0064 5400     		lsls	r4, r2, #1
 409 0066 3A1B     		subs	r2, r7, r4
 410 0068 D2B2     		uxtb	r2, r2
 884:../user/source/DLT645.c ****     *pMidByte = 0x33 + ((uint8_t)(((pcurrent.value / 1000) % 10) << 4) |
 411              		.loc 1 884 0
 412 006a 2A43     		orrs	r2, r2, r5
 413 006c 3332     		adds	r2, r2, #51
 414 006e 1A70     		strb	r2, [r3]
 886:../user/source/DLT645.c ****     *pHighByte = 0x33 + ((uint8_t)((pcurrent.value / 100000) << 4) |
 415              		.loc 1 886 0
 416 0070 7309     		lsrs	r3, r6, #5
 417              	.LVL65:
 418 0072 124A     		ldr	r2, .L28+12
 419 0074 A2FB0332 		umull	r3, r2, r2, r3
 420 0078 D209     		lsrs	r2, r2, #7
 421 007a 1201     		lsls	r2, r2, #4
 422 007c D2B2     		uxtb	r2, r2
 887:../user/source/DLT645.c ****                          (uint8_t)((pcurrent.value / 10000) % 10));
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 24


 423              		.loc 1 887 0
 424 007e 104B     		ldr	r3, .L28+16
 425 0080 A3FB0636 		umull	r3, r6, r3, r6
 426 0084 760B     		lsrs	r6, r6, #13
 427 0086 A1FB0613 		umull	r1, r3, r1, r6
 428 008a D908     		lsrs	r1, r3, #3
 429 008c 01EB8101 		add	r1, r1, r1, lsl #2
 430 0090 4B00     		lsls	r3, r1, #1
 431 0092 F11A     		subs	r1, r6, r3
 432 0094 C9B2     		uxtb	r1, r1
 886:../user/source/DLT645.c ****     *pHighByte = 0x33 + ((uint8_t)((pcurrent.value / 100000) << 4) |
 433              		.loc 1 886 0
 434 0096 1143     		orrs	r1, r1, r2
 435 0098 3331     		adds	r1, r1, #51
 436 009a C9B2     		uxtb	r1, r1
 437 009c 0170     		strb	r1, [r0]
 888:../user/source/DLT645.c ****     if (pcurrent.isminus == true)
 438              		.loc 1 888 0
 439 009e 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 440 00a2 13B1     		cbz	r3, .L25
 889:../user/source/DLT645.c ****     {
 890:../user/source/DLT645.c ****         *pHighByte = *pHighByte | 0x80;
 441              		.loc 1 890 0
 442 00a4 61F07F01 		orn	r1, r1, #127
 443 00a8 0170     		strb	r1, [r0]
 444              	.L25:
 891:../user/source/DLT645.c ****     }
 892:../user/source/DLT645.c **** }
 445              		.loc 1 892 0
 446 00aa 02B0     		add	sp, sp, #8
 447              	.LCFI7:
 448              		.cfi_def_cfa_offset 16
 449              		@ sp needed
 450 00ac F0BC     		pop	{r4, r5, r6, r7}
 451              	.LCFI8:
 452              		.cfi_restore 7
 453              		.cfi_restore 6
 454              		.cfi_restore 5
 455              		.cfi_restore 4
 456              		.cfi_def_cfa_offset 0
 457              	.LVL66:
 458 00ae 7047     		bx	lr
 459              	.L29:
 460              		.align	2
 461              	.L28:
 462 00b0 CDCCCCCC 		.word	-858993459
 463 00b4 D34D6210 		.word	274877907
 464 00b8 1F85EB51 		.word	1374389535
 465 00bc C55A7C0A 		.word	175921861
 466 00c0 5917B7D1 		.word	-776530087
 467              		.cfi_endproc
 468              	.LFE125:
 470              		.section	.text.blCurrentSingle_Modify_Method,"ax",%progbits
 471              		.align	2
 472              		.thumb
 473              		.thumb_func
 475              	blCurrentSingle_Modify_Method:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 25


 476              	.LFB129:
 893:../user/source/DLT645.c **** 
 894:../user/source/DLT645.c **** /********************************************************************
 895:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ĞŞ¸Ä³õÊ¼»¯£º
 896:../user/source/DLT645.c ****  * Êä    Èë£º	none
 897:../user/source/DLT645.c ****  * Êä    ³ö£º	none
 898:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 899:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.10.25
 900:../user/source/DLT645.c ****  **********************************************************************/
 901:../user/source/DLT645.c **** void Voltage_Change_Init(void)
 902:../user/source/DLT645.c **** {
 903:../user/source/DLT645.c ****     uint8_t Vmax1;
 904:../user/source/DLT645.c ****     uint8_t Vmax2;
 905:../user/source/DLT645.c ****     uint8_t Vmin1;
 906:../user/source/DLT645.c ****     uint8_t Vmin2;
 907:../user/source/DLT645.c ****     /*µçÑ¹ĞŞ¸ÄÊ¹ÄÜÎ»³õÊ¼»¯*/
 908:../user/source/DLT645.c ****     Voltage_Change_State = EEProm_Read(FLASH_VChangeState_Addr); //´ÓflashÖĞ¶ÁÈ¡µçÑ¹ĞŞ¸ÄÊ¹ÄÜ×Ö½Ú
 909:../user/source/DLT645.c ****     /*µçÑ¹ĞŞ¸ÄÉÏÏÂÏŞ³õÊ¼»¯*/
 910:../user/source/DLT645.c ****     Vmax1 = EEProm_Read(FLASH_VMAX1_Addr);
 911:../user/source/DLT645.c ****     Vmax2 = EEProm_Read(FLASH_VMAX2_Addr);
 912:../user/source/DLT645.c ****     Vmin1 = EEProm_Read(FLASH_VMIN1_Addr);
 913:../user/source/DLT645.c ****     Vmin2 = EEProm_Read(FLASH_VMIN2_Addr);
 914:../user/source/DLT645.c **** 
 915:../user/source/DLT645.c ****     if ((Vmax1 == 0xff) &&
 916:../user/source/DLT645.c ****         (Vmax2 == 0xff) &&
 917:../user/source/DLT645.c ****         (Vmin1 == 0xff) &&
 918:../user/source/DLT645.c ****         (Vmin2 == 0xff))
 919:../user/source/DLT645.c ****     {
 920:../user/source/DLT645.c ****         Voltage_MAX = Voltage_MAX_Default; //ÉèÖÃµçÑ¹ºÏ¸ñÉÏÏÂÏŞÄ¬ÈÏÖµ
 921:../user/source/DLT645.c ****         Voltage_MIN = Voltage_MIN_Default;
 922:../user/source/DLT645.c ****     }
 923:../user/source/DLT645.c ****     else
 924:../user/source/DLT645.c ****     {
 925:../user/source/DLT645.c ****         Voltage_MAX = Get_Voltage(Vmax1, Vmax2); //flashÖĞ´æ´¢µÄÊÇ654¶ÔÓ¦Ö¡×Ö½Ú£¬Á½¸ö×Ö½Ú
 926:../user/source/DLT645.c ****         Voltage_MIN = Get_Voltage(Vmin1, Vmin2);
 927:../user/source/DLT645.c ****     }
 928:../user/source/DLT645.c **** }
 929:../user/source/DLT645.c **** 
 930:../user/source/DLT645.c **** /*****************************************************
 931:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ºÏ¸ñÂÊµ÷Õû²ßÂÔ
 932:../user/source/DLT645.c ****  * Êä    Èë£º
 933:../user/source/DLT645.c ****  * Êä    ³ö£º
 934:../user/source/DLT645.c ****  * Ëµ    Ã÷£ºµçÑ¹Æ«Ğ¡Ğèµ÷½ÚÊ±£¬ÒÔMINÎª»ù×¼£¬½«Voltage¾µÏñ£¬Èô¾µÏñµã³¬¹ıMAX£¬ÒÀ´Î¼õĞ¡ÓĞĞ§Çø¼äÖµ£¨MAX
 935:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 936:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 937:../user/source/DLT645.c ****  *******************************************************/
 938:../user/source/DLT645.c **** int Voltage_Modifier_Method(int Voltage)
 939:../user/source/DLT645.c **** {
 940:../user/source/DLT645.c ****     int n = 0;
 941:../user/source/DLT645.c ****     int m = 0;
 942:../user/source/DLT645.c ****     int i = 0;
 943:../user/source/DLT645.c ****     n = (Voltage_MIN - Voltage_MIN_MIN) / (Voltage_MAX - Voltage_MIN) + 1; //(198-120)/(235-198)+1»
 944:../user/source/DLT645.c ****     m = (Voltage_MAX_MAX - Voltage_MAX) / (Voltage_MAX - Voltage_MIN) + 1; //(260-235)/(235-198)+1»
 945:../user/source/DLT645.c ****     if ((Voltage > Voltage_MAX) && (Voltage <= Voltage_MAX_MAX))
 946:../user/source/DLT645.c ****     {
 947:../user/source/DLT645.c ****         if (Voltage <= (Voltage_MAX + (Voltage_MAX - Voltage_MIN)))
 948:../user/source/DLT645.c ****         {
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 26


 949:../user/source/DLT645.c ****             Voltage = Voltage - (Voltage - Voltage_MAX) * 2;
 950:../user/source/DLT645.c ****             return Voltage;
 951:../user/source/DLT645.c ****         }
 952:../user/source/DLT645.c ****         else
 953:../user/source/DLT645.c ****         {
 954:../user/source/DLT645.c ****             for (i = 1; i < m; i++)
 955:../user/source/DLT645.c ****             {
 956:../user/source/DLT645.c ****                 if (Voltage <= (Voltage_MAX + (Voltage_MAX - Voltage_MIN) * (i + 1)))
 957:../user/source/DLT645.c ****                 {
 958:../user/source/DLT645.c ****                     Voltage = Voltage - (Voltage_MAX - Voltage_MIN) * (i + 1);
 959:../user/source/DLT645.c ****                     return Voltage;
 960:../user/source/DLT645.c ****                 }
 961:../user/source/DLT645.c ****             }
 962:../user/source/DLT645.c ****         }
 963:../user/source/DLT645.c ****     }
 964:../user/source/DLT645.c ****     if ((Voltage < Voltage_MIN) && (Voltage >= Voltage_MIN_MIN))
 965:../user/source/DLT645.c ****     {
 966:../user/source/DLT645.c ****         if (Voltage >= (Voltage_MIN - (Voltage_MAX - Voltage_MIN)))
 967:../user/source/DLT645.c ****         {
 968:../user/source/DLT645.c ****             Voltage = Voltage + (Voltage_MIN - Voltage) * 2;
 969:../user/source/DLT645.c ****             return Voltage;
 970:../user/source/DLT645.c ****         }
 971:../user/source/DLT645.c ****         else
 972:../user/source/DLT645.c ****         {
 973:../user/source/DLT645.c ****             for (i = 1; i < n; i++)
 974:../user/source/DLT645.c ****             {
 975:../user/source/DLT645.c ****                 if (Voltage >= (Voltage_MIN - (Voltage_MAX - Voltage_MIN) * (i + 1)))
 976:../user/source/DLT645.c ****                 {
 977:../user/source/DLT645.c ****                     Voltage = Voltage + (Voltage_MAX - Voltage_MIN) * (i + 1);
 978:../user/source/DLT645.c ****                     return Voltage;
 979:../user/source/DLT645.c ****                 }
 980:../user/source/DLT645.c ****             }
 981:../user/source/DLT645.c ****         }
 982:../user/source/DLT645.c ****     }
 983:../user/source/DLT645.c ****     return Voltage;
 984:../user/source/DLT645.c **** }
 985:../user/source/DLT645.c **** /*****************************************************
 986:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºĞŞ¸Äµç±í×´Ì¬×ÖÖĞµÄµçÁ÷·´Ïò¡¢µçÁ÷¶ÌÂ·¡¢µçÁ÷¶ÏÂ·×´Ì¬×Ö
 987:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 988:../user/source/DLT645.c ****  * Êä    ³ö£º
 989:../user/source/DLT645.c ****  *           
 990:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 991:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.5.23
 992:../user/source/DLT645.c ****  *******************************************************/
 993:../user/source/DLT645.c **** void Estatus_Modify_CurrentEvent(uint8_t *pucBuffer)
 994:../user/source/DLT645.c **** {
 995:../user/source/DLT645.c ****     uint16_t estatus = 0x0000;
 996:../user/source/DLT645.c ****     int i = 0;
 997:../user/source/DLT645.c ****     uint8_t ucCheckData = 0x0;
 998:../user/source/DLT645.c ****     switch (pucBuffer[10])
 999:../user/source/DLT645.c ****     {
1000:../user/source/DLT645.c ****     case 0x37: //×´Ì¬×Ö4,AÏà×´Ì¬×Ö
1001:../user/source/DLT645.c ****     {
1002:../user/source/DLT645.c ****         //BIT4,BIT6,bit8 ÖÃ0->11111110 10101111:
1003:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[14], pucBuffer[15]);
1004:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
1005:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 27


1006:../user/source/DLT645.c ****         break;
1007:../user/source/DLT645.c ****     }
1008:../user/source/DLT645.c ****     case 0x38: //×´Ì¬×Ö5,BÏà×´Ì¬×Ö
1009:../user/source/DLT645.c ****     {
1010:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[14], pucBuffer[15]); //[14][15]×ª»»Îª¶ş½øÖÆ
1011:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
1012:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
1013:../user/source/DLT645.c ****         break;
1014:../user/source/DLT645.c ****     }
1015:../user/source/DLT645.c ****     case 0x39: //×´Ì¬×Ö6,CÏà×´Ì¬×Ö
1016:../user/source/DLT645.c ****     {
1017:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[14], pucBuffer[15]); //[14][15]×ª»»Îª¶ş½øÖÆ
1018:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
1019:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
1020:../user/source/DLT645.c ****         break;
1021:../user/source/DLT645.c ****     }
1022:../user/source/DLT645.c ****     case 0x3A: //×´Ì¬×Ö7£¬ºÏÏà×´Ì¬×Ö
1023:../user/source/DLT645.c ****     {
1024:../user/source/DLT645.c ****         estatus = 0xFFF7 & Get_Estatus(pucBuffer[14], pucBuffer[15]); //BIT3=0   11111111 11110111
1025:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
1026:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
1027:../user/source/DLT645.c ****         break;
1028:../user/source/DLT645.c ****     }
1029:../user/source/DLT645.c ****     case 0x32: //×´Ì¬×ÖÊı¾İ¿é
1030:../user/source/DLT645.c ****     {
1031:../user/source/DLT645.c ****         //1:[14][15] 2:[16][17] 3:[18][19] 4:[20][21] 5:[22][23] 6:[24][25] 7:[26][27]
1032:../user/source/DLT645.c ****         //×´Ì¬×Ö4,AÏà×´Ì¬×Ö
1033:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[20], pucBuffer[21]); //BIT4,BIT6,bit8 =0->11111110
1034:../user/source/DLT645.c ****         pucBuffer[20] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
1035:../user/source/DLT645.c ****         pucBuffer[21] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
1036:../user/source/DLT645.c ****         //×´Ì¬×Ö5,BÏà×´Ì¬×Ö
1037:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[22], pucBuffer[23]);
1038:../user/source/DLT645.c ****         pucBuffer[22] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
1039:../user/source/DLT645.c ****         pucBuffer[23] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
1040:../user/source/DLT645.c ****         //×´Ì¬×Ö6,CÏà×´Ì¬×Ö
1041:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[24], pucBuffer[25]);
1042:../user/source/DLT645.c ****         pucBuffer[24] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
1043:../user/source/DLT645.c ****         pucBuffer[25] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
1044:../user/source/DLT645.c ****         //×´Ì¬×Ö7£¬ºÏÏà×´Ì¬×Ö
1045:../user/source/DLT645.c ****         estatus = 0xFFF7 & Get_Estatus(pucBuffer[26], pucBuffer[27]);
1046:../user/source/DLT645.c ****         pucBuffer[26] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
1047:../user/source/DLT645.c ****         pucBuffer[27] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
1048:../user/source/DLT645.c ****         break;
1049:../user/source/DLT645.c ****     }
1050:../user/source/DLT645.c ****     default:
1051:../user/source/DLT645.c ****         break;
1052:../user/source/DLT645.c ****     }
1053:../user/source/DLT645.c ****     for (i = 0; i < uc645DataDomainLength + 10; i++)
1054:../user/source/DLT645.c ****     {
1055:../user/source/DLT645.c ****         ucCheckData += pucBuffer[i];
1056:../user/source/DLT645.c ****     }
1057:../user/source/DLT645.c ****     pucBuffer[uc645DataDomainLength + 10] = ucCheckData;
1058:../user/source/DLT645.c **** }
1059:../user/source/DLT645.c **** 
1060:../user/source/DLT645.c **** /*****************************************************
1061:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµ¥ÏàµçÁ÷ĞŞ¸Ä·½·¨
1062:../user/source/DLT645.c ****  * Êä    Èë£ºÁ½Ïà²Î¿¼µçÁ÷£¬Ò»ÏàĞèĞŞ¸ÄµçÁ÷
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 28


1063:../user/source/DLT645.c ****  * Êä    ³ö£ºµçÁ÷²»ĞèÒªĞŞ¸Ä£¬Êä³öfalse
1064:../user/source/DLT645.c ****  *           µçÁ÷ÒÑĞŞ¸Ä£¬Êä³ötrue
1065:../user/source/DLT645.c ****  * Ëµ	  Ã÷£º
1066:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1067:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.12.13
1068:../user/source/DLT645.c ****  *******************************************************/
1069:../user/source/DLT645.c **** bool blCurrentSingle_Modify_Method(CURRENT *ref1, CURRENT *ref2, CURRENT *result) //×¢ÊÍÖĞ¸ù¾İBÏàºÍ
1070:../user/source/DLT645.c **** {
 477              		.loc 1 1070 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481              		@ link register save eliminated.
 482              	.LVL67:
 483 0000 30B4     		push	{r4, r5}
 484              	.LCFI9:
 485              		.cfi_def_cfa_offset 8
 486              		.cfi_offset 4, -8
 487              		.cfi_offset 5, -4
1071:../user/source/DLT645.c ****     //if Acurrent->count>Bcurrent->count && Acurrent->count>Ccurrent->count,ÏÈA£¬²»ĞŞ¸Ä
1072:../user/source/DLT645.c ****     //if Bcurrent->count=Acurrent->count && Acurrent->count>Ccurrent->count,ÏÈB£¬ºóA£¬¸ù¾İBĞŞ¸ÄA
1073:../user/source/DLT645.c ****     //if Ccurrent->count=Acurrent->count && Acurrent->count>Bcurrent->count,ÏÈC£¬ºóA£¬¸ù¾İCĞŞ¸ÄA
1074:../user/source/DLT645.c ****     //if Bcurrent->count=Ccurrent->count && Acurrent->count<Ccurrent->count,ÏÈBC£¬ºóA£¬¸ù¾İBCĞŞ¸ÄA
1075:../user/source/DLT645.c ****     if ((result->count > ref1->count) &&
 488              		.loc 1 1075 0
 489 0002 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 490 0004 0479     		ldrb	r4, [r0, #4]	@ zero_extendqisi2
 491 0006 A342     		cmp	r3, r4
 492 0008 03D9     		bls	.L31
1076:../user/source/DLT645.c ****         (result->count > ref2->count)) //ÏÈresultÏà£¬²»ĞŞ¸Ä
 493              		.loc 1 1076 0 discriminator 1
 494 000a 0D79     		ldrb	r5, [r1, #4]	@ zero_extendqisi2
1075:../user/source/DLT645.c ****         (result->count > ref2->count)) //ÏÈresultÏà£¬²»ĞŞ¸Ä
 495              		.loc 1 1075 0 discriminator 1
 496 000c AB42     		cmp	r3, r5
 497 000e 00F2AF80 		bhi	.L41
 498              	.L31:
1077:../user/source/DLT645.c ****         return false;
1078:../user/source/DLT645.c ****     else if ((result->count == ref1->count) &&
 499              		.loc 1 1078 0
 500 0012 A342     		cmp	r3, r4
 501 0014 34D1     		bne	.L33
1079:../user/source/DLT645.c ****              (result->count > ref2->count)) //ÏÈref1Ïà£¬ºóresultÏà,¸ù¾İref1ĞŞ¸Äresult
 502              		.loc 1 1079 0 discriminator 1
 503 0016 0D79     		ldrb	r5, [r1, #4]	@ zero_extendqisi2
1078:../user/source/DLT645.c ****              (result->count > ref2->count)) //ÏÈref1Ïà£¬ºóresultÏà,¸ù¾İref1ĞŞ¸Äresult
 504              		.loc 1 1078 0 discriminator 1
 505 0018 AB42     		cmp	r3, r5
 506 001a 31D9     		bls	.L33
1080:../user/source/DLT645.c ****     {
1081:../user/source/DLT645.c ****         if (ref1->value == 0 ||
 507              		.loc 1 1081 0
 508 001c 0368     		ldr	r3, [r0]
 509 001e 002B     		cmp	r3, #0
 510 0020 00F0A880 		beq	.L42
1082:../user/source/DLT645.c ****             result->value == 0 ||
 511              		.loc 1 1082 0 discriminator 1
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 29


 512 0024 1168     		ldr	r1, [r2]
 513              	.LVL68:
1081:../user/source/DLT645.c ****             result->value == 0 ||
 514              		.loc 1 1081 0 discriminator 1
 515 0026 0029     		cmp	r1, #0
 516 0028 00F0A680 		beq	.L43
1083:../user/source/DLT645.c ****             ref1->isminus ||
 517              		.loc 1 1083 0
 518 002c 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2
 519              	.LVL69:
1082:../user/source/DLT645.c ****             result->value == 0 ||
 520              		.loc 1 1082 0
 521 002e 0028     		cmp	r0, #0
 522 0030 40F0A480 		bne	.L44
1084:../user/source/DLT645.c ****             result->isminus)
 523              		.loc 1 1084 0
 524 0034 5479     		ldrb	r4, [r2, #5]	@ zero_extendqisi2
1083:../user/source/DLT645.c ****             ref1->isminus ||
 525              		.loc 1 1083 0
 526 0036 002C     		cmp	r4, #0
 527 0038 40F0B580 		bne	.L32
1085:../user/source/DLT645.c ****             return false; //ÒÑ¾­ÊÕµ½µÄÁ½ÏàµçÁ÷ÖĞ£¬ÓĞ0Öµ£¬»òÕßÓĞ¸ºÖµ£¬²»×öĞŞ¸Ä
1086:../user/source/DLT645.c ****         if (result->value < ref1->value)
 528              		.loc 1 1086 0
 529 003c 8B42     		cmp	r3, r1
 530 003e 0CD9     		bls	.L34
1087:../user/source/DLT645.c ****         {
1088:../user/source/DLT645.c ****             //ÈôresultĞ¡£¬resultĞŞ¸ÄÎªref1µÄ¹Ì¶¨±ÈÀı£ºCURRENT_MAX_DVALUE/100
1089:../user/source/DLT645.c ****             result->value = ((result->value < (CURRENT_MAX_DVALUE * ref1->value / 100))
1090:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * ref1->value / 100
 531              		.loc 1 1090 0
 532 0040 03EB8303 		add	r3, r3, r3, lsl #2
 533 0044 1801     		lsls	r0, r3, #4
 534 0046 594B     		ldr	r3, .L56
 535 0048 A3FB0003 		umull	r0, r3, r3, r0
 536 004c 5B09     		lsrs	r3, r3, #5
1091:../user/source/DLT645.c ****                                  : result->value);
 537              		.loc 1 1091 0
 538 004e 9942     		cmp	r1, r3
 539 0050 38BF     		it	cc
 540 0052 1946     		movcc	r1, r3
1089:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * ref1->value / 100
 541              		.loc 1 1089 0
 542 0054 1160     		str	r1, [r2]
1092:../user/source/DLT645.c ****         }
1093:../user/source/DLT645.c ****         else
1094:../user/source/DLT645.c ****         {
1095:../user/source/DLT645.c ****             //Èôresult´ó£¬resultĞŞ¸ÄÎªref1µÄ¹Ì¶¨±ÈÀı£º100/CURRENT_MAX_DVALUE£»²»³¬¹ı·¶Î§»òÕßref1µÈÓ
1096:../user/source/DLT645.c ****             result->value = ((CURRENT_MAX_DVALUE * result->value / 100 > ref1->value)
1097:../user/source/DLT645.c ****                                  ? 100 * ref1->value / CURRENT_MAX_DVALUE
1098:../user/source/DLT645.c ****                                  : result->value);
1099:../user/source/DLT645.c ****         }
1100:../user/source/DLT645.c ****         return true;
 543              		.loc 1 1100 0
 544 0056 0120     		movs	r0, #1
 545 0058 A5E0     		b	.L32
 546              	.L34:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 30


1096:../user/source/DLT645.c ****                                  ? 100 * ref1->value / CURRENT_MAX_DVALUE
 547              		.loc 1 1096 0
 548 005a 01EB8104 		add	r4, r1, r1, lsl #2
 549 005e 2001     		lsls	r0, r4, #4
 550 0060 524C     		ldr	r4, .L56
 551 0062 A4FB0040 		umull	r4, r0, r4, r0
1098:../user/source/DLT645.c ****         }
 552              		.loc 1 1098 0
 553 0066 B3EB501F 		cmp	r3, r0, lsr #5
 554 006a 06D2     		bcs	.L35
1097:../user/source/DLT645.c ****                                  : result->value);
 555              		.loc 1 1097 0 discriminator 1
 556 006c 6421     		movs	r1, #100
 557 006e 01FB03F3 		mul	r3, r1, r3
1098:../user/source/DLT645.c ****         }
 558              		.loc 1 1098 0 discriminator 1
 559 0072 4F49     		ldr	r1, .L56+4
 560 0074 A1FB0331 		umull	r3, r1, r1, r3
 561 0078 8909     		lsrs	r1, r1, #6
 562              	.L35:
1096:../user/source/DLT645.c ****                                  ? 100 * ref1->value / CURRENT_MAX_DVALUE
 563              		.loc 1 1096 0
 564 007a 1160     		str	r1, [r2]
 565              		.loc 1 1100 0
 566 007c 0120     		movs	r0, #1
 567 007e 92E0     		b	.L32
 568              	.LVL70:
 569              	.L33:
1101:../user/source/DLT645.c ****     }
1102:../user/source/DLT645.c ****     else if ((result->count == ref2->count) &&
 570              		.loc 1 1102 0
 571 0080 0D79     		ldrb	r5, [r1, #4]	@ zero_extendqisi2
 572 0082 AB42     		cmp	r3, r5
 573 0084 30D1     		bne	.L36
 574              		.loc 1 1102 0 is_stmt 0 discriminator 1
 575 0086 A342     		cmp	r3, r4
 576 0088 2ED9     		bls	.L36
1103:../user/source/DLT645.c ****              (result->count > ref1->count)) //ÏÈref2Ïà£¬ºóresultÏà£¬¸ù¾İref2ĞŞ¸Äresult
1104:../user/source/DLT645.c ****     {
1105:../user/source/DLT645.c ****         if (ref2->value == 0 ||
 577              		.loc 1 1105 0 is_stmt 1
 578 008a 0B68     		ldr	r3, [r1]
 579 008c 002B     		cmp	r3, #0
 580 008e 77D0     		beq	.L45
1106:../user/source/DLT645.c ****             result->value == 0 ||
 581              		.loc 1 1106 0 discriminator 1
 582 0090 1468     		ldr	r4, [r2]
1105:../user/source/DLT645.c ****             result->value == 0 ||
 583              		.loc 1 1105 0 discriminator 1
 584 0092 002C     		cmp	r4, #0
 585 0094 76D0     		beq	.L46
1107:../user/source/DLT645.c ****             ref2->isminus ||
 586              		.loc 1 1107 0
 587 0096 4879     		ldrb	r0, [r1, #5]	@ zero_extendqisi2
 588              	.LVL71:
1106:../user/source/DLT645.c ****             result->value == 0 ||
 589              		.loc 1 1106 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 31


 590 0098 0028     		cmp	r0, #0
 591 009a 75D1     		bne	.L47
1108:../user/source/DLT645.c ****             result->isminus)
 592              		.loc 1 1108 0
 593 009c 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 594              	.LVL72:
1107:../user/source/DLT645.c ****             ref2->isminus ||
 595              		.loc 1 1107 0
 596 009e 0029     		cmp	r1, #0
 597 00a0 40F08180 		bne	.L32
1109:../user/source/DLT645.c ****             return false;
1110:../user/source/DLT645.c ****         if (result->value < ref2->value)
 598              		.loc 1 1110 0
 599 00a4 A342     		cmp	r3, r4
 600 00a6 0CD9     		bls	.L37
1111:../user/source/DLT645.c ****         {
1112:../user/source/DLT645.c ****             result->value = ((result->value < (CURRENT_MAX_DVALUE * ref2->value / 100))
1113:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * ref2->value / 100
 601              		.loc 1 1113 0
 602 00a8 03EB8303 		add	r3, r3, r3, lsl #2
 603 00ac 1901     		lsls	r1, r3, #4
 604 00ae 3F4B     		ldr	r3, .L56
 605 00b0 A3FB0113 		umull	r1, r3, r3, r1
 606 00b4 5B09     		lsrs	r3, r3, #5
1114:../user/source/DLT645.c ****                                  : result->value);
 607              		.loc 1 1114 0
 608 00b6 9C42     		cmp	r4, r3
 609 00b8 38BF     		it	cc
 610 00ba 1C46     		movcc	r4, r3
1112:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * ref2->value / 100
 611              		.loc 1 1112 0
 612 00bc 1460     		str	r4, [r2]
1115:../user/source/DLT645.c ****         }
1116:../user/source/DLT645.c ****         else
1117:../user/source/DLT645.c ****         {
1118:../user/source/DLT645.c ****             result->value = ((CURRENT_MAX_DVALUE * result->value / 100 > ref2->value)
1119:../user/source/DLT645.c ****                                  ? 100 * ref2->value / CURRENT_MAX_DVALUE
1120:../user/source/DLT645.c ****                                  : result->value);
1121:../user/source/DLT645.c ****         }
1122:../user/source/DLT645.c ****         return true;
 613              		.loc 1 1122 0
 614 00be 0120     		movs	r0, #1
 615 00c0 71E0     		b	.L32
 616              	.L37:
1118:../user/source/DLT645.c ****                                  ? 100 * ref2->value / CURRENT_MAX_DVALUE
 617              		.loc 1 1118 0
 618 00c2 04EB8400 		add	r0, r4, r4, lsl #2
 619 00c6 0101     		lsls	r1, r0, #4
 620 00c8 3848     		ldr	r0, .L56
 621 00ca A0FB0101 		umull	r0, r1, r0, r1
1120:../user/source/DLT645.c ****         }
 622              		.loc 1 1120 0
 623 00ce B3EB511F 		cmp	r3, r1, lsr #5
 624 00d2 06D2     		bcs	.L38
1119:../user/source/DLT645.c ****                                  : result->value);
 625              		.loc 1 1119 0 discriminator 1
 626 00d4 6424     		movs	r4, #100
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 32


 627 00d6 04FB03F3 		mul	r3, r4, r3
1120:../user/source/DLT645.c ****         }
 628              		.loc 1 1120 0 discriminator 1
 629 00da 354C     		ldr	r4, .L56+4
 630 00dc A4FB0334 		umull	r3, r4, r4, r3
 631 00e0 A409     		lsrs	r4, r4, #6
 632              	.L38:
1118:../user/source/DLT645.c ****                                  ? 100 * ref2->value / CURRENT_MAX_DVALUE
 633              		.loc 1 1118 0
 634 00e2 1460     		str	r4, [r2]
 635              		.loc 1 1122 0
 636 00e4 0120     		movs	r0, #1
 637 00e6 5EE0     		b	.L32
 638              	.LVL73:
 639              	.L36:
1123:../user/source/DLT645.c ****     }
1124:../user/source/DLT645.c ****     else if ((result->count == ref1->count) &&
 640              		.loc 1 1124 0
 641 00e8 A342     		cmp	r3, r4
 642 00ea 4FD1     		bne	.L48
 643              		.loc 1 1124 0 is_stmt 0 discriminator 1
 644 00ec AB42     		cmp	r3, r5
 645 00ee 4FD1     		bne	.L49
1125:../user/source/DLT645.c ****              (result->count == ref2->count)) //Ç°Á½ÏàÊÇref1ºÍref2£¬×îºóÊÇresultÏà
1126:../user/source/DLT645.c ****     {
1127:../user/source/DLT645.c ****         if ((ref1->value == 0) ||
 646              		.loc 1 1127 0 is_stmt 1
 647 00f0 0368     		ldr	r3, [r0]
 648 00f2 002B     		cmp	r3, #0
 649 00f4 4ED0     		beq	.L50
1128:../user/source/DLT645.c ****             (ref2->value == 0) ||
 650              		.loc 1 1128 0 discriminator 1
 651 00f6 0C68     		ldr	r4, [r1]
1127:../user/source/DLT645.c ****             (ref2->value == 0) ||
 652              		.loc 1 1127 0 discriminator 1
 653 00f8 002C     		cmp	r4, #0
 654 00fa 4DD0     		beq	.L51
1129:../user/source/DLT645.c ****             (result->value == 0) ||
 655              		.loc 1 1129 0
 656 00fc 1568     		ldr	r5, [r2]
1128:../user/source/DLT645.c ****             (ref2->value == 0) ||
 657              		.loc 1 1128 0
 658 00fe 002D     		cmp	r5, #0
 659 0100 4CD0     		beq	.L52
1130:../user/source/DLT645.c ****             ref1->isminus ||
 660              		.loc 1 1130 0
 661 0102 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2
 662              	.LVL74:
1129:../user/source/DLT645.c ****             (result->value == 0) ||
 663              		.loc 1 1129 0
 664 0104 0028     		cmp	r0, #0
 665 0106 4BD1     		bne	.L53
1131:../user/source/DLT645.c ****             ref2->isminus ||
 666              		.loc 1 1131 0
 667 0108 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 668              	.LVL75:
1130:../user/source/DLT645.c ****             ref1->isminus ||
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 33


 669              		.loc 1 1130 0
 670 010a 0029     		cmp	r1, #0
 671 010c 4BD1     		bne	.L32
1132:../user/source/DLT645.c ****             result->isminus)
 672              		.loc 1 1132 0
 673 010e 5079     		ldrb	r0, [r2, #5]	@ zero_extendqisi2
1131:../user/source/DLT645.c ****             ref2->isminus ||
 674              		.loc 1 1131 0
 675 0110 0028     		cmp	r0, #0
 676 0112 47D1     		bne	.L54
1133:../user/source/DLT645.c ****             return false;
1134:../user/source/DLT645.c ****         if (result->value > MAX(ref1->value, ref2->value)) //result±ÈÇ°Á½Ïà¶¼´ó£¬resultĞŞ¸ÄÎª½ÏĞ¡Öµ
 677              		.loc 1 1134 0
 678 0114 1946     		mov	r1, r3
 679 0116 A342     		cmp	r3, r4
 680 0118 38BF     		it	cc
 681 011a 2146     		movcc	r1, r4
 682 011c 8D42     		cmp	r5, r1
 683 011e 15D9     		bls	.L39
1135:../user/source/DLT645.c ****         {
1136:../user/source/DLT645.c ****             result->value = (CURRENT_MAX_DVALUE * result->value / 100 >= MIN(ref1->value, ref2->val
 684              		.loc 1 1136 0
 685 0120 05EB8500 		add	r0, r5, r5, lsl #2
 686 0124 0101     		lsls	r1, r0, #4
 687 0126 2148     		ldr	r0, .L56
 688 0128 A0FB0101 		umull	r0, r1, r0, r1
 689 012c A342     		cmp	r3, r4
 690 012e 28BF     		it	cs
 691 0130 2346     		movcs	r3, r4
1137:../user/source/DLT645.c ****                                  ? 100 * MIN(ref1->value, ref2->value) / CURRENT_MAX_DVALUE
1138:../user/source/DLT645.c ****                                  : result->value);
 692              		.loc 1 1138 0
 693 0132 B3EB511F 		cmp	r3, r1, lsr #5
 694 0136 06D8     		bhi	.L40
1137:../user/source/DLT645.c ****                                  ? 100 * MIN(ref1->value, ref2->value) / CURRENT_MAX_DVALUE
 695              		.loc 1 1137 0 discriminator 1
 696 0138 6425     		movs	r5, #100
 697 013a 05FB03F3 		mul	r3, r5, r3
 698              		.loc 1 1138 0 discriminator 1
 699 013e 1C4D     		ldr	r5, .L56+4
 700 0140 A5FB0335 		umull	r3, r5, r5, r3
 701 0144 AD09     		lsrs	r5, r5, #6
 702              	.L40:
1136:../user/source/DLT645.c ****                                  ? 100 * MIN(ref1->value, ref2->value) / CURRENT_MAX_DVALUE
 703              		.loc 1 1136 0
 704 0146 1560     		str	r5, [r2]
1139:../user/source/DLT645.c ****         }
1140:../user/source/DLT645.c ****         else if (result->value < MIN(ref1->value, ref2->value)) //result±ÈÇ°Á½Ïà¶¼Ğ¡£¬resultĞŞ¸ÄÎª½
1141:../user/source/DLT645.c ****         {
1142:../user/source/DLT645.c ****             result->value = ((result->value < CURRENT_MAX_DVALUE * MAX(ref1->value, ref2->value) / 
1143:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * MAX(ref1->value, ref2->value) / 100
1144:../user/source/DLT645.c ****                                  : result->value);
1145:../user/source/DLT645.c ****         }
1146:../user/source/DLT645.c ****         else //resultÔÚref1ºÍref2Ö®¼ä£¬ÒòÎªÇ°Á½Ö¡²îÖµÒÑ±£Ö¤²»³¬³ö·¶Î§£¬ËùÒÔresult²»ĞèÒªĞŞ¸Ä
1147:../user/source/DLT645.c ****         {
1148:../user/source/DLT645.c ****             return false;
1149:../user/source/DLT645.c ****         }
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 34


1150:../user/source/DLT645.c ****         return true;
 705              		.loc 1 1150 0
 706 0148 0120     		movs	r0, #1
 707 014a 2CE0     		b	.L32
 708              	.L39:
1140:../user/source/DLT645.c ****         {
 709              		.loc 1 1140 0
 710 014c A342     		cmp	r3, r4
 711 014e 28BF     		it	cs
 712 0150 2346     		movcs	r3, r4
 713 0152 9D42     		cmp	r5, r3
 714 0154 27D2     		bcs	.L32
1143:../user/source/DLT645.c ****                                  : result->value);
 715              		.loc 1 1143 0
 716 0156 01EB8101 		add	r1, r1, r1, lsl #2
 717 015a 0B01     		lsls	r3, r1, #4
 718 015c 1349     		ldr	r1, .L56
 719 015e A1FB0313 		umull	r1, r3, r1, r3
 720 0162 5B09     		lsrs	r3, r3, #5
1144:../user/source/DLT645.c ****         }
 721              		.loc 1 1144 0
 722 0164 9D42     		cmp	r5, r3
 723 0166 38BF     		it	cc
 724 0168 1D46     		movcc	r5, r3
1142:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * MAX(ref1->value, ref2->value) / 100
 725              		.loc 1 1142 0
 726 016a 1560     		str	r5, [r2]
 727              		.loc 1 1150 0
 728 016c 0120     		movs	r0, #1
 729 016e 1AE0     		b	.L32
 730              	.LVL76:
 731              	.L41:
1077:../user/source/DLT645.c ****     else if ((result->count == ref1->count) &&
 732              		.loc 1 1077 0
 733 0170 0020     		movs	r0, #0
 734              	.LVL77:
 735 0172 18E0     		b	.L32
 736              	.LVL78:
 737              	.L42:
1085:../user/source/DLT645.c ****         if (result->value < ref1->value)
 738              		.loc 1 1085 0
 739 0174 0020     		movs	r0, #0
 740              	.LVL79:
 741 0176 16E0     		b	.L32
 742              	.LVL80:
 743              	.L43:
 744 0178 0020     		movs	r0, #0
 745              	.LVL81:
 746 017a 14E0     		b	.L32
 747              	.L44:
 748 017c 0020     		movs	r0, #0
 749 017e 12E0     		b	.L32
 750              	.LVL82:
 751              	.L45:
1109:../user/source/DLT645.c ****         if (result->value < ref2->value)
 752              		.loc 1 1109 0
 753 0180 0020     		movs	r0, #0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 35


 754              	.LVL83:
 755 0182 10E0     		b	.L32
 756              	.LVL84:
 757              	.L46:
 758 0184 0020     		movs	r0, #0
 759              	.LVL85:
 760 0186 0EE0     		b	.L32
 761              	.L47:
 762 0188 0020     		movs	r0, #0
 763 018a 0CE0     		b	.L32
 764              	.LVL86:
 765              	.L48:
1151:../user/source/DLT645.c ****     }
1152:../user/source/DLT645.c ****     return true;
 766              		.loc 1 1152 0
 767 018c 0120     		movs	r0, #1
 768              	.LVL87:
 769 018e 0AE0     		b	.L32
 770              	.LVL88:
 771              	.L49:
 772 0190 0120     		movs	r0, #1
 773              	.LVL89:
 774 0192 08E0     		b	.L32
 775              	.LVL90:
 776              	.L50:
1133:../user/source/DLT645.c ****         if (result->value > MAX(ref1->value, ref2->value)) //result±ÈÇ°Á½Ïà¶¼´ó£¬resultĞŞ¸ÄÎª½ÏĞ¡Öµ
 777              		.loc 1 1133 0
 778 0194 0020     		movs	r0, #0
 779              	.LVL91:
 780 0196 06E0     		b	.L32
 781              	.LVL92:
 782              	.L51:
 783 0198 0020     		movs	r0, #0
 784              	.LVL93:
 785 019a 04E0     		b	.L32
 786              	.LVL94:
 787              	.L52:
 788 019c 0020     		movs	r0, #0
 789              	.LVL95:
 790 019e 02E0     		b	.L32
 791              	.L53:
 792 01a0 0020     		movs	r0, #0
 793 01a2 00E0     		b	.L32
 794              	.LVL96:
 795              	.L54:
 796 01a4 0846     		mov	r0, r1
 797              	.L32:
1153:../user/source/DLT645.c **** }
 798              		.loc 1 1153 0
 799 01a6 30BC     		pop	{r4, r5}
 800              	.LCFI10:
 801              		.cfi_restore 5
 802              		.cfi_restore 4
 803              		.cfi_def_cfa_offset 0
 804 01a8 7047     		bx	lr
 805              	.L57:
 806 01aa 00BF     		.align	2
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 36


 807              	.L56:
 808 01ac 1F85EB51 		.word	1374389535
 809 01b0 CDCCCCCC 		.word	-858993459
 810              		.cfi_endproc
 811              	.LFE129:
 813              		.section	.text.vCurrentTriple_Modify_Method,"ax",%progbits
 814              		.align	2
 815              		.thumb
 816              		.thumb_func
 818              	vCurrentTriple_Modify_Method:
 819              	.LFB130:
1154:../user/source/DLT645.c **** 
1155:../user/source/DLT645.c **** /*****************************************************
1156:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÈıÏàµçÁ÷ĞŞ¸Ä·½·¨
1157:../user/source/DLT645.c ****  * Êä    Èë£ºÈıÏà²Î¿¼µçÁ÷
1158:../user/source/DLT645.c ****  * Êä    ³ö£ºÎŞ
1159:../user/source/DLT645.c ****  * Ëµ	  Ã÷£º×î´óµçÁ÷Öµ¸ÄÎªÆ½¾ùÖµµÄ1.1±¶£¬ÖĞ¼äÖµ¸ÄÎªÆ½¾ùÖµ£¬×îĞ¡Öµ¸ÄÎªÆ½¾ùÖµµÄ90%£¬
1160:../user/source/DLT645.c ****  *				´ËÊ±×î´óµçÁ÷ÖµºÍ×îµçÁ÷ÖµµÄ²îÖµÊÇ×î´óÖµµÄ18.18%
1161:../user/source/DLT645.c ****  *				
1162:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1163:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.12.13
1164:../user/source/DLT645.c ****  *******************************************************/
1165:../user/source/DLT645.c **** void vCurrentTriple_Modify_Method(CURRENT *current_max, CURRENT *current_mid, CURRENT *current_min)
1166:../user/source/DLT645.c **** {
 820              		.loc 1 1166 0
 821              		.cfi_startproc
 822              		@ args = 0, pretend = 0, frame = 0
 823              		@ frame_needed = 0, uses_anonymous_args = 0
 824              		@ link register save eliminated.
 825              	.LVL97:
 826 0000 30B4     		push	{r4, r5}
 827              	.LCFI11:
 828              		.cfi_def_cfa_offset 8
 829              		.cfi_offset 4, -8
 830              		.cfi_offset 5, -4
1167:../user/source/DLT645.c ****     uint32_t current_average;
1168:../user/source/DLT645.c ****     current_average = (current_max->value + current_mid->value + current_min->value) / 3;
 831              		.loc 1 1168 0
 832 0002 0468     		ldr	r4, [r0]
 833 0004 0B68     		ldr	r3, [r1]
 834 0006 1C44     		add	r4, r4, r3
 835 0008 1368     		ldr	r3, [r2]
 836 000a 2344     		add	r3, r3, r4
 837 000c 0324     		movs	r4, #3
 838 000e B3FBF4F3 		udiv	r3, r3, r4
 839              	.LVL98:
1169:../user/source/DLT645.c ****     current_max->value = current_average * 11 / 10; //×î´óÖµ¸ÄÎªÆ½¾ùÖµµÄ110%
 840              		.loc 1 1169 0
 841 0012 0B24     		movs	r4, #11
 842 0014 04FB03F4 		mul	r4, r4, r3
 843 0018 0A25     		movs	r5, #10
 844 001a B4FBF5F4 		udiv	r4, r4, r5
 845 001e 0460     		str	r4, [r0]
1170:../user/source/DLT645.c ****     current_mid->value = current_average;           //ÖĞ¼äÖµ¸ÄÎªÆ½¾ùÖµ
 846              		.loc 1 1170 0
 847 0020 0B60     		str	r3, [r1]
1171:../user/source/DLT645.c ****     current_min->value = current_average * 9 / 10;  //×îĞ¡Öµ¸ÄÎªÆ½¾ùÖµµÄ90%£»
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 37


 848              		.loc 1 1171 0
 849 0022 03EBC303 		add	r3, r3, r3, lsl #3
 850              	.LVL99:
 851 0026 B3FBF5F3 		udiv	r3, r3, r5
 852 002a 1360     		str	r3, [r2]
 853              	.LVL100:
1172:../user/source/DLT645.c **** }
 854              		.loc 1 1172 0
 855 002c 30BC     		pop	{r4, r5}
 856              	.LCFI12:
 857              		.cfi_restore 5
 858              		.cfi_restore 4
 859              		.cfi_def_cfa_offset 0
 860 002e 7047     		bx	lr
 861              		.cfi_endproc
 862              	.LFE130:
 864              		.section	.text.vCurrent_Modify,"ax",%progbits
 865              		.align	2
 866              		.global	vCurrent_Modify
 867              		.thumb
 868              		.thumb_func
 870              	vCurrent_Modify:
 871              	.LFB131:
1173:../user/source/DLT645.c **** 
1174:../user/source/DLT645.c **** /*****************************************************
1175:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºĞŞ¸ÄµçÁ÷¸÷Ïà²îÖµ
1176:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
1177:../user/source/DLT645.c ****  * Êä    ³ö£ºÎŞ
1178:../user/source/DLT645.c ****  * Ëµ	  Ã÷£ºµ¥ÏàµçÁ÷£ºÈôÈÎÒâÁ½Ïà²îÖµ´óÓÚ20%µÄ½Ï´óÖµ£¬Ôò½«½ÏĞ¡Öµ¸ÄÎª½Ï´óÖµµÄ80%          
1179:../user/source/DLT645.c ****  *				ÈıÏàµçÁ÷£º°´ÕÕ×ÜºÍ²»±äÀ´ĞŞ¸Ä
1180:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1181:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.12.13
1182:../user/source/DLT645.c ****  *******************************************************/
1183:../user/source/DLT645.c **** void vCurrent_Modify(uint8_t *pucBuffer)
1184:../user/source/DLT645.c **** {
 872              		.loc 1 1184 0
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 0
 875              		@ frame_needed = 0, uses_anonymous_args = 0
 876              	.LVL101:
 877 0000 30B5     		push	{r4, r5, lr}
 878              	.LCFI13:
 879              		.cfi_def_cfa_offset 12
 880              		.cfi_offset 4, -12
 881              		.cfi_offset 5, -8
 882              		.cfi_offset 14, -4
 883 0002 83B0     		sub	sp, sp, #12
 884              	.LCFI14:
 885              		.cfi_def_cfa_offset 24
 886 0004 0446     		mov	r4, r0
 887              	.LVL102:
1185:../user/source/DLT645.c ****     uint8_t i;
1186:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
1187:../user/source/DLT645.c ****     switch (pucBuffer[11])
 888              		.loc 1 1187 0
 889 0006 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 890 0008 323B     		subs	r3, r3, #50
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 38


 891 000a 042B     		cmp	r3, #4
 892 000c 00F22C81 		bhi	.L60
 893 0010 DFE813F0 		tbh	[pc, r3, lsl #1]
 894              	.L63:
 895 0014 0500     		.2byte	(.L62-.L63)/2
 896 0016 2A01     		.2byte	(.L60-.L63)/2
 897 0018 AB00     		.2byte	(.L64-.L63)/2
 898 001a D600     		.2byte	(.L65-.L63)/2
 899 001c 0101     		.2byte	(.L66-.L63)/2
 900              		.p2align 1
 901              	.L62:
1188:../user/source/DLT645.c ****     {
1189:../user/source/DLT645.c ****     case 0x32: //ÈıÏàµçÁ÷Êı¾İ¿é
1190:../user/source/DLT645.c ****     {
1191:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Acurrent);
 902              		.loc 1 1191 0
 903 001e 934D     		ldr	r5, .L82
 904 0020 2B46     		mov	r3, r5
 905 0022 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 906 0024 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 907 0026 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 908              	.LVL103:
 909 0028 FFF7FEFF 		bl	vGet_Current
 910              	.LVL104:
1192:../user/source/DLT645.c ****         /*µçÁ÷Îª¸ºÖµ,²»ĞŞ¸ÄµçÁ÷*/
1193:../user/source/DLT645.c ****         if (Acurrent.isminus || Bcurrent.isminus || Ccurrent.isminus)
 911              		.loc 1 1193 0
 912 002c 6B79     		ldrb	r3, [r5, #5]	@ zero_extendqisi2
 913 002e 002B     		cmp	r3, #0
 914 0030 40F01A81 		bne	.L60
 915              		.loc 1 1193 0 is_stmt 0 discriminator 1
 916 0034 8E4B     		ldr	r3, .L82+4
 917 0036 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 918 0038 002B     		cmp	r3, #0
 919 003a 40F01581 		bne	.L60
 920              		.loc 1 1193 0 discriminator 2
 921 003e 8D4B     		ldr	r3, .L82+8
 922 0040 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 923 0042 002B     		cmp	r3, #0
 924 0044 40F01081 		bne	.L60
1194:../user/source/DLT645.c ****             return;
1195:../user/source/DLT645.c ****         /*µçÁ÷Îª0£¬²»ĞŞ¸ÄµçÁ÷*/
1196:../user/source/DLT645.c ****         if ((Acurrent.value == 0) || (Bcurrent.value == 0) || (Ccurrent.value == 0))
 925              		.loc 1 1196 0 is_stmt 1
 926 0048 2B68     		ldr	r3, [r5]
 927 004a 002B     		cmp	r3, #0
 928 004c 00F00C81 		beq	.L60
 929              		.loc 1 1196 0 is_stmt 0 discriminator 1
 930 0050 874A     		ldr	r2, .L82+4
 931 0052 1268     		ldr	r2, [r2]
 932 0054 002A     		cmp	r2, #0
 933 0056 00F00781 		beq	.L60
 934              		.loc 1 1196 0 discriminator 2
 935 005a 8649     		ldr	r1, .L82+8
 936 005c 0868     		ldr	r0, [r1]
 937 005e 0028     		cmp	r0, #0
 938 0060 00F00281 		beq	.L60
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 39


1197:../user/source/DLT645.c ****             return;
1198:../user/source/DLT645.c ****         /*µçÁ÷Ïà»¥Ö®¼ä²»³¬²î£¬²»ĞŞ¸ÄµçÁ÷*/
1199:../user/source/DLT645.c ****         if (CURRENT_MAX_DVALUE * MAX(Acurrent.value, MAX(Bcurrent.value, Ccurrent.value)) / 100 <=
 939              		.loc 1 1199 0 is_stmt 1
 940 0064 1146     		mov	r1, r2
 941 0066 8242     		cmp	r2, r0
 942 0068 38BF     		it	cc
 943 006a 0146     		movcc	r1, r0
 944 006c 9942     		cmp	r1, r3
 945 006e 38BF     		it	cc
 946 0070 1946     		movcc	r1, r3
 947 0072 01EB8101 		add	r1, r1, r1, lsl #2
 948 0076 0D01     		lsls	r5, r1, #4
 949 0078 7F49     		ldr	r1, .L82+12
 950 007a A1FB0515 		umull	r1, r5, r1, r5
1200:../user/source/DLT645.c ****             MIN(Acurrent.value, MIN(Bcurrent.value, Ccurrent.value)))
 951              		.loc 1 1200 0
 952 007e 1146     		mov	r1, r2
 953 0080 8242     		cmp	r2, r0
 954 0082 28BF     		it	cs
 955 0084 0146     		movcs	r1, r0
 956 0086 9942     		cmp	r1, r3
 957 0088 28BF     		it	cs
 958 008a 1946     		movcs	r1, r3
1199:../user/source/DLT645.c ****             MIN(Acurrent.value, MIN(Bcurrent.value, Ccurrent.value)))
 959              		.loc 1 1199 0
 960 008c B1EB551F 		cmp	r1, r5, lsr #5
 961 0090 80F0EA80 		bcs	.L60
1201:../user/source/DLT645.c ****             return;
1202:../user/source/DLT645.c ****         else //ĞèÒªĞŞ¸Ä£¬×î´óÖµ¼õĞ¡£¬×îĞ¡ÖµÔö´ó£¬Ê£ÏÂµÄÊÇÖĞ¼äÖµ
1203:../user/source/DLT645.c ****         {
1204:../user/source/DLT645.c ****             if ((Acurrent.value >= Bcurrent.value) &&
 962              		.loc 1 1204 0
 963 0094 9342     		cmp	r3, r2
 964 0096 07D3     		bcc	.L67
 965              		.loc 1 1204 0 is_stmt 0 discriminator 1
 966 0098 8242     		cmp	r2, r0
 967 009a 05D3     		bcc	.L67
1205:../user/source/DLT645.c ****                 (Bcurrent.value >= Ccurrent.value))
1206:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Acurrent, &Bcurrent, &Ccurrent);
 968              		.loc 1 1206 0 is_stmt 1
 969 009c 754A     		ldr	r2, .L82+8
 970 009e 7449     		ldr	r1, .L82+4
 971 00a0 7248     		ldr	r0, .L82
 972 00a2 FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 973              	.LVL105:
 974 00a6 30E0     		b	.L68
 975              	.L67:
1207:../user/source/DLT645.c **** 
1208:../user/source/DLT645.c ****             else if ((Acurrent.value >= Ccurrent.value) &&
 976              		.loc 1 1208 0
 977 00a8 8342     		cmp	r3, r0
 978 00aa 07D3     		bcc	.L69
 979              		.loc 1 1208 0 is_stmt 0 discriminator 1
 980 00ac 8242     		cmp	r2, r0
 981 00ae 05D8     		bhi	.L69
1209:../user/source/DLT645.c ****                      (Ccurrent.value >= Bcurrent.value))
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 40


1210:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Acurrent, &Ccurrent, &Bcurrent);
 982              		.loc 1 1210 0 is_stmt 1
 983 00b0 6F4A     		ldr	r2, .L82+4
 984 00b2 7049     		ldr	r1, .L82+8
 985 00b4 6D48     		ldr	r0, .L82
 986 00b6 FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 987              	.LVL106:
 988 00ba 26E0     		b	.L68
 989              	.L69:
1211:../user/source/DLT645.c **** 
1212:../user/source/DLT645.c ****             else if ((Bcurrent.value >= Acurrent.value) &&
 990              		.loc 1 1212 0
 991 00bc 9342     		cmp	r3, r2
 992 00be 07D8     		bhi	.L70
 993              		.loc 1 1212 0 is_stmt 0 discriminator 1
 994 00c0 8342     		cmp	r3, r0
 995 00c2 05D3     		bcc	.L70
1213:../user/source/DLT645.c ****                      (Acurrent.value >= Ccurrent.value))
1214:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Bcurrent, &Acurrent, &Ccurrent);
 996              		.loc 1 1214 0 is_stmt 1
 997 00c4 6B4A     		ldr	r2, .L82+8
 998 00c6 6949     		ldr	r1, .L82
 999 00c8 6948     		ldr	r0, .L82+4
 1000 00ca FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 1001              	.LVL107:
 1002 00ce 1CE0     		b	.L68
 1003              	.L70:
1215:../user/source/DLT645.c **** 
1216:../user/source/DLT645.c ****             else if ((Bcurrent.value >= Ccurrent.value) &&
 1004              		.loc 1 1216 0
 1005 00d0 8242     		cmp	r2, r0
 1006 00d2 07D3     		bcc	.L71
 1007              		.loc 1 1216 0 is_stmt 0 discriminator 1
 1008 00d4 8342     		cmp	r3, r0
 1009 00d6 05D8     		bhi	.L71
1217:../user/source/DLT645.c ****                      (Ccurrent.value >= Acurrent.value))
1218:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Bcurrent, &Ccurrent, &Acurrent);
 1010              		.loc 1 1218 0 is_stmt 1
 1011 00d8 644A     		ldr	r2, .L82
 1012 00da 6649     		ldr	r1, .L82+8
 1013 00dc 6448     		ldr	r0, .L82+4
 1014 00de FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 1015              	.LVL108:
 1016 00e2 12E0     		b	.L68
 1017              	.L71:
1219:../user/source/DLT645.c **** 
1220:../user/source/DLT645.c ****             else if ((Ccurrent.value >= Acurrent.value) &&
 1018              		.loc 1 1220 0
 1019 00e4 8342     		cmp	r3, r0
 1020 00e6 07D8     		bhi	.L72
 1021              		.loc 1 1220 0 is_stmt 0 discriminator 1
 1022 00e8 9342     		cmp	r3, r2
 1023 00ea 05D3     		bcc	.L72
1221:../user/source/DLT645.c ****                      (Acurrent.value >= Bcurrent.value))
1222:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Ccurrent, &Acurrent, &Bcurrent);
 1024              		.loc 1 1222 0 is_stmt 1
 1025 00ec 604A     		ldr	r2, .L82+4
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 41


 1026 00ee 5F49     		ldr	r1, .L82
 1027 00f0 6048     		ldr	r0, .L82+8
 1028 00f2 FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 1029              	.LVL109:
 1030 00f6 08E0     		b	.L68
 1031              	.L72:
1223:../user/source/DLT645.c **** 
1224:../user/source/DLT645.c ****             else if ((Ccurrent.value >= Bcurrent.value) &&
 1032              		.loc 1 1224 0
 1033 00f8 8242     		cmp	r2, r0
 1034 00fa 06D8     		bhi	.L68
 1035              		.loc 1 1224 0 is_stmt 0 discriminator 1
 1036 00fc 9342     		cmp	r3, r2
 1037 00fe 04D8     		bhi	.L68
1225:../user/source/DLT645.c ****                      (Bcurrent.value >= Acurrent.value))
1226:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Ccurrent, &Bcurrent, &Acurrent);
 1038              		.loc 1 1226 0 is_stmt 1
 1039 0100 5A4A     		ldr	r2, .L82
 1040 0102 5B49     		ldr	r1, .L82+4
 1041 0104 5B48     		ldr	r0, .L82+8
 1042 0106 FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 1043              	.LVL110:
 1044              	.L68:
1227:../user/source/DLT645.c ****             //AÏàµçÁ÷,Ê®½øÖÆÊı×ªBCDÂë
1228:../user/source/DLT645.c ****             vPut_Current(Acurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
 1045              		.loc 1 1228 0
 1046 010a 584D     		ldr	r5, .L82
 1047 010c 04F11003 		add	r3, r4, #16
 1048 0110 0093     		str	r3, [sp]
 1049 0112 04F10F03 		add	r3, r4, #15
 1050 0116 04F10E02 		add	r2, r4, #14
 1051 011a 95E80300 		ldmia	r5, {r0, r1}
 1052 011e FFF7FEFF 		bl	vPut_Current
 1053              	.LVL111:
1229:../user/source/DLT645.c ****             //BÏàµçÁ÷
1230:../user/source/DLT645.c ****             vPut_Current(Acurrent, &pucBuffer[17], &pucBuffer[18], &pucBuffer[19]);
 1054              		.loc 1 1230 0
 1055 0122 04F11303 		add	r3, r4, #19
 1056 0126 0093     		str	r3, [sp]
 1057 0128 04F11203 		add	r3, r4, #18
 1058 012c 04F11102 		add	r2, r4, #17
 1059 0130 95E80300 		ldmia	r5, {r0, r1}
 1060 0134 FFF7FEFF 		bl	vPut_Current
 1061              	.LVL112:
1231:../user/source/DLT645.c ****             //CÏàµçÁ÷
1232:../user/source/DLT645.c ****             vPut_Current(Acurrent, &pucBuffer[20], &pucBuffer[21], &pucBuffer[22]);
 1062              		.loc 1 1232 0
 1063 0138 04F11603 		add	r3, r4, #22
 1064 013c 0093     		str	r3, [sp]
 1065 013e 04F11503 		add	r3, r4, #21
 1066 0142 04F11402 		add	r2, r4, #20
 1067 0146 95E80300 		ldmia	r5, {r0, r1}
 1068 014a FFF7FEFF 		bl	vPut_Current
 1069              	.LVL113:
1186:../user/source/DLT645.c ****     switch (pucBuffer[11])
 1070              		.loc 1 1186 0
 1071 014e 0022     		movs	r2, #0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 42


1233:../user/source/DLT645.c ****             for (i = 0; i < 23; i++) //Êı¾İÓò³¤¶È23
 1072              		.loc 1 1233 0
 1073 0150 1346     		mov	r3, r2
 1074 0152 04E0     		b	.L73
 1075              	.LVL114:
 1076              	.L74:
1234:../user/source/DLT645.c ****             {
1235:../user/source/DLT645.c ****                 ucCheckData += pucBuffer[i];
 1077              		.loc 1 1235 0 discriminator 3
 1078 0154 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 1079 0156 0A44     		add	r2, r2, r1
 1080              	.LVL115:
 1081 0158 D2B2     		uxtb	r2, r2
 1082              	.LVL116:
1233:../user/source/DLT645.c ****             for (i = 0; i < 23; i++) //Êı¾İÓò³¤¶È23
 1083              		.loc 1 1233 0 discriminator 3
 1084 015a 0133     		adds	r3, r3, #1
 1085              	.LVL117:
 1086 015c DBB2     		uxtb	r3, r3
 1087              	.LVL118:
 1088              	.L73:
1233:../user/source/DLT645.c ****             for (i = 0; i < 23; i++) //Êı¾İÓò³¤¶È23
 1089              		.loc 1 1233 0 is_stmt 0 discriminator 1
 1090 015e 162B     		cmp	r3, #22
 1091 0160 F8D9     		bls	.L74
1236:../user/source/DLT645.c ****             }
1237:../user/source/DLT645.c ****             pucBuffer[23] = ucCheckData;
 1092              		.loc 1 1237 0 is_stmt 1
 1093 0162 E275     		strb	r2, [r4, #23]
1238:../user/source/DLT645.c ****             pucBuffer[24] = 0x16;
 1094              		.loc 1 1238 0
 1095 0164 1623     		movs	r3, #22
 1096              	.LVL119:
 1097 0166 2376     		strb	r3, [r4, #24]
1239:../user/source/DLT645.c ****         }
1240:../user/source/DLT645.c ****         break;
 1098              		.loc 1 1240 0
 1099 0168 7EE0     		b	.L60
 1100              	.LVL120:
 1101              	.L64:
1241:../user/source/DLT645.c ****     }
1242:../user/source/DLT645.c ****     case 0x34: //AÏàµçÁ÷
1243:../user/source/DLT645.c ****     {
1244:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Acurrent);
 1102              		.loc 1 1244 0
 1103 016a 404B     		ldr	r3, .L82
 1104 016c 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 1105 016e C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1106 0170 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1107              	.LVL121:
 1108 0172 FFF7FEFF 		bl	vGet_Current
 1109              	.LVL122:
1245:../user/source/DLT645.c ****         if (((pucBuffer[16] - 0x33) & 0x80) != 0)
 1110              		.loc 1 1245 0
 1111 0176 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1112 0178 333B     		subs	r3, r3, #51
 1113 017a 13F0800F 		tst	r3, #128
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 43


 1114 017e 73D1     		bne	.L60
1246:../user/source/DLT645.c ****         {
1247:../user/source/DLT645.c ****             return;
1248:../user/source/DLT645.c ****         }
1249:../user/source/DLT645.c ****         if (blCurrentSingle_Modify_Method(&Bcurrent, &Ccurrent, &Acurrent)) //¸ù¾İBÏàºÍCÏàµçÁ÷ĞŞ¸ÄA
 1115              		.loc 1 1249 0
 1116 0180 3A4A     		ldr	r2, .L82
 1117 0182 3C49     		ldr	r1, .L82+8
 1118 0184 3A48     		ldr	r0, .L82+4
 1119 0186 FFF7FEFF 		bl	blCurrentSingle_Modify_Method
 1120              	.LVL123:
 1121 018a 0028     		cmp	r0, #0
 1122 018c 6CD0     		beq	.L60
1250:../user/source/DLT645.c ****         {
1251:../user/source/DLT645.c ****             //AÏàµçÁ÷,Ê®½øÖÆÊı×ªBCDÂë
1252:../user/source/DLT645.c ****             vPut_Current(Acurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
 1123              		.loc 1 1252 0
 1124 018e 3749     		ldr	r1, .L82
 1125 0190 04F11003 		add	r3, r4, #16
 1126 0194 0093     		str	r3, [sp]
 1127 0196 04F10F03 		add	r3, r4, #15
 1128 019a 04F10E02 		add	r2, r4, #14
 1129 019e 03C9     		ldmia	r1, {r0, r1}
 1130 01a0 FFF7FEFF 		bl	vPut_Current
 1131              	.LVL124:
1186:../user/source/DLT645.c ****     switch (pucBuffer[11])
 1132              		.loc 1 1186 0
 1133 01a4 0022     		movs	r2, #0
1253:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1134              		.loc 1 1253 0
 1135 01a6 1346     		mov	r3, r2
 1136 01a8 04E0     		b	.L75
 1137              	.LVL125:
 1138              	.L76:
1254:../user/source/DLT645.c ****             {
1255:../user/source/DLT645.c ****                 ucCheckData += pucBuffer[i];
 1139              		.loc 1 1255 0 discriminator 3
 1140 01aa E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 1141 01ac 0A44     		add	r2, r2, r1
 1142              	.LVL126:
 1143 01ae D2B2     		uxtb	r2, r2
 1144              	.LVL127:
1253:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1145              		.loc 1 1253 0 discriminator 3
 1146 01b0 0133     		adds	r3, r3, #1
 1147              	.LVL128:
 1148 01b2 DBB2     		uxtb	r3, r3
 1149              	.LVL129:
 1150              	.L75:
1253:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1151              		.loc 1 1253 0 is_stmt 0 discriminator 1
 1152 01b4 102B     		cmp	r3, #16
 1153 01b6 F8D9     		bls	.L76
1256:../user/source/DLT645.c ****             }
1257:../user/source/DLT645.c ****             pucBuffer[17] = ucCheckData;
 1154              		.loc 1 1257 0 is_stmt 1
 1155 01b8 6274     		strb	r2, [r4, #17]
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 44


1258:../user/source/DLT645.c ****             pucBuffer[18] = 0x16;
 1156              		.loc 1 1258 0
 1157 01ba 1623     		movs	r3, #22
 1158              	.LVL130:
 1159 01bc A374     		strb	r3, [r4, #18]
 1160 01be 53E0     		b	.L60
 1161              	.LVL131:
 1162              	.L65:
1259:../user/source/DLT645.c ****         }
1260:../user/source/DLT645.c ****         break;
1261:../user/source/DLT645.c ****     }
1262:../user/source/DLT645.c ****     case 0x35: //BÏàµçÁ÷
1263:../user/source/DLT645.c ****     {
1264:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Bcurrent);
 1163              		.loc 1 1264 0
 1164 01c0 2B4B     		ldr	r3, .L82+4
 1165 01c2 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 1166 01c4 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1167 01c6 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1168              	.LVL132:
 1169 01c8 FFF7FEFF 		bl	vGet_Current
 1170              	.LVL133:
1265:../user/source/DLT645.c **** 
1266:../user/source/DLT645.c ****         if (((pucBuffer[16] - 0x33) & 0x80) != 0) //µçÁ÷ÊÇ¸ºÖµ
 1171              		.loc 1 1266 0
 1172 01cc 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1173 01ce 333B     		subs	r3, r3, #51
 1174 01d0 13F0800F 		tst	r3, #128
 1175 01d4 48D1     		bne	.L60
1267:../user/source/DLT645.c ****         {
1268:../user/source/DLT645.c ****             return;
1269:../user/source/DLT645.c ****         }
1270:../user/source/DLT645.c ****         if (blCurrentSingle_Modify_Method(&Acurrent, &Ccurrent, &Bcurrent)) //¸ù¾İAÏàºÍCÏàĞŞ¸ÄBÏàµç
 1176              		.loc 1 1270 0
 1177 01d6 264A     		ldr	r2, .L82+4
 1178 01d8 2649     		ldr	r1, .L82+8
 1179 01da 2448     		ldr	r0, .L82
 1180 01dc FFF7FEFF 		bl	blCurrentSingle_Modify_Method
 1181              	.LVL134:
 1182 01e0 0028     		cmp	r0, #0
 1183 01e2 41D0     		beq	.L60
1271:../user/source/DLT645.c ****         {
1272:../user/source/DLT645.c ****             //BÏàµçÁ÷,Ê®½øÖÆÊı×ªBCDÂë
1273:../user/source/DLT645.c ****             vPut_Current(Bcurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
 1184              		.loc 1 1273 0
 1185 01e4 2249     		ldr	r1, .L82+4
 1186 01e6 04F11003 		add	r3, r4, #16
 1187 01ea 0093     		str	r3, [sp]
 1188 01ec 04F10F03 		add	r3, r4, #15
 1189 01f0 04F10E02 		add	r2, r4, #14
 1190 01f4 03C9     		ldmia	r1, {r0, r1}
 1191 01f6 FFF7FEFF 		bl	vPut_Current
 1192              	.LVL135:
1186:../user/source/DLT645.c ****     switch (pucBuffer[11])
 1193              		.loc 1 1186 0
 1194 01fa 0022     		movs	r2, #0
1274:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 45


 1195              		.loc 1 1274 0
 1196 01fc 1346     		mov	r3, r2
 1197 01fe 04E0     		b	.L77
 1198              	.LVL136:
 1199              	.L78:
1275:../user/source/DLT645.c ****             {
1276:../user/source/DLT645.c ****                 ucCheckData += pucBuffer[i];
 1200              		.loc 1 1276 0 discriminator 3
 1201 0200 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 1202 0202 0A44     		add	r2, r2, r1
 1203              	.LVL137:
 1204 0204 D2B2     		uxtb	r2, r2
 1205              	.LVL138:
1274:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1206              		.loc 1 1274 0 discriminator 3
 1207 0206 0133     		adds	r3, r3, #1
 1208              	.LVL139:
 1209 0208 DBB2     		uxtb	r3, r3
 1210              	.LVL140:
 1211              	.L77:
1274:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1212              		.loc 1 1274 0 is_stmt 0 discriminator 1
 1213 020a 102B     		cmp	r3, #16
 1214 020c F8D9     		bls	.L78
1277:../user/source/DLT645.c ****             }
1278:../user/source/DLT645.c ****             pucBuffer[17] = ucCheckData;
 1215              		.loc 1 1278 0 is_stmt 1
 1216 020e 6274     		strb	r2, [r4, #17]
1279:../user/source/DLT645.c ****             pucBuffer[18] = 0x16;
 1217              		.loc 1 1279 0
 1218 0210 1623     		movs	r3, #22
 1219              	.LVL141:
 1220 0212 A374     		strb	r3, [r4, #18]
 1221 0214 28E0     		b	.L60
 1222              	.LVL142:
 1223              	.L66:
1280:../user/source/DLT645.c ****         }
1281:../user/source/DLT645.c ****         break;
1282:../user/source/DLT645.c ****     }
1283:../user/source/DLT645.c ****     case 0x36: //CÏàµçÁ÷
1284:../user/source/DLT645.c ****     {
1285:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Ccurrent);
 1224              		.loc 1 1285 0
 1225 0216 174B     		ldr	r3, .L82+8
 1226 0218 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 1227 021a C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1228 021c 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1229              	.LVL143:
 1230 021e FFF7FEFF 		bl	vGet_Current
 1231              	.LVL144:
1286:../user/source/DLT645.c **** 
1287:../user/source/DLT645.c ****         if (((pucBuffer[16] - 0x33) & 0x80) != 0)
 1232              		.loc 1 1287 0
 1233 0222 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1234 0224 333B     		subs	r3, r3, #51
 1235 0226 13F0800F 		tst	r3, #128
 1236 022a 1DD1     		bne	.L60
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 46


1288:../user/source/DLT645.c ****         {
1289:../user/source/DLT645.c ****             return;
1290:../user/source/DLT645.c ****         }
1291:../user/source/DLT645.c ****         if (blCurrentSingle_Modify_Method(&Acurrent, &Bcurrent, &Ccurrent)) //¸ù¾İAÏàºÍBÏàĞŞ¸ÄCÏàµç
 1237              		.loc 1 1291 0
 1238 022c 114A     		ldr	r2, .L82+8
 1239 022e 1049     		ldr	r1, .L82+4
 1240 0230 0E48     		ldr	r0, .L82
 1241 0232 FFF7FEFF 		bl	blCurrentSingle_Modify_Method
 1242              	.LVL145:
 1243 0236 B8B1     		cbz	r0, .L60
1292:../user/source/DLT645.c ****         {
1293:../user/source/DLT645.c ****             //BÏàµçÁ÷,Ê®½øÖÆÊı×ªBCDÂë
1294:../user/source/DLT645.c ****             vPut_Current(Ccurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
 1244              		.loc 1 1294 0
 1245 0238 0E49     		ldr	r1, .L82+8
 1246 023a 04F11003 		add	r3, r4, #16
 1247 023e 0093     		str	r3, [sp]
 1248 0240 04F10F03 		add	r3, r4, #15
 1249 0244 04F10E02 		add	r2, r4, #14
 1250 0248 03C9     		ldmia	r1, {r0, r1}
 1251 024a FFF7FEFF 		bl	vPut_Current
 1252              	.LVL146:
1186:../user/source/DLT645.c ****     switch (pucBuffer[11])
 1253              		.loc 1 1186 0
 1254 024e 0022     		movs	r2, #0
1295:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È16
 1255              		.loc 1 1295 0
 1256 0250 1346     		mov	r3, r2
 1257 0252 04E0     		b	.L79
 1258              	.LVL147:
 1259              	.L80:
1296:../user/source/DLT645.c ****             {
1297:../user/source/DLT645.c ****                 ucCheckData += pucBuffer[i];
 1260              		.loc 1 1297 0 discriminator 3
 1261 0254 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 1262 0256 0A44     		add	r2, r2, r1
 1263              	.LVL148:
 1264 0258 D2B2     		uxtb	r2, r2
 1265              	.LVL149:
1295:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È16
 1266              		.loc 1 1295 0 discriminator 3
 1267 025a 0133     		adds	r3, r3, #1
 1268              	.LVL150:
 1269 025c DBB2     		uxtb	r3, r3
 1270              	.LVL151:
 1271              	.L79:
1295:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È16
 1272              		.loc 1 1295 0 is_stmt 0 discriminator 1
 1273 025e 102B     		cmp	r3, #16
 1274 0260 F8D9     		bls	.L80
1298:../user/source/DLT645.c ****             }
1299:../user/source/DLT645.c ****             pucBuffer[17] = ucCheckData;
 1275              		.loc 1 1299 0 is_stmt 1
 1276 0262 6274     		strb	r2, [r4, #17]
1300:../user/source/DLT645.c ****             pucBuffer[18] = 0x16;
 1277              		.loc 1 1300 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 47


 1278 0264 1623     		movs	r3, #22
 1279              	.LVL152:
 1280 0266 A374     		strb	r3, [r4, #18]
 1281              	.LVL153:
 1282              	.L60:
1301:../user/source/DLT645.c ****         }
1302:../user/source/DLT645.c ****         break;
1303:../user/source/DLT645.c ****     }
1304:../user/source/DLT645.c ****     }
1305:../user/source/DLT645.c **** }
 1283              		.loc 1 1305 0
 1284 0268 03B0     		add	sp, sp, #12
 1285              	.LCFI15:
 1286              		.cfi_def_cfa_offset 12
 1287              		@ sp needed
 1288 026a 30BD     		pop	{r4, r5, pc}
 1289              	.LVL154:
 1290              	.L83:
 1291              		.align	2
 1292              	.L82:
 1293 026c 00000000 		.word	.LANCHOR1
 1294 0270 00000000 		.word	.LANCHOR2
 1295 0274 00000000 		.word	.LANCHOR3
 1296 0278 1F85EB51 		.word	1374389535
 1297              		.cfi_endproc
 1298              	.LFE131:
 1300              		.section	.text.vCurrent_Limit_Modify,"ax",%progbits
 1301              		.align	2
 1302              		.global	vCurrent_Limit_Modify
 1303              		.thumb
 1304              		.thumb_func
 1306              	vCurrent_Limit_Modify:
 1307              	.LFB133:
1306:../user/source/DLT645.c **** 
1307:../user/source/DLT645.c **** /********************************************************************
1308:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı³õÊ¼»¯
1309:../user/source/DLT645.c ****  * Êä    Èë£ºµçÁ÷Ö¡Êı×éÖ¸Õë
1310:../user/source/DLT645.c ****  * Êä    ³ö£º
1311:../user/source/DLT645.c ****  *           
1312:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1313:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ16:13:30
1314:../user/source/DLT645.c ****  **********************************************************************/
1315:../user/source/DLT645.c **** void vCurrent_Limit_DefaultSet(void)
1316:../user/source/DLT645.c **** {
1317:../user/source/DLT645.c ****     uint32_t uwLimit;
1318:../user/source/DLT645.c ****     uint32_t uwCTratio;
1319:../user/source/DLT645.c **** /*±äÑ¹Æ÷ÈİÁ¿ºÍ¶î¶¨µçÁ÷³ö³§¹Ì»¯£¬²»ÔÊĞíĞŞ¸Ä*/
1320:../user/source/DLT645.c **** #ifdef TRANSFORMER_CAPACITY_50KVA
1321:../user/source/DLT645.c ****     TransFormer.capacity = 50;
1322:../user/source/DLT645.c ****     TransFormer.rated_current = 72000;
1323:../user/source/DLT645.c **** #endif
1324:../user/source/DLT645.c **** 
1325:../user/source/DLT645.c **** #ifdef TRANSFORMER_CAPACITY_100KVA
1326:../user/source/DLT645.c ****     TransFormer.capacity = 100;
1327:../user/source/DLT645.c ****     TransFormer.rated_current = 144000;
1328:../user/source/DLT645.c **** #endif
1329:../user/source/DLT645.c **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 48


1330:../user/source/DLT645.c **** #ifdef TRANSFORMER_CAPACITY_200KVA
1331:../user/source/DLT645.c ****     TransFormer.capacity = 200;
1332:../user/source/DLT645.c ****     TransFormer.rated_current = 288000;
1333:../user/source/DLT645.c **** #endif
1334:../user/source/DLT645.c **** 
1335:../user/source/DLT645.c **** #ifdef TRANSFORMER_CAPACITY_400KVA
1336:../user/source/DLT645.c ****     TransFormer.capacity = 400;
1337:../user/source/DLT645.c ****     TransFormer.rated_current = 577000;
1338:../user/source/DLT645.c **** #endif
1339:../user/source/DLT645.c ****     /*´ÓFLASH¶ÁÈ¡±äÑ¹Æ÷¶ş´Î²àCT±ä±È*/
1340:../user/source/DLT645.c ****     uwCTratio = Flash_Read_Word(FLASH_CURRENT_LIMIT_RATIO_ADDR);
1341:../user/source/DLT645.c ****     /*±ä±ÈÎŞĞ§ £¬ÔòÎª³õ´ÎÉÏµç*/
1342:../user/source/DLT645.c ****     if (uwCTratio == 0xFFFFFFFF)
1343:../user/source/DLT645.c ****     {
1344:../user/source/DLT645.c ****         /*CTÉèÖÃÎª80*/
1345:../user/source/DLT645.c ****         TransFormer.CTratio = 80;
1346:../user/source/DLT645.c ****         /*´æ´¢CTÖµ*/
1347:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_CURRENT_LIMIT_RATIO_ADDR, TransFormer.CTratio);
1348:../user/source/DLT645.c ****     }
1349:../user/source/DLT645.c ****     else
1350:../user/source/DLT645.c ****     {
1351:../user/source/DLT645.c ****         /*Êı¾İÓĞĞ§£¬³õÊ¼»¯È«¾Ö±äÁ¿*/
1352:../user/source/DLT645.c ****         TransFormer.CTratio = uwCTratio;
1353:../user/source/DLT645.c ****     }
1354:../user/source/DLT645.c ****     /*¶ÁÈ¡µçÁ÷ÉÏÏŞ²ÎÊı*/
1355:../user/source/DLT645.c ****     uwLimit = Flash_Read_Word(FLASH_CURRENT_LIMIT_VALUE_ADDR);
1356:../user/source/DLT645.c ****     /*²ÎÊıÎŞĞ§£¬³õ´ÎÉÏµç*/
1357:../user/source/DLT645.c ****     if (uwLimit == 0xFFFFFFFF)
1358:../user/source/DLT645.c ****     {
1359:../user/source/DLT645.c ****         /*¸ù¾İ¶î¶¨µçÁ÷ºÍCT±ä±È¼ÆËãµçÁ÷ÉÏÏŞÖµ*/
1360:../user/source/DLT645.c ****         TransFormer.CT2_CurrentLimit = (TransFormer.rated_current / TransFormer.CTratio) * 3 * 8 / 
1361:../user/source/DLT645.c ****         /*´æ´¢µçÁ÷ÉÏÏŞÖµ*/
1362:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_CURRENT_LIMIT_VALUE_ADDR, TransFormer.CT2_CurrentLimit);
1363:../user/source/DLT645.c ****     }
1364:../user/source/DLT645.c ****     else
1365:../user/source/DLT645.c ****     {
1366:../user/source/DLT645.c ****         /*²ÎÊıÓĞĞ§£¬³õÊ¼»¯È«¾Ö±äÁ¿*/
1367:../user/source/DLT645.c ****         TransFormer.CT2_CurrentLimit = uwLimit;
1368:../user/source/DLT645.c ****     }
1369:../user/source/DLT645.c **** }
1370:../user/source/DLT645.c **** 
1371:../user/source/DLT645.c **** /********************************************************************
1372:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º¸÷ÏàµçÁ÷ÖµÉÏÏŞĞŞ¸Äº¯Êı
1373:../user/source/DLT645.c ****  * Êä    Èë£ºµçÁ÷Ö¡Êı×éÖ¸Õë
1374:../user/source/DLT645.c ****  * Êä    ³ö£º
1375:../user/source/DLT645.c ****  *           
1376:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1377:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.1.30
1378:../user/source/DLT645.c ****  **********************************************************************/
1379:../user/source/DLT645.c **** void vCurrent_Limit_Modify(uint8_t *pucBuffer)
1380:../user/source/DLT645.c **** {
 1308              		.loc 1 1380 0
 1309              		.cfi_startproc
 1310              		@ args = 0, pretend = 0, frame = 0
 1311              		@ frame_needed = 0, uses_anonymous_args = 0
 1312              		@ link register save eliminated.
 1313              	.LVL155:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 49


 1314 0000 7047     		bx	lr
 1315              		.cfi_endproc
 1316              	.LFE133:
 1318 0002 00BF     		.section	.text.Get_Estatus,"ax",%progbits
 1319              		.align	2
 1320              		.thumb
 1321              		.thumb_func
 1323              	Get_Estatus:
 1324              	.LFB141:
1381:../user/source/DLT645.c ****     uint32_t ABCcurrent;
1382:../user/source/DLT645.c ****     uint8_t i;
1383:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
1384:../user/source/DLT645.c **** #ifndef ENABLE_CURRENT_LIMIT
1385:../user/source/DLT645.c ****     return;
1386:../user/source/DLT645.c **** #endif
1387:../user/source/DLT645.c **** 
1388:../user/source/DLT645.c ****     switch (pucBuffer[11])
1389:../user/source/DLT645.c ****     {
1390:../user/source/DLT645.c ****     case 0x32: //ÈıÏàµçÁ÷Êı¾İ¿é
1391:../user/source/DLT645.c ****     {
1392:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Acurrent);
1393:../user/source/DLT645.c ****         vGet_Current(pucBuffer[17], pucBuffer[18], pucBuffer[19], &Bcurrent);
1394:../user/source/DLT645.c ****         vGet_Current(pucBuffer[20], pucBuffer[21], pucBuffer[22], &Ccurrent);
1395:../user/source/DLT645.c ****         if (Acurrent.isminus || Bcurrent.isminus || Ccurrent.isminus)
1396:../user/source/DLT645.c ****             return;
1397:../user/source/DLT645.c ****         ABCcurrent = Acurrent.value + Bcurrent.value + Ccurrent.value;
1398:../user/source/DLT645.c ****         if (ABCcurrent > TransFormer.CT2_CurrentLimit)
1399:../user/source/DLT645.c ****         {
1400:../user/source/DLT645.c ****             Acurrent.value = TransFormer.CT2_CurrentLimit * Acurrent.value / ABCcurrent;
1401:../user/source/DLT645.c ****             Bcurrent.value = TransFormer.CT2_CurrentLimit * Bcurrent.value / ABCcurrent;
1402:../user/source/DLT645.c ****             Ccurrent.value = TransFormer.CT2_CurrentLimit * Ccurrent.value / ABCcurrent;
1403:../user/source/DLT645.c ****         }
1404:../user/source/DLT645.c ****         Acurrent.value = (Acurrent.value > (TransFormer.CT2_CurrentLimit / 3)
1405:../user/source/DLT645.c ****                               ? (TransFormer.CT2_CurrentLimit / 3)
1406:../user/source/DLT645.c ****                               : Acurrent.value);
1407:../user/source/DLT645.c ****         Bcurrent.value = (Bcurrent.value > (TransFormer.CT2_CurrentLimit / 3)
1408:../user/source/DLT645.c ****                               ? (TransFormer.CT2_CurrentLimit / 3)
1409:../user/source/DLT645.c ****                               : Bcurrent.value);
1410:../user/source/DLT645.c ****         Ccurrent.value = (Ccurrent.value > (TransFormer.CT2_CurrentLimit / 3)
1411:../user/source/DLT645.c ****                               ? (TransFormer.CT2_CurrentLimit / 3)
1412:../user/source/DLT645.c ****                               : Ccurrent.value);
1413:../user/source/DLT645.c ****         //AÏàµçÁ÷,Ê®½øÖÆÊı×ªBCDÂë
1414:../user/source/DLT645.c ****         vPut_Current(Acurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
1415:../user/source/DLT645.c ****         //BÏàµçÁ÷
1416:../user/source/DLT645.c ****         vPut_Current(Bcurrent, &pucBuffer[17], &pucBuffer[18], &pucBuffer[19]);
1417:../user/source/DLT645.c ****         //CÏàµçÁ÷
1418:../user/source/DLT645.c ****         vPut_Current(Ccurrent, &pucBuffer[20], &pucBuffer[21], &pucBuffer[22]);
1419:../user/source/DLT645.c ****         for (i = 0; i < 23; i++) //Êı¾İÓò³¤¶È23
1420:../user/source/DLT645.c ****         {
1421:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1422:../user/source/DLT645.c ****         }
1423:../user/source/DLT645.c ****         pucBuffer[23] = ucCheckData;
1424:../user/source/DLT645.c ****         pucBuffer[24] = 0x16;
1425:../user/source/DLT645.c ****         break;
1426:../user/source/DLT645.c ****     }
1427:../user/source/DLT645.c ****     case 0x34: //AÏàµçÁ÷
1428:../user/source/DLT645.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 50


1429:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Acurrent);
1430:../user/source/DLT645.c ****         Acurrent.value = (Acurrent.value > (TransFormer.CT2_CurrentLimit / 3)
1431:../user/source/DLT645.c ****                               ? (TransFormer.CT2_CurrentLimit / 3)
1432:../user/source/DLT645.c ****                               : Acurrent.value);
1433:../user/source/DLT645.c ****         vPut_Current(Acurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
1434:../user/source/DLT645.c ****         for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
1435:../user/source/DLT645.c ****         {
1436:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1437:../user/source/DLT645.c ****         }
1438:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1439:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1440:../user/source/DLT645.c ****         break;
1441:../user/source/DLT645.c ****     }
1442:../user/source/DLT645.c ****     case 0x35: //BÏàµçÁ÷
1443:../user/source/DLT645.c ****     {
1444:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Bcurrent);
1445:../user/source/DLT645.c ****         Bcurrent.value = (Bcurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT2_Cu
1446:../user/source/DLT645.c ****         vPut_Current(Bcurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
1447:../user/source/DLT645.c ****         for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
1448:../user/source/DLT645.c ****         {
1449:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1450:../user/source/DLT645.c ****         }
1451:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1452:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1453:../user/source/DLT645.c **** 
1454:../user/source/DLT645.c ****         break;
1455:../user/source/DLT645.c ****     }
1456:../user/source/DLT645.c ****     case 0x36: //CÏàµçÁ÷
1457:../user/source/DLT645.c ****     {
1458:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Ccurrent);
1459:../user/source/DLT645.c ****         Ccurrent.value = (Ccurrent.value > (TransFormer.CT2_CurrentLimit / 3)
1460:../user/source/DLT645.c ****                               ? (TransFormer.CT2_CurrentLimit / 3)
1461:../user/source/DLT645.c ****                               : Ccurrent.value);
1462:../user/source/DLT645.c ****         vPut_Current(Bcurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
1463:../user/source/DLT645.c ****         for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
1464:../user/source/DLT645.c ****         {
1465:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1466:../user/source/DLT645.c ****         }
1467:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1468:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1469:../user/source/DLT645.c ****         break;
1470:../user/source/DLT645.c ****     }
1471:../user/source/DLT645.c ****     }
1472:../user/source/DLT645.c **** }
1473:../user/source/DLT645.c **** 
1474:../user/source/DLT645.c **** /*****************************************************
1475:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºĞŞ¸ÄµçÁ÷·½ÏòÖ¡
1476:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
1477:../user/source/DLT645.c ****  * Êä    ³ö£º
1478:../user/source/DLT645.c ****  *           
1479:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1480:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.12.13
1481:../user/source/DLT645.c ****  *******************************************************/
1482:../user/source/DLT645.c **** void vCurrentDirect_Modify(uint8_t *pucBuffer)
1483:../user/source/DLT645.c **** {
1484:../user/source/DLT645.c ****     uint8_t i = 0;
1485:../user/source/DLT645.c ****     uint8_t ucCheckData;
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 51


1486:../user/source/DLT645.c ****     switch (pucBuffer[11])
1487:../user/source/DLT645.c ****     {
1488:../user/source/DLT645.c ****     case 0x32: //ÈıÏàµçÁ÷Êı¾İ¿é
1489:../user/source/DLT645.c ****     {
1490:../user/source/DLT645.c ****         pucBuffer[16] = ((pucBuffer[16] - 0x33) & 0xEF) + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ
1491:../user/source/DLT645.c ****         pucBuffer[19] = ((pucBuffer[19] - 0x33) & 0xEF) + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ
1492:../user/source/DLT645.c ****         pucBuffer[22] = ((pucBuffer[22] - 0x33) & 0xEF) + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ
1493:../user/source/DLT645.c ****         for (i = 0; i < 23; i++)                                //Êı¾İÓò³¤¶È23
1494:../user/source/DLT645.c ****         {
1495:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1496:../user/source/DLT645.c ****         }
1497:../user/source/DLT645.c ****         pucBuffer[23] = ucCheckData;
1498:../user/source/DLT645.c ****         pucBuffer[24] = 0x16;
1499:../user/source/DLT645.c ****         break;
1500:../user/source/DLT645.c ****     }
1501:../user/source/DLT645.c ****     case 0x34: //AÏàµçÁ÷
1502:../user/source/DLT645.c ****     {
1503:../user/source/DLT645.c ****         pucBuffer[16] = ((pucBuffer[16] - 0x33) & 0xEF) + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ
1504:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                                //Êı¾İÓò³¤¶È17
1505:../user/source/DLT645.c ****         {
1506:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1507:../user/source/DLT645.c ****         }
1508:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1509:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1510:../user/source/DLT645.c ****         break;
1511:../user/source/DLT645.c ****     }
1512:../user/source/DLT645.c ****     case 0x35: //BÏàµçÁ÷
1513:../user/source/DLT645.c ****     {
1514:../user/source/DLT645.c ****         pucBuffer[16] = ((pucBuffer[16] - 0x33) & 0xEF) + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ
1515:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                                //Êı¾İÓò³¤¶È17
1516:../user/source/DLT645.c ****         {
1517:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1518:../user/source/DLT645.c ****         }
1519:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1520:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1521:../user/source/DLT645.c ****         break;
1522:../user/source/DLT645.c ****     }
1523:../user/source/DLT645.c ****     case 0x36: //CÏàµçÁ÷
1524:../user/source/DLT645.c ****     {
1525:../user/source/DLT645.c ****         pucBuffer[16] = ((pucBuffer[16] - 0x33) & 0xEF) + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ
1526:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                                //Êı¾İÓò³¤¶È16
1527:../user/source/DLT645.c ****         {
1528:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1529:../user/source/DLT645.c ****         }
1530:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1531:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1532:../user/source/DLT645.c ****         break;
1533:../user/source/DLT645.c ****     }
1534:../user/source/DLT645.c ****     }
1535:../user/source/DLT645.c **** }
1536:../user/source/DLT645.c **** 
1537:../user/source/DLT645.c **** /********************************************************************
1538:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı£ºµçÁ÷ÉÏÏŞÖµÉèÖÃ
1539:../user/source/DLT645.c ****  * Êä    Èë£ºÎ¬»¤Ö¡Êı×éÖ¸Õë
1540:../user/source/DLT645.c ****  * Êä    ³ö£º
1541:../user/source/DLT645.c ****  *           
1542:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 52


1543:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ09:39:18
1544:../user/source/DLT645.c ****  * ½ÓÊÜ£º   68 AA AA AA AA AA AA 68 14 07 33 37 35 35 56 34 12 XX 16(123.456A)
1545:../user/source/DLT645.c ****  *³É¹¦»Ø¸´£º68 AA AA AA AA AA AA 68 94 00 XX 16
1546:../user/source/DLT645.c ****  *Ê§°Ü»Ø¸´£º68 AA AA AA AA AA AA 68 D4 00 XX 16
1547:../user/source/DLT645.c ****  **********************************************************************/
1548:../user/source/DLT645.c **** void vCurrent_Limit_Set(uint8_t *pucBuffer)
1549:../user/source/DLT645.c **** {
1550:../user/source/DLT645.c ****     uint8_t i;
1551:../user/source/DLT645.c ****     CURRENT limit;
1552:../user/source/DLT645.c ****     pucBuffer[8] = 0xD4;
1553:../user/source/DLT645.c ****     /*·ÇÖØ¹ıÔØµ÷Õû°æ±¾Ê±£¬»Ø¸´·ñÈÏÖ¡*/
1554:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
1555:../user/source/DLT645.c ****     /*ÊäÈëµÄ×Ö½Ú¼õÈ¥33ºó²»ÊÇBCDÂëÔõÃ´°ì£¿*/
1556:../user/source/DLT645.c ****     vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &limit);
1557:../user/source/DLT645.c ****     if (!limit.isminus && (limit.value > 0) && (limit.value <= 999999))
1558:../user/source/DLT645.c ****     {
1559:../user/source/DLT645.c ****         if (SUCCESS == Flash_Write_Word(FLASH_CURRENT_LIMIT_VALUE_ADDR, limit.value))
1560:../user/source/DLT645.c ****         {
1561:../user/source/DLT645.c ****             TransFormer.CT2_CurrentLimit = limit.value;
1562:../user/source/DLT645.c ****             //limit.value = TransFormer.rated_current / TransFormer.CTratio;
1563:../user/source/DLT645.c ****             //limit.value = limit.value * 8 / 10;
1564:../user/source/DLT645.c ****             //limit.value = limit.value * 3;
1565:../user/source/DLT645.c ****             TransFormer.CTratio = TransFormer.rated_current /
1566:../user/source/DLT645.c ****                                   (TransFormer.CT2_CurrentLimit / 3 * 10 / 8);
1567:../user/source/DLT645.c ****             if (SUCCESS == Flash_Write_Word(FLASH_CURRENT_LIMIT_RATIO_ADDR, TransFormer.CTratio))
1568:../user/source/DLT645.c ****             {
1569:../user/source/DLT645.c ****                 pucBuffer[8] = 0x94;
1570:../user/source/DLT645.c ****             }
1571:../user/source/DLT645.c ****         }
1572:../user/source/DLT645.c ****     }
1573:../user/source/DLT645.c **** #endif
1574:../user/source/DLT645.c **** 
1575:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
1576:../user/source/DLT645.c ****     pucBuffer[10] = 0;
1577:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
1578:../user/source/DLT645.c ****     {
1579:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
1580:../user/source/DLT645.c ****     }
1581:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
1582:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
1583:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
1584:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
1585:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
1586:../user/source/DLT645.c ****     {
1587:../user/source/DLT645.c ****         Uart_DataPut(USART3);
1588:../user/source/DLT645.c ****     }
1589:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
1590:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
1591:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
1592:../user/source/DLT645.c ****     {
1593:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
1594:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
1595:../user/source/DLT645.c ****     }
1596:../user/source/DLT645.c **** }
1597:../user/source/DLT645.c **** 
1598:../user/source/DLT645.c **** /********************************************************************
1599:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı£ºCT±ä±ÈÉèÖÃ
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 53


1600:../user/source/DLT645.c ****  * Êä    Èë£ºÎ¬»¤Ö¡Êı×éÖ¸Õë
1601:../user/source/DLT645.c ****  * Êä    ³ö£º
1602:../user/source/DLT645.c ****  *           
1603:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1604:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ09:39:18
1605:../user/source/DLT645.c ****  * ½ÓÊÜ£º   68 AA AA AA AA AA AA 68 14 06 33 39 35 35 00 01 XX 16(±ä±È100)
1606:../user/source/DLT645.c ****  *³É¹¦»Ø¸´£º68 AA AA AA AA AA AA 68 94 00 XX 16
1607:../user/source/DLT645.c ****  *Ê§°Ü»Ø¸´£º68 AA AA AA AA AA AA 68 D4 00 XX 16
1608:../user/source/DLT645.c ****  **********************************************************************/
1609:../user/source/DLT645.c **** void vCurrent_CTRatio_Set(uint8_t *pucBuffer)
1610:../user/source/DLT645.c **** {
1611:../user/source/DLT645.c ****     uint8_t i;
1612:../user/source/DLT645.c ****     uint32_t uwdata = 0;
1613:../user/source/DLT645.c ****     pucBuffer[8] = 0xD4;
1614:../user/source/DLT645.c **** /*ÊäÈëµÄ×Ö½Ú¼õÈ¥33ºó²»ÊÇBCDÂëÔõÃ´°ì£¿*/
1615:../user/source/DLT645.c **** /*²»Ö§³ÖÖØ¹ıÔØĞŞ¸Ä¹¦ÄÜÊ±£¬»Ø¸´·ñÈÏÖ¡*/
1616:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
1617:../user/source/DLT645.c ****     uwdata = Get_Voltage(pucBuffer[14], pucBuffer[15]);
1618:../user/source/DLT645.c ****     if ((uwdata > 0) && (uwdata <= 9999))
1619:../user/source/DLT645.c ****     {
1620:../user/source/DLT645.c ****         if (SUCCESS == Flash_Write_Word(FLASH_CURRENT_LIMIT_RATIO_ADDR, uwdata))
1621:../user/source/DLT645.c ****         {
1622:../user/source/DLT645.c ****             TransFormer.CTratio = uwdata;
1623:../user/source/DLT645.c ****             TransFormer.CT2_CurrentLimit = (TransFormer.rated_current / TransFormer.CTratio) * 24 /
1624:../user/source/DLT645.c ****             if (SUCCESS == Flash_Write_Word(FLASH_CURRENT_LIMIT_VALUE_ADDR, TransFormer.CT2_Current
1625:../user/source/DLT645.c ****             {
1626:../user/source/DLT645.c ****                 pucBuffer[8] = 0x94;
1627:../user/source/DLT645.c ****             }
1628:../user/source/DLT645.c ****         }
1629:../user/source/DLT645.c ****     }
1630:../user/source/DLT645.c **** #endif
1631:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
1632:../user/source/DLT645.c ****     pucBuffer[10] = 0;
1633:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
1634:../user/source/DLT645.c ****     {
1635:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
1636:../user/source/DLT645.c ****     }
1637:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
1638:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
1639:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
1640:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
1641:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
1642:../user/source/DLT645.c ****     {
1643:../user/source/DLT645.c ****         Uart_DataPut(USART3);
1644:../user/source/DLT645.c ****     }
1645:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
1646:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
1647:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
1648:../user/source/DLT645.c ****     {
1649:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
1650:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
1651:../user/source/DLT645.c ****     }
1652:../user/source/DLT645.c **** }
1653:../user/source/DLT645.c **** 
1654:../user/source/DLT645.c **** /********************************************************************
1655:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı²éÑ¯£ºµçÁ÷ÉÏÏŞÖµ
1656:../user/source/DLT645.c ****  * Êä    Èë£ºÎ¬»¤Ö¡Êı×éÖ¸Õë
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 54


1657:../user/source/DLT645.c ****  * Êä    ³ö£º
1658:../user/source/DLT645.c ****  *           
1659:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1660:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ09:39:18
1661:../user/source/DLT645.c ****  * ½ÓÊÕ£º   68 AA AA AA AA AA AA 68 11 04 33 38 35 35 XX 16
1662:../user/source/DLT645.c ****  *³É¹¦»Ø¸´£º68 AA AA AA AA AA AA 68 91 07 33 38 35 35 56 34 12 XX 16(123.456)
1663:../user/source/DLT645.c ****  **********************************************************************/
1664:../user/source/DLT645.c **** void vCurrent_Limit_ReadSet(uint8_t *pucBuffer)
1665:../user/source/DLT645.c **** {
1666:../user/source/DLT645.c ****     uint8_t i;
1667:../user/source/DLT645.c ****     CURRENT limit;
1668:../user/source/DLT645.c ****     limit.value = TransFormer.CT2_CurrentLimit;
1669:../user/source/DLT645.c ****     limit.isminus = false;
1670:../user/source/DLT645.c ****     vPut_Current(limit, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
1671:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
1672:../user/source/DLT645.c ****     pucBuffer[9] = 0x07;
1673:../user/source/DLT645.c ****     pucBuffer[17] = 0;
1674:../user/source/DLT645.c ****     for (i = 0; i < 17; i++)
1675:../user/source/DLT645.c ****     {
1676:../user/source/DLT645.c ****         pucBuffer[17] += pucBuffer[i];
1677:../user/source/DLT645.c ****     }
1678:../user/source/DLT645.c ****     pucBuffer[18] = 0x16;
1679:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
1680:../user/source/DLT645.c ****     uc645DataDomainLength = 7;
1681:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 19);
1682:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
1683:../user/source/DLT645.c ****     {
1684:../user/source/DLT645.c ****         Uart_DataPut(USART3);
1685:../user/source/DLT645.c ****     }
1686:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
1687:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 19);
1688:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
1689:../user/source/DLT645.c ****     {
1690:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
1691:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
1692:../user/source/DLT645.c ****     }
1693:../user/source/DLT645.c **** }
1694:../user/source/DLT645.c **** 
1695:../user/source/DLT645.c **** /********************************************************************
1696:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı²éÑ¯£ºCT±ä±È
1697:../user/source/DLT645.c ****  * Êä    Èë£ºÎ¬»¤Ö¡Êı×éÖ¸Õë
1698:../user/source/DLT645.c ****  * Êä    ³ö£º
1699:../user/source/DLT645.c ****  *           
1700:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1701:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ09:39:18
1702:../user/source/DLT645.c ****  * ½ÓÊÕ£º   68 AA AA AA AA AA AA 68 11 04 33 3A 35 35 XX 16
1703:../user/source/DLT645.c ****  *³É¹¦»Ø¸´£º68 AA AA AA AA AA AA 68 91 06 33 3A 35 35 00 01 XX 16(±ä±È100)
1704:../user/source/DLT645.c ****  **********************************************************************/
1705:../user/source/DLT645.c **** void vCurrent_CTRatio_ReadSet(uint8_t *pucBuffer)
1706:../user/source/DLT645.c **** {
1707:../user/source/DLT645.c **** 
1708:../user/source/DLT645.c ****     uint8_t i;
1709:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
1710:../user/source/DLT645.c ****     pucBuffer[9] = 0x06;
1711:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(TransFormer.CTratio);
1712:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(TransFormer.CTratio);
1713:../user/source/DLT645.c ****     pucBuffer[16] = 0;
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 55


1714:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
1715:../user/source/DLT645.c ****     {
1716:../user/source/DLT645.c ****         pucBuffer[16] += pucBuffer[i];
1717:../user/source/DLT645.c ****     }
1718:../user/source/DLT645.c ****     pucBuffer[17] = 0x16;
1719:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
1720:../user/source/DLT645.c ****     uc645DataDomainLength = 6;
1721:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 18);
1722:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
1723:../user/source/DLT645.c ****     {
1724:../user/source/DLT645.c ****         Uart_DataPut(USART3);
1725:../user/source/DLT645.c ****     }
1726:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
1727:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 18);
1728:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
1729:../user/source/DLT645.c ****     {
1730:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
1731:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
1732:../user/source/DLT645.c ****     }
1733:../user/source/DLT645.c **** }
1734:../user/source/DLT645.c **** 
1735:../user/source/DLT645.c **** /********************************************************************
1736:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı²éÑ¯£º±äÑ¹Æ÷ÈİÁ¿
1737:../user/source/DLT645.c ****  * Êä    Èë£ºÎ¬»¤Ö¡Êı×éÖ¸Õë
1738:../user/source/DLT645.c ****  * Êä    ³ö£º
1739:../user/source/DLT645.c ****  *           
1740:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1741:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ09:39:18
1742:../user/source/DLT645.c ****  * ½ÓÊÕ£º   68 AA AA AA AA AA AA 68 11 04 33 3B 35 35 XX 16
1743:../user/source/DLT645.c ****  *³É¹¦»Ø¸´£º68 AA AA AA AA AA AA 68 91 06 33 3B 35 35 00 01 XX 16(±ä±È100)
1744:../user/source/DLT645.c ****  **********************************************************************/
1745:../user/source/DLT645.c **** void vCurrent_TransFormer_Capacity_ReadSet(uint8_t *pucBuffer)
1746:../user/source/DLT645.c **** {
1747:../user/source/DLT645.c ****     uint8_t i;
1748:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
1749:../user/source/DLT645.c ****     pucBuffer[9] = 0x06;
1750:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(TransFormer.capacity);
1751:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(TransFormer.capacity);
1752:../user/source/DLT645.c ****     pucBuffer[16] = 0;
1753:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
1754:../user/source/DLT645.c ****     {
1755:../user/source/DLT645.c ****         pucBuffer[16] += pucBuffer[i];
1756:../user/source/DLT645.c ****     }
1757:../user/source/DLT645.c ****     pucBuffer[17] = 0x16;
1758:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
1759:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
1760:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 18);
1761:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
1762:../user/source/DLT645.c ****     {
1763:../user/source/DLT645.c ****         Uart_DataPut(USART3);
1764:../user/source/DLT645.c ****     }
1765:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
1766:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 18);
1767:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
1768:../user/source/DLT645.c ****     {
1769:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
1770:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 56


1771:../user/source/DLT645.c ****     }
1772:../user/source/DLT645.c **** }
1773:../user/source/DLT645.c **** 
1774:../user/source/DLT645.c **** /*****************************************************
1775:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷Ö¡¼ÆÊıÇåÁã
1776:../user/source/DLT645.c ****  * Êä    Èë£º
1777:../user/source/DLT645.c ****  * Êä    ³ö£ºÎŞ
1778:../user/source/DLT645.c ****  * Ëµ	  Ã÷£ºÊÕµ½µçÑ¹»Ø¸´Ö¡ºó£¬½«µçÁ÷Ö¡¼ÆÊıÇåÁã
1779:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1780:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.12.13
1781:../user/source/DLT645.c ****  *******************************************************/
1782:../user/source/DLT645.c **** void vCurrent_Count_Clear(void)
1783:../user/source/DLT645.c **** {
1784:../user/source/DLT645.c ****     Acurrent.count = 0;
1785:../user/source/DLT645.c ****     Bcurrent.count = 0;
1786:../user/source/DLT645.c ****     Ccurrent.count = 0;
1787:../user/source/DLT645.c **** }
1788:../user/source/DLT645.c **** /********************************************************************
1789:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º´ÓÊı¾İÖ¡ÖĞ¶ÁÈ¡×´Ì¬×Ö
1790:../user/source/DLT645.c ****  * Êä    Èë£º×´Ì¬×ÖµÍ×Ö½Ú¡¢¸ß×Ö½Ú
1791:../user/source/DLT645.c ****  * Êä    ³ö£º¶ş½øÖÆµÄ×´Ì¬×Ö
1792:../user/source/DLT645.c ****  *           
1793:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1794:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.5.23
1795:../user/source/DLT645.c ****  **********************************************************************/
1796:../user/source/DLT645.c **** uint16_t Get_Estatus(uint8_t LowByte, uint8_t HighByte)
1797:../user/source/DLT645.c **** {
 1325              		.loc 1 1797 0
 1326              		.cfi_startproc
 1327              		@ args = 0, pretend = 0, frame = 0
 1328              		@ frame_needed = 0, uses_anonymous_args = 0
 1329              		@ link register save eliminated.
 1330              	.LVL156:
1798:../user/source/DLT645.c ****     uint16_t estatus;
1799:../user/source/DLT645.c ****     estatus = ((HighByte - 0x33) & 0x00FF) << 8; //00010000 00000000
 1331              		.loc 1 1799 0
 1332 0000 3339     		subs	r1, r1, #51
 1333              	.LVL157:
1800:../user/source/DLT645.c ****     estatus |= (LowByte - 0X33) & 0X00FF;
 1334              		.loc 1 1800 0
 1335 0002 3338     		subs	r0, r0, #51
 1336              	.LVL158:
 1337 0004 C0B2     		uxtb	r0, r0
 1338 0006 40EA0120 		orr	r0, r0, r1, lsl #8
 1339              	.LVL159:
1801:../user/source/DLT645.c ****     return estatus;
1802:../user/source/DLT645.c **** }
 1340              		.loc 1 1802 0
 1341 000a 80B2     		uxth	r0, r0
 1342 000c 7047     		bx	lr
 1343              		.cfi_endproc
 1344              	.LFE141:
 1346 000e 00BF     		.section	.text.Estatus_Modify_CurrentEvent,"ax",%progbits
 1347              		.align	2
 1348              		.global	Estatus_Modify_CurrentEvent
 1349              		.thumb
 1350              		.thumb_func
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 57


 1352              	Estatus_Modify_CurrentEvent:
 1353              	.LFB128:
 994:../user/source/DLT645.c ****     uint16_t estatus = 0x0000;
 1354              		.loc 1 994 0
 1355              		.cfi_startproc
 1356              		@ args = 0, pretend = 0, frame = 0
 1357              		@ frame_needed = 0, uses_anonymous_args = 0
 1358              	.LVL160:
 1359 0000 10B5     		push	{r4, lr}
 1360              	.LCFI16:
 1361              		.cfi_def_cfa_offset 8
 1362              		.cfi_offset 4, -8
 1363              		.cfi_offset 14, -4
 1364 0002 0446     		mov	r4, r0
 1365              	.LVL161:
 998:../user/source/DLT645.c ****     {
 1366              		.loc 1 998 0
 1367 0004 837A     		ldrb	r3, [r0, #10]	@ zero_extendqisi2
 1368 0006 323B     		subs	r3, r3, #50
 1369 0008 082B     		cmp	r3, #8
 1370 000a 72D8     		bhi	.L87
 1371 000c DFE803F0 		tbb	[pc, r3]
 1372              	.L89:
 1373 0010 3D       		.byte	(.L88-.L89)/2
 1374 0011 71       		.byte	(.L87-.L89)/2
 1375 0012 71       		.byte	(.L87-.L89)/2
 1376 0013 71       		.byte	(.L87-.L89)/2
 1377 0014 71       		.byte	(.L87-.L89)/2
 1378 0015 05       		.byte	(.L90-.L89)/2
 1379 0016 13       		.byte	(.L91-.L89)/2
 1380 0017 21       		.byte	(.L92-.L89)/2
 1381 0018 2F       		.byte	(.L93-.L89)/2
 1382 0019 00       		.p2align 1
 1383              	.L90:
1003:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
 1384              		.loc 1 1003 0
 1385 001a C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1386 001c 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1387              	.LVL162:
 1388 001e FFF7FEFF 		bl	Get_Estatus
 1389              	.LVL163:
 1390 0022 20F4A870 		bic	r0, r0, #336
 1391 0026 83B2     		uxth	r3, r0
 1392              	.LVL164:
1004:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
 1393              		.loc 1 1004 0
 1394 0028 DAB2     		uxtb	r2, r3
 1395 002a 3332     		adds	r2, r2, #51
 1396 002c A273     		strb	r2, [r4, #14]
1005:../user/source/DLT645.c ****         break;
 1397              		.loc 1 1005 0
 1398 002e 1B0A     		lsrs	r3, r3, #8
 1399              	.LVL165:
 1400 0030 3333     		adds	r3, r3, #51
 1401 0032 E373     		strb	r3, [r4, #15]
1006:../user/source/DLT645.c ****     }
 1402              		.loc 1 1006 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 58


 1403 0034 5DE0     		b	.L87
 1404              	.LVL166:
 1405              	.L91:
1010:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 1406              		.loc 1 1010 0
 1407 0036 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1408 0038 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1409              	.LVL167:
 1410 003a FFF7FEFF 		bl	Get_Estatus
 1411              	.LVL168:
 1412 003e 20F4A870 		bic	r0, r0, #336
 1413 0042 83B2     		uxth	r3, r0
 1414              	.LVL169:
1011:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 1415              		.loc 1 1011 0
 1416 0044 DAB2     		uxtb	r2, r3
 1417 0046 3332     		adds	r2, r2, #51
 1418 0048 A273     		strb	r2, [r4, #14]
1012:../user/source/DLT645.c ****         break;
 1419              		.loc 1 1012 0
 1420 004a 1B0A     		lsrs	r3, r3, #8
 1421              	.LVL170:
 1422 004c 3333     		adds	r3, r3, #51
 1423 004e E373     		strb	r3, [r4, #15]
1013:../user/source/DLT645.c ****     }
 1424              		.loc 1 1013 0
 1425 0050 4FE0     		b	.L87
 1426              	.LVL171:
 1427              	.L92:
1017:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 1428              		.loc 1 1017 0
 1429 0052 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1430 0054 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1431              	.LVL172:
 1432 0056 FFF7FEFF 		bl	Get_Estatus
 1433              	.LVL173:
 1434 005a 20F4A870 		bic	r0, r0, #336
 1435 005e 83B2     		uxth	r3, r0
 1436              	.LVL174:
1018:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 1437              		.loc 1 1018 0
 1438 0060 DAB2     		uxtb	r2, r3
 1439 0062 3332     		adds	r2, r2, #51
 1440 0064 A273     		strb	r2, [r4, #14]
1019:../user/source/DLT645.c ****         break;
 1441              		.loc 1 1019 0
 1442 0066 1B0A     		lsrs	r3, r3, #8
 1443              	.LVL175:
 1444 0068 3333     		adds	r3, r3, #51
 1445 006a E373     		strb	r3, [r4, #15]
1020:../user/source/DLT645.c ****     }
 1446              		.loc 1 1020 0
 1447 006c 41E0     		b	.L87
 1448              	.LVL176:
 1449              	.L93:
1024:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 1450              		.loc 1 1024 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 59


 1451 006e C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1452 0070 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1453              	.LVL177:
 1454 0072 FFF7FEFF 		bl	Get_Estatus
 1455              	.LVL178:
 1456 0076 20F00800 		bic	r0, r0, #8
 1457 007a 83B2     		uxth	r3, r0
 1458              	.LVL179:
1025:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 1459              		.loc 1 1025 0
 1460 007c DAB2     		uxtb	r2, r3
 1461 007e 3332     		adds	r2, r2, #51
 1462 0080 A273     		strb	r2, [r4, #14]
1026:../user/source/DLT645.c ****         break;
 1463              		.loc 1 1026 0
 1464 0082 1B0A     		lsrs	r3, r3, #8
 1465              	.LVL180:
 1466 0084 3333     		adds	r3, r3, #51
 1467 0086 E373     		strb	r3, [r4, #15]
1027:../user/source/DLT645.c ****     }
 1468              		.loc 1 1027 0
 1469 0088 33E0     		b	.L87
 1470              	.LVL181:
 1471              	.L88:
1033:../user/source/DLT645.c ****         pucBuffer[20] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 1472              		.loc 1 1033 0
 1473 008a 417D     		ldrb	r1, [r0, #21]	@ zero_extendqisi2
 1474 008c 007D     		ldrb	r0, [r0, #20]	@ zero_extendqisi2
 1475              	.LVL182:
 1476 008e FFF7FEFF 		bl	Get_Estatus
 1477              	.LVL183:
 1478 0092 20F4A870 		bic	r0, r0, #336
 1479 0096 83B2     		uxth	r3, r0
 1480              	.LVL184:
1034:../user/source/DLT645.c ****         pucBuffer[21] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 1481              		.loc 1 1034 0
 1482 0098 DAB2     		uxtb	r2, r3
 1483 009a 3332     		adds	r2, r2, #51
 1484 009c 2275     		strb	r2, [r4, #20]
1035:../user/source/DLT645.c ****         //×´Ì¬×Ö5,BÏà×´Ì¬×Ö
 1485              		.loc 1 1035 0
 1486 009e 1B0A     		lsrs	r3, r3, #8
 1487              	.LVL185:
 1488 00a0 3333     		adds	r3, r3, #51
 1489 00a2 6375     		strb	r3, [r4, #21]
1037:../user/source/DLT645.c ****         pucBuffer[22] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
 1490              		.loc 1 1037 0
 1491 00a4 E17D     		ldrb	r1, [r4, #23]	@ zero_extendqisi2
 1492 00a6 A07D     		ldrb	r0, [r4, #22]	@ zero_extendqisi2
 1493              	.LVL186:
 1494 00a8 FFF7FEFF 		bl	Get_Estatus
 1495              	.LVL187:
 1496 00ac 20F4A870 		bic	r0, r0, #336
 1497 00b0 83B2     		uxth	r3, r0
 1498              	.LVL188:
1038:../user/source/DLT645.c ****         pucBuffer[23] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
 1499              		.loc 1 1038 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 60


 1500 00b2 DAB2     		uxtb	r2, r3
 1501 00b4 3332     		adds	r2, r2, #51
 1502 00b6 A275     		strb	r2, [r4, #22]
1039:../user/source/DLT645.c ****         //×´Ì¬×Ö6,CÏà×´Ì¬×Ö
 1503              		.loc 1 1039 0
 1504 00b8 1B0A     		lsrs	r3, r3, #8
 1505              	.LVL189:
 1506 00ba 3333     		adds	r3, r3, #51
 1507 00bc E375     		strb	r3, [r4, #23]
1041:../user/source/DLT645.c ****         pucBuffer[24] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
 1508              		.loc 1 1041 0
 1509 00be 617E     		ldrb	r1, [r4, #25]	@ zero_extendqisi2
 1510 00c0 207E     		ldrb	r0, [r4, #24]	@ zero_extendqisi2
 1511              	.LVL190:
 1512 00c2 FFF7FEFF 		bl	Get_Estatus
 1513              	.LVL191:
 1514 00c6 20F4A870 		bic	r0, r0, #336
 1515 00ca 83B2     		uxth	r3, r0
 1516              	.LVL192:
1042:../user/source/DLT645.c ****         pucBuffer[25] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
 1517              		.loc 1 1042 0
 1518 00cc DAB2     		uxtb	r2, r3
 1519 00ce 3332     		adds	r2, r2, #51
 1520 00d0 2276     		strb	r2, [r4, #24]
1043:../user/source/DLT645.c ****         //×´Ì¬×Ö7£¬ºÏÏà×´Ì¬×Ö
 1521              		.loc 1 1043 0
 1522 00d2 1B0A     		lsrs	r3, r3, #8
 1523              	.LVL193:
 1524 00d4 3333     		adds	r3, r3, #51
 1525 00d6 6376     		strb	r3, [r4, #25]
1045:../user/source/DLT645.c ****         pucBuffer[26] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
 1526              		.loc 1 1045 0
 1527 00d8 E17E     		ldrb	r1, [r4, #27]	@ zero_extendqisi2
 1528 00da A07E     		ldrb	r0, [r4, #26]	@ zero_extendqisi2
 1529              	.LVL194:
 1530 00dc FFF7FEFF 		bl	Get_Estatus
 1531              	.LVL195:
 1532 00e0 20F00800 		bic	r0, r0, #8
 1533 00e4 83B2     		uxth	r3, r0
 1534              	.LVL196:
1046:../user/source/DLT645.c ****         pucBuffer[27] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
 1535              		.loc 1 1046 0
 1536 00e6 DAB2     		uxtb	r2, r3
 1537 00e8 3332     		adds	r2, r2, #51
 1538 00ea A276     		strb	r2, [r4, #26]
1047:../user/source/DLT645.c ****         break;
 1539              		.loc 1 1047 0
 1540 00ec 1B0A     		lsrs	r3, r3, #8
 1541              	.LVL197:
 1542 00ee 3333     		adds	r3, r3, #51
 1543 00f0 E376     		strb	r3, [r4, #27]
 1544              	.LVL198:
 1545              	.L87:
 997:../user/source/DLT645.c ****     switch (pucBuffer[10])
 1546              		.loc 1 997 0
 1547 00f2 0023     		movs	r3, #0
1053:../user/source/DLT645.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 61


 1548              		.loc 1 1053 0
 1549 00f4 1A46     		mov	r2, r3
 1550 00f6 03E0     		b	.L94
 1551              	.LVL199:
 1552              	.L95:
1055:../user/source/DLT645.c ****     }
 1553              		.loc 1 1055 0 discriminator 3
 1554 00f8 A15C     		ldrb	r1, [r4, r2]	@ zero_extendqisi2
 1555 00fa 0B44     		add	r3, r3, r1
 1556              	.LVL200:
 1557 00fc DBB2     		uxtb	r3, r3
 1558              	.LVL201:
1053:../user/source/DLT645.c ****     {
 1559              		.loc 1 1053 0 discriminator 3
 1560 00fe 0132     		adds	r2, r2, #1
 1561              	.LVL202:
 1562              	.L94:
1053:../user/source/DLT645.c ****     {
 1563              		.loc 1 1053 0 is_stmt 0 discriminator 1
 1564 0100 0349     		ldr	r1, .L97
 1565 0102 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1566 0104 01F10A00 		add	r0, r1, #10
 1567 0108 8242     		cmp	r2, r0
 1568 010a F5DB     		blt	.L95
1057:../user/source/DLT645.c **** }
 1569              		.loc 1 1057 0 is_stmt 1
 1570 010c 2354     		strb	r3, [r4, r0]
 1571 010e 10BD     		pop	{r4, pc}
 1572              	.LVL203:
 1573              	.L98:
 1574              		.align	2
 1575              	.L97:
 1576 0110 00000000 		.word	.LANCHOR0
 1577              		.cfi_endproc
 1578              	.LFE128:
 1580              		.section	.text.GetLowByte,"ax",%progbits
 1581              		.align	2
 1582              		.thumb
 1583              		.thumb_func
 1585              	GetLowByte:
 1586              	.LFB142:
1803:../user/source/DLT645.c **** /********************************************************************
1804:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½«µçÑ¹¸öÎ»×ª»»ÎªµÍ×Ö½Ú
1805:../user/source/DLT645.c ****  * Êä    Èë£ºÊ®½øÖÆµçÑ¹Öµ
1806:../user/source/DLT645.c ****  * Êä    ³ö£º	BCDÂë
1807:../user/source/DLT645.c ****  *           
1808:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1809:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
1810:../user/source/DLT645.c ****  **********************************************************************/
1811:../user/source/DLT645.c **** uint8_t GetLowByte(int Voltage)
1812:../user/source/DLT645.c **** {
 1587              		.loc 1 1812 0
 1588              		.cfi_startproc
 1589              		@ args = 0, pretend = 0, frame = 0
 1590              		@ frame_needed = 0, uses_anonymous_args = 0
 1591              		@ link register save eliminated.
 1592              	.LVL204:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 62


1813:../user/source/DLT645.c ****     uint8_t LowByte = 0x00;
1814:../user/source/DLT645.c ****     LowByte = (((((Voltage % 1000) % 100) / 10) << 4) & 0xF0) +
 1593              		.loc 1 1814 0
 1594 0000 1149     		ldr	r1, .L100
 1595 0002 81FB0031 		smull	r3, r1, r1, r0
 1596 0006 C317     		asrs	r3, r0, #31
 1597 0008 C3EBA111 		rsb	r1, r3, r1, asr #6
 1598 000c 4FF47A73 		mov	r3, #1000
 1599 0010 03FB1101 		mls	r1, r3, r1, r0
 1600 0014 0D4A     		ldr	r2, .L100+4
 1601 0016 82FB0132 		smull	r3, r2, r2, r1
 1602 001a CB17     		asrs	r3, r1, #31
 1603 001c C3EB6212 		rsb	r2, r3, r2, asr #5
 1604 0020 6423     		movs	r3, #100
 1605 0022 03FB1212 		mls	r2, r3, r2, r1
 1606 0026 0A48     		ldr	r0, .L100+8
 1607              	.LVL205:
 1608 0028 80FB0230 		smull	r3, r0, r0, r2
 1609 002c D317     		asrs	r3, r2, #31
 1610 002e C3EBA000 		rsb	r0, r3, r0, asr #2
1815:../user/source/DLT645.c ****               ((((Voltage % 1000) % 100) % 10) & 0x0F) + 0x33;
 1611              		.loc 1 1815 0
 1612 0032 00EB8001 		add	r1, r0, r0, lsl #2
 1613 0036 4B00     		lsls	r3, r1, #1
 1614 0038 D31A     		subs	r3, r2, r3
1814:../user/source/DLT645.c ****               ((((Voltage % 1000) % 100) % 10) & 0x0F) + 0x33;
 1615              		.loc 1 1814 0
 1616 003a 03F00F03 		and	r3, r3, #15
 1617 003e 03EB0010 		add	r0, r3, r0, lsl #4
 1618 0042 3330     		adds	r0, r0, #51
 1619              	.LVL206:
1816:../user/source/DLT645.c ****     return LowByte;
1817:../user/source/DLT645.c **** }
 1620              		.loc 1 1817 0
 1621 0044 C0B2     		uxtb	r0, r0
 1622 0046 7047     		bx	lr
 1623              	.L101:
 1624              		.align	2
 1625              	.L100:
 1626 0048 D34D6210 		.word	274877907
 1627 004c 1F85EB51 		.word	1374389535
 1628 0050 67666666 		.word	1717986919
 1629              		.cfi_endproc
 1630              	.LFE142:
 1632              		.section	.text.GetHighByte,"ax",%progbits
 1633              		.align	2
 1634              		.thumb
 1635              		.thumb_func
 1637              	GetHighByte:
 1638              	.LFB143:
1818:../user/source/DLT645.c **** 
1819:../user/source/DLT645.c **** /********************************************************************
1820:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½«µçÑ¹°ÙÎ»¡¢Ê®Î»×ª»»ÎªµÍ×Ö½Ú
1821:../user/source/DLT645.c ****  * Êä    Èë£ºÊ®½øÖÆµçÑ¹Öµ
1822:../user/source/DLT645.c ****  * Êä    ³ö£º	BCDÂë
1823:../user/source/DLT645.c ****  *           
1824:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 63


1825:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
1826:../user/source/DLT645.c ****  **********************************************************************/
1827:../user/source/DLT645.c **** uint8_t GetHighByte(int Voltage)
1828:../user/source/DLT645.c **** {
 1639              		.loc 1 1828 0
 1640              		.cfi_startproc
 1641              		@ args = 0, pretend = 0, frame = 0
 1642              		@ frame_needed = 0, uses_anonymous_args = 0
 1643              		@ link register save eliminated.
 1644              	.LVL207:
1829:../user/source/DLT645.c ****     uint8_t HighByte = 0x00;
1830:../user/source/DLT645.c ****     HighByte = (((uint8_t)(Voltage / 1000) << 4) & 0xF0) +
 1645              		.loc 1 1830 0
 1646 0000 0C49     		ldr	r1, .L103
 1647 0002 81FB0031 		smull	r3, r1, r1, r0
 1648 0006 C317     		asrs	r3, r0, #31
 1649 0008 C3EBA111 		rsb	r1, r3, r1, asr #6
 1650 000c 0B01     		lsls	r3, r1, #4
 1651 000e 03F47F62 		and	r2, r3, #4080
1831:../user/source/DLT645.c ****                ((uint8_t)((Voltage % 1000) / 100) & 0x0F) + 0x33;
 1652              		.loc 1 1831 0
 1653 0012 4FF47A73 		mov	r3, #1000
 1654 0016 03FB1103 		mls	r3, r3, r1, r0
 1655 001a 0748     		ldr	r0, .L103+4
 1656              	.LVL208:
 1657 001c 80FB0310 		smull	r1, r0, r0, r3
 1658 0020 DB17     		asrs	r3, r3, #31
 1659 0022 C3EB6013 		rsb	r3, r3, r0, asr #5
1830:../user/source/DLT645.c ****                ((uint8_t)((Voltage % 1000) / 100) & 0x0F) + 0x33;
 1660              		.loc 1 1830 0
 1661 0026 03F00F03 		and	r3, r3, #15
 1662 002a 1344     		add	r3, r3, r2
 1663 002c 03F13300 		add	r0, r3, #51
 1664              	.LVL209:
1832:../user/source/DLT645.c ****     return HighByte;
1833:../user/source/DLT645.c **** }
 1665              		.loc 1 1833 0
 1666 0030 C0B2     		uxtb	r0, r0
 1667 0032 7047     		bx	lr
 1668              	.L104:
 1669              		.align	2
 1670              	.L103:
 1671 0034 D34D6210 		.word	274877907
 1672 0038 1F85EB51 		.word	1374389535
 1673              		.cfi_endproc
 1674              	.LFE143:
 1676              		.section	.text.Get_Energy,"ax",%progbits
 1677              		.align	2
 1678              		.thumb
 1679              		.thumb_func
 1681              	Get_Energy:
 1682              	.LFB145:
1834:../user/source/DLT645.c **** 
1835:../user/source/DLT645.c **** /********************************************************************
1836:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÈÕ¶³½áÊı¾İĞŞ¸Ä¹¦ÄÜ³õÊ¼»¯£ºÄ¬ÈÏĞŞ¸Ä£»
1837:../user/source/DLT645.c ****  * Êä    Èë£º
1838:../user/source/DLT645.c ****  * Êä    ³ö£º
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 64


1839:../user/source/DLT645.c ****  *
1840:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1841:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.9.6
1842:../user/source/DLT645.c ****  **********************************************************************/
1843:../user/source/DLT645.c **** //void vDayfrozen_Change_Init(void)
1844:../user/source/DLT645.c **** void vEnergy_Modify_Init(void)
1845:../user/source/DLT645.c **** {
1846:../user/source/DLT645.c ****     uint8_t tmp;
1847:../user/source/DLT645.c ****     /*ÈÕ¶³½áĞŞ¸ÄÊ¹ÄÜÎ»³õÊ¼»¯*/
1848:../user/source/DLT645.c ****     Dayfrozen_Change_State = EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR);
1849:../user/source/DLT645.c ****     tmp = EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR);
1850:../user/source/DLT645.c ****     /*ÅĞ¶ÏflashÖĞÊÇ·ñÒÑ´æ´¢µçÑ¹ĞŞ¸Ä±ÈÀı*/
1851:../user/source/DLT645.c ****     if (tmp == 0xFF)
1852:../user/source/DLT645.c ****     {
1853:../user/source/DLT645.c ****         /*Ê¹ÓÃÄ¬ÈÏĞŞ¸Ä±ÈÀı*/
1854:../user/source/DLT645.c ****         ucDayfrozen_Modify_Ratio = UCDAYFROZEN_CHANGE_DEFAULE_RATIO;
1855:../user/source/DLT645.c ****     }
1856:../user/source/DLT645.c ****     else
1857:../user/source/DLT645.c ****     {
1858:../user/source/DLT645.c ****         ucDayfrozen_Modify_Ratio = tmp;
1859:../user/source/DLT645.c ****     }
1860:../user/source/DLT645.c **** }
1861:../user/source/DLT645.c **** 
1862:../user/source/DLT645.c **** /********************************************************************
1863:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º´ÓÊı¾İÖ¡ÖĞ¶ÁÈ¡µçÄÜÁ¿Öµ
1864:../user/source/DLT645.c ****  * Êä    Èë£ºµçÄÜÁ¿Öµ´ÓµÍµ½¸ßËÄ¸ö×Ö½Ú
1865:../user/source/DLT645.c ****  * Êä    ³ö£ºÊ®½øÖÆµÄµçÄÜÁ¿Öµ
1866:../user/source/DLT645.c ****  * Òª    Çó£ºÊä³öÖµÀ©´ó100±¶
1867:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1868:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
1869:../user/source/DLT645.c ****  * ĞŞ¸Ä¼ÇÂ¼£º2019-1-24 15:07:34£¬Ôö¼Ó¶Ô0xEEµÄ´¦Àí
1870:../user/source/DLT645.c ****  **********************************************************************/
1871:../user/source/DLT645.c **** uint32_t Get_Energy(uint8_t FstByte, uint8_t ScdByte, uint8_t TirdByte, uint8_t ForthByte)
1872:../user/source/DLT645.c **** {
 1683              		.loc 1 1872 0
 1684              		.cfi_startproc
 1685              		@ args = 0, pretend = 0, frame = 0
 1686              		@ frame_needed = 0, uses_anonymous_args = 0
 1687              		@ link register save eliminated.
 1688              	.LVL210:
 1689 0000 30B4     		push	{r4, r5}
 1690              	.LCFI17:
 1691              		.cfi_def_cfa_offset 8
 1692              		.cfi_offset 4, -8
 1693              		.cfi_offset 5, -4
1873:../user/source/DLT645.c ****     uint8_t million = BCD2DEC(ForthByte - 0x33);
 1694              		.loc 1 1873 0
 1695 0002 333B     		subs	r3, r3, #51
 1696              	.LVL211:
 1697 0004 C3F30314 		ubfx	r4, r3, #4, #4
 1698 0008 04EB8404 		add	r4, r4, r4, lsl #2
 1699 000c 6500     		lsls	r5, r4, #1
 1700 000e 03F00F03 		and	r3, r3, #15
 1701 0012 2B44     		add	r3, r3, r5
 1702 0014 DBB2     		uxtb	r3, r3
 1703              	.LVL212:
1874:../user/source/DLT645.c ****     uint8_t tenkelio = BCD2DEC(TirdByte - 0x33);
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 65


 1704              		.loc 1 1874 0
 1705 0016 333A     		subs	r2, r2, #51
 1706              	.LVL213:
 1707 0018 C2F30314 		ubfx	r4, r2, #4, #4
 1708 001c 04EB8404 		add	r4, r4, r4, lsl #2
 1709 0020 6500     		lsls	r5, r4, #1
 1710 0022 02F00F02 		and	r2, r2, #15
 1711 0026 2A44     		add	r2, r2, r5
 1712              	.LVL214:
1875:../user/source/DLT645.c ****     uint8_t hundreds = BCD2DEC(ScdByte - 0x33);
 1713              		.loc 1 1875 0
 1714 0028 3339     		subs	r1, r1, #51
 1715              	.LVL215:
 1716 002a C1F30314 		ubfx	r4, r1, #4, #4
 1717 002e 04EB8404 		add	r4, r4, r4, lsl #2
 1718 0032 6500     		lsls	r5, r4, #1
 1719 0034 01F00F01 		and	r1, r1, #15
 1720 0038 2944     		add	r1, r1, r5
 1721              	.LVL216:
1876:../user/source/DLT645.c ****     uint8_t ones = BCD2DEC(FstByte - 0x33);
 1722              		.loc 1 1876 0
 1723 003a 3338     		subs	r0, r0, #51
 1724              	.LVL217:
 1725 003c C0F30314 		ubfx	r4, r0, #4, #4
 1726 0040 04EB8404 		add	r4, r4, r4, lsl #2
 1727 0044 6500     		lsls	r5, r4, #1
 1728 0046 00F00F00 		and	r0, r0, #15
 1729 004a 2844     		add	r0, r0, r5
 1730              	.LVL218:
1877:../user/source/DLT645.c ****     uint32_t Energy = 0;
1878:../user/source/DLT645.c ****     if (
 1731              		.loc 1 1878 0
 1732 004c 632B     		cmp	r3, #99
 1733 004e 14D8     		bhi	.L107
 1734 0050 D2B2     		uxtb	r2, r2
 1735 0052 C9B2     		uxtb	r1, r1
 1736 0054 C0B2     		uxtb	r0, r0
1879:../user/source/DLT645.c ****         million < 100 &&
 1737              		.loc 1 1879 0
 1738 0056 632A     		cmp	r2, #99
 1739 0058 12D8     		bhi	.L108
1880:../user/source/DLT645.c ****         tenkelio < 100 &&
 1740              		.loc 1 1880 0
 1741 005a 6329     		cmp	r1, #99
 1742 005c 13D8     		bhi	.L109
1881:../user/source/DLT645.c ****         hundreds < 100 &&
 1743              		.loc 1 1881 0
 1744 005e 6328     		cmp	r0, #99
 1745 0060 14D8     		bhi	.L110
1882:../user/source/DLT645.c ****         ones < 100)
1883:../user/source/DLT645.c ****     {
1884:../user/source/DLT645.c ****         Energy = million * 1000000 + tenkelio * 10000 + hundreds * 100 + ones;
 1746              		.loc 1 1884 0
 1747 0062 42F21074 		movw	r4, #10000
 1748 0066 04FB02F2 		mul	r2, r4, r2
 1749              	.LVL219:
 1750 006a 0A4C     		ldr	r4, .L112
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 66


 1751 006c 04FB0323 		mla	r3, r4, r3, r2
 1752              	.LVL220:
 1753 0070 6422     		movs	r2, #100
 1754 0072 02FB0131 		mla	r1, r2, r1, r3
 1755              	.LVL221:
 1756 0076 0844     		add	r0, r0, r1
 1757              	.LVL222:
 1758 0078 0AE0     		b	.L106
 1759              	.LVL223:
 1760              	.L107:
1885:../user/source/DLT645.c ****     }
1886:../user/source/DLT645.c ****     else
1887:../user/source/DLT645.c ****     {
1888:../user/source/DLT645.c ****         Energy = 0xFFFFFFFF;
 1761              		.loc 1 1888 0
 1762 007a 4FF0FF30 		mov	r0, #-1
 1763              	.LVL224:
 1764 007e 07E0     		b	.L106
 1765              	.LVL225:
 1766              	.L108:
 1767 0080 4FF0FF30 		mov	r0, #-1
 1768              	.LVL226:
 1769 0084 04E0     		b	.L106
 1770              	.LVL227:
 1771              	.L109:
 1772 0086 4FF0FF30 		mov	r0, #-1
 1773              	.LVL228:
 1774 008a 01E0     		b	.L106
 1775              	.LVL229:
 1776              	.L110:
 1777 008c 4FF0FF30 		mov	r0, #-1
 1778              	.LVL230:
 1779              	.L106:
1889:../user/source/DLT645.c ****     }
1890:../user/source/DLT645.c ****     return Energy;
1891:../user/source/DLT645.c **** }
 1780              		.loc 1 1891 0
 1781 0090 30BC     		pop	{r4, r5}
 1782              	.LCFI18:
 1783              		.cfi_restore 5
 1784              		.cfi_restore 4
 1785              		.cfi_def_cfa_offset 0
 1786 0092 7047     		bx	lr
 1787              	.L113:
 1788              		.align	2
 1789              	.L112:
 1790 0094 40420F00 		.word	1000000
 1791              		.cfi_endproc
 1792              	.LFE145:
 1794              		.section	.text.Fill_Energy,"ax",%progbits
 1795              		.align	2
 1796              		.thumb
 1797              		.thumb_func
 1799              	Fill_Energy:
 1800              	.LFB146:
1892:../user/source/DLT645.c **** 
1893:../user/source/DLT645.c **** /********************************************************************
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 67


1894:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½«µçÄÜÁ¿Öµ×ª»¯Îª645Ö¡×Ö½Ú
1895:../user/source/DLT645.c ****  * Êä    Èë£ºµçÄÜÁ¿Öµ£¬ËÄ×Ö½Ú°´´«ÊäË³ĞòÊäÈë
1896:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
1897:../user/source/DLT645.c ****  * Òª    Çó£ºÊä³öÖµÀ©´ó100±¶
1898:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1899:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.10
1900:../user/source/DLT645.c ****  **********************************************************************/
1901:../user/source/DLT645.c **** void Fill_Energy(uint32_t energy, uint8_t *pFstByte, uint8_t *pScdByte, uint8_t *pTirdByte, uint8_t
1902:../user/source/DLT645.c **** {
 1801              		.loc 1 1902 0
 1802              		.cfi_startproc
 1803              		@ args = 4, pretend = 0, frame = 0
 1804              		@ frame_needed = 0, uses_anonymous_args = 0
 1805              	.LVL231:
 1806 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1807              	.LCFI19:
 1808              		.cfi_def_cfa_offset 28
 1809              		.cfi_offset 4, -28
 1810              		.cfi_offset 5, -24
 1811              		.cfi_offset 6, -20
 1812              		.cfi_offset 7, -16
 1813              		.cfi_offset 8, -12
 1814              		.cfi_offset 9, -8
 1815              		.cfi_offset 14, -4
1903:../user/source/DLT645.c ****     *pFstByte = DEC2BCD(energy % 100) + 0x33;
 1816              		.loc 1 1903 0
 1817 0004 2C4D     		ldr	r5, .L116
 1818 0006 A5FB004C 		umull	r4, ip, r5, r0
 1819 000a 4FEA5C18 		lsr	r8, ip, #5
 1820 000e 6426     		movs	r6, #100
 1821 0010 06FB1808 		mls	r8, r6, r8, r0
 1822 0014 294C     		ldr	r4, .L116+4
 1823 0016 A4FB08E7 		umull	lr, r7, r4, r8
 1824 001a 4FEAD70E 		lsr	lr, r7, #3
 1825 001e 0EEB8E09 		add	r9, lr, lr, lsl #2
 1826 0022 4FEA4907 		lsl	r7, r9, #1
 1827 0026 C7EB0807 		rsb	r7, r7, r8
 1828 002a 47EA0E17 		orr	r7, r7, lr, lsl #4
 1829 002e 3337     		adds	r7, r7, #51
 1830 0030 0F70     		strb	r7, [r1]
1904:../user/source/DLT645.c ****     *pScdByte = DEC2BCD(energy / 100 % 100) + 0x33;
 1831              		.loc 1 1904 0
 1832 0032 4FEA5C1C 		lsr	ip, ip, #5
 1833 0036 A5FB0C1E 		umull	r1, lr, r5, ip
 1834              	.LVL232:
 1835 003a 4FEA5E1E 		lsr	lr, lr, #5
 1836 003e 06FB1ECE 		mls	lr, r6, lr, ip
 1837 0042 A4FB0E71 		umull	r7, r1, r4, lr
 1838 0046 CF08     		lsrs	r7, r1, #3
 1839 0048 07EB870C 		add	ip, r7, r7, lsl #2
 1840 004c 4FEA4C01 		lsl	r1, ip, #1
 1841 0050 C1EB0E01 		rsb	r1, r1, lr
 1842 0054 41EA0711 		orr	r1, r1, r7, lsl #4
 1843 0058 3331     		adds	r1, r1, #51
 1844 005a 1170     		strb	r1, [r2]
1905:../user/source/DLT645.c ****     *pTirdByte = DEC2BCD(energy / 10000 % 100) + 0x33;
 1845              		.loc 1 1905 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 68


 1846 005c 184A     		ldr	r2, .L116+8
 1847              	.LVL233:
 1848 005e A2FB0012 		umull	r1, r2, r2, r0
 1849 0062 520B     		lsrs	r2, r2, #13
 1850 0064 A5FB0217 		umull	r1, r7, r5, r2
 1851 0068 7F09     		lsrs	r7, r7, #5
 1852 006a 06FB1727 		mls	r7, r6, r7, r2
 1853 006e A4FB0712 		umull	r1, r2, r4, r7
 1854 0072 D108     		lsrs	r1, r2, #3
 1855 0074 01EB810E 		add	lr, r1, r1, lsl #2
 1856 0078 4FEA4E02 		lsl	r2, lr, #1
 1857 007c 9646     		mov	lr, r2
 1858 007e BA1A     		subs	r2, r7, r2
 1859 0080 42EA0112 		orr	r2, r2, r1, lsl #4
 1860 0084 3332     		adds	r2, r2, #51
 1861 0086 1A70     		strb	r2, [r3]
1906:../user/source/DLT645.c ****     *pForthByte = DEC2BCD(energy / 1000000 % 100) + 0x33;
 1862              		.loc 1 1906 0
 1863 0088 0E4B     		ldr	r3, .L116+12
 1864              	.LVL234:
 1865 008a A3FB0030 		umull	r3, r0, r3, r0
 1866              	.LVL235:
 1867 008e 800C     		lsrs	r0, r0, #18
 1868 0090 A5FB0035 		umull	r3, r5, r5, r0
 1869 0094 6D09     		lsrs	r5, r5, #5
 1870 0096 06FB1505 		mls	r5, r6, r5, r0
 1871 009a A4FB0534 		umull	r3, r4, r4, r5
 1872 009e E408     		lsrs	r4, r4, #3
 1873 00a0 04EB8402 		add	r2, r4, r4, lsl #2
 1874 00a4 5300     		lsls	r3, r2, #1
 1875 00a6 EB1A     		subs	r3, r5, r3
 1876 00a8 43EA0414 		orr	r4, r3, r4, lsl #4
 1877 00ac 3334     		adds	r4, r4, #51
 1878 00ae 079B     		ldr	r3, [sp, #28]
 1879 00b0 1C70     		strb	r4, [r3]
 1880 00b2 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1881              	.LVL236:
 1882              	.L117:
 1883 00b6 00BF     		.align	2
 1884              	.L116:
 1885 00b8 1F85EB51 		.word	1374389535
 1886 00bc CDCCCCCC 		.word	-858993459
 1887 00c0 5917B7D1 		.word	-776530087
 1888 00c4 83DE1B43 		.word	1125899907
 1889              		.cfi_endproc
 1890              	.LFE146:
 1892              		.section	.text.vVoltage_SetMaxMaxValue,"ax",%progbits
 1893              		.align	2
 1894              		.global	vVoltage_SetMaxMaxValue
 1895              		.thumb
 1896              		.thumb_func
 1898              	vVoltage_SetMaxMaxValue:
 1899              	.LFB159:
1907:../user/source/DLT645.c **** }
1908:../user/source/DLT645.c **** 
1909:../user/source/DLT645.c **** /********************************************************************
1910:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµ±Ç°/ÈÕ¶³½áµçÄÜÁ¿µ÷Õû²ßÂÔ
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 69


1911:../user/source/DLT645.c ****  * Êä    Èë£º
1912:../user/source/DLT645.c ****  * Êä    ³ö£º
1913:../user/source/DLT645.c ****  *           
1914:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1915:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.8
1916:../user/source/DLT645.c ****  * ĞŞ¸Ä¼ÇÂ¼£º2019-1-22 08:33:16
1917:../user/source/DLT645.c ****  *          ÈôĞÂÕÙ²âÕæÊµÖµĞ¡ÓÚ´æ´¢µÄÕæÊµÖµ£¬²»ÔÙ°´ÂúÁ¿³Ì´¦Àí£¬·ÀÖ¹³öÏÖ³¬´óµçÁ¿¡£
1918:../user/source/DLT645.c ****  **********************************************************************/
1919:../user/source/DLT645.c **** uint32_t vNow_Frozen_Modify_Mothod(uint32_t nowenergy, uint32_t RealValueAddr, uint32_t ModifiedVal
1920:../user/source/DLT645.c **** {
1921:../user/source/DLT645.c ****     uint32_t RealValue;
1922:../user/source/DLT645.c ****     uint32_t Modified_Value;
1923:../user/source/DLT645.c ****     uint64_t i;
1924:../user/source/DLT645.c ****     /*¶ÁÈ¡´æ´¢µÄÉÏ´ÎÕæÊµÖµºÍĞŞ¸ÄÖµ*/
1925:../user/source/DLT645.c ****     RealValue = Flash_Read_Word(RealValueAddr);
1926:../user/source/DLT645.c ****     Modified_Value = Flash_Read_Word(ModifiedValueAddr);
1927:../user/source/DLT645.c ****     /*ÖÕ¶ËµÚÒ»´ÎÊ¹ÓÃ*/
1928:../user/source/DLT645.c ****     if ((RealValue == 0XFFFFFFFF) || (Modified_Value == 0XFFFFFFFF))
1929:../user/source/DLT645.c ****     {
1930:../user/source/DLT645.c ****         /*ÉÏËÍÖµ´æ´¢ÎªÕæÊµÖµºÍĞŞ¸ÄÖµ*/
1931:../user/source/DLT645.c ****         Flash_Write_Word(RealValueAddr, nowenergy);
1932:../user/source/DLT645.c ****         Flash_Write_Word(ModifiedValueAddr, nowenergy);
1933:../user/source/DLT645.c ****         /*²»ĞŞ¸Ä*/
1934:../user/source/DLT645.c ****         return nowenergy;
1935:../user/source/DLT645.c ****     }
1936:../user/source/DLT645.c ****     else
1937:../user/source/DLT645.c ****     {
1938:../user/source/DLT645.c ****         /*µç±íÖµÒç³öºó¹éÁã*/
1939:../user/source/DLT645.c ****         if (nowenergy < RealValue)
1940:../user/source/DLT645.c ****         {
1941:../user/source/DLT645.c ****             /*i = ((uint64_t)(nowenergy + 99999999 - RealValue) * ucDayfrozen_Modify_Ratio + 50) / 
1942:../user/source/DLT645.c ****             /*2019-1-22 08:35:57£ºÈôĞÂÕÙ²âÖµĞ¡ÓÚ´æ´¢µÄÕæÊµÖµ£¬ÈÏÎªÊı¾İÒì³££¬ÖÃÔöÁ¿Îª0*/
1943:../user/source/DLT645.c ****             i = 0;
1944:../user/source/DLT645.c ****         }
1945:../user/source/DLT645.c ****         else
1946:../user/source/DLT645.c ****         {
1947:../user/source/DLT645.c ****             /*2018-6-27 11:04:38£ºÔö¼ÓËÄÉáÎåÈë£¬µ¥´ÎÔö¼Ó0.05kwhÒÔÏÂÊ±£¬²»ĞŞ¸Ä*/
1948:../user/source/DLT645.c ****             i = ((uint64_t)(nowenergy - RealValue) * ucDayfrozen_Modify_Ratio + 50) / 100;
1949:../user/source/DLT645.c ****         }
1950:../user/source/DLT645.c ****         Modified_Value += (uint32_t)i;
1951:../user/source/DLT645.c ****         /*ÀÛ¼ÆÖµÒç³öºó¹éÁã*/
1952:../user/source/DLT645.c ****         Modified_Value = (Modified_Value > 99999999 ? Modified_Value - 99999999 : Modified_Value);
1953:../user/source/DLT645.c ****         /*½«ÉÏËÍÖµ´æ´¢ÎªÕæÊµÖµ*/
1954:../user/source/DLT645.c ****         Flash_Write_Word(RealValueAddr, nowenergy);
1955:../user/source/DLT645.c ****         /*ĞÂµÄĞŞ¸ÄÖµ¸²¸Ç¾ÉÖµ´æ´¢*/
1956:../user/source/DLT645.c ****         Flash_Write_Word(ModifiedValueAddr, Modified_Value);
1957:../user/source/DLT645.c ****         /*·µ»ØĞŞ¸ÄÖµ*/
1958:../user/source/DLT645.c ****         return Modified_Value;
1959:../user/source/DLT645.c ****     }
1960:../user/source/DLT645.c **** }
1961:../user/source/DLT645.c **** 
1962:../user/source/DLT645.c **** /********************************************************************
1963:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµ±Ç°µçÁ¿Êı¾İĞŞ¸Äº¯Êı
1964:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
1965:../user/source/DLT645.c ****  * Êä    ³ö£º	none
1966:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1967:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.9
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 70


1968:../user/source/DLT645.c ****  case ID_00010000:	//µ±Ç°ÕıÏòÓĞ¹¦×ÜµçÄÜ
1969:../user/source/DLT645.c ****  case ID_00010100:	//µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜ
1970:../user/source/DLT645.c ****  case ID_00010200:	//µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ2µçÄÜ
1971:../user/source/DLT645.c ****  case ID_00010300:	//µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ3µçÄÜ
1972:../user/source/DLT645.c ****  case ID_00010400:	//µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ4µçÄÜ
1973:../user/source/DLT645.c ****  case ID_0001FF00:	//µ±Ç°ÕıÏòÓĞ¹¦µçÄÜÊı¾İ¿é
1974:../user/source/DLT645.c ****  case ID_00150000:	//µ±Ç°AÏàÕıÏòÓĞ¹¦
1975:../user/source/DLT645.c ****  case ID_00290000:	//µ±Ç°BÏàÕıÏòÓĞ¹¦
1976:../user/source/DLT645.c ****  case ID_003D0000:	//µ±Ç°CÏàÕıÏòÓĞ¹¦
1977:../user/source/DLT645.c ****  **********************************************************************/
1978:../user/source/DLT645.c **** void vNowEnergy_Modifier(uint8_t *pucBuffer)
1979:../user/source/DLT645.c **** {
1980:../user/source/DLT645.c ****     uint16_t i;
1981:../user/source/DLT645.c ****     uint32_t energy;    //Êı¾İÓòµÄµÚÒ»¸öµçÁ¿Öµ
1982:../user/source/DLT645.c ****     uint32_t energy_F1; //·ÑÂÊ1µçÁ¿×¨ÓÃ±äÁ¿
1983:../user/source/DLT645.c ****     uint32_t energy_F2; //·ÑÂÊ2µçÁ¿×¨ÓÃ±äÁ¿
1984:../user/source/DLT645.c ****     uint32_t energy_F3; //·ÑÂÊ3µçÁ¿×¨ÓÃ±äÁ¿
1985:../user/source/DLT645.c ****     uint32_t energy_F4; //·ÑÂÊ4µçÁ¿×¨ÓÃ±äÁ¿
1986:../user/source/DLT645.c ****     if (Dayfrozen_Change_State == 0x00)
1987:../user/source/DLT645.c ****         return;
1988:../user/source/DLT645.c ****     energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);
1989:../user/source/DLT645.c ****     switch (pucBuffer[11])
1990:../user/source/DLT645.c ****     {
1991:../user/source/DLT645.c ****     case 0x33:
1992:../user/source/DLT645.c ****     {
1993:../user/source/DLT645.c ****         switch (pucBuffer[12])
1994:../user/source/DLT645.c ****         {
1995:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦×Ü*/
1996:../user/source/DLT645.c ****         case 0x34:
1997:../user/source/DLT645.c ****         {
1998:../user/source/DLT645.c ****             energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_ALL_NOWENERGY_ADDR,
1999:../user/source/DLT645.c ****                                                FLASH_MODIFIED_ALL_NOWENERGY_ADDR);
2000:../user/source/DLT645.c ****             break;
2001:../user/source/DLT645.c ****         }
2002:../user/source/DLT645.c ****         /*AÏàÕıÏòÓĞ¹¦*/
2003:../user/source/DLT645.c ****         case 0x48:
2004:../user/source/DLT645.c ****         {
2005:../user/source/DLT645.c ****             energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_A_NOWENERGY_ADDR,
2006:../user/source/DLT645.c ****                                                FLASH_MODIFIED_A_NOWENERGY_ADDR);
2007:../user/source/DLT645.c ****             break;
2008:../user/source/DLT645.c ****         }
2009:../user/source/DLT645.c ****         /*BÏàÕıÏòÓĞ¹¦*/
2010:../user/source/DLT645.c ****         case 0x5c:
2011:../user/source/DLT645.c ****         {
2012:../user/source/DLT645.c ****             energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_B_NOWENERGY_ADDR,
2013:../user/source/DLT645.c ****                                                FLASH_MODIFIED_B_NOWENERGY_ADDR);
2014:../user/source/DLT645.c ****             break;
2015:../user/source/DLT645.c ****         }
2016:../user/source/DLT645.c ****         /*CÏàÕıÏòÓĞ¹¦*/
2017:../user/source/DLT645.c ****         case 0x70:
2018:../user/source/DLT645.c ****         {
2019:../user/source/DLT645.c ****             energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_C_NOWENERGY_ADDR,
2020:../user/source/DLT645.c ****                                                FLASH_MODIFIED_C_NOWENERGY_ADDR);
2021:../user/source/DLT645.c ****             break;
2022:../user/source/DLT645.c ****         }
2023:../user/source/DLT645.c ****         default:
2024:../user/source/DLT645.c ****             break;
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 71


2025:../user/source/DLT645.c ****         }
2026:../user/source/DLT645.c ****         break;
2027:../user/source/DLT645.c ****     }
2028:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×Ü·ÑÂÊ1*/
2029:../user/source/DLT645.c ****     case 0x34:
2030:../user/source/DLT645.c ****     {
2031:../user/source/DLT645.c ****         energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_F1_NOWENERGY_ADDR,
2032:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F1_NOWENERGY_ADDR);
2033:../user/source/DLT645.c ****         break;
2034:../user/source/DLT645.c ****     }
2035:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×Ü·ÑÂÊ2*/
2036:../user/source/DLT645.c ****     case 0x35:
2037:../user/source/DLT645.c ****     {
2038:../user/source/DLT645.c ****         energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_F2_NOWENERGY_ADDR,
2039:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F2_NOWENERGY_ADDR);
2040:../user/source/DLT645.c ****         break;
2041:../user/source/DLT645.c ****     }
2042:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×Ü·ÑÂÊ3*/
2043:../user/source/DLT645.c ****     case 0x36:
2044:../user/source/DLT645.c ****     {
2045:../user/source/DLT645.c ****         energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_F3_NOWENERGY_ADDR,
2046:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F3_NOWENERGY_ADDR);
2047:../user/source/DLT645.c ****         break;
2048:../user/source/DLT645.c ****     }
2049:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×Ü·ÑÂÊ4*/
2050:../user/source/DLT645.c ****     case 0x37:
2051:../user/source/DLT645.c ****     {
2052:../user/source/DLT645.c ****         energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_F4_NOWENERGY_ADDR,
2053:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F4_NOWENERGY_ADDR);
2054:../user/source/DLT645.c ****         break;
2055:../user/source/DLT645.c ****     }
2056:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×ÜÊı¾İ¿é*/
2057:../user/source/DLT645.c ****     case 0x32:
2058:../user/source/DLT645.c ****     {
2059:../user/source/DLT645.c ****         /*			2018-6-27 09:07:02£ºÖØÇìÕÙ²âÈÕ¶³½áÊı¾İ¿é·¢ÏÖ×ÜºÍËÄ·ÑÂÊÖ®ºÍÓĞ²îÒì£¬
2060:../user/source/DLT645.c **** 	 *			Ô­ÒòÎª³ËÒÔ0.9ºóĞ¡ÊıµãºóµÚÈıÎ»±»ºöÂÔ£¬×ÜµçÁ¿´óÓÚ·Ö·ÑÂÊµçÁ¿Ö®ºÍ£¬
2061:../user/source/DLT645.c **** 	 *			½«×ÜµçÁ¿¼ÆËã·½·¨¸ÄÎª½«ËÄ·ÑÂÊ·ÖµçÁ¿Ïà¼Ó
2062:../user/source/DLT645.c **** 	 *			energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_ALL_NOWENERGY_ADDR,FLASH_MODIFIED_ALL_N
2063:../user/source/DLT645.c **** 	 *			*/
2064:../user/source/DLT645.c ****         energy_F1 = Get_Energy(pucBuffer[18], pucBuffer[19], pucBuffer[20], pucBuffer[21]);
2065:../user/source/DLT645.c ****         energy_F1 = vNow_Frozen_Modify_Mothod(energy_F1, FLASH_REAL_F1_NOWENERGY_ADDR,
2066:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F1_NOWENERGY_ADDR);
2067:../user/source/DLT645.c **** 
2068:../user/source/DLT645.c ****         energy_F2 = Get_Energy(pucBuffer[22], pucBuffer[23], pucBuffer[24], pucBuffer[25]);
2069:../user/source/DLT645.c ****         energy_F2 = vNow_Frozen_Modify_Mothod(energy_F2, FLASH_REAL_F2_NOWENERGY_ADDR,
2070:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F2_NOWENERGY_ADDR);
2071:../user/source/DLT645.c **** 
2072:../user/source/DLT645.c ****         energy_F3 = Get_Energy(pucBuffer[26], pucBuffer[27], pucBuffer[28], pucBuffer[29]);
2073:../user/source/DLT645.c ****         energy_F3 = vNow_Frozen_Modify_Mothod(energy_F3, FLASH_REAL_F3_NOWENERGY_ADDR,
2074:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F3_NOWENERGY_ADDR);
2075:../user/source/DLT645.c **** 
2076:../user/source/DLT645.c ****         energy_F4 = Get_Energy(pucBuffer[30], pucBuffer[31], pucBuffer[32], pucBuffer[33]);
2077:../user/source/DLT645.c ****         energy_F4 = vNow_Frozen_Modify_Mothod(energy_F4, FLASH_REAL_F4_NOWENERGY_ADDR,
2078:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F4_NOWENERGY_ADDR);
2079:../user/source/DLT645.c ****         /*¶ÁÈ¡×ÜµçÁ¿ÕæÊµÖµ*/
2080:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);
2081:../user/source/DLT645.c ****         /*±£´æ×ÜµçÁ¿ÕæÊµÖµ£¬µ¥³­×ÜµçÁ¿Ê±Ê¹ÓÃ*/
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 72


2082:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_REAL_ALL_NOWENERGY_ADDR, energy);
2083:../user/source/DLT645.c ****         /*¸ù¾İ·Ö·ÑÂÊµçÁ¿¼ÆËãĞŞ¸ÄºóµÄ×ÜµçÁ¿*/
2084:../user/source/DLT645.c ****         energy = energy_F1 + energy_F2 + energy_F3 + energy_F4;
2085:../user/source/DLT645.c ****         /*±£´æĞŞ¸ÄÖµ£¬µ¥³­×ÜµçÁ¿Ê±Ê¹ÓÃ*/
2086:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_MODIFIED_ALL_NOWENERGY_ADDR, energy);
2087:../user/source/DLT645.c ****         break;
2088:../user/source/DLT645.c ****     }
2089:../user/source/DLT645.c ****     default:
2090:../user/source/DLT645.c ****         break;
2091:../user/source/DLT645.c ****     }
2092:../user/source/DLT645.c ****     switch (pucBuffer[11])
2093:../user/source/DLT645.c ****     {
2094:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×Ü£¬»òA/B/CÏàÕıÏòÓĞ¹¦*/
2095:../user/source/DLT645.c ****     case 0x33:
2096:../user/source/DLT645.c ****     case 0x34:
2097:../user/source/DLT645.c ****     case 0x35:
2098:../user/source/DLT645.c ****     case 0x36:
2099:../user/source/DLT645.c ****     case 0x37:
2100:../user/source/DLT645.c ****     {
2101:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2102:../user/source/DLT645.c ****         pucBuffer[18] = 0;
2103:../user/source/DLT645.c ****         for (i = 0; i < 18; i++)
2104:../user/source/DLT645.c ****         {
2105:../user/source/DLT645.c ****             pucBuffer[18] += pucBuffer[i];
2106:../user/source/DLT645.c ****         }
2107:../user/source/DLT645.c ****         pucBuffer[19] = 0x16;
2108:../user/source/DLT645.c ****         break;
2109:../user/source/DLT645.c ****     }
2110:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×ÜÊı¾İ¿é*/
2111:../user/source/DLT645.c ****     case 0x32:
2112:../user/source/DLT645.c ****     {
2113:../user/source/DLT645.c ****         /*×Ü*/
2114:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2115:../user/source/DLT645.c ****         /*¼â*/
2116:../user/source/DLT645.c ****         Fill_Energy(energy_F1, &pucBuffer[18], &pucBuffer[19], &pucBuffer[20], &pucBuffer[21]);
2117:../user/source/DLT645.c ****         /*·å*/
2118:../user/source/DLT645.c ****         Fill_Energy(energy_F2, &pucBuffer[22], &pucBuffer[23], &pucBuffer[24], &pucBuffer[25]);
2119:../user/source/DLT645.c ****         /*Æ½*/
2120:../user/source/DLT645.c ****         Fill_Energy(energy_F3, &pucBuffer[26], &pucBuffer[27], &pucBuffer[28], &pucBuffer[29]);
2121:../user/source/DLT645.c ****         /*¹È*/
2122:../user/source/DLT645.c ****         Fill_Energy(energy_F4, &pucBuffer[30], &pucBuffer[31], &pucBuffer[32], &pucBuffer[33]);
2123:../user/source/DLT645.c ****         pucBuffer[34] = 0;
2124:../user/source/DLT645.c ****         for (i = 0; i < 34; i++)
2125:../user/source/DLT645.c ****         {
2126:../user/source/DLT645.c ****             pucBuffer[34] += pucBuffer[i];
2127:../user/source/DLT645.c ****         }
2128:../user/source/DLT645.c ****         pucBuffer[35] = 0x16;
2129:../user/source/DLT645.c ****         break;
2130:../user/source/DLT645.c ****     }
2131:../user/source/DLT645.c ****     default:
2132:../user/source/DLT645.c ****         break;
2133:../user/source/DLT645.c ****     }
2134:../user/source/DLT645.c **** }
2135:../user/source/DLT645.c **** 
2136:../user/source/DLT645.c **** /********************************************************************
2137:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÈÕ¶³½áÊı¾İĞŞ¸Äº¯Êı
2138:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 73


2139:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2140:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2141:../user/source/DLT645.c ****  * Ç°1ÈÕ¶³½áµÚ¶şÌìÕÙ²â¿ªÊ¼¸Ä£¬
2142:../user/source/DLT645.c ****  * Ç°2ÈÕ¶³½áµÚÈıÌìÕÙ²â¿ªÊ¼¸Ä£¬
2143:../user/source/DLT645.c ****  * Ç°3ÈÕ¶«½áµÚËÄÌìÕÙ²â¿ªÊ¼¸Ä
2144:../user/source/DLT645.c ****  * ÈôÉÏµç3ÈÕÄÚ£¬Ç°1ÈÕ¡¢Ç°2ÈÕ¡¢Ç°3ÈÕ¶³½áÃ¿ÌìÕÙ²âµÄ´ÎÊı²»È«ÊÇÒ»´Î£¬ÔòÎŞ·¨
2145:../user/source/DLT645.c ****  * ÊµÏÖ£¬¹Ê²»ĞŞ¸ÄÇ°2ÈÕºÍÇ°3ÈÕ¶³½á
2146:../user/source/DLT645.c ****  *
2147:../user/source/DLT645.c **** 	case ID_05060101:	//ÉÏ1ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£©
2148:../user/source/DLT645.c **** 	case ID_05060102:	//ÉÏ2ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£©
2149:../user/source/DLT645.c **** 	case ID_05060103:	//ÉÏ3ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£© 
2150:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.9
2151:../user/source/DLT645.c ****  **********************************************************************/
2152:../user/source/DLT645.c **** void vDayfrozen_Modifier(uint8_t *pucBuffer) //ĞŞ¸ÄÈÕ¶³½áÊı¾İº¯Êı
2153:../user/source/DLT645.c **** {
2154:../user/source/DLT645.c ****     uint32_t energy, energy_F1, energy_F2, energy_F3, energy_F4;
2155:../user/source/DLT645.c ****     uint16_t i;
2156:../user/source/DLT645.c ****     /*ÉÏ1´Î¡¢ÉÏ2´Î¡¢ÉÏ3´ÎÈÕ¶³½áµçÄÜÊı£º¾İ*/
2157:../user/source/DLT645.c ****     if (Dayfrozen_Change_State == 0x00)
2158:../user/source/DLT645.c ****         return;
2159:../user/source/DLT645.c ****     /*2018-6-27 13:27:07£º
2160:../user/source/DLT645.c **** 	 *ÖØÇì·´À¡ÉÏ1ÈÕ¶³½áÕıÏòÓĞ¹¦×ÜÓëËÄ·ÑÂÊÖ®ºÍ²»Ò»ÖÂ£¬
2161:../user/source/DLT645.c **** 	 *Ô­ÒòÎª³ËÒÔ0.9Ê±Ğ¡ÊıµãºóµÚÈıÎ»±»ºöÂÔ£¬
2162:../user/source/DLT645.c **** 	 *ÕıÏòÓĞ¹¦×Ü²»ÔÙ³ËÒÔ0.9£¬Ö±½ÓÀÛ¼ÓËÄ·ÑÂÊĞŞ¸ÄºóµÄÖµ
2163:../user/source/DLT645.c **** 	 *energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);	
2164:../user/source/DLT645.c **** 	 *energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_1DAYFROZEN_ADDR, FLASH_MODIFIED_1DAYFROZEN
2165:../user/source/DLT645.c **** 	 *Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2166:../user/source/DLT645.c **** 	*/
2167:../user/source/DLT645.c **** 
2168:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦¼â·ÑÂÊµçÁ¿*/
2169:../user/source/DLT645.c ****     energy_F1 = Get_Energy(pucBuffer[18], pucBuffer[19], pucBuffer[20], pucBuffer[21]);
2170:../user/source/DLT645.c ****     energy_F1 = vNow_Frozen_Modify_Mothod(energy_F1, FLASH_REAL_1DAYFROZEN_ADDR + 4,
2171:../user/source/DLT645.c ****                                           FLASH_MODIFIED_1DAYFROZEN_ADDR + 4);
2172:../user/source/DLT645.c ****     Fill_Energy(energy_F1, &pucBuffer[18], &pucBuffer[19], &pucBuffer[20], &pucBuffer[21]);
2173:../user/source/DLT645.c **** 
2174:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦·å·ÑÂÊµçÁ¿*/
2175:../user/source/DLT645.c ****     energy_F2 = Get_Energy(pucBuffer[22], pucBuffer[23], pucBuffer[24], pucBuffer[25]);
2176:../user/source/DLT645.c ****     energy_F2 = vNow_Frozen_Modify_Mothod(energy_F2, FLASH_REAL_1DAYFROZEN_ADDR + 8,
2177:../user/source/DLT645.c ****                                           FLASH_MODIFIED_1DAYFROZEN_ADDR + 8);
2178:../user/source/DLT645.c ****     Fill_Energy(energy_F2, &pucBuffer[22], &pucBuffer[23], &pucBuffer[24], &pucBuffer[25]);
2179:../user/source/DLT645.c **** 
2180:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦Æ½·ÑÂÊµçÁ¿*/
2181:../user/source/DLT645.c ****     energy_F3 = Get_Energy(pucBuffer[26], pucBuffer[27], pucBuffer[28], pucBuffer[29]);
2182:../user/source/DLT645.c ****     energy_F3 = vNow_Frozen_Modify_Mothod(energy_F3, FLASH_REAL_1DAYFROZEN_ADDR + 12,
2183:../user/source/DLT645.c ****                                           FLASH_MODIFIED_1DAYFROZEN_ADDR + 12);
2184:../user/source/DLT645.c ****     Fill_Energy(energy_F3, &pucBuffer[26], &pucBuffer[27], &pucBuffer[28], &pucBuffer[29]);
2185:../user/source/DLT645.c **** 
2186:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦¹È·ÑÂÊµçÁ¿*/
2187:../user/source/DLT645.c ****     energy_F4 = Get_Energy(pucBuffer[30], pucBuffer[31], pucBuffer[32], pucBuffer[33]);
2188:../user/source/DLT645.c ****     energy_F4 = vNow_Frozen_Modify_Mothod(energy_F4, FLASH_REAL_1DAYFROZEN_ADDR + 16,
2189:../user/source/DLT645.c ****                                           FLASH_MODIFIED_1DAYFROZEN_ADDR + 16);
2190:../user/source/DLT645.c ****     Fill_Energy(energy_F4, &pucBuffer[30], &pucBuffer[31], &pucBuffer[32], &pucBuffer[33]);
2191:../user/source/DLT645.c **** 
2192:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×ÜµçÁ¿*/
2193:../user/source/DLT645.c ****     /*»ñÈ¡ÉÏÒ»ÈÕÕæÊµÖµ*/
2194:../user/source/DLT645.c ****     energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);
2195:../user/source/DLT645.c ****     /*´æ´¢ÕæÊµÖµ*/
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 74


2196:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_REAL_1DAYFROZEN_ADDR, energy);
2197:../user/source/DLT645.c ****     /*¼ÆËãĞŞ¸ÄºóµÄÖµ*/
2198:../user/source/DLT645.c ****     energy = energy_F1 + energy_F2 + energy_F3 + energy_F4;
2199:../user/source/DLT645.c ****     /*´æ´¢ĞŞ¸ÄºóµÄÖµ*/
2200:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_MODIFIED_1DAYFROZEN_ADDR, energy);
2201:../user/source/DLT645.c ****     /*×éÖ¡*/
2202:../user/source/DLT645.c ****     Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2203:../user/source/DLT645.c **** 
2204:../user/source/DLT645.c ****     pucBuffer[34] = 0;
2205:../user/source/DLT645.c ****     for (i = 0; i < 34; i++)
2206:../user/source/DLT645.c ****     {
2207:../user/source/DLT645.c ****         pucBuffer[34] += pucBuffer[i];
2208:../user/source/DLT645.c ****     }
2209:../user/source/DLT645.c ****     pucBuffer[35] = 0x16;
2210:../user/source/DLT645.c **** }
2211:../user/source/DLT645.c **** 
2212:../user/source/DLT645.c **** /********************************************************************
2213:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½áËãÈÕÕıÏòÓĞ¹¦µçÁ¿Êı¾İµ÷Õû²ßÂÔ
2214:../user/source/DLT645.c ****  * Êä    Èë£º
2215:../user/source/DLT645.c ****  * Êä    ³ö£º
2216:../user/source/DLT645.c ****  * Ëµ    Ã÷£º½áËãÈÕµçÁ¿ÎªÔö¼ÓÖµ£¬¿ÉÒÔÖ±½Ó°´±ÈÀıËõĞ¡
2217:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2218:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.9.6
2219:../user/source/DLT645.c ****  **********************************************************************/
2220:../user/source/DLT645.c **** uint32_t vAccountEnergy_Modify_Mothod(uint32_t dayfrozen)
2221:../user/source/DLT645.c **** {
2222:../user/source/DLT645.c ****     uint64_t i;
2223:../user/source/DLT645.c ****     i = (uint64_t)dayfrozen * ucDayfrozen_Modify_Ratio;
2224:../user/source/DLT645.c ****     return (uint32_t)(i / 100);
2225:../user/source/DLT645.c **** }
2226:../user/source/DLT645.c **** 
2227:../user/source/DLT645.c **** /********************************************************************
2228:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½áËãÈÕÕıÏòÓĞ¹¦µçÁ¿Êı¾İĞŞ¸Äº¯Êı
2229:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2230:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
2231:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2232:../user/source/DLT645.c ****  *
2233:../user/source/DLT645.c **** 		case ID_00010001:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦×ÜµçÄÜ
2234:../user/source/DLT645.c **** 		case ID_00010101:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜ
2235:../user/source/DLT645.c **** 		case ID_00010201:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ2µçÄÜ 
2236:../user/source/DLT645.c **** 		case ID_00010301:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ3µçÄÜ
2237:../user/source/DLT645.c **** 		case ID_00010401:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ4µçÄÜ
2238:../user/source/DLT645.c **** 		case ID_0001FF01:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦µçÄÜÊı¾İ¿é
2239:../user/source/DLT645.c **** 		case ID_00150001:	//ÉÏ1½áËãÈÕAÏàÕıÏòÓĞ¹¦µçÄÜ
2240:../user/source/DLT645.c **** 		case ID_00290001:	//ÉÏ1½áËãÈÕBÏàÕıÏòÓĞ¹¦µçÄÜ
2241:../user/source/DLT645.c **** 		case ID_003D0001:	//ÉÏ1½áËãÈÕCÏàÕıÏòÓĞ¹¦µçÄÜ
2242:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.9.6
2243:../user/source/DLT645.c ****  **********************************************************************/
2244:../user/source/DLT645.c **** void vAccountEnergy_Modify(uint8_t *pucBuffer)
2245:../user/source/DLT645.c **** {
2246:../user/source/DLT645.c ****     int energy;
2247:../user/source/DLT645.c ****     uint16_t i;
2248:../user/source/DLT645.c ****     if (Dayfrozen_Change_State == 0x00)
2249:../user/source/DLT645.c ****         return;
2250:../user/source/DLT645.c ****     if (pucBuffer[11] == 0x32)
2251:../user/source/DLT645.c ****     {
2252:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦×ÜµçÁ¿*/
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 75


2253:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);
2254:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2255:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2256:../user/source/DLT645.c **** 
2257:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦¼â·ÑÂÊµçÁ¿*/
2258:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[18], pucBuffer[19], pucBuffer[20], pucBuffer[21]);
2259:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2260:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[18], &pucBuffer[19], &pucBuffer[20], &pucBuffer[21]);
2261:../user/source/DLT645.c **** 
2262:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦·å·ÑÂÊµçÁ¿*/
2263:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[22], pucBuffer[23], pucBuffer[24], pucBuffer[25]);
2264:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2265:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[22], &pucBuffer[23], &pucBuffer[24], &pucBuffer[25]);
2266:../user/source/DLT645.c **** 
2267:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦Æ½·ÑÂÊµçÁ¿*/
2268:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[26], pucBuffer[27], pucBuffer[28], pucBuffer[29]);
2269:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2270:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[26], &pucBuffer[27], &pucBuffer[28], &pucBuffer[29]);
2271:../user/source/DLT645.c **** 
2272:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦¹È·ÑÂÊµçÁ¿*/
2273:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[30], pucBuffer[31], pucBuffer[32], pucBuffer[33]);
2274:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2275:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[30], &pucBuffer[31], &pucBuffer[32], &pucBuffer[33]);
2276:../user/source/DLT645.c **** 
2277:../user/source/DLT645.c ****         pucBuffer[34] = 0;
2278:../user/source/DLT645.c ****         for (i = 0; i < 34; i++)
2279:../user/source/DLT645.c ****         {
2280:../user/source/DLT645.c ****             pucBuffer[34] += pucBuffer[i];
2281:../user/source/DLT645.c ****         }
2282:../user/source/DLT645.c ****         pucBuffer[35] = 0x16;
2283:../user/source/DLT645.c ****     }
2284:../user/source/DLT645.c ****     else
2285:../user/source/DLT645.c ****     {
2286:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);
2287:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2288:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2289:../user/source/DLT645.c **** 
2290:../user/source/DLT645.c ****         pucBuffer[18] = 0;
2291:../user/source/DLT645.c ****         for (i = 0; i < 18; i++)
2292:../user/source/DLT645.c ****         {
2293:../user/source/DLT645.c ****             pucBuffer[18] += pucBuffer[i];
2294:../user/source/DLT645.c ****         }
2295:../user/source/DLT645.c ****         pucBuffer[19] = 0x16;
2296:../user/source/DLT645.c ****     }
2297:../user/source/DLT645.c **** }
2298:../user/source/DLT645.c **** 
2299:../user/source/DLT645.c **** /********************************************************************
2300:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä½ûÄÜ/Ê¹ÄÜ
2301:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2302:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
2303:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2304:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2305:../user/source/DLT645.c ****  **********************************************************************/
2306:../user/source/DLT645.c **** void vEnergy_Modify_AbleSet(uint8_t *pucBuffer)
2307:../user/source/DLT645.c **** {
2308:../user/source/DLT645.c ****     uint16_t i;
2309:../user/source/DLT645.c ****     if (pucBuffer[14] == 0xFF) //Ê¹ÄÜ
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 76


2310:../user/source/DLT645.c ****     {
2311:../user/source/DLT645.c ****         Dayfrozen_Change_State = pucBuffer[14];
2312:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZENCHANGESTATE_ADDR, Dayfrozen_Change_State);
2313:../user/source/DLT645.c ****         pucBuffer[8] = (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == Dayfrozen_Change_State
2314:../user/source/DLT645.c ****                             ? 0x94
2315:../user/source/DLT645.c ****                             : 0xD4);
2316:../user/source/DLT645.c ****     }
2317:../user/source/DLT645.c ****     else if (pucBuffer[14] == 0x00) //½û£ºÄÜ
2318:../user/source/DLT645.c ****     {
2319:../user/source/DLT645.c ****         /*Çå¿Õ´æ´¢µÄµçÁ¿Öµ*/
2320:../user/source/DLT645.c ****         FLASH_Unlock();
2321:../user/source/DLT645.c ****         FLASH_ErasePage(FLASH_ENERGY_PAGE);
2322:../user/source/DLT645.c ****         FLASH_Lock();
2323:../user/source/DLT645.c ****         Dayfrozen_Change_State = pucBuffer[14];
2324:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZENCHANGESTATE_ADDR, Dayfrozen_Change_State);
2325:../user/source/DLT645.c ****         pucBuffer[8] = (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == Dayfrozen_Change_State
2326:../user/source/DLT645.c ****                             ? 0x94
2327:../user/source/DLT645.c ****                             : 0xD4);
2328:../user/source/DLT645.c ****     }
2329:../user/source/DLT645.c ****     else
2330:../user/source/DLT645.c ****     {
2331:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
2332:../user/source/DLT645.c ****     }
2333:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
2334:../user/source/DLT645.c ****     pucBuffer[10] = 0;
2335:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
2336:../user/source/DLT645.c ****     {
2337:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
2338:../user/source/DLT645.c ****     }
2339:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
2340:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2341:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
2342:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
2343:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
2344:../user/source/DLT645.c ****     {
2345:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2346:../user/source/DLT645.c ****     }
2347:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
2348:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
2349:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
2350:../user/source/DLT645.c ****     {
2351:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2352:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2353:../user/source/DLT645.c ****     }
2354:../user/source/DLT645.c **** }
2355:../user/source/DLT645.c **** 
2356:../user/source/DLT645.c **** /********************************************************************
2357:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä±ÈÀıÉèÖÃ
2358:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2359:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2360:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2361:../user/source/DLT645.c ****  * ĞŞ¸Ä¼ÇÂ¼£ºĞŞ¸Ä±ÈÀı¸ÄÎªÓÃÁ½¸ö×Ö½Ú±íÊ¾£¬BCDÂë£¬µÍ×Ö½ÚÔÚÇ°£¬¸ß×Ö½ÚÔÚºó
2362:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2363:../user/source/DLT645.c ****  **********************************************************************/
2364:../user/source/DLT645.c **** void vEnergy_Modify_RaitoSet(uint8_t *pucBuffer)
2365:../user/source/DLT645.c **** {
2366:../user/source/DLT645.c ****     uint8_t ratio;
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 77


2367:../user/source/DLT645.c ****     bool ratioValid;
2368:../user/source/DLT645.c ****     uint16_t i;
2369:../user/source/DLT645.c **** 
2370:../user/source/DLT645.c ****     /*ratio = BCD2DEC(pucBuffer[14]);*/
2371:../user/source/DLT645.c ****     //68 AA AA AA AA AA AA 68 91 05 33 74 34 33 20 01 00 16  120%
2372:../user/source/DLT645.c ****     ratio = BCD2DEC(pucBuffer[14]) + BCD2DEC(pucBuffer[15]) * 100;
2373:../user/source/DLT645.c ****     ratioValid = (ratio > 0 && ratio <= 255);
2374:../user/source/DLT645.c ****     if (ratioValid)
2375:../user/source/DLT645.c ****     {
2376:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR, ratio);
2377:../user/source/DLT645.c ****         ucDayfrozen_Modify_Ratio = ratio;
2378:../user/source/DLT645.c ****         if (EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR) == ratio)
2379:../user/source/DLT645.c ****         {
2380:../user/source/DLT645.c ****             pucBuffer[8] = 0x94;
2381:../user/source/DLT645.c ****         }
2382:../user/source/DLT645.c ****         else
2383:../user/source/DLT645.c ****         {
2384:../user/source/DLT645.c ****             pucBuffer[8] = 0xD4;
2385:../user/source/DLT645.c ****         }
2386:../user/source/DLT645.c ****     }
2387:../user/source/DLT645.c ****     else
2388:../user/source/DLT645.c ****     {
2389:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
2390:../user/source/DLT645.c ****     }
2391:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
2392:../user/source/DLT645.c ****     pucBuffer[10] = 0;
2393:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
2394:../user/source/DLT645.c ****     {
2395:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
2396:../user/source/DLT645.c ****     }
2397:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
2398:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2399:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
2400:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
2401:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
2402:../user/source/DLT645.c ****     {
2403:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2404:../user/source/DLT645.c ****     }
2405:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
2406:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
2407:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
2408:../user/source/DLT645.c ****     {
2409:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2410:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2411:../user/source/DLT645.c ****     }
2412:../user/source/DLT645.c **** }
2413:../user/source/DLT645.c **** 
2414:../user/source/DLT645.c **** /********************************************************************
2415:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÕıÏòÓĞ¹¦µçÄÜÁ¿»Ö¸´³ö³§ÉèÖÃ
2416:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2417:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2418:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2419:../user/source/DLT645.c ****  * ĞŞ¸Ä¼ÇÂ¼£º³ÌĞòĞèÖ§³ÖµçÄÜÁ¿µ÷¸ß£¬ËùÒÔ¸´Î»Ê±ÈÕ¶³½áĞŞ¸Ä±ÈÀı£¬²»ÔÙ¸´Î»:2018Äê11ÔÂ5ÈÕ16:11:34
2420:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2421:../user/source/DLT645.c ****  **********************************************************************/
2422:../user/source/DLT645.c **** void vEnergy_Modify_Reset(uint8_t *pucBuffer)
2423:../user/source/DLT645.c **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 78


2424:../user/source/DLT645.c ****     bool cmdValid;
2425:../user/source/DLT645.c ****     uint16_t i;
2426:../user/source/DLT645.c **** 
2427:../user/source/DLT645.c ****     cmdValid = (pucBuffer[14] == 0x00);
2428:../user/source/DLT645.c ****     if (cmdValid)
2429:../user/source/DLT645.c ****     {
2430:../user/source/DLT645.c ****         /*µçÄÜĞŞ¸ÄÊ¹ÄÜ*/
2431:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZENCHANGESTATE_ADDR, 0xff);
2432:../user/source/DLT645.c ****         Dayfrozen_Change_State = 0xff;
2433:../user/source/DLT645.c ****         /*ÈÕ¶³½áĞŞ¸Ä±ÈÀıÉèÖÃÎª90*/
2434:../user/source/DLT645.c ****         /*Flash_Write_Word(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR, 90);*/
2435:../user/source/DLT645.c ****         /*ucDayfrozen_Modify_Ratio = 90;*/
2436:../user/source/DLT645.c ****         /*É¾³ı´æ´¢µÄÔ­Ê¼ºÍĞŞ¸ÄºóµÄµçÁ¿Öµ£¨²Á³ı´æ´¢Ò³£©*/
2437:../user/source/DLT645.c ****         FLASH_Unlock();
2438:../user/source/DLT645.c ****         FLASH_ErasePage(FLASH_ENERGY_PAGE);
2439:../user/source/DLT645.c ****         FLASH_Lock();
2440:../user/source/DLT645.c ****         if ( //(EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR) == 90) &&
2441:../user/source/DLT645.c ****             (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == 0xff))
2442:../user/source/DLT645.c ****         {
2443:../user/source/DLT645.c ****             pucBuffer[8] = 0x94;
2444:../user/source/DLT645.c ****         }
2445:../user/source/DLT645.c ****         else
2446:../user/source/DLT645.c ****         {
2447:../user/source/DLT645.c ****             pucBuffer[8] = 0xD4;
2448:../user/source/DLT645.c ****         }
2449:../user/source/DLT645.c ****     }
2450:../user/source/DLT645.c ****     else
2451:../user/source/DLT645.c ****     {
2452:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
2453:../user/source/DLT645.c ****     }
2454:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
2455:../user/source/DLT645.c ****     pucBuffer[10] = 0;
2456:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
2457:../user/source/DLT645.c ****     {
2458:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
2459:../user/source/DLT645.c ****     }
2460:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
2461:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2462:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
2463:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
2464:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
2465:../user/source/DLT645.c ****     {
2466:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2467:../user/source/DLT645.c ****     }
2468:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
2469:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
2470:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
2471:../user/source/DLT645.c ****     {
2472:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2473:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2474:../user/source/DLT645.c ****     }
2475:../user/source/DLT645.c **** }
2476:../user/source/DLT645.c **** #if 1
2477:../user/source/DLT645.c **** /********************************************************************
2478:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÕıÏòÓĞ¹¦µçÄÜÁ¿²éÑ¯ĞŞ¸Ä±ÈÀı
2479:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2480:../user/source/DLT645.c ****  * Êä    ³ö£º	none
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 79


2481:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2482:../user/source/DLT645.c ****  * ĞŞ¸Ä¼ÇÂ¼£º
2483:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018-11-5 16:12:03
2484:../user/source/DLT645.c ****  **********************************************************************/
2485:../user/source/DLT645.c **** void vEnergy_Modify_ReadSet(uint8_t *pucbuffer)
2486:../user/source/DLT645.c **** {
2487:../user/source/DLT645.c ****     //68 AA AA AA AA AA AA 68 91 04 33 76 34 33 71 16
2488:../user/source/DLT645.c ****     uint8_t ratio;
2489:../user/source/DLT645.c ****     uint32_t i;
2490:../user/source/DLT645.c ****     if (pucbuffer[8] != 0x91)
2491:../user/source/DLT645.c ****         return;
2492:../user/source/DLT645.c ****     //pucbuffer[8] = 0x11;
2493:../user/source/DLT645.c ****     pucbuffer[9] = 0x06;
2494:../user/source/DLT645.c ****     //ratio = EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR);
2495:../user/source/DLT645.c ****     ratio = ucDayfrozen_Modify_Ratio;
2496:../user/source/DLT645.c **** 
2497:../user/source/DLT645.c ****     pucbuffer[14] = DEC2BCD(ratio % 100); //µÍÎ»ÔÚÇ°
2498:../user/source/DLT645.c ****     pucbuffer[15] = DEC2BCD(ratio / 100); //¸ßÎ»ÔÚºó
2499:../user/source/DLT645.c ****     pucbuffer[16] = 0;
2500:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
2501:../user/source/DLT645.c ****     {
2502:../user/source/DLT645.c ****         pucbuffer[16] += pucbuffer[i];
2503:../user/source/DLT645.c ****     }
2504:../user/source/DLT645.c ****     pucbuffer[17] = 0x16;
2505:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2506:../user/source/DLT645.c ****     uc645DataDomainLength = 4;
2507:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, pUartDB->pSndbuf, 18);
2508:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
2509:../user/source/DLT645.c ****     {
2510:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2511:../user/source/DLT645.c ****     }
2512:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
2513:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, pUartIR->pSndbuf, 18);
2514:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
2515:../user/source/DLT645.c ****     {
2516:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2517:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2518:../user/source/DLT645.c ****     }
2519:../user/source/DLT645.c **** }
2520:../user/source/DLT645.c **** #endif
2521:../user/source/DLT645.c **** /********************************************************************
2522:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º²éÑ¯ÈÕ¶³½áÕıÏòÓĞ¹¦×Üµ±Ç°ÕæÊµÖµºÍĞŞ¸ÄÖµ
2523:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2524:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2525:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2526:../user/source/DLT645.c ****  * ĞŞ¸Ä¼ÇÂ¼£º
2527:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018-11-5 16:12:03
2528:../user/source/DLT645.c ****  **********************************************************************/
2529:../user/source/DLT645.c **** void vEnergy_Modify_ReadValue(uint8_t *pucbuffer)
2530:../user/source/DLT645.c **** {
2531:../user/source/DLT645.c ****     uint8_t i;
2532:../user/source/DLT645.c ****     int dayFrozen;
2533:../user/source/DLT645.c ****     uint32_t realValue;
2534:../user/source/DLT645.c ****     uint32_t modifiedValue;
2535:../user/source/DLT645.c **** 
2536:../user/source/DLT645.c ****     pucbuffer[8] = 0x91;
2537:../user/source/DLT645.c ****     pucbuffer[9] = 0x0C;
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 80


2538:../user/source/DLT645.c **** 
2539:../user/source/DLT645.c ****     /*¶ÁÈ¡´æ´¢µÄÉÏ´ÎÕæÊµÖµºÍĞŞ¸ÄÖµ*/
2540:../user/source/DLT645.c ****     realValue = Flash_Read_Word(FLASH_REAL_1DAYFROZEN_ADDR);
2541:../user/source/DLT645.c ****     modifiedValue = Flash_Read_Word(FLASH_MODIFIED_1DAYFROZEN_ADDR);
2542:../user/source/DLT645.c ****     /*ÖÕ¶ËµÚÒ»´ÎÊ¹ÓÃ*/
2543:../user/source/DLT645.c ****     if (realValue == 0XFFFFFFFF)
2544:../user/source/DLT645.c ****     {
2545:../user/source/DLT645.c ****         realValue = 0;
2546:../user/source/DLT645.c ****     }
2547:../user/source/DLT645.c ****     Fill_Energy(realValue, &pucbuffer[14], &pucbuffer[15], &pucbuffer[16], &pucbuffer[17]);
2548:../user/source/DLT645.c ****     if (modifiedValue == 0XFFFFFFFF)
2549:../user/source/DLT645.c ****     {
2550:../user/source/DLT645.c ****         modifiedValue = 0;
2551:../user/source/DLT645.c ****     }
2552:../user/source/DLT645.c ****     Fill_Energy(modifiedValue, &pucbuffer[18], &pucbuffer[19], &pucbuffer[20], &pucbuffer[21]);
2553:../user/source/DLT645.c ****     pucbuffer[22] = 0;
2554:../user/source/DLT645.c ****     for (i = 0; i < 22; i++)
2555:../user/source/DLT645.c ****     {
2556:../user/source/DLT645.c ****         pucbuffer[22] += pucbuffer[i];
2557:../user/source/DLT645.c ****     }
2558:../user/source/DLT645.c ****     pucbuffer[23] = 0x16;
2559:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2560:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
2561:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, pUartDB->pSndbuf, 24);
2562:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
2563:../user/source/DLT645.c ****     {
2564:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2565:../user/source/DLT645.c ****     }
2566:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
2567:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, pUartIR->pSndbuf, 24);
2568:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
2569:../user/source/DLT645.c ****     {
2570:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2571:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2572:../user/source/DLT645.c ****     }
2573:../user/source/DLT645.c **** }
2574:../user/source/DLT645.c **** 
2575:../user/source/DLT645.c **** /********************************************************************
2576:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ºÏ¸ñÉÏÏŞĞŞ¸Äº¯Êı£¨ºìÍâ¿ÚÊÕÖ¡´¦Àí£©
2577:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2578:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2579:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2580:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2581:../user/source/DLT645.c ****  **********************************************************************/
2582:../user/source/DLT645.c **** void vVoltage_SetMaxValue(uint8_t *pucBuffer)
2583:../user/source/DLT645.c **** {
2584:../user/source/DLT645.c ****     int VMAX = 0;
2585:../user/source/DLT645.c ****     uint16_t i = 0;
2586:../user/source/DLT645.c ****     VMAX = Get_Voltage(pucBuffer[14], pucBuffer[15]);
2587:../user/source/DLT645.c ****     if (VMAX > 2200)
2588:../user/source/DLT645.c ****     {
2589:../user/source/DLT645.c ****         Voltage_MAX = VMAX;
2590:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX1_Addr, pucBuffer[14]);
2591:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX2_Addr, pucBuffer[15]);
2592:../user/source/DLT645.c ****         if (((uint8_t)Flash_Read_Word(FLASH_VMAX1_Addr) == pucBuffer[14]) &&
2593:../user/source/DLT645.c ****             ((uint8_t)Flash_Read_Word(FLASH_VMAX2_Addr) == pucBuffer[15]))
2594:../user/source/DLT645.c ****         {
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 81


2595:../user/source/DLT645.c ****             pucBuffer[8] = 0x94; //ÉèÖÃ³É¹¦±êÖ¾
2596:../user/source/DLT645.c ****         }
2597:../user/source/DLT645.c ****         else
2598:../user/source/DLT645.c ****         {
2599:../user/source/DLT645.c ****             pucBuffer[8] = 0xD4;
2600:../user/source/DLT645.c ****         }
2601:../user/source/DLT645.c ****     }
2602:../user/source/DLT645.c ****     else
2603:../user/source/DLT645.c ****     {
2604:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
2605:../user/source/DLT645.c ****     }
2606:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
2607:../user/source/DLT645.c ****     pucBuffer[10] = 0;
2608:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
2609:../user/source/DLT645.c ****     {
2610:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
2611:../user/source/DLT645.c ****     }
2612:../user/source/DLT645.c ****     pucBuffer[11] = 0x16; //½áÊø·û
2613:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
2614:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
2615:../user/source/DLT645.c ****     {
2616:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2617:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2618:../user/source/DLT645.c ****     }
2619:../user/source/DLT645.c **** }
2620:../user/source/DLT645.c **** /********************************************************************
2621:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ºÏ¸ñÏÂÏŞĞŞ¸Äº¯Êı£¨ºìÍâ¿ÚÊÕÖ¡´¦Àí£º£©
2622:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2623:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2624:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2625:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2626:../user/source/DLT645.c ****  **********************************************************************/
2627:../user/source/DLT645.c **** void vVoltage_SetMinValue(uint8_t *pucBuffer)
2628:../user/source/DLT645.c **** {
2629:../user/source/DLT645.c ****     int VMIN = 0;
2630:../user/source/DLT645.c ****     uint16_t i = 0;
2631:../user/source/DLT645.c ****     VMIN = Get_Voltage(pucBuffer[14], pucBuffer[15]);
2632:../user/source/DLT645.c ****     if (VMIN < 2200)
2633:../user/source/DLT645.c ****     {
2634:../user/source/DLT645.c ****         Voltage_MIN = VMIN;
2635:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN1_Addr, pucBuffer[14]);
2636:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN2_Addr, pucBuffer[15]);
2637:../user/source/DLT645.c ****         if ((EEProm_Read(FLASH_VMIN1_Addr) == pucBuffer[14]) &&
2638:../user/source/DLT645.c ****             (EEProm_Read(FLASH_VMIN2_Addr) == pucBuffer[15]))
2639:../user/source/DLT645.c ****         {
2640:../user/source/DLT645.c ****             pucBuffer[8] = 0x94; //ÉèÖÃ³É¹¦±êÖ¾
2641:../user/source/DLT645.c ****         }
2642:../user/source/DLT645.c ****         else
2643:../user/source/DLT645.c ****         {
2644:../user/source/DLT645.c ****             pucBuffer[8] = 0xD4;
2645:../user/source/DLT645.c ****         }
2646:../user/source/DLT645.c ****     }
2647:../user/source/DLT645.c ****     else
2648:../user/source/DLT645.c ****     {
2649:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
2650:../user/source/DLT645.c ****     }
2651:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 82


2652:../user/source/DLT645.c ****     pucBuffer[10] = 0;
2653:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
2654:../user/source/DLT645.c ****     {
2655:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
2656:../user/source/DLT645.c ****     }
2657:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
2658:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
2659:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
2660:../user/source/DLT645.c ****     {
2661:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2662:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2663:../user/source/DLT645.c ****     }
2664:../user/source/DLT645.c **** }
2665:../user/source/DLT645.c **** 
2666:../user/source/DLT645.c **** /********************************************************************
2667:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ĞŞ¸ÄÉÏÏŞĞŞ¸Äº¯Êı£¨ºìÍâ¿ÚÊÕÖ¡´¦Àí£º£©
2668:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2669:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2670:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2671:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2672:../user/source/DLT645.c ****  **********************************************************************/
2673:../user/source/DLT645.c **** void vVoltage_SetMaxMaxValue(uint8_t *pucBuffer)
2674:../user/source/DLT645.c **** {
 1900              		.loc 1 2674 0
 1901              		.cfi_startproc
 1902              		@ args = 0, pretend = 0, frame = 0
 1903              		@ frame_needed = 0, uses_anonymous_args = 0
 1904              		@ link register save eliminated.
 1905              	.LVL237:
 1906 0000 7047     		bx	lr
 1907              		.cfi_endproc
 1908              	.LFE159:
 1910 0002 00BF     		.section	.text.vVoltage_SetMinMinValue,"ax",%progbits
 1911              		.align	2
 1912              		.global	vVoltage_SetMinMinValue
 1913              		.thumb
 1914              		.thumb_func
 1916              	vVoltage_SetMinMinValue:
 1917              	.LFB160:
2675:../user/source/DLT645.c **** }
2676:../user/source/DLT645.c **** /********************************************************************
2677:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ĞŞ¸ÄÏÂÏŞĞŞ¸Äº¯Êı£¨ºìÍâ¿ÚÊÕÖ¡´¦Àí£º£©
2678:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2679:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2680:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2681:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2682:../user/source/DLT645.c ****  **********************************************************************/
2683:../user/source/DLT645.c **** void vVoltage_SetMinMinValue(uint8_t *pucBuffer)
2684:../user/source/DLT645.c **** {
 1918              		.loc 1 2684 0
 1919              		.cfi_startproc
 1920              		@ args = 0, pretend = 0, frame = 0
 1921              		@ frame_needed = 0, uses_anonymous_args = 0
 1922              		@ link register save eliminated.
 1923              	.LVL238:
 1924 0000 7047     		bx	lr
 1925              		.cfi_endproc
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 83


 1926              	.LFE160:
 1928 0002 00BF     		.section	.text.vLoadProfile_Voltage_Modify,"ax",%progbits
 1929              		.align	2
 1930              		.global	vLoadProfile_Voltage_Modify
 1931              		.thumb
 1932              		.thumb_func
 1934              	vLoadProfile_Voltage_Modify:
 1935              	.LFB161:
2685:../user/source/DLT645.c **** }
2686:../user/source/DLT645.c **** #if 0
2687:../user/source/DLT645.c **** /********************************************************************
2688:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º¶ÁÈ¡µçÁ¿ĞŞ¸Ä²ÎÊı£ºÊÇ·ñĞŞ¸Ä/ĞŞ¸Ä±ÈÀı
2689:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2690:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2691:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2692:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2693:../user/source/DLT645.c ****  **********************************************************************/
2694:../user/source/DLT645.c **** void vEnergy_Modify_ReadSet(uint8_t *pucBuffer)
2695:../user/source/DLT645.c **** {
2696:../user/source/DLT645.c ****     uint16_t i;
2697:../user/source/DLT645.c ****     uint8_t tRatio;
2698:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
2699:../user/source/DLT645.c ****     pucBuffer[9] = 0x06;
2700:../user/source/DLT645.c ****     pucBuffer[14] = (uint8_t)Flash_Read_Word(FLASH_DAYFROZENCHANGESTATE_ADDR);
2701:../user/source/DLT645.c ****     tRatio = (uint8_t)Flash_Read_Word(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR);
2702:../user/source/DLT645.c ****     pucBuffer[15] = DEC2BCD(tRatio);
2703:../user/source/DLT645.c ****     pucBuffer[16] = 0;
2704:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
2705:../user/source/DLT645.c ****     {
2706:../user/source/DLT645.c ****         pucBuffer[16] += pucBuffer[i];
2707:../user/source/DLT645.c ****     }
2708:../user/source/DLT645.c ****     pucBuffer[17] = 0x16;
2709:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2710:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
2711:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 18);
2712:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
2713:../user/source/DLT645.c ****     {
2714:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2715:../user/source/DLT645.c ****     }
2716:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
2717:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 18);
2718:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
2719:../user/source/DLT645.c ****     {
2720:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2721:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2722:../user/source/DLT645.c ****     }
2723:../user/source/DLT645.c **** }
2724:../user/source/DLT645.c **** #endif
2725:../user/source/DLT645.c **** 
2726:../user/source/DLT645.c **** /********************************************************************
2727:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º¸ººÉ¼ÇÂ¼Á¬Ğø³­¶ÁµçÑ¹Êı¾İĞŞ¸Äº¯Êı
2728:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2729:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
2730:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2731:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ7ÈÕ21:08:05
2732:../user/source/DLT645.c ****  * µÚÒ»Ö¡£º68 AA AA AA AA AA AA 68 91 0X 32 34 43 39 mm hh DD MM YY 11 11 11 11 11 11 22 22 22 22 2
2733:../user/source/DLT645.c ****  *                                 B1
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 84


2734:../user/source/DLT645.c ****  * ºóĞøÖ¡£º68 AA AA AA AA AA AA 68 92 0X 32 34 43 39 11 11 11 11 22 22 22 22 33 33 33 33 44 44 44 4
2735:../user/source/DLT645.c ****  *                                 B2 04             cs 16
2736:../user/source/DLT645.c ****  **********************************************************************/
2737:../user/source/DLT645.c **** void vLoadProfile_Voltage_Modify(uint8_t *pucbuffer)
2738:../user/source/DLT645.c **** {
 1936              		.loc 1 2738 0
 1937              		.cfi_startproc
 1938              		@ args = 0, pretend = 0, frame = 0
 1939              		@ frame_needed = 0, uses_anonymous_args = 0
 1940              	.LVL239:
 1941              		.loc 1 2738 0
 1942 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1943              	.LCFI20:
 1944              		.cfi_def_cfa_offset 40
 1945              		.cfi_offset 3, -40
 1946              		.cfi_offset 4, -36
 1947              		.cfi_offset 5, -32
 1948              		.cfi_offset 6, -28
 1949              		.cfi_offset 7, -24
 1950              		.cfi_offset 8, -20
 1951              		.cfi_offset 9, -16
 1952              		.cfi_offset 10, -12
 1953              		.cfi_offset 11, -8
 1954              		.cfi_offset 14, -4
 1955 0004 0646     		mov	r6, r0
 1956              	.LVL240:
2739:../user/source/DLT645.c ****     uint16_t n = 0; //Êı¾İ¿é¸öÊı
2740:../user/source/DLT645.c ****     uint16_t length = pucbuffer[9];
 1957              		.loc 1 2740 0
 1958 0006 90F80980 		ldrb	r8, [r0, #9]	@ zero_extendqisi2
 1959              	.LVL241:
2741:../user/source/DLT645.c ****     uint16_t ID_length = 0; //Êı¾İÓòÖĞÊı¾İ±êÊ¶³¤¶È
2742:../user/source/DLT645.c ****     uint32_t voltage = 0;
2743:../user/source/DLT645.c ****     uint16_t i = 0;
2744:../user/source/DLT645.c **** 
2745:../user/source/DLT645.c ****     if (pucbuffer[8] == 0x91 || pucbuffer[8] == 0xB1) //ÎŞºóĞøÖ¡£¬»ò·ÖÖ¡µÄµÚÒ»Ö¡
 1960              		.loc 1 2745 0
 1961 000a 027A     		ldrb	r2, [r0, #8]	@ zero_extendqisi2
 1962 000c 912A     		cmp	r2, #145
 1963 000e 03D0     		beq	.L127
 1964              		.loc 1 2745 0 is_stmt 0 discriminator 1
 1965 0010 B12A     		cmp	r2, #177
 1966 0012 03D0     		beq	.L128
2741:../user/source/DLT645.c ****     uint16_t ID_length = 0; //Êı¾İÓòÖĞÊı¾İ±êÊ¶³¤¶È
 1967              		.loc 1 2741 0 is_stmt 1
 1968 0014 0023     		movs	r3, #0
 1969 0016 02E0     		b	.L121
 1970              	.L127:
2746:../user/source/DLT645.c ****     {
2747:../user/source/DLT645.c ****         ID_length = 9; //Êı¾İ±êÊ¶*4 + Ê±±ê*5
 1971              		.loc 1 2747 0
 1972 0018 0923     		movs	r3, #9
 1973 001a 00E0     		b	.L121
 1974              	.L128:
 1975 001c 0923     		movs	r3, #9
 1976              	.L121:
 1977              	.LVL242:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 85


2748:../user/source/DLT645.c ****     }
2749:../user/source/DLT645.c ****     if (pucbuffer[8] == 0x92 || pucbuffer[8] == 0xB2)
 1978              		.loc 1 2749 0
 1979 001e 922A     		cmp	r2, #146
 1980 0020 02D0     		beq	.L129
 1981              		.loc 1 2749 0 is_stmt 0 discriminator 1
 1982 0022 B22A     		cmp	r2, #178
 1983 0024 03D1     		bne	.L122
 1984 0026 01E0     		b	.L130
 1985              	.L129:
2750:../user/source/DLT645.c ****     {
2751:../user/source/DLT645.c ****         ID_length = 4; //Êı¾İ±êÊ¶*4 £¬ºöÂÔºóÃæµÄSEQ*1£¬Ô­ÒòÎªÕû³ı2ºó½á¹ûÒ»Ñù
 1986              		.loc 1 2751 0 is_stmt 1
 1987 0028 0423     		movs	r3, #4
 1988              	.LVL243:
 1989 002a 00E0     		b	.L122
 1990              	.LVL244:
 1991              	.L130:
 1992 002c 0423     		movs	r3, #4
 1993              	.LVL245:
 1994              	.L122:
2752:../user/source/DLT645.c ****     }
2753:../user/source/DLT645.c ****     n = (length - ID_length) / 2; //µçÑ¹Êı¾İµÄ¸öÊı£¬·ÖÏàºÍ¿éÊı¾İ¶¼ÊÊÓÃ
 1995              		.loc 1 2753 0
 1996 002e 4746     		mov	r7, r8
 1997 0030 9946     		mov	r9, r3
 1998 0032 C3EB0803 		rsb	r3, r3, r8
 1999              	.LVL246:
 2000 0036 03EBD373 		add	r3, r3, r3, lsr #31
 2001 003a C3F34F03 		ubfx	r3, r3, #1, #16
 2002              	.LVL247:
2754:../user/source/DLT645.c ****     while (n--)
 2003              		.loc 1 2754 0
 2004 003e 15E0     		b	.L123
 2005              	.LVL248:
 2006              	.L124:
2755:../user/source/DLT645.c ****     {
2756:../user/source/DLT645.c ****         voltage = Get_Voltage(pucbuffer[10 + ID_length + 2 * n], pucbuffer[11 + ID_length + 2 * n])
 2007              		.loc 1 2756 0
 2008 0040 09F10A04 		add	r4, r9, #10
 2009 0044 4FEA450A 		lsl	r10, r5, #1
 2010 0048 5444     		add	r4, r4, r10
 2011 004a 09F10B03 		add	r3, r9, #11
 2012 004e 9A44     		add	r10, r10, r3
2757:../user/source/DLT645.c ****         voltage = Voltage_Modifier_Method(voltage);
2758:../user/source/DLT645.c ****         pucbuffer[10 + ID_length + 2 * n] = GetLowByte(A_Voltage);
 2013              		.loc 1 2758 0
 2014 0050 DFF84CB0 		ldr	fp, .L132
 2015 0054 DBF80000 		ldr	r0, [fp]
 2016 0058 FFF7FEFF 		bl	GetLowByte
 2017              	.LVL249:
 2018 005c 3055     		strb	r0, [r6, r4]
2759:../user/source/DLT645.c ****         pucbuffer[11 + ID_length + 2 * n] = GetHighByte(A_Voltage);
 2019              		.loc 1 2759 0
 2020 005e DBF80000 		ldr	r0, [fp]
 2021 0062 FFF7FEFF 		bl	GetHighByte
 2022              	.LVL250:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 86


 2023 0066 06F80A00 		strb	r0, [r6, r10]
2754:../user/source/DLT645.c ****     {
 2024              		.loc 1 2754 0
 2025 006a 2B46     		mov	r3, r5
 2026              	.LVL251:
 2027              	.L123:
 2028 006c 5D1E     		subs	r5, r3, #1
 2029 006e ADB2     		uxth	r5, r5
 2030              	.LVL252:
 2031 0070 002B     		cmp	r3, #0
 2032 0072 E5D1     		bne	.L124
2760:../user/source/DLT645.c ****     }
2761:../user/source/DLT645.c ****     pucbuffer[length + 10] = 0;
 2033              		.loc 1 2761 0
 2034 0074 08F10A02 		add	r2, r8, #10
 2035 0078 B118     		adds	r1, r6, r2
 2036 007a B354     		strb	r3, [r6, r2]
2762:../user/source/DLT645.c ****     for (i = 0; i < (length + 10); i++)
 2037              		.loc 1 2762 0
 2038 007c 05E0     		b	.L125
 2039              	.LVL253:
 2040              	.L126:
2763:../user/source/DLT645.c ****     {
2764:../user/source/DLT645.c ****         pucbuffer[length + 10] += pucbuffer[i];
 2041              		.loc 1 2764 0 discriminator 3
 2042 007e F05C     		ldrb	r0, [r6, r3]	@ zero_extendqisi2
 2043 0080 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2044 0082 0244     		add	r2, r2, r0
 2045 0084 0A70     		strb	r2, [r1]
2762:../user/source/DLT645.c ****     for (i = 0; i < (length + 10); i++)
 2046              		.loc 1 2762 0 discriminator 3
 2047 0086 0133     		adds	r3, r3, #1
 2048              	.LVL254:
 2049 0088 9BB2     		uxth	r3, r3
 2050              	.LVL255:
 2051              	.L125:
2762:../user/source/DLT645.c ****     for (i = 0; i < (length + 10); i++)
 2052              		.loc 1 2762 0 is_stmt 0 discriminator 1
 2053 008a 07F10A02 		add	r2, r7, #10
 2054 008e 9342     		cmp	r3, r2
 2055 0090 F5DB     		blt	.L126
2765:../user/source/DLT645.c ****     }
2766:../user/source/DLT645.c ****     pucbuffer[length + 11] = 16;
 2056              		.loc 1 2766 0 is_stmt 1
 2057 0092 08F10B08 		add	r8, r8, #11
 2058              	.LVL256:
 2059 0096 1023     		movs	r3, #16
 2060              	.LVL257:
 2061 0098 06F80830 		strb	r3, [r6, r8]
 2062 009c BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2063              	.LVL258:
 2064              	.L133:
 2065              		.align	2
 2066              	.L132:
 2067 00a0 00000000 		.word	.LANCHOR4
 2068              		.cfi_endproc
 2069              	.LFE161:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 87


 2071              		.section	.text.vLoadProfile_Current_Modify,"ax",%progbits
 2072              		.align	2
 2073              		.global	vLoadProfile_Current_Modify
 2074              		.thumb
 2075              		.thumb_func
 2077              	vLoadProfile_Current_Modify:
 2078              	.LFB162:
2767:../user/source/DLT645.c **** }
2768:../user/source/DLT645.c **** 
2769:../user/source/DLT645.c **** /********************************************************************
2770:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º¸ººÉ¼ÇÂ¼Á¬Ğø³­¶ÁµçÁ÷Êı¾İĞŞ¸Äº¯Êı
2771:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2772:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2773:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2774:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ7ÈÕ21:08:05
2775:../user/source/DLT645.c ****  **********************************************************************/
2776:../user/source/DLT645.c **** void vLoadProfile_Current_Modify(uint8_t *pucbuffer)
2777:../user/source/DLT645.c **** {
 2079              		.loc 1 2777 0
 2080              		.cfi_startproc
 2081              		@ args = 0, pretend = 0, frame = 0
 2082              		@ frame_needed = 0, uses_anonymous_args = 0
 2083              		@ link register save eliminated.
 2084              	.LVL259:
 2085 0000 7047     		bx	lr
 2086              		.cfi_endproc
 2087              	.LFE162:
 2089 0002 00BF     		.section	.text.Get_VChange_State,"ax",%progbits
 2090              		.align	2
 2091              		.global	Get_VChange_State
 2092              		.thumb
 2093              		.thumb_func
 2095              	Get_VChange_State:
 2096              	.LFB115:
 392:../user/source/DLT645.c ****     uint8_t i;
 2097              		.loc 1 392 0
 2098              		.cfi_startproc
 2099              		@ args = 0, pretend = 0, frame = 0
 2100              		@ frame_needed = 0, uses_anonymous_args = 0
 2101              	.LVL260:
 392:../user/source/DLT645.c ****     uint8_t i;
 2102              		.loc 1 392 0
 2103 0000 38B5     		push	{r3, r4, r5, lr}
 2104              	.LCFI21:
 2105              		.cfi_def_cfa_offset 16
 2106              		.cfi_offset 3, -16
 2107              		.cfi_offset 4, -12
 2108              		.cfi_offset 5, -8
 2109              		.cfi_offset 14, -4
 2110 0002 0446     		mov	r4, r0
 394:../user/source/DLT645.c ****     {
 2111              		.loc 1 394 0
 2112 0004 837B     		ldrb	r3, [r0, #14]	@ zero_extendqisi2
 2113 0006 342B     		cmp	r3, #52
 2114 0008 02D1     		bne	.L136
 396:../user/source/DLT645.c ****     }
 2115              		.loc 1 396 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 88


 2116 000a 0021     		movs	r1, #0
 2117 000c 244A     		ldr	r2, .L145
 2118 000e 1170     		strb	r1, [r2]
 2119              	.L136:
 398:../user/source/DLT645.c ****     {
 2120              		.loc 1 398 0
 2121 0010 332B     		cmp	r3, #51
 2122 0012 02D1     		bne	.L137
 400:../user/source/DLT645.c ****     }
 2123              		.loc 1 400 0
 2124 0014 FF22     		movs	r2, #255
 2125 0016 224B     		ldr	r3, .L145
 2126 0018 1A70     		strb	r2, [r3]
 2127              	.L137:
 402:../user/source/DLT645.c ****     {
 2128              		.loc 1 402 0
 2129 001a 214B     		ldr	r3, .L145
 2130 001c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2131 001e 2148     		ldr	r0, .L145+4
 2132              	.LVL261:
 2133 0020 FFF7FEFF 		bl	Flash_Write_Word
 2134              	.LVL262:
 2135 0024 10B9     		cbnz	r0, .L138
 404:../user/source/DLT645.c ****     }
 2136              		.loc 1 404 0
 2137 0026 D423     		movs	r3, #212
 2138 0028 2372     		strb	r3, [r4, #8]
 2139 002a 01E0     		b	.L139
 2140              	.L138:
 407:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
 2141              		.loc 1 407 0
 2142 002c 9423     		movs	r3, #148
 2143 002e 2372     		strb	r3, [r4, #8]
 2144              	.L139:
 408:../user/source/DLT645.c ****     pucBuffer[10] = 0x00;
 2145              		.loc 1 408 0
 2146 0030 0023     		movs	r3, #0
 2147 0032 6372     		strb	r3, [r4, #9]
 409:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 2148              		.loc 1 409 0
 2149 0034 A372     		strb	r3, [r4, #10]
 2150              	.LVL263:
 410:../user/source/DLT645.c ****     {
 2151              		.loc 1 410 0
 2152 0036 05E0     		b	.L140
 2153              	.LVL264:
 2154              	.L141:
 412:../user/source/DLT645.c ****     }
 2155              		.loc 1 412 0 discriminator 3
 2156 0038 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2157 003a A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 2158 003c 0A44     		add	r2, r2, r1
 2159 003e A272     		strb	r2, [r4, #10]
 410:../user/source/DLT645.c ****     {
 2160              		.loc 1 410 0 discriminator 3
 2161 0040 0133     		adds	r3, r3, #1
 2162              	.LVL265:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 89


 2163 0042 DBB2     		uxtb	r3, r3
 2164              	.LVL266:
 2165              	.L140:
 410:../user/source/DLT645.c ****     {
 2166              		.loc 1 410 0 is_stmt 0 discriminator 1
 2167 0044 092B     		cmp	r3, #9
 2168 0046 F7D9     		bls	.L141
 414:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2169              		.loc 1 414 0 is_stmt 1
 2170 0048 1623     		movs	r3, #22
 2171              	.LVL267:
 2172 004a E372     		strb	r3, [r4, #11]
 416:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 2173              		.loc 1 416 0
 2174 004c 0022     		movs	r2, #0
 2175 004e 164B     		ldr	r3, .L145+8
 2176 0050 1A70     		strb	r2, [r3]
 417:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 2177              		.loc 1 417 0
 2178 0052 164D     		ldr	r5, .L145+12
 2179 0054 2B68     		ldr	r3, [r5]
 2180 0056 0C22     		movs	r2, #12
 2181 0058 9968     		ldr	r1, [r3, #8]
 2182 005a 2046     		mov	r0, r4
 2183 005c FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2184              	.LVL268:
 418:../user/source/DLT645.c ****     {
 2185              		.loc 1 418 0
 2186 0060 2B68     		ldr	r3, [r5]
 2187 0062 9868     		ldr	r0, [r3, #8]
 2188 0064 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2189              	.LVL269:
 2190 0068 10B9     		cbnz	r0, .L142
 420:../user/source/DLT645.c ****     }
 2191              		.loc 1 420 0
 2192 006a 1148     		ldr	r0, .L145+16
 2193 006c FFF7FEFF 		bl	Uart_DataPut
 2194              	.LVL270:
 2195              	.L142:
 422:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 2196              		.loc 1 422 0
 2197 0070 104D     		ldr	r5, .L145+20
 2198 0072 2B68     		ldr	r3, [r5]
 2199 0074 0C22     		movs	r2, #12
 2200 0076 9968     		ldr	r1, [r3, #8]
 2201 0078 2046     		mov	r0, r4
 2202 007a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2203              	.LVL271:
 423:../user/source/DLT645.c ****     {
 2204              		.loc 1 423 0
 2205 007e 2B68     		ldr	r3, [r5]
 2206 0080 9868     		ldr	r0, [r3, #8]
 2207 0082 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2208              	.LVL272:
 2209 0086 50B9     		cbnz	r0, .L135
 425:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 2210              		.loc 1 425 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 90


 2211 0088 0B4C     		ldr	r4, .L145+24
 2212              	.LVL273:
 2213 008a 0022     		movs	r2, #0
 2214 008c 0B49     		ldr	r1, .L145+28
 2215 008e 2046     		mov	r0, r4
 2216 0090 FFF7FEFF 		bl	USART_ITConfig
 2217              	.LVL274:
 426:../user/source/DLT645.c ****     }
 2218              		.loc 1 426 0
 2219 0094 0122     		movs	r2, #1
 2220 0096 0A49     		ldr	r1, .L145+32
 2221 0098 2046     		mov	r0, r4
 2222 009a FFF7FEFF 		bl	USART_ITConfig
 2223              	.LVL275:
 2224              	.L135:
 2225 009e 38BD     		pop	{r3, r4, r5, pc}
 2226              	.L146:
 2227              		.align	2
 2228              	.L145:
 2229 00a0 00000000 		.word	.LANCHOR5
 2230 00a4 14EF0108 		.word	134344468
 2231 00a8 00000000 		.word	.LANCHOR0
 2232 00ac 00000000 		.word	.LANCHOR6
 2233 00b0 00480040 		.word	1073760256
 2234 00b4 00000000 		.word	.LANCHOR7
 2235 00b8 00440040 		.word	1073759232
 2236 00bc 05010500 		.word	327941
 2237 00c0 07010700 		.word	459015
 2238              		.cfi_endproc
 2239              	.LFE115:
 2241              		.section	.text.Set_Voltage_Limit,"ax",%progbits
 2242              		.align	2
 2243              		.global	Set_Voltage_Limit
 2244              		.thumb
 2245              		.thumb_func
 2247              	Set_Voltage_Limit:
 2248              	.LFB116:
 437:../user/source/DLT645.c ****     int VMAX = 0;
 2249              		.loc 1 437 0
 2250              		.cfi_startproc
 2251              		@ args = 0, pretend = 0, frame = 0
 2252              		@ frame_needed = 0, uses_anonymous_args = 0
 2253              	.LVL276:
 2254 0000 70B5     		push	{r4, r5, r6, lr}
 2255              	.LCFI22:
 2256              		.cfi_def_cfa_offset 16
 2257              		.cfi_offset 4, -16
 2258              		.cfi_offset 5, -12
 2259              		.cfi_offset 6, -8
 2260              		.cfi_offset 14, -4
 2261 0002 0446     		mov	r4, r0
 2262              	.LVL277:
 441:../user/source/DLT645.c ****     VMIN = Get_Voltage(pucBuffer[16], pucBuffer[17]);
 2263              		.loc 1 441 0
 2264 0004 867B     		ldrb	r6, [r0, #14]	@ zero_extendqisi2
 2265 0006 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 2266 0008 3046     		mov	r0, r6
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 91


 2267              	.LVL278:
 2268 000a FFF7FEFF 		bl	Get_Voltage
 2269              	.LVL279:
 2270 000e 0546     		mov	r5, r0
 2271              	.LVL280:
 442:../user/source/DLT645.c ****     if ((VMAX > VMIN) && (VMAX < Voltage_MAX_MAX) //µçÑ¹ÏŞÖµÉèÖÃÌõ¼ş£¬ÉÏÏŞ´óÓÚÏÂÏŞÇÒĞ¡ÓÚÉÏÉÏÏŞ
 2272              		.loc 1 442 0
 2273 0010 617C     		ldrb	r1, [r4, #17]	@ zero_extendqisi2
 2274 0012 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 2275              	.LVL281:
 2276 0014 FFF7FEFF 		bl	Get_Voltage
 2277              	.LVL282:
 443:../user/source/DLT645.c ****         && (VMIN > Voltage_MIN_MIN))              //µçÑ¹ÏÂÏŞ´óÓÚÏÂÏÂÏŞ
 2278              		.loc 1 443 0
 2279 0018 8542     		cmp	r5, r0
 2280 001a 1CDD     		ble	.L148
 443:../user/source/DLT645.c ****         && (VMIN > Voltage_MIN_MIN))              //µçÑ¹ÏÂÏŞ´óÓÚÏÂÏÂÏŞ
 2281              		.loc 1 443 0 is_stmt 0 discriminator 1
 2282 001c B5F52F6F 		cmp	r5, #2800
 2283 0020 19DA     		bge	.L148
 444:../user/source/DLT645.c ****     {
 2284              		.loc 1 444 0 is_stmt 1
 2285 0022 B0F5966F 		cmp	r0, #1200
 2286 0026 16DD     		ble	.L148
 446:../user/source/DLT645.c ****         Voltage_MIN = VMIN;
 2287              		.loc 1 446 0
 2288 0028 274B     		ldr	r3, .L155
 2289 002a 1D60     		str	r5, [r3]
 447:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX1_Addr, pucBuffer[14]);
 2290              		.loc 1 447 0
 2291 002c 274B     		ldr	r3, .L155+4
 2292 002e 1860     		str	r0, [r3]
 448:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX2_Addr, pucBuffer[15]);
 2293              		.loc 1 448 0
 2294 0030 3146     		mov	r1, r6
 2295 0032 2748     		ldr	r0, .L155+8
 2296              	.LVL283:
 2297 0034 FFF7FEFF 		bl	Flash_Write_Word
 2298              	.LVL284:
 449:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN1_Addr, pucBuffer[16]);
 2299              		.loc 1 449 0
 2300 0038 E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
 2301 003a 2648     		ldr	r0, .L155+12
 2302 003c FFF7FEFF 		bl	Flash_Write_Word
 2303              	.LVL285:
 450:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN2_Addr, pucBuffer[17]);
 2304              		.loc 1 450 0
 2305 0040 217C     		ldrb	r1, [r4, #16]	@ zero_extendqisi2
 2306 0042 2548     		ldr	r0, .L155+16
 2307 0044 FFF7FEFF 		bl	Flash_Write_Word
 2308              	.LVL286:
 451:../user/source/DLT645.c ****         pucBuffer[8] = 0x94; //ÉèÖÃ³É¹¦±êÖ¾
 2309              		.loc 1 451 0
 2310 0048 617C     		ldrb	r1, [r4, #17]	@ zero_extendqisi2
 2311 004a 2448     		ldr	r0, .L155+20
 2312 004c FFF7FEFF 		bl	Flash_Write_Word
 2313              	.LVL287:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 92


 452:../user/source/DLT645.c ****     }
 2314              		.loc 1 452 0
 2315 0050 9423     		movs	r3, #148
 2316 0052 2372     		strb	r3, [r4, #8]
 2317 0054 01E0     		b	.L149
 2318              	.LVL288:
 2319              	.L148:
 456:../user/source/DLT645.c ****     }
 2320              		.loc 1 456 0
 2321 0056 D423     		movs	r3, #212
 2322 0058 2372     		strb	r3, [r4, #8]
 2323              	.LVL289:
 2324              	.L149:
 458:../user/source/DLT645.c ****     pucBuffer[10] = 0x00; //ÇóÈ¡Ğ£ÑéºÍ
 2325              		.loc 1 458 0
 2326 005a 0023     		movs	r3, #0
 2327 005c 6372     		strb	r3, [r4, #9]
 459:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 2328              		.loc 1 459 0
 2329 005e A372     		strb	r3, [r4, #10]
 460:../user/source/DLT645.c ****     {
 2330              		.loc 1 460 0
 2331 0060 04E0     		b	.L150
 2332              	.LVL290:
 2333              	.L151:
 462:../user/source/DLT645.c ****     }
 2334              		.loc 1 462 0 discriminator 3
 2335 0062 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2336 0064 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 2337 0066 0A44     		add	r2, r2, r1
 2338 0068 A272     		strb	r2, [r4, #10]
 460:../user/source/DLT645.c ****     {
 2339              		.loc 1 460 0 discriminator 3
 2340 006a 0133     		adds	r3, r3, #1
 2341              	.LVL291:
 2342              	.L150:
 460:../user/source/DLT645.c ****     {
 2343              		.loc 1 460 0 is_stmt 0 discriminator 1
 2344 006c 092B     		cmp	r3, #9
 2345 006e F8DD     		ble	.L151
 464:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2346              		.loc 1 464 0 is_stmt 1
 2347 0070 1623     		movs	r3, #22
 2348              	.LVL292:
 2349 0072 E372     		strb	r3, [r4, #11]
 466:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 2350              		.loc 1 466 0
 2351 0074 0022     		movs	r2, #0
 2352 0076 1A4B     		ldr	r3, .L155+24
 2353 0078 1A70     		strb	r2, [r3]
 467:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 2354              		.loc 1 467 0
 2355 007a 1A4D     		ldr	r5, .L155+28
 2356              	.LVL293:
 2357 007c 2B68     		ldr	r3, [r5]
 2358 007e 0C22     		movs	r2, #12
 2359 0080 9968     		ldr	r1, [r3, #8]
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 93


 2360 0082 2046     		mov	r0, r4
 2361 0084 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2362              	.LVL294:
 468:../user/source/DLT645.c ****     {
 2363              		.loc 1 468 0
 2364 0088 2B68     		ldr	r3, [r5]
 2365 008a 9868     		ldr	r0, [r3, #8]
 2366 008c FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2367              	.LVL295:
 2368 0090 10B9     		cbnz	r0, .L152
 470:../user/source/DLT645.c ****     }
 2369              		.loc 1 470 0
 2370 0092 1548     		ldr	r0, .L155+32
 2371 0094 FFF7FEFF 		bl	Uart_DataPut
 2372              	.LVL296:
 2373              	.L152:
 473:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 2374              		.loc 1 473 0
 2375 0098 144D     		ldr	r5, .L155+36
 2376 009a 2B68     		ldr	r3, [r5]
 2377 009c 0C22     		movs	r2, #12
 2378 009e 9968     		ldr	r1, [r3, #8]
 2379 00a0 2046     		mov	r0, r4
 2380 00a2 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2381              	.LVL297:
 474:../user/source/DLT645.c ****     {
 2382              		.loc 1 474 0
 2383 00a6 2B68     		ldr	r3, [r5]
 2384 00a8 9868     		ldr	r0, [r3, #8]
 2385 00aa FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2386              	.LVL298:
 2387 00ae 50B9     		cbnz	r0, .L147
 476:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 2388              		.loc 1 476 0
 2389 00b0 0F4C     		ldr	r4, .L155+40
 2390              	.LVL299:
 2391 00b2 0022     		movs	r2, #0
 2392 00b4 0F49     		ldr	r1, .L155+44
 2393 00b6 2046     		mov	r0, r4
 2394 00b8 FFF7FEFF 		bl	USART_ITConfig
 2395              	.LVL300:
 477:../user/source/DLT645.c ****     }
 2396              		.loc 1 477 0
 2397 00bc 0122     		movs	r2, #1
 2398 00be 0E49     		ldr	r1, .L155+48
 2399 00c0 2046     		mov	r0, r4
 2400 00c2 FFF7FEFF 		bl	USART_ITConfig
 2401              	.LVL301:
 2402              	.L147:
 2403 00c6 70BD     		pop	{r4, r5, r6, pc}
 2404              	.L156:
 2405              		.align	2
 2406              	.L155:
 2407 00c8 00000000 		.word	Voltage_MAX
 2408 00cc 00000000 		.word	Voltage_MIN
 2409 00d0 00EF0108 		.word	134344448
 2410 00d4 04EF0108 		.word	134344452
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 94


 2411 00d8 08EF0108 		.word	134344456
 2412 00dc 0CEF0108 		.word	134344460
 2413 00e0 00000000 		.word	.LANCHOR0
 2414 00e4 00000000 		.word	.LANCHOR6
 2415 00e8 00480040 		.word	1073760256
 2416 00ec 00000000 		.word	.LANCHOR7
 2417 00f0 00440040 		.word	1073759232
 2418 00f4 05010500 		.word	327941
 2419 00f8 07010700 		.word	459015
 2420              		.cfi_endproc
 2421              	.LFE116:
 2423              		.section	.text.Query_Voltage_Limit,"ax",%progbits
 2424              		.align	2
 2425              		.global	Query_Voltage_Limit
 2426              		.thumb
 2427              		.thumb_func
 2429              	Query_Voltage_Limit:
 2430              	.LFB117:
 489:../user/source/DLT645.c ****     int i = 0;
 2431              		.loc 1 489 0
 2432              		.cfi_startproc
 2433              		@ args = 0, pretend = 0, frame = 0
 2434              		@ frame_needed = 0, uses_anonymous_args = 0
 2435              	.LVL302:
 2436 0000 38B5     		push	{r3, r4, r5, lr}
 2437              	.LCFI23:
 2438              		.cfi_def_cfa_offset 16
 2439              		.cfi_offset 3, -16
 2440              		.cfi_offset 4, -12
 2441              		.cfi_offset 5, -8
 2442              		.cfi_offset 14, -4
 2443 0002 0446     		mov	r4, r0
 2444              	.LVL303:
 491:../user/source/DLT645.c ****     pucBuffer[9] = 0x0C;
 2445              		.loc 1 491 0
 2446 0004 9123     		movs	r3, #145
 2447 0006 0372     		strb	r3, [r0, #8]
 492:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(Voltage_MAX_MAX);
 2448              		.loc 1 492 0
 2449 0008 0C23     		movs	r3, #12
 2450 000a 4372     		strb	r3, [r0, #9]
 493:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(Voltage_MAX_MAX); //µçÑ¹ÉÏÉÏÏŞ
 2451              		.loc 1 493 0
 2452 000c 4FF42F60 		mov	r0, #2800
 2453              	.LVL304:
 2454 0010 FFF7FEFF 		bl	GetLowByte
 2455              	.LVL305:
 2456 0014 A073     		strb	r0, [r4, #14]
 494:../user/source/DLT645.c ****     pucBuffer[16] = GetLowByte(Voltage_MIN_MIN);
 2457              		.loc 1 494 0
 2458 0016 4FF42F60 		mov	r0, #2800
 2459 001a FFF7FEFF 		bl	GetHighByte
 2460              	.LVL306:
 2461 001e E073     		strb	r0, [r4, #15]
 495:../user/source/DLT645.c ****     pucBuffer[17] = GetHighByte(Voltage_MIN_MIN); //µçÑ¹ÏÂÏÂÏŞ
 2462              		.loc 1 495 0
 2463 0020 4FF49660 		mov	r0, #1200
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 95


 2464 0024 FFF7FEFF 		bl	GetLowByte
 2465              	.LVL307:
 2466 0028 2074     		strb	r0, [r4, #16]
 496:../user/source/DLT645.c ****     pucBuffer[18] = GetLowByte(Voltage_MAX);
 2467              		.loc 1 496 0
 2468 002a 4FF49660 		mov	r0, #1200
 2469 002e FFF7FEFF 		bl	GetHighByte
 2470              	.LVL308:
 2471 0032 6074     		strb	r0, [r4, #17]
 497:../user/source/DLT645.c ****     pucBuffer[19] = GetHighByte(Voltage_MAX); //µçÑ¹ÉÏÏŞÖµ
 2472              		.loc 1 497 0
 2473 0034 244B     		ldr	r3, .L163
 2474 0036 1D68     		ldr	r5, [r3]
 2475 0038 2846     		mov	r0, r5
 2476 003a FFF7FEFF 		bl	GetLowByte
 2477              	.LVL309:
 2478 003e A074     		strb	r0, [r4, #18]
 498:../user/source/DLT645.c ****     pucBuffer[20] = GetLowByte(Voltage_MIN);
 2479              		.loc 1 498 0
 2480 0040 2846     		mov	r0, r5
 2481 0042 FFF7FEFF 		bl	GetHighByte
 2482              	.LVL310:
 2483 0046 E074     		strb	r0, [r4, #19]
 499:../user/source/DLT645.c ****     pucBuffer[21] = GetHighByte(Voltage_MIN); //µçÑ¹ÏÂÏŞÖµ
 2484              		.loc 1 499 0
 2485 0048 204B     		ldr	r3, .L163+4
 2486 004a 1D68     		ldr	r5, [r3]
 2487 004c 2846     		mov	r0, r5
 2488 004e FFF7FEFF 		bl	GetLowByte
 2489              	.LVL311:
 2490 0052 2075     		strb	r0, [r4, #20]
 500:../user/source/DLT645.c ****     pucBuffer[22] = 0x00;                     //ÇóÈ¡Ğ£ÑéºÍ
 2491              		.loc 1 500 0
 2492 0054 2846     		mov	r0, r5
 2493 0056 FFF7FEFF 		bl	GetHighByte
 2494              	.LVL312:
 2495 005a 6075     		strb	r0, [r4, #21]
 501:../user/source/DLT645.c ****     for (i = 0; i < 24 - 2; i++)              //±¨ÎÄ³¤¶È24
 2496              		.loc 1 501 0
 2497 005c 0023     		movs	r3, #0
 2498 005e A375     		strb	r3, [r4, #22]
 502:../user/source/DLT645.c ****     {
 2499              		.loc 1 502 0
 2500 0060 04E0     		b	.L158
 2501              	.LVL313:
 2502              	.L159:
 504:../user/source/DLT645.c ****     }
 2503              		.loc 1 504 0 discriminator 3
 2504 0062 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2505 0064 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
 2506 0066 0A44     		add	r2, r2, r1
 2507 0068 A275     		strb	r2, [r4, #22]
 502:../user/source/DLT645.c ****     {
 2508              		.loc 1 502 0 discriminator 3
 2509 006a 0133     		adds	r3, r3, #1
 2510              	.LVL314:
 2511              	.L158:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 96


 502:../user/source/DLT645.c ****     {
 2512              		.loc 1 502 0 is_stmt 0 discriminator 1
 2513 006c 152B     		cmp	r3, #21
 2514 006e F8DD     		ble	.L159
 506:../user/source/DLT645.c ****     uc645DataDomainLength = 12;
 2515              		.loc 1 506 0 is_stmt 1
 2516 0070 1623     		movs	r3, #22
 2517              	.LVL315:
 2518 0072 E375     		strb	r3, [r4, #23]
 507:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2519              		.loc 1 507 0
 2520 0074 0C22     		movs	r2, #12
 2521 0076 164B     		ldr	r3, .L163+8
 2522 0078 1A70     		strb	r2, [r3]
 509:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 2523              		.loc 1 509 0
 2524 007a 164D     		ldr	r5, .L163+12
 2525 007c 2B68     		ldr	r3, [r5]
 2526 007e 9968     		ldr	r1, [r3, #8]
 2527 0080 2046     		mov	r0, r4
 2528 0082 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2529              	.LVL316:
 510:../user/source/DLT645.c ****     {
 2530              		.loc 1 510 0
 2531 0086 2B68     		ldr	r3, [r5]
 2532 0088 9868     		ldr	r0, [r3, #8]
 2533 008a FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2534              	.LVL317:
 2535 008e 10B9     		cbnz	r0, .L160
 512:../user/source/DLT645.c ****     }
 2536              		.loc 1 512 0
 2537 0090 1148     		ldr	r0, .L163+16
 2538 0092 FFF7FEFF 		bl	Uart_DataPut
 2539              	.LVL318:
 2540              	.L160:
 515:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 2541              		.loc 1 515 0
 2542 0096 114D     		ldr	r5, .L163+20
 2543 0098 2B68     		ldr	r3, [r5]
 2544 009a 1822     		movs	r2, #24
 2545 009c 9968     		ldr	r1, [r3, #8]
 2546 009e 2046     		mov	r0, r4
 2547 00a0 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2548              	.LVL319:
 516:../user/source/DLT645.c ****     {
 2549              		.loc 1 516 0
 2550 00a4 2B68     		ldr	r3, [r5]
 2551 00a6 9868     		ldr	r0, [r3, #8]
 2552 00a8 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2553              	.LVL320:
 2554 00ac 50B9     		cbnz	r0, .L157
 518:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 2555              		.loc 1 518 0
 2556 00ae 0C4C     		ldr	r4, .L163+24
 2557              	.LVL321:
 2558 00b0 0022     		movs	r2, #0
 2559 00b2 0C49     		ldr	r1, .L163+28
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 97


 2560 00b4 2046     		mov	r0, r4
 2561 00b6 FFF7FEFF 		bl	USART_ITConfig
 2562              	.LVL322:
 519:../user/source/DLT645.c ****     }
 2563              		.loc 1 519 0
 2564 00ba 0122     		movs	r2, #1
 2565 00bc 0A49     		ldr	r1, .L163+32
 2566 00be 2046     		mov	r0, r4
 2567 00c0 FFF7FEFF 		bl	USART_ITConfig
 2568              	.LVL323:
 2569              	.L157:
 2570 00c4 38BD     		pop	{r3, r4, r5, pc}
 2571              	.L164:
 2572 00c6 00BF     		.align	2
 2573              	.L163:
 2574 00c8 00000000 		.word	Voltage_MAX
 2575 00cc 00000000 		.word	Voltage_MIN
 2576 00d0 00000000 		.word	.LANCHOR0
 2577 00d4 00000000 		.word	.LANCHOR6
 2578 00d8 00480040 		.word	1073760256
 2579 00dc 00000000 		.word	.LANCHOR7
 2580 00e0 00440040 		.word	1073759232
 2581 00e4 05010500 		.word	327941
 2582 00e8 07010700 		.word	459015
 2583              		.cfi_endproc
 2584              	.LFE117:
 2586              		.section	.text.Default_Reset,"ax",%progbits
 2587              		.align	2
 2588              		.global	Default_Reset
 2589              		.thumb
 2590              		.thumb_func
 2592              	Default_Reset:
 2593              	.LFB118:
 531:../user/source/DLT645.c ****     int i = 0;
 2594              		.loc 1 531 0
 2595              		.cfi_startproc
 2596              		@ args = 0, pretend = 0, frame = 0
 2597              		@ frame_needed = 0, uses_anonymous_args = 0
 2598              	.LVL324:
 2599 0000 70B5     		push	{r4, r5, r6, lr}
 2600              	.LCFI24:
 2601              		.cfi_def_cfa_offset 16
 2602              		.cfi_offset 4, -16
 2603              		.cfi_offset 5, -12
 2604              		.cfi_offset 6, -8
 2605              		.cfi_offset 14, -4
 2606 0002 0446     		mov	r4, r0
 2607              	.LVL325:
 533:../user/source/DLT645.c ****     B_Voltage = WORK_VOLTAGE;                                        //BÏàµçÑ¹Öµ¸ÄÎª±ê×¼Öµ
 2608              		.loc 1 533 0
 2609 0004 40F69803 		movw	r3, #2200
 2610 0008 334A     		ldr	r2, .L171
 2611 000a 1360     		str	r3, [r2]
 534:../user/source/DLT645.c ****     C_Voltage = WORK_VOLTAGE;                                        //CÏàµçÑ¹Öµ¸ÄÎª±ê×¼Öµ
 2612              		.loc 1 534 0
 2613 000c 334A     		ldr	r2, .L171+4
 2614 000e 1360     		str	r3, [r2]
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 98


 535:../user/source/DLT645.c ****     Voltage_Change_State = Voltage_Change;                           //µçÑ¹ĞŞ¸Ä×´Ì¬¸ÄÎª¡°ÓĞĞ§¡±
 2615              		.loc 1 535 0
 2616 0010 334A     		ldr	r2, .L171+8
 2617 0012 1360     		str	r3, [r2]
 536:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VChangeState_Addr, Voltage_Change_State); //´æ´¢µ½FLASHÖĞ
 2618              		.loc 1 536 0
 2619 0014 FF21     		movs	r1, #255
 2620 0016 334B     		ldr	r3, .L171+12
 2621 0018 1970     		strb	r1, [r3]
 537:../user/source/DLT645.c ****     Voltage_MAX = Voltage_MAX_Default;                               //µçÑ¹ºÏ¸ñÏŞÖµ»Ö¸´Ä¬ÈÏ²¢ÇÒ´æµµ
 2622              		.loc 1 537 0
 2623 001a 3348     		ldr	r0, .L171+16
 2624              	.LVL326:
 2625 001c FFF7FEFF 		bl	Flash_Write_Word
 2626              	.LVL327:
 538:../user/source/DLT645.c ****     Voltage_MIN = Voltage_MIN_Default;
 2627              		.loc 1 538 0
 2628 0020 324E     		ldr	r6, .L171+20
 2629 0022 40F62E10 		movw	r0, #2350
 2630 0026 3060     		str	r0, [r6]
 539:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMAX1_Addr, GetLowByte(Voltage_MAX));
 2631              		.loc 1 539 0
 2632 0028 314D     		ldr	r5, .L171+24
 2633 002a 40F2BC73 		movw	r3, #1980
 2634 002e 2B60     		str	r3, [r5]
 540:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMAX2_Addr, GetHighByte(Voltage_MAX));
 2635              		.loc 1 540 0
 2636 0030 FFF7FEFF 		bl	GetLowByte
 2637              	.LVL328:
 2638 0034 0146     		mov	r1, r0
 2639 0036 2F48     		ldr	r0, .L171+28
 2640 0038 FFF7FEFF 		bl	Flash_Write_Word
 2641              	.LVL329:
 541:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMIN1_Addr, GetLowByte(Voltage_MIN));
 2642              		.loc 1 541 0
 2643 003c 3068     		ldr	r0, [r6]
 2644 003e FFF7FEFF 		bl	GetHighByte
 2645              	.LVL330:
 2646 0042 0146     		mov	r1, r0
 2647 0044 2C48     		ldr	r0, .L171+32
 2648 0046 FFF7FEFF 		bl	Flash_Write_Word
 2649              	.LVL331:
 542:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMIN2_Addr, GetHighByte(Voltage_MIN));
 2650              		.loc 1 542 0
 2651 004a 2868     		ldr	r0, [r5]
 2652 004c FFF7FEFF 		bl	GetLowByte
 2653              	.LVL332:
 2654 0050 0146     		mov	r1, r0
 2655 0052 2A48     		ldr	r0, .L171+36
 2656 0054 FFF7FEFF 		bl	Flash_Write_Word
 2657              	.LVL333:
 543:../user/source/DLT645.c ****     pucBuffer[8] = 0x94;  //ÇóÈ¡Ğ£ÑéºÍ
 2658              		.loc 1 543 0
 2659 0058 2868     		ldr	r0, [r5]
 2660 005a FFF7FEFF 		bl	GetHighByte
 2661              	.LVL334:
 2662 005e 0146     		mov	r1, r0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 99


 2663 0060 2748     		ldr	r0, .L171+40
 2664 0062 FFF7FEFF 		bl	Flash_Write_Word
 2665              	.LVL335:
 544:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;  //ÇóÈ¡Ğ£ÑéºÍ
 2666              		.loc 1 544 0
 2667 0066 9423     		movs	r3, #148
 2668 0068 2372     		strb	r3, [r4, #8]
 545:../user/source/DLT645.c ****     pucBuffer[10] = 0x00; //ÇóÈ¡Ğ£ÑéºÍ
 2669              		.loc 1 545 0
 2670 006a 0023     		movs	r3, #0
 2671 006c 6372     		strb	r3, [r4, #9]
 546:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 2672              		.loc 1 546 0
 2673 006e A372     		strb	r3, [r4, #10]
 547:../user/source/DLT645.c ****     {
 2674              		.loc 1 547 0
 2675 0070 04E0     		b	.L166
 2676              	.LVL336:
 2677              	.L167:
 549:../user/source/DLT645.c ****     }
 2678              		.loc 1 549 0 discriminator 3
 2679 0072 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2680 0074 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 2681 0076 0A44     		add	r2, r2, r1
 2682 0078 A272     		strb	r2, [r4, #10]
 547:../user/source/DLT645.c ****     {
 2683              		.loc 1 547 0 discriminator 3
 2684 007a 0133     		adds	r3, r3, #1
 2685              	.LVL337:
 2686              	.L166:
 547:../user/source/DLT645.c ****     {
 2687              		.loc 1 547 0 is_stmt 0 discriminator 1
 2688 007c 092B     		cmp	r3, #9
 2689 007e F8DD     		ble	.L167
 551:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
 2690              		.loc 1 551 0 is_stmt 1
 2691 0080 1623     		movs	r3, #22
 2692              	.LVL338:
 2693 0082 E372     		strb	r3, [r4, #11]
 552:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2694              		.loc 1 552 0
 2695 0084 0022     		movs	r2, #0
 2696 0086 1F4B     		ldr	r3, .L171+44
 2697 0088 1A70     		strb	r2, [r3]
 554:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 2698              		.loc 1 554 0
 2699 008a 1F4D     		ldr	r5, .L171+48
 2700 008c 2B68     		ldr	r3, [r5]
 2701 008e 0C22     		movs	r2, #12
 2702 0090 9968     		ldr	r1, [r3, #8]
 2703 0092 2046     		mov	r0, r4
 2704 0094 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2705              	.LVL339:
 555:../user/source/DLT645.c ****     {
 2706              		.loc 1 555 0
 2707 0098 2B68     		ldr	r3, [r5]
 2708 009a 9868     		ldr	r0, [r3, #8]
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 100


 2709 009c FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2710              	.LVL340:
 2711 00a0 10B9     		cbnz	r0, .L168
 557:../user/source/DLT645.c ****     }
 2712              		.loc 1 557 0
 2713 00a2 1A48     		ldr	r0, .L171+52
 2714 00a4 FFF7FEFF 		bl	Uart_DataPut
 2715              	.LVL341:
 2716              	.L168:
 560:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 2717              		.loc 1 560 0
 2718 00a8 194D     		ldr	r5, .L171+56
 2719 00aa 2B68     		ldr	r3, [r5]
 2720 00ac 0C22     		movs	r2, #12
 2721 00ae 9968     		ldr	r1, [r3, #8]
 2722 00b0 2046     		mov	r0, r4
 2723 00b2 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2724              	.LVL342:
 561:../user/source/DLT645.c ****     {
 2725              		.loc 1 561 0
 2726 00b6 2B68     		ldr	r3, [r5]
 2727 00b8 9868     		ldr	r0, [r3, #8]
 2728 00ba FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2729              	.LVL343:
 2730 00be 50B9     		cbnz	r0, .L165
 563:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 2731              		.loc 1 563 0
 2732 00c0 144C     		ldr	r4, .L171+60
 2733              	.LVL344:
 2734 00c2 0022     		movs	r2, #0
 2735 00c4 1449     		ldr	r1, .L171+64
 2736 00c6 2046     		mov	r0, r4
 2737 00c8 FFF7FEFF 		bl	USART_ITConfig
 2738              	.LVL345:
 564:../user/source/DLT645.c ****     }
 2739              		.loc 1 564 0
 2740 00cc 0122     		movs	r2, #1
 2741 00ce 1349     		ldr	r1, .L171+68
 2742 00d0 2046     		mov	r0, r4
 2743 00d2 FFF7FEFF 		bl	USART_ITConfig
 2744              	.LVL346:
 2745              	.L165:
 2746 00d6 70BD     		pop	{r4, r5, r6, pc}
 2747              	.L172:
 2748              		.align	2
 2749              	.L171:
 2750 00d8 00000000 		.word	.LANCHOR4
 2751 00dc 00000000 		.word	.LANCHOR8
 2752 00e0 00000000 		.word	.LANCHOR9
 2753 00e4 00000000 		.word	.LANCHOR5
 2754 00e8 14EF0108 		.word	134344468
 2755 00ec 00000000 		.word	Voltage_MAX
 2756 00f0 00000000 		.word	Voltage_MIN
 2757 00f4 00EF0108 		.word	134344448
 2758 00f8 04EF0108 		.word	134344452
 2759 00fc 08EF0108 		.word	134344456
 2760 0100 0CEF0108 		.word	134344460
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 101


 2761 0104 00000000 		.word	.LANCHOR0
 2762 0108 00000000 		.word	.LANCHOR6
 2763 010c 00480040 		.word	1073760256
 2764 0110 00000000 		.word	.LANCHOR7
 2765 0114 00440040 		.word	1073759232
 2766 0118 05010500 		.word	327941
 2767 011c 07010700 		.word	459015
 2768              		.cfi_endproc
 2769              	.LFE118:
 2771              		.section	.text.vCurrent_Limit_Set,"ax",%progbits
 2772              		.align	2
 2773              		.global	vCurrent_Limit_Set
 2774              		.thumb
 2775              		.thumb_func
 2777              	vCurrent_Limit_Set:
 2778              	.LFB135:
1549:../user/source/DLT645.c ****     uint8_t i;
 2779              		.loc 1 1549 0
 2780              		.cfi_startproc
 2781              		@ args = 0, pretend = 0, frame = 0
 2782              		@ frame_needed = 0, uses_anonymous_args = 0
 2783              	.LVL347:
 2784 0000 38B5     		push	{r3, r4, r5, lr}
 2785              	.LCFI25:
 2786              		.cfi_def_cfa_offset 16
 2787              		.cfi_offset 3, -16
 2788              		.cfi_offset 4, -12
 2789              		.cfi_offset 5, -8
 2790              		.cfi_offset 14, -4
 2791 0002 0446     		mov	r4, r0
1552:../user/source/DLT645.c ****     /*·ÇÖØ¹ıÔØµ÷Õû°æ±¾Ê±£¬»Ø¸´·ñÈÏÖ¡*/
 2792              		.loc 1 1552 0
 2793 0004 D423     		movs	r3, #212
 2794 0006 0372     		strb	r3, [r0, #8]
1575:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 2795              		.loc 1 1575 0
 2796 0008 0023     		movs	r3, #0
 2797 000a 4372     		strb	r3, [r0, #9]
1576:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 2798              		.loc 1 1576 0
 2799 000c 8372     		strb	r3, [r0, #10]
 2800              	.LVL348:
1577:../user/source/DLT645.c ****     {
 2801              		.loc 1 1577 0
 2802 000e 05E0     		b	.L174
 2803              	.LVL349:
 2804              	.L175:
1579:../user/source/DLT645.c ****     }
 2805              		.loc 1 1579 0 discriminator 3
 2806 0010 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2807 0012 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 2808 0014 0A44     		add	r2, r2, r1
 2809 0016 A272     		strb	r2, [r4, #10]
1577:../user/source/DLT645.c ****     {
 2810              		.loc 1 1577 0 discriminator 3
 2811 0018 0133     		adds	r3, r3, #1
 2812              	.LVL350:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 102


 2813 001a DBB2     		uxtb	r3, r3
 2814              	.LVL351:
 2815              	.L174:
1577:../user/source/DLT645.c ****     {
 2816              		.loc 1 1577 0 is_stmt 0 discriminator 1
 2817 001c 092B     		cmp	r3, #9
 2818 001e F7D9     		bls	.L175
1581:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2819              		.loc 1 1581 0 is_stmt 1
 2820 0020 1623     		movs	r3, #22
 2821              	.LVL352:
 2822 0022 E372     		strb	r3, [r4, #11]
1583:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 2823              		.loc 1 1583 0
 2824 0024 0022     		movs	r2, #0
 2825 0026 144B     		ldr	r3, .L179
 2826 0028 1A70     		strb	r2, [r3]
1584:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 2827              		.loc 1 1584 0
 2828 002a 144D     		ldr	r5, .L179+4
 2829 002c 2B68     		ldr	r3, [r5]
 2830 002e 0C22     		movs	r2, #12
 2831 0030 9968     		ldr	r1, [r3, #8]
 2832 0032 2046     		mov	r0, r4
 2833              	.LVL353:
 2834 0034 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2835              	.LVL354:
1585:../user/source/DLT645.c ****     {
 2836              		.loc 1 1585 0
 2837 0038 2B68     		ldr	r3, [r5]
 2838 003a 9868     		ldr	r0, [r3, #8]
 2839 003c FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2840              	.LVL355:
 2841 0040 10B9     		cbnz	r0, .L176
1587:../user/source/DLT645.c ****     }
 2842              		.loc 1 1587 0
 2843 0042 0F48     		ldr	r0, .L179+8
 2844 0044 FFF7FEFF 		bl	Uart_DataPut
 2845              	.LVL356:
 2846              	.L176:
1590:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 2847              		.loc 1 1590 0
 2848 0048 0E4D     		ldr	r5, .L179+12
 2849 004a 2B68     		ldr	r3, [r5]
 2850 004c 0C22     		movs	r2, #12
 2851 004e 9968     		ldr	r1, [r3, #8]
 2852 0050 2046     		mov	r0, r4
 2853 0052 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2854              	.LVL357:
1591:../user/source/DLT645.c ****     {
 2855              		.loc 1 1591 0
 2856 0056 2B68     		ldr	r3, [r5]
 2857 0058 9868     		ldr	r0, [r3, #8]
 2858 005a FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2859              	.LVL358:
 2860 005e 50B9     		cbnz	r0, .L173
1593:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 103


 2861              		.loc 1 1593 0
 2862 0060 094C     		ldr	r4, .L179+16
 2863              	.LVL359:
 2864 0062 0022     		movs	r2, #0
 2865 0064 0949     		ldr	r1, .L179+20
 2866 0066 2046     		mov	r0, r4
 2867 0068 FFF7FEFF 		bl	USART_ITConfig
 2868              	.LVL360:
1594:../user/source/DLT645.c ****     }
 2869              		.loc 1 1594 0
 2870 006c 0122     		movs	r2, #1
 2871 006e 0849     		ldr	r1, .L179+24
 2872 0070 2046     		mov	r0, r4
 2873 0072 FFF7FEFF 		bl	USART_ITConfig
 2874              	.LVL361:
 2875              	.L173:
 2876 0076 38BD     		pop	{r3, r4, r5, pc}
 2877              	.L180:
 2878              		.align	2
 2879              	.L179:
 2880 0078 00000000 		.word	.LANCHOR0
 2881 007c 00000000 		.word	.LANCHOR6
 2882 0080 00480040 		.word	1073760256
 2883 0084 00000000 		.word	.LANCHOR7
 2884 0088 00440040 		.word	1073759232
 2885 008c 05010500 		.word	327941
 2886 0090 07010700 		.word	459015
 2887              		.cfi_endproc
 2888              	.LFE135:
 2890              		.section	.text.vCurrent_CTRatio_Set,"ax",%progbits
 2891              		.align	2
 2892              		.global	vCurrent_CTRatio_Set
 2893              		.thumb
 2894              		.thumb_func
 2896              	vCurrent_CTRatio_Set:
 2897              	.LFB136:
1610:../user/source/DLT645.c ****     uint8_t i;
 2898              		.loc 1 1610 0
 2899              		.cfi_startproc
 2900              		@ args = 0, pretend = 0, frame = 0
 2901              		@ frame_needed = 0, uses_anonymous_args = 0
 2902              	.LVL362:
 2903 0000 38B5     		push	{r3, r4, r5, lr}
 2904              	.LCFI26:
 2905              		.cfi_def_cfa_offset 16
 2906              		.cfi_offset 3, -16
 2907              		.cfi_offset 4, -12
 2908              		.cfi_offset 5, -8
 2909              		.cfi_offset 14, -4
 2910 0002 0446     		mov	r4, r0
 2911              	.LVL363:
1613:../user/source/DLT645.c **** /*ÊäÈëµÄ×Ö½Ú¼õÈ¥33ºó²»ÊÇBCDÂëÔõÃ´°ì£¿*/
 2912              		.loc 1 1613 0
 2913 0004 D423     		movs	r3, #212
 2914 0006 0372     		strb	r3, [r0, #8]
1631:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 2915              		.loc 1 1631 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 104


 2916 0008 0023     		movs	r3, #0
 2917 000a 4372     		strb	r3, [r0, #9]
1632:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 2918              		.loc 1 1632 0
 2919 000c 8372     		strb	r3, [r0, #10]
 2920              	.LVL364:
1633:../user/source/DLT645.c ****     {
 2921              		.loc 1 1633 0
 2922 000e 05E0     		b	.L182
 2923              	.LVL365:
 2924              	.L183:
1635:../user/source/DLT645.c ****     }
 2925              		.loc 1 1635 0 discriminator 3
 2926 0010 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2927 0012 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 2928 0014 0A44     		add	r2, r2, r1
 2929 0016 A272     		strb	r2, [r4, #10]
1633:../user/source/DLT645.c ****     {
 2930              		.loc 1 1633 0 discriminator 3
 2931 0018 0133     		adds	r3, r3, #1
 2932              	.LVL366:
 2933 001a DBB2     		uxtb	r3, r3
 2934              	.LVL367:
 2935              	.L182:
1633:../user/source/DLT645.c ****     {
 2936              		.loc 1 1633 0 is_stmt 0 discriminator 1
 2937 001c 092B     		cmp	r3, #9
 2938 001e F7D9     		bls	.L183
1637:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2939              		.loc 1 1637 0 is_stmt 1
 2940 0020 1623     		movs	r3, #22
 2941              	.LVL368:
 2942 0022 E372     		strb	r3, [r4, #11]
1639:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 2943              		.loc 1 1639 0
 2944 0024 0022     		movs	r2, #0
 2945 0026 144B     		ldr	r3, .L187
 2946 0028 1A70     		strb	r2, [r3]
1640:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 2947              		.loc 1 1640 0
 2948 002a 144D     		ldr	r5, .L187+4
 2949 002c 2B68     		ldr	r3, [r5]
 2950 002e 0C22     		movs	r2, #12
 2951 0030 9968     		ldr	r1, [r3, #8]
 2952 0032 2046     		mov	r0, r4
 2953              	.LVL369:
 2954 0034 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2955              	.LVL370:
1641:../user/source/DLT645.c ****     {
 2956              		.loc 1 1641 0
 2957 0038 2B68     		ldr	r3, [r5]
 2958 003a 9868     		ldr	r0, [r3, #8]
 2959 003c FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2960              	.LVL371:
 2961 0040 10B9     		cbnz	r0, .L184
1643:../user/source/DLT645.c ****     }
 2962              		.loc 1 1643 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 105


 2963 0042 0F48     		ldr	r0, .L187+8
 2964 0044 FFF7FEFF 		bl	Uart_DataPut
 2965              	.LVL372:
 2966              	.L184:
1646:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 2967              		.loc 1 1646 0
 2968 0048 0E4D     		ldr	r5, .L187+12
 2969 004a 2B68     		ldr	r3, [r5]
 2970 004c 0C22     		movs	r2, #12
 2971 004e 9968     		ldr	r1, [r3, #8]
 2972 0050 2046     		mov	r0, r4
 2973 0052 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2974              	.LVL373:
1647:../user/source/DLT645.c ****     {
 2975              		.loc 1 1647 0
 2976 0056 2B68     		ldr	r3, [r5]
 2977 0058 9868     		ldr	r0, [r3, #8]
 2978 005a FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2979              	.LVL374:
 2980 005e 50B9     		cbnz	r0, .L181
1649:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 2981              		.loc 1 1649 0
 2982 0060 094C     		ldr	r4, .L187+16
 2983              	.LVL375:
 2984 0062 0022     		movs	r2, #0
 2985 0064 0949     		ldr	r1, .L187+20
 2986 0066 2046     		mov	r0, r4
 2987 0068 FFF7FEFF 		bl	USART_ITConfig
 2988              	.LVL376:
1650:../user/source/DLT645.c ****     }
 2989              		.loc 1 1650 0
 2990 006c 0122     		movs	r2, #1
 2991 006e 0849     		ldr	r1, .L187+24
 2992 0070 2046     		mov	r0, r4
 2993 0072 FFF7FEFF 		bl	USART_ITConfig
 2994              	.LVL377:
 2995              	.L181:
 2996 0076 38BD     		pop	{r3, r4, r5, pc}
 2997              	.L188:
 2998              		.align	2
 2999              	.L187:
 3000 0078 00000000 		.word	.LANCHOR0
 3001 007c 00000000 		.word	.LANCHOR6
 3002 0080 00480040 		.word	1073760256
 3003 0084 00000000 		.word	.LANCHOR7
 3004 0088 00440040 		.word	1073759232
 3005 008c 05010500 		.word	327941
 3006 0090 07010700 		.word	459015
 3007              		.cfi_endproc
 3008              	.LFE136:
 3010              		.section	.text.vCurrent_Limit_ReadSet,"ax",%progbits
 3011              		.align	2
 3012              		.global	vCurrent_Limit_ReadSet
 3013              		.thumb
 3014              		.thumb_func
 3016              	vCurrent_Limit_ReadSet:
 3017              	.LFB137:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 106


1665:../user/source/DLT645.c ****     uint8_t i;
 3018              		.loc 1 1665 0
 3019              		.cfi_startproc
 3020              		@ args = 0, pretend = 0, frame = 8
 3021              		@ frame_needed = 0, uses_anonymous_args = 0
 3022              	.LVL378:
 3023 0000 30B5     		push	{r4, r5, lr}
 3024              	.LCFI27:
 3025              		.cfi_def_cfa_offset 12
 3026              		.cfi_offset 4, -12
 3027              		.cfi_offset 5, -8
 3028              		.cfi_offset 14, -4
 3029 0002 85B0     		sub	sp, sp, #20
 3030              	.LCFI28:
 3031              		.cfi_def_cfa_offset 32
 3032 0004 0546     		mov	r5, r0
1668:../user/source/DLT645.c ****     limit.isminus = false;
 3033              		.loc 1 1668 0
 3034 0006 274B     		ldr	r3, .L195
 3035 0008 DB68     		ldr	r3, [r3, #12]
 3036 000a 0293     		str	r3, [sp, #8]
1669:../user/source/DLT645.c ****     vPut_Current(limit, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
 3037              		.loc 1 1669 0
 3038 000c 0024     		movs	r4, #0
 3039 000e 8DF80D40 		strb	r4, [sp, #13]
1670:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
 3040              		.loc 1 1670 0
 3041 0012 00F11003 		add	r3, r0, #16
 3042 0016 0093     		str	r3, [sp]
 3043 0018 00F10F03 		add	r3, r0, #15
 3044 001c 00F10E02 		add	r2, r0, #14
 3045 0020 04A9     		add	r1, sp, #16
 3046 0022 11E90300 		ldmdb	r1, {r0, r1}
 3047              	.LVL379:
 3048 0026 FFF7FEFF 		bl	vPut_Current
 3049              	.LVL380:
1671:../user/source/DLT645.c ****     pucBuffer[9] = 0x07;
 3050              		.loc 1 1671 0
 3051 002a 9123     		movs	r3, #145
 3052 002c 2B72     		strb	r3, [r5, #8]
1672:../user/source/DLT645.c ****     pucBuffer[17] = 0;
 3053              		.loc 1 1672 0
 3054 002e 0723     		movs	r3, #7
 3055 0030 6B72     		strb	r3, [r5, #9]
1673:../user/source/DLT645.c ****     for (i = 0; i < 17; i++)
 3056              		.loc 1 1673 0
 3057 0032 6C74     		strb	r4, [r5, #17]
 3058              	.LVL381:
1674:../user/source/DLT645.c ****     {
 3059              		.loc 1 1674 0
 3060 0034 2346     		mov	r3, r4
 3061 0036 05E0     		b	.L190
 3062              	.LVL382:
 3063              	.L191:
1676:../user/source/DLT645.c ****     }
 3064              		.loc 1 1676 0 discriminator 3
 3065 0038 E95C     		ldrb	r1, [r5, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 107


 3066 003a 6A7C     		ldrb	r2, [r5, #17]	@ zero_extendqisi2
 3067 003c 0A44     		add	r2, r2, r1
 3068 003e 6A74     		strb	r2, [r5, #17]
1674:../user/source/DLT645.c ****     {
 3069              		.loc 1 1674 0 discriminator 3
 3070 0040 0133     		adds	r3, r3, #1
 3071              	.LVL383:
 3072 0042 DBB2     		uxtb	r3, r3
 3073              	.LVL384:
 3074              	.L190:
1674:../user/source/DLT645.c ****     {
 3075              		.loc 1 1674 0 is_stmt 0 discriminator 1
 3076 0044 102B     		cmp	r3, #16
 3077 0046 F7D9     		bls	.L191
1678:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 3078              		.loc 1 1678 0 is_stmt 1
 3079 0048 1623     		movs	r3, #22
 3080              	.LVL385:
 3081 004a AB74     		strb	r3, [r5, #18]
1680:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 19);
 3082              		.loc 1 1680 0
 3083 004c 0722     		movs	r2, #7
 3084 004e 164B     		ldr	r3, .L195+4
 3085 0050 1A70     		strb	r2, [r3]
1681:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 3086              		.loc 1 1681 0
 3087 0052 164C     		ldr	r4, .L195+8
 3088 0054 2368     		ldr	r3, [r4]
 3089 0056 1322     		movs	r2, #19
 3090 0058 9968     		ldr	r1, [r3, #8]
 3091 005a 2846     		mov	r0, r5
 3092 005c FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3093              	.LVL386:
1682:../user/source/DLT645.c ****     {
 3094              		.loc 1 1682 0
 3095 0060 2368     		ldr	r3, [r4]
 3096 0062 9868     		ldr	r0, [r3, #8]
 3097 0064 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3098              	.LVL387:
 3099 0068 10B9     		cbnz	r0, .L192
1684:../user/source/DLT645.c ****     }
 3100              		.loc 1 1684 0
 3101 006a 1148     		ldr	r0, .L195+12
 3102 006c FFF7FEFF 		bl	Uart_DataPut
 3103              	.LVL388:
 3104              	.L192:
1687:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 3105              		.loc 1 1687 0
 3106 0070 104C     		ldr	r4, .L195+16
 3107 0072 2368     		ldr	r3, [r4]
 3108 0074 1322     		movs	r2, #19
 3109 0076 9968     		ldr	r1, [r3, #8]
 3110 0078 2846     		mov	r0, r5
 3111 007a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3112              	.LVL389:
1688:../user/source/DLT645.c ****     {
 3113              		.loc 1 1688 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 108


 3114 007e 2368     		ldr	r3, [r4]
 3115 0080 9868     		ldr	r0, [r3, #8]
 3116 0082 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3117              	.LVL390:
 3118 0086 50B9     		cbnz	r0, .L189
1690:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3119              		.loc 1 1690 0
 3120 0088 0B4C     		ldr	r4, .L195+20
 3121 008a 0022     		movs	r2, #0
 3122 008c 0B49     		ldr	r1, .L195+24
 3123 008e 2046     		mov	r0, r4
 3124 0090 FFF7FEFF 		bl	USART_ITConfig
 3125              	.LVL391:
1691:../user/source/DLT645.c ****     }
 3126              		.loc 1 1691 0
 3127 0094 0122     		movs	r2, #1
 3128 0096 0A49     		ldr	r1, .L195+28
 3129 0098 2046     		mov	r0, r4
 3130 009a FFF7FEFF 		bl	USART_ITConfig
 3131              	.LVL392:
 3132              	.L189:
1693:../user/source/DLT645.c **** 
 3133              		.loc 1 1693 0
 3134 009e 05B0     		add	sp, sp, #20
 3135              	.LCFI29:
 3136              		.cfi_def_cfa_offset 12
 3137              		@ sp needed
 3138 00a0 30BD     		pop	{r4, r5, pc}
 3139              	.LVL393:
 3140              	.L196:
 3141 00a2 00BF     		.align	2
 3142              	.L195:
 3143 00a4 00000000 		.word	TransFormer
 3144 00a8 00000000 		.word	.LANCHOR0
 3145 00ac 00000000 		.word	.LANCHOR6
 3146 00b0 00480040 		.word	1073760256
 3147 00b4 00000000 		.word	.LANCHOR7
 3148 00b8 00440040 		.word	1073759232
 3149 00bc 05010500 		.word	327941
 3150 00c0 07010700 		.word	459015
 3151              		.cfi_endproc
 3152              	.LFE137:
 3154              		.section	.text.vCurrent_CTRatio_ReadSet,"ax",%progbits
 3155              		.align	2
 3156              		.global	vCurrent_CTRatio_ReadSet
 3157              		.thumb
 3158              		.thumb_func
 3160              	vCurrent_CTRatio_ReadSet:
 3161              	.LFB138:
1706:../user/source/DLT645.c **** 
 3162              		.loc 1 1706 0
 3163              		.cfi_startproc
 3164              		@ args = 0, pretend = 0, frame = 0
 3165              		@ frame_needed = 0, uses_anonymous_args = 0
 3166              	.LVL394:
 3167 0000 38B5     		push	{r3, r4, r5, lr}
 3168              	.LCFI30:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 109


 3169              		.cfi_def_cfa_offset 16
 3170              		.cfi_offset 3, -16
 3171              		.cfi_offset 4, -12
 3172              		.cfi_offset 5, -8
 3173              		.cfi_offset 14, -4
 3174 0002 0446     		mov	r4, r0
1709:../user/source/DLT645.c ****     pucBuffer[9] = 0x06;
 3175              		.loc 1 1709 0
 3176 0004 9123     		movs	r3, #145
 3177 0006 0372     		strb	r3, [r0, #8]
1710:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(TransFormer.CTratio);
 3178              		.loc 1 1710 0
 3179 0008 0623     		movs	r3, #6
 3180 000a 4372     		strb	r3, [r0, #9]
1711:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(TransFormer.CTratio);
 3181              		.loc 1 1711 0
 3182 000c 204B     		ldr	r3, .L203
 3183 000e 9D68     		ldr	r5, [r3, #8]
 3184 0010 2846     		mov	r0, r5
 3185              	.LVL395:
 3186 0012 FFF7FEFF 		bl	GetLowByte
 3187              	.LVL396:
 3188 0016 A073     		strb	r0, [r4, #14]
1712:../user/source/DLT645.c ****     pucBuffer[16] = 0;
 3189              		.loc 1 1712 0
 3190 0018 2846     		mov	r0, r5
 3191 001a FFF7FEFF 		bl	GetHighByte
 3192              	.LVL397:
 3193 001e E073     		strb	r0, [r4, #15]
1713:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
 3194              		.loc 1 1713 0
 3195 0020 0023     		movs	r3, #0
 3196 0022 2374     		strb	r3, [r4, #16]
 3197              	.LVL398:
1714:../user/source/DLT645.c ****     {
 3198              		.loc 1 1714 0
 3199 0024 05E0     		b	.L198
 3200              	.LVL399:
 3201              	.L199:
1716:../user/source/DLT645.c ****     }
 3202              		.loc 1 1716 0 discriminator 3
 3203 0026 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3204 0028 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 3205 002a 0A44     		add	r2, r2, r1
 3206 002c 2274     		strb	r2, [r4, #16]
1714:../user/source/DLT645.c ****     {
 3207              		.loc 1 1714 0 discriminator 3
 3208 002e 0133     		adds	r3, r3, #1
 3209              	.LVL400:
 3210 0030 DBB2     		uxtb	r3, r3
 3211              	.LVL401:
 3212              	.L198:
1714:../user/source/DLT645.c ****     {
 3213              		.loc 1 1714 0 is_stmt 0 discriminator 1
 3214 0032 0F2B     		cmp	r3, #15
 3215 0034 F7D9     		bls	.L199
1718:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 110


 3216              		.loc 1 1718 0 is_stmt 1
 3217 0036 1623     		movs	r3, #22
 3218              	.LVL402:
 3219 0038 6374     		strb	r3, [r4, #17]
1720:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 18);
 3220              		.loc 1 1720 0
 3221 003a 0622     		movs	r2, #6
 3222 003c 154B     		ldr	r3, .L203+4
 3223 003e 1A70     		strb	r2, [r3]
1721:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 3224              		.loc 1 1721 0
 3225 0040 154D     		ldr	r5, .L203+8
 3226 0042 2B68     		ldr	r3, [r5]
 3227 0044 1222     		movs	r2, #18
 3228 0046 9968     		ldr	r1, [r3, #8]
 3229 0048 2046     		mov	r0, r4
 3230 004a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3231              	.LVL403:
1722:../user/source/DLT645.c ****     {
 3232              		.loc 1 1722 0
 3233 004e 2B68     		ldr	r3, [r5]
 3234 0050 9868     		ldr	r0, [r3, #8]
 3235 0052 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3236              	.LVL404:
 3237 0056 10B9     		cbnz	r0, .L200
1724:../user/source/DLT645.c ****     }
 3238              		.loc 1 1724 0
 3239 0058 1048     		ldr	r0, .L203+12
 3240 005a FFF7FEFF 		bl	Uart_DataPut
 3241              	.LVL405:
 3242              	.L200:
1727:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 3243              		.loc 1 1727 0
 3244 005e 104D     		ldr	r5, .L203+16
 3245 0060 2B68     		ldr	r3, [r5]
 3246 0062 1222     		movs	r2, #18
 3247 0064 9968     		ldr	r1, [r3, #8]
 3248 0066 2046     		mov	r0, r4
 3249 0068 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3250              	.LVL406:
1728:../user/source/DLT645.c ****     {
 3251              		.loc 1 1728 0
 3252 006c 2B68     		ldr	r3, [r5]
 3253 006e 9868     		ldr	r0, [r3, #8]
 3254 0070 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3255              	.LVL407:
 3256 0074 50B9     		cbnz	r0, .L197
1730:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3257              		.loc 1 1730 0
 3258 0076 0B4C     		ldr	r4, .L203+20
 3259              	.LVL408:
 3260 0078 0022     		movs	r2, #0
 3261 007a 0B49     		ldr	r1, .L203+24
 3262 007c 2046     		mov	r0, r4
 3263 007e FFF7FEFF 		bl	USART_ITConfig
 3264              	.LVL409:
1731:../user/source/DLT645.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 111


 3265              		.loc 1 1731 0
 3266 0082 0122     		movs	r2, #1
 3267 0084 0949     		ldr	r1, .L203+28
 3268 0086 2046     		mov	r0, r4
 3269 0088 FFF7FEFF 		bl	USART_ITConfig
 3270              	.LVL410:
 3271              	.L197:
 3272 008c 38BD     		pop	{r3, r4, r5, pc}
 3273              	.L204:
 3274 008e 00BF     		.align	2
 3275              	.L203:
 3276 0090 00000000 		.word	TransFormer
 3277 0094 00000000 		.word	.LANCHOR0
 3278 0098 00000000 		.word	.LANCHOR6
 3279 009c 00480040 		.word	1073760256
 3280 00a0 00000000 		.word	.LANCHOR7
 3281 00a4 00440040 		.word	1073759232
 3282 00a8 05010500 		.word	327941
 3283 00ac 07010700 		.word	459015
 3284              		.cfi_endproc
 3285              	.LFE138:
 3287              		.section	.text.vCurrent_TransFormer_Capacity_ReadSet,"ax",%progbits
 3288              		.align	2
 3289              		.global	vCurrent_TransFormer_Capacity_ReadSet
 3290              		.thumb
 3291              		.thumb_func
 3293              	vCurrent_TransFormer_Capacity_ReadSet:
 3294              	.LFB139:
1746:../user/source/DLT645.c ****     uint8_t i;
 3295              		.loc 1 1746 0
 3296              		.cfi_startproc
 3297              		@ args = 0, pretend = 0, frame = 0
 3298              		@ frame_needed = 0, uses_anonymous_args = 0
 3299              	.LVL411:
 3300 0000 38B5     		push	{r3, r4, r5, lr}
 3301              	.LCFI31:
 3302              		.cfi_def_cfa_offset 16
 3303              		.cfi_offset 3, -16
 3304              		.cfi_offset 4, -12
 3305              		.cfi_offset 5, -8
 3306              		.cfi_offset 14, -4
 3307 0002 0446     		mov	r4, r0
1748:../user/source/DLT645.c ****     pucBuffer[9] = 0x06;
 3308              		.loc 1 1748 0
 3309 0004 9123     		movs	r3, #145
 3310 0006 0372     		strb	r3, [r0, #8]
1749:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(TransFormer.capacity);
 3311              		.loc 1 1749 0
 3312 0008 0623     		movs	r3, #6
 3313 000a 4372     		strb	r3, [r0, #9]
1750:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(TransFormer.capacity);
 3314              		.loc 1 1750 0
 3315 000c 204B     		ldr	r3, .L211
 3316 000e 1D68     		ldr	r5, [r3]
 3317 0010 2846     		mov	r0, r5
 3318              	.LVL412:
 3319 0012 FFF7FEFF 		bl	GetLowByte
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 112


 3320              	.LVL413:
 3321 0016 A073     		strb	r0, [r4, #14]
1751:../user/source/DLT645.c ****     pucBuffer[16] = 0;
 3322              		.loc 1 1751 0
 3323 0018 2846     		mov	r0, r5
 3324 001a FFF7FEFF 		bl	GetHighByte
 3325              	.LVL414:
 3326 001e E073     		strb	r0, [r4, #15]
1752:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
 3327              		.loc 1 1752 0
 3328 0020 0023     		movs	r3, #0
 3329 0022 2374     		strb	r3, [r4, #16]
 3330              	.LVL415:
1753:../user/source/DLT645.c ****     {
 3331              		.loc 1 1753 0
 3332 0024 05E0     		b	.L206
 3333              	.LVL416:
 3334              	.L207:
1755:../user/source/DLT645.c ****     }
 3335              		.loc 1 1755 0 discriminator 3
 3336 0026 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3337 0028 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 3338 002a 0A44     		add	r2, r2, r1
 3339 002c 2274     		strb	r2, [r4, #16]
1753:../user/source/DLT645.c ****     {
 3340              		.loc 1 1753 0 discriminator 3
 3341 002e 0133     		adds	r3, r3, #1
 3342              	.LVL417:
 3343 0030 DBB2     		uxtb	r3, r3
 3344              	.LVL418:
 3345              	.L206:
1753:../user/source/DLT645.c ****     {
 3346              		.loc 1 1753 0 is_stmt 0 discriminator 1
 3347 0032 0F2B     		cmp	r3, #15
 3348 0034 F7D9     		bls	.L207
1757:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 3349              		.loc 1 1757 0 is_stmt 1
 3350 0036 1623     		movs	r3, #22
 3351              	.LVL419:
 3352 0038 6374     		strb	r3, [r4, #17]
1759:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 18);
 3353              		.loc 1 1759 0
 3354 003a 0022     		movs	r2, #0
 3355 003c 154B     		ldr	r3, .L211+4
 3356 003e 1A70     		strb	r2, [r3]
1760:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 3357              		.loc 1 1760 0
 3358 0040 154D     		ldr	r5, .L211+8
 3359 0042 2B68     		ldr	r3, [r5]
 3360 0044 1222     		movs	r2, #18
 3361 0046 9968     		ldr	r1, [r3, #8]
 3362 0048 2046     		mov	r0, r4
 3363 004a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3364              	.LVL420:
1761:../user/source/DLT645.c ****     {
 3365              		.loc 1 1761 0
 3366 004e 2B68     		ldr	r3, [r5]
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 113


 3367 0050 9868     		ldr	r0, [r3, #8]
 3368 0052 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3369              	.LVL421:
 3370 0056 10B9     		cbnz	r0, .L208
1763:../user/source/DLT645.c ****     }
 3371              		.loc 1 1763 0
 3372 0058 1048     		ldr	r0, .L211+12
 3373 005a FFF7FEFF 		bl	Uart_DataPut
 3374              	.LVL422:
 3375              	.L208:
1766:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 3376              		.loc 1 1766 0
 3377 005e 104D     		ldr	r5, .L211+16
 3378 0060 2B68     		ldr	r3, [r5]
 3379 0062 1222     		movs	r2, #18
 3380 0064 9968     		ldr	r1, [r3, #8]
 3381 0066 2046     		mov	r0, r4
 3382 0068 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3383              	.LVL423:
1767:../user/source/DLT645.c ****     {
 3384              		.loc 1 1767 0
 3385 006c 2B68     		ldr	r3, [r5]
 3386 006e 9868     		ldr	r0, [r3, #8]
 3387 0070 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3388              	.LVL424:
 3389 0074 50B9     		cbnz	r0, .L205
1769:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3390              		.loc 1 1769 0
 3391 0076 0B4C     		ldr	r4, .L211+20
 3392              	.LVL425:
 3393 0078 0022     		movs	r2, #0
 3394 007a 0B49     		ldr	r1, .L211+24
 3395 007c 2046     		mov	r0, r4
 3396 007e FFF7FEFF 		bl	USART_ITConfig
 3397              	.LVL426:
1770:../user/source/DLT645.c ****     }
 3398              		.loc 1 1770 0
 3399 0082 0122     		movs	r2, #1
 3400 0084 0949     		ldr	r1, .L211+28
 3401 0086 2046     		mov	r0, r4
 3402 0088 FFF7FEFF 		bl	USART_ITConfig
 3403              	.LVL427:
 3404              	.L205:
 3405 008c 38BD     		pop	{r3, r4, r5, pc}
 3406              	.L212:
 3407 008e 00BF     		.align	2
 3408              	.L211:
 3409 0090 00000000 		.word	TransFormer
 3410 0094 00000000 		.word	.LANCHOR0
 3411 0098 00000000 		.word	.LANCHOR6
 3412 009c 00480040 		.word	1073760256
 3413 00a0 00000000 		.word	.LANCHOR7
 3414 00a4 00440040 		.word	1073759232
 3415 00a8 05010500 		.word	327941
 3416 00ac 07010700 		.word	459015
 3417              		.cfi_endproc
 3418              	.LFE139:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 114


 3420              		.section	.text.vEnergy_Modify_ReadSet,"ax",%progbits
 3421              		.align	2
 3422              		.global	vEnergy_Modify_ReadSet
 3423              		.thumb
 3424              		.thumb_func
 3426              	vEnergy_Modify_ReadSet:
 3427              	.LFB155:
2486:../user/source/DLT645.c ****     //68 AA AA AA AA AA AA 68 91 04 33 76 34 33 71 16
 3428              		.loc 1 2486 0
 3429              		.cfi_startproc
 3430              		@ args = 0, pretend = 0, frame = 0
 3431              		@ frame_needed = 0, uses_anonymous_args = 0
 3432              	.LVL428:
 3433 0000 38B5     		push	{r3, r4, r5, lr}
 3434              	.LCFI32:
 3435              		.cfi_def_cfa_offset 16
 3436              		.cfi_offset 3, -16
 3437              		.cfi_offset 4, -12
 3438              		.cfi_offset 5, -8
 3439              		.cfi_offset 14, -4
2490:../user/source/DLT645.c ****         return;
 3440              		.loc 1 2490 0
 3441 0002 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 3442 0004 912B     		cmp	r3, #145
 3443 0006 4CD1     		bne	.L213
2493:../user/source/DLT645.c ****     //ratio = EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR);
 3444              		.loc 1 2493 0
 3445 0008 0623     		movs	r3, #6
 3446 000a 4372     		strb	r3, [r0, #9]
2495:../user/source/DLT645.c **** 
 3447              		.loc 1 2495 0
 3448 000c 254B     		ldr	r3, .L219
 3449 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3450              	.LVL429:
2497:../user/source/DLT645.c ****     pucbuffer[15] = DEC2BCD(ratio / 100); //¸ßÎ»ÔÚºó
 3451              		.loc 1 2497 0
 3452 0010 2549     		ldr	r1, .L219+4
 3453 0012 A1FB0231 		umull	r3, r1, r1, r2
 3454 0016 4909     		lsrs	r1, r1, #5
 3455 0018 6423     		movs	r3, #100
 3456 001a 03FB1123 		mls	r3, r3, r1, r2
 3457 001e DBB2     		uxtb	r3, r3
 3458 0020 224A     		ldr	r2, .L219+8
 3459              	.LVL430:
 3460 0022 A2FB0342 		umull	r4, r2, r2, r3
 3461 0026 D208     		lsrs	r2, r2, #3
 3462 0028 02EB8205 		add	r5, r2, r2, lsl #2
 3463 002c 6C00     		lsls	r4, r5, #1
 3464 002e 1B1B     		subs	r3, r3, r4
 3465 0030 43EA0213 		orr	r3, r3, r2, lsl #4
 3466 0034 8373     		strb	r3, [r0, #14]
2498:../user/source/DLT645.c ****     pucbuffer[16] = 0;
 3467              		.loc 1 2498 0
 3468 0036 C173     		strb	r1, [r0, #15]
2499:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
 3469              		.loc 1 2499 0
 3470 0038 0023     		movs	r3, #0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 115


 3471 003a 0374     		strb	r3, [r0, #16]
 3472              	.LVL431:
2500:../user/source/DLT645.c ****     {
 3473              		.loc 1 2500 0
 3474 003c 04E0     		b	.L215
 3475              	.LVL432:
 3476              	.L216:
2502:../user/source/DLT645.c ****     }
 3477              		.loc 1 2502 0 discriminator 3
 3478 003e C15C     		ldrb	r1, [r0, r3]	@ zero_extendqisi2
 3479 0040 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 3480 0042 0A44     		add	r2, r2, r1
 3481 0044 0274     		strb	r2, [r0, #16]
2500:../user/source/DLT645.c ****     {
 3482              		.loc 1 2500 0 discriminator 3
 3483 0046 0133     		adds	r3, r3, #1
 3484              	.LVL433:
 3485              	.L215:
2500:../user/source/DLT645.c ****     {
 3486              		.loc 1 2500 0 is_stmt 0 discriminator 1
 3487 0048 0F2B     		cmp	r3, #15
 3488 004a F8D9     		bls	.L216
 3489 004c 0446     		mov	r4, r0
2504:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 3490              		.loc 1 2504 0 is_stmt 1
 3491 004e 1623     		movs	r3, #22
 3492              	.LVL434:
 3493 0050 4374     		strb	r3, [r0, #17]
2506:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, pUartDB->pSndbuf, 18);
 3494              		.loc 1 2506 0
 3495 0052 0422     		movs	r2, #4
 3496 0054 164B     		ldr	r3, .L219+12
 3497 0056 1A70     		strb	r2, [r3]
2507:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 3498              		.loc 1 2507 0
 3499 0058 164D     		ldr	r5, .L219+16
 3500 005a 2B68     		ldr	r3, [r5]
 3501 005c 1222     		movs	r2, #18
 3502 005e 9968     		ldr	r1, [r3, #8]
 3503 0060 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3504              	.LVL435:
2508:../user/source/DLT645.c ****     {
 3505              		.loc 1 2508 0
 3506 0064 2B68     		ldr	r3, [r5]
 3507 0066 9868     		ldr	r0, [r3, #8]
 3508 0068 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3509              	.LVL436:
 3510 006c 10B9     		cbnz	r0, .L217
2510:../user/source/DLT645.c ****     }
 3511              		.loc 1 2510 0
 3512 006e 1248     		ldr	r0, .L219+20
 3513 0070 FFF7FEFF 		bl	Uart_DataPut
 3514              	.LVL437:
 3515              	.L217:
2513:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 3516              		.loc 1 2513 0
 3517 0074 114D     		ldr	r5, .L219+24
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 116


 3518 0076 2B68     		ldr	r3, [r5]
 3519 0078 1222     		movs	r2, #18
 3520 007a 9968     		ldr	r1, [r3, #8]
 3521 007c 2046     		mov	r0, r4
 3522 007e FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3523              	.LVL438:
2514:../user/source/DLT645.c ****     {
 3524              		.loc 1 2514 0
 3525 0082 2B68     		ldr	r3, [r5]
 3526 0084 9868     		ldr	r0, [r3, #8]
 3527 0086 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3528              	.LVL439:
 3529 008a 50B9     		cbnz	r0, .L213
2516:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3530              		.loc 1 2516 0
 3531 008c 0C4C     		ldr	r4, .L219+28
 3532              	.LVL440:
 3533 008e 0022     		movs	r2, #0
 3534 0090 0C49     		ldr	r1, .L219+32
 3535 0092 2046     		mov	r0, r4
 3536 0094 FFF7FEFF 		bl	USART_ITConfig
 3537              	.LVL441:
2517:../user/source/DLT645.c ****     }
 3538              		.loc 1 2517 0
 3539 0098 0122     		movs	r2, #1
 3540 009a 0B49     		ldr	r1, .L219+36
 3541 009c 2046     		mov	r0, r4
 3542 009e FFF7FEFF 		bl	USART_ITConfig
 3543              	.LVL442:
 3544              	.L213:
 3545 00a2 38BD     		pop	{r3, r4, r5, pc}
 3546              	.L220:
 3547              		.align	2
 3548              	.L219:
 3549 00a4 00000000 		.word	ucDayfrozen_Modify_Ratio
 3550 00a8 1F85EB51 		.word	1374389535
 3551 00ac CDCCCCCC 		.word	-858993459
 3552 00b0 00000000 		.word	.LANCHOR0
 3553 00b4 00000000 		.word	.LANCHOR6
 3554 00b8 00480040 		.word	1073760256
 3555 00bc 00000000 		.word	.LANCHOR7
 3556 00c0 00440040 		.word	1073759232
 3557 00c4 05010500 		.word	327941
 3558 00c8 07010700 		.word	459015
 3559              		.cfi_endproc
 3560              	.LFE155:
 3562              		.section	.text.vRead_Version,"ax",%progbits
 3563              		.align	2
 3564              		.global	vRead_Version
 3565              		.thumb
 3566              		.thumb_func
 3568              	vRead_Version:
 3569              	.LFB163:
2778:../user/source/DLT645.c ****     uint16_t n = 0; //Êı¾İ¿é¸öÊı
2779:../user/source/DLT645.c ****     uint16_t length = pucbuffer[9];
2780:../user/source/DLT645.c ****     uint16_t ID_length = 0;
2781:../user/source/DLT645.c ****     uint32_t current = 0;
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 117


2782:../user/source/DLT645.c ****     uint16_t i = 0;
2783:../user/source/DLT645.c ****     uint32_t ABCcurrent = 0;
2784:../user/source/DLT645.c **** 
2785:../user/source/DLT645.c ****     if (pucbuffer[8] == 0x91 || pucbuffer[8] == 0xB1) //ÎŞºóĞøÖ¡£¬»ò·ÖÖ¡µÄµÚÒ»Ö¡
2786:../user/source/DLT645.c ****     {
2787:../user/source/DLT645.c ****         ID_length = 9; //Êı¾İ±êÊ¶*4 + Ê±±ê*5
2788:../user/source/DLT645.c ****     }
2789:../user/source/DLT645.c ****     if (pucbuffer[8] == 0x92 || pucbuffer[8] == 0xB2)
2790:../user/source/DLT645.c ****     {
2791:../user/source/DLT645.c ****         ID_length = 4; //Êı¾İ±êÊ¶*4 £¬ºöÂÔºóÃæµÄSEQ*1£¬Ô­ÒòÎªÕû³ı2ºó½á¹ûÒ»Ñù
2792:../user/source/DLT645.c ****     }
2793:../user/source/DLT645.c **** 
2794:../user/source/DLT645.c ****     switch (pucbuffer[10])
2795:../user/source/DLT645.c ****     {
2796:../user/source/DLT645.c ****     /*AÏàµçÁ÷*/
2797:../user/source/DLT645.c ****     case 0x34:
2798:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
2799:../user/source/DLT645.c ****         n = (length - ID_length) / 3;
2800:../user/source/DLT645.c ****         while (n--)
2801:../user/source/DLT645.c ****         {
2802:../user/source/DLT645.c ****             if (pucbuffer[10 + ID_length + 3 * n] == 0x32 || //ÊÇ3²»ÊÇ9
2803:../user/source/DLT645.c ****                 pucbuffer[11 + ID_length + 3 * n] == 0x32 ||
2804:../user/source/DLT645.c ****                 pucbuffer[12 + ID_length + 3 * n] == 0x32)
2805:../user/source/DLT645.c ****                 continue;
2806:../user/source/DLT645.c ****             /*¶ÁÈ¡µçÁ÷*/
2807:../user/source/DLT645.c ****             vGet_Current(pucbuffer[10 + ID_length + 3 * n],
2808:../user/source/DLT645.c ****                          pucbuffer[11 + ID_length + 3 * n],
2809:../user/source/DLT645.c ****                          pucbuffer[12 + ID_length + 3 * n],
2810:../user/source/DLT645.c ****                          &Acurrent);
2811:../user/source/DLT645.c ****             /*ĞŞ¸ÄµçÁ÷*/
2812:../user/source/DLT645.c ****             Acurrent.value = (Acurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT
2813:../user/source/DLT645.c ****             /*»ØĞ´µçÁ÷*/
2814:../user/source/DLT645.c ****             vPut_Current(Acurrent,
2815:../user/source/DLT645.c ****                          &pucbuffer[10 + ID_length + 3 * n],
2816:../user/source/DLT645.c ****                          &pucbuffer[11 + ID_length + 3 * n],
2817:../user/source/DLT645.c ****                          &pucbuffer[12 + ID_length + 3 * n]);
2818:../user/source/DLT645.c ****         }
2819:../user/source/DLT645.c ****         pucbuffer[length + 10] = 0;
2820:../user/source/DLT645.c ****         for (i = 0; i < (length + 10); i++)
2821:../user/source/DLT645.c ****         {
2822:../user/source/DLT645.c ****             pucbuffer[length + 10] += pucbuffer[i];
2823:../user/source/DLT645.c ****         }
2824:../user/source/DLT645.c ****         pucbuffer[length + 11] = 16;
2825:../user/source/DLT645.c **** #endif
2826:../user/source/DLT645.c ****         break;
2827:../user/source/DLT645.c ****         /*BÏàµçÁ÷*/
2828:../user/source/DLT645.c ****     case 0x35:
2829:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
2830:../user/source/DLT645.c ****         n = (length - ID_length) / 3;
2831:../user/source/DLT645.c ****         while (n--)
2832:../user/source/DLT645.c ****         {
2833:../user/source/DLT645.c ****             if (pucbuffer[10 + ID_length + 3 * n] == 0x32 ||
2834:../user/source/DLT645.c ****                 pucbuffer[11 + ID_length + 3 * n] == 0x32 ||
2835:../user/source/DLT645.c ****                 pucbuffer[12 + ID_length + 3 * n] == 0x32)
2836:../user/source/DLT645.c ****                 continue;
2837:../user/source/DLT645.c ****             /*¶ÁÈ¡µçÁ÷*/
2838:../user/source/DLT645.c ****             vGet_Current(pucbuffer[10 + ID_length + 3 * n],
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 118


2839:../user/source/DLT645.c ****                          pucbuffer[11 + ID_length + 3 * n],
2840:../user/source/DLT645.c ****                          pucbuffer[12 + ID_length + 3 * n],
2841:../user/source/DLT645.c ****                          &Bcurrent);
2842:../user/source/DLT645.c ****             /*ĞŞ¸ÄµçÁ÷*/
2843:../user/source/DLT645.c ****             Bcurrent.value = (Bcurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT
2844:../user/source/DLT645.c ****                                                                                   : Bcurrent.value)
2845:../user/source/DLT645.c ****             /*»ØĞ´µçÁ÷*/
2846:../user/source/DLT645.c ****             vPut_Current(Bcurrent,
2847:../user/source/DLT645.c ****                          &pucbuffer[10 + ID_length + 3 * n],
2848:../user/source/DLT645.c ****                          &pucbuffer[11 + ID_length + 3 * n],
2849:../user/source/DLT645.c ****                          &pucbuffer[12 + ID_length + 3 * n]);
2850:../user/source/DLT645.c ****         }
2851:../user/source/DLT645.c ****         pucbuffer[length + 10] = 0;
2852:../user/source/DLT645.c ****         for (i = 0; i < (length + 10); i++)
2853:../user/source/DLT645.c ****         {
2854:../user/source/DLT645.c ****             pucbuffer[length + 10] += pucbuffer[i];
2855:../user/source/DLT645.c ****         }
2856:../user/source/DLT645.c ****         pucbuffer[length + 11] = 16;
2857:../user/source/DLT645.c **** #endif
2858:../user/source/DLT645.c ****         break;
2859:../user/source/DLT645.c ****     case 0x36: //CÏàµçÁ÷
2860:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
2861:../user/source/DLT645.c ****         n = (length - ID_length) / 3;
2862:../user/source/DLT645.c ****         while (n--)
2863:../user/source/DLT645.c ****         {
2864:../user/source/DLT645.c ****             if (pucbuffer[10 + ID_length + 9 * n] == 0x32 ||
2865:../user/source/DLT645.c ****                 pucbuffer[11 + ID_length + 9 * n] == 0x32 ||
2866:../user/source/DLT645.c ****                 pucbuffer[12 + ID_length + 9 * n] == 0x32)
2867:../user/source/DLT645.c ****                 continue;
2868:../user/source/DLT645.c ****             /*¶ÁÈ¡µçÁ÷*/
2869:../user/source/DLT645.c ****             vGet_Current(pucbuffer[10 + ID_length + 3 * n],
2870:../user/source/DLT645.c ****                          pucbuffer[11 + ID_length + 3 * n],
2871:../user/source/DLT645.c ****                          pucbuffer[12 + ID_length + 3 * n],
2872:../user/source/DLT645.c ****                          &Ccurrent);
2873:../user/source/DLT645.c ****             /*ĞŞ¸ÄµçÁ÷*/
2874:../user/source/DLT645.c ****             Ccurrent.value = (Ccurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT
2875:../user/source/DLT645.c ****             /*»ØĞ´µçÁ÷*/
2876:../user/source/DLT645.c ****             vPut_Current(Ccurrent,
2877:../user/source/DLT645.c ****                          &pucbuffer[10 + ID_length + 3 * n],
2878:../user/source/DLT645.c ****                          &pucbuffer[11 + ID_length + 3 * n],
2879:../user/source/DLT645.c ****                          &pucbuffer[12 + ID_length + 3 * n]);
2880:../user/source/DLT645.c ****         }
2881:../user/source/DLT645.c ****         pucbuffer[length + 10] = 0;
2882:../user/source/DLT645.c ****         for (i = 0; i < (length + 10); i++)
2883:../user/source/DLT645.c ****         {
2884:../user/source/DLT645.c ****             pucbuffer[length + 10] += pucbuffer[i];
2885:../user/source/DLT645.c ****         }
2886:../user/source/DLT645.c ****         pucbuffer[length + 11] = 16;
2887:../user/source/DLT645.c **** #endif
2888:../user/source/DLT645.c ****         break;
2889:../user/source/DLT645.c ****     case 0x32: //¿éµçÁ÷
2890:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_DEVIATION
2891:../user/source/DLT645.c ****         n = (length - ID_length) / 9; //Êı¾İµã¸öÊı
2892:../user/source/DLT645.c ****         while (n--)
2893:../user/source/DLT645.c ****         {
2894:../user/source/DLT645.c ****             vGet_Current(pucbuffer[10 + ID_length + 9 * n],
2895:../user/source/DLT645.c ****                          pucbuffer[11 + ID_length + 9 * n],
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 119


2896:../user/source/DLT645.c ****                          pucbuffer[12 + ID_length + 9 * n],
2897:../user/source/DLT645.c ****                          &Acurrent);
2898:../user/source/DLT645.c **** 
2899:../user/source/DLT645.c ****             vGet_Current(pucbuffer[13 + ID_length + 9 * n],
2900:../user/source/DLT645.c ****                          pucbuffer[14 + ID_length + 9 * n],
2901:../user/source/DLT645.c ****                          pucbuffer[15 + ID_length + 9 * n],
2902:../user/source/DLT645.c ****                          &Bcurrent);
2903:../user/source/DLT645.c **** 
2904:../user/source/DLT645.c ****             vGet_Current(pucbuffer[16 + ID_length + 9 * n],
2905:../user/source/DLT645.c ****                          pucbuffer[17 + ID_length + 9 * n],
2906:../user/source/DLT645.c ****                          pucbuffer[18 + ID_length + 9 * n],
2907:../user/source/DLT645.c ****                          &Ccurrent);
2908:../user/source/DLT645.c **** 
2909:../user/source/DLT645.c ****             //µçÁ÷Îª¸ºÖµ,²»ĞŞ¸ÄµçÁ÷
2910:../user/source/DLT645.c ****             if (Acurrent.isminus || Bcurrent.isminus || Ccurrent.isminus)
2911:../user/source/DLT645.c ****                 continue;
2912:../user/source/DLT645.c ****             //µçÁ÷Îª0£¬²»ĞŞ¸ÄµçÁ÷
2913:../user/source/DLT645.c ****             if ((Acurrent.value == 0) || (Bcurrent.value == 0) || (Ccurrent.value == 0))
2914:../user/source/DLT645.c ****                 continue;
2915:../user/source/DLT645.c ****             //µçÁ÷Ïà»¥Ö®¼ä²»³¬²î£¬²»ĞŞ¸ÄµçÁ÷
2916:../user/source/DLT645.c ****             if (CURRENT_MAX_DVALUE * MAX(Acurrent.value, MAX(Bcurrent.value, Ccurrent.value)) / 100
2917:../user/source/DLT645.c ****                 MIN(Acurrent.value, MIN(Bcurrent.value, Ccurrent.value)))
2918:../user/source/DLT645.c ****                 continue;
2919:../user/source/DLT645.c ****             else //ĞèÒªĞŞ¸Ä£¬×î´óÖµ¼õĞ¡£¬×îĞ¡ÖµÔö´ó£¬Ê£ÏÂµÄÊÇÖĞ¼äÖµ
2920:../user/source/DLT645.c ****             {
2921:../user/source/DLT645.c ****                 if ((Acurrent.value >= Bcurrent.value) &&
2922:../user/source/DLT645.c ****                     (Bcurrent.value >= Ccurrent.value))
2923:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Acurrent, &Bcurrent, &Ccurrent);
2924:../user/source/DLT645.c **** 
2925:../user/source/DLT645.c ****                 else if ((Acurrent.value >= Ccurrent.value) &&
2926:../user/source/DLT645.c ****                          (Ccurrent.value >= Bcurrent.value))
2927:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Acurrent, &Ccurrent, &Bcurrent);
2928:../user/source/DLT645.c **** 
2929:../user/source/DLT645.c ****                 else if ((Bcurrent.value >= Acurrent.value) &&
2930:../user/source/DLT645.c ****                          (Acurrent.value >= Ccurrent.value))
2931:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Bcurrent, &Acurrent, &Ccurrent);
2932:../user/source/DLT645.c **** 
2933:../user/source/DLT645.c ****                 else if ((Bcurrent.value >= Ccurrent.value) &&
2934:../user/source/DLT645.c ****                          (Ccurrent.value >= Acurrent.value))
2935:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Bcurrent, &Ccurrent, &Acurrent);
2936:../user/source/DLT645.c **** 
2937:../user/source/DLT645.c ****                 else if ((Ccurrent.value >= Acurrent.value) &&
2938:../user/source/DLT645.c ****                          (Acurrent.value >= Bcurrent.value))
2939:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Ccurrent, &Acurrent, &Bcurrent);
2940:../user/source/DLT645.c **** 
2941:../user/source/DLT645.c ****                 else if ((Ccurrent.value >= Bcurrent.value) &&
2942:../user/source/DLT645.c ****                          (Bcurrent.value >= Acurrent.value))
2943:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Ccurrent, &Bcurrent, &Acurrent);
2944:../user/source/DLT645.c ****                 /*»ØĞ´µçÁ÷*/
2945:../user/source/DLT645.c ****                 vPut_Current(Acurrent,
2946:../user/source/DLT645.c ****                              &pucbuffer[10 + ID_length + 9 * n],
2947:../user/source/DLT645.c ****                              &pucbuffer[11 + ID_length + 9 * n],
2948:../user/source/DLT645.c ****                              &pucbuffer[12 + ID_length + 9 * n]);
2949:../user/source/DLT645.c **** 
2950:../user/source/DLT645.c ****                 vPut_Current(Bcurrent,
2951:../user/source/DLT645.c ****                              &pucbuffer[14 + ID_length + 9 * n],
2952:../user/source/DLT645.c ****                              &pucbuffer[15 + ID_length + 9 * n],
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 120


2953:../user/source/DLT645.c ****                              &pucbuffer[16 + ID_length + 9 * n]);
2954:../user/source/DLT645.c **** 
2955:../user/source/DLT645.c ****                 vPut_Current(Ccurrent,
2956:../user/source/DLT645.c ****                              &pucbuffer[17 + ID_length + 9 * n],
2957:../user/source/DLT645.c ****                              &pucbuffer[18 + ID_length + 9 * n],
2958:../user/source/DLT645.c ****                              &pucbuffer[19 + ID_length + 9 * n]);
2959:../user/source/DLT645.c ****             }
2960:../user/source/DLT645.c ****         }
2961:../user/source/DLT645.c ****         pucbuffer[length + 10] = 0;
2962:../user/source/DLT645.c ****         for (i = 0; i < length + 10; i++)
2963:../user/source/DLT645.c ****         {
2964:../user/source/DLT645.c ****             pucbuffer[length + 10] += pucbuffer[i];
2965:../user/source/DLT645.c ****         }
2966:../user/source/DLT645.c ****         pucbuffer[length + 11] = 0x16;
2967:../user/source/DLT645.c **** #endif
2968:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
2969:../user/source/DLT645.c ****         n = (length - ID_length) / 9; //Êı¾İµã¸öÊı
2970:../user/source/DLT645.c ****         while (n--)
2971:../user/source/DLT645.c ****         {
2972:../user/source/DLT645.c ****             /*FFÎŞĞ§Êı¾İ*/
2973:../user/source/DLT645.c ****             if (pucbuffer[10 + ID_length + 9 * n] == 0x32 ||
2974:../user/source/DLT645.c ****                 pucbuffer[11 + ID_length + 9 * n] == 0x32 ||
2975:../user/source/DLT645.c ****                 pucbuffer[12 + ID_length + 9 * n] == 0x32 ||
2976:../user/source/DLT645.c ****                 pucbuffer[13 + ID_length + 9 * n] == 0x32 ||
2977:../user/source/DLT645.c ****                 pucbuffer[14 + ID_length + 9 * n] == 0x32 ||
2978:../user/source/DLT645.c ****                 pucbuffer[15 + ID_length + 9 * n] == 0x32 ||
2979:../user/source/DLT645.c ****                 pucbuffer[16 + ID_length + 9 * n] == 0x32 ||
2980:../user/source/DLT645.c ****                 pucbuffer[17 + ID_length + 9 * n] == 0x32 ||
2981:../user/source/DLT645.c ****                 pucbuffer[18 + ID_length + 9 * n] == 0x32)
2982:../user/source/DLT645.c ****                 continue;
2983:../user/source/DLT645.c **** 
2984:../user/source/DLT645.c ****             /*¶ÁÈ¡µçÁ÷*/
2985:../user/source/DLT645.c ****             vGet_Current(pucbuffer[10 + ID_length + 9 * n],
2986:../user/source/DLT645.c ****                          pucbuffer[11 + ID_length + 9 * n],
2987:../user/source/DLT645.c ****                          pucbuffer[12 + ID_length + 9 * n],
2988:../user/source/DLT645.c ****                          &Acurrent);
2989:../user/source/DLT645.c ****             vGet_Current(pucbuffer[13 + ID_length + 9 * n],
2990:../user/source/DLT645.c ****                          pucbuffer[14 + ID_length + 9 * n],
2991:../user/source/DLT645.c ****                          pucbuffer[15 + ID_length + 9 * n],
2992:../user/source/DLT645.c ****                          &Bcurrent);
2993:../user/source/DLT645.c ****             vGet_Current(pucbuffer[16 + ID_length + 9 * n],
2994:../user/source/DLT645.c ****                          pucbuffer[17 + ID_length + 9 * n],
2995:../user/source/DLT645.c ****                          pucbuffer[18 + ID_length + 9 * n],
2996:../user/source/DLT645.c ****                          &Ccurrent);
2997:../user/source/DLT645.c **** 
2998:../user/source/DLT645.c ****             ABCcurrent = Acurrent.value + Bcurrent.value + Ccurrent.value;
2999:../user/source/DLT645.c ****             if (ABCcurrent > TransFormer.CT2_CurrentLimit)
3000:../user/source/DLT645.c ****             {
3001:../user/source/DLT645.c ****                 Acurrent.value = TransFormer.CT2_CurrentLimit * Acurrent.value / ABCcurrent;
3002:../user/source/DLT645.c ****                 Bcurrent.value = TransFormer.CT2_CurrentLimit * Bcurrent.value / ABCcurrent;
3003:../user/source/DLT645.c ****                 Ccurrent.value = TransFormer.CT2_CurrentLimit * Ccurrent.value / ABCcurrent;
3004:../user/source/DLT645.c ****             }
3005:../user/source/DLT645.c ****             /*±£Ö¤Ã¿µ¥ÏàµçÁ÷²»ÖØÔØ*/
3006:../user/source/DLT645.c ****             Acurrent.value = (Acurrent.value > (TransFormer.CT2_CurrentLimit / 3)
3007:../user/source/DLT645.c ****                                   ? (TransFormer.CT2_CurrentLimit / 3)
3008:../user/source/DLT645.c ****                                   : Acurrent.value);
3009:../user/source/DLT645.c ****             Bcurrent.value = (Bcurrent.value > (TransFormer.CT2_CurrentLimit / 3)
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 121


3010:../user/source/DLT645.c ****                                   ? (TransFormer.CT2_CurrentLimit / 3)
3011:../user/source/DLT645.c ****                                   : Bcurrent.value);
3012:../user/source/DLT645.c ****             Ccurrent.value = (Ccurrent.value > (TransFormer.CT2_CurrentLimit / 3)
3013:../user/source/DLT645.c ****                                   ? (TransFormer.CT2_CurrentLimit / 3)
3014:../user/source/DLT645.c ****                                   : Ccurrent.value);
3015:../user/source/DLT645.c ****             /*»ØĞ´µçÁ÷*/
3016:../user/source/DLT645.c ****             vPut_Current(Acurrent,
3017:../user/source/DLT645.c ****                          &pucbuffer[10 + ID_length + 9 * n],
3018:../user/source/DLT645.c ****                          &pucbuffer[11 + ID_length + 9 * n],
3019:../user/source/DLT645.c ****                          &pucbuffer[12 + ID_length + 9 * n]);
3020:../user/source/DLT645.c ****             vPut_Current(Bcurrent,
3021:../user/source/DLT645.c ****                          &pucbuffer[13 + ID_length + 9 * n],
3022:../user/source/DLT645.c ****                          &pucbuffer[14 + ID_length + 9 * n],
3023:../user/source/DLT645.c ****                          &pucbuffer[15 + ID_length + 9 * n]);
3024:../user/source/DLT645.c ****             vPut_Current(Ccurrent,
3025:../user/source/DLT645.c ****                          &pucbuffer[16 + ID_length + 9 * n],
3026:../user/source/DLT645.c ****                          &pucbuffer[17 + ID_length + 9 * n],
3027:../user/source/DLT645.c ****                          &pucbuffer[18 + ID_length + 9 * n]);
3028:../user/source/DLT645.c ****         }
3029:../user/source/DLT645.c ****         pucbuffer[length + 10] = 0;
3030:../user/source/DLT645.c ****         for (i = 0; i < length + 10; i++)
3031:../user/source/DLT645.c ****         {
3032:../user/source/DLT645.c ****             pucbuffer[length + 10] += pucbuffer[i];
3033:../user/source/DLT645.c ****         }
3034:../user/source/DLT645.c ****         pucbuffer[length + 11] = 0x16;
3035:../user/source/DLT645.c **** #endif
3036:../user/source/DLT645.c ****         break;
3037:../user/source/DLT645.c ****     default:
3038:../user/source/DLT645.c ****         break;
3039:../user/source/DLT645.c ****     }
3040:../user/source/DLT645.c **** }
3041:../user/source/DLT645.c **** 
3042:../user/source/DLT645.c **** /*
3043:../user/source/DLT645.c **** µØÇø1×Ö½Ú£¨É½¶«=01£»ÖØÇì=02£¬½­Î÷04£¬Í¨ÓÃ07£©
3044:../user/source/DLT645.c **** ¹æÔ¼1×Ö½Ú£¨645¹æÔ¼=01£»698¹æÔ¼=02£»×ÔÊÊÓ¦=03£©
3045:../user/source/DLT645.c **** ¹¦ÄÜ1×Ö½Ú£¨µçÑ¹=01£»µçÁ÷=02£»¸ºÔØ=04£»µçÁ¿=08£©
3046:../user/source/DLT645.c **** °æ±¾ºÅ1×Ö½Ú£¨°æ±¾ºÅ£º1~0xFF£©
3047:../user/source/DLT645.c **** ·¢²¼ÈÕÆÚ4×Ö½Ú£¨·¢²¼ÈÕÆÚ£º20190125£©
3048:../user/source/DLT645.c **** */
3049:../user/source/DLT645.c **** void vRead_Version(uint8_t *pucbuffer)
3050:../user/source/DLT645.c **** {
 3570              		.loc 1 3050 0
 3571              		.cfi_startproc
 3572              		@ args = 0, pretend = 0, frame = 0
 3573              		@ frame_needed = 0, uses_anonymous_args = 0
 3574              	.LVL443:
 3575 0000 38B5     		push	{r3, r4, r5, lr}
 3576              	.LCFI33:
 3577              		.cfi_def_cfa_offset 16
 3578              		.cfi_offset 3, -16
 3579              		.cfi_offset 4, -12
 3580              		.cfi_offset 5, -8
 3581              		.cfi_offset 14, -4
 3582 0002 0446     		mov	r4, r0
3051:../user/source/DLT645.c ****     uint8_t i;
3052:../user/source/DLT645.c ****     pucbuffer[8] = 0x91;
 3583              		.loc 1 3052 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 122


 3584 0004 9123     		movs	r3, #145
 3585 0006 0372     		strb	r3, [r0, #8]
3053:../user/source/DLT645.c ****     pucbuffer[9] = 0x08;
 3586              		.loc 1 3053 0
 3587 0008 0823     		movs	r3, #8
 3588 000a 4372     		strb	r3, [r0, #9]
3054:../user/source/DLT645.c ****     pucbuffer[14] = VERSION_REGION;   //µØÇø
 3589              		.loc 1 3054 0
 3590 000c 0723     		movs	r3, #7
 3591 000e 8373     		strb	r3, [r0, #14]
3055:../user/source/DLT645.c ****     pucbuffer[15] = VERSION_PROTOCAL; //ÈÕÔÂÄê
 3592              		.loc 1 3055 0
 3593 0010 0323     		movs	r3, #3
 3594 0012 C373     		strb	r3, [r0, #15]
3056:../user/source/DLT645.c ****     pucbuffer[16] = VERSION_NUM;
 3595              		.loc 1 3056 0
 3596 0014 0023     		movs	r3, #0
 3597 0016 0374     		strb	r3, [r0, #16]
3057:../user/source/DLT645.c ****     pucbuffer[17] = DEC2BCD(20);
 3598              		.loc 1 3057 0
 3599 0018 2022     		movs	r2, #32
 3600 001a 4274     		strb	r2, [r0, #17]
3058:../user/source/DLT645.c ****     pucbuffer[18] = DEC2BCD(VERSION_YEAR);
 3601              		.loc 1 3058 0
 3602 001c 1922     		movs	r2, #25
 3603 001e 8274     		strb	r2, [r0, #18]
3059:../user/source/DLT645.c ****     pucbuffer[19] = DEC2BCD(VERSION_MON);
 3604              		.loc 1 3059 0
 3605 0020 0122     		movs	r2, #1
 3606 0022 C274     		strb	r2, [r0, #19]
3060:../user/source/DLT645.c ****     pucbuffer[20] = DEC2BCD(VERSION_DAY);
 3607              		.loc 1 3060 0
 3608 0024 2622     		movs	r2, #38
 3609 0026 0275     		strb	r2, [r0, #20]
3061:../user/source/DLT645.c ****     pucbuffer[21] = 0;
 3610              		.loc 1 3061 0
 3611 0028 4375     		strb	r3, [r0, #21]
 3612              	.LVL444:
3062:../user/source/DLT645.c ****     for (i = 0; i < 21; i++)
 3613              		.loc 1 3062 0
 3614 002a 05E0     		b	.L222
 3615              	.LVL445:
 3616              	.L223:
3063:../user/source/DLT645.c ****     {
3064:../user/source/DLT645.c ****         pucbuffer[21] += pucbuffer[i];
 3617              		.loc 1 3064 0 discriminator 3
 3618 002c E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3619 002e 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
 3620 0030 0A44     		add	r2, r2, r1
 3621 0032 6275     		strb	r2, [r4, #21]
3062:../user/source/DLT645.c ****     for (i = 0; i < 21; i++)
 3622              		.loc 1 3062 0 discriminator 3
 3623 0034 0133     		adds	r3, r3, #1
 3624              	.LVL446:
 3625 0036 DBB2     		uxtb	r3, r3
 3626              	.LVL447:
 3627              	.L222:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 123


3062:../user/source/DLT645.c ****     for (i = 0; i < 21; i++)
 3628              		.loc 1 3062 0 is_stmt 0 discriminator 1
 3629 0038 142B     		cmp	r3, #20
 3630 003a F7D9     		bls	.L223
3065:../user/source/DLT645.c ****     }
3066:../user/source/DLT645.c ****     pucbuffer[22] = 0x16;
 3631              		.loc 1 3066 0 is_stmt 1
 3632 003c 1623     		movs	r3, #22
 3633              	.LVL448:
 3634 003e A375     		strb	r3, [r4, #22]
3067:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, pUartDB->pSndbuf, 23);
 3635              		.loc 1 3067 0
 3636 0040 134D     		ldr	r5, .L227
 3637 0042 2B68     		ldr	r3, [r5]
 3638 0044 1722     		movs	r2, #23
 3639 0046 9968     		ldr	r1, [r3, #8]
 3640 0048 2046     		mov	r0, r4
 3641              	.LVL449:
 3642 004a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3643              	.LVL450:
3068:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 3644              		.loc 1 3068 0
 3645 004e 2B68     		ldr	r3, [r5]
 3646 0050 9868     		ldr	r0, [r3, #8]
 3647 0052 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3648              	.LVL451:
 3649 0056 10B9     		cbnz	r0, .L224
3069:../user/source/DLT645.c ****     {
3070:../user/source/DLT645.c ****         Uart_DataPut(USART3);
 3650              		.loc 1 3070 0
 3651 0058 0E48     		ldr	r0, .L227+4
 3652 005a FFF7FEFF 		bl	Uart_DataPut
 3653              	.LVL452:
 3654              	.L224:
3071:../user/source/DLT645.c ****     }
3072:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
3073:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, pUartIR->pSndbuf, 23);
 3655              		.loc 1 3073 0
 3656 005e 0E4D     		ldr	r5, .L227+8
 3657 0060 2B68     		ldr	r3, [r5]
 3658 0062 1722     		movs	r2, #23
 3659 0064 9968     		ldr	r1, [r3, #8]
 3660 0066 2046     		mov	r0, r4
 3661 0068 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3662              	.LVL453:
3074:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 3663              		.loc 1 3074 0
 3664 006c 2B68     		ldr	r3, [r5]
 3665 006e 9868     		ldr	r0, [r3, #8]
 3666 0070 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3667              	.LVL454:
 3668 0074 50B9     		cbnz	r0, .L221
3075:../user/source/DLT645.c ****     {
3076:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
 3669              		.loc 1 3076 0
 3670 0076 094C     		ldr	r4, .L227+12
 3671              	.LVL455:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 124


 3672 0078 0022     		movs	r2, #0
 3673 007a 0949     		ldr	r1, .L227+16
 3674 007c 2046     		mov	r0, r4
 3675 007e FFF7FEFF 		bl	USART_ITConfig
 3676              	.LVL456:
3077:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3677              		.loc 1 3077 0
 3678 0082 0122     		movs	r2, #1
 3679 0084 0749     		ldr	r1, .L227+20
 3680 0086 2046     		mov	r0, r4
 3681 0088 FFF7FEFF 		bl	USART_ITConfig
 3682              	.LVL457:
 3683              	.L221:
 3684 008c 38BD     		pop	{r3, r4, r5, pc}
 3685              	.L228:
 3686 008e 00BF     		.align	2
 3687              	.L227:
 3688 0090 00000000 		.word	.LANCHOR6
 3689 0094 00480040 		.word	1073760256
 3690 0098 00000000 		.word	.LANCHOR7
 3691 009c 00440040 		.word	1073759232
 3692 00a0 05010500 		.word	327941
 3693 00a4 07010700 		.word	459015
 3694              		.cfi_endproc
 3695              	.LFE163:
 3697              		.section	.text.vEnergy_Modify_RaitoSet,"ax",%progbits
 3698              		.align	2
 3699              		.global	vEnergy_Modify_RaitoSet
 3700              		.thumb
 3701              		.thumb_func
 3703              	vEnergy_Modify_RaitoSet:
 3704              	.LFB153:
2365:../user/source/DLT645.c ****     uint8_t ratio;
 3705              		.loc 1 2365 0
 3706              		.cfi_startproc
 3707              		@ args = 0, pretend = 0, frame = 0
 3708              		@ frame_needed = 0, uses_anonymous_args = 0
 3709              	.LVL458:
 3710 0000 70B5     		push	{r4, r5, r6, lr}
 3711              	.LCFI34:
 3712              		.cfi_def_cfa_offset 16
 3713              		.cfi_offset 4, -16
 3714              		.cfi_offset 5, -12
 3715              		.cfi_offset 6, -8
 3716              		.cfi_offset 14, -4
 3717 0002 0446     		mov	r4, r0
2372:../user/source/DLT645.c ****     ratioValid = (ratio > 0 && ratio <= 255);
 3718              		.loc 1 2372 0
 3719 0004 817B     		ldrb	r1, [r0, #14]	@ zero_extendqisi2
 3720 0006 0809     		lsrs	r0, r1, #4
 3721              	.LVL459:
 3722 0008 E27B     		ldrb	r2, [r4, #15]	@ zero_extendqisi2
 3723 000a 1509     		lsrs	r5, r2, #4
 3724 000c 05EB8505 		add	r5, r5, r5, lsl #2
 3725 0010 6B00     		lsls	r3, r5, #1
 3726 0012 02F00F02 		and	r2, r2, #15
 3727 0016 1344     		add	r3, r3, r2
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 125


 3728 0018 00EB8002 		add	r2, r0, r0, lsl #2
 3729 001c 5000     		lsls	r0, r2, #1
 3730 001e 03EB8303 		add	r3, r3, r3, lsl #2
 3731 0022 03EB8303 		add	r3, r3, r3, lsl #2
 3732 0026 9A00     		lsls	r2, r3, #2
 3733 0028 8318     		adds	r3, r0, r2
 3734 002a 01F00F01 		and	r1, r1, #15
 3735 002e 0B44     		add	r3, r3, r1
 3736              	.LVL460:
2374:../user/source/DLT645.c ****     {
 3737              		.loc 1 2374 0
 3738 0030 13F0FF05 		ands	r5, r3, #255
 3739 0034 11D0     		beq	.L230
2376:../user/source/DLT645.c ****         ucDayfrozen_Modify_Ratio = ratio;
 3740              		.loc 1 2376 0
 3741 0036 264E     		ldr	r6, .L238
 3742 0038 2946     		mov	r1, r5
 3743 003a 3046     		mov	r0, r6
 3744 003c FFF7FEFF 		bl	Flash_Write_Word
 3745              	.LVL461:
2377:../user/source/DLT645.c ****         if (EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR) == ratio)
 3746              		.loc 1 2377 0
 3747 0040 244B     		ldr	r3, .L238+4
 3748 0042 1D70     		strb	r5, [r3]
2378:../user/source/DLT645.c ****         {
 3749              		.loc 1 2378 0
 3750 0044 3046     		mov	r0, r6
 3751 0046 FFF7FEFF 		bl	EEProm_Read
 3752              	.LVL462:
 3753 004a 8542     		cmp	r5, r0
 3754 004c 02D1     		bne	.L231
2380:../user/source/DLT645.c ****         }
 3755              		.loc 1 2380 0
 3756 004e 9423     		movs	r3, #148
 3757 0050 2372     		strb	r3, [r4, #8]
 3758 0052 04E0     		b	.L232
 3759              	.L231:
2384:../user/source/DLT645.c ****         }
 3760              		.loc 1 2384 0
 3761 0054 D423     		movs	r3, #212
 3762 0056 2372     		strb	r3, [r4, #8]
 3763 0058 01E0     		b	.L232
 3764              	.LVL463:
 3765              	.L230:
2389:../user/source/DLT645.c ****     }
 3766              		.loc 1 2389 0
 3767 005a D423     		movs	r3, #212
 3768              	.LVL464:
 3769 005c 2372     		strb	r3, [r4, #8]
 3770              	.LVL465:
 3771              	.L232:
2391:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 3772              		.loc 1 2391 0
 3773 005e 0023     		movs	r3, #0
 3774 0060 6372     		strb	r3, [r4, #9]
2392:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 3775              		.loc 1 2392 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 126


 3776 0062 A372     		strb	r3, [r4, #10]
 3777              	.LVL466:
2393:../user/source/DLT645.c ****     {
 3778              		.loc 1 2393 0
 3779 0064 05E0     		b	.L233
 3780              	.LVL467:
 3781              	.L234:
2395:../user/source/DLT645.c ****     }
 3782              		.loc 1 2395 0 discriminator 3
 3783 0066 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3784 0068 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 3785 006a 0A44     		add	r2, r2, r1
 3786 006c A272     		strb	r2, [r4, #10]
2393:../user/source/DLT645.c ****     {
 3787              		.loc 1 2393 0 discriminator 3
 3788 006e 0133     		adds	r3, r3, #1
 3789              	.LVL468:
 3790 0070 9BB2     		uxth	r3, r3
 3791              	.LVL469:
 3792              	.L233:
2393:../user/source/DLT645.c ****     {
 3793              		.loc 1 2393 0 is_stmt 0 discriminator 1
 3794 0072 092B     		cmp	r3, #9
 3795 0074 F7D9     		bls	.L234
2397:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 3796              		.loc 1 2397 0 is_stmt 1
 3797 0076 1623     		movs	r3, #22
 3798              	.LVL470:
 3799 0078 E372     		strb	r3, [r4, #11]
2399:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 3800              		.loc 1 2399 0
 3801 007a 0022     		movs	r2, #0
 3802 007c 164B     		ldr	r3, .L238+8
 3803 007e 1A70     		strb	r2, [r3]
2400:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 3804              		.loc 1 2400 0
 3805 0080 164D     		ldr	r5, .L238+12
 3806 0082 2B68     		ldr	r3, [r5]
 3807 0084 0C22     		movs	r2, #12
 3808 0086 9968     		ldr	r1, [r3, #8]
 3809 0088 2046     		mov	r0, r4
 3810 008a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3811              	.LVL471:
2401:../user/source/DLT645.c ****     {
 3812              		.loc 1 2401 0
 3813 008e 2B68     		ldr	r3, [r5]
 3814 0090 9868     		ldr	r0, [r3, #8]
 3815 0092 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3816              	.LVL472:
 3817 0096 10B9     		cbnz	r0, .L235
2403:../user/source/DLT645.c ****     }
 3818              		.loc 1 2403 0
 3819 0098 1148     		ldr	r0, .L238+16
 3820 009a FFF7FEFF 		bl	Uart_DataPut
 3821              	.LVL473:
 3822              	.L235:
2406:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 127


 3823              		.loc 1 2406 0
 3824 009e 114D     		ldr	r5, .L238+20
 3825 00a0 2B68     		ldr	r3, [r5]
 3826 00a2 0C22     		movs	r2, #12
 3827 00a4 9968     		ldr	r1, [r3, #8]
 3828 00a6 2046     		mov	r0, r4
 3829 00a8 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3830              	.LVL474:
2407:../user/source/DLT645.c ****     {
 3831              		.loc 1 2407 0
 3832 00ac 2B68     		ldr	r3, [r5]
 3833 00ae 9868     		ldr	r0, [r3, #8]
 3834 00b0 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3835              	.LVL475:
 3836 00b4 50B9     		cbnz	r0, .L229
2409:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3837              		.loc 1 2409 0
 3838 00b6 0C4C     		ldr	r4, .L238+24
 3839              	.LVL476:
 3840 00b8 0022     		movs	r2, #0
 3841 00ba 0C49     		ldr	r1, .L238+28
 3842 00bc 2046     		mov	r0, r4
 3843 00be FFF7FEFF 		bl	USART_ITConfig
 3844              	.LVL477:
2410:../user/source/DLT645.c ****     }
 3845              		.loc 1 2410 0
 3846 00c2 0122     		movs	r2, #1
 3847 00c4 0A49     		ldr	r1, .L238+32
 3848 00c6 2046     		mov	r0, r4
 3849 00c8 FFF7FEFF 		bl	USART_ITConfig
 3850              	.LVL478:
 3851              	.L229:
 3852 00cc 70BD     		pop	{r4, r5, r6, pc}
 3853              	.L239:
 3854 00ce 00BF     		.align	2
 3855              	.L238:
 3856 00d0 10EF0108 		.word	134344464
 3857 00d4 00000000 		.word	ucDayfrozen_Modify_Ratio
 3858 00d8 00000000 		.word	.LANCHOR0
 3859 00dc 00000000 		.word	.LANCHOR6
 3860 00e0 00480040 		.word	1073760256
 3861 00e4 00000000 		.word	.LANCHOR7
 3862 00e8 00440040 		.word	1073759232
 3863 00ec 05010500 		.word	327941
 3864 00f0 07010700 		.word	459015
 3865              		.cfi_endproc
 3866              	.LFE153:
 3868              		.section	.text.vVoltage_SetMinValue,"ax",%progbits
 3869              		.align	2
 3870              		.global	vVoltage_SetMinValue
 3871              		.thumb
 3872              		.thumb_func
 3874              	vVoltage_SetMinValue:
 3875              	.LFB158:
2628:../user/source/DLT645.c ****     int VMIN = 0;
 3876              		.loc 1 2628 0
 3877              		.cfi_startproc
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 128


 3878              		@ args = 0, pretend = 0, frame = 0
 3879              		@ frame_needed = 0, uses_anonymous_args = 0
 3880              	.LVL479:
 3881 0000 70B5     		push	{r4, r5, r6, lr}
 3882              	.LCFI35:
 3883              		.cfi_def_cfa_offset 16
 3884              		.cfi_offset 4, -16
 3885              		.cfi_offset 5, -12
 3886              		.cfi_offset 6, -8
 3887              		.cfi_offset 14, -4
 3888 0002 0446     		mov	r4, r0
 3889              	.LVL480:
2631:../user/source/DLT645.c ****     if (VMIN < 2200)
 3890              		.loc 1 2631 0
 3891 0004 857B     		ldrb	r5, [r0, #14]	@ zero_extendqisi2
 3892 0006 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 3893 0008 2846     		mov	r0, r5
 3894              	.LVL481:
 3895 000a FFF7FEFF 		bl	Get_Voltage
 3896              	.LVL482:
2632:../user/source/DLT645.c ****     {
 3897              		.loc 1 2632 0
 3898 000e 40F69703 		movw	r3, #2199
 3899 0012 9842     		cmp	r0, r3
 3900 0014 1CDC     		bgt	.L241
2634:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN1_Addr, pucBuffer[14]);
 3901              		.loc 1 2634 0
 3902 0016 224B     		ldr	r3, .L248
 3903 0018 1860     		str	r0, [r3]
2635:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN2_Addr, pucBuffer[15]);
 3904              		.loc 1 2635 0
 3905 001a 224E     		ldr	r6, .L248+4
 3906 001c 2946     		mov	r1, r5
 3907 001e 3046     		mov	r0, r6
 3908              	.LVL483:
 3909 0020 FFF7FEFF 		bl	Flash_Write_Word
 3910              	.LVL484:
2636:../user/source/DLT645.c ****         if ((EEProm_Read(FLASH_VMIN1_Addr) == pucBuffer[14]) &&
 3911              		.loc 1 2636 0
 3912 0024 E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
 3913 0026 2048     		ldr	r0, .L248+8
 3914 0028 FFF7FEFF 		bl	Flash_Write_Word
 3915              	.LVL485:
2637:../user/source/DLT645.c ****             (EEProm_Read(FLASH_VMIN2_Addr) == pucBuffer[15]))
 3916              		.loc 1 2637 0
 3917 002c 3046     		mov	r0, r6
 3918 002e FFF7FEFF 		bl	EEProm_Read
 3919              	.LVL486:
 3920 0032 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 3921 0034 9842     		cmp	r0, r3
 3922 0036 08D1     		bne	.L242
2638:../user/source/DLT645.c ****         {
 3923              		.loc 1 2638 0 discriminator 1
 3924 0038 1B48     		ldr	r0, .L248+8
 3925 003a FFF7FEFF 		bl	EEProm_Read
 3926              	.LVL487:
 3927 003e E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 129


2637:../user/source/DLT645.c ****             (EEProm_Read(FLASH_VMIN2_Addr) == pucBuffer[15]))
 3928              		.loc 1 2637 0 discriminator 1
 3929 0040 9842     		cmp	r0, r3
 3930 0042 02D1     		bne	.L242
2640:../user/source/DLT645.c ****         }
 3931              		.loc 1 2640 0
 3932 0044 9423     		movs	r3, #148
 3933 0046 2372     		strb	r3, [r4, #8]
 3934 0048 04E0     		b	.L243
 3935              	.L242:
2644:../user/source/DLT645.c ****         }
 3936              		.loc 1 2644 0
 3937 004a D423     		movs	r3, #212
 3938 004c 2372     		strb	r3, [r4, #8]
 3939 004e 01E0     		b	.L243
 3940              	.LVL488:
 3941              	.L241:
2649:../user/source/DLT645.c ****     }
 3942              		.loc 1 2649 0
 3943 0050 D423     		movs	r3, #212
 3944 0052 2372     		strb	r3, [r4, #8]
 3945              	.LVL489:
 3946              	.L243:
2651:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 3947              		.loc 1 2651 0
 3948 0054 0023     		movs	r3, #0
 3949 0056 6372     		strb	r3, [r4, #9]
2652:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 3950              		.loc 1 2652 0
 3951 0058 A372     		strb	r3, [r4, #10]
2653:../user/source/DLT645.c ****     {
 3952              		.loc 1 2653 0
 3953 005a 05E0     		b	.L244
 3954              	.LVL490:
 3955              	.L245:
2655:../user/source/DLT645.c ****     }
 3956              		.loc 1 2655 0 discriminator 3
 3957 005c E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3958 005e A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 3959 0060 0A44     		add	r2, r2, r1
 3960 0062 A272     		strb	r2, [r4, #10]
2653:../user/source/DLT645.c ****     {
 3961              		.loc 1 2653 0 discriminator 3
 3962 0064 0133     		adds	r3, r3, #1
 3963              	.LVL491:
 3964 0066 9BB2     		uxth	r3, r3
 3965              	.LVL492:
 3966              	.L244:
2653:../user/source/DLT645.c ****     {
 3967              		.loc 1 2653 0 is_stmt 0 discriminator 1
 3968 0068 092B     		cmp	r3, #9
 3969 006a F7D9     		bls	.L245
2657:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
 3970              		.loc 1 2657 0 is_stmt 1
 3971 006c 1623     		movs	r3, #22
 3972              	.LVL493:
 3973 006e E372     		strb	r3, [r4, #11]
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 130


2658:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 3974              		.loc 1 2658 0
 3975 0070 0E4D     		ldr	r5, .L248+12
 3976 0072 2B68     		ldr	r3, [r5]
 3977 0074 0C22     		movs	r2, #12
 3978 0076 9968     		ldr	r1, [r3, #8]
 3979 0078 2046     		mov	r0, r4
 3980 007a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3981              	.LVL494:
2659:../user/source/DLT645.c ****     {
 3982              		.loc 1 2659 0
 3983 007e 2B68     		ldr	r3, [r5]
 3984 0080 9868     		ldr	r0, [r3, #8]
 3985 0082 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3986              	.LVL495:
 3987 0086 50B9     		cbnz	r0, .L240
2661:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3988              		.loc 1 2661 0
 3989 0088 094C     		ldr	r4, .L248+16
 3990              	.LVL496:
 3991 008a 0022     		movs	r2, #0
 3992 008c 0949     		ldr	r1, .L248+20
 3993 008e 2046     		mov	r0, r4
 3994 0090 FFF7FEFF 		bl	USART_ITConfig
 3995              	.LVL497:
2662:../user/source/DLT645.c ****     }
 3996              		.loc 1 2662 0
 3997 0094 0122     		movs	r2, #1
 3998 0096 0849     		ldr	r1, .L248+24
 3999 0098 2046     		mov	r0, r4
 4000 009a FFF7FEFF 		bl	USART_ITConfig
 4001              	.LVL498:
 4002              	.L240:
 4003 009e 70BD     		pop	{r4, r5, r6, pc}
 4004              	.L249:
 4005              		.align	2
 4006              	.L248:
 4007 00a0 00000000 		.word	Voltage_MIN
 4008 00a4 08EF0108 		.word	134344456
 4009 00a8 0CEF0108 		.word	134344460
 4010 00ac 00000000 		.word	.LANCHOR7
 4011 00b0 00440040 		.word	1073759232
 4012 00b4 05010500 		.word	327941
 4013 00b8 07010700 		.word	459015
 4014              		.cfi_endproc
 4015              	.LFE158:
 4017              		.section	.text.vEnergy_Modify_ReadValue,"ax",%progbits
 4018              		.align	2
 4019              		.global	vEnergy_Modify_ReadValue
 4020              		.thumb
 4021              		.thumb_func
 4023              	vEnergy_Modify_ReadValue:
 4024              	.LFB156:
2530:../user/source/DLT645.c ****     uint8_t i;
 4025              		.loc 1 2530 0
 4026              		.cfi_startproc
 4027              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 131


 4028              		@ frame_needed = 0, uses_anonymous_args = 0
 4029              	.LVL499:
 4030 0000 70B5     		push	{r4, r5, r6, lr}
 4031              	.LCFI36:
 4032              		.cfi_def_cfa_offset 16
 4033              		.cfi_offset 4, -16
 4034              		.cfi_offset 5, -12
 4035              		.cfi_offset 6, -8
 4036              		.cfi_offset 14, -4
 4037 0002 82B0     		sub	sp, sp, #8
 4038              	.LCFI37:
 4039              		.cfi_def_cfa_offset 24
 4040 0004 0446     		mov	r4, r0
2536:../user/source/DLT645.c ****     pucbuffer[9] = 0x0C;
 4041              		.loc 1 2536 0
 4042 0006 9123     		movs	r3, #145
 4043 0008 0372     		strb	r3, [r0, #8]
2537:../user/source/DLT645.c **** 
 4044              		.loc 1 2537 0
 4045 000a 0C23     		movs	r3, #12
 4046 000c 4372     		strb	r3, [r0, #9]
2540:../user/source/DLT645.c ****     modifiedValue = Flash_Read_Word(FLASH_MODIFIED_1DAYFROZEN_ADDR);
 4047              		.loc 1 2540 0
 4048 000e 3048     		ldr	r0, .L260
 4049              	.LVL500:
 4050 0010 FFF7FEFF 		bl	Flash_Read_Word
 4051              	.LVL501:
 4052 0014 0646     		mov	r6, r0
 4053              	.LVL502:
2541:../user/source/DLT645.c ****     /*ÖÕ¶ËµÚÒ»´ÎÊ¹ÓÃ*/
 4054              		.loc 1 2541 0
 4055 0016 2F48     		ldr	r0, .L260+4
 4056              	.LVL503:
 4057 0018 FFF7FEFF 		bl	Flash_Read_Word
 4058              	.LVL504:
 4059 001c 0546     		mov	r5, r0
 4060              	.LVL505:
2543:../user/source/DLT645.c ****     {
 4061              		.loc 1 2543 0
 4062 001e B6F1FF3F 		cmp	r6, #-1
 4063 0022 00D1     		bne	.L251
2545:../user/source/DLT645.c ****     }
 4064              		.loc 1 2545 0
 4065 0024 0026     		movs	r6, #0
 4066              	.LVL506:
 4067              	.L251:
2547:../user/source/DLT645.c ****     if (modifiedValue == 0XFFFFFFFF)
 4068              		.loc 1 2547 0
 4069 0026 04F11103 		add	r3, r4, #17
 4070 002a 0093     		str	r3, [sp]
 4071 002c 04F11003 		add	r3, r4, #16
 4072 0030 04F10F02 		add	r2, r4, #15
 4073 0034 04F10E01 		add	r1, r4, #14
 4074 0038 3046     		mov	r0, r6
 4075              	.LVL507:
 4076 003a FFF7FEFF 		bl	Fill_Energy
 4077              	.LVL508:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 132


2548:../user/source/DLT645.c ****     {
 4078              		.loc 1 2548 0
 4079 003e B5F1FF3F 		cmp	r5, #-1
 4080 0042 00D1     		bne	.L252
2550:../user/source/DLT645.c ****     }
 4081              		.loc 1 2550 0
 4082 0044 0025     		movs	r5, #0
 4083              	.LVL509:
 4084              	.L252:
2552:../user/source/DLT645.c ****     pucbuffer[22] = 0;
 4085              		.loc 1 2552 0
 4086 0046 04F11503 		add	r3, r4, #21
 4087 004a 0093     		str	r3, [sp]
 4088 004c 04F11403 		add	r3, r4, #20
 4089 0050 04F11302 		add	r2, r4, #19
 4090 0054 04F11201 		add	r1, r4, #18
 4091 0058 2846     		mov	r0, r5
 4092 005a FFF7FEFF 		bl	Fill_Energy
 4093              	.LVL510:
2553:../user/source/DLT645.c ****     for (i = 0; i < 22; i++)
 4094              		.loc 1 2553 0
 4095 005e 0023     		movs	r3, #0
 4096 0060 A375     		strb	r3, [r4, #22]
 4097              	.LVL511:
2554:../user/source/DLT645.c ****     {
 4098              		.loc 1 2554 0
 4099 0062 05E0     		b	.L253
 4100              	.LVL512:
 4101              	.L254:
2556:../user/source/DLT645.c ****     }
 4102              		.loc 1 2556 0 discriminator 3
 4103 0064 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 4104 0066 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
 4105 0068 0A44     		add	r2, r2, r1
 4106 006a A275     		strb	r2, [r4, #22]
2554:../user/source/DLT645.c ****     {
 4107              		.loc 1 2554 0 discriminator 3
 4108 006c 0133     		adds	r3, r3, #1
 4109              	.LVL513:
 4110 006e DBB2     		uxtb	r3, r3
 4111              	.LVL514:
 4112              	.L253:
2554:../user/source/DLT645.c ****     {
 4113              		.loc 1 2554 0 is_stmt 0 discriminator 1
 4114 0070 152B     		cmp	r3, #21
 4115 0072 F7D9     		bls	.L254
2558:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 4116              		.loc 1 2558 0 is_stmt 1
 4117 0074 1623     		movs	r3, #22
 4118              	.LVL515:
 4119 0076 E375     		strb	r3, [r4, #23]
2560:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, pUartDB->pSndbuf, 24);
 4120              		.loc 1 2560 0
 4121 0078 0022     		movs	r2, #0
 4122 007a 174B     		ldr	r3, .L260+8
 4123 007c 1A70     		strb	r2, [r3]
2561:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 133


 4124              		.loc 1 2561 0
 4125 007e 174D     		ldr	r5, .L260+12
 4126              	.LVL516:
 4127 0080 2B68     		ldr	r3, [r5]
 4128 0082 1822     		movs	r2, #24
 4129 0084 9968     		ldr	r1, [r3, #8]
 4130 0086 2046     		mov	r0, r4
 4131 0088 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4132              	.LVL517:
2562:../user/source/DLT645.c ****     {
 4133              		.loc 1 2562 0
 4134 008c 2B68     		ldr	r3, [r5]
 4135 008e 9868     		ldr	r0, [r3, #8]
 4136 0090 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4137              	.LVL518:
 4138 0094 10B9     		cbnz	r0, .L255
2564:../user/source/DLT645.c ****     }
 4139              		.loc 1 2564 0
 4140 0096 1248     		ldr	r0, .L260+16
 4141 0098 FFF7FEFF 		bl	Uart_DataPut
 4142              	.LVL519:
 4143              	.L255:
2567:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 4144              		.loc 1 2567 0
 4145 009c 114D     		ldr	r5, .L260+20
 4146 009e 2B68     		ldr	r3, [r5]
 4147 00a0 1822     		movs	r2, #24
 4148 00a2 9968     		ldr	r1, [r3, #8]
 4149 00a4 2046     		mov	r0, r4
 4150 00a6 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4151              	.LVL520:
2568:../user/source/DLT645.c ****     {
 4152              		.loc 1 2568 0
 4153 00aa 2B68     		ldr	r3, [r5]
 4154 00ac 9868     		ldr	r0, [r3, #8]
 4155 00ae FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4156              	.LVL521:
 4157 00b2 50B9     		cbnz	r0, .L250
2570:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 4158              		.loc 1 2570 0
 4159 00b4 0C4C     		ldr	r4, .L260+24
 4160              	.LVL522:
 4161 00b6 0022     		movs	r2, #0
 4162 00b8 0C49     		ldr	r1, .L260+28
 4163 00ba 2046     		mov	r0, r4
 4164 00bc FFF7FEFF 		bl	USART_ITConfig
 4165              	.LVL523:
2571:../user/source/DLT645.c ****     }
 4166              		.loc 1 2571 0
 4167 00c0 0122     		movs	r2, #1
 4168 00c2 0B49     		ldr	r1, .L260+32
 4169 00c4 2046     		mov	r0, r4
 4170 00c6 FFF7FEFF 		bl	USART_ITConfig
 4171              	.LVL524:
 4172              	.L250:
2573:../user/source/DLT645.c **** 
 4173              		.loc 1 2573 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 134


 4174 00ca 02B0     		add	sp, sp, #8
 4175              	.LCFI38:
 4176              		.cfi_def_cfa_offset 16
 4177              		@ sp needed
 4178 00cc 70BD     		pop	{r4, r5, r6, pc}
 4179              	.LVL525:
 4180              	.L261:
 4181 00ce 00BF     		.align	2
 4182              	.L260:
 4183 00d0 00F00108 		.word	134344704
 4184 00d4 3CF00108 		.word	134344764
 4185 00d8 00000000 		.word	.LANCHOR0
 4186 00dc 00000000 		.word	.LANCHOR6
 4187 00e0 00480040 		.word	1073760256
 4188 00e4 00000000 		.word	.LANCHOR7
 4189 00e8 00440040 		.word	1073759232
 4190 00ec 05010500 		.word	327941
 4191 00f0 07010700 		.word	459015
 4192              		.cfi_endproc
 4193              	.LFE156:
 4195              		.section	.text.vVoltage_SetMaxValue,"ax",%progbits
 4196              		.align	2
 4197              		.global	vVoltage_SetMaxValue
 4198              		.thumb
 4199              		.thumb_func
 4201              	vVoltage_SetMaxValue:
 4202              	.LFB157:
2583:../user/source/DLT645.c ****     int VMAX = 0;
 4203              		.loc 1 2583 0
 4204              		.cfi_startproc
 4205              		@ args = 0, pretend = 0, frame = 0
 4206              		@ frame_needed = 0, uses_anonymous_args = 0
 4207              	.LVL526:
 4208 0000 70B5     		push	{r4, r5, r6, lr}
 4209              	.LCFI39:
 4210              		.cfi_def_cfa_offset 16
 4211              		.cfi_offset 4, -16
 4212              		.cfi_offset 5, -12
 4213              		.cfi_offset 6, -8
 4214              		.cfi_offset 14, -4
 4215 0002 0446     		mov	r4, r0
 4216              	.LVL527:
2586:../user/source/DLT645.c ****     if (VMAX > 2200)
 4217              		.loc 1 2586 0
 4218 0004 857B     		ldrb	r5, [r0, #14]	@ zero_extendqisi2
 4219 0006 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 4220 0008 2846     		mov	r0, r5
 4221              	.LVL528:
 4222 000a FFF7FEFF 		bl	Get_Voltage
 4223              	.LVL529:
2587:../user/source/DLT645.c ****     {
 4224              		.loc 1 2587 0
 4225 000e 40F69803 		movw	r3, #2200
 4226 0012 9842     		cmp	r0, r3
 4227 0014 1EDD     		ble	.L263
2589:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX1_Addr, pucBuffer[14]);
 4228              		.loc 1 2589 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 135


 4229 0016 234B     		ldr	r3, .L270
 4230 0018 1860     		str	r0, [r3]
2590:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX2_Addr, pucBuffer[15]);
 4231              		.loc 1 2590 0
 4232 001a 234E     		ldr	r6, .L270+4
 4233 001c 2946     		mov	r1, r5
 4234 001e 3046     		mov	r0, r6
 4235              	.LVL530:
 4236 0020 FFF7FEFF 		bl	Flash_Write_Word
 4237              	.LVL531:
2591:../user/source/DLT645.c ****         if (((uint8_t)Flash_Read_Word(FLASH_VMAX1_Addr) == pucBuffer[14]) &&
 4238              		.loc 1 2591 0
 4239 0024 E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
 4240 0026 2148     		ldr	r0, .L270+8
 4241 0028 FFF7FEFF 		bl	Flash_Write_Word
 4242              	.LVL532:
2592:../user/source/DLT645.c ****             ((uint8_t)Flash_Read_Word(FLASH_VMAX2_Addr) == pucBuffer[15]))
 4243              		.loc 1 2592 0
 4244 002c 3046     		mov	r0, r6
 4245 002e FFF7FEFF 		bl	Flash_Read_Word
 4246              	.LVL533:
 4247 0032 C0B2     		uxtb	r0, r0
 4248 0034 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 4249 0036 9842     		cmp	r0, r3
 4250 0038 09D1     		bne	.L264
2593:../user/source/DLT645.c ****         {
 4251              		.loc 1 2593 0 discriminator 1
 4252 003a 1C48     		ldr	r0, .L270+8
 4253 003c FFF7FEFF 		bl	Flash_Read_Word
 4254              	.LVL534:
 4255 0040 C0B2     		uxtb	r0, r0
 4256 0042 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
2592:../user/source/DLT645.c ****             ((uint8_t)Flash_Read_Word(FLASH_VMAX2_Addr) == pucBuffer[15]))
 4257              		.loc 1 2592 0 discriminator 1
 4258 0044 9842     		cmp	r0, r3
 4259 0046 02D1     		bne	.L264
2595:../user/source/DLT645.c ****         }
 4260              		.loc 1 2595 0
 4261 0048 9423     		movs	r3, #148
 4262 004a 2372     		strb	r3, [r4, #8]
 4263 004c 04E0     		b	.L265
 4264              	.L264:
2599:../user/source/DLT645.c ****         }
 4265              		.loc 1 2599 0
 4266 004e D423     		movs	r3, #212
 4267 0050 2372     		strb	r3, [r4, #8]
 4268 0052 01E0     		b	.L265
 4269              	.LVL535:
 4270              	.L263:
2604:../user/source/DLT645.c ****     }
 4271              		.loc 1 2604 0
 4272 0054 D423     		movs	r3, #212
 4273 0056 2372     		strb	r3, [r4, #8]
 4274              	.LVL536:
 4275              	.L265:
2606:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 4276              		.loc 1 2606 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 136


 4277 0058 0023     		movs	r3, #0
 4278 005a 6372     		strb	r3, [r4, #9]
2607:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 4279              		.loc 1 2607 0
 4280 005c A372     		strb	r3, [r4, #10]
2608:../user/source/DLT645.c ****     {
 4281              		.loc 1 2608 0
 4282 005e 05E0     		b	.L266
 4283              	.LVL537:
 4284              	.L267:
2610:../user/source/DLT645.c ****     }
 4285              		.loc 1 2610 0 discriminator 3
 4286 0060 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 4287 0062 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 4288 0064 0A44     		add	r2, r2, r1
 4289 0066 A272     		strb	r2, [r4, #10]
2608:../user/source/DLT645.c ****     {
 4290              		.loc 1 2608 0 discriminator 3
 4291 0068 0133     		adds	r3, r3, #1
 4292              	.LVL538:
 4293 006a 9BB2     		uxth	r3, r3
 4294              	.LVL539:
 4295              	.L266:
2608:../user/source/DLT645.c ****     {
 4296              		.loc 1 2608 0 is_stmt 0 discriminator 1
 4297 006c 092B     		cmp	r3, #9
 4298 006e F7D9     		bls	.L267
2612:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
 4299              		.loc 1 2612 0 is_stmt 1
 4300 0070 1623     		movs	r3, #22
 4301              	.LVL540:
 4302 0072 E372     		strb	r3, [r4, #11]
2613:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 4303              		.loc 1 2613 0
 4304 0074 0E4D     		ldr	r5, .L270+12
 4305 0076 2B68     		ldr	r3, [r5]
 4306 0078 0C22     		movs	r2, #12
 4307 007a 9968     		ldr	r1, [r3, #8]
 4308 007c 2046     		mov	r0, r4
 4309 007e FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4310              	.LVL541:
2614:../user/source/DLT645.c ****     {
 4311              		.loc 1 2614 0
 4312 0082 2B68     		ldr	r3, [r5]
 4313 0084 9868     		ldr	r0, [r3, #8]
 4314 0086 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4315              	.LVL542:
 4316 008a 50B9     		cbnz	r0, .L262
2616:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 4317              		.loc 1 2616 0
 4318 008c 094C     		ldr	r4, .L270+16
 4319              	.LVL543:
 4320 008e 0022     		movs	r2, #0
 4321 0090 0949     		ldr	r1, .L270+20
 4322 0092 2046     		mov	r0, r4
 4323 0094 FFF7FEFF 		bl	USART_ITConfig
 4324              	.LVL544:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 137


2617:../user/source/DLT645.c ****     }
 4325              		.loc 1 2617 0
 4326 0098 0122     		movs	r2, #1
 4327 009a 0849     		ldr	r1, .L270+24
 4328 009c 2046     		mov	r0, r4
 4329 009e FFF7FEFF 		bl	USART_ITConfig
 4330              	.LVL545:
 4331              	.L262:
 4332 00a2 70BD     		pop	{r4, r5, r6, pc}
 4333              	.L271:
 4334              		.align	2
 4335              	.L270:
 4336 00a4 00000000 		.word	Voltage_MAX
 4337 00a8 00EF0108 		.word	134344448
 4338 00ac 04EF0108 		.word	134344452
 4339 00b0 00000000 		.word	.LANCHOR7
 4340 00b4 00440040 		.word	1073759232
 4341 00b8 05010500 		.word	327941
 4342 00bc 07010700 		.word	459015
 4343              		.cfi_endproc
 4344              	.LFE157:
 4346              		.section	.text.vEnergy_Modify_AbleSet,"ax",%progbits
 4347              		.align	2
 4348              		.global	vEnergy_Modify_AbleSet
 4349              		.thumb
 4350              		.thumb_func
 4352              	vEnergy_Modify_AbleSet:
 4353              	.LFB152:
2307:../user/source/DLT645.c ****     uint16_t i;
 4354              		.loc 1 2307 0
 4355              		.cfi_startproc
 4356              		@ args = 0, pretend = 0, frame = 0
 4357              		@ frame_needed = 0, uses_anonymous_args = 0
 4358              	.LVL546:
 4359 0000 70B5     		push	{r4, r5, r6, lr}
 4360              	.LCFI40:
 4361              		.cfi_def_cfa_offset 16
 4362              		.cfi_offset 4, -16
 4363              		.cfi_offset 5, -12
 4364              		.cfi_offset 6, -8
 4365              		.cfi_offset 14, -4
 4366 0002 0446     		mov	r4, r0
2309:../user/source/DLT645.c ****     {
 4367              		.loc 1 2309 0
 4368 0004 817B     		ldrb	r1, [r0, #14]	@ zero_extendqisi2
 4369 0006 FF29     		cmp	r1, #255
 4370 0008 10D1     		bne	.L273
2311:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZENCHANGESTATE_ADDR, Dayfrozen_Change_State);
 4371              		.loc 1 2311 0
 4372 000a 324D     		ldr	r5, .L285
 4373 000c 2970     		strb	r1, [r5]
2312:../user/source/DLT645.c ****         pucBuffer[8] = (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == Dayfrozen_Change_State
 4374              		.loc 1 2312 0
 4375 000e 324E     		ldr	r6, .L285+4
 4376 0010 3046     		mov	r0, r6
 4377              	.LVL547:
 4378 0012 FFF7FEFF 		bl	Flash_Write_Word
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 138


 4379              	.LVL548:
2313:../user/source/DLT645.c ****                             ? 0x94
 4380              		.loc 1 2313 0
 4381 0016 3046     		mov	r0, r6
 4382 0018 FFF7FEFF 		bl	EEProm_Read
 4383              	.LVL549:
 4384 001c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4385 001e 9842     		cmp	r0, r3
 4386 0020 01D1     		bne	.L282
 4387 0022 9423     		movs	r3, #148
 4388 0024 00E0     		b	.L274
 4389              	.L282:
 4390 0026 D423     		movs	r3, #212
 4391              	.L274:
2313:../user/source/DLT645.c ****                             ? 0x94
 4392              		.loc 1 2313 0 is_stmt 0 discriminator 4
 4393 0028 2372     		strb	r3, [r4, #8]
 4394 002a 1BE0     		b	.L275
 4395              	.LVL550:
 4396              	.L273:
2317:../user/source/DLT645.c ****     {
 4397              		.loc 1 2317 0 is_stmt 1
 4398 002c C1B9     		cbnz	r1, .L276
2320:../user/source/DLT645.c ****         FLASH_ErasePage(FLASH_ENERGY_PAGE);
 4399              		.loc 1 2320 0
 4400 002e FFF7FEFF 		bl	FLASH_Unlock
 4401              	.LVL551:
2321:../user/source/DLT645.c ****         FLASH_Lock();
 4402              		.loc 1 2321 0
 4403 0032 2A48     		ldr	r0, .L285+8
 4404 0034 FFF7FEFF 		bl	FLASH_ErasePage
 4405              	.LVL552:
2322:../user/source/DLT645.c ****         Dayfrozen_Change_State = pucBuffer[14];
 4406              		.loc 1 2322 0
 4407 0038 FFF7FEFF 		bl	FLASH_Lock
 4408              	.LVL553:
2323:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZENCHANGESTATE_ADDR, Dayfrozen_Change_State);
 4409              		.loc 1 2323 0
 4410 003c A17B     		ldrb	r1, [r4, #14]	@ zero_extendqisi2
 4411 003e 254D     		ldr	r5, .L285
 4412 0040 2970     		strb	r1, [r5]
2324:../user/source/DLT645.c ****         pucBuffer[8] = (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == Dayfrozen_Change_State
 4413              		.loc 1 2324 0
 4414 0042 254E     		ldr	r6, .L285+4
 4415 0044 3046     		mov	r0, r6
 4416 0046 FFF7FEFF 		bl	Flash_Write_Word
 4417              	.LVL554:
2325:../user/source/DLT645.c ****                             ? 0x94
 4418              		.loc 1 2325 0
 4419 004a 3046     		mov	r0, r6
 4420 004c FFF7FEFF 		bl	EEProm_Read
 4421              	.LVL555:
 4422 0050 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4423 0052 9842     		cmp	r0, r3
 4424 0054 01D1     		bne	.L283
 4425 0056 9423     		movs	r3, #148
 4426 0058 00E0     		b	.L277
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 139


 4427              	.L283:
 4428 005a D423     		movs	r3, #212
 4429              	.L277:
2325:../user/source/DLT645.c ****                             ? 0x94
 4430              		.loc 1 2325 0 is_stmt 0 discriminator 4
 4431 005c 2372     		strb	r3, [r4, #8]
 4432 005e 01E0     		b	.L275
 4433              	.LVL556:
 4434              	.L276:
2331:../user/source/DLT645.c ****     }
 4435              		.loc 1 2331 0 is_stmt 1
 4436 0060 D423     		movs	r3, #212
 4437 0062 0372     		strb	r3, [r0, #8]
 4438              	.LVL557:
 4439              	.L275:
2333:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 4440              		.loc 1 2333 0
 4441 0064 0023     		movs	r3, #0
 4442 0066 6372     		strb	r3, [r4, #9]
2334:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 4443              		.loc 1 2334 0
 4444 0068 A372     		strb	r3, [r4, #10]
 4445              	.LVL558:
2335:../user/source/DLT645.c ****     {
 4446              		.loc 1 2335 0
 4447 006a 05E0     		b	.L278
 4448              	.LVL559:
 4449              	.L279:
2337:../user/source/DLT645.c ****     }
 4450              		.loc 1 2337 0 discriminator 3
 4451 006c E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 4452 006e A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 4453 0070 0A44     		add	r2, r2, r1
 4454 0072 A272     		strb	r2, [r4, #10]
2335:../user/source/DLT645.c ****     {
 4455              		.loc 1 2335 0 discriminator 3
 4456 0074 0133     		adds	r3, r3, #1
 4457              	.LVL560:
 4458 0076 9BB2     		uxth	r3, r3
 4459              	.LVL561:
 4460              	.L278:
2335:../user/source/DLT645.c ****     {
 4461              		.loc 1 2335 0 is_stmt 0 discriminator 1
 4462 0078 092B     		cmp	r3, #9
 4463 007a F7D9     		bls	.L279
2339:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 4464              		.loc 1 2339 0 is_stmt 1
 4465 007c 1623     		movs	r3, #22
 4466              	.LVL562:
 4467 007e E372     		strb	r3, [r4, #11]
2341:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 4468              		.loc 1 2341 0
 4469 0080 0022     		movs	r2, #0
 4470 0082 174B     		ldr	r3, .L285+12
 4471 0084 1A70     		strb	r2, [r3]
2342:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 4472              		.loc 1 2342 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 140


 4473 0086 174D     		ldr	r5, .L285+16
 4474 0088 2B68     		ldr	r3, [r5]
 4475 008a 0C22     		movs	r2, #12
 4476 008c 9968     		ldr	r1, [r3, #8]
 4477 008e 2046     		mov	r0, r4
 4478 0090 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4479              	.LVL563:
2343:../user/source/DLT645.c ****     {
 4480              		.loc 1 2343 0
 4481 0094 2B68     		ldr	r3, [r5]
 4482 0096 9868     		ldr	r0, [r3, #8]
 4483 0098 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4484              	.LVL564:
 4485 009c 10B9     		cbnz	r0, .L280
2345:../user/source/DLT645.c ****     }
 4486              		.loc 1 2345 0
 4487 009e 1248     		ldr	r0, .L285+20
 4488 00a0 FFF7FEFF 		bl	Uart_DataPut
 4489              	.LVL565:
 4490              	.L280:
2348:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 4491              		.loc 1 2348 0
 4492 00a4 114D     		ldr	r5, .L285+24
 4493 00a6 2B68     		ldr	r3, [r5]
 4494 00a8 0C22     		movs	r2, #12
 4495 00aa 9968     		ldr	r1, [r3, #8]
 4496 00ac 2046     		mov	r0, r4
 4497 00ae FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4498              	.LVL566:
2349:../user/source/DLT645.c ****     {
 4499              		.loc 1 2349 0
 4500 00b2 2B68     		ldr	r3, [r5]
 4501 00b4 9868     		ldr	r0, [r3, #8]
 4502 00b6 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4503              	.LVL567:
 4504 00ba 50B9     		cbnz	r0, .L272
2351:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 4505              		.loc 1 2351 0
 4506 00bc 0C4C     		ldr	r4, .L285+28
 4507              	.LVL568:
 4508 00be 0022     		movs	r2, #0
 4509 00c0 0C49     		ldr	r1, .L285+32
 4510 00c2 2046     		mov	r0, r4
 4511 00c4 FFF7FEFF 		bl	USART_ITConfig
 4512              	.LVL569:
2352:../user/source/DLT645.c ****     }
 4513              		.loc 1 2352 0
 4514 00c8 0122     		movs	r2, #1
 4515 00ca 0B49     		ldr	r1, .L285+36
 4516 00cc 2046     		mov	r0, r4
 4517 00ce FFF7FEFF 		bl	USART_ITConfig
 4518              	.LVL570:
 4519              	.L272:
 4520 00d2 70BD     		pop	{r4, r5, r6, pc}
 4521              	.L286:
 4522              		.align	2
 4523              	.L285:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 141


 4524 00d4 00000000 		.word	.LANCHOR10
 4525 00d8 18EF0108 		.word	134344472
 4526 00dc 00F00108 		.word	134344704
 4527 00e0 00000000 		.word	.LANCHOR0
 4528 00e4 00000000 		.word	.LANCHOR6
 4529 00e8 00480040 		.word	1073760256
 4530 00ec 00000000 		.word	.LANCHOR7
 4531 00f0 00440040 		.word	1073759232
 4532 00f4 05010500 		.word	327941
 4533 00f8 07010700 		.word	459015
 4534              		.cfi_endproc
 4535              	.LFE152:
 4537              		.section	.text.vEnergy_Modify_Reset,"ax",%progbits
 4538              		.align	2
 4539              		.global	vEnergy_Modify_Reset
 4540              		.thumb
 4541              		.thumb_func
 4543              	vEnergy_Modify_Reset:
 4544              	.LFB154:
2423:../user/source/DLT645.c ****     bool cmdValid;
 4545              		.loc 1 2423 0
 4546              		.cfi_startproc
 4547              		@ args = 0, pretend = 0, frame = 0
 4548              		@ frame_needed = 0, uses_anonymous_args = 0
 4549              	.LVL571:
 4550 0000 38B5     		push	{r3, r4, r5, lr}
 4551              	.LCFI41:
 4552              		.cfi_def_cfa_offset 16
 4553              		.cfi_offset 3, -16
 4554              		.cfi_offset 4, -12
 4555              		.cfi_offset 5, -8
 4556              		.cfi_offset 14, -4
 4557 0002 0446     		mov	r4, r0
2427:../user/source/DLT645.c ****     if (cmdValid)
 4558              		.loc 1 2427 0
 4559 0004 837B     		ldrb	r3, [r0, #14]	@ zero_extendqisi2
 4560              	.LVL572:
2428:../user/source/DLT645.c ****     {
 4561              		.loc 1 2428 0
 4562 0006 CBB9     		cbnz	r3, .L288
2431:../user/source/DLT645.c ****         Dayfrozen_Change_State = 0xff;
 4563              		.loc 1 2431 0
 4564 0008 294D     		ldr	r5, .L296
 4565 000a FF21     		movs	r1, #255
 4566 000c 2846     		mov	r0, r5
 4567              	.LVL573:
 4568 000e FFF7FEFF 		bl	Flash_Write_Word
 4569              	.LVL574:
2432:../user/source/DLT645.c ****         /*ÈÕ¶³½áĞŞ¸Ä±ÈÀıÉèÖÃÎª90*/
 4570              		.loc 1 2432 0
 4571 0012 FF22     		movs	r2, #255
 4572 0014 274B     		ldr	r3, .L296+4
 4573 0016 1A70     		strb	r2, [r3]
2437:../user/source/DLT645.c ****         FLASH_ErasePage(FLASH_ENERGY_PAGE);
 4574              		.loc 1 2437 0
 4575 0018 FFF7FEFF 		bl	FLASH_Unlock
 4576              	.LVL575:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 142


2438:../user/source/DLT645.c ****         FLASH_Lock();
 4577              		.loc 1 2438 0
 4578 001c 2648     		ldr	r0, .L296+8
 4579 001e FFF7FEFF 		bl	FLASH_ErasePage
 4580              	.LVL576:
2439:../user/source/DLT645.c ****         if ( //(EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR) == 90) &&
 4581              		.loc 1 2439 0
 4582 0022 FFF7FEFF 		bl	FLASH_Lock
 4583              	.LVL577:
2441:../user/source/DLT645.c ****         {
 4584              		.loc 1 2441 0
 4585 0026 2846     		mov	r0, r5
 4586 0028 FFF7FEFF 		bl	EEProm_Read
 4587              	.LVL578:
2440:../user/source/DLT645.c ****             (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == 0xff))
 4588              		.loc 1 2440 0
 4589 002c FF28     		cmp	r0, #255
 4590 002e 02D1     		bne	.L289
2443:../user/source/DLT645.c ****         }
 4591              		.loc 1 2443 0
 4592 0030 9423     		movs	r3, #148
 4593 0032 2372     		strb	r3, [r4, #8]
 4594 0034 04E0     		b	.L290
 4595              	.L289:
2447:../user/source/DLT645.c ****         }
 4596              		.loc 1 2447 0
 4597 0036 D423     		movs	r3, #212
 4598 0038 2372     		strb	r3, [r4, #8]
 4599 003a 01E0     		b	.L290
 4600              	.LVL579:
 4601              	.L288:
2452:../user/source/DLT645.c ****     }
 4602              		.loc 1 2452 0
 4603 003c D423     		movs	r3, #212
 4604              	.LVL580:
 4605 003e 0372     		strb	r3, [r0, #8]
 4606              	.LVL581:
 4607              	.L290:
2454:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 4608              		.loc 1 2454 0
 4609 0040 0023     		movs	r3, #0
 4610 0042 6372     		strb	r3, [r4, #9]
2455:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 4611              		.loc 1 2455 0
 4612 0044 A372     		strb	r3, [r4, #10]
 4613              	.LVL582:
2456:../user/source/DLT645.c ****     {
 4614              		.loc 1 2456 0
 4615 0046 05E0     		b	.L291
 4616              	.LVL583:
 4617              	.L292:
2458:../user/source/DLT645.c ****     }
 4618              		.loc 1 2458 0 discriminator 3
 4619 0048 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 4620 004a A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 4621 004c 0A44     		add	r2, r2, r1
 4622 004e A272     		strb	r2, [r4, #10]
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 143


2456:../user/source/DLT645.c ****     {
 4623              		.loc 1 2456 0 discriminator 3
 4624 0050 0133     		adds	r3, r3, #1
 4625              	.LVL584:
 4626 0052 9BB2     		uxth	r3, r3
 4627              	.LVL585:
 4628              	.L291:
2456:../user/source/DLT645.c ****     {
 4629              		.loc 1 2456 0 is_stmt 0 discriminator 1
 4630 0054 092B     		cmp	r3, #9
 4631 0056 F7D9     		bls	.L292
2460:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 4632              		.loc 1 2460 0 is_stmt 1
 4633 0058 1623     		movs	r3, #22
 4634              	.LVL586:
 4635 005a E372     		strb	r3, [r4, #11]
2462:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 4636              		.loc 1 2462 0
 4637 005c 0022     		movs	r2, #0
 4638 005e 174B     		ldr	r3, .L296+12
 4639 0060 1A70     		strb	r2, [r3]
2463:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 4640              		.loc 1 2463 0
 4641 0062 174D     		ldr	r5, .L296+16
 4642 0064 2B68     		ldr	r3, [r5]
 4643 0066 0C22     		movs	r2, #12
 4644 0068 9968     		ldr	r1, [r3, #8]
 4645 006a 2046     		mov	r0, r4
 4646 006c FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4647              	.LVL587:
2464:../user/source/DLT645.c ****     {
 4648              		.loc 1 2464 0
 4649 0070 2B68     		ldr	r3, [r5]
 4650 0072 9868     		ldr	r0, [r3, #8]
 4651 0074 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4652              	.LVL588:
 4653 0078 10B9     		cbnz	r0, .L293
2466:../user/source/DLT645.c ****     }
 4654              		.loc 1 2466 0
 4655 007a 1248     		ldr	r0, .L296+20
 4656 007c FFF7FEFF 		bl	Uart_DataPut
 4657              	.LVL589:
 4658              	.L293:
2469:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 4659              		.loc 1 2469 0
 4660 0080 114D     		ldr	r5, .L296+24
 4661 0082 2B68     		ldr	r3, [r5]
 4662 0084 0C22     		movs	r2, #12
 4663 0086 9968     		ldr	r1, [r3, #8]
 4664 0088 2046     		mov	r0, r4
 4665 008a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4666              	.LVL590:
2470:../user/source/DLT645.c ****     {
 4667              		.loc 1 2470 0
 4668 008e 2B68     		ldr	r3, [r5]
 4669 0090 9868     		ldr	r0, [r3, #8]
 4670 0092 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 144


 4671              	.LVL591:
 4672 0096 50B9     		cbnz	r0, .L287
2472:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 4673              		.loc 1 2472 0
 4674 0098 0C4C     		ldr	r4, .L296+28
 4675              	.LVL592:
 4676 009a 0022     		movs	r2, #0
 4677 009c 0C49     		ldr	r1, .L296+32
 4678 009e 2046     		mov	r0, r4
 4679 00a0 FFF7FEFF 		bl	USART_ITConfig
 4680              	.LVL593:
2473:../user/source/DLT645.c ****     }
 4681              		.loc 1 2473 0
 4682 00a4 0122     		movs	r2, #1
 4683 00a6 0B49     		ldr	r1, .L296+36
 4684 00a8 2046     		mov	r0, r4
 4685 00aa FFF7FEFF 		bl	USART_ITConfig
 4686              	.LVL594:
 4687              	.L287:
 4688 00ae 38BD     		pop	{r3, r4, r5, pc}
 4689              	.L297:
 4690              		.align	2
 4691              	.L296:
 4692 00b0 18EF0108 		.word	134344472
 4693 00b4 00000000 		.word	.LANCHOR10
 4694 00b8 00F00108 		.word	134344704
 4695 00bc 00000000 		.word	.LANCHOR0
 4696 00c0 00000000 		.word	.LANCHOR6
 4697 00c4 00480040 		.word	1073760256
 4698 00c8 00000000 		.word	.LANCHOR7
 4699 00cc 00440040 		.word	1073759232
 4700 00d0 05010500 		.word	327941
 4701 00d4 07010700 		.word	459015
 4702              		.cfi_endproc
 4703              	.LFE154:
 4705              		.section	.text.blRecvFrame,"ax",%progbits
 4706              		.align	2
 4707              		.global	blRecvFrame
 4708              		.thumb
 4709              		.thumb_func
 4711              	blRecvFrame:
 4712              	.LFB111:
 167:../user/source/DLT645.c ****     /*ÊÕÖ¡×´Ì¬*/
 4713              		.loc 1 167 0
 4714              		.cfi_startproc
 4715              		@ args = 0, pretend = 0, frame = 0
 4716              		@ frame_needed = 0, uses_anonymous_args = 0
 4717              	.LVL595:
 4718 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4719              	.LCFI42:
 4720              		.cfi_def_cfa_offset 24
 4721              		.cfi_offset 3, -24
 4722              		.cfi_offset 4, -20
 4723              		.cfi_offset 5, -16
 4724              		.cfi_offset 6, -12
 4725              		.cfi_offset 7, -8
 4726              		.cfi_offset 14, -4
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 145


 4727 0002 0646     		mov	r6, r0
 4728 0004 0D46     		mov	r5, r1
 169:../user/source/DLT645.c ****     {
 4729              		.loc 1 169 0
 4730 0006 3A4B     		ldr	r3, .L312
 4731 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4732 000a 012B     		cmp	r3, #1
 4733 000c 11D0     		beq	.L300
 4734 000e 13B1     		cbz	r3, .L301
 4735 0010 022B     		cmp	r3, #2
 4736 0012 41D0     		beq	.L302
 4737 0014 65E0     		b	.L310
 4738              	.L301:
 175:../user/source/DLT645.c ****         {
 4739              		.loc 1 175 0
 4740 0016 0122     		movs	r2, #1
 4741 0018 FFF7FEFF 		bl	ucDrv_Buf_GetBytes
 4742              	.LVL596:
 4743 001c 0446     		mov	r4, r0
 4744 001e 0028     		cmp	r0, #0
 4745 0020 64D0     		beq	.L299
 183:../user/source/DLT645.c ****             {
 4746              		.loc 1 183 0
 4747 0022 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4748 0024 682B     		cmp	r3, #104
 4749 0026 5ED1     		bne	.L308
 190:../user/source/DLT645.c ****                 blWordsCounterStatus = true;
 4750              		.loc 1 190 0
 4751 0028 0123     		movs	r3, #1
 4752 002a 314A     		ldr	r2, .L312
 4753 002c 1370     		strb	r3, [r2]
 191:../user/source/DLT645.c ****             }
 4754              		.loc 1 191 0
 4755 002e 314A     		ldr	r2, .L312+4
 4756 0030 1370     		strb	r3, [r2]
 4757              	.L300:
 198:../user/source/DLT645.c ****         {
 4758              		.loc 1 198 0
 4759 0032 0922     		movs	r2, #9
 4760 0034 691C     		adds	r1, r5, #1
 4761 0036 3046     		mov	r0, r6
 4762 0038 FFF7FEFF 		bl	ucDrv_Buf_GetBytes
 4763              	.LVL597:
 4764 003c 0746     		mov	r7, r0
 4765 003e 80B9     		cbnz	r0, .L303
 201:../user/source/DLT645.c ****             {
 4766              		.loc 1 201 0
 4767 0040 1421     		movs	r1, #20
 4768 0042 2D4B     		ldr	r3, .L312+8
 4769 0044 1888     		ldrh	r0, [r3]
 4770 0046 FFF7FEFF 		bl	blTime2_Update
 4771              	.LVL598:
 4772 004a 0446     		mov	r4, r0
 4773 004c 0028     		cmp	r0, #0
 4774 004e 4DD0     		beq	.L299
 204:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 4775              		.loc 1 204 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 146


 4776 0050 0023     		movs	r3, #0
 4777 0052 274A     		ldr	r2, .L312
 4778 0054 1370     		strb	r3, [r2]
 205:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 4779              		.loc 1 205 0
 4780 0056 274A     		ldr	r2, .L312+4
 4781 0058 1370     		strb	r3, [r2]
 206:../user/source/DLT645.c ****             }
 4782              		.loc 1 206 0
 4783 005a 274A     		ldr	r2, .L312+8
 4784 005c 1380     		strh	r3, [r2]	@ movhi
 266:../user/source/DLT645.c **** }
 4785              		.loc 1 266 0
 4786 005e 3C46     		mov	r4, r7
 4787 0060 44E0     		b	.L299
 4788              	.L303:
 212:../user/source/DLT645.c ****             {
 4789              		.loc 1 212 0
 4790 0062 EB79     		ldrb	r3, [r5, #7]	@ zero_extendqisi2
 4791 0064 682B     		cmp	r3, #104
 4792 0066 04D1     		bne	.L304
 212:../user/source/DLT645.c ****             {
 4793              		.loc 1 212 0 is_stmt 0 discriminator 1
 4794 0068 6B7A     		ldrb	r3, [r5, #9]	@ zero_extendqisi2
 4795 006a 03F10C02 		add	r2, r3, #12
 4796 006e FE2A     		cmp	r2, #254
 4797 0070 07DD     		ble	.L305
 4798              	.L304:
 214:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 4799              		.loc 1 214 0 is_stmt 1
 4800 0072 0024     		movs	r4, #0
 4801 0074 1E4B     		ldr	r3, .L312
 4802 0076 1C70     		strb	r4, [r3]
 215:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 4803              		.loc 1 215 0
 4804 0078 1E4B     		ldr	r3, .L312+4
 4805 007a 1C70     		strb	r4, [r3]
 216:../user/source/DLT645.c ****                 break;
 4806              		.loc 1 216 0
 4807 007c 1E4B     		ldr	r3, .L312+8
 4808 007e 1C80     		strh	r4, [r3]	@ movhi
 217:../user/source/DLT645.c ****             }
 4809              		.loc 1 217 0
 4810 0080 34E0     		b	.L299
 4811              	.L305:
 221:../user/source/DLT645.c ****                 ucRcvStatus = RCV_DATA2;                   //Ö¸ÏòÏÂÒ»²¿·Ö
 4812              		.loc 1 221 0
 4813 0082 1E4A     		ldr	r2, .L312+12
 4814 0084 1370     		strb	r3, [r2]
 222:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 4815              		.loc 1 222 0
 4816 0086 0222     		movs	r2, #2
 4817 0088 194B     		ldr	r3, .L312
 4818 008a 1A70     		strb	r2, [r3]
 224:../user/source/DLT645.c ****                 blWordsCounterStatus = true;
 4819              		.loc 1 224 0
 4820 008c 1A4B     		ldr	r3, .L312+8
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 147


 4821 008e 0022     		movs	r2, #0
 4822 0090 1A80     		strh	r2, [r3]	@ movhi
 225:../user/source/DLT645.c ****             }
 4823              		.loc 1 225 0
 4824 0092 0122     		movs	r2, #1
 4825 0094 174B     		ldr	r3, .L312+4
 4826 0096 1A70     		strb	r2, [r3]
 4827              	.L302:
 231:../user/source/DLT645.c ****         {                                                                    //¶ÁºóĞø×Ö½ÚÊ§°Ü£¬Ìø³ö
 4828              		.loc 1 231 0
 4829 0098 184B     		ldr	r3, .L312+12
 4830 009a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4831 009c 0232     		adds	r2, r2, #2
 4832 009e 05F10A01 		add	r1, r5, #10
 4833 00a2 3046     		mov	r0, r6
 4834 00a4 FFF7FEFF 		bl	ucDrv_Buf_GetBytes
 4835              	.LVL599:
 4836 00a8 0446     		mov	r4, r0
 4837 00aa 68B9     		cbnz	r0, .L306
 233:../user/source/DLT645.c ****             {                                                                //Èç¹û³¬Ê±£¬ÔòÖØĞÂÕÒ68
 4838              		.loc 1 233 0
 4839 00ac 1421     		movs	r1, #20
 4840 00ae 124B     		ldr	r3, .L312+8
 4841 00b0 1888     		ldrh	r0, [r3]
 4842 00b2 FFF7FEFF 		bl	blTime2_Update
 4843              	.LVL600:
 4844 00b6 C0B1     		cbz	r0, .L309
 235:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 4845              		.loc 1 235 0
 4846 00b8 0023     		movs	r3, #0
 4847 00ba 0D4A     		ldr	r2, .L312
 4848 00bc 1370     		strb	r3, [r2]
 236:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 4849              		.loc 1 236 0
 4850 00be 0D4A     		ldr	r2, .L312+4
 4851 00c0 1370     		strb	r3, [r2]
 237:../user/source/DLT645.c ****             }
 4852              		.loc 1 237 0
 4853 00c2 0D4A     		ldr	r2, .L312+8
 4854 00c4 1380     		strh	r3, [r2]	@ movhi
 4855 00c6 11E0     		b	.L299
 4856              	.L306:
 243:../user/source/DLT645.c ****             blWordsCounterStatus = false;
 4857              		.loc 1 243 0
 4858 00c8 0023     		movs	r3, #0
 4859 00ca 094A     		ldr	r2, .L312
 4860 00cc 1370     		strb	r3, [r2]
 244:../user/source/DLT645.c ****             uwTime2WordsCounter = 0;
 4861              		.loc 1 244 0
 4862 00ce 094A     		ldr	r2, .L312+4
 4863 00d0 1370     		strb	r3, [r2]
 245:../user/source/DLT645.c ****             if (dwCheckFrame(ucdata_buf) != OK_1)
 4864              		.loc 1 245 0
 4865 00d2 094A     		ldr	r2, .L312+8
 4866 00d4 1380     		strh	r3, [r2]	@ movhi
 246:../user/source/DLT645.c ****             {
 4867              		.loc 1 246 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 148


 4868 00d6 2846     		mov	r0, r5
 4869 00d8 FFF7FEFF 		bl	dwCheckFrame
 4870              	.LVL601:
 4871 00dc 30B1     		cbz	r0, .L299
 252:../user/source/DLT645.c ****             }
 4872              		.loc 1 252 0
 4873 00de 0024     		movs	r4, #0
 4874 00e0 04E0     		b	.L299
 4875              	.LVL602:
 4876              	.L310:
 266:../user/source/DLT645.c **** }
 4877              		.loc 1 266 0
 4878 00e2 0024     		movs	r4, #0
 4879 00e4 02E0     		b	.L299
 4880              	.LVL603:
 4881              	.L308:
 4882 00e6 0024     		movs	r4, #0
 4883 00e8 00E0     		b	.L299
 4884              	.L309:
 4885 00ea 0446     		mov	r4, r0
 4886              	.L299:
 267:../user/source/DLT645.c **** 
 4887              		.loc 1 267 0
 4888 00ec 2046     		mov	r0, r4
 4889 00ee F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4890              	.LVL604:
 4891              	.L313:
 4892              		.align	2
 4893              	.L312:
 4894 00f0 00000000 		.word	.LANCHOR11
 4895 00f4 00000000 		.word	blWordsCounterStatus
 4896 00f8 00000000 		.word	uwTime2WordsCounter
 4897 00fc 00000000 		.word	.LANCHOR0
 4898              		.cfi_endproc
 4899              	.LFE111:
 4901              		.section	.text.vDBDataID_Handle,"ax",%progbits
 4902              		.align	2
 4903              		.global	vDBDataID_Handle
 4904              		.thumb
 4905              		.thumb_func
 4907              	vDBDataID_Handle:
 4908              	.LFB113:
 307:../user/source/DLT645.c ****     uint8_t i;
 4909              		.loc 1 307 0
 4910              		.cfi_startproc
 4911              		@ args = 0, pretend = 0, frame = 0
 4912              		@ frame_needed = 0, uses_anonymous_args = 0
 4913              	.LVL605:
 4914 0000 10B5     		push	{r4, lr}
 4915              	.LCFI43:
 4916              		.cfi_def_cfa_offset 8
 4917              		.cfi_offset 4, -8
 4918              		.cfi_offset 14, -4
 4919              	.LVL606:
 311:../user/source/DLT645.c ****     {
 4920              		.loc 1 311 0
 4921 0002 0023     		movs	r3, #0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 149


 4922 0004 1CE0     		b	.L315
 4923              	.LVL607:
 4924              	.L318:
 313:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 4925              		.loc 1 313 0
 4926 0006 214A     		ldr	r2, .L321
 4927 0008 12F83310 		ldrb	r1, [r2, r3, lsl #3]	@ zero_extendqisi2
 4928 000c 827A     		ldrb	r2, [r0, #10]	@ zero_extendqisi2
 4929 000e 9142     		cmp	r1, r2
 4930 0010 14D1     		bne	.L316
 314:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 4931              		.loc 1 314 0 discriminator 1
 4932 0012 1E4A     		ldr	r2, .L321
 4933 0014 02EBC302 		add	r2, r2, r3, lsl #3
 4934 0018 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 4935 001a C27A     		ldrb	r2, [r0, #11]	@ zero_extendqisi2
 313:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 4936              		.loc 1 313 0 discriminator 1
 4937 001c 9142     		cmp	r1, r2
 4938 001e 0DD1     		bne	.L316
 315:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 4939              		.loc 1 315 0
 4940 0020 1A4A     		ldr	r2, .L321
 4941 0022 02EBC302 		add	r2, r2, r3, lsl #3
 4942 0026 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 4943 0028 027B     		ldrb	r2, [r0, #12]	@ zero_extendqisi2
 314:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 4944              		.loc 1 314 0
 4945 002a 9142     		cmp	r1, r2
 4946 002c 06D1     		bne	.L316
 316:../user/source/DLT645.c ****             break;
 4947              		.loc 1 316 0
 4948 002e 174A     		ldr	r2, .L321
 4949 0030 02EBC304 		add	r4, r2, r3, lsl #3
 4950 0034 E178     		ldrb	r1, [r4, #3]	@ zero_extendqisi2
 4951 0036 427B     		ldrb	r2, [r0, #13]	@ zero_extendqisi2
 315:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 4952              		.loc 1 315 0
 4953 0038 9142     		cmp	r1, r2
 4954 003a 03D0     		beq	.L317
 4955              	.L316:
 311:../user/source/DLT645.c ****     {
 4956              		.loc 1 311 0 discriminator 2
 4957 003c 0133     		adds	r3, r3, #1
 4958              	.LVL608:
 4959 003e DBB2     		uxtb	r3, r3
 4960              	.LVL609:
 4961              	.L315:
 311:../user/source/DLT645.c ****     {
 4962              		.loc 1 311 0 is_stmt 0 discriminator 1
 4963 0040 322B     		cmp	r3, #50
 4964 0042 E0D9     		bls	.L318
 4965              	.L317:
 319:../user/source/DLT645.c ****     {
 4966              		.loc 1 319 0 is_stmt 1
 4967 0044 322B     		cmp	r3, #50
 4968 0046 1FD8     		bhi	.L314
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 150


 322:../user/source/DLT645.c ****             return;
 4969              		.loc 1 322 0
 4970 0048 104A     		ldr	r2, .L321
 4971 004a 02EBC303 		add	r3, r2, r3, lsl #3
 4972              	.LVL610:
 4973 004e 5B68     		ldr	r3, [r3, #4]
 4974 0050 0F4A     		ldr	r2, .L321+4
 4975 0052 9342     		cmp	r3, r2
 4976 0054 18D0     		beq	.L314
 326:../user/source/DLT645.c ****             return;
 4977              		.loc 1 326 0
 4978 0056 0F4A     		ldr	r2, .L321+8
 4979 0058 9342     		cmp	r3, r2
 4980 005a 15D0     		beq	.L314
 330:../user/source/DLT645.c ****             return;
 4981              		.loc 1 330 0
 4982 005c 0E4A     		ldr	r2, .L321+12
 4983 005e 9342     		cmp	r3, r2
 4984 0060 12D0     		beq	.L314
 334:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vDayfrozen_Modifier)) ||
 4985              		.loc 1 334 0
 4986 0062 0E4A     		ldr	r2, .L321+16
 4987 0064 9342     		cmp	r3, r2
 4988 0066 0FD0     		beq	.L314
 334:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vDayfrozen_Modifier)) ||
 4989              		.loc 1 334 0 is_stmt 0 discriminator 1
 4990 0068 0D4A     		ldr	r2, .L321+20
 4991 006a 9342     		cmp	r3, r2
 4992 006c 0CD0     		beq	.L314
 335:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vAccountEnergy_Modify)) ||
 4993              		.loc 1 335 0 is_stmt 1
 4994 006e 0D4A     		ldr	r2, .L321+24
 4995 0070 9342     		cmp	r3, r2
 4996 0072 09D0     		beq	.L314
 336:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_AbleSet)) ||
 4997              		.loc 1 336 0
 4998 0074 0C4A     		ldr	r2, .L321+28
 4999 0076 9342     		cmp	r3, r2
 5000 0078 06D0     		beq	.L314
 337:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_RaitoSet)) ||
 5001              		.loc 1 337 0
 5002 007a 0C4A     		ldr	r2, .L321+32
 5003 007c 9342     		cmp	r3, r2
 5004 007e 03D0     		beq	.L314
 338:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_Reset)))
 5005              		.loc 1 338 0
 5006 0080 0B4A     		ldr	r2, .L321+36
 5007 0082 9342     		cmp	r3, r2
 5008 0084 00D0     		beq	.L314
 342:../user/source/DLT645.c ****     }
 5009              		.loc 1 342 0
 5010 0086 9847     		blx	r3
 5011              	.LVL611:
 5012              	.L314:
 5013 0088 10BD     		pop	{r4, pc}
 5014              	.L322:
 5015 008a 00BF     		.align	2
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 151


 5016              	.L321:
 5017 008c 00000000 		.word	.LANCHOR12
 5018 0090 00000000 		.word	vCurrent_Modify
 5019 0094 00000000 		.word	vCurrent_Limit_Modify
 5020 0098 00000000 		.word	Estatus_Modify_CurrentEvent
 5021 009c 00000000 		.word	vNowEnergy_Modifier
 5022 00a0 00000000 		.word	vDayfrozen_Modifier
 5023 00a4 00000000 		.word	vAccountEnergy_Modify
 5024 00a8 00000000 		.word	vEnergy_Modify_AbleSet
 5025 00ac 00000000 		.word	vEnergy_Modify_RaitoSet
 5026 00b0 00000000 		.word	vEnergy_Modify_Reset
 5027              		.cfi_endproc
 5028              	.LFE113:
 5030              		.section	.text.vINFRDataID_Handle,"ax",%progbits
 5031              		.align	2
 5032              		.global	vINFRDataID_Handle
 5033              		.thumb
 5034              		.thumb_func
 5036              	vINFRDataID_Handle:
 5037              	.LFB114:
 356:../user/source/DLT645.c ****     uint8_t i;
 5038              		.loc 1 356 0
 5039              		.cfi_startproc
 5040              		@ args = 0, pretend = 0, frame = 0
 5041              		@ frame_needed = 0, uses_anonymous_args = 0
 5042              	.LVL612:
 5043 0000 10B5     		push	{r4, lr}
 5044              	.LCFI44:
 5045              		.cfi_def_cfa_offset 8
 5046              		.cfi_offset 4, -8
 5047              		.cfi_offset 14, -4
 5048              	.LVL613:
 360:../user/source/DLT645.c ****     {
 5049              		.loc 1 360 0
 5050 0002 0023     		movs	r3, #0
 5051 0004 1CE0     		b	.L324
 5052              	.LVL614:
 5053              	.L327:
 362:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 5054              		.loc 1 362 0
 5055 0006 1B4A     		ldr	r2, .L330
 5056 0008 12F83310 		ldrb	r1, [r2, r3, lsl #3]	@ zero_extendqisi2
 5057 000c 827A     		ldrb	r2, [r0, #10]	@ zero_extendqisi2
 5058 000e 9142     		cmp	r1, r2
 5059 0010 14D1     		bne	.L325
 363:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 5060              		.loc 1 363 0 discriminator 1
 5061 0012 184A     		ldr	r2, .L330
 5062 0014 02EBC302 		add	r2, r2, r3, lsl #3
 5063 0018 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 5064 001a C27A     		ldrb	r2, [r0, #11]	@ zero_extendqisi2
 362:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 5065              		.loc 1 362 0 discriminator 1
 5066 001c 9142     		cmp	r1, r2
 5067 001e 0DD1     		bne	.L325
 364:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 5068              		.loc 1 364 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 152


 5069 0020 144A     		ldr	r2, .L330
 5070 0022 02EBC302 		add	r2, r2, r3, lsl #3
 5071 0026 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 5072 0028 027B     		ldrb	r2, [r0, #12]	@ zero_extendqisi2
 363:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 5073              		.loc 1 363 0
 5074 002a 9142     		cmp	r1, r2
 5075 002c 06D1     		bne	.L325
 365:../user/source/DLT645.c ****             break;
 5076              		.loc 1 365 0
 5077 002e 114A     		ldr	r2, .L330
 5078 0030 02EBC304 		add	r4, r2, r3, lsl #3
 5079 0034 E178     		ldrb	r1, [r4, #3]	@ zero_extendqisi2
 5080 0036 427B     		ldrb	r2, [r0, #13]	@ zero_extendqisi2
 364:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 5081              		.loc 1 364 0
 5082 0038 9142     		cmp	r1, r2
 5083 003a 03D0     		beq	.L326
 5084              	.L325:
 360:../user/source/DLT645.c ****     {
 5085              		.loc 1 360 0 discriminator 2
 5086 003c 0133     		adds	r3, r3, #1
 5087              	.LVL615:
 5088 003e DBB2     		uxtb	r3, r3
 5089              	.LVL616:
 5090              	.L324:
 360:../user/source/DLT645.c ****     {
 5091              		.loc 1 360 0 is_stmt 0 discriminator 1
 5092 0040 072B     		cmp	r3, #7
 5093 0042 E0D9     		bls	.L327
 5094              	.L326:
 368:../user/source/DLT645.c ****     {
 5095              		.loc 1 368 0 is_stmt 1
 5096 0044 072B     		cmp	r3, #7
 5097 0046 13D8     		bhi	.L323
 371:../user/source/DLT645.c ****             ((INFRDataID_Handle_List[i].Handle == vEnergy_Modify_RaitoSet)) ||
 5098              		.loc 1 371 0
 5099 0048 0A4A     		ldr	r2, .L330
 5100 004a 02EBC303 		add	r3, r2, r3, lsl #3
 5101              	.LVL617:
 5102 004e 5B68     		ldr	r3, [r3, #4]
 5103 0050 094A     		ldr	r2, .L330+4
 5104 0052 9342     		cmp	r3, r2
 5105 0054 0CD0     		beq	.L323
 371:../user/source/DLT645.c ****             ((INFRDataID_Handle_List[i].Handle == vEnergy_Modify_RaitoSet)) ||
 5106              		.loc 1 371 0 is_stmt 0 discriminator 1
 5107 0056 094A     		ldr	r2, .L330+8
 5108 0058 9342     		cmp	r3, r2
 5109 005a 09D0     		beq	.L323
 372:../user/source/DLT645.c ****             ((INFRDataID_Handle_List[i].Handle == vEnergy_Modify_Reset)) ||
 5110              		.loc 1 372 0 is_stmt 1
 5111 005c 084A     		ldr	r2, .L330+12
 5112 005e 9342     		cmp	r3, r2
 5113 0060 06D0     		beq	.L323
 373:../user/source/DLT645.c ****             ((INFRDataID_Handle_List[i].Handle == vEnergy_Modify_ReadSet)) ||
 5114              		.loc 1 373 0
 5115 0062 084A     		ldr	r2, .L330+16
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 153


 5116 0064 9342     		cmp	r3, r2
 5117 0066 03D0     		beq	.L323
 374:../user/source/DLT645.c ****             ((INFRDataID_Handle_List[i].Handle == vEnergy_Modify_ReadValue)))
 5118              		.loc 1 374 0
 5119 0068 074A     		ldr	r2, .L330+20
 5120 006a 9342     		cmp	r3, r2
 5121 006c 00D0     		beq	.L323
 378:../user/source/DLT645.c ****     }
 5122              		.loc 1 378 0
 5123 006e 9847     		blx	r3
 5124              	.LVL618:
 5125              	.L323:
 5126 0070 10BD     		pop	{r4, pc}
 5127              	.L331:
 5128 0072 00BF     		.align	2
 5129              	.L330:
 5130 0074 00000000 		.word	.LANCHOR13
 5131 0078 00000000 		.word	vEnergy_Modify_AbleSet
 5132 007c 00000000 		.word	vEnergy_Modify_RaitoSet
 5133 0080 00000000 		.word	vEnergy_Modify_Reset
 5134 0084 00000000 		.word	vEnergy_Modify_ReadSet
 5135 0088 00000000 		.word	vEnergy_Modify_ReadValue
 5136              		.cfi_endproc
 5137              	.LFE114:
 5139              		.section	.text.blVoltage_Create,"ax",%progbits
 5140              		.align	2
 5141              		.global	blVoltage_Create
 5142              		.thumb
 5143              		.thumb_func
 5145              	blVoltage_Create:
 5146              	.LFB121:
 696:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
 5147              		.loc 1 696 0
 5148              		.cfi_startproc
 5149              		@ args = 0, pretend = 0, frame = 0
 5150              		@ frame_needed = 0, uses_anonymous_args = 0
 5151              	.LVL619:
 5152 0000 70B5     		push	{r4, r5, r6, lr}
 5153              	.LCFI45:
 5154              		.cfi_def_cfa_offset 16
 5155              		.cfi_offset 4, -16
 5156              		.cfi_offset 5, -12
 5157              		.cfi_offset 6, -8
 5158              		.cfi_offset 14, -4
 5159 0002 0446     		mov	r4, r0
 5160              	.LVL620:
 699:../user/source/DLT645.c ****     {
 5161              		.loc 1 699 0
 5162 0004 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 5163 0006 323B     		subs	r3, r3, #50
 5164 0008 042B     		cmp	r3, #4
 5165 000a 00F2E580 		bhi	.L353
 5166 000e DFE813F0 		tbh	[pc, r3, lsl #1]
 5167              	.L335:
 5168 0012 0500     		.2byte	(.L334-.L335)/2
 5169 0014 E300     		.2byte	(.L353-.L335)/2
 5170 0016 5F00     		.2byte	(.L336-.L335)/2
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 154


 5171 0018 8B00     		.2byte	(.L337-.L335)/2
 5172 001a B700     		.2byte	(.L338-.L335)/2
 5173              		.p2align 1
 5174              	.L334:
 703:../user/source/DLT645.c ****         pucBuffer[9] = 0x0A;
 5175              		.loc 1 703 0
 5176 001c 9123     		movs	r3, #145
 5177 001e 0372     		strb	r3, [r0, #8]
 704:../user/source/DLT645.c ****         //Ê¹ÓÃÉÏ´ÎĞŞ¸ÄµÄºÏ·¨µçÑ¹Öµ»ò1000 2017-10-25:
 5178              		.loc 1 704 0
 5179 0020 0A23     		movs	r3, #10
 5180 0022 4372     		strb	r3, [r0, #9]
 706:../user/source/DLT645.c ****                          ? A_Voltage
 5181              		.loc 1 706 0
 5182 0024 6D4B     		ldr	r3, .L361
 5183 0026 1D68     		ldr	r5, [r3]
 5184 0028 6D4B     		ldr	r3, .L361+4
 5185 002a 1E68     		ldr	r6, [r3]
 708:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 5186              		.loc 1 708 0
 5187 002c B542     		cmp	r5, r6
 5188 002e 06DC     		bgt	.L354
 706:../user/source/DLT645.c ****                          ? A_Voltage
 5189              		.loc 1 706 0
 5190 0030 6C4B     		ldr	r3, .L361+8
 5191 0032 1B68     		ldr	r3, [r3]
 5192 0034 9D42     		cmp	r5, r3
 5193 0036 04DA     		bge	.L339
 708:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 5194              		.loc 1 708 0
 5195 0038 40F69805 		movw	r5, #2200
 5196 003c 01E0     		b	.L339
 5197              	.L354:
 5198 003e 40F69805 		movw	r5, #2200
 5199              	.L339:
 706:../user/source/DLT645.c ****                          ? A_Voltage
 5200              		.loc 1 706 0
 5201 0042 664B     		ldr	r3, .L361
 5202 0044 1D60     		str	r5, [r3]
 709:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(A_Voltage);
 5203              		.loc 1 709 0
 5204 0046 2846     		mov	r0, r5
 5205              	.LVL621:
 5206 0048 FFF7FEFF 		bl	GetLowByte
 5207              	.LVL622:
 5208 004c A073     		strb	r0, [r4, #14]
 710:../user/source/DLT645.c ****         B_Voltage = ((B_Voltage <= Voltage_MAX) && (B_Voltage >= Voltage_MIN)
 5209              		.loc 1 710 0
 5210 004e 2846     		mov	r0, r5
 5211 0050 FFF7FEFF 		bl	GetHighByte
 5212              	.LVL623:
 5213 0054 E073     		strb	r0, [r4, #15]
 711:../user/source/DLT645.c ****                          ? B_Voltage
 5214              		.loc 1 711 0
 5215 0056 644B     		ldr	r3, .L361+12
 5216 0058 1D68     		ldr	r5, [r3]
 713:../user/source/DLT645.c ****         pucBuffer[16] = GetLowByte(B_Voltage);
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 155


 5217              		.loc 1 713 0
 5218 005a AE42     		cmp	r6, r5
 5219 005c 06DB     		blt	.L355
 711:../user/source/DLT645.c ****                          ? B_Voltage
 5220              		.loc 1 711 0
 5221 005e 614B     		ldr	r3, .L361+8
 5222 0060 1B68     		ldr	r3, [r3]
 5223 0062 9D42     		cmp	r5, r3
 5224 0064 04DA     		bge	.L340
 713:../user/source/DLT645.c ****         pucBuffer[16] = GetLowByte(B_Voltage);
 5225              		.loc 1 713 0
 5226 0066 40F69805 		movw	r5, #2200
 5227 006a 01E0     		b	.L340
 5228              	.L355:
 5229 006c 40F69805 		movw	r5, #2200
 5230              	.L340:
 711:../user/source/DLT645.c ****                          ? B_Voltage
 5231              		.loc 1 711 0
 5232 0070 5D4B     		ldr	r3, .L361+12
 5233 0072 1D60     		str	r5, [r3]
 714:../user/source/DLT645.c ****         pucBuffer[17] = GetHighByte(B_Voltage);
 5234              		.loc 1 714 0
 5235 0074 2846     		mov	r0, r5
 5236 0076 FFF7FEFF 		bl	GetLowByte
 5237              	.LVL624:
 5238 007a 2074     		strb	r0, [r4, #16]
 715:../user/source/DLT645.c ****         C_Voltage = ((C_Voltage <= Voltage_MAX) && (C_Voltage >= Voltage_MIN)
 5239              		.loc 1 715 0
 5240 007c 2846     		mov	r0, r5
 5241 007e FFF7FEFF 		bl	GetHighByte
 5242              	.LVL625:
 5243 0082 6074     		strb	r0, [r4, #17]
 716:../user/source/DLT645.c ****                          ? C_Voltage
 5244              		.loc 1 716 0
 5245 0084 594B     		ldr	r3, .L361+16
 5246 0086 1D68     		ldr	r5, [r3]
 718:../user/source/DLT645.c ****         pucBuffer[18] = GetLowByte(C_Voltage);
 5247              		.loc 1 718 0
 5248 0088 AE42     		cmp	r6, r5
 5249 008a 06DB     		blt	.L356
 716:../user/source/DLT645.c ****                          ? C_Voltage
 5250              		.loc 1 716 0
 5251 008c 554B     		ldr	r3, .L361+8
 5252 008e 1B68     		ldr	r3, [r3]
 5253 0090 9D42     		cmp	r5, r3
 5254 0092 04DA     		bge	.L341
 718:../user/source/DLT645.c ****         pucBuffer[18] = GetLowByte(C_Voltage);
 5255              		.loc 1 718 0
 5256 0094 40F69805 		movw	r5, #2200
 5257 0098 01E0     		b	.L341
 5258              	.L356:
 5259 009a 40F69805 		movw	r5, #2200
 5260              	.L341:
 716:../user/source/DLT645.c ****                          ? C_Voltage
 5261              		.loc 1 716 0
 5262 009e 534B     		ldr	r3, .L361+16
 5263 00a0 1D60     		str	r5, [r3]
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 156


 719:../user/source/DLT645.c ****         pucBuffer[19] = GetHighByte(C_Voltage);
 5264              		.loc 1 719 0
 5265 00a2 2846     		mov	r0, r5
 5266 00a4 FFF7FEFF 		bl	GetLowByte
 5267              	.LVL626:
 5268 00a8 A074     		strb	r0, [r4, #18]
 720:../user/source/DLT645.c ****         for (i = 0; i < 20; i++) //¹Ì¶¨Ö¡³¤22
 5269              		.loc 1 720 0
 5270 00aa 2846     		mov	r0, r5
 5271 00ac FFF7FEFF 		bl	GetHighByte
 5272              	.LVL627:
 5273 00b0 E074     		strb	r0, [r4, #19]
 721:../user/source/DLT645.c ****         {
 5274              		.loc 1 721 0
 5275 00b2 0023     		movs	r3, #0
 697:../user/source/DLT645.c ****     uint8_t i = 0;
 5276              		.loc 1 697 0
 5277 00b4 1A46     		mov	r2, r3
 721:../user/source/DLT645.c ****         {
 5278              		.loc 1 721 0
 5279 00b6 04E0     		b	.L342
 5280              	.LVL628:
 5281              	.L343:
 723:../user/source/DLT645.c ****         }
 5282              		.loc 1 723 0 discriminator 3
 5283 00b8 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 5284 00ba 0A44     		add	r2, r2, r1
 5285              	.LVL629:
 5286 00bc D2B2     		uxtb	r2, r2
 5287              	.LVL630:
 721:../user/source/DLT645.c ****         {
 5288              		.loc 1 721 0 discriminator 3
 5289 00be 0133     		adds	r3, r3, #1
 5290              	.LVL631:
 5291 00c0 DBB2     		uxtb	r3, r3
 5292              	.LVL632:
 5293              	.L342:
 721:../user/source/DLT645.c ****         {
 5294              		.loc 1 721 0 is_stmt 0 discriminator 1
 5295 00c2 132B     		cmp	r3, #19
 5296 00c4 F8D9     		bls	.L343
 725:../user/source/DLT645.c ****         pucBuffer[21] = 0x16;
 5297              		.loc 1 725 0 is_stmt 1
 5298 00c6 2275     		strb	r2, [r4, #20]
 726:../user/source/DLT645.c ****         return true;
 5299              		.loc 1 726 0
 5300 00c8 1623     		movs	r3, #22
 5301              	.LVL633:
 5302 00ca 6375     		strb	r3, [r4, #21]
 727:../user/source/DLT645.c ****     }
 5303              		.loc 1 727 0
 5304 00cc 0120     		movs	r0, #1
 5305 00ce 70BD     		pop	{r4, r5, r6, pc}
 5306              	.LVL634:
 5307              	.L336:
 731:../user/source/DLT645.c ****                          ? A_Voltage
 5308              		.loc 1 731 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 157


 5309 00d0 424B     		ldr	r3, .L361
 5310 00d2 1D68     		ldr	r5, [r3]
 5311 00d4 424B     		ldr	r3, .L361+4
 5312 00d6 1B68     		ldr	r3, [r3]
 733:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5313              		.loc 1 733 0
 5314 00d8 9D42     		cmp	r5, r3
 5315 00da 06DC     		bgt	.L357
 731:../user/source/DLT645.c ****                          ? A_Voltage
 5316              		.loc 1 731 0
 5317 00dc 414B     		ldr	r3, .L361+8
 5318 00de 1B68     		ldr	r3, [r3]
 5319 00e0 9D42     		cmp	r5, r3
 5320 00e2 04DA     		bge	.L344
 733:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5321              		.loc 1 733 0
 5322 00e4 40F69805 		movw	r5, #2200
 5323 00e8 01E0     		b	.L344
 5324              	.L357:
 5325 00ea 40F69805 		movw	r5, #2200
 5326              	.L344:
 731:../user/source/DLT645.c ****                          ? A_Voltage
 5327              		.loc 1 731 0
 5328 00ee 3B4B     		ldr	r3, .L361
 5329 00f0 1D60     		str	r5, [r3]
 734:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 5330              		.loc 1 734 0
 5331 00f2 9123     		movs	r3, #145
 5332 00f4 2372     		strb	r3, [r4, #8]
 735:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 5333              		.loc 1 735 0
 5334 00f6 0623     		movs	r3, #6
 5335 00f8 6372     		strb	r3, [r4, #9]
 736:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(A_Voltage);
 5336              		.loc 1 736 0
 5337 00fa 2846     		mov	r0, r5
 5338              	.LVL635:
 5339 00fc FFF7FEFF 		bl	GetLowByte
 5340              	.LVL636:
 5341 0100 A073     		strb	r0, [r4, #14]
 737:../user/source/DLT645.c ****         for (i = 0; i < 16; i++) //¹Ì¶¨Ö¡³¤18
 5342              		.loc 1 737 0
 5343 0102 2846     		mov	r0, r5
 5344 0104 FFF7FEFF 		bl	GetHighByte
 5345              	.LVL637:
 5346 0108 E073     		strb	r0, [r4, #15]
 738:../user/source/DLT645.c ****         {
 5347              		.loc 1 738 0
 5348 010a 0023     		movs	r3, #0
 697:../user/source/DLT645.c ****     uint8_t i = 0;
 5349              		.loc 1 697 0
 5350 010c 1A46     		mov	r2, r3
 738:../user/source/DLT645.c ****         {
 5351              		.loc 1 738 0
 5352 010e 04E0     		b	.L345
 5353              	.LVL638:
 5354              	.L346:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 158


 740:../user/source/DLT645.c ****         }
 5355              		.loc 1 740 0 discriminator 3
 5356 0110 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 5357 0112 0A44     		add	r2, r2, r1
 5358              	.LVL639:
 5359 0114 D2B2     		uxtb	r2, r2
 5360              	.LVL640:
 738:../user/source/DLT645.c ****         {
 5361              		.loc 1 738 0 discriminator 3
 5362 0116 0133     		adds	r3, r3, #1
 5363              	.LVL641:
 5364 0118 DBB2     		uxtb	r3, r3
 5365              	.LVL642:
 5366              	.L345:
 738:../user/source/DLT645.c ****         {
 5367              		.loc 1 738 0 is_stmt 0 discriminator 1
 5368 011a 0F2B     		cmp	r3, #15
 5369 011c F8D9     		bls	.L346
 742:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 5370              		.loc 1 742 0 is_stmt 1
 5371 011e 2274     		strb	r2, [r4, #16]
 743:../user/source/DLT645.c ****         return true;
 5372              		.loc 1 743 0
 5373 0120 1623     		movs	r3, #22
 5374              	.LVL643:
 5375 0122 6374     		strb	r3, [r4, #17]
 744:../user/source/DLT645.c ****     }
 5376              		.loc 1 744 0
 5377 0124 0120     		movs	r0, #1
 5378 0126 70BD     		pop	{r4, r5, r6, pc}
 5379              	.LVL644:
 5380              	.L337:
 748:../user/source/DLT645.c ****                          ? B_Voltage
 5381              		.loc 1 748 0
 5382 0128 2F4B     		ldr	r3, .L361+12
 5383 012a 1D68     		ldr	r5, [r3]
 5384 012c 2C4B     		ldr	r3, .L361+4
 5385 012e 1B68     		ldr	r3, [r3]
 750:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5386              		.loc 1 750 0
 5387 0130 9D42     		cmp	r5, r3
 5388 0132 06DC     		bgt	.L358
 748:../user/source/DLT645.c ****                          ? B_Voltage
 5389              		.loc 1 748 0
 5390 0134 2B4B     		ldr	r3, .L361+8
 5391 0136 1B68     		ldr	r3, [r3]
 5392 0138 9D42     		cmp	r5, r3
 5393 013a 04DA     		bge	.L347
 750:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5394              		.loc 1 750 0
 5395 013c 40F69805 		movw	r5, #2200
 5396 0140 01E0     		b	.L347
 5397              	.L358:
 5398 0142 40F69805 		movw	r5, #2200
 5399              	.L347:
 748:../user/source/DLT645.c ****                          ? B_Voltage
 5400              		.loc 1 748 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 159


 5401 0146 284B     		ldr	r3, .L361+12
 5402 0148 1D60     		str	r5, [r3]
 751:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 5403              		.loc 1 751 0
 5404 014a 9123     		movs	r3, #145
 5405 014c 2372     		strb	r3, [r4, #8]
 752:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(B_Voltage);
 5406              		.loc 1 752 0
 5407 014e 0623     		movs	r3, #6
 5408 0150 6372     		strb	r3, [r4, #9]
 753:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(B_Voltage);
 5409              		.loc 1 753 0
 5410 0152 2846     		mov	r0, r5
 5411              	.LVL645:
 5412 0154 FFF7FEFF 		bl	GetLowByte
 5413              	.LVL646:
 5414 0158 A073     		strb	r0, [r4, #14]
 754:../user/source/DLT645.c ****         for (i = 0; i < 16; i++) //¹Ì¶¨Ö¡³¤18
 5415              		.loc 1 754 0
 5416 015a 2846     		mov	r0, r5
 5417 015c FFF7FEFF 		bl	GetHighByte
 5418              	.LVL647:
 5419 0160 E073     		strb	r0, [r4, #15]
 755:../user/source/DLT645.c ****         {
 5420              		.loc 1 755 0
 5421 0162 0023     		movs	r3, #0
 697:../user/source/DLT645.c ****     uint8_t i = 0;
 5422              		.loc 1 697 0
 5423 0164 1A46     		mov	r2, r3
 755:../user/source/DLT645.c ****         {
 5424              		.loc 1 755 0
 5425 0166 04E0     		b	.L348
 5426              	.LVL648:
 5427              	.L349:
 757:../user/source/DLT645.c ****         }
 5428              		.loc 1 757 0 discriminator 3
 5429 0168 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 5430 016a 0A44     		add	r2, r2, r1
 5431              	.LVL649:
 5432 016c D2B2     		uxtb	r2, r2
 5433              	.LVL650:
 755:../user/source/DLT645.c ****         {
 5434              		.loc 1 755 0 discriminator 3
 5435 016e 0133     		adds	r3, r3, #1
 5436              	.LVL651:
 5437 0170 DBB2     		uxtb	r3, r3
 5438              	.LVL652:
 5439              	.L348:
 755:../user/source/DLT645.c ****         {
 5440              		.loc 1 755 0 is_stmt 0 discriminator 1
 5441 0172 0F2B     		cmp	r3, #15
 5442 0174 F8D9     		bls	.L349
 759:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 5443              		.loc 1 759 0 is_stmt 1
 5444 0176 2274     		strb	r2, [r4, #16]
 760:../user/source/DLT645.c ****         return true;
 5445              		.loc 1 760 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 160


 5446 0178 1623     		movs	r3, #22
 5447              	.LVL653:
 5448 017a 6374     		strb	r3, [r4, #17]
 761:../user/source/DLT645.c ****     }
 5449              		.loc 1 761 0
 5450 017c 0120     		movs	r0, #1
 5451 017e 70BD     		pop	{r4, r5, r6, pc}
 5452              	.LVL654:
 5453              	.L338:
 765:../user/source/DLT645.c ****                          ? C_Voltage
 5454              		.loc 1 765 0
 5455 0180 1A4B     		ldr	r3, .L361+16
 5456 0182 1D68     		ldr	r5, [r3]
 5457 0184 164B     		ldr	r3, .L361+4
 5458 0186 1B68     		ldr	r3, [r3]
 767:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5459              		.loc 1 767 0
 5460 0188 9D42     		cmp	r5, r3
 5461 018a 06DC     		bgt	.L359
 765:../user/source/DLT645.c ****                          ? C_Voltage
 5462              		.loc 1 765 0
 5463 018c 154B     		ldr	r3, .L361+8
 5464 018e 1B68     		ldr	r3, [r3]
 5465 0190 9D42     		cmp	r5, r3
 5466 0192 04DA     		bge	.L350
 767:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5467              		.loc 1 767 0
 5468 0194 40F69805 		movw	r5, #2200
 5469 0198 01E0     		b	.L350
 5470              	.L359:
 5471 019a 40F69805 		movw	r5, #2200
 5472              	.L350:
 765:../user/source/DLT645.c ****                          ? C_Voltage
 5473              		.loc 1 765 0
 5474 019e 134B     		ldr	r3, .L361+16
 5475 01a0 1D60     		str	r5, [r3]
 768:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 5476              		.loc 1 768 0
 5477 01a2 9123     		movs	r3, #145
 5478 01a4 2372     		strb	r3, [r4, #8]
 769:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(C_Voltage);
 5479              		.loc 1 769 0
 5480 01a6 0623     		movs	r3, #6
 5481 01a8 6372     		strb	r3, [r4, #9]
 770:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(C_Voltage);
 5482              		.loc 1 770 0
 5483 01aa 2846     		mov	r0, r5
 5484              	.LVL655:
 5485 01ac FFF7FEFF 		bl	GetLowByte
 5486              	.LVL656:
 5487 01b0 A073     		strb	r0, [r4, #14]
 771:../user/source/DLT645.c ****         for (i = 0; i < 16; i++)
 5488              		.loc 1 771 0
 5489 01b2 2846     		mov	r0, r5
 5490 01b4 FFF7FEFF 		bl	GetHighByte
 5491              	.LVL657:
 5492 01b8 E073     		strb	r0, [r4, #15]
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 161


 772:../user/source/DLT645.c ****         {
 5493              		.loc 1 772 0
 5494 01ba 0023     		movs	r3, #0
 697:../user/source/DLT645.c ****     uint8_t i = 0;
 5495              		.loc 1 697 0
 5496 01bc 1A46     		mov	r2, r3
 772:../user/source/DLT645.c ****         {
 5497              		.loc 1 772 0
 5498 01be 04E0     		b	.L351
 5499              	.LVL658:
 5500              	.L352:
 774:../user/source/DLT645.c ****         }
 5501              		.loc 1 774 0 discriminator 3
 5502 01c0 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 5503 01c2 0A44     		add	r2, r2, r1
 5504              	.LVL659:
 5505 01c4 D2B2     		uxtb	r2, r2
 5506              	.LVL660:
 772:../user/source/DLT645.c ****         {
 5507              		.loc 1 772 0 discriminator 3
 5508 01c6 0133     		adds	r3, r3, #1
 5509              	.LVL661:
 5510 01c8 DBB2     		uxtb	r3, r3
 5511              	.LVL662:
 5512              	.L351:
 772:../user/source/DLT645.c ****         {
 5513              		.loc 1 772 0 is_stmt 0 discriminator 1
 5514 01ca 0F2B     		cmp	r3, #15
 5515 01cc F8D9     		bls	.L352
 776:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 5516              		.loc 1 776 0 is_stmt 1
 5517 01ce 2274     		strb	r2, [r4, #16]
 777:../user/source/DLT645.c ****         return true;
 5518              		.loc 1 777 0
 5519 01d0 1623     		movs	r3, #22
 5520              	.LVL663:
 5521 01d2 6374     		strb	r3, [r4, #17]
 778:../user/source/DLT645.c ****     }
 5522              		.loc 1 778 0
 5523 01d4 0120     		movs	r0, #1
 5524 01d6 70BD     		pop	{r4, r5, r6, pc}
 5525              	.LVL664:
 5526              	.L353:
 781:../user/source/DLT645.c ****     }
 5527              		.loc 1 781 0
 5528 01d8 0020     		movs	r0, #0
 5529              	.LVL665:
 783:../user/source/DLT645.c **** /********************************************************************
 5530              		.loc 1 783 0
 5531 01da 70BD     		pop	{r4, r5, r6, pc}
 5532              	.LVL666:
 5533              	.L362:
 5534              		.align	2
 5535              	.L361:
 5536 01dc 00000000 		.word	.LANCHOR4
 5537 01e0 00000000 		.word	Voltage_MAX
 5538 01e4 00000000 		.word	Voltage_MIN
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 162


 5539 01e8 00000000 		.word	.LANCHOR8
 5540 01ec 00000000 		.word	.LANCHOR9
 5541              		.cfi_endproc
 5542              	.LFE121:
 5544              		.section	.text.Voltage_Change_Init,"ax",%progbits
 5545              		.align	2
 5546              		.global	Voltage_Change_Init
 5547              		.thumb
 5548              		.thumb_func
 5550              	Voltage_Change_Init:
 5551              	.LFB126:
 902:../user/source/DLT645.c ****     uint8_t Vmax1;
 5552              		.loc 1 902 0
 5553              		.cfi_startproc
 5554              		@ args = 0, pretend = 0, frame = 0
 5555              		@ frame_needed = 0, uses_anonymous_args = 0
 5556 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5557              	.LCFI46:
 5558              		.cfi_def_cfa_offset 24
 5559              		.cfi_offset 3, -24
 5560              		.cfi_offset 4, -20
 5561              		.cfi_offset 5, -16
 5562              		.cfi_offset 6, -12
 5563              		.cfi_offset 7, -8
 5564              		.cfi_offset 14, -4
 908:../user/source/DLT645.c ****     /*µçÑ¹ĞŞ¸ÄÉÏÏÂÏŞ³õÊ¼»¯*/
 5565              		.loc 1 908 0
 5566 0002 1948     		ldr	r0, .L367
 5567 0004 FFF7FEFF 		bl	EEProm_Read
 5568              	.LVL667:
 5569 0008 184B     		ldr	r3, .L367+4
 5570 000a 1870     		strb	r0, [r3]
 910:../user/source/DLT645.c ****     Vmax2 = EEProm_Read(FLASH_VMAX2_Addr);
 5571              		.loc 1 910 0
 5572 000c 1848     		ldr	r0, .L367+8
 5573 000e FFF7FEFF 		bl	EEProm_Read
 5574              	.LVL668:
 5575 0012 0446     		mov	r4, r0
 5576              	.LVL669:
 911:../user/source/DLT645.c ****     Vmin1 = EEProm_Read(FLASH_VMIN1_Addr);
 5577              		.loc 1 911 0
 5578 0014 1748     		ldr	r0, .L367+12
 5579 0016 FFF7FEFF 		bl	EEProm_Read
 5580              	.LVL670:
 5581 001a 0546     		mov	r5, r0
 5582              	.LVL671:
 912:../user/source/DLT645.c ****     Vmin2 = EEProm_Read(FLASH_VMIN2_Addr);
 5583              		.loc 1 912 0
 5584 001c 1648     		ldr	r0, .L367+16
 5585 001e FFF7FEFF 		bl	EEProm_Read
 5586              	.LVL672:
 5587 0022 0646     		mov	r6, r0
 5588              	.LVL673:
 913:../user/source/DLT645.c **** 
 5589              		.loc 1 913 0
 5590 0024 1548     		ldr	r0, .L367+20
 5591 0026 FFF7FEFF 		bl	EEProm_Read
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 163


 5592              	.LVL674:
 5593 002a 0746     		mov	r7, r0
 5594              	.LVL675:
 915:../user/source/DLT645.c ****         (Vmax2 == 0xff) &&
 5595              		.loc 1 915 0
 5596 002c FF2C     		cmp	r4, #255
 5597 002e 0ED1     		bne	.L364
 915:../user/source/DLT645.c ****         (Vmax2 == 0xff) &&
 5598              		.loc 1 915 0 is_stmt 0 discriminator 1
 5599 0030 FF2D     		cmp	r5, #255
 5600 0032 0CD1     		bne	.L364
 916:../user/source/DLT645.c ****         (Vmin1 == 0xff) &&
 5601              		.loc 1 916 0 is_stmt 1
 5602 0034 FF2E     		cmp	r6, #255
 5603 0036 0AD1     		bne	.L364
 917:../user/source/DLT645.c ****         (Vmin2 == 0xff))
 5604              		.loc 1 917 0
 5605 0038 FF28     		cmp	r0, #255
 5606 003a 08D1     		bne	.L364
 920:../user/source/DLT645.c ****         Voltage_MIN = Voltage_MIN_Default;
 5607              		.loc 1 920 0
 5608 003c 40F62E12 		movw	r2, #2350
 5609 0040 0F4B     		ldr	r3, .L367+24
 5610 0042 1A60     		str	r2, [r3]
 921:../user/source/DLT645.c ****     }
 5611              		.loc 1 921 0
 5612 0044 40F2BC72 		movw	r2, #1980
 5613 0048 0E4B     		ldr	r3, .L367+28
 5614 004a 1A60     		str	r2, [r3]
 5615 004c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5616              	.LVL676:
 5617              	.L364:
 925:../user/source/DLT645.c ****         Voltage_MIN = Get_Voltage(Vmin1, Vmin2);
 5618              		.loc 1 925 0
 5619 004e 2946     		mov	r1, r5
 5620 0050 2046     		mov	r0, r4
 5621              	.LVL677:
 5622 0052 FFF7FEFF 		bl	Get_Voltage
 5623              	.LVL678:
 5624 0056 0A4B     		ldr	r3, .L367+24
 5625 0058 1860     		str	r0, [r3]
 926:../user/source/DLT645.c ****     }
 5626              		.loc 1 926 0
 5627 005a 3946     		mov	r1, r7
 5628 005c 3046     		mov	r0, r6
 5629 005e FFF7FEFF 		bl	Get_Voltage
 5630              	.LVL679:
 5631 0062 084B     		ldr	r3, .L367+28
 5632 0064 1860     		str	r0, [r3]
 5633 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5634              	.LVL680:
 5635              	.L368:
 5636              		.align	2
 5637              	.L367:
 5638 0068 14EF0108 		.word	134344468
 5639 006c 00000000 		.word	.LANCHOR5
 5640 0070 00EF0108 		.word	134344448
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 164


 5641 0074 04EF0108 		.word	134344452
 5642 0078 08EF0108 		.word	134344456
 5643 007c 0CEF0108 		.word	134344460
 5644 0080 00000000 		.word	Voltage_MAX
 5645 0084 00000000 		.word	Voltage_MIN
 5646              		.cfi_endproc
 5647              	.LFE126:
 5649              		.section	.text.Voltage_Modifier_Method,"ax",%progbits
 5650              		.align	2
 5651              		.global	Voltage_Modifier_Method
 5652              		.thumb
 5653              		.thumb_func
 5655              	Voltage_Modifier_Method:
 5656              	.LFB127:
 939:../user/source/DLT645.c ****     int n = 0;
 5657              		.loc 1 939 0
 5658              		.cfi_startproc
 5659              		@ args = 0, pretend = 0, frame = 0
 5660              		@ frame_needed = 0, uses_anonymous_args = 0
 5661              	.LVL681:
 5662 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5663              	.LCFI47:
 5664              		.cfi_def_cfa_offset 20
 5665              		.cfi_offset 4, -20
 5666              		.cfi_offset 5, -16
 5667              		.cfi_offset 6, -12
 5668              		.cfi_offset 7, -8
 5669              		.cfi_offset 14, -4
 5670              	.LVL682:
 943:../user/source/DLT645.c ****     m = (Voltage_MAX_MAX - Voltage_MAX) / (Voltage_MAX - Voltage_MIN) + 1; //(260-235)/(235-198)+1»
 5671              		.loc 1 943 0
 5672 0002 1F4B     		ldr	r3, .L381
 5673 0004 1E68     		ldr	r6, [r3]
 5674 0006 A6F59661 		sub	r1, r6, #1200
 5675 000a 1E4B     		ldr	r3, .L381+4
 5676 000c 1D68     		ldr	r5, [r3]
 5677 000e AA1B     		subs	r2, r5, r6
 5678 0010 91FBF2F1 		sdiv	r1, r1, r2
 5679 0014 0131     		adds	r1, r1, #1
 5680              	.LVL683:
 944:../user/source/DLT645.c ****     if ((Voltage > Voltage_MAX) && (Voltage <= Voltage_MAX_MAX))
 5681              		.loc 1 944 0
 5682 0016 C5F52F64 		rsb	r4, r5, #2800
 5683 001a 94FBF2F4 		sdiv	r4, r4, r2
 5684              	.LVL684:
 945:../user/source/DLT645.c ****     {
 5685              		.loc 1 945 0
 5686 001e 8542     		cmp	r5, r0
 5687 0020 16DA     		bge	.L370
 5688 0022 0134     		adds	r4, r4, #1
 5689              	.LVL685:
 945:../user/source/DLT645.c ****     {
 5690              		.loc 1 945 0 is_stmt 0 discriminator 1
 5691 0024 B0F52F6F 		cmp	r0, #2800
 5692 0028 12DC     		bgt	.L370
 947:../user/source/DLT645.c ****         {
 5693              		.loc 1 947 0 is_stmt 1
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 165


 5694 002a AB18     		adds	r3, r5, r2
 5695 002c 9842     		cmp	r0, r3
 5696 002e 0CDC     		bgt	.L376
 949:../user/source/DLT645.c ****             return Voltage;
 5697              		.loc 1 949 0
 5698 0030 451B     		subs	r5, r0, r5
 5699 0032 A0EB4500 		sub	r0, r0, r5, lsl #1
 5700              	.LVL686:
 950:../user/source/DLT645.c ****         }
 5701              		.loc 1 950 0
 5702 0036 F0BD     		pop	{r4, r5, r6, r7, pc}
 5703              	.LVL687:
 5704              	.L373:
 956:../user/source/DLT645.c ****                 {
 5705              		.loc 1 956 0
 5706 0038 0133     		adds	r3, r3, #1
 5707              	.LVL688:
 5708 003a 03FB02F7 		mul	r7, r3, r2
 5709 003e 05EB070E 		add	lr, r5, r7
 5710 0042 7045     		cmp	r0, lr
 5711 0044 02DC     		bgt	.L371
 958:../user/source/DLT645.c ****                     return Voltage;
 5712              		.loc 1 958 0
 5713 0046 C01B     		subs	r0, r0, r7
 5714              	.LVL689:
 959:../user/source/DLT645.c ****                 }
 5715              		.loc 1 959 0
 5716 0048 F0BD     		pop	{r4, r5, r6, r7, pc}
 5717              	.LVL690:
 5718              	.L376:
 5719 004a 0123     		movs	r3, #1
 5720              	.LVL691:
 5721              	.L371:
 954:../user/source/DLT645.c ****             {
 5722              		.loc 1 954 0 discriminator 1
 5723 004c A342     		cmp	r3, r4
 5724 004e F3DB     		blt	.L373
 5725              	.LVL692:
 5726              	.L370:
 964:../user/source/DLT645.c ****     {
 5727              		.loc 1 964 0
 5728 0050 8642     		cmp	r6, r0
 5729 0052 14DD     		ble	.L372
 964:../user/source/DLT645.c ****     {
 5730              		.loc 1 964 0 is_stmt 0 discriminator 1
 5731 0054 B0F5966F 		cmp	r0, #1200
 5732 0058 11DB     		blt	.L372
 966:../user/source/DLT645.c ****         {
 5733              		.loc 1 966 0 is_stmt 1
 5734 005a B31A     		subs	r3, r6, r2
 5735 005c 9842     		cmp	r0, r3
 5736 005e 0BDB     		blt	.L379
 968:../user/source/DLT645.c ****             return Voltage;
 5737              		.loc 1 968 0
 5738 0060 361A     		subs	r6, r6, r0
 5739 0062 00EB4600 		add	r0, r0, r6, lsl #1
 5740              	.LVL693:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 166


 969:../user/source/DLT645.c ****         }
 5741              		.loc 1 969 0
 5742 0066 F0BD     		pop	{r4, r5, r6, r7, pc}
 5743              	.LVL694:
 5744              	.L375:
 975:../user/source/DLT645.c ****                 {
 5745              		.loc 1 975 0
 5746 0068 0133     		adds	r3, r3, #1
 5747              	.LVL695:
 5748 006a 03FB02F4 		mul	r4, r3, r2
 5749 006e 351B     		subs	r5, r6, r4
 5750 0070 A842     		cmp	r0, r5
 5751 0072 02DB     		blt	.L374
 977:../user/source/DLT645.c ****                     return Voltage;
 5752              		.loc 1 977 0
 5753 0074 2044     		add	r0, r0, r4
 5754              	.LVL696:
 978:../user/source/DLT645.c ****                 }
 5755              		.loc 1 978 0
 5756 0076 F0BD     		pop	{r4, r5, r6, r7, pc}
 5757              	.LVL697:
 5758              	.L379:
 5759 0078 0123     		movs	r3, #1
 5760              	.LVL698:
 5761              	.L374:
 973:../user/source/DLT645.c ****             {
 5762              		.loc 1 973 0 discriminator 1
 5763 007a 8B42     		cmp	r3, r1
 5764 007c F4DB     		blt	.L375
 5765              	.LVL699:
 5766              	.L372:
 984:../user/source/DLT645.c **** /*****************************************************
 5767              		.loc 1 984 0
 5768 007e F0BD     		pop	{r4, r5, r6, r7, pc}
 5769              	.L382:
 5770              		.align	2
 5771              	.L381:
 5772 0080 00000000 		.word	Voltage_MIN
 5773 0084 00000000 		.word	Voltage_MAX
 5774              		.cfi_endproc
 5775              	.LFE127:
 5777              		.section	.text.Voltage_Modifier,"ax",%progbits
 5778              		.align	2
 5779              		.global	Voltage_Modifier
 5780              		.thumb
 5781              		.thumb_func
 5783              	Voltage_Modifier:
 5784              	.LFB120:
 595:../user/source/DLT645.c **** 
 5785              		.loc 1 595 0
 5786              		.cfi_startproc
 5787              		@ args = 0, pretend = 0, frame = 0
 5788              		@ frame_needed = 0, uses_anonymous_args = 0
 5789              	.LVL700:
 5790 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5791              	.LCFI48:
 5792              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 167


 5793              		.cfi_offset 3, -24
 5794              		.cfi_offset 4, -20
 5795              		.cfi_offset 5, -16
 5796              		.cfi_offset 6, -12
 5797              		.cfi_offset 7, -8
 5798              		.cfi_offset 14, -4
 5799              	.LVL701:
 600:../user/source/DLT645.c ****         return;
 5800              		.loc 1 600 0
 5801 0002 7A4B     		ldr	r3, .L400
 5802 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5803 0006 002B     		cmp	r3, #0
 5804 0008 00F0EF80 		beq	.L383
 602:../user/source/DLT645.c ****         (pucBuffer[10] == 0x33) &&
 5805              		.loc 1 602 0
 5806 000c 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 5807 000e 912B     		cmp	r3, #145
 5808 0010 40F0EB80 		bne	.L383
 603:../user/source/DLT645.c ****         (pucBuffer[12] == 0x34) &&
 5809              		.loc 1 603 0 discriminator 1
 5810 0014 837A     		ldrb	r3, [r0, #10]	@ zero_extendqisi2
 602:../user/source/DLT645.c ****         (pucBuffer[10] == 0x33) &&
 5811              		.loc 1 602 0 discriminator 1
 5812 0016 332B     		cmp	r3, #51
 5813 0018 40F0E780 		bne	.L383
 604:../user/source/DLT645.c ****         (pucBuffer[13] == 0x35))
 5814              		.loc 1 604 0
 5815 001c 037B     		ldrb	r3, [r0, #12]	@ zero_extendqisi2
 603:../user/source/DLT645.c ****         (pucBuffer[12] == 0x34) &&
 5816              		.loc 1 603 0
 5817 001e 342B     		cmp	r3, #52
 5818 0020 40F0E380 		bne	.L383
 605:../user/source/DLT645.c ****     {
 5819              		.loc 1 605 0
 5820 0024 437B     		ldrb	r3, [r0, #13]	@ zero_extendqisi2
 604:../user/source/DLT645.c ****         (pucBuffer[13] == 0x35))
 5821              		.loc 1 604 0
 5822 0026 352B     		cmp	r3, #53
 5823 0028 40F0DF80 		bne	.L383
 5824 002c 0446     		mov	r4, r0
 607:../user/source/DLT645.c ****         {
 5825              		.loc 1 607 0
 5826 002e C57A     		ldrb	r5, [r0, #11]	@ zero_extendqisi2
 5827 0030 322D     		cmp	r5, #50
 5828 0032 62D1     		bne	.L385
 609:../user/source/DLT645.c ****             {
 5829              		.loc 1 609 0
 5830 0034 867B     		ldrb	r6, [r0, #14]	@ zero_extendqisi2
 5831 0036 C77B     		ldrb	r7, [r0, #15]	@ zero_extendqisi2
 5832 0038 3946     		mov	r1, r7
 5833 003a 3046     		mov	r0, r6
 5834              	.LVL702:
 5835 003c FFF7FEFF 		bl	BCD_Verity
 5836              	.LVL703:
 5837 0040 C8B1     		cbz	r0, .L386
 611:../user/source/DLT645.c ****                 if ((A_Voltage > Voltage_MAX) || (A_Voltage < Voltage_MIN)) //ĞŞ¸ÄAÏàµçÑ¹
 5838              		.loc 1 611 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 168


 5839 0042 3946     		mov	r1, r7
 5840 0044 3046     		mov	r0, r6
 5841 0046 FFF7FEFF 		bl	Get_Voltage
 5842              	.LVL704:
 5843 004a 694B     		ldr	r3, .L400+4
 5844 004c 1860     		str	r0, [r3]
 612:../user/source/DLT645.c ****                 {
 5845              		.loc 1 612 0
 5846 004e 694B     		ldr	r3, .L400+8
 5847 0050 1B68     		ldr	r3, [r3]
 5848 0052 9842     		cmp	r0, r3
 5849 0054 03DC     		bgt	.L387
 612:../user/source/DLT645.c ****                 {
 5850              		.loc 1 612 0 is_stmt 0 discriminator 1
 5851 0056 684B     		ldr	r3, .L400+12
 5852 0058 1B68     		ldr	r3, [r3]
 5853 005a 9842     		cmp	r0, r3
 5854 005c 0BDA     		bge	.L386
 5855              	.L387:
 614:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(A_Voltage);
 5856              		.loc 1 614 0 is_stmt 1
 5857 005e FFF7FEFF 		bl	Voltage_Modifier_Method
 5858              	.LVL705:
 5859 0062 0646     		mov	r6, r0
 5860 0064 624B     		ldr	r3, .L400+4
 5861 0066 1860     		str	r0, [r3]
 615:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(A_Voltage);
 5862              		.loc 1 615 0
 5863 0068 FFF7FEFF 		bl	GetLowByte
 5864              	.LVL706:
 5865 006c A073     		strb	r0, [r4, #14]
 616:../user/source/DLT645.c ****                 }
 5866              		.loc 1 616 0
 5867 006e 3046     		mov	r0, r6
 5868 0070 FFF7FEFF 		bl	GetHighByte
 5869              	.LVL707:
 5870 0074 E073     		strb	r0, [r4, #15]
 5871              	.L386:
 619:../user/source/DLT645.c ****             {
 5872              		.loc 1 619 0
 5873 0076 267C     		ldrb	r6, [r4, #16]	@ zero_extendqisi2
 5874 0078 677C     		ldrb	r7, [r4, #17]	@ zero_extendqisi2
 5875 007a 3946     		mov	r1, r7
 5876 007c 3046     		mov	r0, r6
 5877 007e FFF7FEFF 		bl	BCD_Verity
 5878              	.LVL708:
 5879 0082 C8B1     		cbz	r0, .L388
 621:../user/source/DLT645.c ****                 if ((B_Voltage > Voltage_MAX) || (B_Voltage < Voltage_MIN)) //ĞŞ¸ÄBÏàµçÑ¹
 5880              		.loc 1 621 0
 5881 0084 3946     		mov	r1, r7
 5882 0086 3046     		mov	r0, r6
 5883 0088 FFF7FEFF 		bl	Get_Voltage
 5884              	.LVL709:
 5885 008c 5B4B     		ldr	r3, .L400+16
 5886 008e 1860     		str	r0, [r3]
 622:../user/source/DLT645.c ****                 {
 5887              		.loc 1 622 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 169


 5888 0090 584B     		ldr	r3, .L400+8
 5889 0092 1B68     		ldr	r3, [r3]
 5890 0094 9842     		cmp	r0, r3
 5891 0096 03DC     		bgt	.L389
 622:../user/source/DLT645.c ****                 {
 5892              		.loc 1 622 0 is_stmt 0 discriminator 1
 5893 0098 574B     		ldr	r3, .L400+12
 5894 009a 1B68     		ldr	r3, [r3]
 5895 009c 9842     		cmp	r0, r3
 5896 009e 0BDA     		bge	.L388
 5897              	.L389:
 624:../user/source/DLT645.c ****                     pucBuffer[16] = GetLowByte(B_Voltage);
 5898              		.loc 1 624 0 is_stmt 1
 5899 00a0 FFF7FEFF 		bl	Voltage_Modifier_Method
 5900              	.LVL710:
 5901 00a4 0646     		mov	r6, r0
 5902 00a6 554B     		ldr	r3, .L400+16
 5903 00a8 1860     		str	r0, [r3]
 625:../user/source/DLT645.c ****                     pucBuffer[17] = GetHighByte(B_Voltage);
 5904              		.loc 1 625 0
 5905 00aa FFF7FEFF 		bl	GetLowByte
 5906              	.LVL711:
 5907 00ae 2074     		strb	r0, [r4, #16]
 626:../user/source/DLT645.c ****                 }
 5908              		.loc 1 626 0
 5909 00b0 3046     		mov	r0, r6
 5910 00b2 FFF7FEFF 		bl	GetHighByte
 5911              	.LVL712:
 5912 00b6 6074     		strb	r0, [r4, #17]
 5913              	.L388:
 629:../user/source/DLT645.c ****             {
 5914              		.loc 1 629 0
 5915 00b8 A67C     		ldrb	r6, [r4, #18]	@ zero_extendqisi2
 5916 00ba E77C     		ldrb	r7, [r4, #19]	@ zero_extendqisi2
 5917 00bc 3946     		mov	r1, r7
 5918 00be 3046     		mov	r0, r6
 5919 00c0 FFF7FEFF 		bl	BCD_Verity
 5920              	.LVL713:
 5921 00c4 C8B1     		cbz	r0, .L385
 631:../user/source/DLT645.c ****                 if ((C_Voltage > Voltage_MAX) || (C_Voltage < Voltage_MIN)) //ĞŞ¸ÄCÏàµçÑ¹
 5922              		.loc 1 631 0
 5923 00c6 3946     		mov	r1, r7
 5924 00c8 3046     		mov	r0, r6
 5925 00ca FFF7FEFF 		bl	Get_Voltage
 5926              	.LVL714:
 5927 00ce 4C4B     		ldr	r3, .L400+20
 5928 00d0 1860     		str	r0, [r3]
 632:../user/source/DLT645.c ****                 {
 5929              		.loc 1 632 0
 5930 00d2 484B     		ldr	r3, .L400+8
 5931 00d4 1B68     		ldr	r3, [r3]
 5932 00d6 9842     		cmp	r0, r3
 5933 00d8 03DC     		bgt	.L390
 632:../user/source/DLT645.c ****                 {
 5934              		.loc 1 632 0 is_stmt 0 discriminator 1
 5935 00da 474B     		ldr	r3, .L400+12
 5936 00dc 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 170


 5937 00de 9842     		cmp	r0, r3
 5938 00e0 0BDA     		bge	.L385
 5939              	.L390:
 634:../user/source/DLT645.c ****                     pucBuffer[18] = GetLowByte(C_Voltage);
 5940              		.loc 1 634 0 is_stmt 1
 5941 00e2 FFF7FEFF 		bl	Voltage_Modifier_Method
 5942              	.LVL715:
 5943 00e6 0646     		mov	r6, r0
 5944 00e8 454B     		ldr	r3, .L400+20
 5945 00ea 1860     		str	r0, [r3]
 635:../user/source/DLT645.c ****                     pucBuffer[19] = GetHighByte(C_Voltage);
 5946              		.loc 1 635 0
 5947 00ec FFF7FEFF 		bl	GetLowByte
 5948              	.LVL716:
 5949 00f0 A074     		strb	r0, [r4, #18]
 636:../user/source/DLT645.c ****                 }
 5950              		.loc 1 636 0
 5951 00f2 3046     		mov	r0, r6
 5952 00f4 FFF7FEFF 		bl	GetHighByte
 5953              	.LVL717:
 5954 00f8 E074     		strb	r0, [r4, #19]
 5955              	.L385:
 640:../user/source/DLT645.c ****         {
 5956              		.loc 1 640 0
 5957 00fa 342D     		cmp	r5, #52
 5958 00fc 20D1     		bne	.L391
 642:../user/source/DLT645.c ****             {
 5959              		.loc 1 642 0
 5960 00fe A67B     		ldrb	r6, [r4, #14]	@ zero_extendqisi2
 5961 0100 E77B     		ldrb	r7, [r4, #15]	@ zero_extendqisi2
 5962 0102 3946     		mov	r1, r7
 5963 0104 3046     		mov	r0, r6
 5964 0106 FFF7FEFF 		bl	BCD_Verity
 5965              	.LVL718:
 5966 010a C8B1     		cbz	r0, .L391
 644:../user/source/DLT645.c ****                 if ((A_Voltage > Voltage_MAX) || (A_Voltage < Voltage_MIN)) //ĞŞ¸ÄAÏàµçÑ¹
 5967              		.loc 1 644 0
 5968 010c 3946     		mov	r1, r7
 5969 010e 3046     		mov	r0, r6
 5970 0110 FFF7FEFF 		bl	Get_Voltage
 5971              	.LVL719:
 5972 0114 364B     		ldr	r3, .L400+4
 5973 0116 1860     		str	r0, [r3]
 645:../user/source/DLT645.c ****                 {
 5974              		.loc 1 645 0
 5975 0118 364B     		ldr	r3, .L400+8
 5976 011a 1B68     		ldr	r3, [r3]
 5977 011c 9842     		cmp	r0, r3
 5978 011e 03DC     		bgt	.L392
 645:../user/source/DLT645.c ****                 {
 5979              		.loc 1 645 0 is_stmt 0 discriminator 1
 5980 0120 354B     		ldr	r3, .L400+12
 5981 0122 1B68     		ldr	r3, [r3]
 5982 0124 9842     		cmp	r0, r3
 5983 0126 0BDA     		bge	.L391
 5984              	.L392:
 647:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(A_Voltage);
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 171


 5985              		.loc 1 647 0 is_stmt 1
 5986 0128 FFF7FEFF 		bl	Voltage_Modifier_Method
 5987              	.LVL720:
 5988 012c 0646     		mov	r6, r0
 5989 012e 304B     		ldr	r3, .L400+4
 5990 0130 1860     		str	r0, [r3]
 648:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(A_Voltage);
 5991              		.loc 1 648 0
 5992 0132 FFF7FEFF 		bl	GetLowByte
 5993              	.LVL721:
 5994 0136 A073     		strb	r0, [r4, #14]
 649:../user/source/DLT645.c ****                 }
 5995              		.loc 1 649 0
 5996 0138 3046     		mov	r0, r6
 5997 013a FFF7FEFF 		bl	GetHighByte
 5998              	.LVL722:
 5999 013e E073     		strb	r0, [r4, #15]
 6000              	.L391:
 653:../user/source/DLT645.c ****         {
 6001              		.loc 1 653 0
 6002 0140 352D     		cmp	r5, #53
 6003 0142 20D1     		bne	.L393
 655:../user/source/DLT645.c ****             {
 6004              		.loc 1 655 0
 6005 0144 A67B     		ldrb	r6, [r4, #14]	@ zero_extendqisi2
 6006 0146 E77B     		ldrb	r7, [r4, #15]	@ zero_extendqisi2
 6007 0148 3946     		mov	r1, r7
 6008 014a 3046     		mov	r0, r6
 6009 014c FFF7FEFF 		bl	BCD_Verity
 6010              	.LVL723:
 6011 0150 C8B1     		cbz	r0, .L393
 657:../user/source/DLT645.c ****                 if ((B_Voltage > Voltage_MAX) || (B_Voltage < Voltage_MIN)) //ĞŞ¸ÄBÏàµçÑ¹
 6012              		.loc 1 657 0
 6013 0152 3946     		mov	r1, r7
 6014 0154 3046     		mov	r0, r6
 6015 0156 FFF7FEFF 		bl	Get_Voltage
 6016              	.LVL724:
 6017 015a 284B     		ldr	r3, .L400+16
 6018 015c 1860     		str	r0, [r3]
 658:../user/source/DLT645.c ****                 {
 6019              		.loc 1 658 0
 6020 015e 254B     		ldr	r3, .L400+8
 6021 0160 1B68     		ldr	r3, [r3]
 6022 0162 9842     		cmp	r0, r3
 6023 0164 03DC     		bgt	.L394
 658:../user/source/DLT645.c ****                 {
 6024              		.loc 1 658 0 is_stmt 0 discriminator 1
 6025 0166 244B     		ldr	r3, .L400+12
 6026 0168 1B68     		ldr	r3, [r3]
 6027 016a 9842     		cmp	r0, r3
 6028 016c 0BDA     		bge	.L393
 6029              	.L394:
 660:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(B_Voltage);
 6030              		.loc 1 660 0 is_stmt 1
 6031 016e FFF7FEFF 		bl	Voltage_Modifier_Method
 6032              	.LVL725:
 6033 0172 0646     		mov	r6, r0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 172


 6034 0174 214B     		ldr	r3, .L400+16
 6035 0176 1860     		str	r0, [r3]
 661:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(B_Voltage);
 6036              		.loc 1 661 0
 6037 0178 FFF7FEFF 		bl	GetLowByte
 6038              	.LVL726:
 6039 017c A073     		strb	r0, [r4, #14]
 662:../user/source/DLT645.c ****                 }
 6040              		.loc 1 662 0
 6041 017e 3046     		mov	r0, r6
 6042 0180 FFF7FEFF 		bl	GetHighByte
 6043              	.LVL727:
 6044 0184 E073     		strb	r0, [r4, #15]
 6045              	.L393:
 666:../user/source/DLT645.c ****         {
 6046              		.loc 1 666 0
 6047 0186 362D     		cmp	r5, #54
 6048 0188 20D1     		bne	.L395
 668:../user/source/DLT645.c ****             {
 6049              		.loc 1 668 0
 6050 018a A57B     		ldrb	r5, [r4, #14]	@ zero_extendqisi2
 6051 018c E67B     		ldrb	r6, [r4, #15]	@ zero_extendqisi2
 6052 018e 3146     		mov	r1, r6
 6053 0190 2846     		mov	r0, r5
 6054 0192 FFF7FEFF 		bl	BCD_Verity
 6055              	.LVL728:
 6056 0196 C8B1     		cbz	r0, .L395
 670:../user/source/DLT645.c ****                 if ((C_Voltage > Voltage_MAX) || (C_Voltage < Voltage_MIN)) //ĞŞ¸ÄCÏàµçÑ¹
 6057              		.loc 1 670 0
 6058 0198 3146     		mov	r1, r6
 6059 019a 2846     		mov	r0, r5
 6060 019c FFF7FEFF 		bl	Get_Voltage
 6061              	.LVL729:
 6062 01a0 174B     		ldr	r3, .L400+20
 6063 01a2 1860     		str	r0, [r3]
 671:../user/source/DLT645.c ****                 {
 6064              		.loc 1 671 0
 6065 01a4 134B     		ldr	r3, .L400+8
 6066 01a6 1B68     		ldr	r3, [r3]
 6067 01a8 9842     		cmp	r0, r3
 6068 01aa 03DC     		bgt	.L396
 671:../user/source/DLT645.c ****                 {
 6069              		.loc 1 671 0 is_stmt 0 discriminator 1
 6070 01ac 124B     		ldr	r3, .L400+12
 6071 01ae 1B68     		ldr	r3, [r3]
 6072 01b0 9842     		cmp	r0, r3
 6073 01b2 0BDA     		bge	.L395
 6074              	.L396:
 673:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(C_Voltage);
 6075              		.loc 1 673 0 is_stmt 1
 6076 01b4 FFF7FEFF 		bl	Voltage_Modifier_Method
 6077              	.LVL730:
 6078 01b8 0546     		mov	r5, r0
 6079 01ba 114B     		ldr	r3, .L400+20
 6080 01bc 1860     		str	r0, [r3]
 674:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(C_Voltage);
 6081              		.loc 1 674 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 173


 6082 01be FFF7FEFF 		bl	GetLowByte
 6083              	.LVL731:
 6084 01c2 A073     		strb	r0, [r4, #14]
 675:../user/source/DLT645.c ****                 }
 6085              		.loc 1 675 0
 6086 01c4 2846     		mov	r0, r5
 6087 01c6 FFF7FEFF 		bl	GetHighByte
 6088              	.LVL732:
 6089 01ca E073     		strb	r0, [r4, #15]
 6090              	.L395:
 680:../user/source/DLT645.c ****         {
 6091              		.loc 1 680 0
 6092 01cc 0023     		movs	r3, #0
 597:../user/source/DLT645.c ****     uint8_t i = 0;
 6093              		.loc 1 597 0
 6094 01ce 1A46     		mov	r2, r3
 680:../user/source/DLT645.c ****         {
 6095              		.loc 1 680 0
 6096 01d0 04E0     		b	.L397
 6097              	.LVL733:
 6098              	.L398:
 682:../user/source/DLT645.c ****         }
 6099              		.loc 1 682 0 discriminator 3
 6100 01d2 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 6101 01d4 0A44     		add	r2, r2, r1
 6102              	.LVL734:
 6103 01d6 D2B2     		uxtb	r2, r2
 6104              	.LVL735:
 680:../user/source/DLT645.c ****         {
 6105              		.loc 1 680 0 discriminator 3
 6106 01d8 0133     		adds	r3, r3, #1
 6107              	.LVL736:
 6108 01da DBB2     		uxtb	r3, r3
 6109              	.LVL737:
 6110              	.L397:
 680:../user/source/DLT645.c ****         {
 6111              		.loc 1 680 0 is_stmt 0 discriminator 1
 6112 01dc 0949     		ldr	r1, .L400+24
 6113 01de 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 6114 01e0 01F10A00 		add	r0, r1, #10
 6115 01e4 8342     		cmp	r3, r0
 6116 01e6 F4DB     		blt	.L398
 684:../user/source/DLT645.c ****     }
 6117              		.loc 1 684 0 is_stmt 1
 6118 01e8 2254     		strb	r2, [r4, r0]
 6119              	.LVL738:
 6120              	.L383:
 6121 01ea F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6122              	.L401:
 6123              		.align	2
 6124              	.L400:
 6125 01ec 00000000 		.word	.LANCHOR5
 6126 01f0 00000000 		.word	.LANCHOR4
 6127 01f4 00000000 		.word	Voltage_MAX
 6128 01f8 00000000 		.word	Voltage_MIN
 6129 01fc 00000000 		.word	.LANCHOR8
 6130 0200 00000000 		.word	.LANCHOR9
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 174


 6131 0204 00000000 		.word	.LANCHOR0
 6132              		.cfi_endproc
 6133              	.LFE120:
 6135              		.section	.text.vVoltageHandle,"ax",%progbits
 6136              		.align	2
 6137              		.global	vVoltageHandle
 6138              		.thumb
 6139              		.thumb_func
 6141              	vVoltageHandle:
 6142              	.LFB119:
 577:../user/source/DLT645.c ****     /*µÈ´ıµçÑ¹»ØÖ¡×´Ì¬ÇåÎ»*/
 6143              		.loc 1 577 0
 6144              		.cfi_startproc
 6145              		@ args = 0, pretend = 0, frame = 0
 6146              		@ frame_needed = 0, uses_anonymous_args = 0
 6147              	.LVL739:
 6148 0000 08B5     		push	{r3, lr}
 6149              	.LCFI49:
 6150              		.cfi_def_cfa_offset 8
 6151              		.cfi_offset 3, -8
 6152              		.cfi_offset 14, -4
 579:../user/source/DLT645.c ****     /*¼ÆÊ±Æ÷¸´Î»*/
 6153              		.loc 1 579 0
 6154 0002 0122     		movs	r2, #1
 6155 0004 044B     		ldr	r3, .L404
 6156 0006 1A70     		strb	r2, [r3]
 581:../user/source/DLT645.c ****     uwTime2FramesCounter = 0;
 6157              		.loc 1 581 0
 6158 0008 0023     		movs	r3, #0
 6159 000a 044A     		ldr	r2, .L404+4
 6160 000c 1370     		strb	r3, [r2]
 582:../user/source/DLT645.c ****     /*µçÑ¹Ö¡ÅĞ¶Ï´¦Àí*/
 6161              		.loc 1 582 0
 6162 000e 044A     		ldr	r2, .L404+8
 6163 0010 1380     		strh	r3, [r2]	@ movhi
 584:../user/source/DLT645.c **** }
 6164              		.loc 1 584 0
 6165 0012 FFF7FEFF 		bl	Voltage_Modifier
 6166              	.LVL740:
 6167 0016 08BD     		pop	{r3, pc}
 6168              	.L405:
 6169              		.align	2
 6170              	.L404:
 6171 0018 00000000 		.word	Voltage_Frame_Status
 6172 001c 00000000 		.word	blFramesCounterStatus
 6173 0020 00000000 		.word	uwTime2FramesCounter
 6174              		.cfi_endproc
 6175              	.LFE119:
 6177              		.section	.text.vCurrent_Limit_DefaultSet,"ax",%progbits
 6178              		.align	2
 6179              		.global	vCurrent_Limit_DefaultSet
 6180              		.thumb
 6181              		.thumb_func
 6183              	vCurrent_Limit_DefaultSet:
 6184              	.LFB132:
1316:../user/source/DLT645.c ****     uint32_t uwLimit;
 6185              		.loc 1 1316 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 175


 6186              		.cfi_startproc
 6187              		@ args = 0, pretend = 0, frame = 0
 6188              		@ frame_needed = 0, uses_anonymous_args = 0
 6189 0000 08B5     		push	{r3, lr}
 6190              	.LCFI50:
 6191              		.cfi_def_cfa_offset 8
 6192              		.cfi_offset 3, -8
 6193              		.cfi_offset 14, -4
1331:../user/source/DLT645.c ****     TransFormer.rated_current = 288000;
 6194              		.loc 1 1331 0
 6195 0002 174B     		ldr	r3, .L412
 6196 0004 C822     		movs	r2, #200
 6197 0006 1A60     		str	r2, [r3]
1332:../user/source/DLT645.c **** #endif
 6198              		.loc 1 1332 0
 6199 0008 164A     		ldr	r2, .L412+4
 6200 000a 5A60     		str	r2, [r3, #4]
1340:../user/source/DLT645.c ****     /*±ä±ÈÎŞĞ§ £¬ÔòÎª³õ´ÎÉÏµç*/
 6201              		.loc 1 1340 0
 6202 000c 1648     		ldr	r0, .L412+8
 6203 000e FFF7FEFF 		bl	Flash_Read_Word
 6204              	.LVL741:
1342:../user/source/DLT645.c ****     {
 6205              		.loc 1 1342 0
 6206 0012 B0F1FF3F 		cmp	r0, #-1
 6207 0016 06D1     		bne	.L407
1345:../user/source/DLT645.c ****         /*´æ´¢CTÖµ*/
 6208              		.loc 1 1345 0
 6209 0018 5021     		movs	r1, #80
 6210 001a 114B     		ldr	r3, .L412
 6211 001c 9960     		str	r1, [r3, #8]
1347:../user/source/DLT645.c ****     }
 6212              		.loc 1 1347 0
 6213 001e 1248     		ldr	r0, .L412+8
 6214              	.LVL742:
 6215 0020 FFF7FEFF 		bl	Flash_Write_Word
 6216              	.LVL743:
 6217 0024 01E0     		b	.L408
 6218              	.LVL744:
 6219              	.L407:
1352:../user/source/DLT645.c ****     }
 6220              		.loc 1 1352 0
 6221 0026 0E4B     		ldr	r3, .L412
 6222 0028 9860     		str	r0, [r3, #8]
 6223              	.LVL745:
 6224              	.L408:
1355:../user/source/DLT645.c ****     /*²ÎÊıÎŞĞ§£¬³õ´ÎÉÏµç*/
 6225              		.loc 1 1355 0
 6226 002a 1048     		ldr	r0, .L412+12
 6227 002c FFF7FEFF 		bl	Flash_Read_Word
 6228              	.LVL746:
1357:../user/source/DLT645.c ****     {
 6229              		.loc 1 1357 0
 6230 0030 B0F1FF3F 		cmp	r0, #-1
 6231 0034 10D1     		bne	.L409
1360:../user/source/DLT645.c ****         /*´æ´¢µçÁ÷ÉÏÏŞÖµ*/
 6232              		.loc 1 1360 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 176


 6233 0036 0A48     		ldr	r0, .L412
 6234              	.LVL747:
 6235 0038 4368     		ldr	r3, [r0, #4]
 6236 003a 8268     		ldr	r2, [r0, #8]
 6237 003c B3FBF2F2 		udiv	r2, r3, r2
 6238 0040 02EB4202 		add	r2, r2, r2, lsl #1
 6239 0044 D300     		lsls	r3, r2, #3
 6240 0046 0A49     		ldr	r1, .L412+16
 6241 0048 A1FB0331 		umull	r3, r1, r1, r3
 6242 004c C908     		lsrs	r1, r1, #3
 6243 004e C160     		str	r1, [r0, #12]
1362:../user/source/DLT645.c ****     }
 6244              		.loc 1 1362 0
 6245 0050 0648     		ldr	r0, .L412+12
 6246 0052 FFF7FEFF 		bl	Flash_Write_Word
 6247              	.LVL748:
 6248 0056 08BD     		pop	{r3, pc}
 6249              	.LVL749:
 6250              	.L409:
1367:../user/source/DLT645.c ****     }
 6251              		.loc 1 1367 0
 6252 0058 014B     		ldr	r3, .L412
 6253 005a D860     		str	r0, [r3, #12]
 6254 005c 08BD     		pop	{r3, pc}
 6255              	.L413:
 6256 005e 00BF     		.align	2
 6257              	.L412:
 6258 0060 00000000 		.word	TransFormer
 6259 0064 00650400 		.word	288000
 6260 0068 20EF0108 		.word	134344480
 6261 006c 1CEF0108 		.word	134344476
 6262 0070 CDCCCCCC 		.word	-858993459
 6263              		.cfi_endproc
 6264              	.LFE132:
 6266              		.section	.text.vCurrentDirect_Modify,"ax",%progbits
 6267              		.align	2
 6268              		.global	vCurrentDirect_Modify
 6269              		.thumb
 6270              		.thumb_func
 6272              	vCurrentDirect_Modify:
 6273              	.LFB134:
1483:../user/source/DLT645.c ****     uint8_t i = 0;
 6274              		.loc 1 1483 0
 6275              		.cfi_startproc
 6276              		@ args = 0, pretend = 0, frame = 0
 6277              		@ frame_needed = 0, uses_anonymous_args = 0
 6278              		@ link register save eliminated.
 6279              	.LVL750:
1486:../user/source/DLT645.c ****     {
 6280              		.loc 1 1486 0
 6281 0000 C27A     		ldrb	r2, [r0, #11]	@ zero_extendqisi2
 6282 0002 323A     		subs	r2, r2, #50
 6283 0004 042A     		cmp	r2, #4
 6284 0006 5BD8     		bhi	.L414
 6285 0008 DFE802F0 		tbb	[pc, r2]
 6286              	.L417:
 6287 000c 03       		.byte	(.L416-.L417)/2
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 177


 6288 000d 5A       		.byte	(.L414-.L417)/2
 6289 000e 22       		.byte	(.L418-.L417)/2
 6290 000f 35       		.byte	(.L419-.L417)/2
 6291 0010 48       		.byte	(.L420-.L417)/2
 6292 0011 00       		.p2align 1
 6293              	.L416:
1490:../user/source/DLT645.c ****         pucBuffer[19] = ((pucBuffer[19] - 0x33) & 0xEF) + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ
 6294              		.loc 1 1490 0
 6295 0012 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 6296 0014 333A     		subs	r2, r2, #51
 6297 0016 22F01002 		bic	r2, r2, #16
 6298 001a 3332     		adds	r2, r2, #51
 6299 001c 0274     		strb	r2, [r0, #16]
1491:../user/source/DLT645.c ****         pucBuffer[22] = ((pucBuffer[22] - 0x33) & 0xEF) + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ
 6300              		.loc 1 1491 0
 6301 001e C27C     		ldrb	r2, [r0, #19]	@ zero_extendqisi2
 6302 0020 333A     		subs	r2, r2, #51
 6303 0022 22F01002 		bic	r2, r2, #16
 6304 0026 3332     		adds	r2, r2, #51
 6305 0028 C274     		strb	r2, [r0, #19]
1492:../user/source/DLT645.c ****         for (i = 0; i < 23; i++)                                //Êı¾İÓò³¤¶È23
 6306              		.loc 1 1492 0
 6307 002a 827D     		ldrb	r2, [r0, #22]	@ zero_extendqisi2
 6308 002c 333A     		subs	r2, r2, #51
 6309 002e 22F01002 		bic	r2, r2, #16
 6310 0032 3332     		adds	r2, r2, #51
 6311 0034 8275     		strb	r2, [r0, #22]
1493:../user/source/DLT645.c ****         {
 6312              		.loc 1 1493 0
 6313 0036 0022     		movs	r2, #0
 6314 0038 04E0     		b	.L421
 6315              	.LVL751:
 6316              	.L422:
1495:../user/source/DLT645.c ****         }
 6317              		.loc 1 1495 0 discriminator 3
 6318 003a 815C     		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 6319 003c 0B44     		add	r3, r3, r1
 6320              	.LVL752:
 6321 003e DBB2     		uxtb	r3, r3
 6322              	.LVL753:
1493:../user/source/DLT645.c ****         {
 6323              		.loc 1 1493 0 discriminator 3
 6324 0040 0132     		adds	r2, r2, #1
 6325              	.LVL754:
 6326 0042 D2B2     		uxtb	r2, r2
 6327              	.LVL755:
 6328              	.L421:
1493:../user/source/DLT645.c ****         {
 6329              		.loc 1 1493 0 is_stmt 0 discriminator 1
 6330 0044 162A     		cmp	r2, #22
 6331 0046 F8D9     		bls	.L422
1497:../user/source/DLT645.c ****         pucBuffer[24] = 0x16;
 6332              		.loc 1 1497 0 is_stmt 1
 6333 0048 C375     		strb	r3, [r0, #23]
1498:../user/source/DLT645.c ****         break;
 6334              		.loc 1 1498 0
 6335 004a 1623     		movs	r3, #22
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 178


 6336              	.LVL756:
 6337 004c 0376     		strb	r3, [r0, #24]
1499:../user/source/DLT645.c ****     }
 6338              		.loc 1 1499 0
 6339 004e 7047     		bx	lr
 6340              	.LVL757:
 6341              	.L418:
1503:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                                //Êı¾İÓò³¤¶È17
 6342              		.loc 1 1503 0
 6343 0050 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 6344 0052 333A     		subs	r2, r2, #51
 6345 0054 22F01002 		bic	r2, r2, #16
 6346 0058 3332     		adds	r2, r2, #51
 6347 005a 0274     		strb	r2, [r0, #16]
1504:../user/source/DLT645.c ****         {
 6348              		.loc 1 1504 0
 6349 005c 0022     		movs	r2, #0
 6350 005e 04E0     		b	.L423
 6351              	.LVL758:
 6352              	.L424:
1506:../user/source/DLT645.c ****         }
 6353              		.loc 1 1506 0 discriminator 3
 6354 0060 815C     		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 6355 0062 0B44     		add	r3, r3, r1
 6356              	.LVL759:
 6357 0064 DBB2     		uxtb	r3, r3
 6358              	.LVL760:
1504:../user/source/DLT645.c ****         {
 6359              		.loc 1 1504 0 discriminator 3
 6360 0066 0132     		adds	r2, r2, #1
 6361              	.LVL761:
 6362 0068 D2B2     		uxtb	r2, r2
 6363              	.LVL762:
 6364              	.L423:
1504:../user/source/DLT645.c ****         {
 6365              		.loc 1 1504 0 is_stmt 0 discriminator 1
 6366 006a 102A     		cmp	r2, #16
 6367 006c F8D9     		bls	.L424
1508:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
 6368              		.loc 1 1508 0 is_stmt 1
 6369 006e 4374     		strb	r3, [r0, #17]
1509:../user/source/DLT645.c ****         break;
 6370              		.loc 1 1509 0
 6371 0070 1623     		movs	r3, #22
 6372              	.LVL763:
 6373 0072 8374     		strb	r3, [r0, #18]
1510:../user/source/DLT645.c ****     }
 6374              		.loc 1 1510 0
 6375 0074 7047     		bx	lr
 6376              	.LVL764:
 6377              	.L419:
1514:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                                //Êı¾İÓò³¤¶È17
 6378              		.loc 1 1514 0
 6379 0076 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 6380 0078 333A     		subs	r2, r2, #51
 6381 007a 22F01002 		bic	r2, r2, #16
 6382 007e 3332     		adds	r2, r2, #51
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 179


 6383 0080 0274     		strb	r2, [r0, #16]
1515:../user/source/DLT645.c ****         {
 6384              		.loc 1 1515 0
 6385 0082 0022     		movs	r2, #0
 6386 0084 04E0     		b	.L425
 6387              	.LVL765:
 6388              	.L426:
1517:../user/source/DLT645.c ****         }
 6389              		.loc 1 1517 0 discriminator 3
 6390 0086 815C     		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 6391 0088 0B44     		add	r3, r3, r1
 6392              	.LVL766:
 6393 008a DBB2     		uxtb	r3, r3
 6394              	.LVL767:
1515:../user/source/DLT645.c ****         {
 6395              		.loc 1 1515 0 discriminator 3
 6396 008c 0132     		adds	r2, r2, #1
 6397              	.LVL768:
 6398 008e D2B2     		uxtb	r2, r2
 6399              	.LVL769:
 6400              	.L425:
1515:../user/source/DLT645.c ****         {
 6401              		.loc 1 1515 0 is_stmt 0 discriminator 1
 6402 0090 102A     		cmp	r2, #16
 6403 0092 F8D9     		bls	.L426
1519:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
 6404              		.loc 1 1519 0 is_stmt 1
 6405 0094 4374     		strb	r3, [r0, #17]
1520:../user/source/DLT645.c ****         break;
 6406              		.loc 1 1520 0
 6407 0096 1623     		movs	r3, #22
 6408              	.LVL770:
 6409 0098 8374     		strb	r3, [r0, #18]
1521:../user/source/DLT645.c ****     }
 6410              		.loc 1 1521 0
 6411 009a 7047     		bx	lr
 6412              	.LVL771:
 6413              	.L420:
1525:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                                //Êı¾İÓò³¤¶È16
 6414              		.loc 1 1525 0
 6415 009c 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 6416 009e 333A     		subs	r2, r2, #51
 6417 00a0 22F01002 		bic	r2, r2, #16
 6418 00a4 3332     		adds	r2, r2, #51
 6419 00a6 0274     		strb	r2, [r0, #16]
1526:../user/source/DLT645.c ****         {
 6420              		.loc 1 1526 0
 6421 00a8 0022     		movs	r2, #0
 6422 00aa 04E0     		b	.L427
 6423              	.LVL772:
 6424              	.L428:
1528:../user/source/DLT645.c ****         }
 6425              		.loc 1 1528 0 discriminator 3
 6426 00ac 815C     		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 6427 00ae 0B44     		add	r3, r3, r1
 6428              	.LVL773:
 6429 00b0 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 180


 6430              	.LVL774:
1526:../user/source/DLT645.c ****         {
 6431              		.loc 1 1526 0 discriminator 3
 6432 00b2 0132     		adds	r2, r2, #1
 6433              	.LVL775:
 6434 00b4 D2B2     		uxtb	r2, r2
 6435              	.LVL776:
 6436              	.L427:
1526:../user/source/DLT645.c ****         {
 6437              		.loc 1 1526 0 is_stmt 0 discriminator 1
 6438 00b6 102A     		cmp	r2, #16
 6439 00b8 F8D9     		bls	.L428
1530:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
 6440              		.loc 1 1530 0 is_stmt 1
 6441 00ba 4374     		strb	r3, [r0, #17]
1531:../user/source/DLT645.c ****         break;
 6442              		.loc 1 1531 0
 6443 00bc 1623     		movs	r3, #22
 6444              	.LVL777:
 6445 00be 8374     		strb	r3, [r0, #18]
 6446              	.LVL778:
 6447              	.L414:
 6448 00c0 7047     		bx	lr
 6449              		.cfi_endproc
 6450              	.LFE134:
 6452 00c2 00BF     		.section	.text.vCurrent_Count_Clear,"ax",%progbits
 6453              		.align	2
 6454              		.global	vCurrent_Count_Clear
 6455              		.thumb
 6456              		.thumb_func
 6458              	vCurrent_Count_Clear:
 6459              	.LFB140:
1783:../user/source/DLT645.c ****     Acurrent.count = 0;
 6460              		.loc 1 1783 0
 6461              		.cfi_startproc
 6462              		@ args = 0, pretend = 0, frame = 0
 6463              		@ frame_needed = 0, uses_anonymous_args = 0
 6464              		@ link register save eliminated.
1784:../user/source/DLT645.c ****     Bcurrent.count = 0;
 6465              		.loc 1 1784 0
 6466 0000 0023     		movs	r3, #0
 6467 0002 034A     		ldr	r2, .L430
 6468 0004 1371     		strb	r3, [r2, #4]
1785:../user/source/DLT645.c ****     Ccurrent.count = 0;
 6469              		.loc 1 1785 0
 6470 0006 034A     		ldr	r2, .L430+4
 6471 0008 1371     		strb	r3, [r2, #4]
1786:../user/source/DLT645.c **** }
 6472              		.loc 1 1786 0
 6473 000a 034A     		ldr	r2, .L430+8
 6474 000c 1371     		strb	r3, [r2, #4]
 6475 000e 7047     		bx	lr
 6476              	.L431:
 6477              		.align	2
 6478              	.L430:
 6479 0010 00000000 		.word	.LANCHOR1
 6480 0014 00000000 		.word	.LANCHOR2
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 181


 6481 0018 00000000 		.word	.LANCHOR3
 6482              		.cfi_endproc
 6483              	.LFE140:
 6485              		.section	.text.vEnergy_Modify_Init,"ax",%progbits
 6486              		.align	2
 6487              		.global	vEnergy_Modify_Init
 6488              		.thumb
 6489              		.thumb_func
 6491              	vEnergy_Modify_Init:
 6492              	.LFB144:
1845:../user/source/DLT645.c ****     uint8_t tmp;
 6493              		.loc 1 1845 0
 6494              		.cfi_startproc
 6495              		@ args = 0, pretend = 0, frame = 0
 6496              		@ frame_needed = 0, uses_anonymous_args = 0
 6497 0000 08B5     		push	{r3, lr}
 6498              	.LCFI51:
 6499              		.cfi_def_cfa_offset 8
 6500              		.cfi_offset 3, -8
 6501              		.cfi_offset 14, -4
1848:../user/source/DLT645.c ****     tmp = EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR);
 6502              		.loc 1 1848 0
 6503 0002 0848     		ldr	r0, .L436
 6504 0004 FFF7FEFF 		bl	EEProm_Read
 6505              	.LVL779:
 6506 0008 074B     		ldr	r3, .L436+4
 6507 000a 1870     		strb	r0, [r3]
1849:../user/source/DLT645.c ****     /*ÅĞ¶ÏflashÖĞÊÇ·ñÒÑ´æ´¢µçÑ¹ĞŞ¸Ä±ÈÀı*/
 6508              		.loc 1 1849 0
 6509 000c 0748     		ldr	r0, .L436+8
 6510 000e FFF7FEFF 		bl	EEProm_Read
 6511              	.LVL780:
1851:../user/source/DLT645.c ****     {
 6512              		.loc 1 1851 0
 6513 0012 FF28     		cmp	r0, #255
 6514 0014 03D1     		bne	.L433
1854:../user/source/DLT645.c ****     }
 6515              		.loc 1 1854 0
 6516 0016 5A22     		movs	r2, #90
 6517 0018 054B     		ldr	r3, .L436+12
 6518 001a 1A70     		strb	r2, [r3]
 6519 001c 08BD     		pop	{r3, pc}
 6520              	.L433:
1858:../user/source/DLT645.c ****     }
 6521              		.loc 1 1858 0
 6522 001e 044B     		ldr	r3, .L436+12
 6523 0020 1870     		strb	r0, [r3]
 6524 0022 08BD     		pop	{r3, pc}
 6525              	.L437:
 6526              		.align	2
 6527              	.L436:
 6528 0024 18EF0108 		.word	134344472
 6529 0028 00000000 		.word	.LANCHOR10
 6530 002c 10EF0108 		.word	134344464
 6531 0030 00000000 		.word	ucDayfrozen_Modify_Ratio
 6532              		.cfi_endproc
 6533              	.LFE144:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 182


 6535              		.global	__aeabi_uldivmod
 6536              		.section	.text.vNow_Frozen_Modify_Mothod,"ax",%progbits
 6537              		.align	2
 6538              		.global	vNow_Frozen_Modify_Mothod
 6539              		.thumb
 6540              		.thumb_func
 6542              	vNow_Frozen_Modify_Mothod:
 6543              	.LFB147:
1920:../user/source/DLT645.c ****     uint32_t RealValue;
 6544              		.loc 1 1920 0
 6545              		.cfi_startproc
 6546              		@ args = 0, pretend = 0, frame = 0
 6547              		@ frame_needed = 0, uses_anonymous_args = 0
 6548              	.LVL781:
 6549 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 6550              	.LCFI52:
 6551              		.cfi_def_cfa_offset 24
 6552              		.cfi_offset 4, -24
 6553              		.cfi_offset 5, -20
 6554              		.cfi_offset 6, -16
 6555              		.cfi_offset 7, -12
 6556              		.cfi_offset 8, -8
 6557              		.cfi_offset 14, -4
 6558 0004 0646     		mov	r6, r0
 6559 0006 8846     		mov	r8, r1
 6560 0008 1746     		mov	r7, r2
1925:../user/source/DLT645.c ****     Modified_Value = Flash_Read_Word(ModifiedValueAddr);
 6561              		.loc 1 1925 0
 6562 000a 0846     		mov	r0, r1
 6563              	.LVL782:
 6564 000c FFF7FEFF 		bl	Flash_Read_Word
 6565              	.LVL783:
 6566 0010 0546     		mov	r5, r0
 6567              	.LVL784:
1926:../user/source/DLT645.c ****     /*ÖÕ¶ËµÚÒ»´ÎÊ¹ÓÃ*/
 6568              		.loc 1 1926 0
 6569 0012 3846     		mov	r0, r7
 6570              	.LVL785:
 6571 0014 FFF7FEFF 		bl	Flash_Read_Word
 6572              	.LVL786:
1928:../user/source/DLT645.c ****     {
 6573              		.loc 1 1928 0
 6574 0018 B5F1FF3F 		cmp	r5, #-1
 6575 001c 03D0     		beq	.L439
 6576 001e 0446     		mov	r4, r0
1928:../user/source/DLT645.c ****     {
 6577              		.loc 1 1928 0 is_stmt 0 discriminator 1
 6578 0020 B0F1FF3F 		cmp	r0, #-1
 6579 0024 0AD1     		bne	.L440
 6580              	.L439:
1931:../user/source/DLT645.c ****         Flash_Write_Word(ModifiedValueAddr, nowenergy);
 6581              		.loc 1 1931 0 is_stmt 1
 6582 0026 3146     		mov	r1, r6
 6583 0028 4046     		mov	r0, r8
 6584              	.LVL787:
 6585 002a FFF7FEFF 		bl	Flash_Write_Word
 6586              	.LVL788:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 183


1932:../user/source/DLT645.c ****         /*²»ĞŞ¸Ä*/
 6587              		.loc 1 1932 0
 6588 002e 3146     		mov	r1, r6
 6589 0030 3846     		mov	r0, r7
 6590 0032 FFF7FEFF 		bl	Flash_Write_Word
 6591              	.LVL789:
1934:../user/source/DLT645.c ****     }
 6592              		.loc 1 1934 0
 6593 0036 3046     		mov	r0, r6
 6594 0038 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6595              	.LVL790:
 6596              	.L440:
1939:../user/source/DLT645.c ****         {
 6597              		.loc 1 1939 0
 6598 003c B542     		cmp	r5, r6
 6599 003e 0CD8     		bhi	.L444
1948:../user/source/DLT645.c ****         }
 6600              		.loc 1 1948 0
 6601 0040 751B     		subs	r5, r6, r5
 6602              	.LVL791:
 6603 0042 114B     		ldr	r3, .L446
 6604 0044 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6605              	.LVL792:
 6606 0046 A0FB0501 		umull	r0, r1, r0, r5
 6607 004a 6422     		movs	r2, #100
 6608 004c 0023     		movs	r3, #0
 6609 004e 3230     		adds	r0, r0, #50
 6610 0050 41F10001 		adc	r1, r1, #0
 6611 0054 FFF7FEFF 		bl	__aeabi_uldivmod
 6612              	.LVL793:
 6613 0058 00E0     		b	.L442
 6614              	.LVL794:
 6615              	.L444:
1943:../user/source/DLT645.c ****         }
 6616              		.loc 1 1943 0
 6617 005a 0020     		movs	r0, #0
 6618              	.LVL795:
 6619              	.L442:
1950:../user/source/DLT645.c ****         /*ÀÛ¼ÆÖµÒç³öºó¹éÁã*/
 6620              		.loc 1 1950 0
 6621 005c 0444     		add	r4, r4, r0
 6622              	.LVL796:
1952:../user/source/DLT645.c ****         /*½«ÉÏËÍÖµ´æ´¢ÎªÕæÊµÖµ*/
 6623              		.loc 1 1952 0
 6624 005e 0B4B     		ldr	r3, .L446+4
 6625 0060 9C42     		cmp	r4, r3
 6626 0062 05D9     		bls	.L443
1952:../user/source/DLT645.c ****         /*½«ÉÏËÍÖµ´æ´¢ÎªÕæÊµÖµ*/
 6627              		.loc 1 1952 0 is_stmt 0 discriminator 1
 6628 0064 04F17A44 		add	r4, r4, #-100663296
 6629              	.LVL797:
 6630 0068 04F52124 		add	r4, r4, #659456
 6631              	.LVL798:
 6632 006c 04F60174 		addw	r4, r4, #3841
 6633              	.LVL799:
 6634              	.L443:
1954:../user/source/DLT645.c ****         /*ĞÂµÄĞŞ¸ÄÖµ¸²¸Ç¾ÉÖµ´æ´¢*/
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 184


 6635              		.loc 1 1954 0 is_stmt 1 discriminator 4
 6636 0070 3146     		mov	r1, r6
 6637 0072 4046     		mov	r0, r8
 6638 0074 FFF7FEFF 		bl	Flash_Write_Word
 6639              	.LVL800:
1956:../user/source/DLT645.c ****         /*·µ»ØĞŞ¸ÄÖµ*/
 6640              		.loc 1 1956 0 discriminator 4
 6641 0078 2146     		mov	r1, r4
 6642 007a 3846     		mov	r0, r7
 6643 007c FFF7FEFF 		bl	Flash_Write_Word
 6644              	.LVL801:
1958:../user/source/DLT645.c ****     }
 6645              		.loc 1 1958 0 discriminator 4
 6646 0080 2046     		mov	r0, r4
1960:../user/source/DLT645.c **** 
 6647              		.loc 1 1960 0 discriminator 4
 6648 0082 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6649              	.LVL802:
 6650              	.L447:
 6651 0086 00BF     		.align	2
 6652              	.L446:
 6653 0088 00000000 		.word	ucDayfrozen_Modify_Ratio
 6654 008c FFE0F505 		.word	99999999
 6655              		.cfi_endproc
 6656              	.LFE147:
 6658              		.section	.text.vNowEnergy_Modifier,"ax",%progbits
 6659              		.align	2
 6660              		.global	vNowEnergy_Modifier
 6661              		.thumb
 6662              		.thumb_func
 6664              	vNowEnergy_Modifier:
 6665              	.LFB148:
1979:../user/source/DLT645.c ****     uint16_t i;
 6666              		.loc 1 1979 0
 6667              		.cfi_startproc
 6668              		@ args = 0, pretend = 0, frame = 0
 6669              		@ frame_needed = 0, uses_anonymous_args = 0
 6670              	.LVL803:
1986:../user/source/DLT645.c ****         return;
 6671              		.loc 1 1986 0
 6672 0000 834B     		ldr	r3, .L471
 6673 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6674 0004 002B     		cmp	r3, #0
 6675 0006 00F00181 		beq	.L470
1979:../user/source/DLT645.c ****     uint16_t i;
 6676              		.loc 1 1979 0
 6677 000a 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 6678              	.LCFI53:
 6679              		.cfi_def_cfa_offset 28
 6680              		.cfi_offset 4, -28
 6681              		.cfi_offset 5, -24
 6682              		.cfi_offset 6, -20
 6683              		.cfi_offset 7, -16
 6684              		.cfi_offset 8, -12
 6685              		.cfi_offset 9, -8
 6686              		.cfi_offset 14, -4
 6687 000e 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 185


 6688              	.LCFI54:
 6689              		.cfi_def_cfa_offset 40
 6690 0010 0446     		mov	r4, r0
1988:../user/source/DLT645.c ****     switch (pucBuffer[11])
 6691              		.loc 1 1988 0
 6692 0012 437C     		ldrb	r3, [r0, #17]	@ zero_extendqisi2
 6693 0014 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 6694 0016 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 6695 0018 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 6696              	.LVL804:
 6697 001a FFF7FEFF 		bl	Get_Energy
 6698              	.LVL805:
 6699 001e 0546     		mov	r5, r0
 6700              	.LVL806:
1989:../user/source/DLT645.c ****     {
 6701              		.loc 1 1989 0
 6702 0020 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 6703 0022 323B     		subs	r3, r3, #50
 6704 0024 052B     		cmp	r3, #5
 6705 0026 00F28180 		bhi	.L450
 6706 002a DFE803F0 		tbb	[pc, r3]
 6707              	.L452:
 6708 002e 3F       		.byte	(.L451-.L452)/2
 6709 002f 03       		.byte	(.L453-.L452)/2
 6710 0030 27       		.byte	(.L454-.L452)/2
 6711 0031 2D       		.byte	(.L455-.L452)/2
 6712 0032 33       		.byte	(.L456-.L452)/2
 6713 0033 39       		.byte	(.L457-.L452)/2
 6714              		.p2align 1
 6715              	.L453:
1993:../user/source/DLT645.c ****         {
 6716              		.loc 1 1993 0
 6717 0034 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 6718 0036 482B     		cmp	r3, #72
 6719 0038 0ED0     		beq	.L458
 6720 003a 02D8     		bhi	.L459
 6721 003c 342B     		cmp	r3, #52
 6722 003e 05D0     		beq	.L460
 6723 0040 74E0     		b	.L450
 6724              	.L459:
 6725 0042 5C2B     		cmp	r3, #92
 6726 0044 0ED0     		beq	.L461
 6727 0046 702B     		cmp	r3, #112
 6728 0048 12D0     		beq	.L462
 6729 004a 6FE0     		b	.L450
 6730              	.L460:
1998:../user/source/DLT645.c ****                                                FLASH_MODIFIED_ALL_NOWENERGY_ADDR);
 6731              		.loc 1 1998 0
 6732 004c 714A     		ldr	r2, .L471+4
 6733 004e 7249     		ldr	r1, .L471+8
 6734 0050 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6735              	.LVL807:
 6736 0054 0546     		mov	r5, r0
 6737              	.LVL808:
2000:../user/source/DLT645.c ****         }
 6738              		.loc 1 2000 0
 6739 0056 69E0     		b	.L450
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 186


 6740              	.L458:
2005:../user/source/DLT645.c ****                                                FLASH_MODIFIED_A_NOWENERGY_ADDR);
 6741              		.loc 1 2005 0
 6742 0058 704A     		ldr	r2, .L471+12
 6743 005a 7149     		ldr	r1, .L471+16
 6744 005c FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6745              	.LVL809:
 6746 0060 0546     		mov	r5, r0
 6747              	.LVL810:
2007:../user/source/DLT645.c ****         }
 6748              		.loc 1 2007 0
 6749 0062 63E0     		b	.L450
 6750              	.L461:
2012:../user/source/DLT645.c ****                                                FLASH_MODIFIED_B_NOWENERGY_ADDR);
 6751              		.loc 1 2012 0
 6752 0064 6F4A     		ldr	r2, .L471+20
 6753 0066 7049     		ldr	r1, .L471+24
 6754 0068 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6755              	.LVL811:
 6756 006c 0546     		mov	r5, r0
 6757              	.LVL812:
2014:../user/source/DLT645.c ****         }
 6758              		.loc 1 2014 0
 6759 006e 5DE0     		b	.L450
 6760              	.L462:
2019:../user/source/DLT645.c ****                                                FLASH_MODIFIED_C_NOWENERGY_ADDR);
 6761              		.loc 1 2019 0
 6762 0070 6E4A     		ldr	r2, .L471+28
 6763 0072 6F49     		ldr	r1, .L471+32
 6764 0074 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6765              	.LVL813:
 6766 0078 0546     		mov	r5, r0
 6767              	.LVL814:
2021:../user/source/DLT645.c ****         }
 6768              		.loc 1 2021 0
 6769 007a 57E0     		b	.L450
 6770              	.L454:
2031:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F1_NOWENERGY_ADDR);
 6771              		.loc 1 2031 0
 6772 007c 6D4A     		ldr	r2, .L471+36
 6773 007e 6E49     		ldr	r1, .L471+40
 6774 0080 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6775              	.LVL815:
 6776 0084 0546     		mov	r5, r0
 6777              	.LVL816:
2033:../user/source/DLT645.c ****     }
 6778              		.loc 1 2033 0
 6779 0086 51E0     		b	.L450
 6780              	.L455:
2038:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F2_NOWENERGY_ADDR);
 6781              		.loc 1 2038 0
 6782 0088 6C4A     		ldr	r2, .L471+44
 6783 008a 6D49     		ldr	r1, .L471+48
 6784 008c FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6785              	.LVL817:
 6786 0090 0546     		mov	r5, r0
 6787              	.LVL818:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 187


2040:../user/source/DLT645.c ****     }
 6788              		.loc 1 2040 0
 6789 0092 4BE0     		b	.L450
 6790              	.L456:
2045:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F3_NOWENERGY_ADDR);
 6791              		.loc 1 2045 0
 6792 0094 6B4A     		ldr	r2, .L471+52
 6793 0096 6C49     		ldr	r1, .L471+56
 6794 0098 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6795              	.LVL819:
 6796 009c 0546     		mov	r5, r0
 6797              	.LVL820:
2047:../user/source/DLT645.c ****     }
 6798              		.loc 1 2047 0
 6799 009e 45E0     		b	.L450
 6800              	.L457:
2052:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F4_NOWENERGY_ADDR);
 6801              		.loc 1 2052 0
 6802 00a0 6A4A     		ldr	r2, .L471+60
 6803 00a2 6B49     		ldr	r1, .L471+64
 6804 00a4 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6805              	.LVL821:
 6806 00a8 0546     		mov	r5, r0
 6807              	.LVL822:
2054:../user/source/DLT645.c ****     }
 6808              		.loc 1 2054 0
 6809 00aa 3FE0     		b	.L450
 6810              	.L451:
2064:../user/source/DLT645.c ****         energy_F1 = vNow_Frozen_Modify_Mothod(energy_F1, FLASH_REAL_F1_NOWENERGY_ADDR,
 6811              		.loc 1 2064 0
 6812 00ac 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 6813 00ae 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 6814 00b0 E17C     		ldrb	r1, [r4, #19]	@ zero_extendqisi2
 6815 00b2 A07C     		ldrb	r0, [r4, #18]	@ zero_extendqisi2
 6816              	.LVL823:
 6817 00b4 FFF7FEFF 		bl	Get_Energy
 6818              	.LVL824:
2065:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F1_NOWENERGY_ADDR);
 6819              		.loc 1 2065 0
 6820 00b8 5E4A     		ldr	r2, .L471+36
 6821 00ba 5F49     		ldr	r1, .L471+40
 6822 00bc FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6823              	.LVL825:
 6824 00c0 8146     		mov	r9, r0
 6825              	.LVL826:
2068:../user/source/DLT645.c ****         energy_F2 = vNow_Frozen_Modify_Mothod(energy_F2, FLASH_REAL_F2_NOWENERGY_ADDR,
 6826              		.loc 1 2068 0
 6827 00c2 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 6828 00c4 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 6829 00c6 E17D     		ldrb	r1, [r4, #23]	@ zero_extendqisi2
 6830 00c8 A07D     		ldrb	r0, [r4, #22]	@ zero_extendqisi2
 6831              	.LVL827:
 6832 00ca FFF7FEFF 		bl	Get_Energy
 6833              	.LVL828:
2069:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F2_NOWENERGY_ADDR);
 6834              		.loc 1 2069 0
 6835 00ce 5B4A     		ldr	r2, .L471+44
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 188


 6836 00d0 5B49     		ldr	r1, .L471+48
 6837 00d2 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6838              	.LVL829:
 6839 00d6 8046     		mov	r8, r0
 6840              	.LVL830:
2072:../user/source/DLT645.c ****         energy_F3 = vNow_Frozen_Modify_Mothod(energy_F3, FLASH_REAL_F3_NOWENERGY_ADDR,
 6841              		.loc 1 2072 0
 6842 00d8 637F     		ldrb	r3, [r4, #29]	@ zero_extendqisi2
 6843 00da 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 6844 00dc E17E     		ldrb	r1, [r4, #27]	@ zero_extendqisi2
 6845 00de A07E     		ldrb	r0, [r4, #26]	@ zero_extendqisi2
 6846              	.LVL831:
 6847 00e0 FFF7FEFF 		bl	Get_Energy
 6848              	.LVL832:
2073:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F3_NOWENERGY_ADDR);
 6849              		.loc 1 2073 0
 6850 00e4 574A     		ldr	r2, .L471+52
 6851 00e6 5849     		ldr	r1, .L471+56
 6852 00e8 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6853              	.LVL833:
 6854 00ec 0746     		mov	r7, r0
 6855              	.LVL834:
2076:../user/source/DLT645.c ****         energy_F4 = vNow_Frozen_Modify_Mothod(energy_F4, FLASH_REAL_F4_NOWENERGY_ADDR,
 6856              		.loc 1 2076 0
 6857 00ee 94F82130 		ldrb	r3, [r4, #33]	@ zero_extendqisi2
 6858 00f2 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 6859 00f6 E17F     		ldrb	r1, [r4, #31]	@ zero_extendqisi2
 6860 00f8 A07F     		ldrb	r0, [r4, #30]	@ zero_extendqisi2
 6861              	.LVL835:
 6862 00fa FFF7FEFF 		bl	Get_Energy
 6863              	.LVL836:
2077:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F4_NOWENERGY_ADDR);
 6864              		.loc 1 2077 0
 6865 00fe 534A     		ldr	r2, .L471+60
 6866 0100 5349     		ldr	r1, .L471+64
 6867 0102 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6868              	.LVL837:
 6869 0106 0646     		mov	r6, r0
 6870              	.LVL838:
2080:../user/source/DLT645.c ****         /*±£´æ×ÜµçÁ¿ÕæÊµÖµ£¬µ¥³­×ÜµçÁ¿Ê±Ê¹ÓÃ*/
 6871              		.loc 1 2080 0
 6872 0108 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 6873 010a 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 6874 010c E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
 6875 010e A07B     		ldrb	r0, [r4, #14]	@ zero_extendqisi2
 6876              	.LVL839:
 6877 0110 FFF7FEFF 		bl	Get_Energy
 6878              	.LVL840:
2082:../user/source/DLT645.c ****         /*¸ù¾İ·Ö·ÑÂÊµçÁ¿¼ÆËãĞŞ¸ÄºóµÄ×ÜµçÁ¿*/
 6879              		.loc 1 2082 0
 6880 0114 0146     		mov	r1, r0
 6881 0116 4048     		ldr	r0, .L471+8
 6882              	.LVL841:
 6883 0118 FFF7FEFF 		bl	Flash_Write_Word
 6884              	.LVL842:
2084:../user/source/DLT645.c ****         /*±£´æĞŞ¸ÄÖµ£¬µ¥³­×ÜµçÁ¿Ê±Ê¹ÓÃ*/
 6885              		.loc 1 2084 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 189


 6886 011c 09EB0805 		add	r5, r9, r8
 6887 0120 3D44     		add	r5, r5, r7
 6888 0122 3544     		add	r5, r5, r6
 6889              	.LVL843:
2086:../user/source/DLT645.c ****         break;
 6890              		.loc 1 2086 0
 6891 0124 2946     		mov	r1, r5
 6892 0126 3B48     		ldr	r0, .L471+4
 6893 0128 FFF7FEFF 		bl	Flash_Write_Word
 6894              	.LVL844:
 6895              	.L450:
2092:../user/source/DLT645.c ****     {
 6896              		.loc 1 2092 0
 6897 012c E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 6898 012e 322B     		cmp	r3, #50
 6899 0130 1CD0     		beq	.L463
 6900 0132 68D3     		bcc	.L448
 6901 0134 372B     		cmp	r3, #55
 6902 0136 66D8     		bhi	.L448
2101:../user/source/DLT645.c ****         pucBuffer[18] = 0;
 6903              		.loc 1 2101 0
 6904 0138 04F11103 		add	r3, r4, #17
 6905 013c 0093     		str	r3, [sp]
 6906 013e 04F11003 		add	r3, r4, #16
 6907 0142 04F10F02 		add	r2, r4, #15
 6908 0146 04F10E01 		add	r1, r4, #14
 6909 014a 2846     		mov	r0, r5
 6910 014c FFF7FEFF 		bl	Fill_Energy
 6911              	.LVL845:
2102:../user/source/DLT645.c ****         for (i = 0; i < 18; i++)
 6912              		.loc 1 2102 0
 6913 0150 0023     		movs	r3, #0
 6914 0152 A374     		strb	r3, [r4, #18]
 6915              	.LVL846:
2103:../user/source/DLT645.c ****         {
 6916              		.loc 1 2103 0
 6917 0154 05E0     		b	.L465
 6918              	.LVL847:
 6919              	.L466:
2105:../user/source/DLT645.c ****         }
 6920              		.loc 1 2105 0 discriminator 3
 6921 0156 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 6922 0158 A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 6923 015a 0A44     		add	r2, r2, r1
 6924 015c A274     		strb	r2, [r4, #18]
2103:../user/source/DLT645.c ****         {
 6925              		.loc 1 2103 0 discriminator 3
 6926 015e 0133     		adds	r3, r3, #1
 6927              	.LVL848:
 6928 0160 9BB2     		uxth	r3, r3
 6929              	.LVL849:
 6930              	.L465:
2103:../user/source/DLT645.c ****         {
 6931              		.loc 1 2103 0 is_stmt 0 discriminator 1
 6932 0162 112B     		cmp	r3, #17
 6933 0164 F7D9     		bls	.L466
2107:../user/source/DLT645.c ****         break;
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 190


 6934              		.loc 1 2107 0 is_stmt 1
 6935 0166 1623     		movs	r3, #22
 6936              	.LVL850:
 6937 0168 E374     		strb	r3, [r4, #19]
2108:../user/source/DLT645.c ****     }
 6938              		.loc 1 2108 0
 6939 016a 4CE0     		b	.L448
 6940              	.L463:
2114:../user/source/DLT645.c ****         /*¼â*/
 6941              		.loc 1 2114 0
 6942 016c 04F11103 		add	r3, r4, #17
 6943 0170 0093     		str	r3, [sp]
 6944 0172 04F11003 		add	r3, r4, #16
 6945 0176 04F10F02 		add	r2, r4, #15
 6946 017a 04F10E01 		add	r1, r4, #14
 6947 017e 2846     		mov	r0, r5
 6948 0180 FFF7FEFF 		bl	Fill_Energy
 6949              	.LVL851:
2116:../user/source/DLT645.c ****         /*·å*/
 6950              		.loc 1 2116 0
 6951 0184 04F11503 		add	r3, r4, #21
 6952 0188 0093     		str	r3, [sp]
 6953 018a 04F11403 		add	r3, r4, #20
 6954 018e 04F11302 		add	r2, r4, #19
 6955 0192 04F11201 		add	r1, r4, #18
 6956 0196 4846     		mov	r0, r9
 6957 0198 FFF7FEFF 		bl	Fill_Energy
 6958              	.LVL852:
2118:../user/source/DLT645.c ****         /*Æ½*/
 6959              		.loc 1 2118 0
 6960 019c 04F11903 		add	r3, r4, #25
 6961 01a0 0093     		str	r3, [sp]
 6962 01a2 04F11803 		add	r3, r4, #24
 6963 01a6 04F11702 		add	r2, r4, #23
 6964 01aa 04F11601 		add	r1, r4, #22
 6965 01ae 4046     		mov	r0, r8
 6966 01b0 FFF7FEFF 		bl	Fill_Energy
 6967              	.LVL853:
2120:../user/source/DLT645.c ****         /*¹È*/
 6968              		.loc 1 2120 0
 6969 01b4 04F11D03 		add	r3, r4, #29
 6970 01b8 0093     		str	r3, [sp]
 6971 01ba 04F11C03 		add	r3, r4, #28
 6972 01be 04F11B02 		add	r2, r4, #27
 6973 01c2 04F11A01 		add	r1, r4, #26
 6974 01c6 3846     		mov	r0, r7
 6975 01c8 FFF7FEFF 		bl	Fill_Energy
 6976              	.LVL854:
2122:../user/source/DLT645.c ****         pucBuffer[34] = 0;
 6977              		.loc 1 2122 0
 6978 01cc 04F12103 		add	r3, r4, #33
 6979 01d0 0093     		str	r3, [sp]
 6980 01d2 04F12003 		add	r3, r4, #32
 6981 01d6 04F11F02 		add	r2, r4, #31
 6982 01da 04F11E01 		add	r1, r4, #30
 6983 01de 3046     		mov	r0, r6
 6984 01e0 FFF7FEFF 		bl	Fill_Energy
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 191


 6985              	.LVL855:
2123:../user/source/DLT645.c ****         for (i = 0; i < 34; i++)
 6986              		.loc 1 2123 0
 6987 01e4 0023     		movs	r3, #0
 6988 01e6 84F82230 		strb	r3, [r4, #34]
 6989              	.LVL856:
2124:../user/source/DLT645.c ****         {
 6990              		.loc 1 2124 0
 6991 01ea 07E0     		b	.L467
 6992              	.LVL857:
 6993              	.L468:
2126:../user/source/DLT645.c ****         }
 6994              		.loc 1 2126 0 discriminator 3
 6995 01ec E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 6996 01ee 94F82220 		ldrb	r2, [r4, #34]	@ zero_extendqisi2
 6997 01f2 0A44     		add	r2, r2, r1
 6998 01f4 84F82220 		strb	r2, [r4, #34]
2124:../user/source/DLT645.c ****         {
 6999              		.loc 1 2124 0 discriminator 3
 7000 01f8 0133     		adds	r3, r3, #1
 7001              	.LVL858:
 7002 01fa 9BB2     		uxth	r3, r3
 7003              	.LVL859:
 7004              	.L467:
2124:../user/source/DLT645.c ****         {
 7005              		.loc 1 2124 0 is_stmt 0 discriminator 1
 7006 01fc 212B     		cmp	r3, #33
 7007 01fe F5D9     		bls	.L468
2128:../user/source/DLT645.c ****         break;
 7008              		.loc 1 2128 0 is_stmt 1
 7009 0200 1623     		movs	r3, #22
 7010              	.LVL860:
 7011 0202 84F82330 		strb	r3, [r4, #35]
 7012              	.L448:
2134:../user/source/DLT645.c **** 
 7013              		.loc 1 2134 0
 7014 0206 03B0     		add	sp, sp, #12
 7015              	.LCFI55:
 7016              		.cfi_def_cfa_offset 28
 7017              		@ sp needed
 7018 0208 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 7019              	.LVL861:
 7020              	.L470:
 7021              	.LCFI56:
 7022              		.cfi_def_cfa_offset 0
 7023              		.cfi_restore 4
 7024              		.cfi_restore 5
 7025              		.cfi_restore 6
 7026              		.cfi_restore 7
 7027              		.cfi_restore 8
 7028              		.cfi_restore 9
 7029              		.cfi_restore 14
 7030 020c 7047     		bx	lr
 7031              	.L472:
 7032 020e 00BF     		.align	2
 7033              	.L471:
 7034 0210 00000000 		.word	.LANCHOR10
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 192


 7035 0214 74F00108 		.word	134344820
 7036 0218 70F00108 		.word	134344816
 7037 021c 9CF00108 		.word	134344860
 7038 0220 98F00108 		.word	134344856
 7039 0224 A4F00108 		.word	134344868
 7040 0228 A0F00108 		.word	134344864
 7041 022c ACF00108 		.word	134344876
 7042 0230 A8F00108 		.word	134344872
 7043 0234 7CF00108 		.word	134344828
 7044 0238 78F00108 		.word	134344824
 7045 023c 84F00108 		.word	134344836
 7046 0240 80F00108 		.word	134344832
 7047 0244 8CF00108 		.word	134344844
 7048 0248 88F00108 		.word	134344840
 7049 024c 94F00108 		.word	134344852
 7050 0250 90F00108 		.word	134344848
 7051              		.cfi_endproc
 7052              	.LFE148:
 7054              		.section	.text.vDayfrozen_Modifier,"ax",%progbits
 7055              		.align	2
 7056              		.global	vDayfrozen_Modifier
 7057              		.thumb
 7058              		.thumb_func
 7060              	vDayfrozen_Modifier:
 7061              	.LFB149:
2153:../user/source/DLT645.c ****     uint32_t energy, energy_F1, energy_F2, energy_F3, energy_F4;
 7062              		.loc 1 2153 0
 7063              		.cfi_startproc
 7064              		@ args = 0, pretend = 0, frame = 0
 7065              		@ frame_needed = 0, uses_anonymous_args = 0
 7066              	.LVL862:
2157:../user/source/DLT645.c ****         return;
 7067              		.loc 1 2157 0
 7068 0000 4A4B     		ldr	r3, .L479
 7069 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7070 0004 002B     		cmp	r3, #0
 7071 0006 00F08F80 		beq	.L478
2153:../user/source/DLT645.c ****     uint32_t energy, energy_F1, energy_F2, energy_F3, energy_F4;
 7072              		.loc 1 2153 0
 7073 000a 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 7074              	.LCFI57:
 7075              		.cfi_def_cfa_offset 24
 7076              		.cfi_offset 4, -24
 7077              		.cfi_offset 5, -20
 7078              		.cfi_offset 6, -16
 7079              		.cfi_offset 7, -12
 7080              		.cfi_offset 8, -8
 7081              		.cfi_offset 14, -4
 7082 000e 82B0     		sub	sp, sp, #8
 7083              	.LCFI58:
 7084              		.cfi_def_cfa_offset 32
 7085 0010 0446     		mov	r4, r0
2169:../user/source/DLT645.c ****     energy_F1 = vNow_Frozen_Modify_Mothod(energy_F1, FLASH_REAL_1DAYFROZEN_ADDR + 4,
 7086              		.loc 1 2169 0
 7087 0012 437D     		ldrb	r3, [r0, #21]	@ zero_extendqisi2
 7088 0014 027D     		ldrb	r2, [r0, #20]	@ zero_extendqisi2
 7089 0016 C17C     		ldrb	r1, [r0, #19]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 193


 7090 0018 807C     		ldrb	r0, [r0, #18]	@ zero_extendqisi2
 7091              	.LVL863:
 7092 001a FFF7FEFF 		bl	Get_Energy
 7093              	.LVL864:
2170:../user/source/DLT645.c ****                                           FLASH_MODIFIED_1DAYFROZEN_ADDR + 4);
 7094              		.loc 1 2170 0
 7095 001e 444A     		ldr	r2, .L479+4
 7096 0020 4449     		ldr	r1, .L479+8
 7097 0022 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 7098              	.LVL865:
 7099 0026 8046     		mov	r8, r0
 7100              	.LVL866:
2172:../user/source/DLT645.c **** 
 7101              		.loc 1 2172 0
 7102 0028 04F11503 		add	r3, r4, #21
 7103 002c 0093     		str	r3, [sp]
 7104 002e 04F11403 		add	r3, r4, #20
 7105 0032 04F11302 		add	r2, r4, #19
 7106 0036 04F11201 		add	r1, r4, #18
 7107 003a FFF7FEFF 		bl	Fill_Energy
 7108              	.LVL867:
2175:../user/source/DLT645.c ****     energy_F2 = vNow_Frozen_Modify_Mothod(energy_F2, FLASH_REAL_1DAYFROZEN_ADDR + 8,
 7109              		.loc 1 2175 0
 7110 003e 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 7111 0040 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 7112 0042 E17D     		ldrb	r1, [r4, #23]	@ zero_extendqisi2
 7113 0044 A07D     		ldrb	r0, [r4, #22]	@ zero_extendqisi2
 7114 0046 FFF7FEFF 		bl	Get_Energy
 7115              	.LVL868:
2176:../user/source/DLT645.c ****                                           FLASH_MODIFIED_1DAYFROZEN_ADDR + 8);
 7116              		.loc 1 2176 0
 7117 004a 3B4A     		ldr	r2, .L479+12
 7118 004c 3B49     		ldr	r1, .L479+16
 7119 004e FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 7120              	.LVL869:
 7121 0052 0646     		mov	r6, r0
 7122              	.LVL870:
2178:../user/source/DLT645.c **** 
 7123              		.loc 1 2178 0
 7124 0054 04F11903 		add	r3, r4, #25
 7125 0058 0093     		str	r3, [sp]
 7126 005a 04F11803 		add	r3, r4, #24
 7127 005e 04F11702 		add	r2, r4, #23
 7128 0062 04F11601 		add	r1, r4, #22
 7129 0066 FFF7FEFF 		bl	Fill_Energy
 7130              	.LVL871:
2181:../user/source/DLT645.c ****     energy_F3 = vNow_Frozen_Modify_Mothod(energy_F3, FLASH_REAL_1DAYFROZEN_ADDR + 12,
 7131              		.loc 1 2181 0
 7132 006a 637F     		ldrb	r3, [r4, #29]	@ zero_extendqisi2
 7133 006c 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 7134 006e E17E     		ldrb	r1, [r4, #27]	@ zero_extendqisi2
 7135 0070 A07E     		ldrb	r0, [r4, #26]	@ zero_extendqisi2
 7136 0072 FFF7FEFF 		bl	Get_Energy
 7137              	.LVL872:
2182:../user/source/DLT645.c ****                                           FLASH_MODIFIED_1DAYFROZEN_ADDR + 12);
 7138              		.loc 1 2182 0
 7139 0076 324A     		ldr	r2, .L479+20
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 194


 7140 0078 3249     		ldr	r1, .L479+24
 7141 007a FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 7142              	.LVL873:
 7143 007e 0546     		mov	r5, r0
 7144              	.LVL874:
2184:../user/source/DLT645.c **** 
 7145              		.loc 1 2184 0
 7146 0080 04F11D03 		add	r3, r4, #29
 7147 0084 0093     		str	r3, [sp]
 7148 0086 04F11C03 		add	r3, r4, #28
 7149 008a 04F11B02 		add	r2, r4, #27
 7150 008e 04F11A01 		add	r1, r4, #26
 7151 0092 FFF7FEFF 		bl	Fill_Energy
 7152              	.LVL875:
2187:../user/source/DLT645.c ****     energy_F4 = vNow_Frozen_Modify_Mothod(energy_F4, FLASH_REAL_1DAYFROZEN_ADDR + 16,
 7153              		.loc 1 2187 0
 7154 0096 94F82130 		ldrb	r3, [r4, #33]	@ zero_extendqisi2
 7155 009a 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 7156 009e E17F     		ldrb	r1, [r4, #31]	@ zero_extendqisi2
 7157 00a0 A07F     		ldrb	r0, [r4, #30]	@ zero_extendqisi2
 7158 00a2 FFF7FEFF 		bl	Get_Energy
 7159              	.LVL876:
2188:../user/source/DLT645.c ****                                           FLASH_MODIFIED_1DAYFROZEN_ADDR + 16);
 7160              		.loc 1 2188 0
 7161 00a6 284A     		ldr	r2, .L479+28
 7162 00a8 2849     		ldr	r1, .L479+32
 7163 00aa FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 7164              	.LVL877:
 7165 00ae 0746     		mov	r7, r0
 7166              	.LVL878:
2190:../user/source/DLT645.c **** 
 7167              		.loc 1 2190 0
 7168 00b0 04F12103 		add	r3, r4, #33
 7169 00b4 0093     		str	r3, [sp]
 7170 00b6 04F12003 		add	r3, r4, #32
 7171 00ba 04F11F02 		add	r2, r4, #31
 7172 00be 04F11E01 		add	r1, r4, #30
 7173 00c2 FFF7FEFF 		bl	Fill_Energy
 7174              	.LVL879:
2194:../user/source/DLT645.c ****     /*´æ´¢ÕæÊµÖµ*/
 7175              		.loc 1 2194 0
 7176 00c6 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 7177 00c8 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 7178 00ca E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
 7179 00cc A07B     		ldrb	r0, [r4, #14]	@ zero_extendqisi2
 7180 00ce FFF7FEFF 		bl	Get_Energy
 7181              	.LVL880:
2196:../user/source/DLT645.c ****     /*¼ÆËãĞŞ¸ÄºóµÄÖµ*/
 7182              		.loc 1 2196 0
 7183 00d2 0146     		mov	r1, r0
 7184 00d4 1E48     		ldr	r0, .L479+36
 7185              	.LVL881:
 7186 00d6 FFF7FEFF 		bl	Flash_Write_Word
 7187              	.LVL882:
2198:../user/source/DLT645.c ****     /*´æ´¢ĞŞ¸ÄºóµÄÖµ*/
 7188              		.loc 1 2198 0
 7189 00da 4644     		add	r6, r6, r8
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 195


 7190              	.LVL883:
 7191 00dc 2E44     		add	r6, r6, r5
 7192 00de BD19     		adds	r5, r7, r6
 7193              	.LVL884:
2200:../user/source/DLT645.c ****     /*×éÖ¡*/
 7194              		.loc 1 2200 0
 7195 00e0 2946     		mov	r1, r5
 7196 00e2 1C48     		ldr	r0, .L479+40
 7197 00e4 FFF7FEFF 		bl	Flash_Write_Word
 7198              	.LVL885:
2202:../user/source/DLT645.c **** 
 7199              		.loc 1 2202 0
 7200 00e8 04F11103 		add	r3, r4, #17
 7201 00ec 0093     		str	r3, [sp]
 7202 00ee 04F11003 		add	r3, r4, #16
 7203 00f2 04F10F02 		add	r2, r4, #15
 7204 00f6 04F10E01 		add	r1, r4, #14
 7205 00fa 2846     		mov	r0, r5
 7206 00fc FFF7FEFF 		bl	Fill_Energy
 7207              	.LVL886:
2204:../user/source/DLT645.c ****     for (i = 0; i < 34; i++)
 7208              		.loc 1 2204 0
 7209 0100 0023     		movs	r3, #0
 7210 0102 84F82230 		strb	r3, [r4, #34]
 7211              	.LVL887:
2205:../user/source/DLT645.c ****     {
 7212              		.loc 1 2205 0
 7213 0106 07E0     		b	.L475
 7214              	.LVL888:
 7215              	.L476:
2207:../user/source/DLT645.c ****     }
 7216              		.loc 1 2207 0 discriminator 3
 7217 0108 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 7218 010a 94F82220 		ldrb	r2, [r4, #34]	@ zero_extendqisi2
 7219 010e 0A44     		add	r2, r2, r1
 7220 0110 84F82220 		strb	r2, [r4, #34]
2205:../user/source/DLT645.c ****     {
 7221              		.loc 1 2205 0 discriminator 3
 7222 0114 0133     		adds	r3, r3, #1
 7223              	.LVL889:
 7224 0116 9BB2     		uxth	r3, r3
 7225              	.LVL890:
 7226              	.L475:
2205:../user/source/DLT645.c ****     {
 7227              		.loc 1 2205 0 is_stmt 0 discriminator 1
 7228 0118 212B     		cmp	r3, #33
 7229 011a F5D9     		bls	.L476
2209:../user/source/DLT645.c **** }
 7230              		.loc 1 2209 0 is_stmt 1
 7231 011c 1623     		movs	r3, #22
 7232              	.LVL891:
 7233 011e 84F82330 		strb	r3, [r4, #35]
2210:../user/source/DLT645.c **** 
 7234              		.loc 1 2210 0
 7235 0122 02B0     		add	sp, sp, #8
 7236              	.LCFI59:
 7237              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 196


 7238              		@ sp needed
 7239 0124 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 7240              	.LVL892:
 7241              	.L478:
 7242              	.LCFI60:
 7243              		.cfi_def_cfa_offset 0
 7244              		.cfi_restore 4
 7245              		.cfi_restore 5
 7246              		.cfi_restore 6
 7247              		.cfi_restore 7
 7248              		.cfi_restore 8
 7249              		.cfi_restore 14
 7250 0128 7047     		bx	lr
 7251              	.L480:
 7252 012a 00BF     		.align	2
 7253              	.L479:
 7254 012c 00000000 		.word	.LANCHOR10
 7255 0130 40F00108 		.word	134344768
 7256 0134 04F00108 		.word	134344708
 7257 0138 44F00108 		.word	134344772
 7258 013c 08F00108 		.word	134344712
 7259 0140 48F00108 		.word	134344776
 7260 0144 0CF00108 		.word	134344716
 7261 0148 4CF00108 		.word	134344780
 7262 014c 10F00108 		.word	134344720
 7263 0150 00F00108 		.word	134344704
 7264 0154 3CF00108 		.word	134344764
 7265              		.cfi_endproc
 7266              	.LFE149:
 7268              		.section	.text.vAccountEnergy_Modify_Mothod,"ax",%progbits
 7269              		.align	2
 7270              		.global	vAccountEnergy_Modify_Mothod
 7271              		.thumb
 7272              		.thumb_func
 7274              	vAccountEnergy_Modify_Mothod:
 7275              	.LFB150:
2221:../user/source/DLT645.c ****     uint64_t i;
 7276              		.loc 1 2221 0
 7277              		.cfi_startproc
 7278              		@ args = 0, pretend = 0, frame = 0
 7279              		@ frame_needed = 0, uses_anonymous_args = 0
 7280              	.LVL893:
 7281 0000 08B5     		push	{r3, lr}
 7282              	.LCFI61:
 7283              		.cfi_def_cfa_offset 8
 7284              		.cfi_offset 3, -8
 7285              		.cfi_offset 14, -4
2223:../user/source/DLT645.c ****     return (uint32_t)(i / 100);
 7286              		.loc 1 2223 0
 7287 0002 044B     		ldr	r3, .L483
 7288 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7289 0006 A0FB0201 		umull	r0, r1, r0, r2
 7290              	.LVL894:
2224:../user/source/DLT645.c **** }
 7291              		.loc 1 2224 0
 7292 000a 6422     		movs	r2, #100
 7293 000c 0023     		movs	r3, #0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 197


 7294 000e FFF7FEFF 		bl	__aeabi_uldivmod
 7295              	.LVL895:
2225:../user/source/DLT645.c **** 
 7296              		.loc 1 2225 0
 7297 0012 08BD     		pop	{r3, pc}
 7298              	.L484:
 7299              		.align	2
 7300              	.L483:
 7301 0014 00000000 		.word	ucDayfrozen_Modify_Ratio
 7302              		.cfi_endproc
 7303              	.LFE150:
 7305              		.section	.text.vAccountEnergy_Modify,"ax",%progbits
 7306              		.align	2
 7307              		.global	vAccountEnergy_Modify
 7308              		.thumb
 7309              		.thumb_func
 7311              	vAccountEnergy_Modify:
 7312              	.LFB151:
2245:../user/source/DLT645.c ****     int energy;
 7313              		.loc 1 2245 0
 7314              		.cfi_startproc
 7315              		@ args = 0, pretend = 0, frame = 0
 7316              		@ frame_needed = 0, uses_anonymous_args = 0
 7317              	.LVL896:
2248:../user/source/DLT645.c ****         return;
 7318              		.loc 1 2248 0
 7319 0000 504B     		ldr	r3, .L494
 7320 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7321 0004 002B     		cmp	r3, #0
 7322 0006 00F09B80 		beq	.L493
2245:../user/source/DLT645.c ****     int energy;
 7323              		.loc 1 2245 0
 7324 000a 10B5     		push	{r4, lr}
 7325              	.LCFI62:
 7326              		.cfi_def_cfa_offset 8
 7327              		.cfi_offset 4, -8
 7328              		.cfi_offset 14, -4
 7329 000c 82B0     		sub	sp, sp, #8
 7330              	.LCFI63:
 7331              		.cfi_def_cfa_offset 16
 7332 000e 0446     		mov	r4, r0
2250:../user/source/DLT645.c ****     {
 7333              		.loc 1 2250 0
 7334 0010 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 7335 0012 322B     		cmp	r3, #50
 7336 0014 72D1     		bne	.L487
2253:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 7337              		.loc 1 2253 0
 7338 0016 437C     		ldrb	r3, [r0, #17]	@ zero_extendqisi2
 7339 0018 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 7340 001a C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 7341 001c 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 7342              	.LVL897:
 7343 001e FFF7FEFF 		bl	Get_Energy
 7344              	.LVL898:
2254:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
 7345              		.loc 1 2254 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 198


 7346 0022 FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 7347              	.LVL899:
2255:../user/source/DLT645.c **** 
 7348              		.loc 1 2255 0
 7349 0026 04F11103 		add	r3, r4, #17
 7350 002a 0093     		str	r3, [sp]
 7351 002c 04F11003 		add	r3, r4, #16
 7352 0030 04F10F02 		add	r2, r4, #15
 7353 0034 04F10E01 		add	r1, r4, #14
 7354 0038 FFF7FEFF 		bl	Fill_Energy
 7355              	.LVL900:
2258:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 7356              		.loc 1 2258 0
 7357 003c 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 7358 003e 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 7359 0040 E17C     		ldrb	r1, [r4, #19]	@ zero_extendqisi2
 7360 0042 A07C     		ldrb	r0, [r4, #18]	@ zero_extendqisi2
 7361 0044 FFF7FEFF 		bl	Get_Energy
 7362              	.LVL901:
2259:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[18], &pucBuffer[19], &pucBuffer[20], &pucBuffer[21]);
 7363              		.loc 1 2259 0
 7364 0048 FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 7365              	.LVL902:
2260:../user/source/DLT645.c **** 
 7366              		.loc 1 2260 0
 7367 004c 04F11503 		add	r3, r4, #21
 7368 0050 0093     		str	r3, [sp]
 7369 0052 04F11403 		add	r3, r4, #20
 7370 0056 04F11302 		add	r2, r4, #19
 7371 005a 04F11201 		add	r1, r4, #18
 7372 005e FFF7FEFF 		bl	Fill_Energy
 7373              	.LVL903:
2263:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 7374              		.loc 1 2263 0
 7375 0062 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 7376 0064 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 7377 0066 E17D     		ldrb	r1, [r4, #23]	@ zero_extendqisi2
 7378 0068 A07D     		ldrb	r0, [r4, #22]	@ zero_extendqisi2
 7379 006a FFF7FEFF 		bl	Get_Energy
 7380              	.LVL904:
2264:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[22], &pucBuffer[23], &pucBuffer[24], &pucBuffer[25]);
 7381              		.loc 1 2264 0
 7382 006e FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 7383              	.LVL905:
2265:../user/source/DLT645.c **** 
 7384              		.loc 1 2265 0
 7385 0072 04F11903 		add	r3, r4, #25
 7386 0076 0093     		str	r3, [sp]
 7387 0078 04F11803 		add	r3, r4, #24
 7388 007c 04F11702 		add	r2, r4, #23
 7389 0080 04F11601 		add	r1, r4, #22
 7390 0084 FFF7FEFF 		bl	Fill_Energy
 7391              	.LVL906:
2268:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 7392              		.loc 1 2268 0
 7393 0088 637F     		ldrb	r3, [r4, #29]	@ zero_extendqisi2
 7394 008a 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 199


 7395 008c E17E     		ldrb	r1, [r4, #27]	@ zero_extendqisi2
 7396 008e A07E     		ldrb	r0, [r4, #26]	@ zero_extendqisi2
 7397 0090 FFF7FEFF 		bl	Get_Energy
 7398              	.LVL907:
2269:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[26], &pucBuffer[27], &pucBuffer[28], &pucBuffer[29]);
 7399              		.loc 1 2269 0
 7400 0094 FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 7401              	.LVL908:
2270:../user/source/DLT645.c **** 
 7402              		.loc 1 2270 0
 7403 0098 04F11D03 		add	r3, r4, #29
 7404 009c 0093     		str	r3, [sp]
 7405 009e 04F11C03 		add	r3, r4, #28
 7406 00a2 04F11B02 		add	r2, r4, #27
 7407 00a6 04F11A01 		add	r1, r4, #26
 7408 00aa FFF7FEFF 		bl	Fill_Energy
 7409              	.LVL909:
2273:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 7410              		.loc 1 2273 0
 7411 00ae 94F82130 		ldrb	r3, [r4, #33]	@ zero_extendqisi2
 7412 00b2 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 7413 00b6 E17F     		ldrb	r1, [r4, #31]	@ zero_extendqisi2
 7414 00b8 A07F     		ldrb	r0, [r4, #30]	@ zero_extendqisi2
 7415 00ba FFF7FEFF 		bl	Get_Energy
 7416              	.LVL910:
2274:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[30], &pucBuffer[31], &pucBuffer[32], &pucBuffer[33]);
 7417              		.loc 1 2274 0
 7418 00be FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 7419              	.LVL911:
2275:../user/source/DLT645.c **** 
 7420              		.loc 1 2275 0
 7421 00c2 04F12103 		add	r3, r4, #33
 7422 00c6 0093     		str	r3, [sp]
 7423 00c8 04F12003 		add	r3, r4, #32
 7424 00cc 04F11F02 		add	r2, r4, #31
 7425 00d0 04F11E01 		add	r1, r4, #30
 7426 00d4 FFF7FEFF 		bl	Fill_Energy
 7427              	.LVL912:
2277:../user/source/DLT645.c ****         for (i = 0; i < 34; i++)
 7428              		.loc 1 2277 0
 7429 00d8 0023     		movs	r3, #0
 7430 00da 84F82230 		strb	r3, [r4, #34]
 7431              	.LVL913:
2278:../user/source/DLT645.c ****         {
 7432              		.loc 1 2278 0
 7433 00de 07E0     		b	.L488
 7434              	.LVL914:
 7435              	.L489:
2280:../user/source/DLT645.c ****         }
 7436              		.loc 1 2280 0 discriminator 3
 7437 00e0 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 7438 00e2 94F82220 		ldrb	r2, [r4, #34]	@ zero_extendqisi2
 7439 00e6 0A44     		add	r2, r2, r1
 7440 00e8 84F82220 		strb	r2, [r4, #34]
2278:../user/source/DLT645.c ****         {
 7441              		.loc 1 2278 0 discriminator 3
 7442 00ec 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 200


 7443              	.LVL915:
 7444 00ee 9BB2     		uxth	r3, r3
 7445              	.LVL916:
 7446              	.L488:
2278:../user/source/DLT645.c ****         {
 7447              		.loc 1 2278 0 is_stmt 0 discriminator 1
 7448 00f0 212B     		cmp	r3, #33
 7449 00f2 F5D9     		bls	.L489
2282:../user/source/DLT645.c ****     }
 7450              		.loc 1 2282 0 is_stmt 1
 7451 00f4 1623     		movs	r3, #22
 7452              	.LVL917:
 7453 00f6 84F82330 		strb	r3, [r4, #35]
 7454 00fa 1FE0     		b	.L485
 7455              	.LVL918:
 7456              	.L487:
2286:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 7457              		.loc 1 2286 0
 7458 00fc 437C     		ldrb	r3, [r0, #17]	@ zero_extendqisi2
 7459 00fe 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 7460 0100 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 7461 0102 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 7462              	.LVL919:
 7463 0104 FFF7FEFF 		bl	Get_Energy
 7464              	.LVL920:
2287:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
 7465              		.loc 1 2287 0
 7466 0108 FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 7467              	.LVL921:
2288:../user/source/DLT645.c **** 
 7468              		.loc 1 2288 0
 7469 010c 04F11103 		add	r3, r4, #17
 7470 0110 0093     		str	r3, [sp]
 7471 0112 04F11003 		add	r3, r4, #16
 7472 0116 04F10F02 		add	r2, r4, #15
 7473 011a 04F10E01 		add	r1, r4, #14
 7474 011e FFF7FEFF 		bl	Fill_Energy
 7475              	.LVL922:
2290:../user/source/DLT645.c ****         for (i = 0; i < 18; i++)
 7476              		.loc 1 2290 0
 7477 0122 0023     		movs	r3, #0
 7478 0124 A374     		strb	r3, [r4, #18]
 7479              	.LVL923:
2291:../user/source/DLT645.c ****         {
 7480              		.loc 1 2291 0
 7481 0126 05E0     		b	.L490
 7482              	.LVL924:
 7483              	.L491:
2293:../user/source/DLT645.c ****         }
 7484              		.loc 1 2293 0 discriminator 3
 7485 0128 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 7486 012a A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 7487 012c 0A44     		add	r2, r2, r1
 7488 012e A274     		strb	r2, [r4, #18]
2291:../user/source/DLT645.c ****         {
 7489              		.loc 1 2291 0 discriminator 3
 7490 0130 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 201


 7491              	.LVL925:
 7492 0132 9BB2     		uxth	r3, r3
 7493              	.LVL926:
 7494              	.L490:
2291:../user/source/DLT645.c ****         {
 7495              		.loc 1 2291 0 is_stmt 0 discriminator 1
 7496 0134 112B     		cmp	r3, #17
 7497 0136 F7D9     		bls	.L491
2295:../user/source/DLT645.c ****     }
 7498              		.loc 1 2295 0 is_stmt 1
 7499 0138 1623     		movs	r3, #22
 7500              	.LVL927:
 7501 013a E374     		strb	r3, [r4, #19]
 7502              	.L485:
2297:../user/source/DLT645.c **** 
 7503              		.loc 1 2297 0
 7504 013c 02B0     		add	sp, sp, #8
 7505              	.LCFI64:
 7506              		.cfi_def_cfa_offset 8
 7507              		@ sp needed
 7508 013e 10BD     		pop	{r4, pc}
 7509              	.LVL928:
 7510              	.L493:
 7511              	.LCFI65:
 7512              		.cfi_def_cfa_offset 0
 7513              		.cfi_restore 4
 7514              		.cfi_restore 14
 7515 0140 7047     		bx	lr
 7516              	.L495:
 7517 0142 00BF     		.align	2
 7518              	.L494:
 7519 0144 00000000 		.word	.LANCHOR10
 7520              		.cfi_endproc
 7521              	.LFE151:
 7523              		.comm	TransFormer,16,4
 7524              		.global	Ccurrent
 7525              		.global	Bcurrent
 7526              		.global	Acurrent
 7527              		.global	C_Voltage
 7528              		.global	B_Voltage
 7529              		.global	A_Voltage
 7530              		.comm	Voltage_MIN,4,4
 7531              		.comm	Voltage_MAX,4,4
 7532              		.comm	ucDayfrozen_Modify_Ratio,1,1
 7533              		.global	Dayfrozen_Change_State
 7534              		.global	Voltage_Change_State
 7535              		.global	uc645DataDomainLength
 7536              		.global	ucRcvStatus
 7537              		.comm	Voltage_Frame_Status,1,1
 7538              		.global	DBDataID_Handle_List
 7539              		.global	INFRDataID_Handle_List
 7540              		.comm	ucApp_Buf_INFR,1000,4
 7541              		.comm	ucApp_Buf_ZD2DB,1000,4
 7542              		.comm	ucApp_Buf_DB2ZD,1000,4
 7543              		.global	pUartIR
 7544              		.global	pUartDB
 7545              		.global	pUartZD
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 202


 7546              		.section	.data.C_Voltage,"aw",%progbits
 7547              		.align	2
 7548              		.set	.LANCHOR9,. + 0
 7551              	C_Voltage:
 7552 0000 98080000 		.word	2200
 7553              		.section	.bss.Uart3_Sndbuf,"aw",%nobits
 7554              		.align	2
 7557              	Uart3_Sndbuf:
 7558 0000 00000000 		.space	1008
 7558      00000000 
 7558      00000000 
 7558      00000000 
 7558      00000000 
 7559              		.section	.rodata.DBDataID_Handle_List,"a",%progbits
 7560              		.align	2
 7561              		.set	.LANCHOR12,. + 0
 7564              	DBDataID_Handle_List:
 7565 0000 33       		.byte	51
 7566 0001 34       		.byte	52
 7567 0002 34       		.byte	52
 7568 0003 35       		.byte	53
 7569 0004 00000000 		.word	vVoltageHandle
 7570 0008 33       		.byte	51
 7571 0009 35       		.byte	53
 7572 000a 34       		.byte	52
 7573 000b 35       		.byte	53
 7574 000c 00000000 		.word	vVoltageHandle
 7575 0010 33       		.byte	51
 7576 0011 36       		.byte	54
 7577 0012 34       		.byte	52
 7578 0013 35       		.byte	53
 7579 0014 00000000 		.word	vVoltageHandle
 7580 0018 33       		.byte	51
 7581 0019 32       		.byte	50
 7582 001a 34       		.byte	52
 7583 001b 35       		.byte	53
 7584 001c 00000000 		.word	vVoltageHandle
 7585 0020 37       		.byte	55
 7586 0021 38       		.byte	56
 7587 0022 33       		.byte	51
 7588 0023 38       		.byte	56
 7589 0024 00000000 		.word	Estatus_Modify_CurrentEvent
 7590 0028 38       		.byte	56
 7591 0029 38       		.byte	56
 7592 002a 33       		.byte	51
 7593 002b 38       		.byte	56
 7594 002c 00000000 		.word	Estatus_Modify_CurrentEvent
 7595 0030 39       		.byte	57
 7596 0031 38       		.byte	56
 7597 0032 33       		.byte	51
 7598 0033 38       		.byte	56
 7599 0034 00000000 		.word	Estatus_Modify_CurrentEvent
 7600 0038 3A       		.byte	58
 7601 0039 38       		.byte	56
 7602 003a 33       		.byte	51
 7603 003b 38       		.byte	56
 7604 003c 00000000 		.word	Estatus_Modify_CurrentEvent
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 203


 7605 0040 32       		.byte	50
 7606 0041 38       		.byte	56
 7607 0042 33       		.byte	51
 7608 0043 38       		.byte	56
 7609 0044 00000000 		.word	Estatus_Modify_CurrentEvent
 7610 0048 33       		.byte	51
 7611 0049 33       		.byte	51
 7612 004a 34       		.byte	52
 7613 004b 33       		.byte	51
 7614 004c 00000000 		.word	vNowEnergy_Modifier
 7615 0050 33       		.byte	51
 7616 0051 34       		.byte	52
 7617 0052 34       		.byte	52
 7618 0053 33       		.byte	51
 7619 0054 00000000 		.word	vNowEnergy_Modifier
 7620 0058 33       		.byte	51
 7621 0059 35       		.byte	53
 7622 005a 34       		.byte	52
 7623 005b 33       		.byte	51
 7624 005c 00000000 		.word	vNowEnergy_Modifier
 7625 0060 33       		.byte	51
 7626 0061 36       		.byte	54
 7627 0062 34       		.byte	52
 7628 0063 33       		.byte	51
 7629 0064 00000000 		.word	vNowEnergy_Modifier
 7630 0068 33       		.byte	51
 7631 0069 37       		.byte	55
 7632 006a 34       		.byte	52
 7633 006b 33       		.byte	51
 7634 006c 00000000 		.word	vNowEnergy_Modifier
 7635 0070 33       		.byte	51
 7636 0071 32       		.byte	50
 7637 0072 34       		.byte	52
 7638 0073 33       		.byte	51
 7639 0074 00000000 		.word	vNowEnergy_Modifier
 7640 0078 33       		.byte	51
 7641 0079 33       		.byte	51
 7642 007a 48       		.byte	72
 7643 007b 33       		.byte	51
 7644 007c 00000000 		.word	vNowEnergy_Modifier
 7645 0080 33       		.byte	51
 7646 0081 33       		.byte	51
 7647 0082 5C       		.byte	92
 7648 0083 33       		.byte	51
 7649 0084 00000000 		.word	vNowEnergy_Modifier
 7650 0088 33       		.byte	51
 7651 0089 33       		.byte	51
 7652 008a 70       		.byte	112
 7653 008b 33       		.byte	51
 7654 008c 00000000 		.word	vNowEnergy_Modifier
 7655 0090 34       		.byte	52
 7656 0091 34       		.byte	52
 7657 0092 39       		.byte	57
 7658 0093 38       		.byte	56
 7659 0094 00000000 		.word	vDayfrozen_Modifier
 7660 0098 34       		.byte	52
 7661 0099 33       		.byte	51
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 204


 7662 009a 34       		.byte	52
 7663 009b 33       		.byte	51
 7664 009c 00000000 		.word	vAccountEnergy_Modify
 7665 00a0 34       		.byte	52
 7666 00a1 34       		.byte	52
 7667 00a2 34       		.byte	52
 7668 00a3 33       		.byte	51
 7669 00a4 00000000 		.word	vAccountEnergy_Modify
 7670 00a8 34       		.byte	52
 7671 00a9 35       		.byte	53
 7672 00aa 34       		.byte	52
 7673 00ab 33       		.byte	51
 7674 00ac 00000000 		.word	vAccountEnergy_Modify
 7675 00b0 34       		.byte	52
 7676 00b1 36       		.byte	54
 7677 00b2 34       		.byte	52
 7678 00b3 33       		.byte	51
 7679 00b4 00000000 		.word	vAccountEnergy_Modify
 7680 00b8 34       		.byte	52
 7681 00b9 37       		.byte	55
 7682 00ba 34       		.byte	52
 7683 00bb 33       		.byte	51
 7684 00bc 00000000 		.word	vAccountEnergy_Modify
 7685 00c0 34       		.byte	52
 7686 00c1 32       		.byte	50
 7687 00c2 34       		.byte	52
 7688 00c3 33       		.byte	51
 7689 00c4 00000000 		.word	vAccountEnergy_Modify
 7690 00c8 34       		.byte	52
 7691 00c9 33       		.byte	51
 7692 00ca 48       		.byte	72
 7693 00cb 33       		.byte	51
 7694 00cc 00000000 		.word	vAccountEnergy_Modify
 7695 00d0 34       		.byte	52
 7696 00d1 33       		.byte	51
 7697 00d2 5C       		.byte	92
 7698 00d3 33       		.byte	51
 7699 00d4 00000000 		.word	vAccountEnergy_Modify
 7700 00d8 34       		.byte	52
 7701 00d9 33       		.byte	51
 7702 00da 70       		.byte	112
 7703 00db 33       		.byte	51
 7704 00dc 00000000 		.word	vAccountEnergy_Modify
 7705 00e0 33       		.byte	51
 7706 00e1 37       		.byte	55
 7707 00e2 34       		.byte	52
 7708 00e3 35       		.byte	53
 7709 00e4 00000000 		.word	Get_VChange_State
 7710 00e8 33       		.byte	51
 7711 00e9 38       		.byte	56
 7712 00ea 34       		.byte	52
 7713 00eb 35       		.byte	53
 7714 00ec 00000000 		.word	Set_Voltage_Limit
 7715 00f0 33       		.byte	51
 7716 00f1 39       		.byte	57
 7717 00f2 34       		.byte	52
 7718 00f3 35       		.byte	53
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 205


 7719 00f4 00000000 		.word	Query_Voltage_Limit
 7720 00f8 33       		.byte	51
 7721 00f9 3A       		.byte	58
 7722 00fa 34       		.byte	52
 7723 00fb 35       		.byte	53
 7724 00fc 00000000 		.word	Default_Reset
 7725 0100 33       		.byte	51
 7726 0101 37       		.byte	55
 7727 0102 35       		.byte	53
 7728 0103 35       		.byte	53
 7729 0104 00000000 		.word	vCurrent_Limit_Set
 7730 0108 33       		.byte	51
 7731 0109 38       		.byte	56
 7732 010a 35       		.byte	53
 7733 010b 35       		.byte	53
 7734 010c 00000000 		.word	vCurrent_Limit_ReadSet
 7735 0110 33       		.byte	51
 7736 0111 39       		.byte	57
 7737 0112 35       		.byte	53
 7738 0113 35       		.byte	53
 7739 0114 00000000 		.word	vCurrent_CTRatio_Set
 7740 0118 33       		.byte	51
 7741 0119 3A       		.byte	58
 7742 011a 35       		.byte	53
 7743 011b 35       		.byte	53
 7744 011c 00000000 		.word	vCurrent_CTRatio_ReadSet
 7745 0120 33       		.byte	51
 7746 0121 3B       		.byte	59
 7747 0122 35       		.byte	53
 7748 0123 35       		.byte	53
 7749 0124 00000000 		.word	vCurrent_TransFormer_Capacity_ReadSet
 7750 0128 33       		.byte	51
 7751 0129 73       		.byte	115
 7752 012a 34       		.byte	52
 7753 012b 33       		.byte	51
 7754 012c 00000000 		.word	vEnergy_Modify_AbleSet
 7755 0130 33       		.byte	51
 7756 0131 74       		.byte	116
 7757 0132 34       		.byte	52
 7758 0133 33       		.byte	51
 7759 0134 00000000 		.word	vEnergy_Modify_RaitoSet
 7760 0138 33       		.byte	51
 7761 0139 75       		.byte	117
 7762 013a 34       		.byte	52
 7763 013b 33       		.byte	51
 7764 013c 00000000 		.word	vEnergy_Modify_Reset
 7765 0140 33       		.byte	51
 7766 0141 76       		.byte	118
 7767 0142 34       		.byte	52
 7768 0143 33       		.byte	51
 7769 0144 00000000 		.word	vEnergy_Modify_ReadSet
 7770 0148 33       		.byte	51
 7771 0149 77       		.byte	119
 7772 014a 34       		.byte	52
 7773 014b 33       		.byte	51
 7774 014c 00000000 		.word	vEnergy_Modify_ReadValue
 7775 0150 33       		.byte	51
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 206


 7776 0151 34       		.byte	52
 7777 0152 43       		.byte	67
 7778 0153 39       		.byte	57
 7779 0154 00000000 		.word	vLoadProfile_Voltage_Modify
 7780 0158 34       		.byte	52
 7781 0159 34       		.byte	52
 7782 015a 43       		.byte	67
 7783 015b 39       		.byte	57
 7784 015c 00000000 		.word	vLoadProfile_Voltage_Modify
 7785 0160 35       		.byte	53
 7786 0161 34       		.byte	52
 7787 0162 43       		.byte	67
 7788 0163 39       		.byte	57
 7789 0164 00000000 		.word	vLoadProfile_Voltage_Modify
 7790 0168 32       		.byte	50
 7791 0169 34       		.byte	52
 7792 016a 43       		.byte	67
 7793 016b 39       		.byte	57
 7794 016c 00000000 		.word	vLoadProfile_Voltage_Modify
 7795 0170 33       		.byte	51
 7796 0171 35       		.byte	53
 7797 0172 43       		.byte	67
 7798 0173 39       		.byte	57
 7799 0174 00000000 		.word	vLoadProfile_Current_Modify
 7800 0178 34       		.byte	52
 7801 0179 35       		.byte	53
 7802 017a 43       		.byte	67
 7803 017b 39       		.byte	57
 7804 017c 00000000 		.word	vLoadProfile_Current_Modify
 7805 0180 35       		.byte	53
 7806 0181 35       		.byte	53
 7807 0182 43       		.byte	67
 7808 0183 39       		.byte	57
 7809 0184 00000000 		.word	vLoadProfile_Current_Modify
 7810 0188 32       		.byte	50
 7811 0189 35       		.byte	53
 7812 018a 43       		.byte	67
 7813 018b 39       		.byte	57
 7814 018c 00000000 		.word	vLoadProfile_Current_Modify
 7815 0190 32       		.byte	50
 7816 0191 32       		.byte	50
 7817 0192 32       		.byte	50
 7818 0193 32       		.byte	50
 7819 0194 00000000 		.word	vRead_Version
 7820              		.section	.bss.Uart3_Rsvbuf,"aw",%nobits
 7821              		.align	2
 7824              	Uart3_Rsvbuf:
 7825 0000 00000000 		.space	1008
 7825      00000000 
 7825      00000000 
 7825      00000000 
 7825      00000000 
 7826              		.section	.data.UartDB,"aw",%progbits
 7827              		.align	2
 7830              	UartDB:
 7831 0000 00480040 		.word	1073760256
 7832 0004 00000000 		.word	Uart3_Rsvbuf
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 207


 7833 0008 00000000 		.word	Uart3_Sndbuf
 7834              		.section	.data.pUartDB,"aw",%progbits
 7835              		.align	2
 7836              		.set	.LANCHOR6,. + 0
 7839              	pUartDB:
 7840 0000 00000000 		.word	UartDB
 7841              		.section	.bss.Voltage_Change_State,"aw",%nobits
 7842              		.set	.LANCHOR5,. + 0
 7845              	Voltage_Change_State:
 7846 0000 00       		.space	1
 7847              		.section	.data.pUartZD,"aw",%progbits
 7848              		.align	2
 7851              	pUartZD:
 7852 0000 00000000 		.word	UartZD
 7853              		.section	.data.B_Voltage,"aw",%progbits
 7854              		.align	2
 7855              		.set	.LANCHOR8,. + 0
 7858              	B_Voltage:
 7859 0000 98080000 		.word	2200
 7860              		.section	.bss.uc645DataDomainLength,"aw",%nobits
 7861              		.set	.LANCHOR0,. + 0
 7864              	uc645DataDomainLength:
 7865 0000 00       		.space	1
 7866              		.section	.bss.Uart1_Rsvbuf,"aw",%nobits
 7867              		.align	2
 7870              	Uart1_Rsvbuf:
 7871 0000 00000000 		.space	1008
 7871      00000000 
 7871      00000000 
 7871      00000000 
 7871      00000000 
 7872              		.section	.bss.Bcurrent,"aw",%nobits
 7873              		.align	2
 7874              		.set	.LANCHOR2,. + 0
 7877              	Bcurrent:
 7878 0000 00000000 		.space	8
 7878      00000000 
 7879              		.section	.data.UartIR,"aw",%progbits
 7880              		.align	2
 7883              	UartIR:
 7884 0000 00440040 		.word	1073759232
 7885 0004 00000000 		.word	Uart2_Rsvbuf
 7886 0008 00000000 		.word	Uart2_Sndbuf
 7887              		.section	.bss.Ccurrent,"aw",%nobits
 7888              		.align	2
 7889              		.set	.LANCHOR3,. + 0
 7892              	Ccurrent:
 7893 0000 00000000 		.space	8
 7893      00000000 
 7894              		.section	.data.Dayfrozen_Change_State,"aw",%progbits
 7895              		.set	.LANCHOR10,. + 0
 7898              	Dayfrozen_Change_State:
 7899 0000 FF       		.byte	-1
 7900              		.section	.data.UartZD,"aw",%progbits
 7901              		.align	2
 7904              	UartZD:
 7905 0000 00380140 		.word	1073821696
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 208


 7906 0004 00000000 		.word	Uart1_Rsvbuf
 7907 0008 00000000 		.word	Uart1_Sndbuf
 7908              		.section	.bss.ucRcvStatus,"aw",%nobits
 7909              		.set	.LANCHOR11,. + 0
 7912              	ucRcvStatus:
 7913 0000 00       		.space	1
 7914              		.section	.bss.Acurrent,"aw",%nobits
 7915              		.align	2
 7916              		.set	.LANCHOR1,. + 0
 7919              	Acurrent:
 7920 0000 00000000 		.space	8
 7920      00000000 
 7921              		.section	.bss.Uart2_Rsvbuf,"aw",%nobits
 7922              		.align	2
 7925              	Uart2_Rsvbuf:
 7926 0000 00000000 		.space	1008
 7926      00000000 
 7926      00000000 
 7926      00000000 
 7926      00000000 
 7927              		.section	.data.pUartIR,"aw",%progbits
 7928              		.align	2
 7929              		.set	.LANCHOR7,. + 0
 7932              	pUartIR:
 7933 0000 00000000 		.word	UartIR
 7934              		.section	.rodata.INFRDataID_Handle_List,"a",%progbits
 7935              		.align	2
 7936              		.set	.LANCHOR13,. + 0
 7939              	INFRDataID_Handle_List:
 7940 0000 33       		.byte	51
 7941 0001 37       		.byte	55
 7942 0002 34       		.byte	52
 7943 0003 35       		.byte	53
 7944 0004 00000000 		.word	Get_VChange_State
 7945 0008 33       		.byte	51
 7946 0009 39       		.byte	57
 7947 000a 34       		.byte	52
 7948 000b 35       		.byte	53
 7949 000c 00000000 		.word	Query_Voltage_Limit
 7950 0010 33       		.byte	51
 7951 0011 3A       		.byte	58
 7952 0012 34       		.byte	52
 7953 0013 35       		.byte	53
 7954 0014 00000000 		.word	Default_Reset
 7955 0018 33       		.byte	51
 7956 0019 3B       		.byte	59
 7957 001a 34       		.byte	52
 7958 001b 35       		.byte	53
 7959 001c 00000000 		.word	vVoltage_SetMaxValue
 7960 0020 33       		.byte	51
 7961 0021 3C       		.byte	60
 7962 0022 34       		.byte	52
 7963 0023 35       		.byte	53
 7964 0024 00000000 		.word	vVoltage_SetMinValue
 7965 0028 33       		.byte	51
 7966 0029 3D       		.byte	61
 7967 002a 34       		.byte	52
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 209


 7968 002b 35       		.byte	53
 7969 002c 00000000 		.word	vVoltage_SetMaxMaxValue
 7970 0030 33       		.byte	51
 7971 0031 3E       		.byte	62
 7972 0032 34       		.byte	52
 7973 0033 35       		.byte	53
 7974 0034 00000000 		.word	vVoltage_SetMinMinValue
 7975 0038 32       		.byte	50
 7976 0039 32       		.byte	50
 7977 003a 32       		.byte	50
 7978 003b 32       		.byte	50
 7979 003c 00000000 		.word	vRead_Version
 7980              		.section	.data.A_Voltage,"aw",%progbits
 7981              		.align	2
 7982              		.set	.LANCHOR4,. + 0
 7985              	A_Voltage:
 7986 0000 98080000 		.word	2200
 7987              		.section	.bss.Uart2_Sndbuf,"aw",%nobits
 7988              		.align	2
 7991              	Uart2_Sndbuf:
 7992 0000 00000000 		.space	1008
 7992      00000000 
 7992      00000000 
 7992      00000000 
 7992      00000000 
 7993              		.section	.bss.Uart1_Sndbuf,"aw",%nobits
 7994              		.align	2
 7997              	Uart1_Sndbuf:
 7998 0000 00000000 		.space	1008
 7998      00000000 
 7998      00000000 
 7998      00000000 
 7998      00000000 
 7999              		.text
 8000              	.Letext0:
 8001              		.file 2 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\machine\\_defaul
 8002              		.file 3 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\sys\\_stdint.h"
 8003              		.file 4 "../cmsis/include/stm32f37x.h"
 8004              		.file 5 "../user/include/BaseDef.h"
 8005              		.file 6 "../user/include/Uart.h"
 8006              		.file 7 "../user/include/DLT645.h"
 8007              		.file 8 "../cmsis/include/core_cm4.h"
 8008              		.file 9 "../user/include/Time.h"
 8009              		.file 10 "../user/include/Flash.h"
 8010              		.file 11 "../stdperiph/include/stm32f37x_usart.h"
 8011              		.file 12 "../stdperiph/include/stm32f37x_flash.h"
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 210


DEFINED SYMBOLS
                            *ABS*:00000000 DLT645.c
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:22     .text.dwCheckFrame:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:26     .text.dwCheckFrame:00000000 dwCheckFrame
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:102    .text.dwCheckFrame:00000044 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:107    .text.BCD_Verity:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:111    .text.BCD_Verity:00000000 BCD_Verity
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:201    .text.Get_Voltage:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:205    .text.Get_Voltage:00000000 Get_Voltage
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:258    .text.vGet_Current:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:262    .text.vGet_Current:00000000 vGet_Current
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:338    .text.vGet_Current:00000058 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:343    .text.vPut_Current:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:347    .text.vPut_Current:00000000 vPut_Current
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:462    .text.vPut_Current:000000b0 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:471    .text.blCurrentSingle_Modify_Method:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:475    .text.blCurrentSingle_Modify_Method:00000000 blCurrentSingle_Modify_Method
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:808    .text.blCurrentSingle_Modify_Method:000001ac $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:814    .text.vCurrentTriple_Modify_Method:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:818    .text.vCurrentTriple_Modify_Method:00000000 vCurrentTriple_Modify_Method
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:865    .text.vCurrent_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:870    .text.vCurrent_Modify:00000000 vCurrent_Modify
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:895    .text.vCurrent_Modify:00000014 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:900    .text.vCurrent_Modify:0000001e $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1293   .text.vCurrent_Modify:0000026c $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1301   .text.vCurrent_Limit_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1306   .text.vCurrent_Limit_Modify:00000000 vCurrent_Limit_Modify
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1319   .text.Get_Estatus:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1323   .text.Get_Estatus:00000000 Get_Estatus
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1347   .text.Estatus_Modify_CurrentEvent:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1352   .text.Estatus_Modify_CurrentEvent:00000000 Estatus_Modify_CurrentEvent
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1373   .text.Estatus_Modify_CurrentEvent:00000010 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1576   .text.Estatus_Modify_CurrentEvent:00000110 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1581   .text.GetLowByte:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1585   .text.GetLowByte:00000000 GetLowByte
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1626   .text.GetLowByte:00000048 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1633   .text.GetHighByte:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1637   .text.GetHighByte:00000000 GetHighByte
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1671   .text.GetHighByte:00000034 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1677   .text.Get_Energy:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1681   .text.Get_Energy:00000000 Get_Energy
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1790   .text.Get_Energy:00000094 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1795   .text.Fill_Energy:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1799   .text.Fill_Energy:00000000 Fill_Energy
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1885   .text.Fill_Energy:000000b8 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1893   .text.vVoltage_SetMaxMaxValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1898   .text.vVoltage_SetMaxMaxValue:00000000 vVoltage_SetMaxMaxValue
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1911   .text.vVoltage_SetMinMinValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1916   .text.vVoltage_SetMinMinValue:00000000 vVoltage_SetMinMinValue
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1929   .text.vLoadProfile_Voltage_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1934   .text.vLoadProfile_Voltage_Modify:00000000 vLoadProfile_Voltage_Modify
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:2067   .text.vLoadProfile_Voltage_Modify:000000a0 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:2072   .text.vLoadProfile_Current_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:2077   .text.vLoadProfile_Current_Modify:00000000 vLoadProfile_Current_Modify
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:2090   .text.Get_VChange_State:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:2095   .text.Get_VChange_State:00000000 Get_VChange_State
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:2229   .text.Get_VChange_State:000000a0 $d
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 211


C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:2242   .text.Set_Voltage_Limit:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:2247   .text.Set_Voltage_Limit:00000000 Set_Voltage_Limit
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:2407   .text.Set_Voltage_Limit:000000c8 $d
                            *COM*:00000004 Voltage_MAX
                            *COM*:00000004 Voltage_MIN
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:2424   .text.Query_Voltage_Limit:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:2429   .text.Query_Voltage_Limit:00000000 Query_Voltage_Limit
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:2574   .text.Query_Voltage_Limit:000000c8 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:2587   .text.Default_Reset:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:2592   .text.Default_Reset:00000000 Default_Reset
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:2750   .text.Default_Reset:000000d8 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:2772   .text.vCurrent_Limit_Set:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:2777   .text.vCurrent_Limit_Set:00000000 vCurrent_Limit_Set
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:2880   .text.vCurrent_Limit_Set:00000078 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:2891   .text.vCurrent_CTRatio_Set:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:2896   .text.vCurrent_CTRatio_Set:00000000 vCurrent_CTRatio_Set
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:3000   .text.vCurrent_CTRatio_Set:00000078 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:3011   .text.vCurrent_Limit_ReadSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:3016   .text.vCurrent_Limit_ReadSet:00000000 vCurrent_Limit_ReadSet
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:3143   .text.vCurrent_Limit_ReadSet:000000a4 $d
                            *COM*:00000010 TransFormer
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:3155   .text.vCurrent_CTRatio_ReadSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:3160   .text.vCurrent_CTRatio_ReadSet:00000000 vCurrent_CTRatio_ReadSet
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:3276   .text.vCurrent_CTRatio_ReadSet:00000090 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:3288   .text.vCurrent_TransFormer_Capacity_ReadSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:3293   .text.vCurrent_TransFormer_Capacity_ReadSet:00000000 vCurrent_TransFormer_Capacity_ReadSet
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:3409   .text.vCurrent_TransFormer_Capacity_ReadSet:00000090 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:3421   .text.vEnergy_Modify_ReadSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:3426   .text.vEnergy_Modify_ReadSet:00000000 vEnergy_Modify_ReadSet
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:3549   .text.vEnergy_Modify_ReadSet:000000a4 $d
                            *COM*:00000001 ucDayfrozen_Modify_Ratio
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:3563   .text.vRead_Version:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:3568   .text.vRead_Version:00000000 vRead_Version
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:3688   .text.vRead_Version:00000090 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:3698   .text.vEnergy_Modify_RaitoSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:3703   .text.vEnergy_Modify_RaitoSet:00000000 vEnergy_Modify_RaitoSet
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:3856   .text.vEnergy_Modify_RaitoSet:000000d0 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:3869   .text.vVoltage_SetMinValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:3874   .text.vVoltage_SetMinValue:00000000 vVoltage_SetMinValue
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:4007   .text.vVoltage_SetMinValue:000000a0 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:4018   .text.vEnergy_Modify_ReadValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:4023   .text.vEnergy_Modify_ReadValue:00000000 vEnergy_Modify_ReadValue
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:4183   .text.vEnergy_Modify_ReadValue:000000d0 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:4196   .text.vVoltage_SetMaxValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:4201   .text.vVoltage_SetMaxValue:00000000 vVoltage_SetMaxValue
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:4336   .text.vVoltage_SetMaxValue:000000a4 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:4347   .text.vEnergy_Modify_AbleSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:4352   .text.vEnergy_Modify_AbleSet:00000000 vEnergy_Modify_AbleSet
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:4524   .text.vEnergy_Modify_AbleSet:000000d4 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:4538   .text.vEnergy_Modify_Reset:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:4543   .text.vEnergy_Modify_Reset:00000000 vEnergy_Modify_Reset
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:4692   .text.vEnergy_Modify_Reset:000000b0 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:4706   .text.blRecvFrame:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:4711   .text.blRecvFrame:00000000 blRecvFrame
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:4894   .text.blRecvFrame:000000f0 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:4902   .text.vDBDataID_Handle:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:4907   .text.vDBDataID_Handle:00000000 vDBDataID_Handle
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 212


C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:5017   .text.vDBDataID_Handle:0000008c $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:6664   .text.vNowEnergy_Modifier:00000000 vNowEnergy_Modifier
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7060   .text.vDayfrozen_Modifier:00000000 vDayfrozen_Modifier
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7311   .text.vAccountEnergy_Modify:00000000 vAccountEnergy_Modify
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:5031   .text.vINFRDataID_Handle:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:5036   .text.vINFRDataID_Handle:00000000 vINFRDataID_Handle
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:5130   .text.vINFRDataID_Handle:00000074 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:5140   .text.blVoltage_Create:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:5145   .text.blVoltage_Create:00000000 blVoltage_Create
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:5168   .text.blVoltage_Create:00000012 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:5173   .text.blVoltage_Create:0000001c $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:5536   .text.blVoltage_Create:000001dc $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:5545   .text.Voltage_Change_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:5550   .text.Voltage_Change_Init:00000000 Voltage_Change_Init
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:5638   .text.Voltage_Change_Init:00000068 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:5650   .text.Voltage_Modifier_Method:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:5655   .text.Voltage_Modifier_Method:00000000 Voltage_Modifier_Method
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:5772   .text.Voltage_Modifier_Method:00000080 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:5778   .text.Voltage_Modifier:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:5783   .text.Voltage_Modifier:00000000 Voltage_Modifier
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:6125   .text.Voltage_Modifier:000001ec $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:6136   .text.vVoltageHandle:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:6141   .text.vVoltageHandle:00000000 vVoltageHandle
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:6171   .text.vVoltageHandle:00000018 $d
                            *COM*:00000001 Voltage_Frame_Status
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:6178   .text.vCurrent_Limit_DefaultSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:6183   .text.vCurrent_Limit_DefaultSet:00000000 vCurrent_Limit_DefaultSet
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:6258   .text.vCurrent_Limit_DefaultSet:00000060 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:6267   .text.vCurrentDirect_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:6272   .text.vCurrentDirect_Modify:00000000 vCurrentDirect_Modify
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:6287   .text.vCurrentDirect_Modify:0000000c $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:6453   .text.vCurrent_Count_Clear:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:6458   .text.vCurrent_Count_Clear:00000000 vCurrent_Count_Clear
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:6479   .text.vCurrent_Count_Clear:00000010 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:6486   .text.vEnergy_Modify_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:6491   .text.vEnergy_Modify_Init:00000000 vEnergy_Modify_Init
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:6528   .text.vEnergy_Modify_Init:00000024 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:6537   .text.vNow_Frozen_Modify_Mothod:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:6542   .text.vNow_Frozen_Modify_Mothod:00000000 vNow_Frozen_Modify_Mothod
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:6653   .text.vNow_Frozen_Modify_Mothod:00000088 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:6659   .text.vNowEnergy_Modifier:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:6708   .text.vNowEnergy_Modifier:0000002e $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:6714   .text.vNowEnergy_Modifier:00000034 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7034   .text.vNowEnergy_Modifier:00000210 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7055   .text.vDayfrozen_Modifier:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7254   .text.vDayfrozen_Modifier:0000012c $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7269   .text.vAccountEnergy_Modify_Mothod:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7274   .text.vAccountEnergy_Modify_Mothod:00000000 vAccountEnergy_Modify_Mothod
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7301   .text.vAccountEnergy_Modify_Mothod:00000014 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7306   .text.vAccountEnergy_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7519   .text.vAccountEnergy_Modify:00000144 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7892   .bss.Ccurrent:00000000 Ccurrent
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7877   .bss.Bcurrent:00000000 Bcurrent
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7919   .bss.Acurrent:00000000 Acurrent
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7551   .data.C_Voltage:00000000 C_Voltage
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7858   .data.B_Voltage:00000000 B_Voltage
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7985   .data.A_Voltage:00000000 A_Voltage
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 213


C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7898   .data.Dayfrozen_Change_State:00000000 Dayfrozen_Change_State
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7845   .bss.Voltage_Change_State:00000000 Voltage_Change_State
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7864   .bss.uc645DataDomainLength:00000000 uc645DataDomainLength
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7912   .bss.ucRcvStatus:00000000 ucRcvStatus
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7564   .rodata.DBDataID_Handle_List:00000000 DBDataID_Handle_List
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7939   .rodata.INFRDataID_Handle_List:00000000 INFRDataID_Handle_List
                            *COM*:000003e8 ucApp_Buf_INFR
                            *COM*:000003e8 ucApp_Buf_ZD2DB
                            *COM*:000003e8 ucApp_Buf_DB2ZD
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7932   .data.pUartIR:00000000 pUartIR
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7839   .data.pUartDB:00000000 pUartDB
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7851   .data.pUartZD:00000000 pUartZD
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7547   .data.C_Voltage:00000000 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7554   .bss.Uart3_Sndbuf:00000000 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7557   .bss.Uart3_Sndbuf:00000000 Uart3_Sndbuf
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7560   .rodata.DBDataID_Handle_List:00000000 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7821   .bss.Uart3_Rsvbuf:00000000 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7824   .bss.Uart3_Rsvbuf:00000000 Uart3_Rsvbuf
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7827   .data.UartDB:00000000 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7830   .data.UartDB:00000000 UartDB
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7835   .data.pUartDB:00000000 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7846   .bss.Voltage_Change_State:00000000 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7848   .data.pUartZD:00000000 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7904   .data.UartZD:00000000 UartZD
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7854   .data.B_Voltage:00000000 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7865   .bss.uc645DataDomainLength:00000000 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7867   .bss.Uart1_Rsvbuf:00000000 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7870   .bss.Uart1_Rsvbuf:00000000 Uart1_Rsvbuf
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7873   .bss.Bcurrent:00000000 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7880   .data.UartIR:00000000 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7883   .data.UartIR:00000000 UartIR
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7925   .bss.Uart2_Rsvbuf:00000000 Uart2_Rsvbuf
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7991   .bss.Uart2_Sndbuf:00000000 Uart2_Sndbuf
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7888   .bss.Ccurrent:00000000 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7901   .data.UartZD:00000000 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7997   .bss.Uart1_Sndbuf:00000000 Uart1_Sndbuf
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7913   .bss.ucRcvStatus:00000000 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7915   .bss.Acurrent:00000000 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7922   .bss.Uart2_Rsvbuf:00000000 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7928   .data.pUartIR:00000000 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7935   .rodata.INFRDataID_Handle_List:00000000 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7981   .data.A_Voltage:00000000 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7988   .bss.Uart2_Sndbuf:00000000 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:7994   .bss.Uart1_Sndbuf:00000000 $d
                     .debug_frame:00000010 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1382   .text.Estatus_Modify_CurrentEvent:00000019 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:1382   .text.Estatus_Modify_CurrentEvent:0000001a $t
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:6292   .text.vCurrentDirect_Modify:00000011 $d
C:\Users\strag\AppData\Local\Temp\cc1IprQu.s:6292   .text.vCurrentDirect_Modify:00000012 $t

UNDEFINED SYMBOLS
Flash_Write_Word
ucDrv_Buf_PutBytes
blDrv_Buf_IsEmpty
Uart_DataPut
USART_ITConfig
EEProm_Read
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1IprQu.s 			page 214


Flash_Read_Word
FLASH_Unlock
FLASH_ErasePage
FLASH_Lock
ucDrv_Buf_GetBytes
blTime2_Update
blWordsCounterStatus
uwTime2WordsCounter
blFramesCounterStatus
uwTime2FramesCounter
__aeabi_uldivmod
