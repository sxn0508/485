ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"DLT645.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.dwCheckFrame,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	dwCheckFrame:
  27              	.LFB112:
  28              		.file 1 "../user/source/DLT645.c"
   1:../user/source/DLT645.c **** #include "DLT645.h"
   2:../user/source/DLT645.c **** #include "Time.h"
   3:../user/source/DLT645.c **** #include "Flash.h"
   4:../user/source/DLT645.c **** 
   5:../user/source/DLT645.c **** /*
   6:../user/source/DLT645.c **** #define ENABLE_ESTATUS						//µç±í×´Ì¬×ÖĞŞ¸Ä¹¦ÄÜ 
   7:../user/source/DLT645.c **** #define ENABLE_CURRENT_DEVIATION			//µçÁ÷¸÷Ïà²îÖµĞŞ¸Ä¹¦ÄÜ
   8:../user/source/DLT645.c **** #define ENABLE_CURRENT_LIMIT				//µçÁ÷×î´óÖµĞŞ¸Ä¹¦ÄÜ
   9:../user/source/DLT645.c **** #define ENABLE_ENERGY_MODIFY				//ĞŞ¸ÄÕıÏòÓĞ¹¦
  10:../user/source/DLT645.c **** #define ENABLE_INFR							//ĞŞ¸ÄÕıÏòÓĞ¹¦
  11:../user/source/DLT645.c **** */
  12:../user/source/DLT645.c **** const DefDataIDHandle INFRDataID_Handle_List[] = {
  13:../user/source/DLT645.c ****     {{0X33, 0X37, 0X34, 0X35}, Get_VChange_State},       //À©³ä£ºµçÑ¹ĞŞ¸ÄÊ¹ÄÜ/½ûÄÜID_02010400,
  14:../user/source/DLT645.c ****     {{0X33, 0X39, 0X34, 0X35}, Query_Voltage_Limit},     //À©³ä£ºµçÑ¹ÏŞÖµ²éÑ¯ID_02010600,
  15:../user/source/DLT645.c ****     {{0X33, 0X3A, 0X34, 0X35}, Default_Reset},           //À©³ä£ºµçÑ¹ĞŞ¸Ä¹¦ÄÜ»Ö¸´³ö³§ÉèÖÃID_0201070
  16:../user/source/DLT645.c ****     {{0X33, 0X3B, 0X34, 0X35}, vVoltage_SetMaxValue},    //À©³ä£ºµçÑ¹ÉèÖÃºÏ¸ñÉÏÏŞ
  17:../user/source/DLT645.c ****     {{0X33, 0X3C, 0X34, 0X35}, vVoltage_SetMinValue},    //À©³ä£ºµçÑ¹ÉèÖÃºÏ¸ñÏÂÏŞ
  18:../user/source/DLT645.c ****     {{0X33, 0X3D, 0X34, 0X35}, vVoltage_SetMaxMaxValue}, //À©³ä£ºµçÑ¹ÉèÖÃĞŞ¸ÄÉÏÏŞ
  19:../user/source/DLT645.c ****     {{0X33, 0X3E, 0X34, 0X35}, vVoltage_SetMinMinValue}, //À©³ä£ºµçÑ¹ÉèÖÃĞŞ¸ÄÏÂÏŞ
  20:../user/source/DLT645.c **** #ifdef ENABLE_ENERGY_MODIFY
  21:../user/source/DLT645.c ****     {{0X33, 0X73, 0X34, 0X33}, vEnergy_Modify_AbleSet},   //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸ÄÊ¹ÄÜ/½ûÄÜID_000
  22:../user/source/DLT645.c ****     {{0X33, 0X74, 0X34, 0X33}, vEnergy_Modify_RaitoSet},  //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä±ÈÀıÉèÖÃID_0001
  23:../user/source/DLT645.c ****     {{0X33, 0X75, 0X34, 0X33}, vEnergy_Modify_Reset},     //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä»Ö¸´³ö³§ÉèÖÃID_
  24:../user/source/DLT645.c ****     {{0X33, 0X76, 0X34, 0X33}, vEnergy_Modify_ReadSet},   //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä¶ÁÈ¡Éè£ºÖÃ
  25:../user/source/DLT645.c ****     {{0X33, 0X77, 0X34, 0X33}, vEnergy_Modify_ReadValue}, //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä¶ÁÈ¡Éè£ºÖÃ
  26:../user/source/DLT645.c **** #endif
  27:../user/source/DLT645.c **** /*µçÁ÷ÖØ¹ıÔØ*/
  28:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
  29:../user/source/DLT645.c ****     {{0X33, 0X37, 0X35, 0X35}, vCurrent_Limit_Set},                    //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:µ
  30:../user/source/DLT645.c ****     {{0X33, 0X38, 0X35, 0X35}, vCurrent_Limit_ReadSet},                //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:µ
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 2


  31:../user/source/DLT645.c ****     {{0X33, 0X39, 0X35, 0X35}, vCurrent_CTRatio_Set},                  //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:¶
  32:../user/source/DLT645.c ****     {{0X33, 0X3A, 0X35, 0X35}, vCurrent_CTRatio_ReadSet},              //À©³ä£º¶ÁÈ¡µçÁ÷ÖØ¹ıÔØ²ÎÊı:¶
  33:../user/source/DLT645.c ****     {{0X33, 0X3B, 0X35, 0X35}, vCurrent_TransFormer_Capacity_ReadSet}, //À©³ä£º¶ÁÈ¡µçÁ÷ÖØ¹ıÔØ²ÎÊı:±
  34:../user/source/DLT645.c **** #endif
  35:../user/source/DLT645.c ****     {{0X32, 0X32, 0X32, 0X32}, vRead_Version}, //À©³ä£º¶ÁÈ¡³ÌĞò°æ±¾
  36:../user/source/DLT645.c **** };
  37:../user/source/DLT645.c **** const DefDataIDHandle DBDataID_Handle_List[] = {
  38:../user/source/DLT645.c ****     {{0X33, 0X34, 0X34, 0X35}, vVoltageHandle}, //AÏàµçÑ¹ID_02010100,
  39:../user/source/DLT645.c ****     {{0X33, 0X35, 0X34, 0X35}, vVoltageHandle}, //BÏàµçÑ¹ID_02010200,
  40:../user/source/DLT645.c ****     {{0X33, 0X36, 0X34, 0X35}, vVoltageHandle}, //CÏàµçÑ¹ID_02010300,
  41:../user/source/DLT645.c ****     {{0X33, 0X32, 0X34, 0X35}, vVoltageHandle}, //µçÑ¹Êı¾İ¿éID_0201FF00,
  42:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_DEVIATION
  43:../user/source/DLT645.c ****     {{0X33, 0X34, 0X35, 0X35}, vCurrent_Modify}, //AÏàµçÁ÷ID_02020100,
  44:../user/source/DLT645.c ****     {{0X33, 0X35, 0X35, 0X35}, vCurrent_Modify}, //BÏàµçÁ÷ID_02020200,
  45:../user/source/DLT645.c ****     {{0X33, 0X36, 0X35, 0X35}, vCurrent_Modify}, //CÏàµçÁ÷ID_02020300,
  46:../user/source/DLT645.c ****     {{0X33, 0X32, 0X35, 0X35}, vCurrent_Modify}, //µçÁ÷Êı¾İ¿éID_0202FF00,
  47:../user/source/DLT645.c **** #else
  48:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
  49:../user/source/DLT645.c ****     {{0X33, 0X34, 0X35, 0X35}, vCurrent_Limit_Modify}, //AÏàµçÁ÷ID_02020100,
  50:../user/source/DLT645.c ****     {{0X33, 0X35, 0X35, 0X35}, vCurrent_Limit_Modify}, //BÏàµçÁ÷ID_02020200,
  51:../user/source/DLT645.c ****     {{0X33, 0X36, 0X35, 0X35}, vCurrent_Limit_Modify}, //CÏàµçÁ÷ID_02020300,
  52:../user/source/DLT645.c ****     {{0X33, 0X32, 0X35, 0X35}, vCurrent_Limit_Modify}, //µçÁ÷Êı¾İ¿éID_0202FF00,
  53:../user/source/DLT645.c **** #endif
  54:../user/source/DLT645.c **** #endif
  55:../user/source/DLT645.c ****     {{0X37, 0X38, 0X33, 0X38}, Estatus_Modify_CurrentEvent}, //µç±íÔËĞĞ×´Ì¬×Ö4ID_04000504,
  56:../user/source/DLT645.c ****     {{0X38, 0X38, 0X33, 0X38}, Estatus_Modify_CurrentEvent}, //µç±íÔËĞĞ×´Ì¬×Ö5ID_04000505,
  57:../user/source/DLT645.c ****     {{0X39, 0X38, 0X33, 0X38}, Estatus_Modify_CurrentEvent}, //µç±íÔËĞĞ×´Ì¬×Ö6ID_04000506,
  58:../user/source/DLT645.c ****     {{0X3A, 0X38, 0X33, 0X38}, Estatus_Modify_CurrentEvent}, //µç±íÔËĞĞ×´Ì¬×Ö7ID_04000507,
  59:../user/source/DLT645.c ****     {{0X32, 0X38, 0X33, 0X38}, Estatus_Modify_CurrentEvent}, //µç±íÔËĞĞ×´Ì¬×ÖÊı¾İ¿éID_040005FF,
  60:../user/source/DLT645.c ****     {{0X33, 0X33, 0X34, 0X33}, vNowEnergy_Modifier},         //µ±Ç°ÕıÏòÓĞ¹¦×ÜµçÄÜID_00010000,
  61:../user/source/DLT645.c ****     {{0X33, 0X34, 0X34, 0X33}, vNowEnergy_Modifier},         //µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜID_00010100,
  62:../user/source/DLT645.c ****     {{0X33, 0X35, 0X34, 0X33}, vNowEnergy_Modifier},         //µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ2µçÄÜID_00010200,
  63:../user/source/DLT645.c ****     {{0X33, 0X36, 0X34, 0X33}, vNowEnergy_Modifier},         //µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ3µçÄÜID_00010300,
  64:../user/source/DLT645.c ****     {{0X33, 0X37, 0X34, 0X33}, vNowEnergy_Modifier},         //µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ4µçÄÜID_00010400,
  65:../user/source/DLT645.c ****     {{0X33, 0X32, 0X34, 0X33}, vNowEnergy_Modifier},         //µ±Ç°ÕıÏòÓĞ¹¦µçÄÜÊı¾İ¿éID_0001FF00,
  66:../user/source/DLT645.c ****     {{0X33, 0X33, 0X48, 0X33}, vNowEnergy_Modifier},         //µ±Ç°AÏàÕıÏòÓĞ¹¦ID_00150000,
  67:../user/source/DLT645.c ****     {{0X33, 0X33, 0X5C, 0X33}, vNowEnergy_Modifier},         //µ±Ç°BÏàÕıÏòÓĞ¹¦ID_00290000,
  68:../user/source/DLT645.c ****     {{0X33, 0X33, 0X70, 0X33}, vNowEnergy_Modifier},         //µ±Ç°CÏàÕıÏòÓĞ¹¦ID_003D0000,
  69:../user/source/DLT645.c ****     {{0X34, 0X34, 0X39, 0X38}, vDayfrozen_Modifier},         //ÉÏ1ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£©
  70:../user/source/DLT645.c ****     {{0X35, 0X34, 0X39, 0X38}, vDayfrozen_Modifier},         //ÉÏ2ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£©
  71:../user/source/DLT645.c ****     {{0X36, 0X34, 0X39, 0X38}, vDayfrozen_Modifier},         //ÉÏ3ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£©
  72:../user/source/DLT645.c ****     {{0X34, 0X33, 0X34, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦×ÜµçÄÜID_00010001,
  73:../user/source/DLT645.c ****     {{0X34, 0X34, 0X34, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜID_0001010
  74:../user/source/DLT645.c ****     {{0X34, 0X35, 0X34, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜ ID_000102
  75:../user/source/DLT645.c ****     {{0X34, 0X36, 0X34, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜID_0001030
  76:../user/source/DLT645.c ****     {{0X34, 0X37, 0X34, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜID_0001040
  77:../user/source/DLT645.c ****     {{0X34, 0X32, 0X34, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦µçÄÜÊı¾İ¿éID_0001FF
  78:../user/source/DLT645.c ****     {{0X34, 0X33, 0X48, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕAÏàÕıÏòÓĞ¹¦µçÄÜID_00150001,
  79:../user/source/DLT645.c ****     {{0X34, 0X33, 0X5C, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕBÏàÕıÏòÓĞ¹¦µçÄÜID_00290001,
  80:../user/source/DLT645.c ****     {{0X34, 0X33, 0X70, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕCÏàÕıÏòÓĞ¹¦µçÄÜID_003D0001,
  81:../user/source/DLT645.c ****     {{0X33, 0X37, 0X34, 0X35}, Get_VChange_State},           //À©³ä£ºµçÑ¹ĞŞ¸ÄÊ¹ÄÜ/½ûÄÜID_02010400,
  82:../user/source/DLT645.c ****     {{0X33, 0X38, 0X34, 0X35}, Set_Voltage_Limit},           //À©³ä£ºµçÑ¹ÏŞÖµÉèÖÃID_02010500,
  83:../user/source/DLT645.c ****     {{0X33, 0X39, 0X34, 0X35}, Query_Voltage_Limit},         //À©³ä£ºµçÑ¹ÏŞÖµ²éÑ¯ID_02010600,
  84:../user/source/DLT645.c ****     {{0X33, 0X3A, 0X34, 0X35}, Default_Reset},               //À©³ä£ºµçÑ¹ĞŞ¸Ä¹¦ÄÜ»Ö¸´³ö³§ÉèÖÃID_020
  85:../user/source/DLT645.c **** 
  86:../user/source/DLT645.c ****     /*µçÁ÷ÖØ¹ıÔØ*/
  87:../user/source/DLT645.c ****     {{0X33, 0X37, 0X35, 0X35}, vCurrent_Limit_Set},                    //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:µ
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 3


  88:../user/source/DLT645.c ****     {{0X33, 0X38, 0X35, 0X35}, vCurrent_Limit_ReadSet},                //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:µ
  89:../user/source/DLT645.c ****     {{0X33, 0X39, 0X35, 0X35}, vCurrent_CTRatio_Set},                  //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:¶
  90:../user/source/DLT645.c ****     {{0X33, 0X3A, 0X35, 0X35}, vCurrent_CTRatio_ReadSet},              //À©³ä£º¶ÁÈ¡µçÁ÷ÖØ¹ıÔØ²ÎÊı:¶
  91:../user/source/DLT645.c ****     {{0X33, 0X3B, 0X35, 0X35}, vCurrent_TransFormer_Capacity_ReadSet}, //À©³ä£º¶ÁÈ¡µçÁ÷ÖØ¹ıÔØ²ÎÊı:±
  92:../user/source/DLT645.c **** 
  93:../user/source/DLT645.c ****     {{0X33, 0X73, 0X34, 0X33}, vEnergy_Modify_AbleSet},   //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸ÄÊ¹ÄÜ/½ûÄÜID_000
  94:../user/source/DLT645.c ****     {{0X33, 0X74, 0X34, 0X33}, vEnergy_Modify_RaitoSet},  //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä±ÈÀıÉèÖÃID_0001
  95:../user/source/DLT645.c ****     {{0X33, 0X75, 0X34, 0X33}, vEnergy_Modify_Reset},     //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿»Ø¸´³ö³§ÉèÖÃID_0001
  96:../user/source/DLT645.c ****     {{0X33, 0X76, 0X34, 0X33}, vEnergy_Modify_ReadSet},   //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä¶ÁÈ¡ÉèÖÃ
  97:../user/source/DLT645.c ****     {{0X33, 0X77, 0X34, 0X33}, vEnergy_Modify_ReadValue}, //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿¶ÁÈ¡´æ´¢µÄÕæÊµÖµºÍĞ
  98:../user/source/DLT645.c ****     /*4ºÅ²¹ÒÅ¸ººÉÇúÏßÁ¬Ğø³­¶Á²¿·ÖÖĞµÄµçÑ¹ÇúÏß¡¢µçÁ÷ÇúÏßĞŞ¸Ä,2018Äê8ÔÂ7ÈÕ20:53:4£º0*/
  99:../user/source/DLT645.c ****     {{0X33, 0X34, 0X43, 0X39}, vLoadProfile_Voltage_Modify}, //AÏàµçÑ¹ÇúÏßÁ¬Ğø³­¶ÁID_06100101,
 100:../user/source/DLT645.c ****     {{0X34, 0X34, 0X43, 0X39}, vLoadProfile_Voltage_Modify}, //BµçÑ¹Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_06100102,
 101:../user/source/DLT645.c ****     {{0X35, 0X34, 0X43, 0X39}, vLoadProfile_Voltage_Modify}, //CµçÑ¹Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_06100103,
 102:../user/source/DLT645.c ****     {{0X32, 0X34, 0X43, 0X39}, vLoadProfile_Voltage_Modify}, //µçÑ¹Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_061001FF,
 103:../user/source/DLT645.c ****     {{0X33, 0X35, 0X43, 0X39}, vLoadProfile_Current_Modify}, //AÏàµçÁ÷ÇúÏßÁ¬Ğø³­¶ÁID_06100201,
 104:../user/source/DLT645.c ****     {{0X34, 0X35, 0X43, 0X39}, vLoadProfile_Current_Modify}, //BµçÁ÷Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_06100202,
 105:../user/source/DLT645.c ****     {{0X35, 0X35, 0X43, 0X39}, vLoadProfile_Current_Modify}, //CµçÁ÷Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_06100203,
 106:../user/source/DLT645.c ****     {{0X32, 0X35, 0X43, 0X39}, vLoadProfile_Current_Modify}, //µçÁ÷Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_061002FF,
 107:../user/source/DLT645.c ****     {{0X32, 0X32, 0X32, 0X32}, vRead_Version},               //À©³ä£º¶ÁÈ¡³ÌĞò°æ±¾
 108:../user/source/DLT645.c **** };
 109:../user/source/DLT645.c **** 
 110:../user/source/DLT645.c **** FrameHandleStatus Voltage_Frame_Status;
 111:../user/source/DLT645.c **** uint8_t ucRcvStatus = 0;
 112:../user/source/DLT645.c **** uint8_t ucApp_Buf_DB2ZD[DATA_BUF_SIZE];            //µç±íÉÏĞĞÖ¡Ó¦ÓÃ»º´æ
 113:../user/source/DLT645.c **** uint8_t ucApp_Buf_ZD2DB[DATA_BUF_SIZE];            //ÖÕ¶ËÏÂĞĞÖ¡Ó¦ÓÃ»º´æ
 114:../user/source/DLT645.c **** uint8_t ucApp_Buf_INFR[DATA_BUF_SIZE];             //ºìÍâ¿ÚÓ¦ÓÃ»º´æ
 115:../user/source/DLT645.c **** uint8_t uc645DataDomainLength = 0;                 //645Ö¡Êı¾İÓò³¤¶È
 116:../user/source/DLT645.c **** uint8_t Voltage_Change_State = Voltage_NOChange;   //µçÑ¹ÊÇ·ñĞŞ¸Ä±êÖ¾Î»£¬Ä¬ÈÏĞŞ¸Ä×´Ì¬
 117:../user/source/DLT645.c **** uint8_t Dayfrozen_Change_State = DAYFROZEN_CHANGE; //µçÁ¿ÊÇ·ñĞŞ¸Ä£¬Ä¬ÈÏĞŞ¸Ä
 118:../user/source/DLT645.c **** uint8_t ucDayfrozen_Modify_Ratio;                  //µçÁ¿µ÷Õû±ÈÀı
 119:../user/source/DLT645.c **** int Voltage_MAX;                                   //µçÑ¹ºÏ¸ñÉÏÏŞ
 120:../user/source/DLT645.c **** int Voltage_MIN;                                   //µçÑ¹ºÏ¸ñÏÂÏŞ
 121:../user/source/DLT645.c **** int A_Voltage = WORK_VOLTAGE;                      //×îºóÒ»´ÎĞŞ¸ÄºóµÄAÏàµçÑ¹Öµ
 122:../user/source/DLT645.c **** int B_Voltage = WORK_VOLTAGE;                      //×îºóÒ»´ÎĞŞ¸ÄºóµÄBÏàµçÑ¹Öµ
 123:../user/source/DLT645.c **** int C_Voltage = WORK_VOLTAGE;                      //×îºóÒ»´ÎĞŞ¸ÄºóµÄCÏàµçÑ¹Öµ
 124:../user/source/DLT645.c **** CURRENT Acurrent = {0, 0, false};
 125:../user/source/DLT645.c **** CURRENT Bcurrent = {0, 0, false};
 126:../user/source/DLT645.c **** CURRENT Ccurrent = {0, 0, false};
 127:../user/source/DLT645.c **** 
 128:../user/source/DLT645.c **** /*±äÑ¹Æ÷½á¹¹Ìå¶¨Òå*/
 129:../user/source/DLT645.c **** TransFormer_TypeDef TransFormer;
 130:../user/source/DLT645.c **** 
 131:../user/source/DLT645.c **** /*µçÁ÷ÖØÔØ¡¢¹ıÔØµ÷ÕûÏà¹Ø²ÎÊı
 132:../user/source/DLT645.c **** #ifdef	  TRANSFORMER_CAPACITY_50KVA
 133:../user/source/DLT645.c **** 	#define TransFormer.CT2_CurrentLimit					2700						//50KVA±äÑ¹Æ÷µÄCT¶ş´Î²àÈıÏàµçÁ÷ºÍµÄ×î´óÖµ£¬À©´ó
 134:../user/source/DLT645.c **** #endif
 135:../user/source/DLT645.c **** #ifdef	  TRANSFORMER_CAPACITY_100KVA
 136:../user/source/DLT645.c **** 	#define TransFormer.CT2_CurrentLimit					5400						//100KVA±äÑ¹Æ÷µÄCT¶ş´Î²àÈıÏàµçÁ÷ºÍµÄ×î´óÖµ£¬À©´
 137:../user/source/DLT645.c **** #endif
 138:../user/source/DLT645.c **** #ifdef	  TRANSFORMER_CAPACITY_200KVA
 139:../user/source/DLT645.c **** 	#define TransFormer.CT2_CurrentLimit					10800						//200KVA±äÑ¹Æ÷µÄCT¶ş´Î²àÈıÏàµçÁ÷ºÍµÄ×î´óÖµ£¬À©
 140:../user/source/DLT645.c **** #endif
 141:../user/source/DLT645.c **** #ifdef	  TRANSFORMER_CAPACITY_400KVA
 142:../user/source/DLT645.c **** 	#define TransFormer.CT2_CurrentLimit					21600						//400KVA±äÑ¹Æ÷µÄCT¶ş´Î²àÈıÏàµçÁ÷ºÍµÄ×î´óÖµ£¬À©
 143:../user/source/DLT645.c **** #endif
 144:../user/source/DLT645.c **** */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 4


 145:../user/source/DLT645.c **** 
 146:../user/source/DLT645.c **** /********************************************************************
 147:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½«±¨ÎÄ´æµ½Ó¦ÓÃ²ã»º´æ£¬²¢ÅĞ¶ÏÊÇ·ñÎª645Ö¡
 148:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë£¬Çı¶¯²ã»º´æÖ¸Õë
 149:../user/source/DLT645.c ****  * Êä    ³ö£ºÈç¹û¶¼ºÏ·¨·µ»Øtrue
 150:../user/source/DLT645.c ****  ·ñÔò·µ»Øfalse
 151:../user/source/DLT645.c ****  *           
 152:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 153:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 154:../user/source/DLT645.c ****  **********************************************************************/
 155:../user/source/DLT645.c **** 
 156:../user/source/DLT645.c **** bool blRecvFrame(UCDRV_BUF *ucDrv_Buf, uint8_t *ucdata_buf)
 157:../user/source/DLT645.c **** {
 158:../user/source/DLT645.c ****     /*ÊÕÖ¡×´Ì¬*/
 159:../user/source/DLT645.c ****     switch (ucRcvStatus)
 160:../user/source/DLT645.c ****     {
 161:../user/source/DLT645.c ****     /*Ö¡Í·68*/
 162:../user/source/DLT645.c ****     case SEARCH_SOH:
 163:../user/source/DLT645.c ****     {
 164:../user/source/DLT645.c ****         /*Î´¶Áµ½Ö¸¶¨×Ö½ÚÊı£¬Ìø³ö·ÖÖ§£¬·µ»Øfalse*/
 165:../user/source/DLT645.c ****         if (ucDrv_Buf_GetBytes(ucDrv_Buf, ucdata_buf, 1) == false)
 166:../user/source/DLT645.c ****         {
 167:../user/source/DLT645.c ****             break;
 168:../user/source/DLT645.c ****         }
 169:../user/source/DLT645.c ****         /*¶Áµ½Ò»¸ö×Ö½Ú*/
 170:../user/source/DLT645.c ****         else
 171:../user/source/DLT645.c ****         {
 172:../user/source/DLT645.c ****             /*Ö¡Í·²»ºÏ·¨£¬·µ»Øfalse*/
 173:../user/source/DLT645.c ****             if (*(ucdata_buf + 0) != 0X68)
 174:../user/source/DLT645.c ****             {
 175:../user/source/DLT645.c ****                 break;
 176:../user/source/DLT645.c ****             }
 177:../user/source/DLT645.c ****             else
 178:../user/source/DLT645.c ****             {
 179:../user/source/DLT645.c ****                 /*Ö¡Í·ºÏ·¨£¬ÊÕÖ¡×´¸ÄÎªRCV_DATA1*/
 180:../user/source/DLT645.c ****                 ucRcvStatus = RCV_DATA1;
 181:../user/source/DLT645.c ****                 blWordsCounterStatus = true;
 182:../user/source/DLT645.c ****             }
 183:../user/source/DLT645.c ****         }
 184:../user/source/DLT645.c ****     }
 185:../user/source/DLT645.c ****     case RCV_DATA1:
 186:../user/source/DLT645.c ****     {
 187:../user/source/DLT645.c ****         /*¶Á9¸ö×Ö½ÚÊ§°Ü£¬Ìø³ö·ÖÖ§£¬·µ»Øfalse*/
 188:../user/source/DLT645.c ****         if (ucDrv_Buf_GetBytes(ucDrv_Buf, ucdata_buf + 1, 9) == false)
 189:../user/source/DLT645.c ****         {
 190:../user/source/DLT645.c ****             /*DLT645_WORDS_DELAY_MAX£¬×Ö½Ú½ÓÊÕ³¬Ê±*/
 191:../user/source/DLT645.c ****             if (blTime2_Update(uwTime2WordsCounter, DLT645_WORDS_DELAY_MAX))
 192:../user/source/DLT645.c ****             {
 193:../user/source/DLT645.c ****                 /*³¬Ê±ÔòÖØĞÂÅĞ¶ÏÖ¡Í·68£¬²»³¬Ê±Ôò¼ÌĞøÕÒ³¤¶È£»*/
 194:../user/source/DLT645.c ****                 ucRcvStatus = SEARCH_SOH;
 195:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 196:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 197:../user/source/DLT645.c ****             }
 198:../user/source/DLT645.c ****             break;
 199:../user/source/DLT645.c ****         }
 200:../user/source/DLT645.c ****         else //¶Á68Ö®ºó9¸ö×Ö½Ú³É¹¦
 201:../user/source/DLT645.c ****         {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 5


 202:../user/source/DLT645.c ****             if ((*(ucdata_buf + 7) != 0X68) || ((*(ucdata_buf + 9) + 12) >= 255))
 203:../user/source/DLT645.c ****             {
 204:../user/source/DLT645.c ****                 ucRcvStatus = SEARCH_SOH; //µÚÆß¸ö×Ö½Ú²»Îª68 ,Ìø³ö£¬·µ»Øfalse£¬ÖØĞÂÕÒ68
 205:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 206:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 207:../user/source/DLT645.c ****                 break;
 208:../user/source/DLT645.c ****             }
 209:../user/source/DLT645.c ****             else
 210:../user/source/DLT645.c ****             {                                              //µÚÆß¸ö×Ö½ÚÊÇ68
 211:../user/source/DLT645.c ****                 uc645DataDomainLength = *(ucdata_buf + 9); //¶Á³ö645Ö¡³¤¶ÈL
 212:../user/source/DLT645.c ****                 ucRcvStatus = RCV_DATA2;                   //Ö¸ÏòÏÂÒ»²¿·Ö
 213:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 214:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 215:../user/source/DLT645.c ****                 blWordsCounterStatus = true;
 216:../user/source/DLT645.c ****             }
 217:../user/source/DLT645.c ****         }
 218:../user/source/DLT645.c ****     }
 219:../user/source/DLT645.c ****     case RCV_DATA2:
 220:../user/source/DLT645.c ****     {
 221:../user/source/DLT645.c ****         if (ucDrv_Buf_GetBytes(ucDrv_Buf, ucdata_buf + 10, uc645DataDomainLength + 2) == false)
 222:../user/source/DLT645.c ****         {                                                                    //¶ÁºóĞø×Ö½ÚÊ§°Ü£¬Ìø³ö
 223:../user/source/DLT645.c ****             if (blTime2_Update(uwTime2WordsCounter, DLT645_WORDS_DELAY_MAX)) //DLT645_WORDS_DELAY_M
 224:../user/source/DLT645.c ****             {                                                                //Èç¹û³¬Ê±£¬ÔòÖØĞÂÕÒ68
 225:../user/source/DLT645.c ****                 ucRcvStatus = SEARCH_SOH;
 226:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 227:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 228:../user/source/DLT645.c ****             }
 229:../user/source/DLT645.c ****             break;
 230:../user/source/DLT645.c ****         }
 231:../user/source/DLT645.c ****         else //¶Á³öÖ¸¶¨×Ö½ÚÊıµÄÒ»Ö¡
 232:../user/source/DLT645.c ****         {
 233:../user/source/DLT645.c ****             ucRcvStatus = SEARCH_SOH; //×´Ì¬¸ÄÎª²éÕÒ68£»
 234:../user/source/DLT645.c ****             blWordsCounterStatus = false;
 235:../user/source/DLT645.c ****             uwTime2WordsCounter = 0;
 236:../user/source/DLT645.c ****             if (dwCheckFrame(ucdata_buf) != OK_1)
 237:../user/source/DLT645.c ****             {
 238:../user/source/DLT645.c ****                 //	if (blTime2_Update(uwTime2WordsCounter,DLT645_WORDS_DELAY_MAX)) //DLT645_WORDS_D
 239:../user/source/DLT645.c ****                 //{ //Èç¹û³¬Ê±£¬ÔòÖØĞÂÕÒ68£¬·ñÔòÖØĞÂ½ÓÊÕºóĞø×Ö½Ú£»Ìø³ö·ÖÖ§
 240:../user/source/DLT645.c ****                 //ucRcvStatus = SEARCH_SOH;
 241:../user/source/DLT645.c ****                 //}//Ö¡Ğ£Ñé´íÎó
 242:../user/source/DLT645.c ****                 return false;
 243:../user/source/DLT645.c ****             }
 244:../user/source/DLT645.c ****             else
 245:../user/source/DLT645.c ****             {
 246:../user/source/DLT645.c ****                 //ucRcvStatus = SEARCH_SOH;//×´Ì¬¸ÄÎª²éÕÒ68£»
 247:../user/source/DLT645.c ****                 //blWordsCounterStatus = false;
 248:../user/source/DLT645.c ****                 return true; //ÅĞ¶ÏÊÕÖ¡ÊÇ·ñºÏ¸ñ£¬ºÏ¸ñ·µ»Øtrue£¬·ñÔò·µ»Øfalse
 249:../user/source/DLT645.c ****             }
 250:../user/source/DLT645.c ****         }
 251:../user/source/DLT645.c ****     }
 252:../user/source/DLT645.c ****     break;
 253:../user/source/DLT645.c ****     default:
 254:../user/source/DLT645.c ****         break;
 255:../user/source/DLT645.c ****     }
 256:../user/source/DLT645.c ****     return false;
 257:../user/source/DLT645.c **** }
 258:../user/source/DLT645.c **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 6


 259:../user/source/DLT645.c **** /********************************************************************
 260:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÅĞ¶ÏÖ¡µÄĞ£ÑéºÍ¡¢½áÊø×Ö½ÚÊÇ·ñºÏ·¨
 261:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 262:../user/source/DLT645.c ****  * Êä    ³ö£ºÈç¹û¶¼ºÏ·¨·µ»Øtrue
 263:../user/source/DLT645.c ****  ·ñÔò·µ»Øfalse
 264:../user/source/DLT645.c ****  *           
 265:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 266:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 267:../user/source/DLT645.c ****  **********************************************************************/
 268:../user/source/DLT645.c **** STATUS dwCheckFrame(uint8_t *pucBuffer)
 269:../user/source/DLT645.c **** {
  29              		.loc 1 269 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35 0000 10B4     		push	{r4}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 4, -4
  39              	.LVL1:
 270:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
 271:../user/source/DLT645.c ****     uint8_t i;
 272:../user/source/DLT645.c ****     //ÇóÈ¡Ğ£ÑéºÍ
 273:../user/source/DLT645.c ****     for (i = 0; i < uc645DataDomainLength + 10; i++)
  40              		.loc 1 273 0
  41 0002 0023     		movs	r3, #0
 270:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
  42              		.loc 1 270 0
  43 0004 1A46     		mov	r2, r3
  44              		.loc 1 273 0
  45 0006 04E0     		b	.L2
  46              	.LVL2:
  47              	.L3:
 274:../user/source/DLT645.c ****     {
 275:../user/source/DLT645.c ****         ucCheckData += pucBuffer[i];
  48              		.loc 1 275 0 discriminator 3
  49 0008 C45C     		ldrb	r4, [r0, r3]	@ zero_extendqisi2
  50 000a 2244     		add	r2, r2, r4
  51              	.LVL3:
  52 000c D2B2     		uxtb	r2, r2
  53              	.LVL4:
 273:../user/source/DLT645.c ****     {
  54              		.loc 1 273 0 discriminator 3
  55 000e 0133     		adds	r3, r3, #1
  56              	.LVL5:
  57 0010 DBB2     		uxtb	r3, r3
  58              	.LVL6:
  59              	.L2:
 273:../user/source/DLT645.c ****     {
  60              		.loc 1 273 0 is_stmt 0 discriminator 1
  61 0012 0C4C     		ldr	r4, .L8
  62 0014 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
  63 0016 01F10A04 		add	r4, r1, #10
  64 001a A342     		cmp	r3, r4
  65 001c F4DB     		blt	.L3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 7


 276:../user/source/DLT645.c ****     }
 277:../user/source/DLT645.c ****     //ÅĞ¶ÏĞ£ÑéºÍºÍ½áÊø·û
 278:../user/source/DLT645.c ****     if ((ucCheckData == pucBuffer[uc645DataDomainLength + 10]) && (pucBuffer[uc645DataDomainLength 
  66              		.loc 1 278 0 is_stmt 1
  67 001e 4318     		adds	r3, r0, r1
  68              	.LVL7:
  69 0020 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
  70 0022 9A42     		cmp	r2, r3
  71 0024 06D1     		bne	.L5
  72              		.loc 1 278 0 is_stmt 0 discriminator 1
  73 0026 0144     		add	r1, r1, r0
  74 0028 CB7A     		ldrb	r3, [r1, #11]	@ zero_extendqisi2
  75 002a 162B     		cmp	r3, #22
  76 002c 05D0     		beq	.L6
 279:../user/source/DLT645.c ****     {
 280:../user/source/DLT645.c ****         return OK_1;
 281:../user/source/DLT645.c ****     }
 282:../user/source/DLT645.c ****     else
 283:../user/source/DLT645.c ****     {
 284:../user/source/DLT645.c ****         return ERROR_1;
  77              		.loc 1 284 0 is_stmt 1
  78 002e 4FF0FF30 		mov	r0, #-1
  79              	.LVL8:
  80 0032 03E0     		b	.L4
  81              	.LVL9:
  82              	.L5:
  83 0034 4FF0FF30 		mov	r0, #-1
  84              	.LVL10:
  85 0038 00E0     		b	.L4
  86              	.LVL11:
  87              	.L6:
 280:../user/source/DLT645.c ****     }
  88              		.loc 1 280 0
  89 003a 0020     		movs	r0, #0
  90              	.LVL12:
  91              	.L4:
 285:../user/source/DLT645.c ****     }
 286:../user/source/DLT645.c **** }
  92              		.loc 1 286 0
  93 003c 5DF8044B 		ldr	r4, [sp], #4
  94              	.LCFI1:
  95              		.cfi_restore 4
  96              		.cfi_def_cfa_offset 0
  97 0040 7047     		bx	lr
  98              	.L9:
  99 0042 00BF     		.align	2
 100              	.L8:
 101 0044 00000000 		.word	.LANCHOR0
 102              		.cfi_endproc
 103              	.LFE112:
 105              		.section	.text.BCD_Verity,"ax",%progbits
 106              		.align	2
 107              		.thumb
 108              		.thumb_func
 110              	BCD_Verity:
 111              	.LFB122:
 287:../user/source/DLT645.c **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 8


 288:../user/source/DLT645.c **** /********************************************************************
 289:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµç±í£º²àÊÕÖ¡Êı¾İ±êÊ¶·ÖÎö´¦Àí
 290:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 291:../user/source/DLT645.c ****  * Êä    ³ö£ºÊı¾İ±êÊ¶
 292:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 293:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.8
 294:../user/source/DLT645.c ****  **********************************************************************/
 295:../user/source/DLT645.c **** void vDBDataID_Handle(uint8_t *pucBuffer)
 296:../user/source/DLT645.c **** {
 297:../user/source/DLT645.c ****     uint8_t i;
 298:../user/source/DLT645.c ****     uint16_t idcount;
 299:../user/source/DLT645.c ****     idcount = sizeof(DBDataID_Handle_List) / sizeof(DBDataID_Handle_List[0]);
 300:../user/source/DLT645.c ****     for (i = 0; i < idcount; i++)
 301:../user/source/DLT645.c ****     {
 302:../user/source/DLT645.c ****         if ((DBDataID_Handle_List[i].Data_ID[0] == pucBuffer[10]) &&
 303:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 304:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 305:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 306:../user/source/DLT645.c ****             break;
 307:../user/source/DLT645.c ****     }
 308:../user/source/DLT645.c ****     if (i < idcount)
 309:../user/source/DLT645.c ****     {
 310:../user/source/DLT645.c **** #ifndef ENABLE_CURRENT_DEVIATION
 311:../user/source/DLT645.c ****         if (DBDataID_Handle_List[i].Handle == vCurrent_Modify)
 312:../user/source/DLT645.c ****             return;
 313:../user/source/DLT645.c **** #endif
 314:../user/source/DLT645.c **** #ifndef ENABLE_CURRENT_LIMIT
 315:../user/source/DLT645.c ****         if (DBDataID_Handle_List[i].Handle == vCurrent_Limit_Modify)
 316:../user/source/DLT645.c ****             return;
 317:../user/source/DLT645.c **** #endif
 318:../user/source/DLT645.c **** #ifndef ENABLE_ESTATUS
 319:../user/source/DLT645.c ****         if (DBDataID_Handle_List[i].Handle == Estatus_Modify_CurrentEvent)
 320:../user/source/DLT645.c ****             return;
 321:../user/source/DLT645.c **** #endif
 322:../user/source/DLT645.c **** #ifndef ENABLE_ENERGY_MODIFY
 323:../user/source/DLT645.c ****         if ((DBDataID_Handle_List[i].Handle == vNowEnergy_Modifier) ||
 324:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vDayfrozen_Modifier)) ||
 325:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vAccountEnergy_Modify)) ||
 326:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_AbleSet)) ||
 327:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_RaitoSet)) ||
 328:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_Reset)))
 329:../user/source/DLT645.c ****             return;
 330:../user/source/DLT645.c **** #endif
 331:../user/source/DLT645.c ****         DBDataID_Handle_List[i].Handle(pucBuffer);
 332:../user/source/DLT645.c ****     }
 333:../user/source/DLT645.c ****     else
 334:../user/source/DLT645.c ****         return;
 335:../user/source/DLT645.c **** }
 336:../user/source/DLT645.c **** 
 337:../user/source/DLT645.c **** /********************************************************************
 338:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ººìÍâ²àÊÕÖ¡Êı¾İ±êÊ¶·ÖÎö´¦Àí
 339:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 340:../user/source/DLT645.c ****  * Êä    ³ö£ºÊı¾İ±êÊ¶
 341:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 342:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.8
 343:../user/source/DLT645.c ****  **********************************************************************/
 344:../user/source/DLT645.c **** void vINFRDataID_Handle(uint8_t *pucBuffer)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 9


 345:../user/source/DLT645.c **** {
 346:../user/source/DLT645.c ****     uint8_t i;
 347:../user/source/DLT645.c ****     uint16_t idcount;
 348:../user/source/DLT645.c ****     idcount = sizeof(INFRDataID_Handle_List) / sizeof(INFRDataID_Handle_List[0]);
 349:../user/source/DLT645.c ****     for (i = 0; i < idcount; i++)
 350:../user/source/DLT645.c ****     {
 351:../user/source/DLT645.c ****         if ((INFRDataID_Handle_List[i].Data_ID[0] == pucBuffer[10]) &&
 352:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 353:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 354:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 355:../user/source/DLT645.c ****             break;
 356:../user/source/DLT645.c ****     }
 357:../user/source/DLT645.c ****     if (i < idcount)
 358:../user/source/DLT645.c ****     {
 359:../user/source/DLT645.c **** #ifndef ENABLE_ENERGY_MODIFY
 360:../user/source/DLT645.c ****         if (((DBDataID_Handle_List[i].Handle == vEnergy_Modify_AbleSet)) ||
 361:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_RaitoSet)) ||
 362:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_Reset)) ||
 363:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_ReadSet)) ||
 364:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_ReadValue)))
 365:../user/source/DLT645.c ****             return;
 366:../user/source/DLT645.c **** #endif
 367:../user/source/DLT645.c ****         INFRDataID_Handle_List[i].Handle(pucBuffer);
 368:../user/source/DLT645.c ****     }
 369:../user/source/DLT645.c ****     else
 370:../user/source/DLT645.c ****         return;
 371:../user/source/DLT645.c **** }
 372:../user/source/DLT645.c **** 
 373:../user/source/DLT645.c **** /********************************************************************
 374:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÀ©³äÖ¡£º¸ü¸ÄµçÑ¹ĞŞ¸Ä±êÖ¾Î»
 375:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 376:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
 377:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 378:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 379:../user/source/DLT645.c ****  **********************************************************************/
 380:../user/source/DLT645.c **** void Get_VChange_State(uint8_t *pucBuffer)
 381:../user/source/DLT645.c **** {
 382:../user/source/DLT645.c ****     uint8_t i;
 383:../user/source/DLT645.c ****     if (pucBuffer[14] == 0x34)
 384:../user/source/DLT645.c ****     {
 385:../user/source/DLT645.c ****         Voltage_Change_State = Voltage_NOChange;
 386:../user/source/DLT645.c ****     }
 387:../user/source/DLT645.c ****     if (pucBuffer[14] == 0x33)
 388:../user/source/DLT645.c ****     {
 389:../user/source/DLT645.c ****         Voltage_Change_State = Voltage_Change;
 390:../user/source/DLT645.c ****     }
 391:../user/source/DLT645.c ****     if (ERROR == Flash_Write_Word(FLASH_VChangeState_Addr, Voltage_Change_State))
 392:../user/source/DLT645.c ****     {
 393:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
 394:../user/source/DLT645.c ****     }
 395:../user/source/DLT645.c ****     else
 396:../user/source/DLT645.c ****         pucBuffer[8] = 0x94;
 397:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
 398:../user/source/DLT645.c ****     pucBuffer[10] = 0x00;
 399:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 400:../user/source/DLT645.c ****     {
 401:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 10


 402:../user/source/DLT645.c ****     }
 403:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
 404:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 405:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
 406:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
 407:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 408:../user/source/DLT645.c ****     {
 409:../user/source/DLT645.c ****         Uart_DataPut(USART3);
 410:../user/source/DLT645.c ****     }
 411:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
 412:../user/source/DLT645.c **** #ifdef ENABLE_INFR
 413:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 12);
 414:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
 415:../user/source/DLT645.c ****     {
 416:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
 417:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 418:../user/source/DLT645.c ****     }
 419:../user/source/DLT645.c **** #endif
 420:../user/source/DLT645.c **** }
 421:../user/source/DLT645.c **** /********************************************************************
 422:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÀ©³äÖ¡£ºµçÑ¹ÏŞÖµÉèÖÃ
 423:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 424:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
 425:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 426:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 427:../user/source/DLT645.c ****  **********************************************************************/
 428:../user/source/DLT645.c **** void Set_Voltage_Limit(uint8_t *pucBuffer)
 429:../user/source/DLT645.c **** {
 430:../user/source/DLT645.c ****     int VMAX = 0;
 431:../user/source/DLT645.c ****     int VMIN = 0;
 432:../user/source/DLT645.c ****     int i = 0;
 433:../user/source/DLT645.c ****     VMAX = Get_Voltage(pucBuffer[14], pucBuffer[15]);
 434:../user/source/DLT645.c ****     VMIN = Get_Voltage(pucBuffer[16], pucBuffer[17]);
 435:../user/source/DLT645.c ****     if ((VMAX > VMIN) && (VMAX < Voltage_MAX_MAX) //µçÑ¹ÏŞÖµÉèÖÃÌõ¼ş£¬ÉÏÏŞ´óÓÚÏÂÏŞÇÒĞ¡ÓÚÉÏÉÏÏŞ
 436:../user/source/DLT645.c ****         && (VMIN > Voltage_MIN_MIN))              //µçÑ¹ÏÂÏŞ´óÓÚÏÂÏÂÏŞ
 437:../user/source/DLT645.c ****     {
 438:../user/source/DLT645.c ****         Voltage_MAX = VMAX;
 439:../user/source/DLT645.c ****         Voltage_MIN = VMIN;
 440:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX1_Addr, pucBuffer[14]);
 441:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX2_Addr, pucBuffer[15]);
 442:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN1_Addr, pucBuffer[16]);
 443:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN2_Addr, pucBuffer[17]);
 444:../user/source/DLT645.c ****         pucBuffer[8] = 0x94; //ÉèÖÃ³É¹¦±êÖ¾
 445:../user/source/DLT645.c ****     }
 446:../user/source/DLT645.c ****     else
 447:../user/source/DLT645.c ****     {
 448:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4; //ÉèÖÃÒì³£±êÖ¾
 449:../user/source/DLT645.c ****     }
 450:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
 451:../user/source/DLT645.c ****     pucBuffer[10] = 0x00; //ÇóÈ¡Ğ£ÑéºÍ
 452:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 453:../user/source/DLT645.c ****     {
 454:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
 455:../user/source/DLT645.c ****     }
 456:../user/source/DLT645.c ****     pucBuffer[11] = 0x16; //½áÊø·û
 457:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 458:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 11


 459:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
 460:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 461:../user/source/DLT645.c ****     {
 462:../user/source/DLT645.c ****         Uart_DataPut(USART3);
 463:../user/source/DLT645.c ****     }
 464:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
 465:../user/source/DLT645.c **** #ifdef ENABLE_INFR
 466:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 12);
 467:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
 468:../user/source/DLT645.c ****     {
 469:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
 470:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 471:../user/source/DLT645.c ****     }
 472:../user/source/DLT645.c **** #endif
 473:../user/source/DLT645.c **** }
 474:../user/source/DLT645.c **** 
 475:../user/source/DLT645.c **** /********************************************************************
 476:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÀ©³äÖ¡£ºµçÑ¹ÏŞÖµ²éÑ¯
 477:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 478:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
 479:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 480:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 481:../user/source/DLT645.c ****  **********************************************************************/
 482:../user/source/DLT645.c **** void Query_Voltage_Limit(uint8_t *pucBuffer)
 483:../user/source/DLT645.c **** {
 484:../user/source/DLT645.c ****     int i = 0;
 485:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
 486:../user/source/DLT645.c ****     pucBuffer[9] = 0x0C;
 487:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(Voltage_MAX_MAX);
 488:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(Voltage_MAX_MAX); //µçÑ¹ÉÏÉÏÏŞ
 489:../user/source/DLT645.c ****     pucBuffer[16] = GetLowByte(Voltage_MIN_MIN);
 490:../user/source/DLT645.c ****     pucBuffer[17] = GetHighByte(Voltage_MIN_MIN); //µçÑ¹ÏÂÏÂÏŞ
 491:../user/source/DLT645.c ****     pucBuffer[18] = GetLowByte(Voltage_MAX);
 492:../user/source/DLT645.c ****     pucBuffer[19] = GetHighByte(Voltage_MAX); //µçÑ¹ÉÏÏŞÖµ
 493:../user/source/DLT645.c ****     pucBuffer[20] = GetLowByte(Voltage_MIN);
 494:../user/source/DLT645.c ****     pucBuffer[21] = GetHighByte(Voltage_MIN); //µçÑ¹ÏÂÏŞÖµ
 495:../user/source/DLT645.c ****     pucBuffer[22] = 0x00;                     //ÇóÈ¡Ğ£ÑéºÍ
 496:../user/source/DLT645.c ****     for (i = 0; i < 24 - 2; i++)              //±¨ÎÄ³¤¶È24
 497:../user/source/DLT645.c ****     {
 498:../user/source/DLT645.c ****         pucBuffer[22] += pucBuffer[i];
 499:../user/source/DLT645.c ****     }
 500:../user/source/DLT645.c ****     pucBuffer[23] = 0x16; //½áÊø·û
 501:../user/source/DLT645.c ****     uc645DataDomainLength = 12;
 502:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 503:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
 504:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 505:../user/source/DLT645.c ****     {
 506:../user/source/DLT645.c ****         Uart_DataPut(USART3);
 507:../user/source/DLT645.c ****     }
 508:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
 509:../user/source/DLT645.c **** #ifdef ENABLE_INFR
 510:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 24);
 511:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
 512:../user/source/DLT645.c ****     {
 513:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
 514:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 515:../user/source/DLT645.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 12


 516:../user/source/DLT645.c **** #endif
 517:../user/source/DLT645.c **** }
 518:../user/source/DLT645.c **** 
 519:../user/source/DLT645.c **** /********************************************************************
 520:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ÏŞÖµ»Ö¸´³ö³§
 521:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 522:../user/source/DLT645.c ****  * Êä    ³ö£º	none
 523:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 524:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 525:../user/source/DLT645.c ****  **********************************************************************/
 526:../user/source/DLT645.c **** void Default_Reset(uint8_t *pucBuffer)
 527:../user/source/DLT645.c **** {
 528:../user/source/DLT645.c ****     int i = 0;
 529:../user/source/DLT645.c ****     A_Voltage = WORK_VOLTAGE;                                        //AÏàµçÑ¹Öµ¸ÄÎª±ê×¼Öµ
 530:../user/source/DLT645.c ****     B_Voltage = WORK_VOLTAGE;                                        //BÏàµçÑ¹Öµ¸ÄÎª±ê×¼Öµ
 531:../user/source/DLT645.c ****     C_Voltage = WORK_VOLTAGE;                                        //CÏàµçÑ¹Öµ¸ÄÎª±ê×¼Öµ
 532:../user/source/DLT645.c ****     Voltage_Change_State = Voltage_Change;                           //µçÑ¹ĞŞ¸Ä×´Ì¬¸ÄÎª¡°ÓĞĞ§¡±
 533:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VChangeState_Addr, Voltage_Change_State); //´æ´¢µ½FLASHÖĞ
 534:../user/source/DLT645.c ****     Voltage_MAX = Voltage_MAX_Default;                               //µçÑ¹ºÏ¸ñÏŞÖµ»Ö¸´Ä¬ÈÏ²¢ÇÒ´æµµ
 535:../user/source/DLT645.c ****     Voltage_MIN = Voltage_MIN_Default;
 536:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMAX1_Addr, GetLowByte(Voltage_MAX));
 537:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMAX2_Addr, GetHighByte(Voltage_MAX));
 538:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMIN1_Addr, GetLowByte(Voltage_MIN));
 539:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMIN2_Addr, GetHighByte(Voltage_MIN));
 540:../user/source/DLT645.c ****     pucBuffer[8] = 0x94;  //ÇóÈ¡Ğ£ÑéºÍ
 541:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;  //ÇóÈ¡Ğ£ÑéºÍ
 542:../user/source/DLT645.c ****     pucBuffer[10] = 0x00; //ÇóÈ¡Ğ£ÑéºÍ
 543:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 544:../user/source/DLT645.c ****     {
 545:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
 546:../user/source/DLT645.c ****     }
 547:../user/source/DLT645.c ****     pucBuffer[11] = 0x16; //½áÊø·û
 548:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
 549:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 550:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
 551:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 552:../user/source/DLT645.c ****     {
 553:../user/source/DLT645.c ****         Uart_DataPut(USART3);
 554:../user/source/DLT645.c ****     }
 555:../user/source/DLT645.c **** /*ºìÍâ¿Ú·¢ËÍ*/
 556:../user/source/DLT645.c **** #ifdef ENABLE_INFR
 557:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 12);
 558:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
 559:../user/source/DLT645.c ****     {
 560:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
 561:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 562:../user/source/DLT645.c ****     }
 563:../user/source/DLT645.c **** #endif
 564:../user/source/DLT645.c **** }
 565:../user/source/DLT645.c **** 
 566:../user/source/DLT645.c **** /********************************************************************
 567:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹Ö¡´¦Àíº¯Êı
 568:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë£¬Çı¶¯²ã»º´æÖ¸Õë
 569:../user/source/DLT645.c ****  * Êä    ³ö£º
 570:../user/source/DLT645.c ****  *           
 571:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 572:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.10
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 13


 573:../user/source/DLT645.c ****  **********************************************************************/
 574:../user/source/DLT645.c **** void vVoltageHandle(uint8_t *pucBuffer)
 575:../user/source/DLT645.c **** {
 576:../user/source/DLT645.c ****     /*µÈ´ıµçÑ¹»ØÖ¡×´Ì¬ÇåÎ»*/
 577:../user/source/DLT645.c ****     Voltage_Frame_Status = FrameReplied;
 578:../user/source/DLT645.c ****     /*¼ÆÊ±Æ÷¸´Î»*/
 579:../user/source/DLT645.c ****     blFramesCounterStatus = false;
 580:../user/source/DLT645.c ****     uwTime2FramesCounter = 0;
 581:../user/source/DLT645.c ****     /*µçÑ¹Ö¡ÅĞ¶Ï´¦Àí*/
 582:../user/source/DLT645.c ****     Voltage_Modifier(pucBuffer);
 583:../user/source/DLT645.c **** }
 584:../user/source/DLT645.c **** 
 585:../user/source/DLT645.c **** /********************************************************************
 586:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ºÏ¸ñÂÊÅĞ¶Ïµ÷Õû
 587:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 588:../user/source/DLT645.c ****  * Êä    ³ö£º	none
 589:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 590:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 591:../user/source/DLT645.c ****  **********************************************************************/
 592:../user/source/DLT645.c **** void Voltage_Modifier(uint8_t *pucBuffer)
 593:../user/source/DLT645.c **** {
 594:../user/source/DLT645.c **** 
 595:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
 596:../user/source/DLT645.c ****     uint8_t i = 0;
 597:../user/source/DLT645.c ****     //IWDG_ReloadCounter();
 598:../user/source/DLT645.c ****     if (Voltage_Change_State == Voltage_NOChange)
 599:../user/source/DLT645.c ****         return;
 600:../user/source/DLT645.c ****     if ((pucBuffer[8] == 0X91) && (pucBuffer[10] == 0x33) && (pucBuffer[12] == 0x34) && (pucBuffer[
 601:../user/source/DLT645.c ****     {
 602:../user/source/DLT645.c ****         if (pucBuffer[11] == 0x32) //ÈıÏàµçÑ¹Êı¾İ¿é
 603:../user/source/DLT645.c ****         {
 604:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[14], pucBuffer[15])) //BCDĞ£Ñé
 605:../user/source/DLT645.c ****             {
 606:../user/source/DLT645.c ****                 A_Voltage = Get_Voltage(pucBuffer[14], pucBuffer[15]);
 607:../user/source/DLT645.c ****                 if ((A_Voltage > Voltage_MAX) || (A_Voltage < Voltage_MIN)) //ĞŞ¸ÄAÏàµçÑ¹
 608:../user/source/DLT645.c ****                 {
 609:../user/source/DLT645.c ****                     A_Voltage = Voltage_Modifier_Method(A_Voltage);
 610:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(A_Voltage);
 611:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(A_Voltage);
 612:../user/source/DLT645.c ****                 }
 613:../user/source/DLT645.c ****             }
 614:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[16], pucBuffer[17])) //BCDĞ£Ñé
 615:../user/source/DLT645.c ****             {
 616:../user/source/DLT645.c ****                 B_Voltage = Get_Voltage(pucBuffer[16], pucBuffer[17]);
 617:../user/source/DLT645.c ****                 if ((B_Voltage > Voltage_MAX) || (B_Voltage < Voltage_MIN)) //ĞŞ¸ÄBÏàµçÑ¹
 618:../user/source/DLT645.c ****                 {
 619:../user/source/DLT645.c ****                     B_Voltage = Voltage_Modifier_Method(B_Voltage);
 620:../user/source/DLT645.c ****                     pucBuffer[16] = GetLowByte(B_Voltage);
 621:../user/source/DLT645.c ****                     pucBuffer[17] = GetHighByte(B_Voltage);
 622:../user/source/DLT645.c ****                 }
 623:../user/source/DLT645.c ****             }
 624:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[18], pucBuffer[19])) //BCDĞ£Ñé
 625:../user/source/DLT645.c ****             {
 626:../user/source/DLT645.c ****                 C_Voltage = Get_Voltage(pucBuffer[18], pucBuffer[19]);
 627:../user/source/DLT645.c ****                 if ((C_Voltage > Voltage_MAX) || (C_Voltage < Voltage_MIN)) //ĞŞ¸ÄCÏàµçÑ¹
 628:../user/source/DLT645.c ****                 {
 629:../user/source/DLT645.c ****                     C_Voltage = Voltage_Modifier_Method(C_Voltage);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 14


 630:../user/source/DLT645.c ****                     pucBuffer[18] = GetLowByte(C_Voltage);
 631:../user/source/DLT645.c ****                     pucBuffer[19] = GetHighByte(C_Voltage);
 632:../user/source/DLT645.c ****                 }
 633:../user/source/DLT645.c ****             }
 634:../user/source/DLT645.c ****         }
 635:../user/source/DLT645.c ****         if (pucBuffer[11] == 0x34) //AÏàµçÑ¹Êı¾İ
 636:../user/source/DLT645.c ****         {
 637:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[14], pucBuffer[15])) //BCDĞ£Ñé
 638:../user/source/DLT645.c ****             {
 639:../user/source/DLT645.c ****                 A_Voltage = Get_Voltage(pucBuffer[14], pucBuffer[15]);
 640:../user/source/DLT645.c ****                 if ((A_Voltage > Voltage_MAX) || (A_Voltage < Voltage_MIN)) //ĞŞ¸ÄAÏàµçÑ¹
 641:../user/source/DLT645.c ****                 {
 642:../user/source/DLT645.c ****                     A_Voltage = Voltage_Modifier_Method(A_Voltage);
 643:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(A_Voltage);
 644:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(A_Voltage);
 645:../user/source/DLT645.c ****                 }
 646:../user/source/DLT645.c ****             }
 647:../user/source/DLT645.c ****         }
 648:../user/source/DLT645.c ****         if (pucBuffer[11] == 0x35) //BÏàµçÑ¹Êı¾İ
 649:../user/source/DLT645.c ****         {
 650:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[14], pucBuffer[15])) //BCDĞ£Ñé
 651:../user/source/DLT645.c ****             {
 652:../user/source/DLT645.c ****                 B_Voltage = Get_Voltage(pucBuffer[14], pucBuffer[15]);
 653:../user/source/DLT645.c ****                 if ((B_Voltage > Voltage_MAX) || (B_Voltage < Voltage_MIN)) //ĞŞ¸ÄBÏàµçÑ¹
 654:../user/source/DLT645.c ****                 {
 655:../user/source/DLT645.c ****                     B_Voltage = Voltage_Modifier_Method(B_Voltage);
 656:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(B_Voltage);
 657:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(B_Voltage);
 658:../user/source/DLT645.c ****                 }
 659:../user/source/DLT645.c ****             }
 660:../user/source/DLT645.c ****         }
 661:../user/source/DLT645.c ****         if (pucBuffer[11] == 0x36) //CÏàµçÑ¹Êı¾İ
 662:../user/source/DLT645.c ****         {
 663:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[14], pucBuffer[15])) //BCDĞ£Ñé
 664:../user/source/DLT645.c ****             {
 665:../user/source/DLT645.c ****                 C_Voltage = Get_Voltage(pucBuffer[14], pucBuffer[15]);
 666:../user/source/DLT645.c ****                 if ((C_Voltage > Voltage_MAX) || (C_Voltage < Voltage_MIN)) //ĞŞ¸ÄCÏàµçÑ¹
 667:../user/source/DLT645.c ****                 {
 668:../user/source/DLT645.c ****                     C_Voltage = Voltage_Modifier_Method(C_Voltage);
 669:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(C_Voltage);
 670:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(C_Voltage);
 671:../user/source/DLT645.c ****                 }
 672:../user/source/DLT645.c ****             }
 673:../user/source/DLT645.c ****         }
 674:../user/source/DLT645.c ****         //ÇóÈ¡Ğ£ÑéºÍ
 675:../user/source/DLT645.c ****         for (i = 0; i < uc645DataDomainLength + 10; i++)
 676:../user/source/DLT645.c ****         {
 677:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
 678:../user/source/DLT645.c ****         }
 679:../user/source/DLT645.c ****         pucBuffer[uc645DataDomainLength + 10] = ucCheckData;
 680:../user/source/DLT645.c ****     }
 681:../user/source/DLT645.c ****     return;
 682:../user/source/DLT645.c **** }
 683:../user/source/DLT645.c **** /********************************************************************
 684:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º»Ø¸´µçÑ¹Ö¡×éÖ¡º¯Êı
 685:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 686:../user/source/DLT645.c ****  * Êä    ³ö£º	true/false
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 15


 687:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 688:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 689:../user/source/DLT645.c ****  **********************************************************************/
 690:../user/source/DLT645.c **** bool blVoltage_Create(uint8_t *pucBuffer)
 691:../user/source/DLT645.c **** {
 692:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
 693:../user/source/DLT645.c ****     uint8_t i = 0;
 694:../user/source/DLT645.c ****     switch (pucBuffer[11])
 695:../user/source/DLT645.c ****     {
 696:../user/source/DLT645.c ****     case 0x32: //ÈıÏàµçÑ¹Êı¾İ¿é
 697:../user/source/DLT645.c ****     {
 698:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 699:../user/source/DLT645.c ****         pucBuffer[9] = 0x0A;
 700:../user/source/DLT645.c ****         //Ê¹ÓÃÉÏ´ÎĞŞ¸ÄµÄºÏ·¨µçÑ¹Öµ»ò1000 2017-10-25:
 701:../user/source/DLT645.c ****         A_Voltage = ((A_Voltage <= Voltage_MAX) && (A_Voltage >= Voltage_MIN) ? A_Voltage : WORK_VO
 702:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 703:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(A_Voltage);
 704:../user/source/DLT645.c ****         B_Voltage = ((B_Voltage <= Voltage_MAX) && (B_Voltage >= Voltage_MIN) ? B_Voltage : WORK_VO
 705:../user/source/DLT645.c ****         pucBuffer[16] = GetLowByte(B_Voltage);
 706:../user/source/DLT645.c ****         pucBuffer[17] = GetHighByte(B_Voltage);
 707:../user/source/DLT645.c ****         C_Voltage = ((C_Voltage <= Voltage_MAX) && (C_Voltage >= Voltage_MIN) ? C_Voltage : WORK_VO
 708:../user/source/DLT645.c ****         pucBuffer[18] = GetLowByte(C_Voltage);
 709:../user/source/DLT645.c ****         pucBuffer[19] = GetHighByte(C_Voltage);
 710:../user/source/DLT645.c ****         for (i = 0; i < 20; i++) //¹Ì¶¨Ö¡³¤22
 711:../user/source/DLT645.c ****         {
 712:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
 713:../user/source/DLT645.c ****         }
 714:../user/source/DLT645.c ****         pucBuffer[20] = ucCheckData;
 715:../user/source/DLT645.c ****         pucBuffer[21] = 0x16;
 716:../user/source/DLT645.c ****         return true;
 717:../user/source/DLT645.c ****     }
 718:../user/source/DLT645.c ****     case 0x34: //AÏàµçÑ¹Êı¾İ
 719:../user/source/DLT645.c ****     {
 720:../user/source/DLT645.c ****         A_Voltage = ((A_Voltage <= Voltage_MAX) && (A_Voltage >= Voltage_MIN) ? A_Voltage : WORK_VO
 721:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 722:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 723:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 724:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(A_Voltage);
 725:../user/source/DLT645.c ****         for (i = 0; i < 16; i++) //¹Ì¶¨Ö¡³¤18
 726:../user/source/DLT645.c ****         {
 727:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
 728:../user/source/DLT645.c ****         }
 729:../user/source/DLT645.c ****         pucBuffer[16] = ucCheckData;
 730:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 731:../user/source/DLT645.c ****         return true;
 732:../user/source/DLT645.c ****     }
 733:../user/source/DLT645.c ****     case 0x35: //BÏàµçÑ¹Êı¾İ
 734:../user/source/DLT645.c ****     {
 735:../user/source/DLT645.c ****         B_Voltage = ((B_Voltage <= Voltage_MAX) && (B_Voltage >= Voltage_MIN) ? B_Voltage : WORK_VO
 736:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 737:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 738:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(B_Voltage);
 739:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(B_Voltage);
 740:../user/source/DLT645.c ****         for (i = 0; i < 16; i++) //¹Ì¶¨Ö¡³¤18
 741:../user/source/DLT645.c ****         {
 742:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
 743:../user/source/DLT645.c ****         }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 16


 744:../user/source/DLT645.c ****         pucBuffer[16] = ucCheckData;
 745:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 746:../user/source/DLT645.c ****         return true;
 747:../user/source/DLT645.c ****     }
 748:../user/source/DLT645.c ****     case 0x36: //CÏàµçÑ¹Êı¾İ
 749:../user/source/DLT645.c ****     {
 750:../user/source/DLT645.c ****         C_Voltage = ((C_Voltage <= Voltage_MAX) && (C_Voltage >= Voltage_MIN) ? C_Voltage : WORK_VO
 751:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 752:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 753:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(C_Voltage);
 754:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(C_Voltage);
 755:../user/source/DLT645.c ****         for (i = 0; i < 16; i++)
 756:../user/source/DLT645.c ****         {
 757:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
 758:../user/source/DLT645.c ****         }
 759:../user/source/DLT645.c ****         pucBuffer[16] = ucCheckData;
 760:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 761:../user/source/DLT645.c ****         return true;
 762:../user/source/DLT645.c ****     }
 763:../user/source/DLT645.c ****     default:
 764:../user/source/DLT645.c ****         return false; //Èç¹ûÊÕµ½µÄµçÑ¹Ö¡²»ÊÇÕÙ²âA/B/CÏà£¬ÔòÊÕÖ¡´íÎó£¬¼´Ê¹µç±í»Ø¸´³¬Ê±£¬Ò²²»ÄÜÌæ´ú»Ø
 765:../user/source/DLT645.c ****     }
 766:../user/source/DLT645.c **** }
 767:../user/source/DLT645.c **** /********************************************************************
 768:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºBCDÂëĞ£Ñé
 769:../user/source/DLT645.c ****  * Êä    Èë£ºµçÑ¹Êı¾İµÄµÍ×Ö½ÚºÍ¸ß×Ö½Ú
 770:../user/source/DLT645.c ****  * Êä    ³ö£ºtrue»òfalse
 771:../user/source/DLT645.c ****  *           
 772:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 773:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 774:../user/source/DLT645.c ****  **********************************************************************/
 775:../user/source/DLT645.c **** bool BCD_Verity(uint8_t LowByte, uint8_t HighByte)
 776:../user/source/DLT645.c **** {
 112              		.loc 1 776 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117              	.LVL13:
 777:../user/source/DLT645.c ****     uint8_t hundreds; //µçÑ¹°ÙÎ»
 778:../user/source/DLT645.c ****     uint8_t tens;     //µçÑ¹Ê®Î»
 779:../user/source/DLT645.c ****     uint8_t ones;     //µçÑ¹¸öÎ»
 780:../user/source/DLT645.c ****     uint8_t decimals; //µçÑ¹Ğ¡ÊıÎ»
 781:../user/source/DLT645.c ****     hundreds = (HighByte & 0xF0) >> 4;
 118              		.loc 1 781 0
 119 0000 0B09     		lsrs	r3, r1, #4
 120              	.LVL14:
 782:../user/source/DLT645.c ****     tens = HighByte & 0x0F;
 121              		.loc 1 782 0
 122 0002 01F00F01 		and	r1, r1, #15
 123              	.LVL15:
 783:../user/source/DLT645.c ****     ones = (LowByte & 0xF0) >> 4;
 124              		.loc 1 783 0
 125 0006 0209     		lsrs	r2, r0, #4
 126              	.LVL16:
 784:../user/source/DLT645.c ****     decimals = LowByte & 0x0F;
 127              		.loc 1 784 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 17


 128 0008 00F00F00 		and	r0, r0, #15
 129              	.LVL17:
 785:../user/source/DLT645.c ****     if ((hundreds >= 0x03) && (hundreds <= 0x0C) && (tens >= 0x03) && (tens <= 0x0C) && (ones >= 0x
 130              		.loc 1 785 0
 131 000c 033B     		subs	r3, r3, #3
 132              	.LVL18:
 133 000e DBB2     		uxtb	r3, r3
 134              	.LVL19:
 135 0010 092B     		cmp	r3, #9
 136 0012 0DD8     		bhi	.L12
 137              		.loc 1 785 0 is_stmt 0 discriminator 1
 138 0014 0229     		cmp	r1, #2
 139 0016 0DD9     		bls	.L13
 140              		.loc 1 785 0 discriminator 2
 141 0018 0C29     		cmp	r1, #12
 142 001a 0DD8     		bhi	.L14
 143              		.loc 1 785 0 discriminator 3
 144 001c 022A     		cmp	r2, #2
 145 001e 0DD9     		bls	.L15
 146              		.loc 1 785 0 discriminator 4
 147 0020 0C2A     		cmp	r2, #12
 148 0022 0DD8     		bhi	.L16
 149              		.loc 1 785 0 discriminator 5
 150 0024 0228     		cmp	r0, #2
 151 0026 0DD9     		bls	.L17
 152              		.loc 1 785 0 discriminator 6
 153 0028 0C28     		cmp	r0, #12
 154 002a 0DD9     		bls	.L18
 786:../user/source/DLT645.c ****     {
 787:../user/source/DLT645.c ****         return true;
 788:../user/source/DLT645.c ****     }
 789:../user/source/DLT645.c ****     else
 790:../user/source/DLT645.c ****     {
 791:../user/source/DLT645.c ****         return false;
 155              		.loc 1 791 0 is_stmt 1
 156 002c 0020     		movs	r0, #0
 157              	.LVL20:
 158 002e 7047     		bx	lr
 159              	.LVL21:
 160              	.L12:
 161 0030 0020     		movs	r0, #0
 162              	.LVL22:
 163 0032 7047     		bx	lr
 164              	.LVL23:
 165              	.L13:
 166 0034 0020     		movs	r0, #0
 167              	.LVL24:
 168 0036 7047     		bx	lr
 169              	.LVL25:
 170              	.L14:
 171 0038 0020     		movs	r0, #0
 172              	.LVL26:
 173 003a 7047     		bx	lr
 174              	.LVL27:
 175              	.L15:
 176 003c 0020     		movs	r0, #0
 177              	.LVL28:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 18


 178 003e 7047     		bx	lr
 179              	.LVL29:
 180              	.L16:
 181 0040 0020     		movs	r0, #0
 182              	.LVL30:
 183 0042 7047     		bx	lr
 184              	.LVL31:
 185              	.L17:
 186 0044 0020     		movs	r0, #0
 187              	.LVL32:
 188 0046 7047     		bx	lr
 189              	.LVL33:
 190              	.L18:
 787:../user/source/DLT645.c ****     }
 191              		.loc 1 787 0
 192 0048 0120     		movs	r0, #1
 193              	.LVL34:
 792:../user/source/DLT645.c ****     }
 793:../user/source/DLT645.c **** }
 194              		.loc 1 793 0
 195 004a 7047     		bx	lr
 196              		.cfi_endproc
 197              	.LFE122:
 199              		.section	.text.Get_Voltage,"ax",%progbits
 200              		.align	2
 201              		.thumb
 202              		.thumb_func
 204              	Get_Voltage:
 205              	.LFB123:
 794:../user/source/DLT645.c **** 
 795:../user/source/DLT645.c **** /********************************************************************
 796:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º´ÓÊı¾İÖ¡ÖĞ¶ÁÈ¡µçÑ¹Öµ
 797:../user/source/DLT645.c ****  * Êä    Èë£ºµçÑ¹ÖµµÍ×Ö½Ú¡¢¸ß×Ö½Ú
 798:../user/source/DLT645.c ****  * Êä    ³ö£ºÊ®½øÖÆµÄµçÑ¹Öµ
 799:../user/source/DLT645.c ****  *           
 800:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 801:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 802:../user/source/DLT645.c ****  **********************************************************************/
 803:../user/source/DLT645.c **** int Get_Voltage(uint8_t LowByte, uint8_t HighByte)
 804:../user/source/DLT645.c **** {
 206              		.loc 1 804 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              		@ link register save eliminated.
 211              	.LVL35:
 212 0000 10B4     		push	{r4}
 213              	.LCFI2:
 214              		.cfi_def_cfa_offset 4
 215              		.cfi_offset 4, -4
 216              	.LVL36:
 805:../user/source/DLT645.c ****     int Voltage = 0;
 806:../user/source/DLT645.c ****     uint8_t hundreds; //µçÑ¹°ÙÎ»
 807:../user/source/DLT645.c ****     uint8_t tens;     //µçÑ¹Ê®Î»
 808:../user/source/DLT645.c ****     uint8_t ones;     //µçÑ¹¸öÎ»
 809:../user/source/DLT645.c ****     uint8_t decimals; //µçÑ¹Ğ¡ÊıÎ»
 810:../user/source/DLT645.c ****     hundreds = ((HighByte - 0x33) & 0xF0) >> 4;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 19


 217              		.loc 1 810 0
 218 0002 3339     		subs	r1, r1, #51
 219              	.LVL37:
 220 0004 C1F30314 		ubfx	r4, r1, #4, #4
 221              	.LVL38:
 811:../user/source/DLT645.c ****     tens = (HighByte - 0x33) & 0x0F;
 222              		.loc 1 811 0
 223 0008 01F00F01 		and	r1, r1, #15
 224              	.LVL39:
 812:../user/source/DLT645.c ****     ones = ((LowByte - 0x33) & 0xF0) >> 4;
 225              		.loc 1 812 0
 226 000c 3338     		subs	r0, r0, #51
 227              	.LVL40:
 228 000e C0F30313 		ubfx	r3, r0, #4, #4
 229              	.LVL41:
 813:../user/source/DLT645.c ****     decimals = (LowByte - 0x33) & 0x0F;
 230              		.loc 1 813 0
 231 0012 00F00F00 		and	r0, r0, #15
 232              	.LVL42:
 814:../user/source/DLT645.c ****     Voltage = hundreds * 1000 + tens * 100 + ones * 10 + decimals; //Îª±íÊ¾Ğ¡ÊıÎ»£¬½«ÊıÕûÌåÔö´ó10±¶
 233              		.loc 1 814 0
 234 0016 6422     		movs	r2, #100
 235 0018 02FB01F1 		mul	r1, r2, r1
 236              	.LVL43:
 237 001c 4FF47A72 		mov	r2, #1000
 238 0020 02FB0414 		mla	r4, r2, r4, r1
 239              	.LVL44:
 240 0024 03EB8303 		add	r3, r3, r3, lsl #2
 241              	.LVL45:
 242 0028 5A00     		lsls	r2, r3, #1
 243 002a 2244     		add	r2, r2, r4
 244              	.LVL46:
 815:../user/source/DLT645.c ****     return Voltage;
 816:../user/source/DLT645.c **** }
 245              		.loc 1 816 0
 246 002c 1044     		add	r0, r0, r2
 247              	.LVL47:
 248 002e 5DF8044B 		ldr	r4, [sp], #4
 249              	.LCFI3:
 250              		.cfi_restore 4
 251              		.cfi_def_cfa_offset 0
 252 0032 7047     		bx	lr
 253              		.cfi_endproc
 254              	.LFE123:
 256              		.section	.text.vGet_Current,"ax",%progbits
 257              		.align	2
 258              		.thumb
 259              		.thumb_func
 261              	vGet_Current:
 262              	.LFB124:
 817:../user/source/DLT645.c **** 
 818:../user/source/DLT645.c **** /********************************************************************
 819:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º´ÓÊı¾İÖ¡ÖĞ¶ÁÈ¡µçÁ÷Öµ
 820:../user/source/DLT645.c ****  * Êä    Èë£ºµçÁ÷ÖµµÍ×Ö½Ú¡¢ÖĞ×Ö½Ú¡¢¸ß×Ö½Ú
 821:../user/source/DLT645.c ****  * Êä    ³ö£ºÊ®½øÖÆµÄµçÁ÷Öµ
 822:../user/source/DLT645.c ****  * Òª    Çó£º
 823:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 20


 824:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 825:../user/source/DLT645.c ****  **********************************************************************/
 826:../user/source/DLT645.c **** void vGet_Current(uint8_t LowByte, uint8_t MidByte, uint8_t HighByte, CURRENT *pcurrent)
 827:../user/source/DLT645.c **** {
 263              		.loc 1 827 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              	.LVL48:
 268 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 269              	.LCFI4:
 270              		.cfi_def_cfa_offset 20
 271              		.cfi_offset 4, -20
 272              		.cfi_offset 5, -16
 273              		.cfi_offset 6, -12
 274              		.cfi_offset 7, -8
 275              		.cfi_offset 14, -4
 828:../user/source/DLT645.c ****     uint8_t million;
 829:../user/source/DLT645.c ****     uint8_t tenkillo;
 830:../user/source/DLT645.c ****     uint8_t killo;
 831:../user/source/DLT645.c ****     uint8_t hundreds;
 832:../user/source/DLT645.c ****     uint8_t tens;
 833:../user/source/DLT645.c ****     uint8_t ones;
 834:../user/source/DLT645.c ****     million = ((HighByte - 0x33) & 0x70) >> 4; //È¡bit7~bit5£¬×î¸ßÎ»ÊÇ·ûºÅÎ»,ºöÂÔ
 276              		.loc 1 834 0
 277 0002 333A     		subs	r2, r2, #51
 278              	.LVL49:
 279 0004 C2F30217 		ubfx	r7, r2, #4, #3
 280              	.LVL50:
 835:../user/source/DLT645.c ****     tenkillo = (HighByte - 0x33) & 0x0F;
 281              		.loc 1 835 0
 282 0008 02F00F04 		and	r4, r2, #15
 283              	.LVL51:
 836:../user/source/DLT645.c ****     killo = ((MidByte - 0x33) & 0xF0) >> 4;
 284              		.loc 1 836 0
 285 000c 3339     		subs	r1, r1, #51
 286              	.LVL52:
 287 000e C1F30316 		ubfx	r6, r1, #4, #4
 288              	.LVL53:
 837:../user/source/DLT645.c ****     hundreds = (MidByte - 0x33) & 0x0F;
 289              		.loc 1 837 0
 290 0012 01F00F0C 		and	ip, r1, #15
 291              	.LVL54:
 838:../user/source/DLT645.c ****     tens = ((LowByte - 0x33) & 0xF0) >> 4;
 292              		.loc 1 838 0
 293 0016 3338     		subs	r0, r0, #51
 294              	.LVL55:
 295 0018 C0F30315 		ubfx	r5, r0, #4, #4
 296              	.LVL56:
 839:../user/source/DLT645.c ****     ones = (LowByte - 0x33) & 0x0F;
 297              		.loc 1 839 0
 298 001c 00F00F00 		and	r0, r0, #15
 299              	.LVL57:
 840:../user/source/DLT645.c ****     pcurrent->value = million * 100000 + tenkillo * 10000 + killo * 1000 + hundreds * 100 + tens * 
 300              		.loc 1 840 0
 301 0020 42F2107E 		movw	lr, #10000
 302 0024 0EFB04FE 		mul	lr, lr, r4
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 21


 303 0028 0B49     		ldr	r1, .L23
 304 002a 01FB07E7 		mla	r7, r1, r7, lr
 305              	.LVL58:
 306 002e 4FF47A71 		mov	r1, #1000
 307 0032 01FB0676 		mla	r6, r1, r6, r7
 308              	.LVL59:
 309 0036 6424     		movs	r4, #100
 310              	.LVL60:
 311 0038 04FB0C61 		mla	r1, r4, ip, r6
 312 003c 05EB8505 		add	r5, r5, r5, lsl #2
 313              	.LVL61:
 314 0040 6C00     		lsls	r4, r5, #1
 315 0042 0C44     		add	r4, r4, r1
 316 0044 0444     		add	r4, r4, r0
 317 0046 1C60     		str	r4, [r3]
 841:../user/source/DLT645.c ****     pcurrent->count++;
 318              		.loc 1 841 0
 319 0048 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 320 004a 0131     		adds	r1, r1, #1
 321 004c 1971     		strb	r1, [r3, #4]
 842:../user/source/DLT645.c ****     pcurrent->isminus = ((((HighByte - 0x33) & 0x80) != 0) ? true : false);
 322              		.loc 1 842 0
 323 004e C2F3C012 		ubfx	r2, r2, #7, #1
 324              	.LVL62:
 325 0052 5A71     		strb	r2, [r3, #5]
 326 0054 F0BD     		pop	{r4, r5, r6, r7, pc}
 327              	.L24:
 328 0056 00BF     		.align	2
 329              	.L23:
 330 0058 A0860100 		.word	100000
 331              		.cfi_endproc
 332              	.LFE124:
 334              		.section	.text.vPut_Current,"ax",%progbits
 335              		.align	2
 336              		.thumb
 337              		.thumb_func
 339              	vPut_Current:
 340              	.LFB125:
 843:../user/source/DLT645.c **** }
 844:../user/source/DLT645.c **** /********************************************************************
 845:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½«µçÁ÷ÖµĞ´ÈëÖ¡×Ö½Ú
 846:../user/source/DLT645.c ****  * Êä    Èë£ºµçÁ÷ÖµµÍ×Ö½Ú¡¢ÖĞ×Ö½Ú¡¢¸ß×Ö½Ú£¬µçÁ÷Öµ
 847:../user/source/DLT645.c ****  * Êä    ³ö£º
 848:../user/source/DLT645.c ****  * Òª    Çó£ºµçÁ÷Öµ²»Îª¸ºÖµ
 849:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 850:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 851:../user/source/DLT645.c ****  **********************************************************************/
 852:../user/source/DLT645.c **** void vPut_Current(CURRENT pcurrent, uint8_t *pLowByte, uint8_t *pMidByte, uint8_t *pHighByte)
 853:../user/source/DLT645.c **** {
 341              		.loc 1 853 0
 342              		.cfi_startproc
 343              		@ args = 4, pretend = 0, frame = 8
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 346              	.LVL63:
 347 0000 F0B4     		push	{r4, r5, r6, r7}
 348              	.LCFI5:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 22


 349              		.cfi_def_cfa_offset 16
 350              		.cfi_offset 4, -16
 351              		.cfi_offset 5, -12
 352              		.cfi_offset 6, -8
 353              		.cfi_offset 7, -4
 354 0002 82B0     		sub	sp, sp, #8
 355              	.LCFI6:
 356              		.cfi_def_cfa_offset 24
 357 0004 02AC     		add	r4, sp, #8
 358 0006 04E90300 		stmdb	r4, {r0, r1}
 359 000a 0698     		ldr	r0, [sp, #24]
 854:../user/source/DLT645.c ****     *pLowByte = 0x33 + ((uint8_t)(((pcurrent.value / 10) % 10) << 4) | (uint8_t)(pcurrent.value % 1
 360              		.loc 1 854 0
 361 000c 009E     		ldr	r6, [sp]
 362 000e 2849     		ldr	r1, .L28
 363 0010 A1FB0647 		umull	r4, r7, r1, r6
 364 0014 FF08     		lsrs	r7, r7, #3
 365 0016 A1FB0754 		umull	r5, r4, r1, r7
 366 001a E408     		lsrs	r4, r4, #3
 367 001c 04EB8404 		add	r4, r4, r4, lsl #2
 368 0020 6500     		lsls	r5, r4, #1
 369 0022 7C1B     		subs	r4, r7, r5
 370 0024 2401     		lsls	r4, r4, #4
 371 0026 E4B2     		uxtb	r4, r4
 372 0028 07EB8707 		add	r7, r7, r7, lsl #2
 373 002c 7D00     		lsls	r5, r7, #1
 374 002e 751B     		subs	r5, r6, r5
 375 0030 EDB2     		uxtb	r5, r5
 376 0032 2C43     		orrs	r4, r4, r5
 377 0034 3334     		adds	r4, r4, #51
 378 0036 1470     		strb	r4, [r2]
 855:../user/source/DLT645.c ****     *pMidByte = 0x33 + ((uint8_t)(((pcurrent.value / 1000) % 10) << 4) | (uint8_t)((pcurrent.value 
 379              		.loc 1 855 0
 380 0038 1E4C     		ldr	r4, .L28+4
 381 003a A4FB0624 		umull	r2, r4, r4, r6
 382              	.LVL64:
 383 003e A409     		lsrs	r4, r4, #6
 384 0040 A1FB0452 		umull	r5, r2, r1, r4
 385 0044 D208     		lsrs	r2, r2, #3
 386 0046 02EB8202 		add	r2, r2, r2, lsl #2
 387 004a 5500     		lsls	r5, r2, #1
 388 004c 621B     		subs	r2, r4, r5
 389 004e 1201     		lsls	r2, r2, #4
 390 0050 D5B2     		uxtb	r5, r2
 391 0052 194F     		ldr	r7, .L28+8
 392 0054 A7FB0627 		umull	r2, r7, r7, r6
 393 0058 7F09     		lsrs	r7, r7, #5
 394 005a A1FB0724 		umull	r2, r4, r1, r7
 395 005e E208     		lsrs	r2, r4, #3
 396 0060 02EB8202 		add	r2, r2, r2, lsl #2
 397 0064 5400     		lsls	r4, r2, #1
 398 0066 3A1B     		subs	r2, r7, r4
 399 0068 D2B2     		uxtb	r2, r2
 400 006a 2A43     		orrs	r2, r2, r5
 401 006c 3332     		adds	r2, r2, #51
 402 006e 1A70     		strb	r2, [r3]
 856:../user/source/DLT645.c ****     *pHighByte = 0x33 + ((uint8_t)((pcurrent.value / 100000) << 4) | (uint8_t)((pcurrent.value / 10
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 23


 403              		.loc 1 856 0
 404 0070 7309     		lsrs	r3, r6, #5
 405              	.LVL65:
 406 0072 124A     		ldr	r2, .L28+12
 407 0074 A2FB0332 		umull	r3, r2, r2, r3
 408 0078 D209     		lsrs	r2, r2, #7
 409 007a 1201     		lsls	r2, r2, #4
 410 007c D2B2     		uxtb	r2, r2
 411 007e 104B     		ldr	r3, .L28+16
 412 0080 A3FB0636 		umull	r3, r6, r3, r6
 413 0084 760B     		lsrs	r6, r6, #13
 414 0086 A1FB0613 		umull	r1, r3, r1, r6
 415 008a D908     		lsrs	r1, r3, #3
 416 008c 01EB8101 		add	r1, r1, r1, lsl #2
 417 0090 4B00     		lsls	r3, r1, #1
 418 0092 F11A     		subs	r1, r6, r3
 419 0094 C9B2     		uxtb	r1, r1
 420 0096 1143     		orrs	r1, r1, r2
 421 0098 3331     		adds	r1, r1, #51
 422 009a C9B2     		uxtb	r1, r1
 423 009c 0170     		strb	r1, [r0]
 857:../user/source/DLT645.c ****     if (pcurrent.isminus == true)
 424              		.loc 1 857 0
 425 009e 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 426 00a2 13B1     		cbz	r3, .L25
 858:../user/source/DLT645.c ****     {
 859:../user/source/DLT645.c ****         *pHighByte = *pHighByte | 0x80;
 427              		.loc 1 859 0
 428 00a4 61F07F01 		orn	r1, r1, #127
 429 00a8 0170     		strb	r1, [r0]
 430              	.L25:
 860:../user/source/DLT645.c ****     }
 861:../user/source/DLT645.c **** }
 431              		.loc 1 861 0
 432 00aa 02B0     		add	sp, sp, #8
 433              	.LCFI7:
 434              		.cfi_def_cfa_offset 16
 435              		@ sp needed
 436 00ac F0BC     		pop	{r4, r5, r6, r7}
 437              	.LCFI8:
 438              		.cfi_restore 7
 439              		.cfi_restore 6
 440              		.cfi_restore 5
 441              		.cfi_restore 4
 442              		.cfi_def_cfa_offset 0
 443              	.LVL66:
 444 00ae 7047     		bx	lr
 445              	.L29:
 446              		.align	2
 447              	.L28:
 448 00b0 CDCCCCCC 		.word	-858993459
 449 00b4 D34D6210 		.word	274877907
 450 00b8 1F85EB51 		.word	1374389535
 451 00bc C55A7C0A 		.word	175921861
 452 00c0 5917B7D1 		.word	-776530087
 453              		.cfi_endproc
 454              	.LFE125:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 24


 456              		.section	.text.blCurrentSingle_Modify_Method,"ax",%progbits
 457              		.align	2
 458              		.thumb
 459              		.thumb_func
 461              	blCurrentSingle_Modify_Method:
 462              	.LFB129:
 862:../user/source/DLT645.c **** 
 863:../user/source/DLT645.c **** /********************************************************************
 864:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ĞŞ¸Ä³õÊ¼»¯£º
 865:../user/source/DLT645.c ****  * Êä    Èë£º	none
 866:../user/source/DLT645.c ****  * Êä    ³ö£º	none
 867:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 868:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.10.25
 869:../user/source/DLT645.c ****  **********************************************************************/
 870:../user/source/DLT645.c **** void Voltage_Change_Init(void)
 871:../user/source/DLT645.c **** {
 872:../user/source/DLT645.c ****     uint8_t Vmax1;
 873:../user/source/DLT645.c ****     uint8_t Vmax2;
 874:../user/source/DLT645.c ****     uint8_t Vmin1;
 875:../user/source/DLT645.c ****     uint8_t Vmin2;
 876:../user/source/DLT645.c ****     /*µçÑ¹ĞŞ¸ÄÊ¹ÄÜÎ»³õÊ¼»¯*/
 877:../user/source/DLT645.c ****     Voltage_Change_State = EEProm_Read(FLASH_VChangeState_Addr); //´ÓflashÖĞ¶ÁÈ¡µçÑ¹ĞŞ¸ÄÊ¹ÄÜ×Ö½Ú
 878:../user/source/DLT645.c ****     /*µçÑ¹ĞŞ¸ÄÉÏÏÂÏŞ³õÊ¼»¯*/
 879:../user/source/DLT645.c ****     Vmax1 = EEProm_Read(FLASH_VMAX1_Addr);
 880:../user/source/DLT645.c ****     Vmax2 = EEProm_Read(FLASH_VMAX2_Addr);
 881:../user/source/DLT645.c ****     Vmin1 = EEProm_Read(FLASH_VMIN1_Addr);
 882:../user/source/DLT645.c ****     Vmin2 = EEProm_Read(FLASH_VMIN2_Addr);
 883:../user/source/DLT645.c **** 
 884:../user/source/DLT645.c ****     if ((Vmax1 == 0xff) && (Vmax2 == 0xff) && (Vmin1 == 0xff) && (Vmin2 == 0xff))
 885:../user/source/DLT645.c ****     {
 886:../user/source/DLT645.c ****         Voltage_MAX = Voltage_MAX_Default; //ÉèÖÃµçÑ¹ºÏ¸ñÉÏÏÂÏŞÄ¬ÈÏÖµ
 887:../user/source/DLT645.c ****         Voltage_MIN = Voltage_MIN_Default;
 888:../user/source/DLT645.c ****     }
 889:../user/source/DLT645.c ****     else
 890:../user/source/DLT645.c ****     {
 891:../user/source/DLT645.c ****         Voltage_MAX = Get_Voltage(Vmax1, Vmax2); //flashÖĞ´æ´¢µÄÊÇ654¶ÔÓ¦Ö¡×Ö½Ú£¬Á½¸ö×Ö½Ú
 892:../user/source/DLT645.c ****         Voltage_MIN = Get_Voltage(Vmin1, Vmin2);
 893:../user/source/DLT645.c ****     }
 894:../user/source/DLT645.c **** }
 895:../user/source/DLT645.c **** 
 896:../user/source/DLT645.c **** /*****************************************************
 897:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ºÏ¸ñÂÊµ÷Õû²ßÂÔ
 898:../user/source/DLT645.c ****  * Êä    Èë£º
 899:../user/source/DLT645.c ****  * Êä    ³ö£º
 900:../user/source/DLT645.c ****  * Ëµ    Ã÷£ºµçÑ¹Æ«Ğ¡Ğèµ÷½ÚÊ±£¬ÒÔMINÎª»ù×¼£¬½«Voltage¾µÏñ£¬Èô¾µÏñµã³¬¹ıMAX£¬ÒÀ´Î¼õĞ¡ÓĞĞ§Çø¼äÖµ£¨MAX
 901:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 902:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 903:../user/source/DLT645.c ****  *******************************************************/
 904:../user/source/DLT645.c **** int Voltage_Modifier_Method(int Voltage)
 905:../user/source/DLT645.c **** {
 906:../user/source/DLT645.c ****     int n = 0;
 907:../user/source/DLT645.c ****     int m = 0;
 908:../user/source/DLT645.c ****     int i = 0;
 909:../user/source/DLT645.c ****     n = (Voltage_MIN - Voltage_MIN_MIN) / (Voltage_MAX - Voltage_MIN) + 1; //(198-120)/(235-198)+1»
 910:../user/source/DLT645.c ****     m = (Voltage_MAX_MAX - Voltage_MAX) / (Voltage_MAX - Voltage_MIN) + 1; //(260-235)/(235-198)+1»
 911:../user/source/DLT645.c ****     if ((Voltage > Voltage_MAX) && (Voltage <= Voltage_MAX_MAX))
 912:../user/source/DLT645.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 25


 913:../user/source/DLT645.c ****         if (Voltage <= (Voltage_MAX + (Voltage_MAX - Voltage_MIN)))
 914:../user/source/DLT645.c ****         {
 915:../user/source/DLT645.c ****             Voltage = Voltage - (Voltage - Voltage_MAX) * 2;
 916:../user/source/DLT645.c ****             return Voltage;
 917:../user/source/DLT645.c ****         }
 918:../user/source/DLT645.c ****         else
 919:../user/source/DLT645.c ****         {
 920:../user/source/DLT645.c ****             for (i = 1; i < m; i++)
 921:../user/source/DLT645.c ****             {
 922:../user/source/DLT645.c ****                 if (Voltage <= (Voltage_MAX + (Voltage_MAX - Voltage_MIN) * (i + 1)))
 923:../user/source/DLT645.c ****                 {
 924:../user/source/DLT645.c ****                     Voltage = Voltage - (Voltage_MAX - Voltage_MIN) * (i + 1);
 925:../user/source/DLT645.c ****                     return Voltage;
 926:../user/source/DLT645.c ****                 }
 927:../user/source/DLT645.c ****             }
 928:../user/source/DLT645.c ****         }
 929:../user/source/DLT645.c ****     }
 930:../user/source/DLT645.c ****     if ((Voltage < Voltage_MIN) && (Voltage >= Voltage_MIN_MIN))
 931:../user/source/DLT645.c ****     {
 932:../user/source/DLT645.c ****         if (Voltage >= (Voltage_MIN - (Voltage_MAX - Voltage_MIN)))
 933:../user/source/DLT645.c ****         {
 934:../user/source/DLT645.c ****             Voltage = Voltage + (Voltage_MIN - Voltage) * 2;
 935:../user/source/DLT645.c ****             return Voltage;
 936:../user/source/DLT645.c ****         }
 937:../user/source/DLT645.c ****         else
 938:../user/source/DLT645.c ****         {
 939:../user/source/DLT645.c ****             for (i = 1; i < n; i++)
 940:../user/source/DLT645.c ****             {
 941:../user/source/DLT645.c ****                 if (Voltage >= (Voltage_MIN - (Voltage_MAX - Voltage_MIN) * (i + 1)))
 942:../user/source/DLT645.c ****                 {
 943:../user/source/DLT645.c ****                     Voltage = Voltage + (Voltage_MAX - Voltage_MIN) * (i + 1);
 944:../user/source/DLT645.c ****                     return Voltage;
 945:../user/source/DLT645.c ****                 }
 946:../user/source/DLT645.c ****             }
 947:../user/source/DLT645.c ****         }
 948:../user/source/DLT645.c ****     }
 949:../user/source/DLT645.c ****     return Voltage;
 950:../user/source/DLT645.c **** }
 951:../user/source/DLT645.c **** /*****************************************************
 952:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºĞŞ¸Äµç±í×´Ì¬×ÖÖĞµÄµçÁ÷·´Ïò¡¢µçÁ÷¶ÌÂ·¡¢µçÁ÷¶ÏÂ·×´Ì¬×Ö
 953:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 954:../user/source/DLT645.c ****  * Êä    ³ö£º
 955:../user/source/DLT645.c ****  *           
 956:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 957:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.5.23
 958:../user/source/DLT645.c ****  *******************************************************/
 959:../user/source/DLT645.c **** void Estatus_Modify_CurrentEvent(uint8_t *pucBuffer)
 960:../user/source/DLT645.c **** {
 961:../user/source/DLT645.c ****     uint16_t estatus = 0x0000;
 962:../user/source/DLT645.c ****     int i = 0;
 963:../user/source/DLT645.c ****     uint8_t ucCheckData = 0x0;
 964:../user/source/DLT645.c ****     switch (pucBuffer[10])
 965:../user/source/DLT645.c ****     {
 966:../user/source/DLT645.c ****     case 0x37: //×´Ì¬×Ö4,AÏà×´Ì¬×Ö
 967:../user/source/DLT645.c ****     {
 968:../user/source/DLT645.c ****         //BIT4,BIT6,bit8 ÖÃ0->11111110 10101111:
 969:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[14], pucBuffer[15]);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 26


 970:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
 971:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
 972:../user/source/DLT645.c ****         break;
 973:../user/source/DLT645.c ****     }
 974:../user/source/DLT645.c ****     case 0x38: //×´Ì¬×Ö5,BÏà×´Ì¬×Ö
 975:../user/source/DLT645.c ****     {
 976:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[14], pucBuffer[15]); //[14][15]×ª»»Îª¶ş½øÖÆ
 977:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 978:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 979:../user/source/DLT645.c ****         break;
 980:../user/source/DLT645.c ****     }
 981:../user/source/DLT645.c ****     case 0x39: //×´Ì¬×Ö6,CÏà×´Ì¬×Ö
 982:../user/source/DLT645.c ****     {
 983:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[14], pucBuffer[15]); //[14][15]×ª»»Îª¶ş½øÖÆ
 984:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 985:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 986:../user/source/DLT645.c ****         break;
 987:../user/source/DLT645.c ****     }
 988:../user/source/DLT645.c ****     case 0x3A: //×´Ì¬×Ö7£¬ºÏÏà×´Ì¬×Ö
 989:../user/source/DLT645.c ****     {
 990:../user/source/DLT645.c ****         estatus = 0xFFF7 & Get_Estatus(pucBuffer[14], pucBuffer[15]); //BIT3=0   11111111 11110111
 991:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 992:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 993:../user/source/DLT645.c ****         break;
 994:../user/source/DLT645.c ****     }
 995:../user/source/DLT645.c ****     case 0x32: //×´Ì¬×ÖÊı¾İ¿é
 996:../user/source/DLT645.c ****     {
 997:../user/source/DLT645.c ****         //1:[14][15] 2:[16][17] 3:[18][19] 4:[20][21] 5:[22][23] 6:[24][25] 7:[26][27]
 998:../user/source/DLT645.c ****         //×´Ì¬×Ö4,AÏà×´Ì¬×Ö
 999:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[20], pucBuffer[21]); //BIT4,BIT6,bit8 =0->11111110
1000:../user/source/DLT645.c ****         pucBuffer[20] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
1001:../user/source/DLT645.c ****         pucBuffer[21] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
1002:../user/source/DLT645.c ****         //×´Ì¬×Ö5,BÏà×´Ì¬×Ö
1003:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[22], pucBuffer[23]);
1004:../user/source/DLT645.c ****         pucBuffer[22] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
1005:../user/source/DLT645.c ****         pucBuffer[23] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
1006:../user/source/DLT645.c ****         //×´Ì¬×Ö6,CÏà×´Ì¬×Ö
1007:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[24], pucBuffer[25]);
1008:../user/source/DLT645.c ****         pucBuffer[24] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
1009:../user/source/DLT645.c ****         pucBuffer[25] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
1010:../user/source/DLT645.c ****         //×´Ì¬×Ö7£¬ºÏÏà×´Ì¬×Ö
1011:../user/source/DLT645.c ****         estatus = 0xFFF7 & Get_Estatus(pucBuffer[26], pucBuffer[27]);
1012:../user/source/DLT645.c ****         pucBuffer[26] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
1013:../user/source/DLT645.c ****         pucBuffer[27] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
1014:../user/source/DLT645.c ****         break;
1015:../user/source/DLT645.c ****     }
1016:../user/source/DLT645.c ****     default:
1017:../user/source/DLT645.c ****         break;
1018:../user/source/DLT645.c ****     }
1019:../user/source/DLT645.c ****     for (i = 0; i < uc645DataDomainLength + 10; i++)
1020:../user/source/DLT645.c ****     {
1021:../user/source/DLT645.c ****         ucCheckData += pucBuffer[i];
1022:../user/source/DLT645.c ****     }
1023:../user/source/DLT645.c ****     pucBuffer[uc645DataDomainLength + 10] = ucCheckData;
1024:../user/source/DLT645.c **** }
1025:../user/source/DLT645.c **** 
1026:../user/source/DLT645.c **** /*****************************************************
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 27


1027:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµ¥ÏàµçÁ÷ĞŞ¸Ä·½·¨
1028:../user/source/DLT645.c ****  * Êä    Èë£ºÁ½Ïà²Î¿¼µçÁ÷£¬Ò»ÏàĞèĞŞ¸ÄµçÁ÷
1029:../user/source/DLT645.c ****  * Êä    ³ö£ºµçÁ÷²»ĞèÒªĞŞ¸Ä£¬Êä³öfalse
1030:../user/source/DLT645.c ****  *           µçÁ÷ÒÑĞŞ¸Ä£¬Êä³ötrue
1031:../user/source/DLT645.c ****  * Ëµ	  Ã÷£º
1032:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1033:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.12.13
1034:../user/source/DLT645.c ****  *******************************************************/
1035:../user/source/DLT645.c **** bool blCurrentSingle_Modify_Method(CURRENT *ref1, CURRENT *ref2, CURRENT *result) //×¢ÊÍÖĞ¸ù¾İBÏàºÍ
1036:../user/source/DLT645.c **** {
 463              		.loc 1 1036 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 468              	.LVL67:
 469 0000 30B4     		push	{r4, r5}
 470              	.LCFI9:
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 4, -8
 473              		.cfi_offset 5, -4
1037:../user/source/DLT645.c ****     //if Acurrent->count>Bcurrent->count && Acurrent->count>Ccurrent->count,ÏÈA£¬²»ĞŞ¸Ä
1038:../user/source/DLT645.c ****     //if Bcurrent->count=Acurrent->count && Acurrent->count>Ccurrent->count,ÏÈB£¬ºóA£¬¸ù¾İBĞŞ¸ÄA
1039:../user/source/DLT645.c ****     //if Ccurrent->count=Acurrent->count && Acurrent->count>Bcurrent->count,ÏÈC£¬ºóA£¬¸ù¾İCĞŞ¸ÄA
1040:../user/source/DLT645.c ****     //if Bcurrent->count=Ccurrent->count && Acurrent->count<Ccurrent->count,ÏÈBC£¬ºóA£¬¸ù¾İBCĞŞ¸ÄA
1041:../user/source/DLT645.c ****     if ((result->count > ref1->count) &&
 474              		.loc 1 1041 0
 475 0002 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 476 0004 0479     		ldrb	r4, [r0, #4]	@ zero_extendqisi2
 477 0006 A342     		cmp	r3, r4
 478 0008 03D9     		bls	.L31
1042:../user/source/DLT645.c ****         (result->count > ref2->count)) //ÏÈresultÏà£¬²»ĞŞ¸Ä
 479              		.loc 1 1042 0 discriminator 1
 480 000a 0D79     		ldrb	r5, [r1, #4]	@ zero_extendqisi2
1041:../user/source/DLT645.c ****         (result->count > ref2->count)) //ÏÈresultÏà£¬²»ĞŞ¸Ä
 481              		.loc 1 1041 0 discriminator 1
 482 000c AB42     		cmp	r3, r5
 483 000e 00F2AF80 		bhi	.L41
 484              	.L31:
1043:../user/source/DLT645.c ****         return false;
1044:../user/source/DLT645.c ****     else if ((result->count == ref1->count) &&
 485              		.loc 1 1044 0
 486 0012 A342     		cmp	r3, r4
 487 0014 34D1     		bne	.L33
1045:../user/source/DLT645.c ****              (result->count > ref2->count)) //ÏÈref1Ïà£¬ºóresultÏà,¸ù¾İref1ĞŞ¸Äresult
 488              		.loc 1 1045 0 discriminator 1
 489 0016 0D79     		ldrb	r5, [r1, #4]	@ zero_extendqisi2
1044:../user/source/DLT645.c ****              (result->count > ref2->count)) //ÏÈref1Ïà£¬ºóresultÏà,¸ù¾İref1ĞŞ¸Äresult
 490              		.loc 1 1044 0 discriminator 1
 491 0018 AB42     		cmp	r3, r5
 492 001a 31D9     		bls	.L33
1046:../user/source/DLT645.c ****     {
1047:../user/source/DLT645.c ****         if (ref1->value == 0 || result->value == 0 || ref1->isminus || result->isminus)
 493              		.loc 1 1047 0
 494 001c 0368     		ldr	r3, [r0]
 495 001e 002B     		cmp	r3, #0
 496 0020 00F0A880 		beq	.L42
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 28


 497              		.loc 1 1047 0 is_stmt 0 discriminator 1
 498 0024 1168     		ldr	r1, [r2]
 499              	.LVL68:
 500 0026 0029     		cmp	r1, #0
 501 0028 00F0A680 		beq	.L43
 502              		.loc 1 1047 0 discriminator 2
 503 002c 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2
 504              	.LVL69:
 505 002e 0028     		cmp	r0, #0
 506 0030 40F0A480 		bne	.L44
 507              		.loc 1 1047 0 discriminator 3
 508 0034 5479     		ldrb	r4, [r2, #5]	@ zero_extendqisi2
 509 0036 002C     		cmp	r4, #0
 510 0038 40F0B580 		bne	.L32
1048:../user/source/DLT645.c ****             return false; //ÒÑ¾­ÊÕµ½µÄÁ½ÏàµçÁ÷ÖĞ£¬ÓĞ0Öµ£¬»òÕßÓĞ¸ºÖµ£¬²»×öĞŞ¸Ä
1049:../user/source/DLT645.c ****         if (result->value < ref1->value)
 511              		.loc 1 1049 0 is_stmt 1
 512 003c 8B42     		cmp	r3, r1
 513 003e 0CD9     		bls	.L34
1050:../user/source/DLT645.c ****         {
1051:../user/source/DLT645.c ****             //ÈôresultĞ¡£¬resultĞŞ¸ÄÎªref1µÄ¹Ì¶¨±ÈÀı£ºCURRENT_MAX_DVALUE/100
1052:../user/source/DLT645.c ****             result->value = ((result->value < (CURRENT_MAX_DVALUE * ref1->value / 100))
1053:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * ref1->value / 100
 514              		.loc 1 1053 0
 515 0040 03EB8303 		add	r3, r3, r3, lsl #2
 516 0044 1801     		lsls	r0, r3, #4
 517 0046 594B     		ldr	r3, .L56
 518 0048 A3FB0003 		umull	r0, r3, r3, r0
 519 004c 5B09     		lsrs	r3, r3, #5
1054:../user/source/DLT645.c ****                                  : result->value);
 520              		.loc 1 1054 0
 521 004e 9942     		cmp	r1, r3
 522 0050 38BF     		it	cc
 523 0052 1946     		movcc	r1, r3
1052:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * ref1->value / 100
 524              		.loc 1 1052 0
 525 0054 1160     		str	r1, [r2]
1055:../user/source/DLT645.c ****         }
1056:../user/source/DLT645.c ****         else
1057:../user/source/DLT645.c ****         {
1058:../user/source/DLT645.c ****             //Èôresult´ó£¬resultĞŞ¸ÄÎªref1µÄ¹Ì¶¨±ÈÀı£º100/CURRENT_MAX_DVALUE£»²»³¬¹ı·¶Î§»òÕßref1µÈÓ
1059:../user/source/DLT645.c ****             result->value = ((CURRENT_MAX_DVALUE * result->value / 100 > ref1->value)
1060:../user/source/DLT645.c ****                                  ? 100 * ref1->value / CURRENT_MAX_DVALUE
1061:../user/source/DLT645.c ****                                  : result->value);
1062:../user/source/DLT645.c ****         }
1063:../user/source/DLT645.c ****         return true;
 526              		.loc 1 1063 0
 527 0056 0120     		movs	r0, #1
 528 0058 A5E0     		b	.L32
 529              	.L34:
1059:../user/source/DLT645.c ****                                  ? 100 * ref1->value / CURRENT_MAX_DVALUE
 530              		.loc 1 1059 0
 531 005a 01EB8104 		add	r4, r1, r1, lsl #2
 532 005e 2001     		lsls	r0, r4, #4
 533 0060 524C     		ldr	r4, .L56
 534 0062 A4FB0040 		umull	r4, r0, r4, r0
1061:../user/source/DLT645.c ****         }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 29


 535              		.loc 1 1061 0
 536 0066 B3EB501F 		cmp	r3, r0, lsr #5
 537 006a 06D2     		bcs	.L35
1060:../user/source/DLT645.c ****                                  : result->value);
 538              		.loc 1 1060 0 discriminator 1
 539 006c 6421     		movs	r1, #100
 540 006e 01FB03F3 		mul	r3, r1, r3
1061:../user/source/DLT645.c ****         }
 541              		.loc 1 1061 0 discriminator 1
 542 0072 4F49     		ldr	r1, .L56+4
 543 0074 A1FB0331 		umull	r3, r1, r1, r3
 544 0078 8909     		lsrs	r1, r1, #6
 545              	.L35:
1059:../user/source/DLT645.c ****                                  ? 100 * ref1->value / CURRENT_MAX_DVALUE
 546              		.loc 1 1059 0
 547 007a 1160     		str	r1, [r2]
 548              		.loc 1 1063 0
 549 007c 0120     		movs	r0, #1
 550 007e 92E0     		b	.L32
 551              	.LVL70:
 552              	.L33:
1064:../user/source/DLT645.c ****     }
1065:../user/source/DLT645.c ****     else if ((result->count == ref2->count) && (result->count > ref1->count)) //ÏÈref2Ïà£¬ºóresultÏ
 553              		.loc 1 1065 0
 554 0080 0D79     		ldrb	r5, [r1, #4]	@ zero_extendqisi2
 555 0082 AB42     		cmp	r3, r5
 556 0084 30D1     		bne	.L36
 557              		.loc 1 1065 0 is_stmt 0 discriminator 1
 558 0086 A342     		cmp	r3, r4
 559 0088 2ED9     		bls	.L36
1066:../user/source/DLT645.c ****     {
1067:../user/source/DLT645.c ****         if (ref2->value == 0 || result->value == 0 || ref2->isminus || result->isminus)
 560              		.loc 1 1067 0 is_stmt 1
 561 008a 0B68     		ldr	r3, [r1]
 562 008c 002B     		cmp	r3, #0
 563 008e 77D0     		beq	.L45
 564              		.loc 1 1067 0 is_stmt 0 discriminator 1
 565 0090 1468     		ldr	r4, [r2]
 566 0092 002C     		cmp	r4, #0
 567 0094 76D0     		beq	.L46
 568              		.loc 1 1067 0 discriminator 2
 569 0096 4879     		ldrb	r0, [r1, #5]	@ zero_extendqisi2
 570              	.LVL71:
 571 0098 0028     		cmp	r0, #0
 572 009a 75D1     		bne	.L47
 573              		.loc 1 1067 0 discriminator 3
 574 009c 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 575              	.LVL72:
 576 009e 0029     		cmp	r1, #0
 577 00a0 40F08180 		bne	.L32
1068:../user/source/DLT645.c ****             return false;
1069:../user/source/DLT645.c ****         if (result->value < ref2->value)
 578              		.loc 1 1069 0 is_stmt 1
 579 00a4 A342     		cmp	r3, r4
 580 00a6 0CD9     		bls	.L37
1070:../user/source/DLT645.c ****         {
1071:../user/source/DLT645.c ****             result->value = ((result->value < (CURRENT_MAX_DVALUE * ref2->value / 100))
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 30


1072:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * ref2->value / 100
 581              		.loc 1 1072 0
 582 00a8 03EB8303 		add	r3, r3, r3, lsl #2
 583 00ac 1901     		lsls	r1, r3, #4
 584 00ae 3F4B     		ldr	r3, .L56
 585 00b0 A3FB0113 		umull	r1, r3, r3, r1
 586 00b4 5B09     		lsrs	r3, r3, #5
1073:../user/source/DLT645.c ****                                  : result->value);
 587              		.loc 1 1073 0
 588 00b6 9C42     		cmp	r4, r3
 589 00b8 38BF     		it	cc
 590 00ba 1C46     		movcc	r4, r3
1071:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * ref2->value / 100
 591              		.loc 1 1071 0
 592 00bc 1460     		str	r4, [r2]
1074:../user/source/DLT645.c ****         }
1075:../user/source/DLT645.c ****         else
1076:../user/source/DLT645.c ****         {
1077:../user/source/DLT645.c ****             result->value = ((CURRENT_MAX_DVALUE * result->value / 100 > ref2->value)
1078:../user/source/DLT645.c ****                                  ? 100 * ref2->value / CURRENT_MAX_DVALUE
1079:../user/source/DLT645.c ****                                  : result->value);
1080:../user/source/DLT645.c ****         }
1081:../user/source/DLT645.c ****         return true;
 593              		.loc 1 1081 0
 594 00be 0120     		movs	r0, #1
 595 00c0 71E0     		b	.L32
 596              	.L37:
1077:../user/source/DLT645.c ****                                  ? 100 * ref2->value / CURRENT_MAX_DVALUE
 597              		.loc 1 1077 0
 598 00c2 04EB8400 		add	r0, r4, r4, lsl #2
 599 00c6 0101     		lsls	r1, r0, #4
 600 00c8 3848     		ldr	r0, .L56
 601 00ca A0FB0101 		umull	r0, r1, r0, r1
1079:../user/source/DLT645.c ****         }
 602              		.loc 1 1079 0
 603 00ce B3EB511F 		cmp	r3, r1, lsr #5
 604 00d2 06D2     		bcs	.L38
1078:../user/source/DLT645.c ****                                  : result->value);
 605              		.loc 1 1078 0 discriminator 1
 606 00d4 6424     		movs	r4, #100
 607 00d6 04FB03F3 		mul	r3, r4, r3
1079:../user/source/DLT645.c ****         }
 608              		.loc 1 1079 0 discriminator 1
 609 00da 354C     		ldr	r4, .L56+4
 610 00dc A4FB0334 		umull	r3, r4, r4, r3
 611 00e0 A409     		lsrs	r4, r4, #6
 612              	.L38:
1077:../user/source/DLT645.c ****                                  ? 100 * ref2->value / CURRENT_MAX_DVALUE
 613              		.loc 1 1077 0
 614 00e2 1460     		str	r4, [r2]
 615              		.loc 1 1081 0
 616 00e4 0120     		movs	r0, #1
 617 00e6 5EE0     		b	.L32
 618              	.LVL73:
 619              	.L36:
1082:../user/source/DLT645.c ****     }
1083:../user/source/DLT645.c ****     else if ((result->count == ref1->count) && (result->count == ref2->count)) //Ç°Á½ÏàÊÇref1ºÍref2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 31


 620              		.loc 1 1083 0
 621 00e8 A342     		cmp	r3, r4
 622 00ea 4FD1     		bne	.L48
 623              		.loc 1 1083 0 is_stmt 0 discriminator 1
 624 00ec AB42     		cmp	r3, r5
 625 00ee 4FD1     		bne	.L49
1084:../user/source/DLT645.c ****     {
1085:../user/source/DLT645.c ****         if ((ref1->value == 0) || (ref2->value == 0) || (result->value == 0) || ref1->isminus || re
 626              		.loc 1 1085 0 is_stmt 1
 627 00f0 0368     		ldr	r3, [r0]
 628 00f2 002B     		cmp	r3, #0
 629 00f4 4ED0     		beq	.L50
 630              		.loc 1 1085 0 is_stmt 0 discriminator 1
 631 00f6 0C68     		ldr	r4, [r1]
 632 00f8 002C     		cmp	r4, #0
 633 00fa 4DD0     		beq	.L51
 634              		.loc 1 1085 0 discriminator 2
 635 00fc 1568     		ldr	r5, [r2]
 636 00fe 002D     		cmp	r5, #0
 637 0100 4CD0     		beq	.L52
 638              		.loc 1 1085 0 discriminator 3
 639 0102 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2
 640              	.LVL74:
 641 0104 0028     		cmp	r0, #0
 642 0106 4BD1     		bne	.L53
 643              		.loc 1 1085 0 discriminator 4
 644 0108 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 645              	.LVL75:
 646 010a 0029     		cmp	r1, #0
 647 010c 4BD1     		bne	.L32
 648              		.loc 1 1085 0 discriminator 5
 649 010e 5079     		ldrb	r0, [r2, #5]	@ zero_extendqisi2
 650 0110 0028     		cmp	r0, #0
 651 0112 47D1     		bne	.L54
1086:../user/source/DLT645.c ****             return false;
1087:../user/source/DLT645.c ****         if (result->value > MAX(ref1->value, ref2->value)) //result±ÈÇ°Á½Ïà¶¼´ó£¬resultĞŞ¸ÄÎª½ÏĞ¡Öµ
 652              		.loc 1 1087 0 is_stmt 1
 653 0114 1946     		mov	r1, r3
 654 0116 A342     		cmp	r3, r4
 655 0118 38BF     		it	cc
 656 011a 2146     		movcc	r1, r4
 657 011c 8D42     		cmp	r5, r1
 658 011e 15D9     		bls	.L39
1088:../user/source/DLT645.c ****         {
1089:../user/source/DLT645.c ****             result->value = (CURRENT_MAX_DVALUE * result->value / 100 >= MIN(ref1->value, ref2->val
 659              		.loc 1 1089 0
 660 0120 05EB8500 		add	r0, r5, r5, lsl #2
 661 0124 0101     		lsls	r1, r0, #4
 662 0126 2148     		ldr	r0, .L56
 663 0128 A0FB0101 		umull	r0, r1, r0, r1
 664 012c A342     		cmp	r3, r4
 665 012e 28BF     		it	cs
 666 0130 2346     		movcs	r3, r4
1090:../user/source/DLT645.c ****                                  ? 100 * MIN(ref1->value, ref2->value) / CURRENT_MAX_DVALUE
1091:../user/source/DLT645.c ****                                  : result->value);
 667              		.loc 1 1091 0
 668 0132 B3EB511F 		cmp	r3, r1, lsr #5
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 32


 669 0136 06D8     		bhi	.L40
1090:../user/source/DLT645.c ****                                  ? 100 * MIN(ref1->value, ref2->value) / CURRENT_MAX_DVALUE
 670              		.loc 1 1090 0 discriminator 1
 671 0138 6425     		movs	r5, #100
 672 013a 05FB03F3 		mul	r3, r5, r3
 673              		.loc 1 1091 0 discriminator 1
 674 013e 1C4D     		ldr	r5, .L56+4
 675 0140 A5FB0335 		umull	r3, r5, r5, r3
 676 0144 AD09     		lsrs	r5, r5, #6
 677              	.L40:
1089:../user/source/DLT645.c ****                                  ? 100 * MIN(ref1->value, ref2->value) / CURRENT_MAX_DVALUE
 678              		.loc 1 1089 0
 679 0146 1560     		str	r5, [r2]
1092:../user/source/DLT645.c ****         }
1093:../user/source/DLT645.c ****         else if (result->value < MIN(ref1->value, ref2->value)) //result±ÈÇ°Á½Ïà¶¼Ğ¡£¬resultĞŞ¸ÄÎª½
1094:../user/source/DLT645.c ****         {
1095:../user/source/DLT645.c ****             result->value = ((result->value < CURRENT_MAX_DVALUE * MAX(ref1->value, ref2->value) / 
1096:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * MAX(ref1->value, ref2->value) / 100
1097:../user/source/DLT645.c ****                                  : result->value);
1098:../user/source/DLT645.c ****         }
1099:../user/source/DLT645.c ****         else //resultÔÚref1ºÍref2Ö®¼ä£¬ÒòÎªÇ°Á½Ö¡²îÖµÒÑ±£Ö¤²»³¬³ö·¶Î§£¬ËùÒÔresult²»ĞèÒªĞŞ¸Ä
1100:../user/source/DLT645.c ****         {
1101:../user/source/DLT645.c ****             return false;
1102:../user/source/DLT645.c ****         }
1103:../user/source/DLT645.c ****         return true;
 680              		.loc 1 1103 0
 681 0148 0120     		movs	r0, #1
 682 014a 2CE0     		b	.L32
 683              	.L39:
1093:../user/source/DLT645.c ****         {
 684              		.loc 1 1093 0
 685 014c A342     		cmp	r3, r4
 686 014e 28BF     		it	cs
 687 0150 2346     		movcs	r3, r4
 688 0152 9D42     		cmp	r5, r3
 689 0154 27D2     		bcs	.L32
1096:../user/source/DLT645.c ****                                  : result->value);
 690              		.loc 1 1096 0
 691 0156 01EB8101 		add	r1, r1, r1, lsl #2
 692 015a 0B01     		lsls	r3, r1, #4
 693 015c 1349     		ldr	r1, .L56
 694 015e A1FB0313 		umull	r1, r3, r1, r3
 695 0162 5B09     		lsrs	r3, r3, #5
1097:../user/source/DLT645.c ****         }
 696              		.loc 1 1097 0
 697 0164 9D42     		cmp	r5, r3
 698 0166 38BF     		it	cc
 699 0168 1D46     		movcc	r5, r3
1095:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * MAX(ref1->value, ref2->value) / 100
 700              		.loc 1 1095 0
 701 016a 1560     		str	r5, [r2]
 702              		.loc 1 1103 0
 703 016c 0120     		movs	r0, #1
 704 016e 1AE0     		b	.L32
 705              	.LVL76:
 706              	.L41:
1043:../user/source/DLT645.c ****     else if ((result->count == ref1->count) &&
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 33


 707              		.loc 1 1043 0
 708 0170 0020     		movs	r0, #0
 709              	.LVL77:
 710 0172 18E0     		b	.L32
 711              	.LVL78:
 712              	.L42:
1048:../user/source/DLT645.c ****         if (result->value < ref1->value)
 713              		.loc 1 1048 0
 714 0174 0020     		movs	r0, #0
 715              	.LVL79:
 716 0176 16E0     		b	.L32
 717              	.LVL80:
 718              	.L43:
 719 0178 0020     		movs	r0, #0
 720              	.LVL81:
 721 017a 14E0     		b	.L32
 722              	.L44:
 723 017c 0020     		movs	r0, #0
 724 017e 12E0     		b	.L32
 725              	.LVL82:
 726              	.L45:
1068:../user/source/DLT645.c ****         if (result->value < ref2->value)
 727              		.loc 1 1068 0
 728 0180 0020     		movs	r0, #0
 729              	.LVL83:
 730 0182 10E0     		b	.L32
 731              	.LVL84:
 732              	.L46:
 733 0184 0020     		movs	r0, #0
 734              	.LVL85:
 735 0186 0EE0     		b	.L32
 736              	.L47:
 737 0188 0020     		movs	r0, #0
 738 018a 0CE0     		b	.L32
 739              	.LVL86:
 740              	.L48:
1104:../user/source/DLT645.c ****     }
1105:../user/source/DLT645.c ****     return true;
 741              		.loc 1 1105 0
 742 018c 0120     		movs	r0, #1
 743              	.LVL87:
 744 018e 0AE0     		b	.L32
 745              	.LVL88:
 746              	.L49:
 747 0190 0120     		movs	r0, #1
 748              	.LVL89:
 749 0192 08E0     		b	.L32
 750              	.LVL90:
 751              	.L50:
1086:../user/source/DLT645.c ****         if (result->value > MAX(ref1->value, ref2->value)) //result±ÈÇ°Á½Ïà¶¼´ó£¬resultĞŞ¸ÄÎª½ÏĞ¡Öµ
 752              		.loc 1 1086 0
 753 0194 0020     		movs	r0, #0
 754              	.LVL91:
 755 0196 06E0     		b	.L32
 756              	.LVL92:
 757              	.L51:
 758 0198 0020     		movs	r0, #0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 34


 759              	.LVL93:
 760 019a 04E0     		b	.L32
 761              	.LVL94:
 762              	.L52:
 763 019c 0020     		movs	r0, #0
 764              	.LVL95:
 765 019e 02E0     		b	.L32
 766              	.L53:
 767 01a0 0020     		movs	r0, #0
 768 01a2 00E0     		b	.L32
 769              	.LVL96:
 770              	.L54:
 771 01a4 0846     		mov	r0, r1
 772              	.L32:
1106:../user/source/DLT645.c **** }
 773              		.loc 1 1106 0
 774 01a6 30BC     		pop	{r4, r5}
 775              	.LCFI10:
 776              		.cfi_restore 5
 777              		.cfi_restore 4
 778              		.cfi_def_cfa_offset 0
 779 01a8 7047     		bx	lr
 780              	.L57:
 781 01aa 00BF     		.align	2
 782              	.L56:
 783 01ac 1F85EB51 		.word	1374389535
 784 01b0 CDCCCCCC 		.word	-858993459
 785              		.cfi_endproc
 786              	.LFE129:
 788              		.section	.text.vCurrentTriple_Modify_Method,"ax",%progbits
 789              		.align	2
 790              		.thumb
 791              		.thumb_func
 793              	vCurrentTriple_Modify_Method:
 794              	.LFB130:
1107:../user/source/DLT645.c **** 
1108:../user/source/DLT645.c **** /*****************************************************
1109:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÈıÏàµçÁ÷ĞŞ¸Ä·½·¨
1110:../user/source/DLT645.c ****  * Êä    Èë£ºÈıÏà²Î¿¼µçÁ÷
1111:../user/source/DLT645.c ****  * Êä    ³ö£ºÎŞ
1112:../user/source/DLT645.c ****  * Ëµ	  Ã÷£º×î´óµçÁ÷Öµ¸ÄÎªÆ½¾ùÖµµÄ1.1±¶£¬ÖĞ¼äÖµ¸ÄÎªÆ½¾ùÖµ£¬×îĞ¡Öµ¸ÄÎªÆ½¾ùÖµµÄ90%£¬
1113:../user/source/DLT645.c ****  *				´ËÊ±×î´óµçÁ÷ÖµºÍ×îµçÁ÷ÖµµÄ²îÖµÊÇ×î´óÖµµÄ18.18%
1114:../user/source/DLT645.c ****  *				
1115:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1116:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.12.13
1117:../user/source/DLT645.c ****  *******************************************************/
1118:../user/source/DLT645.c **** void vCurrentTriple_Modify_Method(CURRENT *current_max, CURRENT *current_mid, CURRENT *current_min)
1119:../user/source/DLT645.c **** {
 795              		.loc 1 1119 0
 796              		.cfi_startproc
 797              		@ args = 0, pretend = 0, frame = 0
 798              		@ frame_needed = 0, uses_anonymous_args = 0
 799              		@ link register save eliminated.
 800              	.LVL97:
 801 0000 30B4     		push	{r4, r5}
 802              	.LCFI11:
 803              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 35


 804              		.cfi_offset 4, -8
 805              		.cfi_offset 5, -4
1120:../user/source/DLT645.c ****     uint32_t current_average;
1121:../user/source/DLT645.c ****     current_average = (current_max->value + current_mid->value + current_min->value) / 3;
 806              		.loc 1 1121 0
 807 0002 0468     		ldr	r4, [r0]
 808 0004 0B68     		ldr	r3, [r1]
 809 0006 1C44     		add	r4, r4, r3
 810 0008 1368     		ldr	r3, [r2]
 811 000a 2344     		add	r3, r3, r4
 812 000c 0324     		movs	r4, #3
 813 000e B3FBF4F3 		udiv	r3, r3, r4
 814              	.LVL98:
1122:../user/source/DLT645.c ****     current_max->value = current_average * 11 / 10; //×î´óÖµ¸ÄÎªÆ½¾ùÖµµÄ110%
 815              		.loc 1 1122 0
 816 0012 0B24     		movs	r4, #11
 817 0014 04FB03F4 		mul	r4, r4, r3
 818 0018 0A25     		movs	r5, #10
 819 001a B4FBF5F4 		udiv	r4, r4, r5
 820 001e 0460     		str	r4, [r0]
1123:../user/source/DLT645.c ****     current_mid->value = current_average;           //ÖĞ¼äÖµ¸ÄÎªÆ½¾ùÖµ
 821              		.loc 1 1123 0
 822 0020 0B60     		str	r3, [r1]
1124:../user/source/DLT645.c ****     current_min->value = current_average * 9 / 10;  //×îĞ¡Öµ¸ÄÎªÆ½¾ùÖµµÄ90%£»
 823              		.loc 1 1124 0
 824 0022 03EBC303 		add	r3, r3, r3, lsl #3
 825              	.LVL99:
 826 0026 B3FBF5F3 		udiv	r3, r3, r5
 827 002a 1360     		str	r3, [r2]
 828              	.LVL100:
1125:../user/source/DLT645.c **** }
 829              		.loc 1 1125 0
 830 002c 30BC     		pop	{r4, r5}
 831              	.LCFI12:
 832              		.cfi_restore 5
 833              		.cfi_restore 4
 834              		.cfi_def_cfa_offset 0
 835 002e 7047     		bx	lr
 836              		.cfi_endproc
 837              	.LFE130:
 839              		.section	.text.vCurrent_Modify,"ax",%progbits
 840              		.align	2
 841              		.global	vCurrent_Modify
 842              		.thumb
 843              		.thumb_func
 845              	vCurrent_Modify:
 846              	.LFB131:
1126:../user/source/DLT645.c **** 
1127:../user/source/DLT645.c **** /*****************************************************
1128:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºĞŞ¸ÄµçÁ÷¸÷Ïà²îÖµ
1129:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
1130:../user/source/DLT645.c ****  * Êä    ³ö£ºÎŞ
1131:../user/source/DLT645.c ****  * Ëµ	  Ã÷£ºµ¥ÏàµçÁ÷£ºÈôÈÎÒâÁ½Ïà²îÖµ´óÓÚ20%µÄ½Ï´óÖµ£¬Ôò½«½ÏĞ¡Öµ¸ÄÎª½Ï´óÖµµÄ80%          
1132:../user/source/DLT645.c ****  *				ÈıÏàµçÁ÷£º°´ÕÕ×ÜºÍ²»±äÀ´ĞŞ¸Ä
1133:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1134:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.12.13
1135:../user/source/DLT645.c ****  *******************************************************/
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 36


1136:../user/source/DLT645.c **** void vCurrent_Modify(uint8_t *pucBuffer)
1137:../user/source/DLT645.c **** {
 847              		.loc 1 1137 0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 851              	.LVL101:
 852 0000 30B5     		push	{r4, r5, lr}
 853              	.LCFI13:
 854              		.cfi_def_cfa_offset 12
 855              		.cfi_offset 4, -12
 856              		.cfi_offset 5, -8
 857              		.cfi_offset 14, -4
 858 0002 83B0     		sub	sp, sp, #12
 859              	.LCFI14:
 860              		.cfi_def_cfa_offset 24
 861 0004 0446     		mov	r4, r0
 862              	.LVL102:
1138:../user/source/DLT645.c ****     uint8_t i;
1139:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
1140:../user/source/DLT645.c ****     switch (pucBuffer[11])
 863              		.loc 1 1140 0
 864 0006 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 865 0008 323B     		subs	r3, r3, #50
 866 000a 042B     		cmp	r3, #4
 867 000c 00F22C81 		bhi	.L60
 868 0010 DFE813F0 		tbh	[pc, r3, lsl #1]
 869              	.L63:
 870 0014 0500     		.2byte	(.L62-.L63)/2
 871 0016 2A01     		.2byte	(.L60-.L63)/2
 872 0018 AB00     		.2byte	(.L64-.L63)/2
 873 001a D600     		.2byte	(.L65-.L63)/2
 874 001c 0101     		.2byte	(.L66-.L63)/2
 875              		.p2align 1
 876              	.L62:
1141:../user/source/DLT645.c ****     {
1142:../user/source/DLT645.c ****     case 0x32: //ÈıÏàµçÁ÷Êı¾İ¿é
1143:../user/source/DLT645.c ****     {
1144:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Acurrent);
 877              		.loc 1 1144 0
 878 001e 934D     		ldr	r5, .L82
 879 0020 2B46     		mov	r3, r5
 880 0022 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 881 0024 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 882 0026 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 883              	.LVL103:
 884 0028 FFF7FEFF 		bl	vGet_Current
 885              	.LVL104:
1145:../user/source/DLT645.c ****         /*µçÁ÷Îª¸ºÖµ,²»ĞŞ¸ÄµçÁ÷*/
1146:../user/source/DLT645.c ****         if (Acurrent.isminus || Bcurrent.isminus || Ccurrent.isminus)
 886              		.loc 1 1146 0
 887 002c 6B79     		ldrb	r3, [r5, #5]	@ zero_extendqisi2
 888 002e 002B     		cmp	r3, #0
 889 0030 40F01A81 		bne	.L60
 890              		.loc 1 1146 0 is_stmt 0 discriminator 1
 891 0034 8E4B     		ldr	r3, .L82+4
 892 0036 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 37


 893 0038 002B     		cmp	r3, #0
 894 003a 40F01581 		bne	.L60
 895              		.loc 1 1146 0 discriminator 2
 896 003e 8D4B     		ldr	r3, .L82+8
 897 0040 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 898 0042 002B     		cmp	r3, #0
 899 0044 40F01081 		bne	.L60
1147:../user/source/DLT645.c ****             return;
1148:../user/source/DLT645.c ****         /*µçÁ÷Îª0£¬²»ĞŞ¸ÄµçÁ÷*/
1149:../user/source/DLT645.c ****         if ((Acurrent.value == 0) || (Bcurrent.value == 0) || (Ccurrent.value == 0))
 900              		.loc 1 1149 0 is_stmt 1
 901 0048 2B68     		ldr	r3, [r5]
 902 004a 002B     		cmp	r3, #0
 903 004c 00F00C81 		beq	.L60
 904              		.loc 1 1149 0 is_stmt 0 discriminator 1
 905 0050 874A     		ldr	r2, .L82+4
 906 0052 1268     		ldr	r2, [r2]
 907 0054 002A     		cmp	r2, #0
 908 0056 00F00781 		beq	.L60
 909              		.loc 1 1149 0 discriminator 2
 910 005a 8649     		ldr	r1, .L82+8
 911 005c 0868     		ldr	r0, [r1]
 912 005e 0028     		cmp	r0, #0
 913 0060 00F00281 		beq	.L60
1150:../user/source/DLT645.c ****             return;
1151:../user/source/DLT645.c ****         /*µçÁ÷Ïà»¥Ö®¼ä²»³¬²î£¬²»ĞŞ¸ÄµçÁ÷*/
1152:../user/source/DLT645.c ****         if (CURRENT_MAX_DVALUE * MAX(Acurrent.value, MAX(Bcurrent.value, Ccurrent.value)) / 100 <=
 914              		.loc 1 1152 0 is_stmt 1
 915 0064 1146     		mov	r1, r2
 916 0066 8242     		cmp	r2, r0
 917 0068 38BF     		it	cc
 918 006a 0146     		movcc	r1, r0
 919 006c 9942     		cmp	r1, r3
 920 006e 38BF     		it	cc
 921 0070 1946     		movcc	r1, r3
 922 0072 01EB8101 		add	r1, r1, r1, lsl #2
 923 0076 0D01     		lsls	r5, r1, #4
 924 0078 7F49     		ldr	r1, .L82+12
 925 007a A1FB0515 		umull	r1, r5, r1, r5
1153:../user/source/DLT645.c ****             MIN(Acurrent.value, MIN(Bcurrent.value, Ccurrent.value)))
 926              		.loc 1 1153 0
 927 007e 1146     		mov	r1, r2
 928 0080 8242     		cmp	r2, r0
 929 0082 28BF     		it	cs
 930 0084 0146     		movcs	r1, r0
 931 0086 9942     		cmp	r1, r3
 932 0088 28BF     		it	cs
 933 008a 1946     		movcs	r1, r3
1152:../user/source/DLT645.c ****             MIN(Acurrent.value, MIN(Bcurrent.value, Ccurrent.value)))
 934              		.loc 1 1152 0
 935 008c B1EB551F 		cmp	r1, r5, lsr #5
 936 0090 80F0EA80 		bcs	.L60
1154:../user/source/DLT645.c ****             return;
1155:../user/source/DLT645.c ****         else //ĞèÒªĞŞ¸Ä£¬×î´óÖµ¼õĞ¡£¬×îĞ¡ÖµÔö´ó£¬Ê£ÏÂµÄÊÇÖĞ¼äÖµ
1156:../user/source/DLT645.c ****         {
1157:../user/source/DLT645.c ****             if ((Acurrent.value >= Bcurrent.value) && (Bcurrent.value >= Ccurrent.value))
 937              		.loc 1 1157 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 38


 938 0094 9342     		cmp	r3, r2
 939 0096 07D3     		bcc	.L67
 940              		.loc 1 1157 0 is_stmt 0 discriminator 1
 941 0098 8242     		cmp	r2, r0
 942 009a 05D3     		bcc	.L67
1158:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Acurrent, &Bcurrent, &Ccurrent);
 943              		.loc 1 1158 0 is_stmt 1
 944 009c 754A     		ldr	r2, .L82+8
 945 009e 7449     		ldr	r1, .L82+4
 946 00a0 7248     		ldr	r0, .L82
 947 00a2 FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 948              	.LVL105:
 949 00a6 30E0     		b	.L68
 950              	.L67:
1159:../user/source/DLT645.c ****             else if ((Acurrent.value >= Ccurrent.value) && (Ccurrent.value >= Bcurrent.value))
 951              		.loc 1 1159 0
 952 00a8 8342     		cmp	r3, r0
 953 00aa 07D3     		bcc	.L69
 954              		.loc 1 1159 0 is_stmt 0 discriminator 1
 955 00ac 8242     		cmp	r2, r0
 956 00ae 05D8     		bhi	.L69
1160:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Acurrent, &Ccurrent, &Bcurrent);
 957              		.loc 1 1160 0 is_stmt 1
 958 00b0 6F4A     		ldr	r2, .L82+4
 959 00b2 7049     		ldr	r1, .L82+8
 960 00b4 6D48     		ldr	r0, .L82
 961 00b6 FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 962              	.LVL106:
 963 00ba 26E0     		b	.L68
 964              	.L69:
1161:../user/source/DLT645.c ****             else if ((Bcurrent.value >= Acurrent.value) && (Acurrent.value >= Ccurrent.value))
 965              		.loc 1 1161 0
 966 00bc 9342     		cmp	r3, r2
 967 00be 07D8     		bhi	.L70
 968              		.loc 1 1161 0 is_stmt 0 discriminator 1
 969 00c0 8342     		cmp	r3, r0
 970 00c2 05D3     		bcc	.L70
1162:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Bcurrent, &Acurrent, &Ccurrent);
 971              		.loc 1 1162 0 is_stmt 1
 972 00c4 6B4A     		ldr	r2, .L82+8
 973 00c6 6949     		ldr	r1, .L82
 974 00c8 6948     		ldr	r0, .L82+4
 975 00ca FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 976              	.LVL107:
 977 00ce 1CE0     		b	.L68
 978              	.L70:
1163:../user/source/DLT645.c ****             else if ((Bcurrent.value >= Ccurrent.value) && (Ccurrent.value >= Acurrent.value))
 979              		.loc 1 1163 0
 980 00d0 8242     		cmp	r2, r0
 981 00d2 07D3     		bcc	.L71
 982              		.loc 1 1163 0 is_stmt 0 discriminator 1
 983 00d4 8342     		cmp	r3, r0
 984 00d6 05D8     		bhi	.L71
1164:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Bcurrent, &Ccurrent, &Acurrent);
 985              		.loc 1 1164 0 is_stmt 1
 986 00d8 644A     		ldr	r2, .L82
 987 00da 6649     		ldr	r1, .L82+8
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 39


 988 00dc 6448     		ldr	r0, .L82+4
 989 00de FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 990              	.LVL108:
 991 00e2 12E0     		b	.L68
 992              	.L71:
1165:../user/source/DLT645.c ****             else if ((Ccurrent.value >= Acurrent.value) && (Acurrent.value >= Bcurrent.value))
 993              		.loc 1 1165 0
 994 00e4 8342     		cmp	r3, r0
 995 00e6 07D8     		bhi	.L72
 996              		.loc 1 1165 0 is_stmt 0 discriminator 1
 997 00e8 9342     		cmp	r3, r2
 998 00ea 05D3     		bcc	.L72
1166:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Ccurrent, &Acurrent, &Bcurrent);
 999              		.loc 1 1166 0 is_stmt 1
 1000 00ec 604A     		ldr	r2, .L82+4
 1001 00ee 5F49     		ldr	r1, .L82
 1002 00f0 6048     		ldr	r0, .L82+8
 1003 00f2 FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 1004              	.LVL109:
 1005 00f6 08E0     		b	.L68
 1006              	.L72:
1167:../user/source/DLT645.c ****             else if ((Ccurrent.value >= Bcurrent.value) && (Bcurrent.value >= Acurrent.value))
 1007              		.loc 1 1167 0
 1008 00f8 8242     		cmp	r2, r0
 1009 00fa 06D8     		bhi	.L68
 1010              		.loc 1 1167 0 is_stmt 0 discriminator 1
 1011 00fc 9342     		cmp	r3, r2
 1012 00fe 04D8     		bhi	.L68
1168:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Ccurrent, &Bcurrent, &Acurrent);
 1013              		.loc 1 1168 0 is_stmt 1
 1014 0100 5A4A     		ldr	r2, .L82
 1015 0102 5B49     		ldr	r1, .L82+4
 1016 0104 5B48     		ldr	r0, .L82+8
 1017 0106 FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 1018              	.LVL110:
 1019              	.L68:
1169:../user/source/DLT645.c ****             //AÏàµçÁ÷,Ê®½øÖÆÊı×ªBCDÂë
1170:../user/source/DLT645.c ****             vPut_Current(Acurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
 1020              		.loc 1 1170 0
 1021 010a 584D     		ldr	r5, .L82
 1022 010c 04F11003 		add	r3, r4, #16
 1023 0110 0093     		str	r3, [sp]
 1024 0112 04F10F03 		add	r3, r4, #15
 1025 0116 04F10E02 		add	r2, r4, #14
 1026 011a 95E80300 		ldmia	r5, {r0, r1}
 1027 011e FFF7FEFF 		bl	vPut_Current
 1028              	.LVL111:
1171:../user/source/DLT645.c ****             //BÏàµçÁ÷
1172:../user/source/DLT645.c ****             vPut_Current(Acurrent, &pucBuffer[17], &pucBuffer[18], &pucBuffer[19]);
 1029              		.loc 1 1172 0
 1030 0122 04F11303 		add	r3, r4, #19
 1031 0126 0093     		str	r3, [sp]
 1032 0128 04F11203 		add	r3, r4, #18
 1033 012c 04F11102 		add	r2, r4, #17
 1034 0130 95E80300 		ldmia	r5, {r0, r1}
 1035 0134 FFF7FEFF 		bl	vPut_Current
 1036              	.LVL112:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 40


1173:../user/source/DLT645.c ****             //CÏàµçÁ÷
1174:../user/source/DLT645.c ****             vPut_Current(Acurrent, &pucBuffer[20], &pucBuffer[21], &pucBuffer[22]);
 1037              		.loc 1 1174 0
 1038 0138 04F11603 		add	r3, r4, #22
 1039 013c 0093     		str	r3, [sp]
 1040 013e 04F11503 		add	r3, r4, #21
 1041 0142 04F11402 		add	r2, r4, #20
 1042 0146 95E80300 		ldmia	r5, {r0, r1}
 1043 014a FFF7FEFF 		bl	vPut_Current
 1044              	.LVL113:
1139:../user/source/DLT645.c ****     switch (pucBuffer[11])
 1045              		.loc 1 1139 0
 1046 014e 0022     		movs	r2, #0
1175:../user/source/DLT645.c ****             for (i = 0; i < 23; i++) //Êı¾İÓò³¤¶È23
 1047              		.loc 1 1175 0
 1048 0150 1346     		mov	r3, r2
 1049 0152 04E0     		b	.L73
 1050              	.LVL114:
 1051              	.L74:
1176:../user/source/DLT645.c ****             {
1177:../user/source/DLT645.c ****                 ucCheckData += pucBuffer[i];
 1052              		.loc 1 1177 0 discriminator 3
 1053 0154 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 1054 0156 0A44     		add	r2, r2, r1
 1055              	.LVL115:
 1056 0158 D2B2     		uxtb	r2, r2
 1057              	.LVL116:
1175:../user/source/DLT645.c ****             for (i = 0; i < 23; i++) //Êı¾İÓò³¤¶È23
 1058              		.loc 1 1175 0 discriminator 3
 1059 015a 0133     		adds	r3, r3, #1
 1060              	.LVL117:
 1061 015c DBB2     		uxtb	r3, r3
 1062              	.LVL118:
 1063              	.L73:
1175:../user/source/DLT645.c ****             for (i = 0; i < 23; i++) //Êı¾İÓò³¤¶È23
 1064              		.loc 1 1175 0 is_stmt 0 discriminator 1
 1065 015e 162B     		cmp	r3, #22
 1066 0160 F8D9     		bls	.L74
1178:../user/source/DLT645.c ****             }
1179:../user/source/DLT645.c ****             pucBuffer[23] = ucCheckData;
 1067              		.loc 1 1179 0 is_stmt 1
 1068 0162 E275     		strb	r2, [r4, #23]
1180:../user/source/DLT645.c ****             pucBuffer[24] = 0x16;
 1069              		.loc 1 1180 0
 1070 0164 1623     		movs	r3, #22
 1071              	.LVL119:
 1072 0166 2376     		strb	r3, [r4, #24]
1181:../user/source/DLT645.c ****         }
1182:../user/source/DLT645.c ****         break;
 1073              		.loc 1 1182 0
 1074 0168 7EE0     		b	.L60
 1075              	.LVL120:
 1076              	.L64:
1183:../user/source/DLT645.c ****     }
1184:../user/source/DLT645.c ****     case 0x34: //AÏàµçÁ÷
1185:../user/source/DLT645.c ****     {
1186:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Acurrent);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 41


 1077              		.loc 1 1186 0
 1078 016a 404B     		ldr	r3, .L82
 1079 016c 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 1080 016e C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1081 0170 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1082              	.LVL121:
 1083 0172 FFF7FEFF 		bl	vGet_Current
 1084              	.LVL122:
1187:../user/source/DLT645.c ****         if (((pucBuffer[16] - 0x33) & 0x80) != 0)
 1085              		.loc 1 1187 0
 1086 0176 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1087 0178 333B     		subs	r3, r3, #51
 1088 017a 13F0800F 		tst	r3, #128
 1089 017e 73D1     		bne	.L60
1188:../user/source/DLT645.c ****         {
1189:../user/source/DLT645.c ****             return;
1190:../user/source/DLT645.c ****         }
1191:../user/source/DLT645.c ****         if (blCurrentSingle_Modify_Method(&Bcurrent, &Ccurrent, &Acurrent)) //¸ù¾İBÏàºÍCÏàµçÁ÷ĞŞ¸ÄA
 1090              		.loc 1 1191 0
 1091 0180 3A4A     		ldr	r2, .L82
 1092 0182 3C49     		ldr	r1, .L82+8
 1093 0184 3A48     		ldr	r0, .L82+4
 1094 0186 FFF7FEFF 		bl	blCurrentSingle_Modify_Method
 1095              	.LVL123:
 1096 018a 0028     		cmp	r0, #0
 1097 018c 6CD0     		beq	.L60
1192:../user/source/DLT645.c ****         {
1193:../user/source/DLT645.c ****             //AÏàµçÁ÷,Ê®½øÖÆÊı×ªBCDÂë
1194:../user/source/DLT645.c ****             vPut_Current(Acurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
 1098              		.loc 1 1194 0
 1099 018e 3749     		ldr	r1, .L82
 1100 0190 04F11003 		add	r3, r4, #16
 1101 0194 0093     		str	r3, [sp]
 1102 0196 04F10F03 		add	r3, r4, #15
 1103 019a 04F10E02 		add	r2, r4, #14
 1104 019e 03C9     		ldmia	r1, {r0, r1}
 1105 01a0 FFF7FEFF 		bl	vPut_Current
 1106              	.LVL124:
1139:../user/source/DLT645.c ****     switch (pucBuffer[11])
 1107              		.loc 1 1139 0
 1108 01a4 0022     		movs	r2, #0
1195:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1109              		.loc 1 1195 0
 1110 01a6 1346     		mov	r3, r2
 1111 01a8 04E0     		b	.L75
 1112              	.LVL125:
 1113              	.L76:
1196:../user/source/DLT645.c ****             {
1197:../user/source/DLT645.c ****                 ucCheckData += pucBuffer[i];
 1114              		.loc 1 1197 0 discriminator 3
 1115 01aa E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 1116 01ac 0A44     		add	r2, r2, r1
 1117              	.LVL126:
 1118 01ae D2B2     		uxtb	r2, r2
 1119              	.LVL127:
1195:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1120              		.loc 1 1195 0 discriminator 3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 42


 1121 01b0 0133     		adds	r3, r3, #1
 1122              	.LVL128:
 1123 01b2 DBB2     		uxtb	r3, r3
 1124              	.LVL129:
 1125              	.L75:
1195:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1126              		.loc 1 1195 0 is_stmt 0 discriminator 1
 1127 01b4 102B     		cmp	r3, #16
 1128 01b6 F8D9     		bls	.L76
1198:../user/source/DLT645.c ****             }
1199:../user/source/DLT645.c ****             pucBuffer[17] = ucCheckData;
 1129              		.loc 1 1199 0 is_stmt 1
 1130 01b8 6274     		strb	r2, [r4, #17]
1200:../user/source/DLT645.c ****             pucBuffer[18] = 0x16;
 1131              		.loc 1 1200 0
 1132 01ba 1623     		movs	r3, #22
 1133              	.LVL130:
 1134 01bc A374     		strb	r3, [r4, #18]
 1135 01be 53E0     		b	.L60
 1136              	.LVL131:
 1137              	.L65:
1201:../user/source/DLT645.c ****         }
1202:../user/source/DLT645.c ****         break;
1203:../user/source/DLT645.c ****     }
1204:../user/source/DLT645.c ****     case 0x35: //BÏàµçÁ÷
1205:../user/source/DLT645.c ****     {
1206:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Bcurrent);
 1138              		.loc 1 1206 0
 1139 01c0 2B4B     		ldr	r3, .L82+4
 1140 01c2 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 1141 01c4 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1142 01c6 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1143              	.LVL132:
 1144 01c8 FFF7FEFF 		bl	vGet_Current
 1145              	.LVL133:
1207:../user/source/DLT645.c **** 
1208:../user/source/DLT645.c ****         if (((pucBuffer[16] - 0x33) & 0x80) != 0) //µçÁ÷ÊÇ¸ºÖµ
 1146              		.loc 1 1208 0
 1147 01cc 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1148 01ce 333B     		subs	r3, r3, #51
 1149 01d0 13F0800F 		tst	r3, #128
 1150 01d4 48D1     		bne	.L60
1209:../user/source/DLT645.c ****         {
1210:../user/source/DLT645.c ****             return;
1211:../user/source/DLT645.c ****         }
1212:../user/source/DLT645.c ****         if (blCurrentSingle_Modify_Method(&Acurrent, &Ccurrent, &Bcurrent)) //¸ù¾İAÏàºÍCÏàĞŞ¸ÄBÏàµç
 1151              		.loc 1 1212 0
 1152 01d6 264A     		ldr	r2, .L82+4
 1153 01d8 2649     		ldr	r1, .L82+8
 1154 01da 2448     		ldr	r0, .L82
 1155 01dc FFF7FEFF 		bl	blCurrentSingle_Modify_Method
 1156              	.LVL134:
 1157 01e0 0028     		cmp	r0, #0
 1158 01e2 41D0     		beq	.L60
1213:../user/source/DLT645.c ****         {
1214:../user/source/DLT645.c ****             //BÏàµçÁ÷,Ê®½øÖÆÊı×ªBCDÂë
1215:../user/source/DLT645.c ****             vPut_Current(Bcurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 43


 1159              		.loc 1 1215 0
 1160 01e4 2249     		ldr	r1, .L82+4
 1161 01e6 04F11003 		add	r3, r4, #16
 1162 01ea 0093     		str	r3, [sp]
 1163 01ec 04F10F03 		add	r3, r4, #15
 1164 01f0 04F10E02 		add	r2, r4, #14
 1165 01f4 03C9     		ldmia	r1, {r0, r1}
 1166 01f6 FFF7FEFF 		bl	vPut_Current
 1167              	.LVL135:
1139:../user/source/DLT645.c ****     switch (pucBuffer[11])
 1168              		.loc 1 1139 0
 1169 01fa 0022     		movs	r2, #0
1216:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1170              		.loc 1 1216 0
 1171 01fc 1346     		mov	r3, r2
 1172 01fe 04E0     		b	.L77
 1173              	.LVL136:
 1174              	.L78:
1217:../user/source/DLT645.c ****             {
1218:../user/source/DLT645.c ****                 ucCheckData += pucBuffer[i];
 1175              		.loc 1 1218 0 discriminator 3
 1176 0200 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 1177 0202 0A44     		add	r2, r2, r1
 1178              	.LVL137:
 1179 0204 D2B2     		uxtb	r2, r2
 1180              	.LVL138:
1216:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1181              		.loc 1 1216 0 discriminator 3
 1182 0206 0133     		adds	r3, r3, #1
 1183              	.LVL139:
 1184 0208 DBB2     		uxtb	r3, r3
 1185              	.LVL140:
 1186              	.L77:
1216:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1187              		.loc 1 1216 0 is_stmt 0 discriminator 1
 1188 020a 102B     		cmp	r3, #16
 1189 020c F8D9     		bls	.L78
1219:../user/source/DLT645.c ****             }
1220:../user/source/DLT645.c ****             pucBuffer[17] = ucCheckData;
 1190              		.loc 1 1220 0 is_stmt 1
 1191 020e 6274     		strb	r2, [r4, #17]
1221:../user/source/DLT645.c ****             pucBuffer[18] = 0x16;
 1192              		.loc 1 1221 0
 1193 0210 1623     		movs	r3, #22
 1194              	.LVL141:
 1195 0212 A374     		strb	r3, [r4, #18]
 1196 0214 28E0     		b	.L60
 1197              	.LVL142:
 1198              	.L66:
1222:../user/source/DLT645.c ****         }
1223:../user/source/DLT645.c ****         break;
1224:../user/source/DLT645.c ****     }
1225:../user/source/DLT645.c ****     case 0x36: //CÏàµçÁ÷
1226:../user/source/DLT645.c ****     {
1227:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Ccurrent);
 1199              		.loc 1 1227 0
 1200 0216 174B     		ldr	r3, .L82+8
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 44


 1201 0218 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 1202 021a C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1203 021c 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1204              	.LVL143:
 1205 021e FFF7FEFF 		bl	vGet_Current
 1206              	.LVL144:
1228:../user/source/DLT645.c **** 
1229:../user/source/DLT645.c ****         if (((pucBuffer[16] - 0x33) & 0x80) != 0)
 1207              		.loc 1 1229 0
 1208 0222 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1209 0224 333B     		subs	r3, r3, #51
 1210 0226 13F0800F 		tst	r3, #128
 1211 022a 1DD1     		bne	.L60
1230:../user/source/DLT645.c ****         {
1231:../user/source/DLT645.c ****             return;
1232:../user/source/DLT645.c ****         }
1233:../user/source/DLT645.c ****         if (blCurrentSingle_Modify_Method(&Acurrent, &Bcurrent, &Ccurrent)) //¸ù¾İAÏàºÍBÏàĞŞ¸ÄCÏàµç
 1212              		.loc 1 1233 0
 1213 022c 114A     		ldr	r2, .L82+8
 1214 022e 1049     		ldr	r1, .L82+4
 1215 0230 0E48     		ldr	r0, .L82
 1216 0232 FFF7FEFF 		bl	blCurrentSingle_Modify_Method
 1217              	.LVL145:
 1218 0236 B8B1     		cbz	r0, .L60
1234:../user/source/DLT645.c ****         {
1235:../user/source/DLT645.c ****             //BÏàµçÁ÷,Ê®½øÖÆÊı×ªBCDÂë
1236:../user/source/DLT645.c ****             vPut_Current(Ccurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
 1219              		.loc 1 1236 0
 1220 0238 0E49     		ldr	r1, .L82+8
 1221 023a 04F11003 		add	r3, r4, #16
 1222 023e 0093     		str	r3, [sp]
 1223 0240 04F10F03 		add	r3, r4, #15
 1224 0244 04F10E02 		add	r2, r4, #14
 1225 0248 03C9     		ldmia	r1, {r0, r1}
 1226 024a FFF7FEFF 		bl	vPut_Current
 1227              	.LVL146:
1139:../user/source/DLT645.c ****     switch (pucBuffer[11])
 1228              		.loc 1 1139 0
 1229 024e 0022     		movs	r2, #0
1237:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È16
 1230              		.loc 1 1237 0
 1231 0250 1346     		mov	r3, r2
 1232 0252 04E0     		b	.L79
 1233              	.LVL147:
 1234              	.L80:
1238:../user/source/DLT645.c ****             {
1239:../user/source/DLT645.c ****                 ucCheckData += pucBuffer[i];
 1235              		.loc 1 1239 0 discriminator 3
 1236 0254 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 1237 0256 0A44     		add	r2, r2, r1
 1238              	.LVL148:
 1239 0258 D2B2     		uxtb	r2, r2
 1240              	.LVL149:
1237:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È16
 1241              		.loc 1 1237 0 discriminator 3
 1242 025a 0133     		adds	r3, r3, #1
 1243              	.LVL150:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 45


 1244 025c DBB2     		uxtb	r3, r3
 1245              	.LVL151:
 1246              	.L79:
1237:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È16
 1247              		.loc 1 1237 0 is_stmt 0 discriminator 1
 1248 025e 102B     		cmp	r3, #16
 1249 0260 F8D9     		bls	.L80
1240:../user/source/DLT645.c ****             }
1241:../user/source/DLT645.c ****             pucBuffer[17] = ucCheckData;
 1250              		.loc 1 1241 0 is_stmt 1
 1251 0262 6274     		strb	r2, [r4, #17]
1242:../user/source/DLT645.c ****             pucBuffer[18] = 0x16;
 1252              		.loc 1 1242 0
 1253 0264 1623     		movs	r3, #22
 1254              	.LVL152:
 1255 0266 A374     		strb	r3, [r4, #18]
 1256              	.LVL153:
 1257              	.L60:
1243:../user/source/DLT645.c ****         }
1244:../user/source/DLT645.c ****         break;
1245:../user/source/DLT645.c ****     }
1246:../user/source/DLT645.c ****     }
1247:../user/source/DLT645.c **** }
 1258              		.loc 1 1247 0
 1259 0268 03B0     		add	sp, sp, #12
 1260              	.LCFI15:
 1261              		.cfi_def_cfa_offset 12
 1262              		@ sp needed
 1263 026a 30BD     		pop	{r4, r5, pc}
 1264              	.LVL154:
 1265              	.L83:
 1266              		.align	2
 1267              	.L82:
 1268 026c 00000000 		.word	.LANCHOR1
 1269 0270 00000000 		.word	.LANCHOR2
 1270 0274 00000000 		.word	.LANCHOR3
 1271 0278 1F85EB51 		.word	1374389535
 1272              		.cfi_endproc
 1273              	.LFE131:
 1275              		.section	.text.vCurrent_Limit_Modify,"ax",%progbits
 1276              		.align	2
 1277              		.global	vCurrent_Limit_Modify
 1278              		.thumb
 1279              		.thumb_func
 1281              	vCurrent_Limit_Modify:
 1282              	.LFB133:
1248:../user/source/DLT645.c **** 
1249:../user/source/DLT645.c **** /********************************************************************
1250:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı³õÊ¼»¯
1251:../user/source/DLT645.c ****  * Êä    Èë£ºµçÁ÷Ö¡Êı×éÖ¸Õë
1252:../user/source/DLT645.c ****  * Êä    ³ö£º
1253:../user/source/DLT645.c ****  *           
1254:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1255:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ16:13:30
1256:../user/source/DLT645.c ****  **********************************************************************/
1257:../user/source/DLT645.c **** void vCurrent_Limit_DefaultSet(void)
1258:../user/source/DLT645.c **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 46


1259:../user/source/DLT645.c ****     uint32_t uwLimit;
1260:../user/source/DLT645.c ****     uint32_t uwCTratio;
1261:../user/source/DLT645.c **** /*±äÑ¹Æ÷ÈİÁ¿ºÍ¶î¶¨µçÁ÷³ö³§¹Ì»¯£¬²»ÔÊĞíĞŞ¸Ä*/
1262:../user/source/DLT645.c **** #ifdef TRANSFORMER_CAPACITY_50KVA
1263:../user/source/DLT645.c ****     TransFormer.capacity = 50;
1264:../user/source/DLT645.c ****     TransFormer.rated_current = 72000;
1265:../user/source/DLT645.c **** #endif
1266:../user/source/DLT645.c **** 
1267:../user/source/DLT645.c **** #ifdef TRANSFORMER_CAPACITY_100KVA
1268:../user/source/DLT645.c ****     TransFormer.capacity = 100;
1269:../user/source/DLT645.c ****     TransFormer.rated_current = 144000;
1270:../user/source/DLT645.c **** #endif
1271:../user/source/DLT645.c **** 
1272:../user/source/DLT645.c **** #ifdef TRANSFORMER_CAPACITY_200KVA
1273:../user/source/DLT645.c ****     TransFormer.capacity = 200;
1274:../user/source/DLT645.c ****     TransFormer.rated_current = 288000;
1275:../user/source/DLT645.c **** #endif
1276:../user/source/DLT645.c **** 
1277:../user/source/DLT645.c **** #ifdef TRANSFORMER_CAPACITY_400KVA
1278:../user/source/DLT645.c ****     TransFormer.capacity = 400;
1279:../user/source/DLT645.c ****     TransFormer.rated_current = 577000;
1280:../user/source/DLT645.c **** #endif
1281:../user/source/DLT645.c ****     /*´ÓFLASH¶ÁÈ¡±äÑ¹Æ÷¶ş´Î²àCT±ä±È*/
1282:../user/source/DLT645.c ****     uwCTratio = Flash_Read_Word(FLASH_CURRENT_LIMIT_RATIO_ADDR);
1283:../user/source/DLT645.c ****     /*±ä±ÈÎŞĞ§ £¬ÔòÎª³õ´ÎÉÏµç*/
1284:../user/source/DLT645.c ****     if (uwCTratio == 0xFFFFFFFF)
1285:../user/source/DLT645.c ****     {
1286:../user/source/DLT645.c ****         /*CTÉèÖÃÎª80*/
1287:../user/source/DLT645.c ****         TransFormer.CTratio = 80;
1288:../user/source/DLT645.c ****         /*´æ´¢CTÖµ*/
1289:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_CURRENT_LIMIT_RATIO_ADDR, TransFormer.CTratio);
1290:../user/source/DLT645.c ****     }
1291:../user/source/DLT645.c ****     else
1292:../user/source/DLT645.c ****     {
1293:../user/source/DLT645.c ****         /*Êı¾İÓĞĞ§£¬³õÊ¼»¯È«¾Ö±äÁ¿*/
1294:../user/source/DLT645.c ****         TransFormer.CTratio = uwCTratio;
1295:../user/source/DLT645.c ****     }
1296:../user/source/DLT645.c ****     /*¶ÁÈ¡µçÁ÷ÉÏÏŞ²ÎÊı*/
1297:../user/source/DLT645.c ****     uwLimit = Flash_Read_Word(FLASH_CURRENT_LIMIT_VALUE_ADDR);
1298:../user/source/DLT645.c ****     /*²ÎÊıÎŞĞ§£¬³õ´ÎÉÏµç*/
1299:../user/source/DLT645.c ****     if (uwLimit == 0xFFFFFFFF)
1300:../user/source/DLT645.c ****     {
1301:../user/source/DLT645.c ****         /*¸ù¾İ¶î¶¨µçÁ÷ºÍCT±ä±È¼ÆËãµçÁ÷ÉÏÏŞÖµ*/
1302:../user/source/DLT645.c ****         TransFormer.CT2_CurrentLimit = (TransFormer.rated_current / TransFormer.CTratio) * 3 * 8 / 
1303:../user/source/DLT645.c ****         /*´æ´¢µçÁ÷ÉÏÏŞÖµ*/
1304:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_CURRENT_LIMIT_VALUE_ADDR, TransFormer.CT2_CurrentLimit);
1305:../user/source/DLT645.c ****     }
1306:../user/source/DLT645.c ****     else
1307:../user/source/DLT645.c ****     {
1308:../user/source/DLT645.c ****         /*²ÎÊıÓĞĞ§£¬³õÊ¼»¯È«¾Ö±äÁ¿*/
1309:../user/source/DLT645.c ****         TransFormer.CT2_CurrentLimit = uwLimit;
1310:../user/source/DLT645.c ****     }
1311:../user/source/DLT645.c **** }
1312:../user/source/DLT645.c **** 
1313:../user/source/DLT645.c **** /********************************************************************
1314:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º¸÷ÏàµçÁ÷ÖµÉÏÏŞĞŞ¸Äº¯Êı
1315:../user/source/DLT645.c ****  * Êä    Èë£ºµçÁ÷Ö¡Êı×éÖ¸Õë
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 47


1316:../user/source/DLT645.c ****  * Êä    ³ö£º
1317:../user/source/DLT645.c ****  *           
1318:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1319:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.1.30
1320:../user/source/DLT645.c ****  **********************************************************************/
1321:../user/source/DLT645.c **** void vCurrent_Limit_Modify(uint8_t *pucBuffer)
1322:../user/source/DLT645.c **** {
 1283              		.loc 1 1322 0
 1284              		.cfi_startproc
 1285              		@ args = 0, pretend = 0, frame = 0
 1286              		@ frame_needed = 0, uses_anonymous_args = 0
 1287              		@ link register save eliminated.
 1288              	.LVL155:
 1289 0000 7047     		bx	lr
 1290              		.cfi_endproc
 1291              	.LFE133:
 1293 0002 00BF     		.section	.text.Get_Estatus,"ax",%progbits
 1294              		.align	2
 1295              		.thumb
 1296              		.thumb_func
 1298              	Get_Estatus:
 1299              	.LFB141:
1323:../user/source/DLT645.c ****     uint32_t ABCcurrent;
1324:../user/source/DLT645.c ****     uint8_t i;
1325:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
1326:../user/source/DLT645.c **** #ifndef ENABLE_CURRENT_LIMIT
1327:../user/source/DLT645.c ****     return;
1328:../user/source/DLT645.c **** #endif
1329:../user/source/DLT645.c **** 
1330:../user/source/DLT645.c ****     switch (pucBuffer[11])
1331:../user/source/DLT645.c ****     {
1332:../user/source/DLT645.c ****     case 0x32: //ÈıÏàµçÁ÷Êı¾İ¿é
1333:../user/source/DLT645.c ****     {
1334:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Acurrent);
1335:../user/source/DLT645.c ****         vGet_Current(pucBuffer[17], pucBuffer[18], pucBuffer[19], &Bcurrent);
1336:../user/source/DLT645.c ****         vGet_Current(pucBuffer[20], pucBuffer[21], pucBuffer[22], &Ccurrent);
1337:../user/source/DLT645.c ****         if (Acurrent.isminus || Bcurrent.isminus || Ccurrent.isminus)
1338:../user/source/DLT645.c ****             return;
1339:../user/source/DLT645.c ****         ABCcurrent = Acurrent.value + Bcurrent.value + Ccurrent.value;
1340:../user/source/DLT645.c ****         if (ABCcurrent > TransFormer.CT2_CurrentLimit)
1341:../user/source/DLT645.c ****         {
1342:../user/source/DLT645.c ****             Acurrent.value = TransFormer.CT2_CurrentLimit * Acurrent.value / ABCcurrent;
1343:../user/source/DLT645.c ****             Bcurrent.value = TransFormer.CT2_CurrentLimit * Bcurrent.value / ABCcurrent;
1344:../user/source/DLT645.c ****             Ccurrent.value = TransFormer.CT2_CurrentLimit * Ccurrent.value / ABCcurrent;
1345:../user/source/DLT645.c ****         }
1346:../user/source/DLT645.c ****         Acurrent.value = (Acurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT2_Cu
1347:../user/source/DLT645.c ****         Bcurrent.value = (Bcurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT2_Cu
1348:../user/source/DLT645.c ****         Ccurrent.value = (Ccurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT2_Cu
1349:../user/source/DLT645.c ****         //AÏàµçÁ÷,Ê®½øÖÆÊı×ªBCDÂë
1350:../user/source/DLT645.c ****         vPut_Current(Acurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
1351:../user/source/DLT645.c ****         //BÏàµçÁ÷
1352:../user/source/DLT645.c ****         vPut_Current(Bcurrent, &pucBuffer[17], &pucBuffer[18], &pucBuffer[19]);
1353:../user/source/DLT645.c ****         //CÏàµçÁ÷
1354:../user/source/DLT645.c ****         vPut_Current(Ccurrent, &pucBuffer[20], &pucBuffer[21], &pucBuffer[22]);
1355:../user/source/DLT645.c ****         for (i = 0; i < 23; i++) //Êı¾İÓò³¤¶È23
1356:../user/source/DLT645.c ****         {
1357:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 48


1358:../user/source/DLT645.c ****         }
1359:../user/source/DLT645.c ****         pucBuffer[23] = ucCheckData;
1360:../user/source/DLT645.c ****         pucBuffer[24] = 0x16;
1361:../user/source/DLT645.c ****         break;
1362:../user/source/DLT645.c ****     }
1363:../user/source/DLT645.c ****     case 0x34: //AÏàµçÁ÷
1364:../user/source/DLT645.c ****     {
1365:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Acurrent);
1366:../user/source/DLT645.c ****         Acurrent.value = (Acurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT2_Cu
1367:../user/source/DLT645.c ****         vPut_Current(Acurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
1368:../user/source/DLT645.c ****         for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
1369:../user/source/DLT645.c ****         {
1370:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1371:../user/source/DLT645.c ****         }
1372:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1373:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1374:../user/source/DLT645.c ****         break;
1375:../user/source/DLT645.c ****     }
1376:../user/source/DLT645.c ****     case 0x35: //BÏàµçÁ÷
1377:../user/source/DLT645.c ****     {
1378:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Bcurrent);
1379:../user/source/DLT645.c ****         Bcurrent.value = (Bcurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT2_Cu
1380:../user/source/DLT645.c ****         vPut_Current(Bcurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
1381:../user/source/DLT645.c ****         for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
1382:../user/source/DLT645.c ****         {
1383:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1384:../user/source/DLT645.c ****         }
1385:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1386:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1387:../user/source/DLT645.c **** 
1388:../user/source/DLT645.c ****         break;
1389:../user/source/DLT645.c ****     }
1390:../user/source/DLT645.c ****     case 0x36: //CÏàµçÁ÷
1391:../user/source/DLT645.c ****     {
1392:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Ccurrent);
1393:../user/source/DLT645.c ****         Ccurrent.value = (Ccurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT2_Cu
1394:../user/source/DLT645.c ****         vPut_Current(Bcurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
1395:../user/source/DLT645.c ****         for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
1396:../user/source/DLT645.c ****         {
1397:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1398:../user/source/DLT645.c ****         }
1399:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1400:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1401:../user/source/DLT645.c ****         break;
1402:../user/source/DLT645.c ****     }
1403:../user/source/DLT645.c ****     }
1404:../user/source/DLT645.c **** }
1405:../user/source/DLT645.c **** 
1406:../user/source/DLT645.c **** /*****************************************************
1407:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºĞŞ¸ÄµçÁ÷·½ÏòÖ¡
1408:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
1409:../user/source/DLT645.c ****  * Êä    ³ö£º
1410:../user/source/DLT645.c ****  *           
1411:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1412:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.12.13
1413:../user/source/DLT645.c ****  *******************************************************/
1414:../user/source/DLT645.c **** void vCurrentDirect_Modify(uint8_t *pucBuffer)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 49


1415:../user/source/DLT645.c **** {
1416:../user/source/DLT645.c ****     uint8_t i = 0;
1417:../user/source/DLT645.c ****     uint8_t ucCheckData;
1418:../user/source/DLT645.c ****     switch (pucBuffer[11])
1419:../user/source/DLT645.c ****     {
1420:../user/source/DLT645.c ****     case 0x32: //ÈıÏàµçÁ÷Êı¾İ¿é
1421:../user/source/DLT645.c ****     {
1422:../user/source/DLT645.c ****         pucBuffer[16] = (pucBuffer[16] - 0x33) & 0xEF + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ»Æ
1423:../user/source/DLT645.c ****         pucBuffer[19] = (pucBuffer[19] - 0x33) & 0xEF + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ»Æ
1424:../user/source/DLT645.c ****         pucBuffer[22] = (pucBuffer[22] - 0x33) & 0xEF + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ»Æ
1425:../user/source/DLT645.c ****         for (i = 0; i < 23; i++)                              //Êı¾İÓò³¤¶È23
1426:../user/source/DLT645.c ****         {
1427:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1428:../user/source/DLT645.c ****         }
1429:../user/source/DLT645.c ****         pucBuffer[23] = ucCheckData;
1430:../user/source/DLT645.c ****         pucBuffer[24] = 0x16;
1431:../user/source/DLT645.c ****         break;
1432:../user/source/DLT645.c ****     }
1433:../user/source/DLT645.c ****     case 0x34: //AÏàµçÁ÷
1434:../user/source/DLT645.c ****     {
1435:../user/source/DLT645.c ****         pucBuffer[16] = (pucBuffer[16] - 0x33) & 0xEF + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ»Æ
1436:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                              //Êı¾İÓò³¤¶È17
1437:../user/source/DLT645.c ****         {
1438:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1439:../user/source/DLT645.c ****         }
1440:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1441:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1442:../user/source/DLT645.c ****         break;
1443:../user/source/DLT645.c ****     }
1444:../user/source/DLT645.c ****     case 0x35: //BÏàµçÁ÷
1445:../user/source/DLT645.c ****     {
1446:../user/source/DLT645.c ****         pucBuffer[16] = (pucBuffer[16] - 0x33) & 0xEF + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ»Æ
1447:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                              //Êı¾İÓò³¤¶È17
1448:../user/source/DLT645.c ****         {
1449:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1450:../user/source/DLT645.c ****         }
1451:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1452:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1453:../user/source/DLT645.c ****         break;
1454:../user/source/DLT645.c ****     }
1455:../user/source/DLT645.c ****     case 0x36: //CÏàµçÁ÷
1456:../user/source/DLT645.c ****     {
1457:../user/source/DLT645.c ****         pucBuffer[16] = (pucBuffer[16] - 0x33) & 0xEF + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ»Æ
1458:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                              //Êı¾İÓò³¤¶È16
1459:../user/source/DLT645.c ****         {
1460:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1461:../user/source/DLT645.c ****         }
1462:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1463:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1464:../user/source/DLT645.c ****         break;
1465:../user/source/DLT645.c ****     }
1466:../user/source/DLT645.c ****     }
1467:../user/source/DLT645.c **** }
1468:../user/source/DLT645.c **** 
1469:../user/source/DLT645.c **** /********************************************************************
1470:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı£ºµçÁ÷ÉÏÏŞÖµÉèÖÃ
1471:../user/source/DLT645.c ****  * Êä    Èë£ºÎ¬»¤Ö¡Êı×éÖ¸Õë
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 50


1472:../user/source/DLT645.c ****  * Êä    ³ö£º
1473:../user/source/DLT645.c ****  *           
1474:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1475:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ09:39:18
1476:../user/source/DLT645.c ****  * ½ÓÊÜ£º   68 AA AA AA AA AA AA 68 14 07 33 37 35 35 56 34 12 XX 16(123.456A)
1477:../user/source/DLT645.c ****  *³É¹¦»Ø¸´£º68 AA AA AA AA AA AA 68 94 00 XX 16
1478:../user/source/DLT645.c ****  *Ê§°Ü»Ø¸´£º68 AA AA AA AA AA AA 68 D4 00 XX 16
1479:../user/source/DLT645.c ****  **********************************************************************/
1480:../user/source/DLT645.c **** void vCurrent_Limit_Set(uint8_t *pucBuffer)
1481:../user/source/DLT645.c **** {
1482:../user/source/DLT645.c ****     uint8_t i;
1483:../user/source/DLT645.c ****     CURRENT limit;
1484:../user/source/DLT645.c ****     pucBuffer[8] = 0xD4;
1485:../user/source/DLT645.c ****     /*·ÇÖØ¹ıÔØµ÷Õû°æ±¾Ê±£¬»Ø¸´·ñÈÏÖ¡*/
1486:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
1487:../user/source/DLT645.c ****     /*ÊäÈëµÄ×Ö½Ú¼õÈ¥33ºó²»ÊÇBCDÂëÔõÃ´°ì£¿*/
1488:../user/source/DLT645.c ****     vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &limit);
1489:../user/source/DLT645.c ****     if (!limit.isminus && (limit.value > 0) && (limit.value <= 999999))
1490:../user/source/DLT645.c ****     {
1491:../user/source/DLT645.c ****         if (SUCCESS == Flash_Write_Word(FLASH_CURRENT_LIMIT_VALUE_ADDR, limit.value))
1492:../user/source/DLT645.c ****         {
1493:../user/source/DLT645.c ****             TransFormer.CT2_CurrentLimit = limit.value;
1494:../user/source/DLT645.c ****             //limit.value = TransFormer.rated_current / TransFormer.CTratio;
1495:../user/source/DLT645.c ****             //limit.value = limit.value * 8 / 10;
1496:../user/source/DLT645.c ****             //limit.value = limit.value * 3;
1497:../user/source/DLT645.c ****             TransFormer.CTratio = TransFormer.rated_current /
1498:../user/source/DLT645.c ****                                   (TransFormer.CT2_CurrentLimit / 3 * 10 / 8);
1499:../user/source/DLT645.c ****             if (SUCCESS == Flash_Write_Word(FLASH_CURRENT_LIMIT_RATIO_ADDR, TransFormer.CTratio))
1500:../user/source/DLT645.c ****             {
1501:../user/source/DLT645.c ****                 pucBuffer[8] = 0x94;
1502:../user/source/DLT645.c ****             }
1503:../user/source/DLT645.c ****         }
1504:../user/source/DLT645.c ****     }
1505:../user/source/DLT645.c **** #endif
1506:../user/source/DLT645.c **** 
1507:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
1508:../user/source/DLT645.c ****     pucBuffer[10] = 0;
1509:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
1510:../user/source/DLT645.c ****     {
1511:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
1512:../user/source/DLT645.c ****     }
1513:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
1514:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
1515:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
1516:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
1517:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
1518:../user/source/DLT645.c ****     {
1519:../user/source/DLT645.c ****         Uart_DataPut(USART3);
1520:../user/source/DLT645.c ****     }
1521:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
1522:../user/source/DLT645.c **** #ifdef ENABLE_INFR
1523:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 12);
1524:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
1525:../user/source/DLT645.c ****     {
1526:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
1527:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
1528:../user/source/DLT645.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 51


1529:../user/source/DLT645.c **** #endif
1530:../user/source/DLT645.c **** }
1531:../user/source/DLT645.c **** 
1532:../user/source/DLT645.c **** /********************************************************************
1533:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı£ºCT±ä±ÈÉèÖÃ
1534:../user/source/DLT645.c ****  * Êä    Èë£ºÎ¬»¤Ö¡Êı×éÖ¸Õë
1535:../user/source/DLT645.c ****  * Êä    ³ö£º
1536:../user/source/DLT645.c ****  *           
1537:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1538:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ09:39:18
1539:../user/source/DLT645.c ****  * ½ÓÊÜ£º   68 AA AA AA AA AA AA 68 14 06 33 39 35 35 00 01 XX 16(±ä±È100)
1540:../user/source/DLT645.c ****  *³É¹¦»Ø¸´£º68 AA AA AA AA AA AA 68 94 00 XX 16
1541:../user/source/DLT645.c ****  *Ê§°Ü»Ø¸´£º68 AA AA AA AA AA AA 68 D4 00 XX 16
1542:../user/source/DLT645.c ****  **********************************************************************/
1543:../user/source/DLT645.c **** void vCurrent_CTRatio_Set(uint8_t *pucBuffer)
1544:../user/source/DLT645.c **** {
1545:../user/source/DLT645.c ****     uint8_t i;
1546:../user/source/DLT645.c ****     uint32_t uwdata = 0;
1547:../user/source/DLT645.c ****     pucBuffer[8] = 0xD4;
1548:../user/source/DLT645.c **** /*ÊäÈëµÄ×Ö½Ú¼õÈ¥33ºó²»ÊÇBCDÂëÔõÃ´°ì£¿*/
1549:../user/source/DLT645.c **** /*²»Ö§³ÖÖØ¹ıÔØĞŞ¸Ä¹¦ÄÜÊ±£¬»Ø¸´·ñÈÏÖ¡*/
1550:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
1551:../user/source/DLT645.c ****     uwdata = Get_Voltage(pucBuffer[14], pucBuffer[15]);
1552:../user/source/DLT645.c ****     if ((uwdata > 0) && (uwdata <= 9999))
1553:../user/source/DLT645.c ****     {
1554:../user/source/DLT645.c ****         if (SUCCESS == Flash_Write_Word(FLASH_CURRENT_LIMIT_RATIO_ADDR, uwdata))
1555:../user/source/DLT645.c ****         {
1556:../user/source/DLT645.c ****             TransFormer.CTratio = uwdata;
1557:../user/source/DLT645.c ****             TransFormer.CT2_CurrentLimit = (TransFormer.rated_current / TransFormer.CTratio) * 24 /
1558:../user/source/DLT645.c ****             if (SUCCESS == Flash_Write_Word(FLASH_CURRENT_LIMIT_VALUE_ADDR, TransFormer.CT2_Current
1559:../user/source/DLT645.c ****             {
1560:../user/source/DLT645.c ****                 pucBuffer[8] = 0x94;
1561:../user/source/DLT645.c ****             }
1562:../user/source/DLT645.c ****         }
1563:../user/source/DLT645.c ****     }
1564:../user/source/DLT645.c **** #endif
1565:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
1566:../user/source/DLT645.c ****     pucBuffer[10] = 0;
1567:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
1568:../user/source/DLT645.c ****     {
1569:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
1570:../user/source/DLT645.c ****     }
1571:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
1572:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
1573:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
1574:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
1575:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
1576:../user/source/DLT645.c ****     {
1577:../user/source/DLT645.c ****         Uart_DataPut(USART3);
1578:../user/source/DLT645.c ****     }
1579:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
1580:../user/source/DLT645.c **** #ifdef ENABLE_INFR
1581:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 12);
1582:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
1583:../user/source/DLT645.c ****     {
1584:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
1585:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 52


1586:../user/source/DLT645.c ****     }
1587:../user/source/DLT645.c **** #endif
1588:../user/source/DLT645.c **** }
1589:../user/source/DLT645.c **** 
1590:../user/source/DLT645.c **** /********************************************************************
1591:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı²éÑ¯£ºµçÁ÷ÉÏÏŞÖµ
1592:../user/source/DLT645.c ****  * Êä    Èë£ºÎ¬»¤Ö¡Êı×éÖ¸Õë
1593:../user/source/DLT645.c ****  * Êä    ³ö£º
1594:../user/source/DLT645.c ****  *           
1595:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1596:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ09:39:18
1597:../user/source/DLT645.c ****  * ½ÓÊÕ£º   68 AA AA AA AA AA AA 68 11 04 33 38 35 35 XX 16
1598:../user/source/DLT645.c ****  *³É¹¦»Ø¸´£º68 AA AA AA AA AA AA 68 91 07 33 38 35 35 56 34 12 XX 16(123.456)
1599:../user/source/DLT645.c ****  **********************************************************************/
1600:../user/source/DLT645.c **** void vCurrent_Limit_ReadSet(uint8_t *pucBuffer)
1601:../user/source/DLT645.c **** {
1602:../user/source/DLT645.c ****     uint8_t i;
1603:../user/source/DLT645.c ****     CURRENT limit;
1604:../user/source/DLT645.c ****     limit.value = TransFormer.CT2_CurrentLimit;
1605:../user/source/DLT645.c ****     limit.isminus = false;
1606:../user/source/DLT645.c ****     vPut_Current(limit, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
1607:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
1608:../user/source/DLT645.c ****     pucBuffer[9] = 0x07;
1609:../user/source/DLT645.c ****     pucBuffer[17] = 0;
1610:../user/source/DLT645.c ****     for (i = 0; i < 17; i++)
1611:../user/source/DLT645.c ****     {
1612:../user/source/DLT645.c ****         pucBuffer[17] += pucBuffer[i];
1613:../user/source/DLT645.c ****     }
1614:../user/source/DLT645.c ****     pucBuffer[18] = 0x16;
1615:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
1616:../user/source/DLT645.c ****     uc645DataDomainLength = 7;
1617:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 19);
1618:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
1619:../user/source/DLT645.c ****     {
1620:../user/source/DLT645.c ****         Uart_DataPut(USART3);
1621:../user/source/DLT645.c ****     }
1622:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
1623:../user/source/DLT645.c **** #ifdef ENABLE_INFR
1624:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 19);
1625:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
1626:../user/source/DLT645.c ****     {
1627:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
1628:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
1629:../user/source/DLT645.c ****     }
1630:../user/source/DLT645.c **** #endif
1631:../user/source/DLT645.c **** }
1632:../user/source/DLT645.c **** 
1633:../user/source/DLT645.c **** /********************************************************************
1634:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı²éÑ¯£ºCT±ä±È
1635:../user/source/DLT645.c ****  * Êä    Èë£ºÎ¬»¤Ö¡Êı×éÖ¸Õë
1636:../user/source/DLT645.c ****  * Êä    ³ö£º
1637:../user/source/DLT645.c ****  *           
1638:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1639:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ09:39:18
1640:../user/source/DLT645.c ****  * ½ÓÊÕ£º   68 AA AA AA AA AA AA 68 11 04 33 3A 35 35 XX 16
1641:../user/source/DLT645.c ****  *³É¹¦»Ø¸´£º68 AA AA AA AA AA AA 68 91 06 33 3A 35 35 00 01 XX 16(±ä±È100)
1642:../user/source/DLT645.c ****  **********************************************************************/
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 53


1643:../user/source/DLT645.c **** void vCurrent_CTRatio_ReadSet(uint8_t *pucBuffer)
1644:../user/source/DLT645.c **** {
1645:../user/source/DLT645.c **** 
1646:../user/source/DLT645.c ****     uint8_t i;
1647:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
1648:../user/source/DLT645.c ****     pucBuffer[9] = 0x06;
1649:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(TransFormer.CTratio);
1650:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(TransFormer.CTratio);
1651:../user/source/DLT645.c ****     pucBuffer[16] = 0;
1652:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
1653:../user/source/DLT645.c ****     {
1654:../user/source/DLT645.c ****         pucBuffer[16] += pucBuffer[i];
1655:../user/source/DLT645.c ****     }
1656:../user/source/DLT645.c ****     pucBuffer[17] = 0x16;
1657:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
1658:../user/source/DLT645.c ****     uc645DataDomainLength = 6;
1659:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 18);
1660:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
1661:../user/source/DLT645.c ****     {
1662:../user/source/DLT645.c ****         Uart_DataPut(USART3);
1663:../user/source/DLT645.c ****     }
1664:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
1665:../user/source/DLT645.c **** #ifdef ENABLE_INFR
1666:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 18);
1667:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
1668:../user/source/DLT645.c ****     {
1669:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
1670:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
1671:../user/source/DLT645.c ****     }
1672:../user/source/DLT645.c **** #endif
1673:../user/source/DLT645.c **** }
1674:../user/source/DLT645.c **** 
1675:../user/source/DLT645.c **** /********************************************************************
1676:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı²éÑ¯£º±äÑ¹Æ÷ÈİÁ¿
1677:../user/source/DLT645.c ****  * Êä    Èë£ºÎ¬»¤Ö¡Êı×éÖ¸Õë
1678:../user/source/DLT645.c ****  * Êä    ³ö£º
1679:../user/source/DLT645.c ****  *           
1680:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1681:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ09:39:18
1682:../user/source/DLT645.c ****  * ½ÓÊÕ£º   68 AA AA AA AA AA AA 68 11 04 33 3B 35 35 XX 16
1683:../user/source/DLT645.c ****  *³É¹¦»Ø¸´£º68 AA AA AA AA AA AA 68 91 06 33 3B 35 35 00 01 XX 16(±ä±È100)
1684:../user/source/DLT645.c ****  **********************************************************************/
1685:../user/source/DLT645.c **** void vCurrent_TransFormer_Capacity_ReadSet(uint8_t *pucBuffer)
1686:../user/source/DLT645.c **** {
1687:../user/source/DLT645.c ****     uint8_t i;
1688:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
1689:../user/source/DLT645.c ****     pucBuffer[9] = 0x06;
1690:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(TransFormer.capacity);
1691:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(TransFormer.capacity);
1692:../user/source/DLT645.c ****     pucBuffer[16] = 0;
1693:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
1694:../user/source/DLT645.c ****     {
1695:../user/source/DLT645.c ****         pucBuffer[16] += pucBuffer[i];
1696:../user/source/DLT645.c ****     }
1697:../user/source/DLT645.c ****     pucBuffer[17] = 0x16;
1698:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
1699:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 54


1700:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 18);
1701:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
1702:../user/source/DLT645.c ****     {
1703:../user/source/DLT645.c ****         Uart_DataPut(USART3);
1704:../user/source/DLT645.c ****     }
1705:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
1706:../user/source/DLT645.c **** #ifdef ENABLE_INFR
1707:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 18);
1708:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
1709:../user/source/DLT645.c ****     {
1710:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
1711:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
1712:../user/source/DLT645.c ****     }
1713:../user/source/DLT645.c **** #endif
1714:../user/source/DLT645.c **** }
1715:../user/source/DLT645.c **** 
1716:../user/source/DLT645.c **** /*****************************************************
1717:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷Ö¡¼ÆÊıÇåÁã
1718:../user/source/DLT645.c ****  * Êä    Èë£º
1719:../user/source/DLT645.c ****  * Êä    ³ö£ºÎŞ
1720:../user/source/DLT645.c ****  * Ëµ	  Ã÷£ºÊÕµ½µçÑ¹»Ø¸´Ö¡ºó£¬½«µçÁ÷Ö¡¼ÆÊıÇåÁã
1721:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1722:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.12.13
1723:../user/source/DLT645.c ****  *******************************************************/
1724:../user/source/DLT645.c **** void vCurrent_Count_Clear(void)
1725:../user/source/DLT645.c **** {
1726:../user/source/DLT645.c ****     Acurrent.count = 0;
1727:../user/source/DLT645.c ****     Bcurrent.count = 0;
1728:../user/source/DLT645.c ****     Ccurrent.count = 0;
1729:../user/source/DLT645.c **** }
1730:../user/source/DLT645.c **** /********************************************************************
1731:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º´ÓÊı¾İÖ¡ÖĞ¶ÁÈ¡×´Ì¬×Ö
1732:../user/source/DLT645.c ****  * Êä    Èë£º×´Ì¬×ÖµÍ×Ö½Ú¡¢¸ß×Ö½Ú
1733:../user/source/DLT645.c ****  * Êä    ³ö£º¶ş½øÖÆµÄ×´Ì¬×Ö
1734:../user/source/DLT645.c ****  *           
1735:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1736:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.5.23
1737:../user/source/DLT645.c ****  **********************************************************************/
1738:../user/source/DLT645.c **** uint16_t Get_Estatus(uint8_t LowByte, uint8_t HighByte)
1739:../user/source/DLT645.c **** {
 1300              		.loc 1 1739 0
 1301              		.cfi_startproc
 1302              		@ args = 0, pretend = 0, frame = 0
 1303              		@ frame_needed = 0, uses_anonymous_args = 0
 1304              		@ link register save eliminated.
 1305              	.LVL156:
1740:../user/source/DLT645.c ****     uint16_t estatus;
1741:../user/source/DLT645.c ****     estatus = ((HighByte - 0x33) & 0x00FF) << 8; //00010000 00000000
 1306              		.loc 1 1741 0
 1307 0000 3339     		subs	r1, r1, #51
 1308              	.LVL157:
1742:../user/source/DLT645.c ****     estatus |= (LowByte - 0X33) & 0X00FF;
 1309              		.loc 1 1742 0
 1310 0002 3338     		subs	r0, r0, #51
 1311              	.LVL158:
 1312 0004 C0B2     		uxtb	r0, r0
 1313 0006 40EA0120 		orr	r0, r0, r1, lsl #8
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 55


 1314              	.LVL159:
1743:../user/source/DLT645.c ****     return estatus;
1744:../user/source/DLT645.c **** }
 1315              		.loc 1 1744 0
 1316 000a 80B2     		uxth	r0, r0
 1317 000c 7047     		bx	lr
 1318              		.cfi_endproc
 1319              	.LFE141:
 1321 000e 00BF     		.section	.text.Estatus_Modify_CurrentEvent,"ax",%progbits
 1322              		.align	2
 1323              		.global	Estatus_Modify_CurrentEvent
 1324              		.thumb
 1325              		.thumb_func
 1327              	Estatus_Modify_CurrentEvent:
 1328              	.LFB128:
 960:../user/source/DLT645.c ****     uint16_t estatus = 0x0000;
 1329              		.loc 1 960 0
 1330              		.cfi_startproc
 1331              		@ args = 0, pretend = 0, frame = 0
 1332              		@ frame_needed = 0, uses_anonymous_args = 0
 1333              	.LVL160:
 1334 0000 10B5     		push	{r4, lr}
 1335              	.LCFI16:
 1336              		.cfi_def_cfa_offset 8
 1337              		.cfi_offset 4, -8
 1338              		.cfi_offset 14, -4
 1339 0002 0446     		mov	r4, r0
 1340              	.LVL161:
 964:../user/source/DLT645.c ****     {
 1341              		.loc 1 964 0
 1342 0004 837A     		ldrb	r3, [r0, #10]	@ zero_extendqisi2
 1343 0006 323B     		subs	r3, r3, #50
 1344 0008 082B     		cmp	r3, #8
 1345 000a 72D8     		bhi	.L87
 1346 000c DFE803F0 		tbb	[pc, r3]
 1347              	.L89:
 1348 0010 3D       		.byte	(.L88-.L89)/2
 1349 0011 71       		.byte	(.L87-.L89)/2
 1350 0012 71       		.byte	(.L87-.L89)/2
 1351 0013 71       		.byte	(.L87-.L89)/2
 1352 0014 71       		.byte	(.L87-.L89)/2
 1353 0015 05       		.byte	(.L90-.L89)/2
 1354 0016 13       		.byte	(.L91-.L89)/2
 1355 0017 21       		.byte	(.L92-.L89)/2
 1356 0018 2F       		.byte	(.L93-.L89)/2
 1357 0019 00       		.p2align 1
 1358              	.L90:
 969:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
 1359              		.loc 1 969 0
 1360 001a C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1361 001c 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1362              	.LVL162:
 1363 001e FFF7FEFF 		bl	Get_Estatus
 1364              	.LVL163:
 1365 0022 20F4A870 		bic	r0, r0, #336
 1366 0026 83B2     		uxth	r3, r0
 1367              	.LVL164:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 56


 970:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
 1368              		.loc 1 970 0
 1369 0028 DAB2     		uxtb	r2, r3
 1370 002a 3332     		adds	r2, r2, #51
 1371 002c A273     		strb	r2, [r4, #14]
 971:../user/source/DLT645.c ****         break;
 1372              		.loc 1 971 0
 1373 002e 1B0A     		lsrs	r3, r3, #8
 1374              	.LVL165:
 1375 0030 3333     		adds	r3, r3, #51
 1376 0032 E373     		strb	r3, [r4, #15]
 972:../user/source/DLT645.c ****     }
 1377              		.loc 1 972 0
 1378 0034 5DE0     		b	.L87
 1379              	.LVL166:
 1380              	.L91:
 976:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 1381              		.loc 1 976 0
 1382 0036 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1383 0038 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1384              	.LVL167:
 1385 003a FFF7FEFF 		bl	Get_Estatus
 1386              	.LVL168:
 1387 003e 20F4A870 		bic	r0, r0, #336
 1388 0042 83B2     		uxth	r3, r0
 1389              	.LVL169:
 977:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 1390              		.loc 1 977 0
 1391 0044 DAB2     		uxtb	r2, r3
 1392 0046 3332     		adds	r2, r2, #51
 1393 0048 A273     		strb	r2, [r4, #14]
 978:../user/source/DLT645.c ****         break;
 1394              		.loc 1 978 0
 1395 004a 1B0A     		lsrs	r3, r3, #8
 1396              	.LVL170:
 1397 004c 3333     		adds	r3, r3, #51
 1398 004e E373     		strb	r3, [r4, #15]
 979:../user/source/DLT645.c ****     }
 1399              		.loc 1 979 0
 1400 0050 4FE0     		b	.L87
 1401              	.LVL171:
 1402              	.L92:
 983:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 1403              		.loc 1 983 0
 1404 0052 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1405 0054 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1406              	.LVL172:
 1407 0056 FFF7FEFF 		bl	Get_Estatus
 1408              	.LVL173:
 1409 005a 20F4A870 		bic	r0, r0, #336
 1410 005e 83B2     		uxth	r3, r0
 1411              	.LVL174:
 984:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 1412              		.loc 1 984 0
 1413 0060 DAB2     		uxtb	r2, r3
 1414 0062 3332     		adds	r2, r2, #51
 1415 0064 A273     		strb	r2, [r4, #14]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 57


 985:../user/source/DLT645.c ****         break;
 1416              		.loc 1 985 0
 1417 0066 1B0A     		lsrs	r3, r3, #8
 1418              	.LVL175:
 1419 0068 3333     		adds	r3, r3, #51
 1420 006a E373     		strb	r3, [r4, #15]
 986:../user/source/DLT645.c ****     }
 1421              		.loc 1 986 0
 1422 006c 41E0     		b	.L87
 1423              	.LVL176:
 1424              	.L93:
 990:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 1425              		.loc 1 990 0
 1426 006e C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1427 0070 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1428              	.LVL177:
 1429 0072 FFF7FEFF 		bl	Get_Estatus
 1430              	.LVL178:
 1431 0076 20F00800 		bic	r0, r0, #8
 1432 007a 83B2     		uxth	r3, r0
 1433              	.LVL179:
 991:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 1434              		.loc 1 991 0
 1435 007c DAB2     		uxtb	r2, r3
 1436 007e 3332     		adds	r2, r2, #51
 1437 0080 A273     		strb	r2, [r4, #14]
 992:../user/source/DLT645.c ****         break;
 1438              		.loc 1 992 0
 1439 0082 1B0A     		lsrs	r3, r3, #8
 1440              	.LVL180:
 1441 0084 3333     		adds	r3, r3, #51
 1442 0086 E373     		strb	r3, [r4, #15]
 993:../user/source/DLT645.c ****     }
 1443              		.loc 1 993 0
 1444 0088 33E0     		b	.L87
 1445              	.LVL181:
 1446              	.L88:
 999:../user/source/DLT645.c ****         pucBuffer[20] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 1447              		.loc 1 999 0
 1448 008a 417D     		ldrb	r1, [r0, #21]	@ zero_extendqisi2
 1449 008c 007D     		ldrb	r0, [r0, #20]	@ zero_extendqisi2
 1450              	.LVL182:
 1451 008e FFF7FEFF 		bl	Get_Estatus
 1452              	.LVL183:
 1453 0092 20F4A870 		bic	r0, r0, #336
 1454 0096 83B2     		uxth	r3, r0
 1455              	.LVL184:
1000:../user/source/DLT645.c ****         pucBuffer[21] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 1456              		.loc 1 1000 0
 1457 0098 DAB2     		uxtb	r2, r3
 1458 009a 3332     		adds	r2, r2, #51
 1459 009c 2275     		strb	r2, [r4, #20]
1001:../user/source/DLT645.c ****         //×´Ì¬×Ö5,BÏà×´Ì¬×Ö
 1460              		.loc 1 1001 0
 1461 009e 1B0A     		lsrs	r3, r3, #8
 1462              	.LVL185:
 1463 00a0 3333     		adds	r3, r3, #51
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 58


 1464 00a2 6375     		strb	r3, [r4, #21]
1003:../user/source/DLT645.c ****         pucBuffer[22] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
 1465              		.loc 1 1003 0
 1466 00a4 E17D     		ldrb	r1, [r4, #23]	@ zero_extendqisi2
 1467 00a6 A07D     		ldrb	r0, [r4, #22]	@ zero_extendqisi2
 1468              	.LVL186:
 1469 00a8 FFF7FEFF 		bl	Get_Estatus
 1470              	.LVL187:
 1471 00ac 20F4A870 		bic	r0, r0, #336
 1472 00b0 83B2     		uxth	r3, r0
 1473              	.LVL188:
1004:../user/source/DLT645.c ****         pucBuffer[23] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
 1474              		.loc 1 1004 0
 1475 00b2 DAB2     		uxtb	r2, r3
 1476 00b4 3332     		adds	r2, r2, #51
 1477 00b6 A275     		strb	r2, [r4, #22]
1005:../user/source/DLT645.c ****         //×´Ì¬×Ö6,CÏà×´Ì¬×Ö
 1478              		.loc 1 1005 0
 1479 00b8 1B0A     		lsrs	r3, r3, #8
 1480              	.LVL189:
 1481 00ba 3333     		adds	r3, r3, #51
 1482 00bc E375     		strb	r3, [r4, #23]
1007:../user/source/DLT645.c ****         pucBuffer[24] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
 1483              		.loc 1 1007 0
 1484 00be 617E     		ldrb	r1, [r4, #25]	@ zero_extendqisi2
 1485 00c0 207E     		ldrb	r0, [r4, #24]	@ zero_extendqisi2
 1486              	.LVL190:
 1487 00c2 FFF7FEFF 		bl	Get_Estatus
 1488              	.LVL191:
 1489 00c6 20F4A870 		bic	r0, r0, #336
 1490 00ca 83B2     		uxth	r3, r0
 1491              	.LVL192:
1008:../user/source/DLT645.c ****         pucBuffer[25] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
 1492              		.loc 1 1008 0
 1493 00cc DAB2     		uxtb	r2, r3
 1494 00ce 3332     		adds	r2, r2, #51
 1495 00d0 2276     		strb	r2, [r4, #24]
1009:../user/source/DLT645.c ****         //×´Ì¬×Ö7£¬ºÏÏà×´Ì¬×Ö
 1496              		.loc 1 1009 0
 1497 00d2 1B0A     		lsrs	r3, r3, #8
 1498              	.LVL193:
 1499 00d4 3333     		adds	r3, r3, #51
 1500 00d6 6376     		strb	r3, [r4, #25]
1011:../user/source/DLT645.c ****         pucBuffer[26] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
 1501              		.loc 1 1011 0
 1502 00d8 E17E     		ldrb	r1, [r4, #27]	@ zero_extendqisi2
 1503 00da A07E     		ldrb	r0, [r4, #26]	@ zero_extendqisi2
 1504              	.LVL194:
 1505 00dc FFF7FEFF 		bl	Get_Estatus
 1506              	.LVL195:
 1507 00e0 20F00800 		bic	r0, r0, #8
 1508 00e4 83B2     		uxth	r3, r0
 1509              	.LVL196:
1012:../user/source/DLT645.c ****         pucBuffer[27] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
 1510              		.loc 1 1012 0
 1511 00e6 DAB2     		uxtb	r2, r3
 1512 00e8 3332     		adds	r2, r2, #51
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 59


 1513 00ea A276     		strb	r2, [r4, #26]
1013:../user/source/DLT645.c ****         break;
 1514              		.loc 1 1013 0
 1515 00ec 1B0A     		lsrs	r3, r3, #8
 1516              	.LVL197:
 1517 00ee 3333     		adds	r3, r3, #51
 1518 00f0 E376     		strb	r3, [r4, #27]
 1519              	.LVL198:
 1520              	.L87:
 963:../user/source/DLT645.c ****     switch (pucBuffer[10])
 1521              		.loc 1 963 0
 1522 00f2 0023     		movs	r3, #0
1019:../user/source/DLT645.c ****     {
 1523              		.loc 1 1019 0
 1524 00f4 1A46     		mov	r2, r3
 1525 00f6 03E0     		b	.L94
 1526              	.LVL199:
 1527              	.L95:
1021:../user/source/DLT645.c ****     }
 1528              		.loc 1 1021 0 discriminator 3
 1529 00f8 A15C     		ldrb	r1, [r4, r2]	@ zero_extendqisi2
 1530 00fa 0B44     		add	r3, r3, r1
 1531              	.LVL200:
 1532 00fc DBB2     		uxtb	r3, r3
 1533              	.LVL201:
1019:../user/source/DLT645.c ****     {
 1534              		.loc 1 1019 0 discriminator 3
 1535 00fe 0132     		adds	r2, r2, #1
 1536              	.LVL202:
 1537              	.L94:
1019:../user/source/DLT645.c ****     {
 1538              		.loc 1 1019 0 is_stmt 0 discriminator 1
 1539 0100 0349     		ldr	r1, .L97
 1540 0102 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1541 0104 01F10A00 		add	r0, r1, #10
 1542 0108 8242     		cmp	r2, r0
 1543 010a F5DB     		blt	.L95
1023:../user/source/DLT645.c **** }
 1544              		.loc 1 1023 0 is_stmt 1
 1545 010c 2354     		strb	r3, [r4, r0]
 1546 010e 10BD     		pop	{r4, pc}
 1547              	.LVL203:
 1548              	.L98:
 1549              		.align	2
 1550              	.L97:
 1551 0110 00000000 		.word	.LANCHOR0
 1552              		.cfi_endproc
 1553              	.LFE128:
 1555              		.section	.text.GetLowByte,"ax",%progbits
 1556              		.align	2
 1557              		.thumb
 1558              		.thumb_func
 1560              	GetLowByte:
 1561              	.LFB142:
1745:../user/source/DLT645.c **** /********************************************************************
1746:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½«µçÑ¹¸öÎ»×ª»»ÎªµÍ×Ö½Ú
1747:../user/source/DLT645.c ****  * Êä    Èë£ºÊ®½øÖÆµçÑ¹Öµ
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 60


1748:../user/source/DLT645.c ****  * Êä    ³ö£º	BCDÂë
1749:../user/source/DLT645.c ****  *           
1750:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1751:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
1752:../user/source/DLT645.c ****  **********************************************************************/
1753:../user/source/DLT645.c **** uint8_t GetLowByte(int Voltage)
1754:../user/source/DLT645.c **** {
 1562              		.loc 1 1754 0
 1563              		.cfi_startproc
 1564              		@ args = 0, pretend = 0, frame = 0
 1565              		@ frame_needed = 0, uses_anonymous_args = 0
 1566              		@ link register save eliminated.
 1567              	.LVL204:
1755:../user/source/DLT645.c ****     uint8_t LowByte = 0x00;
1756:../user/source/DLT645.c ****     LowByte = (((((Voltage % 1000) % 100) / 10) << 4) & 0xF0) + ((((Voltage % 1000) % 100) % 10) & 
 1568              		.loc 1 1756 0
 1569 0000 1149     		ldr	r1, .L100
 1570 0002 81FB0031 		smull	r3, r1, r1, r0
 1571 0006 C317     		asrs	r3, r0, #31
 1572 0008 C3EBA111 		rsb	r1, r3, r1, asr #6
 1573 000c 4FF47A73 		mov	r3, #1000
 1574 0010 03FB1101 		mls	r1, r3, r1, r0
 1575 0014 0D4A     		ldr	r2, .L100+4
 1576 0016 82FB0132 		smull	r3, r2, r2, r1
 1577 001a CB17     		asrs	r3, r1, #31
 1578 001c C3EB6212 		rsb	r2, r3, r2, asr #5
 1579 0020 6423     		movs	r3, #100
 1580 0022 03FB1212 		mls	r2, r3, r2, r1
 1581 0026 0A48     		ldr	r0, .L100+8
 1582              	.LVL205:
 1583 0028 80FB0230 		smull	r3, r0, r0, r2
 1584 002c D317     		asrs	r3, r2, #31
 1585 002e C3EBA000 		rsb	r0, r3, r0, asr #2
 1586 0032 00EB8001 		add	r1, r0, r0, lsl #2
 1587 0036 4B00     		lsls	r3, r1, #1
 1588 0038 D31A     		subs	r3, r2, r3
 1589 003a 03F00F03 		and	r3, r3, #15
 1590 003e 03EB0010 		add	r0, r3, r0, lsl #4
 1591 0042 3330     		adds	r0, r0, #51
 1592              	.LVL206:
1757:../user/source/DLT645.c ****     return LowByte;
1758:../user/source/DLT645.c **** }
 1593              		.loc 1 1758 0
 1594 0044 C0B2     		uxtb	r0, r0
 1595 0046 7047     		bx	lr
 1596              	.L101:
 1597              		.align	2
 1598              	.L100:
 1599 0048 D34D6210 		.word	274877907
 1600 004c 1F85EB51 		.word	1374389535
 1601 0050 67666666 		.word	1717986919
 1602              		.cfi_endproc
 1603              	.LFE142:
 1605              		.section	.text.GetHighByte,"ax",%progbits
 1606              		.align	2
 1607              		.thumb
 1608              		.thumb_func
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 61


 1610              	GetHighByte:
 1611              	.LFB143:
1759:../user/source/DLT645.c **** 
1760:../user/source/DLT645.c **** /********************************************************************
1761:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½«µçÑ¹°ÙÎ»¡¢Ê®Î»×ª»»ÎªµÍ×Ö½Ú
1762:../user/source/DLT645.c ****  * Êä    Èë£ºÊ®½øÖÆµçÑ¹Öµ
1763:../user/source/DLT645.c ****  * Êä    ³ö£º	BCDÂë
1764:../user/source/DLT645.c ****  *           
1765:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1766:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
1767:../user/source/DLT645.c ****  **********************************************************************/
1768:../user/source/DLT645.c **** uint8_t GetHighByte(int Voltage)
1769:../user/source/DLT645.c **** {
 1612              		.loc 1 1769 0
 1613              		.cfi_startproc
 1614              		@ args = 0, pretend = 0, frame = 0
 1615              		@ frame_needed = 0, uses_anonymous_args = 0
 1616              		@ link register save eliminated.
 1617              	.LVL207:
1770:../user/source/DLT645.c ****     uint8_t HighByte = 0x00;
1771:../user/source/DLT645.c ****     HighByte = (((uint8_t)(Voltage / 1000) << 4) & 0xF0) + ((uint8_t)((Voltage % 1000) / 100) & 0x0
 1618              		.loc 1 1771 0
 1619 0000 0C49     		ldr	r1, .L103
 1620 0002 81FB0031 		smull	r3, r1, r1, r0
 1621 0006 C317     		asrs	r3, r0, #31
 1622 0008 C3EBA111 		rsb	r1, r3, r1, asr #6
 1623 000c 0B01     		lsls	r3, r1, #4
 1624 000e 03F47F62 		and	r2, r3, #4080
 1625 0012 4FF47A73 		mov	r3, #1000
 1626 0016 03FB1103 		mls	r3, r3, r1, r0
 1627 001a 0748     		ldr	r0, .L103+4
 1628              	.LVL208:
 1629 001c 80FB0310 		smull	r1, r0, r0, r3
 1630 0020 DB17     		asrs	r3, r3, #31
 1631 0022 C3EB6013 		rsb	r3, r3, r0, asr #5
 1632 0026 03F00F03 		and	r3, r3, #15
 1633 002a 1344     		add	r3, r3, r2
 1634 002c 03F13300 		add	r0, r3, #51
 1635              	.LVL209:
1772:../user/source/DLT645.c ****     return HighByte;
1773:../user/source/DLT645.c **** }
 1636              		.loc 1 1773 0
 1637 0030 C0B2     		uxtb	r0, r0
 1638 0032 7047     		bx	lr
 1639              	.L104:
 1640              		.align	2
 1641              	.L103:
 1642 0034 D34D6210 		.word	274877907
 1643 0038 1F85EB51 		.word	1374389535
 1644              		.cfi_endproc
 1645              	.LFE143:
 1647              		.section	.text.Get_Energy,"ax",%progbits
 1648              		.align	2
 1649              		.thumb
 1650              		.thumb_func
 1652              	Get_Energy:
 1653              	.LFB145:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 62


1774:../user/source/DLT645.c **** 
1775:../user/source/DLT645.c **** /********************************************************************
1776:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÈÕ¶³½áÊı¾İĞŞ¸Ä¹¦ÄÜ³õÊ¼»¯£ºÄ¬ÈÏĞŞ¸Ä£»
1777:../user/source/DLT645.c ****  * Êä    Èë£º
1778:../user/source/DLT645.c ****  * Êä    ³ö£º
1779:../user/source/DLT645.c ****  *
1780:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1781:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.9.6
1782:../user/source/DLT645.c ****  **********************************************************************/
1783:../user/source/DLT645.c **** //void vDayfrozen_Change_Init(void)
1784:../user/source/DLT645.c **** void vEnergy_Modify_Init(void)
1785:../user/source/DLT645.c **** {
1786:../user/source/DLT645.c ****     uint8_t tmp;
1787:../user/source/DLT645.c ****     /*ÈÕ¶³½áĞŞ¸ÄÊ¹ÄÜÎ»³õÊ¼»¯*/
1788:../user/source/DLT645.c ****     Dayfrozen_Change_State = EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR);
1789:../user/source/DLT645.c ****     tmp = EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR);
1790:../user/source/DLT645.c ****     /*ÅĞ¶ÏflashÖĞÊÇ·ñÒÑ´æ´¢µçÑ¹ĞŞ¸Ä±ÈÀı*/
1791:../user/source/DLT645.c ****     if (tmp == 0xFF)
1792:../user/source/DLT645.c ****     {
1793:../user/source/DLT645.c ****         /*Ê¹ÓÃÄ¬ÈÏĞŞ¸Ä±ÈÀı*/
1794:../user/source/DLT645.c ****         ucDayfrozen_Modify_Ratio = UCDAYFROZEN_CHANGE_DEFAULE_RATIO;
1795:../user/source/DLT645.c ****     }
1796:../user/source/DLT645.c ****     else
1797:../user/source/DLT645.c ****     {
1798:../user/source/DLT645.c ****         ucDayfrozen_Modify_Ratio = tmp;
1799:../user/source/DLT645.c ****     }
1800:../user/source/DLT645.c **** }
1801:../user/source/DLT645.c **** 
1802:../user/source/DLT645.c **** /********************************************************************
1803:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º´ÓÊı¾İÖ¡ÖĞ¶ÁÈ¡µçÄÜÁ¿Öµ
1804:../user/source/DLT645.c ****  * Êä    Èë£ºµçÄÜÁ¿Öµ´ÓµÍµ½¸ßËÄ¸ö×Ö½Ú
1805:../user/source/DLT645.c ****  * Êä    ³ö£ºÊ®½øÖÆµÄµçÄÜÁ¿Öµ
1806:../user/source/DLT645.c ****  * Òª    Çó£ºÊä³öÖµÀ©´ó100±¶
1807:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1808:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
1809:../user/source/DLT645.c ****  **********************************************************************/
1810:../user/source/DLT645.c **** uint32_t Get_Energy(uint8_t FstByte, uint8_t ScdByte, uint8_t TirdByte, uint8_t ForthByte)
1811:../user/source/DLT645.c **** {
 1654              		.loc 1 1811 0
 1655              		.cfi_startproc
 1656              		@ args = 0, pretend = 0, frame = 0
 1657              		@ frame_needed = 0, uses_anonymous_args = 0
 1658              		@ link register save eliminated.
 1659              	.LVL210:
 1660 0000 30B4     		push	{r4, r5}
 1661              	.LCFI17:
 1662              		.cfi_def_cfa_offset 8
 1663              		.cfi_offset 4, -8
 1664              		.cfi_offset 5, -4
 1665              	.LVL211:
1812:../user/source/DLT645.c ****     uint32_t Energy = 0;
1813:../user/source/DLT645.c ****     Energy = BCD2DEC(ForthByte - 0x33) * 1000000 +
 1666              		.loc 1 1813 0
 1667 0002 333B     		subs	r3, r3, #51
 1668              	.LVL212:
 1669 0004 C3F30314 		ubfx	r4, r3, #4, #4
 1670 0008 04EB8404 		add	r4, r4, r4, lsl #2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 63


 1671 000c 6500     		lsls	r5, r4, #1
 1672 000e 03F00F03 		and	r3, r3, #15
 1673 0012 2B44     		add	r3, r3, r5
1814:../user/source/DLT645.c ****              BCD2DEC(TirdByte - 0x33) * 10000 +
 1674              		.loc 1 1814 0
 1675 0014 333A     		subs	r2, r2, #51
 1676              	.LVL213:
 1677 0016 C2F30314 		ubfx	r4, r2, #4, #4
 1678 001a 04EB8404 		add	r4, r4, r4, lsl #2
 1679 001e 6500     		lsls	r5, r4, #1
 1680 0020 02F00F02 		and	r2, r2, #15
 1681 0024 2A44     		add	r2, r2, r5
 1682 0026 42F21074 		movw	r4, #10000
 1683 002a 04FB02F2 		mul	r2, r4, r2
1813:../user/source/DLT645.c ****              BCD2DEC(TirdByte - 0x33) * 10000 +
 1684              		.loc 1 1813 0
 1685 002e 0D4C     		ldr	r4, .L107
 1686 0030 04FB0323 		mla	r3, r4, r3, r2
1815:../user/source/DLT645.c ****              BCD2DEC(ScdByte - 0x33) * 100 +
 1687              		.loc 1 1815 0
 1688 0034 3339     		subs	r1, r1, #51
 1689              	.LVL214:
 1690 0036 C1F30312 		ubfx	r2, r1, #4, #4
 1691 003a 02EB8202 		add	r2, r2, r2, lsl #2
 1692 003e 5400     		lsls	r4, r2, #1
 1693 0040 01F00F01 		and	r1, r1, #15
 1694 0044 2144     		add	r1, r1, r4
1814:../user/source/DLT645.c ****              BCD2DEC(TirdByte - 0x33) * 10000 +
 1695              		.loc 1 1814 0
 1696 0046 6422     		movs	r2, #100
 1697 0048 02FB0131 		mla	r1, r2, r1, r3
1816:../user/source/DLT645.c ****              BCD2DEC(FstByte - 0x33);
 1698              		.loc 1 1816 0
 1699 004c 3338     		subs	r0, r0, #51
 1700              	.LVL215:
 1701 004e C0F30313 		ubfx	r3, r0, #4, #4
 1702 0052 03EB8303 		add	r3, r3, r3, lsl #2
 1703 0056 5A00     		lsls	r2, r3, #1
 1704 0058 00F00F00 		and	r0, r0, #15
 1705 005c 1044     		add	r0, r0, r2
 1706              	.LVL216:
1817:../user/source/DLT645.c ****     return Energy;
1818:../user/source/DLT645.c **** }
 1707              		.loc 1 1818 0
 1708 005e 0844     		add	r0, r0, r1
 1709              	.LVL217:
 1710 0060 30BC     		pop	{r4, r5}
 1711              	.LCFI18:
 1712              		.cfi_restore 5
 1713              		.cfi_restore 4
 1714              		.cfi_def_cfa_offset 0
 1715 0062 7047     		bx	lr
 1716              	.L108:
 1717              		.align	2
 1718              	.L107:
 1719 0064 40420F00 		.word	1000000
 1720              		.cfi_endproc
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 64


 1721              	.LFE145:
 1723              		.section	.text.Fill_Energy,"ax",%progbits
 1724              		.align	2
 1725              		.thumb
 1726              		.thumb_func
 1728              	Fill_Energy:
 1729              	.LFB146:
1819:../user/source/DLT645.c **** 
1820:../user/source/DLT645.c **** /********************************************************************
1821:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½«µçÄÜÁ¿Öµ×ª»¯Îª645Ö¡×Ö½Ú
1822:../user/source/DLT645.c ****  * Êä    Èë£ºµçÄÜÁ¿Öµ£¬ËÄ×Ö½Ú°´´«ÊäË³ĞòÊäÈë
1823:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
1824:../user/source/DLT645.c ****  * Òª    Çó£ºÊä³öÖµÀ©´ó100±¶
1825:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1826:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.10
1827:../user/source/DLT645.c ****  **********************************************************************/
1828:../user/source/DLT645.c **** void Fill_Energy(uint32_t energy, uint8_t *pFstByte, uint8_t *pScdByte, uint8_t *pTirdByte, uint8_t
1829:../user/source/DLT645.c **** {
 1730              		.loc 1 1829 0
 1731              		.cfi_startproc
 1732              		@ args = 4, pretend = 0, frame = 0
 1733              		@ frame_needed = 0, uses_anonymous_args = 0
 1734              	.LVL218:
 1735 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1736              	.LCFI19:
 1737              		.cfi_def_cfa_offset 28
 1738              		.cfi_offset 4, -28
 1739              		.cfi_offset 5, -24
 1740              		.cfi_offset 6, -20
 1741              		.cfi_offset 7, -16
 1742              		.cfi_offset 8, -12
 1743              		.cfi_offset 9, -8
 1744              		.cfi_offset 14, -4
1830:../user/source/DLT645.c ****     *pFstByte = DEC2BCD(energy % 100) + 0x33;
 1745              		.loc 1 1830 0
 1746 0004 2C4D     		ldr	r5, .L111
 1747 0006 A5FB004C 		umull	r4, ip, r5, r0
 1748 000a 4FEA5C18 		lsr	r8, ip, #5
 1749 000e 6426     		movs	r6, #100
 1750 0010 06FB1808 		mls	r8, r6, r8, r0
 1751 0014 294C     		ldr	r4, .L111+4
 1752 0016 A4FB08E7 		umull	lr, r7, r4, r8
 1753 001a 4FEAD70E 		lsr	lr, r7, #3
 1754 001e 0EEB8E09 		add	r9, lr, lr, lsl #2
 1755 0022 4FEA4907 		lsl	r7, r9, #1
 1756 0026 C7EB0807 		rsb	r7, r7, r8
 1757 002a 47EA0E17 		orr	r7, r7, lr, lsl #4
 1758 002e 3337     		adds	r7, r7, #51
 1759 0030 0F70     		strb	r7, [r1]
1831:../user/source/DLT645.c ****     *pScdByte = DEC2BCD(energy / 100 % 100) + 0x33;
 1760              		.loc 1 1831 0
 1761 0032 4FEA5C1C 		lsr	ip, ip, #5
 1762 0036 A5FB0C1E 		umull	r1, lr, r5, ip
 1763              	.LVL219:
 1764 003a 4FEA5E1E 		lsr	lr, lr, #5
 1765 003e 06FB1ECE 		mls	lr, r6, lr, ip
 1766 0042 A4FB0E71 		umull	r7, r1, r4, lr
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 65


 1767 0046 CF08     		lsrs	r7, r1, #3
 1768 0048 07EB870C 		add	ip, r7, r7, lsl #2
 1769 004c 4FEA4C01 		lsl	r1, ip, #1
 1770 0050 C1EB0E01 		rsb	r1, r1, lr
 1771 0054 41EA0711 		orr	r1, r1, r7, lsl #4
 1772 0058 3331     		adds	r1, r1, #51
 1773 005a 1170     		strb	r1, [r2]
1832:../user/source/DLT645.c ****     *pTirdByte = DEC2BCD(energy / 10000 % 100) + 0x33;
 1774              		.loc 1 1832 0
 1775 005c 184A     		ldr	r2, .L111+8
 1776              	.LVL220:
 1777 005e A2FB0012 		umull	r1, r2, r2, r0
 1778 0062 520B     		lsrs	r2, r2, #13
 1779 0064 A5FB0217 		umull	r1, r7, r5, r2
 1780 0068 7F09     		lsrs	r7, r7, #5
 1781 006a 06FB1727 		mls	r7, r6, r7, r2
 1782 006e A4FB0712 		umull	r1, r2, r4, r7
 1783 0072 D108     		lsrs	r1, r2, #3
 1784 0074 01EB810E 		add	lr, r1, r1, lsl #2
 1785 0078 4FEA4E02 		lsl	r2, lr, #1
 1786 007c 9646     		mov	lr, r2
 1787 007e BA1A     		subs	r2, r7, r2
 1788 0080 42EA0112 		orr	r2, r2, r1, lsl #4
 1789 0084 3332     		adds	r2, r2, #51
 1790 0086 1A70     		strb	r2, [r3]
1833:../user/source/DLT645.c ****     *pForthByte = DEC2BCD(energy / 1000000 % 100) + 0x33;
 1791              		.loc 1 1833 0
 1792 0088 0E4B     		ldr	r3, .L111+12
 1793              	.LVL221:
 1794 008a A3FB0030 		umull	r3, r0, r3, r0
 1795              	.LVL222:
 1796 008e 800C     		lsrs	r0, r0, #18
 1797 0090 A5FB0035 		umull	r3, r5, r5, r0
 1798 0094 6D09     		lsrs	r5, r5, #5
 1799 0096 06FB1505 		mls	r5, r6, r5, r0
 1800 009a A4FB0534 		umull	r3, r4, r4, r5
 1801 009e E408     		lsrs	r4, r4, #3
 1802 00a0 04EB8402 		add	r2, r4, r4, lsl #2
 1803 00a4 5300     		lsls	r3, r2, #1
 1804 00a6 EB1A     		subs	r3, r5, r3
 1805 00a8 43EA0414 		orr	r4, r3, r4, lsl #4
 1806 00ac 3334     		adds	r4, r4, #51
 1807 00ae 079B     		ldr	r3, [sp, #28]
 1808 00b0 1C70     		strb	r4, [r3]
 1809 00b2 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1810              	.LVL223:
 1811              	.L112:
 1812 00b6 00BF     		.align	2
 1813              	.L111:
 1814 00b8 1F85EB51 		.word	1374389535
 1815 00bc CDCCCCCC 		.word	-858993459
 1816 00c0 5917B7D1 		.word	-776530087
 1817 00c4 83DE1B43 		.word	1125899907
 1818              		.cfi_endproc
 1819              	.LFE146:
 1821              		.section	.text.vVoltage_SetMaxMaxValue,"ax",%progbits
 1822              		.align	2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 66


 1823              		.global	vVoltage_SetMaxMaxValue
 1824              		.thumb
 1825              		.thumb_func
 1827              	vVoltage_SetMaxMaxValue:
 1828              	.LFB159:
1834:../user/source/DLT645.c **** }
1835:../user/source/DLT645.c **** 
1836:../user/source/DLT645.c **** /********************************************************************
1837:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµ±Ç°/ÈÕ¶³½áµçÄÜÁ¿µ÷Õû²ßÂÔ
1838:../user/source/DLT645.c ****  * Êä    Èë£º
1839:../user/source/DLT645.c ****  * Êä    ³ö£º
1840:../user/source/DLT645.c ****  *           
1841:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1842:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.8
1843:../user/source/DLT645.c ****  **********************************************************************/
1844:../user/source/DLT645.c **** uint32_t vNow_Frozen_Modify_Mothod(uint32_t nowenergy, uint32_t RealValueAddr, uint32_t ModifiedVal
1845:../user/source/DLT645.c **** {
1846:../user/source/DLT645.c ****     uint32_t RealValue;
1847:../user/source/DLT645.c ****     uint32_t Modified_Value;
1848:../user/source/DLT645.c ****     uint64_t i;
1849:../user/source/DLT645.c ****     /*¶ÁÈ¡´æ´¢µÄÉÏ´ÎÕæÊµÖµºÍĞŞ¸ÄÖµ*/
1850:../user/source/DLT645.c ****     RealValue = Flash_Read_Word(RealValueAddr);
1851:../user/source/DLT645.c ****     Modified_Value = Flash_Read_Word(ModifiedValueAddr);
1852:../user/source/DLT645.c ****     /*ÖÕ¶ËµÚÒ»´ÎÊ¹ÓÃ*/
1853:../user/source/DLT645.c ****     if ((RealValue == 0XFFFFFFFF) || (Modified_Value == 0XFFFFFFFF))
1854:../user/source/DLT645.c ****     {
1855:../user/source/DLT645.c ****         /*ÉÏËÍÖµ´æ´¢ÎªÕæÊµÖµºÍĞŞ¸ÄÖµ*/
1856:../user/source/DLT645.c ****         Flash_Write_Word(RealValueAddr, nowenergy);
1857:../user/source/DLT645.c ****         Flash_Write_Word(ModifiedValueAddr, nowenergy);
1858:../user/source/DLT645.c ****         /*²»ĞŞ¸Ä*/
1859:../user/source/DLT645.c ****         return nowenergy;
1860:../user/source/DLT645.c ****     }
1861:../user/source/DLT645.c ****     else
1862:../user/source/DLT645.c ****     {
1863:../user/source/DLT645.c ****         /*¼ÆËãÕæÊµµÄÔöÁ¿£¬´òÕÛºóÀÛ¼Óµ½ÉÏ´ÎµÄĞŞ¸ÄÖµ*/
1864:../user/source/DLT645.c ****         /*µç±íÖµÒç³öºó¹éÁã*/
1865:../user/source/DLT645.c ****         if (nowenergy < RealValue)
1866:../user/source/DLT645.c ****         {
1867:../user/source/DLT645.c ****             //i= ((uint64_t)(nowenergy+ 99999999- RealValue)* ucDayfrozen_Modify_Ratio)/100;
1868:../user/source/DLT645.c ****             /*2018-6-27 11:04:38£ºÔö¼ÓËÄÉáÎåÈë£¬µ¥´ÎÔö¼Ó0.05kwhÒÔÏÂÊ±£¬²»ĞŞ¸Ä*/
1869:../user/source/DLT645.c ****             i = ((uint64_t)(nowenergy + 99999999 - RealValue) * ucDayfrozen_Modify_Ratio + 50) / 10
1870:../user/source/DLT645.c ****         }
1871:../user/source/DLT645.c ****         else
1872:../user/source/DLT645.c ****         {
1873:../user/source/DLT645.c ****             i = ((uint64_t)(nowenergy - RealValue) * ucDayfrozen_Modify_Ratio + 50) / 100;
1874:../user/source/DLT645.c ****         }
1875:../user/source/DLT645.c ****         Modified_Value += (uint32_t)i;
1876:../user/source/DLT645.c ****         /*ÀÛ¼ÆÖµÒç³öºó¹éÁã*/
1877:../user/source/DLT645.c ****         Modified_Value = (Modified_Value > 99999999 ? Modified_Value - 99999999 : Modified_Value);
1878:../user/source/DLT645.c ****         /*½«ÉÏËÍÖµ´æ´¢ÎªÕæÊµÖµ*/
1879:../user/source/DLT645.c ****         Flash_Write_Word(RealValueAddr, nowenergy);
1880:../user/source/DLT645.c ****         /*ĞÂµÄĞŞ¸ÄÖµ¸²¸Ç¾ÉÖµ´æ´¢*/
1881:../user/source/DLT645.c ****         Flash_Write_Word(ModifiedValueAddr, Modified_Value);
1882:../user/source/DLT645.c ****         /*·µ»ØĞŞ¸ÄÖµ*/
1883:../user/source/DLT645.c ****         return Modified_Value;
1884:../user/source/DLT645.c ****     }
1885:../user/source/DLT645.c **** }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 67


1886:../user/source/DLT645.c **** 
1887:../user/source/DLT645.c **** /********************************************************************
1888:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµ±Ç°µçÁ¿Êı¾İĞŞ¸Äº¯Êı
1889:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
1890:../user/source/DLT645.c ****  * Êä    ³ö£º	none
1891:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1892:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.9
1893:../user/source/DLT645.c ****  case ID_00010000:	//µ±Ç°ÕıÏòÓĞ¹¦×ÜµçÄÜ
1894:../user/source/DLT645.c ****  case ID_00010100:	//µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜ
1895:../user/source/DLT645.c ****  case ID_00010200:	//µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ2µçÄÜ
1896:../user/source/DLT645.c ****  case ID_00010300:	//µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ3µçÄÜ
1897:../user/source/DLT645.c ****  case ID_00010400:	//µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ4µçÄÜ
1898:../user/source/DLT645.c ****  case ID_0001FF00:	//µ±Ç°ÕıÏòÓĞ¹¦µçÄÜÊı¾İ¿é
1899:../user/source/DLT645.c ****  case ID_00150000:	//µ±Ç°AÏàÕıÏòÓĞ¹¦
1900:../user/source/DLT645.c ****  case ID_00290000:	//µ±Ç°BÏàÕıÏòÓĞ¹¦
1901:../user/source/DLT645.c ****  case ID_003D0000:	//µ±Ç°CÏàÕıÏòÓĞ¹¦
1902:../user/source/DLT645.c ****  **********************************************************************/
1903:../user/source/DLT645.c **** void vNowEnergy_Modifier(uint8_t *pucBuffer)
1904:../user/source/DLT645.c **** {
1905:../user/source/DLT645.c ****     uint16_t i;
1906:../user/source/DLT645.c ****     uint32_t energy;    //Êı¾İÓòµÄµÚÒ»¸öµçÁ¿Öµ
1907:../user/source/DLT645.c ****     uint32_t energy_F1; //·ÑÂÊ1µçÁ¿×¨ÓÃ±äÁ¿
1908:../user/source/DLT645.c ****     uint32_t energy_F2; //·ÑÂÊ2µçÁ¿×¨ÓÃ±äÁ¿
1909:../user/source/DLT645.c ****     uint32_t energy_F3; //·ÑÂÊ3µçÁ¿×¨ÓÃ±äÁ¿
1910:../user/source/DLT645.c ****     uint32_t energy_F4; //·ÑÂÊ4µçÁ¿×¨ÓÃ±äÁ¿
1911:../user/source/DLT645.c ****     if (Dayfrozen_Change_State == 0x00)
1912:../user/source/DLT645.c ****         return;
1913:../user/source/DLT645.c ****     energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);
1914:../user/source/DLT645.c ****     switch (pucBuffer[11])
1915:../user/source/DLT645.c ****     {
1916:../user/source/DLT645.c ****     case 0x33:
1917:../user/source/DLT645.c ****     {
1918:../user/source/DLT645.c ****         switch (pucBuffer[12])
1919:../user/source/DLT645.c ****         {
1920:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦×Ü*/
1921:../user/source/DLT645.c ****         case 0x34:
1922:../user/source/DLT645.c ****         {
1923:../user/source/DLT645.c ****             energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_ALL_NOWENERGY_ADDR,
1924:../user/source/DLT645.c ****                                                FLASH_MODIFIED_ALL_NOWENERGY_ADDR);
1925:../user/source/DLT645.c ****             break;
1926:../user/source/DLT645.c ****         }
1927:../user/source/DLT645.c ****         /*AÏàÕıÏòÓĞ¹¦*/
1928:../user/source/DLT645.c ****         case 0x48:
1929:../user/source/DLT645.c ****         {
1930:../user/source/DLT645.c ****             energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_A_NOWENERGY_ADDR,
1931:../user/source/DLT645.c ****                                                FLASH_MODIFIED_A_NOWENERGY_ADDR);
1932:../user/source/DLT645.c ****             break;
1933:../user/source/DLT645.c ****         }
1934:../user/source/DLT645.c ****         /*BÏàÕıÏòÓĞ¹¦*/
1935:../user/source/DLT645.c ****         case 0x5c:
1936:../user/source/DLT645.c ****         {
1937:../user/source/DLT645.c ****             energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_B_NOWENERGY_ADDR,
1938:../user/source/DLT645.c ****                                                FLASH_MODIFIED_B_NOWENERGY_ADDR);
1939:../user/source/DLT645.c ****             break;
1940:../user/source/DLT645.c ****         }
1941:../user/source/DLT645.c ****         /*CÏàÕıÏòÓĞ¹¦*/
1942:../user/source/DLT645.c ****         case 0x70:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 68


1943:../user/source/DLT645.c ****         {
1944:../user/source/DLT645.c ****             energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_C_NOWENERGY_ADDR,
1945:../user/source/DLT645.c ****                                                FLASH_MODIFIED_C_NOWENERGY_ADDR);
1946:../user/source/DLT645.c ****             break;
1947:../user/source/DLT645.c ****         }
1948:../user/source/DLT645.c ****         default:
1949:../user/source/DLT645.c ****             break;
1950:../user/source/DLT645.c ****         }
1951:../user/source/DLT645.c ****         break;
1952:../user/source/DLT645.c ****     }
1953:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×Ü·ÑÂÊ1*/
1954:../user/source/DLT645.c ****     case 0x34:
1955:../user/source/DLT645.c ****     {
1956:../user/source/DLT645.c ****         energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_F1_NOWENERGY_ADDR,
1957:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F1_NOWENERGY_ADDR);
1958:../user/source/DLT645.c ****         break;
1959:../user/source/DLT645.c ****     }
1960:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×Ü·ÑÂÊ2*/
1961:../user/source/DLT645.c ****     case 0x35:
1962:../user/source/DLT645.c ****     {
1963:../user/source/DLT645.c ****         energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_F2_NOWENERGY_ADDR,
1964:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F2_NOWENERGY_ADDR);
1965:../user/source/DLT645.c ****         break;
1966:../user/source/DLT645.c ****     }
1967:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×Ü·ÑÂÊ3*/
1968:../user/source/DLT645.c ****     case 0x36:
1969:../user/source/DLT645.c ****     {
1970:../user/source/DLT645.c ****         energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_F3_NOWENERGY_ADDR,
1971:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F3_NOWENERGY_ADDR);
1972:../user/source/DLT645.c ****         break;
1973:../user/source/DLT645.c ****     }
1974:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×Ü·ÑÂÊ4*/
1975:../user/source/DLT645.c ****     case 0x37:
1976:../user/source/DLT645.c ****     {
1977:../user/source/DLT645.c ****         energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_F4_NOWENERGY_ADDR,
1978:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F4_NOWENERGY_ADDR);
1979:../user/source/DLT645.c ****         break;
1980:../user/source/DLT645.c ****     }
1981:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×ÜÊı¾İ¿é*/
1982:../user/source/DLT645.c ****     case 0x32:
1983:../user/source/DLT645.c ****     {
1984:../user/source/DLT645.c ****         /*			2018-6-27 09:07:02£ºÖØÇìÕÙ²âÈÕ¶³½áÊı¾İ¿é·¢ÏÖ×ÜºÍËÄ·ÑÂÊÖ®ºÍÓĞ²îÒì£¬
1985:../user/source/DLT645.c **** 	 *			Ô­ÒòÎª³ËÒÔ0.9ºóĞ¡ÊıµãºóµÚÈıÎ»±»ºöÂÔ£¬×ÜµçÁ¿´óÓÚ·Ö·ÑÂÊµçÁ¿Ö®ºÍ£¬
1986:../user/source/DLT645.c **** 	 *			½«×ÜµçÁ¿¼ÆËã·½·¨¸ÄÎª½«ËÄ·ÑÂÊ·ÖµçÁ¿Ïà¼Ó
1987:../user/source/DLT645.c **** 	 *			energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_ALL_NOWENERGY_ADDR,FLASH_MODIFIED_ALL_N
1988:../user/source/DLT645.c **** 	 *			*/
1989:../user/source/DLT645.c ****         energy_F1 = Get_Energy(pucBuffer[18], pucBuffer[19], pucBuffer[20], pucBuffer[21]);
1990:../user/source/DLT645.c ****         energy_F1 = vNow_Frozen_Modify_Mothod(energy_F1, FLASH_REAL_F1_NOWENERGY_ADDR,
1991:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F1_NOWENERGY_ADDR);
1992:../user/source/DLT645.c ****         energy_F2 = Get_Energy(pucBuffer[22], pucBuffer[23], pucBuffer[24], pucBuffer[25]);
1993:../user/source/DLT645.c ****         energy_F2 = vNow_Frozen_Modify_Mothod(energy_F2, FLASH_REAL_F2_NOWENERGY_ADDR,
1994:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F2_NOWENERGY_ADDR);
1995:../user/source/DLT645.c ****         energy_F3 = Get_Energy(pucBuffer[26], pucBuffer[27], pucBuffer[28], pucBuffer[29]);
1996:../user/source/DLT645.c ****         energy_F3 = vNow_Frozen_Modify_Mothod(energy_F3, FLASH_REAL_F3_NOWENERGY_ADDR,
1997:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F3_NOWENERGY_ADDR);
1998:../user/source/DLT645.c **** 
1999:../user/source/DLT645.c ****         energy_F4 = Get_Energy(pucBuffer[30], pucBuffer[31], pucBuffer[32], pucBuffer[33]);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 69


2000:../user/source/DLT645.c ****         energy_F4 = vNow_Frozen_Modify_Mothod(energy_F4, FLASH_REAL_F4_NOWENERGY_ADDR,
2001:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F4_NOWENERGY_ADDR);
2002:../user/source/DLT645.c ****         /*¶ÁÈ¡×ÜµçÁ¿ÕæÊµÖµ*/
2003:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);
2004:../user/source/DLT645.c ****         /*±£´æ×ÜµçÁ¿ÕæÊµÖµ£¬µ¥³­×ÜµçÁ¿Ê±Ê¹ÓÃ*/
2005:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_REAL_ALL_NOWENERGY_ADDR, energy);
2006:../user/source/DLT645.c ****         /*¸ù¾İ·Ö·ÑÂÊµçÁ¿¼ÆËãĞŞ¸ÄºóµÄ×ÜµçÁ¿*/
2007:../user/source/DLT645.c ****         energy = energy_F1 + energy_F2 + energy_F3 + energy_F4;
2008:../user/source/DLT645.c ****         /*±£´æĞŞ¸ÄÖµ£¬µ¥³­×ÜµçÁ¿Ê±Ê¹ÓÃ*/
2009:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_MODIFIED_ALL_NOWENERGY_ADDR, energy);
2010:../user/source/DLT645.c ****         break;
2011:../user/source/DLT645.c ****     }
2012:../user/source/DLT645.c ****     default:
2013:../user/source/DLT645.c ****         break;
2014:../user/source/DLT645.c ****     }
2015:../user/source/DLT645.c ****     switch (pucBuffer[11])
2016:../user/source/DLT645.c ****     {
2017:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×Ü£¬»òA/B/CÏàÕıÏòÓĞ¹¦*/
2018:../user/source/DLT645.c ****     case 0x33:
2019:../user/source/DLT645.c ****     case 0x34:
2020:../user/source/DLT645.c ****     case 0x35:
2021:../user/source/DLT645.c ****     case 0x36:
2022:../user/source/DLT645.c ****     case 0x37:
2023:../user/source/DLT645.c ****     {
2024:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2025:../user/source/DLT645.c ****         pucBuffer[18] = 0;
2026:../user/source/DLT645.c ****         for (i = 0; i < 18; i++)
2027:../user/source/DLT645.c ****         {
2028:../user/source/DLT645.c ****             pucBuffer[18] += pucBuffer[i];
2029:../user/source/DLT645.c ****         }
2030:../user/source/DLT645.c ****         pucBuffer[19] = 0x16;
2031:../user/source/DLT645.c ****         break;
2032:../user/source/DLT645.c ****     }
2033:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×ÜÊı¾İ¿é*/
2034:../user/source/DLT645.c ****     case 0x32:
2035:../user/source/DLT645.c ****     {
2036:../user/source/DLT645.c ****         /*×Ü*/
2037:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2038:../user/source/DLT645.c ****         /*¼â*/
2039:../user/source/DLT645.c ****         Fill_Energy(energy_F1, &pucBuffer[18], &pucBuffer[19], &pucBuffer[20], &pucBuffer[21]);
2040:../user/source/DLT645.c ****         /*·å*/
2041:../user/source/DLT645.c ****         Fill_Energy(energy_F2, &pucBuffer[22], &pucBuffer[23], &pucBuffer[24], &pucBuffer[25]);
2042:../user/source/DLT645.c ****         /*Æ½*/
2043:../user/source/DLT645.c ****         Fill_Energy(energy_F3, &pucBuffer[26], &pucBuffer[27], &pucBuffer[28], &pucBuffer[29]);
2044:../user/source/DLT645.c ****         /*¹È*/
2045:../user/source/DLT645.c ****         Fill_Energy(energy_F4, &pucBuffer[30], &pucBuffer[31], &pucBuffer[32], &pucBuffer[33]);
2046:../user/source/DLT645.c ****         pucBuffer[34] = 0;
2047:../user/source/DLT645.c ****         for (i = 0; i < 34; i++)
2048:../user/source/DLT645.c ****         {
2049:../user/source/DLT645.c ****             pucBuffer[34] += pucBuffer[i];
2050:../user/source/DLT645.c ****         }
2051:../user/source/DLT645.c ****         pucBuffer[35] = 0x16;
2052:../user/source/DLT645.c ****         break;
2053:../user/source/DLT645.c ****     }
2054:../user/source/DLT645.c ****     default:
2055:../user/source/DLT645.c ****         break;
2056:../user/source/DLT645.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 70


2057:../user/source/DLT645.c **** }
2058:../user/source/DLT645.c **** 
2059:../user/source/DLT645.c **** /********************************************************************
2060:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÈÕ¶³½áÊı¾İĞŞ¸Äº¯Êı
2061:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2062:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2063:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2064:../user/source/DLT645.c ****  * Ç°1ÈÕ¶³½áµÚ¶şÌìÕÙ²â¿ªÊ¼¸Ä£¬
2065:../user/source/DLT645.c ****  * Ç°2ÈÕ¶³½áµÚÈıÌìÕÙ²â¿ªÊ¼¸Ä£¬
2066:../user/source/DLT645.c ****  * Ç°3ÈÕ¶«½áµÚËÄÌìÕÙ²â¿ªÊ¼¸Ä
2067:../user/source/DLT645.c ****  * ÈôÉÏµç3ÈÕÄÚ£¬Ç°1ÈÕ¡¢Ç°2ÈÕ¡¢Ç°3ÈÕ¶³½áÃ¿ÌìÕÙ²âµÄ´ÎÊı²»È«ÊÇÒ»´Î£¬ÔòÎŞ·¨
2068:../user/source/DLT645.c ****  * ÊµÏÖ£¬¹Ê²»ĞŞ¸ÄÇ°2ÈÕºÍÇ°3ÈÕ¶³½á
2069:../user/source/DLT645.c ****  *
2070:../user/source/DLT645.c **** 	case ID_05060101:	//ÉÏ1ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£©
2071:../user/source/DLT645.c **** 	case ID_05060102:	//ÉÏ2ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£©
2072:../user/source/DLT645.c **** 	case ID_05060103:	//ÉÏ3ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£© 
2073:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.9
2074:../user/source/DLT645.c ****  **********************************************************************/
2075:../user/source/DLT645.c **** void vDayfrozen_Modifier(uint8_t *pucBuffer) //ĞŞ¸ÄÈÕ¶³½áÊı¾İº¯Êı
2076:../user/source/DLT645.c **** {
2077:../user/source/DLT645.c ****     uint32_t energy, energy_F1, energy_F2, energy_F3, energy_F4;
2078:../user/source/DLT645.c ****     uint16_t i;
2079:../user/source/DLT645.c ****     /*ÉÏ1´Î¡¢ÉÏ2´Î¡¢ÉÏ3´ÎÈÕ¶³½áµçÄÜÊı£º¾İ*/
2080:../user/source/DLT645.c ****     if (Dayfrozen_Change_State == 0x00)
2081:../user/source/DLT645.c ****         return;
2082:../user/source/DLT645.c ****     /*2018-6-27 13:27:07£º
2083:../user/source/DLT645.c **** 	 *ÖØÇì·´À¡ÉÏ1ÈÕ¶³½áÕıÏòÓĞ¹¦×ÜÓëËÄ·ÑÂÊÖ®ºÍ²»Ò»ÖÂ£¬
2084:../user/source/DLT645.c **** 	 *Ô­ÒòÎª³ËÒÔ0.9Ê±Ğ¡ÊıµãºóµÚÈıÎ»±»ºöÂÔ£¬
2085:../user/source/DLT645.c **** 	 *ÕıÏòÓĞ¹¦×Ü²»ÔÙ³ËÒÔ0.9£¬Ö±½ÓÀÛ¼ÓËÄ·ÑÂÊĞŞ¸ÄºóµÄÖµ
2086:../user/source/DLT645.c **** 	 *energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);	
2087:../user/source/DLT645.c **** 	 *energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_1DAYFROZEN_ADDR, FLASH_MODIFIED_1DAYFROZEN
2088:../user/source/DLT645.c **** 	 *Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2089:../user/source/DLT645.c **** 	*/
2090:../user/source/DLT645.c **** 
2091:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦¼â·ÑÂÊµçÁ¿*/
2092:../user/source/DLT645.c ****     energy_F1 = Get_Energy(pucBuffer[18], pucBuffer[19], pucBuffer[20], pucBuffer[21]);
2093:../user/source/DLT645.c ****     energy_F1 = vNow_Frozen_Modify_Mothod(energy_F1, FLASH_REAL_1DAYFROZEN_ADDR + 4, FLASH_MODIFIED
2094:../user/source/DLT645.c ****     Fill_Energy(energy_F1, &pucBuffer[18], &pucBuffer[19], &pucBuffer[20], &pucBuffer[21]);
2095:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦·å·ÑÂÊµçÁ¿*/
2096:../user/source/DLT645.c ****     energy_F2 = Get_Energy(pucBuffer[22], pucBuffer[23], pucBuffer[24], pucBuffer[25]);
2097:../user/source/DLT645.c ****     energy_F2 = vNow_Frozen_Modify_Mothod(energy_F2, FLASH_REAL_1DAYFROZEN_ADDR + 8, FLASH_MODIFIED
2098:../user/source/DLT645.c ****     Fill_Energy(energy_F2, &pucBuffer[22], &pucBuffer[23], &pucBuffer[24], &pucBuffer[25]);
2099:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦Æ½·ÑÂÊµçÁ¿*/
2100:../user/source/DLT645.c ****     energy_F3 = Get_Energy(pucBuffer[26], pucBuffer[27], pucBuffer[28], pucBuffer[29]);
2101:../user/source/DLT645.c ****     energy_F3 = vNow_Frozen_Modify_Mothod(energy_F3, FLASH_REAL_1DAYFROZEN_ADDR + 12, FLASH_MODIFIE
2102:../user/source/DLT645.c ****     Fill_Energy(energy_F3, &pucBuffer[26], &pucBuffer[27], &pucBuffer[28], &pucBuffer[29]);
2103:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦¹È·ÑÂÊµçÁ¿*/
2104:../user/source/DLT645.c ****     energy_F4 = Get_Energy(pucBuffer[30], pucBuffer[31], pucBuffer[32], pucBuffer[33]);
2105:../user/source/DLT645.c ****     energy_F4 = vNow_Frozen_Modify_Mothod(energy_F4, FLASH_REAL_1DAYFROZEN_ADDR + 16, FLASH_MODIFIE
2106:../user/source/DLT645.c ****     Fill_Energy(energy_F4, &pucBuffer[30], &pucBuffer[31], &pucBuffer[32], &pucBuffer[33]);
2107:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×ÜµçÁ¿*/
2108:../user/source/DLT645.c ****     /*»ñÈ¡ÉÏÒ»ÈÕÕæÊµÖµ*/
2109:../user/source/DLT645.c ****     energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);
2110:../user/source/DLT645.c ****     /*´æ´¢ÕæÊµÖµ*/
2111:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_REAL_1DAYFROZEN_ADDR, energy);
2112:../user/source/DLT645.c ****     /*¼ÆËãĞŞ¸ÄºóµÄÖµ*/
2113:../user/source/DLT645.c ****     energy = energy_F1 + energy_F2 + energy_F3 + energy_F4;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 71


2114:../user/source/DLT645.c ****     /*´æ´¢ĞŞ¸ÄºóµÄÖµ*/
2115:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_MODIFIED_1DAYFROZEN_ADDR, energy);
2116:../user/source/DLT645.c ****     /*×éÖ¡*/
2117:../user/source/DLT645.c ****     Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2118:../user/source/DLT645.c **** 
2119:../user/source/DLT645.c ****     pucBuffer[34] = 0;
2120:../user/source/DLT645.c ****     for (i = 0; i < 34; i++)
2121:../user/source/DLT645.c ****     {
2122:../user/source/DLT645.c ****         pucBuffer[34] += pucBuffer[i];
2123:../user/source/DLT645.c ****     }
2124:../user/source/DLT645.c ****     pucBuffer[35] = 0x16;
2125:../user/source/DLT645.c **** }
2126:../user/source/DLT645.c **** 
2127:../user/source/DLT645.c **** /********************************************************************
2128:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½áËãÈÕÕıÏòÓĞ¹¦µçÁ¿Êı¾İµ÷Õû²ßÂÔ
2129:../user/source/DLT645.c ****  * Êä    Èë£º
2130:../user/source/DLT645.c ****  * Êä    ³ö£º
2131:../user/source/DLT645.c ****  * Ëµ    Ã÷£º½áËãÈÕµçÁ¿ÎªÔö¼ÓÖµ£¬¿ÉÒÔÖ±½Ó°´±ÈÀıËõĞ¡
2132:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2133:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.9.6
2134:../user/source/DLT645.c ****  **********************************************************************/
2135:../user/source/DLT645.c **** uint32_t vAccountEnergy_Modify_Mothod(uint32_t dayfrozen)
2136:../user/source/DLT645.c **** {
2137:../user/source/DLT645.c ****     uint64_t i;
2138:../user/source/DLT645.c ****     i = (uint64_t)dayfrozen * ucDayfrozen_Modify_Ratio;
2139:../user/source/DLT645.c ****     return (uint32_t)(i / 100);
2140:../user/source/DLT645.c **** }
2141:../user/source/DLT645.c **** 
2142:../user/source/DLT645.c **** /********************************************************************
2143:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½áËãÈÕÕıÏòÓĞ¹¦µçÁ¿Êı¾İĞŞ¸Äº¯Êı
2144:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2145:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
2146:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2147:../user/source/DLT645.c ****  *
2148:../user/source/DLT645.c **** 		case ID_00010001:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦×ÜµçÄÜ
2149:../user/source/DLT645.c **** 		case ID_00010101:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜ
2150:../user/source/DLT645.c **** 		case ID_00010201:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ2µçÄÜ 
2151:../user/source/DLT645.c **** 		case ID_00010301:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ3µçÄÜ
2152:../user/source/DLT645.c **** 		case ID_00010401:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ4µçÄÜ
2153:../user/source/DLT645.c **** 		case ID_0001FF01:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦µçÄÜÊı¾İ¿é
2154:../user/source/DLT645.c **** 		case ID_00150001:	//ÉÏ1½áËãÈÕAÏàÕıÏòÓĞ¹¦µçÄÜ
2155:../user/source/DLT645.c **** 		case ID_00290001:	//ÉÏ1½áËãÈÕBÏàÕıÏòÓĞ¹¦µçÄÜ
2156:../user/source/DLT645.c **** 		case ID_003D0001:	//ÉÏ1½áËãÈÕCÏàÕıÏòÓĞ¹¦µçÄÜ
2157:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.9.6
2158:../user/source/DLT645.c ****  **********************************************************************/
2159:../user/source/DLT645.c **** void vAccountEnergy_Modify(uint8_t *pucBuffer)
2160:../user/source/DLT645.c **** {
2161:../user/source/DLT645.c ****     int energy;
2162:../user/source/DLT645.c ****     uint16_t i;
2163:../user/source/DLT645.c ****     if (Dayfrozen_Change_State == 0x00)
2164:../user/source/DLT645.c ****         return;
2165:../user/source/DLT645.c ****     if (pucBuffer[11] == 0x32)
2166:../user/source/DLT645.c ****     {
2167:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦×ÜµçÁ¿*/
2168:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);
2169:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2170:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 72


2171:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦¼â·ÑÂÊµçÁ¿*/
2172:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[18], pucBuffer[19], pucBuffer[20], pucBuffer[21]);
2173:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2174:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[18], &pucBuffer[19], &pucBuffer[20], &pucBuffer[21]);
2175:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦·å·ÑÂÊµçÁ¿*/
2176:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[22], pucBuffer[23], pucBuffer[24], pucBuffer[25]);
2177:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2178:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[22], &pucBuffer[23], &pucBuffer[24], &pucBuffer[25]);
2179:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦Æ½·ÑÂÊµçÁ¿*/
2180:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[26], pucBuffer[27], pucBuffer[28], pucBuffer[29]);
2181:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2182:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[26], &pucBuffer[27], &pucBuffer[28], &pucBuffer[29]);
2183:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦¹È·ÑÂÊµçÁ¿*/
2184:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[30], pucBuffer[31], pucBuffer[32], pucBuffer[33]);
2185:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2186:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[30], &pucBuffer[31], &pucBuffer[32], &pucBuffer[33]);
2187:../user/source/DLT645.c **** 
2188:../user/source/DLT645.c ****         pucBuffer[34] = 0;
2189:../user/source/DLT645.c ****         for (i = 0; i < 34; i++)
2190:../user/source/DLT645.c ****         {
2191:../user/source/DLT645.c ****             pucBuffer[34] += pucBuffer[i];
2192:../user/source/DLT645.c ****         }
2193:../user/source/DLT645.c ****         pucBuffer[35] = 0x16;
2194:../user/source/DLT645.c ****     }
2195:../user/source/DLT645.c ****     else
2196:../user/source/DLT645.c ****     {
2197:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);
2198:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2199:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2200:../user/source/DLT645.c **** 
2201:../user/source/DLT645.c ****         pucBuffer[18] = 0;
2202:../user/source/DLT645.c ****         for (i = 0; i < 18; i++)
2203:../user/source/DLT645.c ****         {
2204:../user/source/DLT645.c ****             pucBuffer[18] += pucBuffer[i];
2205:../user/source/DLT645.c ****         }
2206:../user/source/DLT645.c ****         pucBuffer[19] = 0x16;
2207:../user/source/DLT645.c ****     }
2208:../user/source/DLT645.c **** }
2209:../user/source/DLT645.c **** 
2210:../user/source/DLT645.c **** /********************************************************************
2211:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä½ûÄÜ/Ê¹ÄÜ
2212:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2213:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
2214:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2215:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2216:../user/source/DLT645.c ****  **********************************************************************/
2217:../user/source/DLT645.c **** void vEnergy_Modify_AbleSet(uint8_t *pucBuffer)
2218:../user/source/DLT645.c **** {
2219:../user/source/DLT645.c ****     uint16_t i;
2220:../user/source/DLT645.c ****     if (pucBuffer[14] == 0xFF) //Ê¹ÄÜ
2221:../user/source/DLT645.c ****     {
2222:../user/source/DLT645.c ****         Dayfrozen_Change_State = pucBuffer[14];
2223:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZENCHANGESTATE_ADDR, Dayfrozen_Change_State);
2224:../user/source/DLT645.c ****         pucBuffer[8] = (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == Dayfrozen_Change_State
2225:../user/source/DLT645.c ****                             ? 0x94
2226:../user/source/DLT645.c ****                             : 0xD4);
2227:../user/source/DLT645.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 73


2228:../user/source/DLT645.c ****     else if (pucBuffer[14] == 0x00) //½û£ºÄÜ
2229:../user/source/DLT645.c ****     {
2230:../user/source/DLT645.c ****         /*Çå¿Õ´æ´¢µÄµçÁ¿Öµ*/
2231:../user/source/DLT645.c ****         FLASH_Unlock();
2232:../user/source/DLT645.c ****         FLASH_ErasePage(FLASH_ENERGY_PAGE);
2233:../user/source/DLT645.c ****         FLASH_Lock();
2234:../user/source/DLT645.c ****         Dayfrozen_Change_State = pucBuffer[14];
2235:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZENCHANGESTATE_ADDR, Dayfrozen_Change_State);
2236:../user/source/DLT645.c ****         pucBuffer[8] = (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == Dayfrozen_Change_State
2237:../user/source/DLT645.c ****                             ? 0x94
2238:../user/source/DLT645.c ****                             : 0xD4);
2239:../user/source/DLT645.c ****     }
2240:../user/source/DLT645.c ****     else
2241:../user/source/DLT645.c ****     {
2242:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
2243:../user/source/DLT645.c ****     }
2244:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
2245:../user/source/DLT645.c ****     pucBuffer[10] = 0;
2246:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
2247:../user/source/DLT645.c ****     {
2248:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
2249:../user/source/DLT645.c ****     }
2250:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
2251:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2252:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
2253:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
2254:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
2255:../user/source/DLT645.c ****     {
2256:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2257:../user/source/DLT645.c ****     }
2258:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
2259:../user/source/DLT645.c **** #ifdef ENABLE_INFR
2260:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 12);
2261:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
2262:../user/source/DLT645.c ****     {
2263:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2264:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2265:../user/source/DLT645.c ****     }
2266:../user/source/DLT645.c **** #endif
2267:../user/source/DLT645.c **** }
2268:../user/source/DLT645.c **** 
2269:../user/source/DLT645.c **** /********************************************************************
2270:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä±ÈÀıÉèÖÃ
2271:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2272:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2273:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2274:../user/source/DLT645.c ****  * ĞŞ¸Ä¼ÇÂ¼£ºĞŞ¸Ä±ÈÀı¸ÄÎªÓÃÁ½¸ö×Ö½Ú±íÊ¾£¬BCDÂë£¬µÍ×Ö½ÚÔÚÇ°£¬¸ß×Ö½ÚÔÚºó
2275:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2276:../user/source/DLT645.c ****  **********************************************************************/
2277:../user/source/DLT645.c **** void vEnergy_Modify_RaitoSet(uint8_t *pucBuffer)
2278:../user/source/DLT645.c **** {
2279:../user/source/DLT645.c ****     uint8_t ratio;
2280:../user/source/DLT645.c ****     bool ratioValid;
2281:../user/source/DLT645.c ****     uint16_t i;
2282:../user/source/DLT645.c **** 
2283:../user/source/DLT645.c ****     /*ratio = BCD2DEC(pucBuffer[14]);*/
2284:../user/source/DLT645.c ****     //68 AA AA AA AA AA AA 68 91 05 33 74 34 33 20 01 00 16  120%
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 74


2285:../user/source/DLT645.c ****     ratio = BCD2DEC(pucBuffer[14]) + BCD2DEC(pucBuffer[15]) * 100;
2286:../user/source/DLT645.c ****     ratioValid = (ratio > 0 && ratio <= 255);
2287:../user/source/DLT645.c ****     if (ratioValid)
2288:../user/source/DLT645.c ****     {
2289:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR, ratio);
2290:../user/source/DLT645.c ****         ucDayfrozen_Modify_Ratio = ratio;
2291:../user/source/DLT645.c ****         if (EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR) == ratio)
2292:../user/source/DLT645.c ****         {
2293:../user/source/DLT645.c ****             pucBuffer[8] = 0x94;
2294:../user/source/DLT645.c ****         }
2295:../user/source/DLT645.c ****         else
2296:../user/source/DLT645.c ****         {
2297:../user/source/DLT645.c ****             pucBuffer[8] = 0xD4;
2298:../user/source/DLT645.c ****         }
2299:../user/source/DLT645.c ****     }
2300:../user/source/DLT645.c ****     else
2301:../user/source/DLT645.c ****     {
2302:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
2303:../user/source/DLT645.c ****     }
2304:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
2305:../user/source/DLT645.c ****     pucBuffer[10] = 0;
2306:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
2307:../user/source/DLT645.c ****     {
2308:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
2309:../user/source/DLT645.c ****     }
2310:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
2311:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2312:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
2313:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
2314:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
2315:../user/source/DLT645.c ****     {
2316:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2317:../user/source/DLT645.c ****     }
2318:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
2319:../user/source/DLT645.c **** #ifdef ENABLE_INFR
2320:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 12);
2321:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
2322:../user/source/DLT645.c ****     {
2323:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2324:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2325:../user/source/DLT645.c ****     }
2326:../user/source/DLT645.c **** #endif
2327:../user/source/DLT645.c **** }
2328:../user/source/DLT645.c **** 
2329:../user/source/DLT645.c **** /********************************************************************
2330:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÕıÏòÓĞ¹¦µçÄÜÁ¿»Ö¸´³ö³§ÉèÖÃ
2331:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2332:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2333:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2334:../user/source/DLT645.c ****  * ĞŞ¸Ä¼ÇÂ¼£º³ÌĞòĞèÖ§³ÖµçÄÜÁ¿µ÷¸ß£¬ËùÒÔ¸´Î»Ê±ÈÕ¶³½áĞŞ¸Ä±ÈÀı£¬²»ÔÙ¸´Î»:2018Äê11ÔÂ5ÈÕ16:11:34
2335:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2336:../user/source/DLT645.c ****  **********************************************************************/
2337:../user/source/DLT645.c **** void vEnergy_Modify_Reset(uint8_t *pucBuffer)
2338:../user/source/DLT645.c **** {
2339:../user/source/DLT645.c ****     bool cmdValid;
2340:../user/source/DLT645.c ****     uint16_t i;
2341:../user/source/DLT645.c **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 75


2342:../user/source/DLT645.c ****     cmdValid = (pucBuffer[14] == 0x00);
2343:../user/source/DLT645.c ****     if (cmdValid)
2344:../user/source/DLT645.c ****     {
2345:../user/source/DLT645.c ****         /*µçÄÜĞŞ¸ÄÊ¹ÄÜ*/
2346:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZENCHANGESTATE_ADDR, 0xff);
2347:../user/source/DLT645.c ****         Dayfrozen_Change_State = 0xff;
2348:../user/source/DLT645.c ****         /*ÈÕ¶³½áĞŞ¸Ä±ÈÀıÉèÖÃÎª90*/
2349:../user/source/DLT645.c ****         /*Flash_Write_Word(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR, 90);*/
2350:../user/source/DLT645.c ****         /*ucDayfrozen_Modify_Ratio = 90;*/
2351:../user/source/DLT645.c ****         /*É¾³ı´æ´¢µÄÔ­Ê¼ºÍĞŞ¸ÄºóµÄµçÁ¿Öµ£¨²Á³ı´æ´¢Ò³£©*/
2352:../user/source/DLT645.c ****         FLASH_Unlock();
2353:../user/source/DLT645.c ****         FLASH_ErasePage(FLASH_ENERGY_PAGE);
2354:../user/source/DLT645.c ****         FLASH_Lock();
2355:../user/source/DLT645.c ****         if ( //(EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR) == 90) &&
2356:../user/source/DLT645.c ****             (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == 0xff))
2357:../user/source/DLT645.c ****         {
2358:../user/source/DLT645.c ****             pucBuffer[8] = 0x94;
2359:../user/source/DLT645.c ****         }
2360:../user/source/DLT645.c ****         else
2361:../user/source/DLT645.c ****         {
2362:../user/source/DLT645.c ****             pucBuffer[8] = 0xD4;
2363:../user/source/DLT645.c ****         }
2364:../user/source/DLT645.c ****     }
2365:../user/source/DLT645.c ****     else
2366:../user/source/DLT645.c ****     {
2367:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
2368:../user/source/DLT645.c ****     }
2369:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
2370:../user/source/DLT645.c ****     pucBuffer[10] = 0;
2371:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
2372:../user/source/DLT645.c ****     {
2373:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
2374:../user/source/DLT645.c ****     }
2375:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
2376:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2377:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
2378:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
2379:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
2380:../user/source/DLT645.c ****     {
2381:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2382:../user/source/DLT645.c ****     }
2383:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
2384:../user/source/DLT645.c **** #ifdef ENABLE_INFR
2385:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 12);
2386:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
2387:../user/source/DLT645.c ****     {
2388:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2389:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2390:../user/source/DLT645.c ****     }
2391:../user/source/DLT645.c **** #endif
2392:../user/source/DLT645.c **** }
2393:../user/source/DLT645.c **** #if 1
2394:../user/source/DLT645.c **** /********************************************************************
2395:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÕıÏòÓĞ¹¦µçÄÜÁ¿²éÑ¯ĞŞ¸Ä±ÈÀı
2396:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2397:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2398:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 76


2399:../user/source/DLT645.c ****  * ĞŞ¸Ä¼ÇÂ¼£º
2400:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018-11-5 16:12:03
2401:../user/source/DLT645.c ****  **********************************************************************/
2402:../user/source/DLT645.c **** void vEnergy_Modify_ReadSet(uint8_t *pucbuffer)
2403:../user/source/DLT645.c **** {
2404:../user/source/DLT645.c ****     //68 AA AA AA AA AA AA 68 91 04 33 76 34 33 71 16
2405:../user/source/DLT645.c ****     uint8_t ratio;
2406:../user/source/DLT645.c ****     uint32_t i;
2407:../user/source/DLT645.c ****     if (pucbuffer[8] != 0x91)
2408:../user/source/DLT645.c ****         return;
2409:../user/source/DLT645.c ****     //pucbuffer[8] = 0x11;
2410:../user/source/DLT645.c ****     pucbuffer[9] = 0x06;
2411:../user/source/DLT645.c ****     //ratio = EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR);
2412:../user/source/DLT645.c ****     ratio = ucDayfrozen_Modify_Ratio;
2413:../user/source/DLT645.c **** 
2414:../user/source/DLT645.c ****     pucbuffer[14] = DEC2BCD(ratio % 100); //µÍÎ»ÔÚÇ°
2415:../user/source/DLT645.c ****     pucbuffer[15] = DEC2BCD(ratio / 100); //¸ßÎ»ÔÚºó
2416:../user/source/DLT645.c ****     pucbuffer[16] = 0;
2417:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
2418:../user/source/DLT645.c ****     {
2419:../user/source/DLT645.c ****         pucbuffer[16] += pucbuffer[i];
2420:../user/source/DLT645.c ****     }
2421:../user/source/DLT645.c ****     pucbuffer[17] = 0x16;
2422:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2423:../user/source/DLT645.c ****     uc645DataDomainLength = 4;
2424:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, &ucDrv_Buf_Uart3_Snd, 18);
2425:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
2426:../user/source/DLT645.c ****     {
2427:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2428:../user/source/DLT645.c ****     }
2429:../user/source/DLT645.c **** #ifdef ENABLE_INFR
2430:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
2431:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, &ucDrv_Buf_Uart2_Snd, 18);
2432:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
2433:../user/source/DLT645.c ****     {
2434:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2435:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2436:../user/source/DLT645.c ****     }
2437:../user/source/DLT645.c **** #endif
2438:../user/source/DLT645.c **** }
2439:../user/source/DLT645.c **** #endif
2440:../user/source/DLT645.c **** /********************************************************************
2441:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º²éÑ¯ÈÕ¶³½áÕıÏòÓĞ¹¦×Üµ±Ç°ÕæÊµÖµºÍĞŞ¸ÄÖµ
2442:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2443:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2444:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2445:../user/source/DLT645.c ****  * ĞŞ¸Ä¼ÇÂ¼£º
2446:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018-11-5 16:12:03
2447:../user/source/DLT645.c ****  **********************************************************************/
2448:../user/source/DLT645.c **** void vEnergy_Modify_ReadValue(uint8_t *pucbuffer)
2449:../user/source/DLT645.c **** {
2450:../user/source/DLT645.c ****     uint8_t i;
2451:../user/source/DLT645.c ****     int dayFrozen;
2452:../user/source/DLT645.c ****     uint32_t realValue;
2453:../user/source/DLT645.c ****     uint32_t modifiedValue;
2454:../user/source/DLT645.c **** 
2455:../user/source/DLT645.c ****     pucbuffer[8] = 0x91;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 77


2456:../user/source/DLT645.c ****     pucbuffer[9] = 0x0C;
2457:../user/source/DLT645.c **** 
2458:../user/source/DLT645.c ****     /*¶ÁÈ¡´æ´¢µÄÉÏ´ÎÕæÊµÖµºÍĞŞ¸ÄÖµ*/
2459:../user/source/DLT645.c ****     realValue = Flash_Read_Word(FLASH_REAL_1DAYFROZEN_ADDR + 4);
2460:../user/source/DLT645.c ****     modifiedValue = Flash_Read_Word(FLASH_MODIFIED_1DAYFROZEN_ADDR + 4);
2461:../user/source/DLT645.c ****     /*ÖÕ¶ËµÚÒ»´ÎÊ¹ÓÃ*/
2462:../user/source/DLT645.c ****     if (realValue == 0XFFFFFFFF)
2463:../user/source/DLT645.c ****     {
2464:../user/source/DLT645.c ****         realValue = 0;
2465:../user/source/DLT645.c ****     }
2466:../user/source/DLT645.c ****     Fill_Energy(realValue, &pucbuffer[14], &pucbuffer[15], &pucbuffer[16], &pucbuffer[17]);
2467:../user/source/DLT645.c ****     if (modifiedValue == 0XFFFFFFFF)
2468:../user/source/DLT645.c ****     {
2469:../user/source/DLT645.c ****         modifiedValue = 0;
2470:../user/source/DLT645.c ****     }
2471:../user/source/DLT645.c ****     Fill_Energy(modifiedValue, &pucbuffer[18], &pucbuffer[19], &pucbuffer[20], &pucbuffer[21]);
2472:../user/source/DLT645.c ****     pucbuffer[22] = 0;
2473:../user/source/DLT645.c ****     for (i = 0; i < 22; i++)
2474:../user/source/DLT645.c ****     {
2475:../user/source/DLT645.c ****         pucbuffer[22] += pucbuffer[i];
2476:../user/source/DLT645.c ****     }
2477:../user/source/DLT645.c ****     pucbuffer[23] = 0x16;
2478:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2479:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
2480:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, &ucDrv_Buf_Uart3_Snd, 24);
2481:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
2482:../user/source/DLT645.c ****     {
2483:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2484:../user/source/DLT645.c ****     }
2485:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
2486:../user/source/DLT645.c **** #ifdef ENABLE_INFR
2487:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, &ucDrv_Buf_Uart2_Snd, 24);
2488:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
2489:../user/source/DLT645.c ****     {
2490:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2491:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2492:../user/source/DLT645.c ****     }
2493:../user/source/DLT645.c **** #endif
2494:../user/source/DLT645.c **** }
2495:../user/source/DLT645.c **** 
2496:../user/source/DLT645.c **** /********************************************************************
2497:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ºÏ¸ñÉÏÏŞĞŞ¸Äº¯Êı£¨ºìÍâ¿ÚÊÕÖ¡´¦Àí£©
2498:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2499:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2500:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2501:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2502:../user/source/DLT645.c ****  **********************************************************************/
2503:../user/source/DLT645.c **** void vVoltage_SetMaxValue(uint8_t *pucBuffer)
2504:../user/source/DLT645.c **** {
2505:../user/source/DLT645.c ****     int VMAX = 0;
2506:../user/source/DLT645.c ****     uint16_t i = 0;
2507:../user/source/DLT645.c ****     VMAX = Get_Voltage(pucBuffer[14], pucBuffer[15]);
2508:../user/source/DLT645.c ****     if (VMAX > 2200)
2509:../user/source/DLT645.c ****     {
2510:../user/source/DLT645.c ****         Voltage_MAX = VMAX;
2511:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX1_Addr, pucBuffer[14]);
2512:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX2_Addr, pucBuffer[15]);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 78


2513:../user/source/DLT645.c ****         if (((uint8_t)Flash_Read_Word(FLASH_VMAX1_Addr) == pucBuffer[14]) &&
2514:../user/source/DLT645.c ****             ((uint8_t)Flash_Read_Word(FLASH_VMAX2_Addr) == pucBuffer[15]))
2515:../user/source/DLT645.c ****         {
2516:../user/source/DLT645.c ****             pucBuffer[8] = 0x94; //ÉèÖÃ³É¹¦±êÖ¾
2517:../user/source/DLT645.c ****         }
2518:../user/source/DLT645.c ****         else
2519:../user/source/DLT645.c ****         {
2520:../user/source/DLT645.c ****             pucBuffer[8] = 0xD4;
2521:../user/source/DLT645.c ****         }
2522:../user/source/DLT645.c ****     }
2523:../user/source/DLT645.c ****     else
2524:../user/source/DLT645.c ****     {
2525:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
2526:../user/source/DLT645.c ****     }
2527:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
2528:../user/source/DLT645.c ****     pucBuffer[10] = 0;
2529:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
2530:../user/source/DLT645.c ****     {
2531:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
2532:../user/source/DLT645.c ****     }
2533:../user/source/DLT645.c ****     pucBuffer[11] = 0x16; //½áÊø·û
2534:../user/source/DLT645.c **** #ifdef ENABLE_INFR
2535:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 12);
2536:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
2537:../user/source/DLT645.c ****     {
2538:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2539:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2540:../user/source/DLT645.c ****     }
2541:../user/source/DLT645.c **** #endif
2542:../user/source/DLT645.c **** }
2543:../user/source/DLT645.c **** /********************************************************************
2544:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ºÏ¸ñÏÂÏŞĞŞ¸Äº¯Êı£¨ºìÍâ¿ÚÊÕÖ¡´¦Àí£º£©
2545:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2546:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2547:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2548:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2549:../user/source/DLT645.c ****  **********************************************************************/
2550:../user/source/DLT645.c **** void vVoltage_SetMinValue(uint8_t *pucBuffer)
2551:../user/source/DLT645.c **** {
2552:../user/source/DLT645.c ****     int VMIN = 0;
2553:../user/source/DLT645.c ****     uint16_t i = 0;
2554:../user/source/DLT645.c ****     VMIN = Get_Voltage(pucBuffer[14], pucBuffer[15]);
2555:../user/source/DLT645.c ****     if (VMIN < 2200)
2556:../user/source/DLT645.c ****     {
2557:../user/source/DLT645.c ****         Voltage_MIN = VMIN;
2558:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN1_Addr, pucBuffer[14]);
2559:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN2_Addr, pucBuffer[15]);
2560:../user/source/DLT645.c ****         if ((EEProm_Read(FLASH_VMIN1_Addr) == pucBuffer[14]) &&
2561:../user/source/DLT645.c ****             (EEProm_Read(FLASH_VMIN2_Addr) == pucBuffer[15]))
2562:../user/source/DLT645.c ****         {
2563:../user/source/DLT645.c ****             pucBuffer[8] = 0x94; //ÉèÖÃ³É¹¦±êÖ¾
2564:../user/source/DLT645.c ****         }
2565:../user/source/DLT645.c ****         else
2566:../user/source/DLT645.c ****         {
2567:../user/source/DLT645.c ****             pucBuffer[8] = 0xD4;
2568:../user/source/DLT645.c ****         }
2569:../user/source/DLT645.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 79


2570:../user/source/DLT645.c ****     else
2571:../user/source/DLT645.c ****     {
2572:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
2573:../user/source/DLT645.c ****     }
2574:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
2575:../user/source/DLT645.c ****     pucBuffer[10] = 0;
2576:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
2577:../user/source/DLT645.c ****     {
2578:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
2579:../user/source/DLT645.c ****     }
2580:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
2581:../user/source/DLT645.c **** #ifdef ENABLE_INFR
2582:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 12);
2583:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
2584:../user/source/DLT645.c ****     {
2585:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2586:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2587:../user/source/DLT645.c ****     }
2588:../user/source/DLT645.c **** #endif
2589:../user/source/DLT645.c **** }
2590:../user/source/DLT645.c **** 
2591:../user/source/DLT645.c **** /********************************************************************
2592:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ĞŞ¸ÄÉÏÏŞĞŞ¸Äº¯Êı£¨ºìÍâ¿ÚÊÕÖ¡´¦Àí£º£©
2593:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2594:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2595:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2596:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2597:../user/source/DLT645.c ****  **********************************************************************/
2598:../user/source/DLT645.c **** void vVoltage_SetMaxMaxValue(uint8_t *pucBuffer)
2599:../user/source/DLT645.c **** {
 1829              		.loc 1 2599 0
 1830              		.cfi_startproc
 1831              		@ args = 0, pretend = 0, frame = 0
 1832              		@ frame_needed = 0, uses_anonymous_args = 0
 1833              		@ link register save eliminated.
 1834              	.LVL224:
 1835 0000 7047     		bx	lr
 1836              		.cfi_endproc
 1837              	.LFE159:
 1839 0002 00BF     		.section	.text.vVoltage_SetMinMinValue,"ax",%progbits
 1840              		.align	2
 1841              		.global	vVoltage_SetMinMinValue
 1842              		.thumb
 1843              		.thumb_func
 1845              	vVoltage_SetMinMinValue:
 1846              	.LFB160:
2600:../user/source/DLT645.c **** }
2601:../user/source/DLT645.c **** /********************************************************************
2602:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ĞŞ¸ÄÏÂÏŞĞŞ¸Äº¯Êı£¨ºìÍâ¿ÚÊÕÖ¡´¦Àí£º£©
2603:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2604:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2605:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2606:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2607:../user/source/DLT645.c ****  **********************************************************************/
2608:../user/source/DLT645.c **** void vVoltage_SetMinMinValue(uint8_t *pucBuffer)
2609:../user/source/DLT645.c **** {
 1847              		.loc 1 2609 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 80


 1848              		.cfi_startproc
 1849              		@ args = 0, pretend = 0, frame = 0
 1850              		@ frame_needed = 0, uses_anonymous_args = 0
 1851              		@ link register save eliminated.
 1852              	.LVL225:
 1853 0000 7047     		bx	lr
 1854              		.cfi_endproc
 1855              	.LFE160:
 1857 0002 00BF     		.section	.text.vLoadProfile_Voltage_Modify,"ax",%progbits
 1858              		.align	2
 1859              		.global	vLoadProfile_Voltage_Modify
 1860              		.thumb
 1861              		.thumb_func
 1863              	vLoadProfile_Voltage_Modify:
 1864              	.LFB161:
2610:../user/source/DLT645.c **** }
2611:../user/source/DLT645.c **** #if 0
2612:../user/source/DLT645.c **** /********************************************************************
2613:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º¶ÁÈ¡µçÁ¿ĞŞ¸Ä²ÎÊı£ºÊÇ·ñĞŞ¸Ä/ĞŞ¸Ä±ÈÀı
2614:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2615:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2616:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2617:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2618:../user/source/DLT645.c ****  **********************************************************************/
2619:../user/source/DLT645.c **** void vEnergy_Modify_ReadSet(uint8_t *pucBuffer)
2620:../user/source/DLT645.c **** {
2621:../user/source/DLT645.c ****     uint16_t i;
2622:../user/source/DLT645.c ****     uint8_t tRatio;
2623:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
2624:../user/source/DLT645.c ****     pucBuffer[9] = 0x06;
2625:../user/source/DLT645.c ****     pucBuffer[14] = (uint8_t)Flash_Read_Word(FLASH_DAYFROZENCHANGESTATE_ADDR);
2626:../user/source/DLT645.c ****     tRatio = (uint8_t)Flash_Read_Word(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR);
2627:../user/source/DLT645.c ****     pucBuffer[15] = DEC2BCD(tRatio);
2628:../user/source/DLT645.c ****     pucBuffer[16] = 0;
2629:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
2630:../user/source/DLT645.c ****     {
2631:../user/source/DLT645.c ****         pucBuffer[16] += pucBuffer[i];
2632:../user/source/DLT645.c ****     }
2633:../user/source/DLT645.c ****     pucBuffer[17] = 0x16;
2634:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2635:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
2636:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 18);
2637:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
2638:../user/source/DLT645.c ****     {
2639:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2640:../user/source/DLT645.c ****     }
2641:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
2642:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 18);
2643:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
2644:../user/source/DLT645.c ****     {
2645:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2646:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2647:../user/source/DLT645.c ****     }
2648:../user/source/DLT645.c **** }
2649:../user/source/DLT645.c **** #endif
2650:../user/source/DLT645.c **** 
2651:../user/source/DLT645.c **** /********************************************************************
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 81


2652:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º¸ººÉ¼ÇÂ¼Á¬Ğø³­¶ÁµçÑ¹Êı¾İĞŞ¸Äº¯Êı
2653:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2654:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
2655:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2656:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ7ÈÕ21:08:05
2657:../user/source/DLT645.c ****  * µÚÒ»Ö¡£º68 AA AA AA AA AA AA 68 91 0X 32 34 43 39 mm hh DD MM YY 11 11 11 11 11 11 22 22 22 22 2
2658:../user/source/DLT645.c ****  *                                 B1
2659:../user/source/DLT645.c ****  * ºóĞøÖ¡£º68 AA AA AA AA AA AA 68 92 0X 32 34 43 39 11 11 11 11 22 22 22 22 33 33 33 33 44 44 44 4
2660:../user/source/DLT645.c ****  *                                 B2 04             cs 16
2661:../user/source/DLT645.c ****  **********************************************************************/
2662:../user/source/DLT645.c **** void vLoadProfile_Voltage_Modify(uint8_t *pucbuffer)
2663:../user/source/DLT645.c **** {
 1865              		.loc 1 2663 0
 1866              		.cfi_startproc
 1867              		@ args = 0, pretend = 0, frame = 0
 1868              		@ frame_needed = 0, uses_anonymous_args = 0
 1869              	.LVL226:
 1870              		.loc 1 2663 0
 1871 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1872              	.LCFI20:
 1873              		.cfi_def_cfa_offset 40
 1874              		.cfi_offset 3, -40
 1875              		.cfi_offset 4, -36
 1876              		.cfi_offset 5, -32
 1877              		.cfi_offset 6, -28
 1878              		.cfi_offset 7, -24
 1879              		.cfi_offset 8, -20
 1880              		.cfi_offset 9, -16
 1881              		.cfi_offset 10, -12
 1882              		.cfi_offset 11, -8
 1883              		.cfi_offset 14, -4
 1884 0004 0646     		mov	r6, r0
 1885              	.LVL227:
2664:../user/source/DLT645.c ****     uint16_t n = 0; //Êı¾İ¿é¸öÊı
2665:../user/source/DLT645.c ****     uint16_t length = pucbuffer[9];
 1886              		.loc 1 2665 0
 1887 0006 90F80980 		ldrb	r8, [r0, #9]	@ zero_extendqisi2
 1888              	.LVL228:
2666:../user/source/DLT645.c ****     uint16_t ID_length = 0; //Êı¾İÓòÖĞÊı¾İ±êÊ¶³¤¶È
2667:../user/source/DLT645.c ****     uint32_t voltage = 0;
2668:../user/source/DLT645.c ****     uint16_t i = 0;
2669:../user/source/DLT645.c **** 
2670:../user/source/DLT645.c ****     if (pucbuffer[8] == 0x91 || pucbuffer[8] == 0xB1) //ÎŞºóĞøÖ¡£¬»ò·ÖÖ¡µÄµÚÒ»Ö¡
 1889              		.loc 1 2670 0
 1890 000a 027A     		ldrb	r2, [r0, #8]	@ zero_extendqisi2
 1891 000c 912A     		cmp	r2, #145
 1892 000e 03D0     		beq	.L122
 1893              		.loc 1 2670 0 is_stmt 0 discriminator 1
 1894 0010 B12A     		cmp	r2, #177
 1895 0012 03D0     		beq	.L123
2666:../user/source/DLT645.c ****     uint16_t ID_length = 0; //Êı¾İÓòÖĞÊı¾İ±êÊ¶³¤¶È
 1896              		.loc 1 2666 0 is_stmt 1
 1897 0014 0023     		movs	r3, #0
 1898 0016 02E0     		b	.L116
 1899              	.L122:
2671:../user/source/DLT645.c ****     {
2672:../user/source/DLT645.c ****         ID_length = 9; //Êı¾İ±êÊ¶*4 + Ê±±ê*5
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 82


 1900              		.loc 1 2672 0
 1901 0018 0923     		movs	r3, #9
 1902 001a 00E0     		b	.L116
 1903              	.L123:
 1904 001c 0923     		movs	r3, #9
 1905              	.L116:
 1906              	.LVL229:
2673:../user/source/DLT645.c ****     }
2674:../user/source/DLT645.c ****     if (pucbuffer[8] == 0x92 || pucbuffer[8] == 0xB2)
 1907              		.loc 1 2674 0
 1908 001e 922A     		cmp	r2, #146
 1909 0020 02D0     		beq	.L124
 1910              		.loc 1 2674 0 is_stmt 0 discriminator 1
 1911 0022 B22A     		cmp	r2, #178
 1912 0024 03D1     		bne	.L117
 1913 0026 01E0     		b	.L125
 1914              	.L124:
2675:../user/source/DLT645.c ****     {
2676:../user/source/DLT645.c ****         ID_length = 4; //Êı¾İ±êÊ¶*4 £¬ºöÂÔºóÃæµÄSEQ*1£¬Ô­ÒòÎªÕû³ı2ºó½á¹ûÒ»Ñù
 1915              		.loc 1 2676 0 is_stmt 1
 1916 0028 0423     		movs	r3, #4
 1917              	.LVL230:
 1918 002a 00E0     		b	.L117
 1919              	.LVL231:
 1920              	.L125:
 1921 002c 0423     		movs	r3, #4
 1922              	.LVL232:
 1923              	.L117:
2677:../user/source/DLT645.c ****     }
2678:../user/source/DLT645.c ****     n = (length - ID_length) / 2; //µçÑ¹Êı¾İµÄ¸öÊı£¬·ÖÏàºÍ¿éÊı¾İ¶¼ÊÊÓÃ
 1924              		.loc 1 2678 0
 1925 002e 4746     		mov	r7, r8
 1926 0030 9946     		mov	r9, r3
 1927 0032 C3EB0803 		rsb	r3, r3, r8
 1928              	.LVL233:
 1929 0036 03EBD373 		add	r3, r3, r3, lsr #31
 1930 003a C3F34F03 		ubfx	r3, r3, #1, #16
 1931              	.LVL234:
2679:../user/source/DLT645.c ****     while (n--)
 1932              		.loc 1 2679 0
 1933 003e 15E0     		b	.L118
 1934              	.LVL235:
 1935              	.L119:
2680:../user/source/DLT645.c ****     {
2681:../user/source/DLT645.c ****         voltage = Get_Voltage(pucbuffer[10 + ID_length + 2 * n], pucbuffer[11 + ID_length + 2 * n])
 1936              		.loc 1 2681 0
 1937 0040 09F10A04 		add	r4, r9, #10
 1938 0044 4FEA450A 		lsl	r10, r5, #1
 1939 0048 5444     		add	r4, r4, r10
 1940 004a 09F10B03 		add	r3, r9, #11
 1941 004e 9A44     		add	r10, r10, r3
2682:../user/source/DLT645.c ****         voltage = Voltage_Modifier_Method(voltage);
2683:../user/source/DLT645.c ****         pucbuffer[10 + ID_length + 2 * n] = GetLowByte(A_Voltage);
 1942              		.loc 1 2683 0
 1943 0050 DFF84CB0 		ldr	fp, .L127
 1944 0054 DBF80000 		ldr	r0, [fp]
 1945 0058 FFF7FEFF 		bl	GetLowByte
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 83


 1946              	.LVL236:
 1947 005c 3055     		strb	r0, [r6, r4]
2684:../user/source/DLT645.c ****         pucbuffer[11 + ID_length + 2 * n] = GetHighByte(A_Voltage);
 1948              		.loc 1 2684 0
 1949 005e DBF80000 		ldr	r0, [fp]
 1950 0062 FFF7FEFF 		bl	GetHighByte
 1951              	.LVL237:
 1952 0066 06F80A00 		strb	r0, [r6, r10]
2679:../user/source/DLT645.c ****     {
 1953              		.loc 1 2679 0
 1954 006a 2B46     		mov	r3, r5
 1955              	.LVL238:
 1956              	.L118:
 1957 006c 5D1E     		subs	r5, r3, #1
 1958 006e ADB2     		uxth	r5, r5
 1959              	.LVL239:
 1960 0070 002B     		cmp	r3, #0
 1961 0072 E5D1     		bne	.L119
2685:../user/source/DLT645.c ****     }
2686:../user/source/DLT645.c ****     pucbuffer[length + 10] = 0;
 1962              		.loc 1 2686 0
 1963 0074 08F10A02 		add	r2, r8, #10
 1964 0078 B118     		adds	r1, r6, r2
 1965 007a B354     		strb	r3, [r6, r2]
2687:../user/source/DLT645.c ****     for (i = 0; i < (length + 10); i++)
 1966              		.loc 1 2687 0
 1967 007c 05E0     		b	.L120
 1968              	.LVL240:
 1969              	.L121:
2688:../user/source/DLT645.c ****     {
2689:../user/source/DLT645.c ****         pucbuffer[length + 10] += pucbuffer[i];
 1970              		.loc 1 2689 0 discriminator 3
 1971 007e F05C     		ldrb	r0, [r6, r3]	@ zero_extendqisi2
 1972 0080 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1973 0082 0244     		add	r2, r2, r0
 1974 0084 0A70     		strb	r2, [r1]
2687:../user/source/DLT645.c ****     for (i = 0; i < (length + 10); i++)
 1975              		.loc 1 2687 0 discriminator 3
 1976 0086 0133     		adds	r3, r3, #1
 1977              	.LVL241:
 1978 0088 9BB2     		uxth	r3, r3
 1979              	.LVL242:
 1980              	.L120:
2687:../user/source/DLT645.c ****     for (i = 0; i < (length + 10); i++)
 1981              		.loc 1 2687 0 is_stmt 0 discriminator 1
 1982 008a 07F10A02 		add	r2, r7, #10
 1983 008e 9342     		cmp	r3, r2
 1984 0090 F5DB     		blt	.L121
2690:../user/source/DLT645.c ****     }
2691:../user/source/DLT645.c ****     pucbuffer[length + 11] = 16;
 1985              		.loc 1 2691 0 is_stmt 1
 1986 0092 08F10B08 		add	r8, r8, #11
 1987              	.LVL243:
 1988 0096 1023     		movs	r3, #16
 1989              	.LVL244:
 1990 0098 06F80830 		strb	r3, [r6, r8]
 1991 009c BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 84


 1992              	.LVL245:
 1993              	.L128:
 1994              		.align	2
 1995              	.L127:
 1996 00a0 00000000 		.word	.LANCHOR4
 1997              		.cfi_endproc
 1998              	.LFE161:
 2000              		.section	.text.vLoadProfile_Current_Modify,"ax",%progbits
 2001              		.align	2
 2002              		.global	vLoadProfile_Current_Modify
 2003              		.thumb
 2004              		.thumb_func
 2006              	vLoadProfile_Current_Modify:
 2007              	.LFB162:
2692:../user/source/DLT645.c **** }
2693:../user/source/DLT645.c **** 
2694:../user/source/DLT645.c **** /********************************************************************
2695:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º¸ººÉ¼ÇÂ¼Á¬Ğø³­¶ÁµçÁ÷Êı¾İĞŞ¸Äº¯Êı
2696:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2697:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2698:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2699:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ7ÈÕ21:08:05
2700:../user/source/DLT645.c ****  **********************************************************************/
2701:../user/source/DLT645.c **** void vLoadProfile_Current_Modify(uint8_t *pucbuffer)
2702:../user/source/DLT645.c **** {
 2008              		.loc 1 2702 0
 2009              		.cfi_startproc
 2010              		@ args = 0, pretend = 0, frame = 0
 2011              		@ frame_needed = 0, uses_anonymous_args = 0
 2012              		@ link register save eliminated.
 2013              	.LVL246:
 2014 0000 7047     		bx	lr
 2015              		.cfi_endproc
 2016              	.LFE162:
 2018 0002 00BF     		.section	.text.Get_VChange_State,"ax",%progbits
 2019              		.align	2
 2020              		.global	Get_VChange_State
 2021              		.thumb
 2022              		.thumb_func
 2024              	Get_VChange_State:
 2025              	.LFB115:
 381:../user/source/DLT645.c ****     uint8_t i;
 2026              		.loc 1 381 0
 2027              		.cfi_startproc
 2028              		@ args = 0, pretend = 0, frame = 0
 2029              		@ frame_needed = 0, uses_anonymous_args = 0
 2030              	.LVL247:
 381:../user/source/DLT645.c ****     uint8_t i;
 2031              		.loc 1 381 0
 2032 0000 38B5     		push	{r3, r4, r5, lr}
 2033              	.LCFI21:
 2034              		.cfi_def_cfa_offset 16
 2035              		.cfi_offset 3, -16
 2036              		.cfi_offset 4, -12
 2037              		.cfi_offset 5, -8
 2038              		.cfi_offset 14, -4
 2039 0002 0446     		mov	r4, r0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 85


 383:../user/source/DLT645.c ****     {
 2040              		.loc 1 383 0
 2041 0004 837B     		ldrb	r3, [r0, #14]	@ zero_extendqisi2
 2042 0006 342B     		cmp	r3, #52
 2043 0008 02D1     		bne	.L131
 385:../user/source/DLT645.c ****     }
 2044              		.loc 1 385 0
 2045 000a 0021     		movs	r1, #0
 2046 000c 224A     		ldr	r2, .L140
 2047 000e 1170     		strb	r1, [r2]
 2048              	.L131:
 387:../user/source/DLT645.c ****     {
 2049              		.loc 1 387 0
 2050 0010 332B     		cmp	r3, #51
 2051 0012 02D1     		bne	.L132
 389:../user/source/DLT645.c ****     }
 2052              		.loc 1 389 0
 2053 0014 FF22     		movs	r2, #255
 2054 0016 204B     		ldr	r3, .L140
 2055 0018 1A70     		strb	r2, [r3]
 2056              	.L132:
 391:../user/source/DLT645.c ****     {
 2057              		.loc 1 391 0
 2058 001a 1F4B     		ldr	r3, .L140
 2059 001c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2060 001e 1F48     		ldr	r0, .L140+4
 2061              	.LVL248:
 2062 0020 FFF7FEFF 		bl	Flash_Write_Word
 2063              	.LVL249:
 2064 0024 10B9     		cbnz	r0, .L133
 393:../user/source/DLT645.c ****     }
 2065              		.loc 1 393 0
 2066 0026 D423     		movs	r3, #212
 2067 0028 2372     		strb	r3, [r4, #8]
 2068 002a 01E0     		b	.L134
 2069              	.L133:
 396:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
 2070              		.loc 1 396 0
 2071 002c 9423     		movs	r3, #148
 2072 002e 2372     		strb	r3, [r4, #8]
 2073              	.L134:
 397:../user/source/DLT645.c ****     pucBuffer[10] = 0x00;
 2074              		.loc 1 397 0
 2075 0030 0023     		movs	r3, #0
 2076 0032 6372     		strb	r3, [r4, #9]
 398:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 2077              		.loc 1 398 0
 2078 0034 A372     		strb	r3, [r4, #10]
 2079              	.LVL250:
 399:../user/source/DLT645.c ****     {
 2080              		.loc 1 399 0
 2081 0036 05E0     		b	.L135
 2082              	.LVL251:
 2083              	.L136:
 401:../user/source/DLT645.c ****     }
 2084              		.loc 1 401 0 discriminator 3
 2085 0038 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 86


 2086 003a A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 2087 003c 0A44     		add	r2, r2, r1
 2088 003e A272     		strb	r2, [r4, #10]
 399:../user/source/DLT645.c ****     {
 2089              		.loc 1 399 0 discriminator 3
 2090 0040 0133     		adds	r3, r3, #1
 2091              	.LVL252:
 2092 0042 DBB2     		uxtb	r3, r3
 2093              	.LVL253:
 2094              	.L135:
 399:../user/source/DLT645.c ****     {
 2095              		.loc 1 399 0 is_stmt 0 discriminator 1
 2096 0044 092B     		cmp	r3, #9
 2097 0046 F7D9     		bls	.L136
 403:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2098              		.loc 1 403 0 is_stmt 1
 2099 0048 1623     		movs	r3, #22
 2100              	.LVL254:
 2101 004a E372     		strb	r3, [r4, #11]
 405:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
 2102              		.loc 1 405 0
 2103 004c 0022     		movs	r2, #0
 2104 004e 144B     		ldr	r3, .L140+8
 2105 0050 1A70     		strb	r2, [r3]
 406:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 2106              		.loc 1 406 0
 2107 0052 144D     		ldr	r5, .L140+12
 2108 0054 0C22     		movs	r2, #12
 2109 0056 2946     		mov	r1, r5
 2110 0058 2046     		mov	r0, r4
 2111 005a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2112              	.LVL255:
 407:../user/source/DLT645.c ****     {
 2113              		.loc 1 407 0
 2114 005e 2846     		mov	r0, r5
 2115 0060 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2116              	.LVL256:
 2117 0064 10B9     		cbnz	r0, .L137
 409:../user/source/DLT645.c ****     }
 2118              		.loc 1 409 0
 2119 0066 1048     		ldr	r0, .L140+16
 2120 0068 FFF7FEFF 		bl	Uart_DataPut
 2121              	.LVL257:
 2122              	.L137:
 413:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
 2123              		.loc 1 413 0
 2124 006c 0F4D     		ldr	r5, .L140+20
 2125 006e 0C22     		movs	r2, #12
 2126 0070 2946     		mov	r1, r5
 2127 0072 2046     		mov	r0, r4
 2128 0074 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2129              	.LVL258:
 414:../user/source/DLT645.c ****     {
 2130              		.loc 1 414 0
 2131 0078 2846     		mov	r0, r5
 2132 007a FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2133              	.LVL259:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 87


 2134 007e 50B9     		cbnz	r0, .L130
 416:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 2135              		.loc 1 416 0
 2136 0080 0B4C     		ldr	r4, .L140+24
 2137              	.LVL260:
 2138 0082 0022     		movs	r2, #0
 2139 0084 0B49     		ldr	r1, .L140+28
 2140 0086 2046     		mov	r0, r4
 2141 0088 FFF7FEFF 		bl	USART_ITConfig
 2142              	.LVL261:
 417:../user/source/DLT645.c ****     }
 2143              		.loc 1 417 0
 2144 008c 0122     		movs	r2, #1
 2145 008e 0A49     		ldr	r1, .L140+32
 2146 0090 2046     		mov	r0, r4
 2147 0092 FFF7FEFF 		bl	USART_ITConfig
 2148              	.LVL262:
 2149              	.L130:
 2150 0096 38BD     		pop	{r3, r4, r5, pc}
 2151              	.L141:
 2152              		.align	2
 2153              	.L140:
 2154 0098 00000000 		.word	.LANCHOR5
 2155 009c 141F0308 		.word	134422292
 2156 00a0 00000000 		.word	.LANCHOR0
 2157 00a4 00000000 		.word	ucDrv_Buf_Uart3_Snd
 2158 00a8 00480040 		.word	1073760256
 2159 00ac 00000000 		.word	ucDrv_Buf_Uart2_Snd
 2160 00b0 00440040 		.word	1073759232
 2161 00b4 05010500 		.word	327941
 2162 00b8 07010700 		.word	459015
 2163              		.cfi_endproc
 2164              	.LFE115:
 2166              		.section	.text.Set_Voltage_Limit,"ax",%progbits
 2167              		.align	2
 2168              		.global	Set_Voltage_Limit
 2169              		.thumb
 2170              		.thumb_func
 2172              	Set_Voltage_Limit:
 2173              	.LFB116:
 429:../user/source/DLT645.c ****     int VMAX = 0;
 2174              		.loc 1 429 0
 2175              		.cfi_startproc
 2176              		@ args = 0, pretend = 0, frame = 0
 2177              		@ frame_needed = 0, uses_anonymous_args = 0
 2178              	.LVL263:
 2179 0000 70B5     		push	{r4, r5, r6, lr}
 2180              	.LCFI22:
 2181              		.cfi_def_cfa_offset 16
 2182              		.cfi_offset 4, -16
 2183              		.cfi_offset 5, -12
 2184              		.cfi_offset 6, -8
 2185              		.cfi_offset 14, -4
 2186 0002 0446     		mov	r4, r0
 2187              	.LVL264:
 433:../user/source/DLT645.c ****     VMIN = Get_Voltage(pucBuffer[16], pucBuffer[17]);
 2188              		.loc 1 433 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 88


 2189 0004 867B     		ldrb	r6, [r0, #14]	@ zero_extendqisi2
 2190 0006 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 2191 0008 3046     		mov	r0, r6
 2192              	.LVL265:
 2193 000a FFF7FEFF 		bl	Get_Voltage
 2194              	.LVL266:
 2195 000e 0546     		mov	r5, r0
 2196              	.LVL267:
 434:../user/source/DLT645.c ****     if ((VMAX > VMIN) && (VMAX < Voltage_MAX_MAX) //µçÑ¹ÏŞÖµÉèÖÃÌõ¼ş£¬ÉÏÏŞ´óÓÚÏÂÏŞÇÒĞ¡ÓÚÉÏÉÏÏŞ
 2197              		.loc 1 434 0
 2198 0010 617C     		ldrb	r1, [r4, #17]	@ zero_extendqisi2
 2199 0012 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 2200              	.LVL268:
 2201 0014 FFF7FEFF 		bl	Get_Voltage
 2202              	.LVL269:
 435:../user/source/DLT645.c ****         && (VMIN > Voltage_MIN_MIN))              //µçÑ¹ÏÂÏŞ´óÓÚÏÂÏÂÏŞ
 2203              		.loc 1 435 0
 2204 0018 8542     		cmp	r5, r0
 2205 001a 1CDD     		ble	.L143
 435:../user/source/DLT645.c ****         && (VMIN > Voltage_MIN_MIN))              //µçÑ¹ÏÂÏŞ´óÓÚÏÂÏÂÏŞ
 2206              		.loc 1 435 0 is_stmt 0 discriminator 1
 2207 001c B5F52F6F 		cmp	r5, #2800
 2208 0020 19DA     		bge	.L143
 436:../user/source/DLT645.c ****     {
 2209              		.loc 1 436 0 is_stmt 1
 2210 0022 B0F5966F 		cmp	r0, #1200
 2211 0026 16DD     		ble	.L143
 438:../user/source/DLT645.c ****         Voltage_MIN = VMIN;
 2212              		.loc 1 438 0
 2213 0028 254B     		ldr	r3, .L150
 2214 002a 1D60     		str	r5, [r3]
 439:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX1_Addr, pucBuffer[14]);
 2215              		.loc 1 439 0
 2216 002c 254B     		ldr	r3, .L150+4
 2217 002e 1860     		str	r0, [r3]
 440:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX2_Addr, pucBuffer[15]);
 2218              		.loc 1 440 0
 2219 0030 3146     		mov	r1, r6
 2220 0032 2548     		ldr	r0, .L150+8
 2221              	.LVL270:
 2222 0034 FFF7FEFF 		bl	Flash_Write_Word
 2223              	.LVL271:
 441:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN1_Addr, pucBuffer[16]);
 2224              		.loc 1 441 0
 2225 0038 E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
 2226 003a 2448     		ldr	r0, .L150+12
 2227 003c FFF7FEFF 		bl	Flash_Write_Word
 2228              	.LVL272:
 442:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN2_Addr, pucBuffer[17]);
 2229              		.loc 1 442 0
 2230 0040 217C     		ldrb	r1, [r4, #16]	@ zero_extendqisi2
 2231 0042 2348     		ldr	r0, .L150+16
 2232 0044 FFF7FEFF 		bl	Flash_Write_Word
 2233              	.LVL273:
 443:../user/source/DLT645.c ****         pucBuffer[8] = 0x94; //ÉèÖÃ³É¹¦±êÖ¾
 2234              		.loc 1 443 0
 2235 0048 617C     		ldrb	r1, [r4, #17]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 89


 2236 004a 2248     		ldr	r0, .L150+20
 2237 004c FFF7FEFF 		bl	Flash_Write_Word
 2238              	.LVL274:
 444:../user/source/DLT645.c ****     }
 2239              		.loc 1 444 0
 2240 0050 9423     		movs	r3, #148
 2241 0052 2372     		strb	r3, [r4, #8]
 2242 0054 01E0     		b	.L144
 2243              	.LVL275:
 2244              	.L143:
 448:../user/source/DLT645.c ****     }
 2245              		.loc 1 448 0
 2246 0056 D423     		movs	r3, #212
 2247 0058 2372     		strb	r3, [r4, #8]
 2248              	.LVL276:
 2249              	.L144:
 450:../user/source/DLT645.c ****     pucBuffer[10] = 0x00; //ÇóÈ¡Ğ£ÑéºÍ
 2250              		.loc 1 450 0
 2251 005a 0023     		movs	r3, #0
 2252 005c 6372     		strb	r3, [r4, #9]
 451:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 2253              		.loc 1 451 0
 2254 005e A372     		strb	r3, [r4, #10]
 452:../user/source/DLT645.c ****     {
 2255              		.loc 1 452 0
 2256 0060 04E0     		b	.L145
 2257              	.LVL277:
 2258              	.L146:
 454:../user/source/DLT645.c ****     }
 2259              		.loc 1 454 0 discriminator 3
 2260 0062 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2261 0064 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 2262 0066 0A44     		add	r2, r2, r1
 2263 0068 A272     		strb	r2, [r4, #10]
 452:../user/source/DLT645.c ****     {
 2264              		.loc 1 452 0 discriminator 3
 2265 006a 0133     		adds	r3, r3, #1
 2266              	.LVL278:
 2267              	.L145:
 452:../user/source/DLT645.c ****     {
 2268              		.loc 1 452 0 is_stmt 0 discriminator 1
 2269 006c 092B     		cmp	r3, #9
 2270 006e F8DD     		ble	.L146
 456:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2271              		.loc 1 456 0 is_stmt 1
 2272 0070 1623     		movs	r3, #22
 2273              	.LVL279:
 2274 0072 E372     		strb	r3, [r4, #11]
 458:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
 2275              		.loc 1 458 0
 2276 0074 0022     		movs	r2, #0
 2277 0076 184B     		ldr	r3, .L150+24
 2278 0078 1A70     		strb	r2, [r3]
 459:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 2279              		.loc 1 459 0
 2280 007a 184D     		ldr	r5, .L150+28
 2281              	.LVL280:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 90


 2282 007c 0C22     		movs	r2, #12
 2283 007e 2946     		mov	r1, r5
 2284 0080 2046     		mov	r0, r4
 2285 0082 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2286              	.LVL281:
 460:../user/source/DLT645.c ****     {
 2287              		.loc 1 460 0
 2288 0086 2846     		mov	r0, r5
 2289 0088 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2290              	.LVL282:
 2291 008c 10B9     		cbnz	r0, .L147
 462:../user/source/DLT645.c ****     }
 2292              		.loc 1 462 0
 2293 008e 1448     		ldr	r0, .L150+32
 2294 0090 FFF7FEFF 		bl	Uart_DataPut
 2295              	.LVL283:
 2296              	.L147:
 466:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
 2297              		.loc 1 466 0
 2298 0094 134D     		ldr	r5, .L150+36
 2299 0096 0C22     		movs	r2, #12
 2300 0098 2946     		mov	r1, r5
 2301 009a 2046     		mov	r0, r4
 2302 009c FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2303              	.LVL284:
 467:../user/source/DLT645.c ****     {
 2304              		.loc 1 467 0
 2305 00a0 2846     		mov	r0, r5
 2306 00a2 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2307              	.LVL285:
 2308 00a6 50B9     		cbnz	r0, .L142
 469:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 2309              		.loc 1 469 0
 2310 00a8 0F4C     		ldr	r4, .L150+40
 2311              	.LVL286:
 2312 00aa 0022     		movs	r2, #0
 2313 00ac 0F49     		ldr	r1, .L150+44
 2314 00ae 2046     		mov	r0, r4
 2315 00b0 FFF7FEFF 		bl	USART_ITConfig
 2316              	.LVL287:
 470:../user/source/DLT645.c ****     }
 2317              		.loc 1 470 0
 2318 00b4 0122     		movs	r2, #1
 2319 00b6 0E49     		ldr	r1, .L150+48
 2320 00b8 2046     		mov	r0, r4
 2321 00ba FFF7FEFF 		bl	USART_ITConfig
 2322              	.LVL288:
 2323              	.L142:
 2324 00be 70BD     		pop	{r4, r5, r6, pc}
 2325              	.L151:
 2326              		.align	2
 2327              	.L150:
 2328 00c0 00000000 		.word	Voltage_MAX
 2329 00c4 00000000 		.word	Voltage_MIN
 2330 00c8 001F0308 		.word	134422272
 2331 00cc 041F0308 		.word	134422276
 2332 00d0 081F0308 		.word	134422280
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 91


 2333 00d4 0C1F0308 		.word	134422284
 2334 00d8 00000000 		.word	.LANCHOR0
 2335 00dc 00000000 		.word	ucDrv_Buf_Uart3_Snd
 2336 00e0 00480040 		.word	1073760256
 2337 00e4 00000000 		.word	ucDrv_Buf_Uart2_Snd
 2338 00e8 00440040 		.word	1073759232
 2339 00ec 05010500 		.word	327941
 2340 00f0 07010700 		.word	459015
 2341              		.cfi_endproc
 2342              	.LFE116:
 2344              		.section	.text.Query_Voltage_Limit,"ax",%progbits
 2345              		.align	2
 2346              		.global	Query_Voltage_Limit
 2347              		.thumb
 2348              		.thumb_func
 2350              	Query_Voltage_Limit:
 2351              	.LFB117:
 483:../user/source/DLT645.c ****     int i = 0;
 2352              		.loc 1 483 0
 2353              		.cfi_startproc
 2354              		@ args = 0, pretend = 0, frame = 0
 2355              		@ frame_needed = 0, uses_anonymous_args = 0
 2356              	.LVL289:
 2357 0000 38B5     		push	{r3, r4, r5, lr}
 2358              	.LCFI23:
 2359              		.cfi_def_cfa_offset 16
 2360              		.cfi_offset 3, -16
 2361              		.cfi_offset 4, -12
 2362              		.cfi_offset 5, -8
 2363              		.cfi_offset 14, -4
 2364 0002 0446     		mov	r4, r0
 2365              	.LVL290:
 485:../user/source/DLT645.c ****     pucBuffer[9] = 0x0C;
 2366              		.loc 1 485 0
 2367 0004 9123     		movs	r3, #145
 2368 0006 0372     		strb	r3, [r0, #8]
 486:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(Voltage_MAX_MAX);
 2369              		.loc 1 486 0
 2370 0008 0C23     		movs	r3, #12
 2371 000a 4372     		strb	r3, [r0, #9]
 487:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(Voltage_MAX_MAX); //µçÑ¹ÉÏÉÏÏŞ
 2372              		.loc 1 487 0
 2373 000c 4FF42F60 		mov	r0, #2800
 2374              	.LVL291:
 2375 0010 FFF7FEFF 		bl	GetLowByte
 2376              	.LVL292:
 2377 0014 A073     		strb	r0, [r4, #14]
 488:../user/source/DLT645.c ****     pucBuffer[16] = GetLowByte(Voltage_MIN_MIN);
 2378              		.loc 1 488 0
 2379 0016 4FF42F60 		mov	r0, #2800
 2380 001a FFF7FEFF 		bl	GetHighByte
 2381              	.LVL293:
 2382 001e E073     		strb	r0, [r4, #15]
 489:../user/source/DLT645.c ****     pucBuffer[17] = GetHighByte(Voltage_MIN_MIN); //µçÑ¹ÏÂÏÂÏŞ
 2383              		.loc 1 489 0
 2384 0020 4FF49660 		mov	r0, #1200
 2385 0024 FFF7FEFF 		bl	GetLowByte
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 92


 2386              	.LVL294:
 2387 0028 2074     		strb	r0, [r4, #16]
 490:../user/source/DLT645.c ****     pucBuffer[18] = GetLowByte(Voltage_MAX);
 2388              		.loc 1 490 0
 2389 002a 4FF49660 		mov	r0, #1200
 2390 002e FFF7FEFF 		bl	GetHighByte
 2391              	.LVL295:
 2392 0032 6074     		strb	r0, [r4, #17]
 491:../user/source/DLT645.c ****     pucBuffer[19] = GetHighByte(Voltage_MAX); //µçÑ¹ÉÏÏŞÖµ
 2393              		.loc 1 491 0
 2394 0034 224B     		ldr	r3, .L158
 2395 0036 1D68     		ldr	r5, [r3]
 2396 0038 2846     		mov	r0, r5
 2397 003a FFF7FEFF 		bl	GetLowByte
 2398              	.LVL296:
 2399 003e A074     		strb	r0, [r4, #18]
 492:../user/source/DLT645.c ****     pucBuffer[20] = GetLowByte(Voltage_MIN);
 2400              		.loc 1 492 0
 2401 0040 2846     		mov	r0, r5
 2402 0042 FFF7FEFF 		bl	GetHighByte
 2403              	.LVL297:
 2404 0046 E074     		strb	r0, [r4, #19]
 493:../user/source/DLT645.c ****     pucBuffer[21] = GetHighByte(Voltage_MIN); //µçÑ¹ÏÂÏŞÖµ
 2405              		.loc 1 493 0
 2406 0048 1E4B     		ldr	r3, .L158+4
 2407 004a 1D68     		ldr	r5, [r3]
 2408 004c 2846     		mov	r0, r5
 2409 004e FFF7FEFF 		bl	GetLowByte
 2410              	.LVL298:
 2411 0052 2075     		strb	r0, [r4, #20]
 494:../user/source/DLT645.c ****     pucBuffer[22] = 0x00;                     //ÇóÈ¡Ğ£ÑéºÍ
 2412              		.loc 1 494 0
 2413 0054 2846     		mov	r0, r5
 2414 0056 FFF7FEFF 		bl	GetHighByte
 2415              	.LVL299:
 2416 005a 6075     		strb	r0, [r4, #21]
 495:../user/source/DLT645.c ****     for (i = 0; i < 24 - 2; i++)              //±¨ÎÄ³¤¶È24
 2417              		.loc 1 495 0
 2418 005c 0023     		movs	r3, #0
 2419 005e A375     		strb	r3, [r4, #22]
 496:../user/source/DLT645.c ****     {
 2420              		.loc 1 496 0
 2421 0060 04E0     		b	.L153
 2422              	.LVL300:
 2423              	.L154:
 498:../user/source/DLT645.c ****     }
 2424              		.loc 1 498 0 discriminator 3
 2425 0062 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2426 0064 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
 2427 0066 0A44     		add	r2, r2, r1
 2428 0068 A275     		strb	r2, [r4, #22]
 496:../user/source/DLT645.c ****     {
 2429              		.loc 1 496 0 discriminator 3
 2430 006a 0133     		adds	r3, r3, #1
 2431              	.LVL301:
 2432              	.L153:
 496:../user/source/DLT645.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 93


 2433              		.loc 1 496 0 is_stmt 0 discriminator 1
 2434 006c 152B     		cmp	r3, #21
 2435 006e F8DD     		ble	.L154
 500:../user/source/DLT645.c ****     uc645DataDomainLength = 12;
 2436              		.loc 1 500 0 is_stmt 1
 2437 0070 1623     		movs	r3, #22
 2438              	.LVL302:
 2439 0072 E375     		strb	r3, [r4, #23]
 501:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2440              		.loc 1 501 0
 2441 0074 0C22     		movs	r2, #12
 2442 0076 144B     		ldr	r3, .L158+8
 2443 0078 1A70     		strb	r2, [r3]
 503:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 2444              		.loc 1 503 0
 2445 007a 144D     		ldr	r5, .L158+12
 2446 007c 2946     		mov	r1, r5
 2447 007e 2046     		mov	r0, r4
 2448 0080 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2449              	.LVL303:
 504:../user/source/DLT645.c ****     {
 2450              		.loc 1 504 0
 2451 0084 2846     		mov	r0, r5
 2452 0086 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2453              	.LVL304:
 2454 008a 10B9     		cbnz	r0, .L155
 506:../user/source/DLT645.c ****     }
 2455              		.loc 1 506 0
 2456 008c 1048     		ldr	r0, .L158+16
 2457 008e FFF7FEFF 		bl	Uart_DataPut
 2458              	.LVL305:
 2459              	.L155:
 510:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
 2460              		.loc 1 510 0
 2461 0092 104D     		ldr	r5, .L158+20
 2462 0094 1822     		movs	r2, #24
 2463 0096 2946     		mov	r1, r5
 2464 0098 2046     		mov	r0, r4
 2465 009a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2466              	.LVL306:
 511:../user/source/DLT645.c ****     {
 2467              		.loc 1 511 0
 2468 009e 2846     		mov	r0, r5
 2469 00a0 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2470              	.LVL307:
 2471 00a4 50B9     		cbnz	r0, .L152
 513:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 2472              		.loc 1 513 0
 2473 00a6 0C4C     		ldr	r4, .L158+24
 2474              	.LVL308:
 2475 00a8 0022     		movs	r2, #0
 2476 00aa 0C49     		ldr	r1, .L158+28
 2477 00ac 2046     		mov	r0, r4
 2478 00ae FFF7FEFF 		bl	USART_ITConfig
 2479              	.LVL309:
 514:../user/source/DLT645.c ****     }
 2480              		.loc 1 514 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 94


 2481 00b2 0122     		movs	r2, #1
 2482 00b4 0A49     		ldr	r1, .L158+32
 2483 00b6 2046     		mov	r0, r4
 2484 00b8 FFF7FEFF 		bl	USART_ITConfig
 2485              	.LVL310:
 2486              	.L152:
 2487 00bc 38BD     		pop	{r3, r4, r5, pc}
 2488              	.L159:
 2489 00be 00BF     		.align	2
 2490              	.L158:
 2491 00c0 00000000 		.word	Voltage_MAX
 2492 00c4 00000000 		.word	Voltage_MIN
 2493 00c8 00000000 		.word	.LANCHOR0
 2494 00cc 00000000 		.word	ucDrv_Buf_Uart3_Snd
 2495 00d0 00480040 		.word	1073760256
 2496 00d4 00000000 		.word	ucDrv_Buf_Uart2_Snd
 2497 00d8 00440040 		.word	1073759232
 2498 00dc 05010500 		.word	327941
 2499 00e0 07010700 		.word	459015
 2500              		.cfi_endproc
 2501              	.LFE117:
 2503              		.section	.text.Default_Reset,"ax",%progbits
 2504              		.align	2
 2505              		.global	Default_Reset
 2506              		.thumb
 2507              		.thumb_func
 2509              	Default_Reset:
 2510              	.LFB118:
 527:../user/source/DLT645.c ****     int i = 0;
 2511              		.loc 1 527 0
 2512              		.cfi_startproc
 2513              		@ args = 0, pretend = 0, frame = 0
 2514              		@ frame_needed = 0, uses_anonymous_args = 0
 2515              	.LVL311:
 2516 0000 70B5     		push	{r4, r5, r6, lr}
 2517              	.LCFI24:
 2518              		.cfi_def_cfa_offset 16
 2519              		.cfi_offset 4, -16
 2520              		.cfi_offset 5, -12
 2521              		.cfi_offset 6, -8
 2522              		.cfi_offset 14, -4
 2523 0002 0446     		mov	r4, r0
 2524              	.LVL312:
 529:../user/source/DLT645.c ****     B_Voltage = WORK_VOLTAGE;                                        //BÏàµçÑ¹Öµ¸ÄÎª±ê×¼Öµ
 2525              		.loc 1 529 0
 2526 0004 40F69803 		movw	r3, #2200
 2527 0008 314A     		ldr	r2, .L166
 2528 000a 1360     		str	r3, [r2]
 530:../user/source/DLT645.c ****     C_Voltage = WORK_VOLTAGE;                                        //CÏàµçÑ¹Öµ¸ÄÎª±ê×¼Öµ
 2529              		.loc 1 530 0
 2530 000c 314A     		ldr	r2, .L166+4
 2531 000e 1360     		str	r3, [r2]
 531:../user/source/DLT645.c ****     Voltage_Change_State = Voltage_Change;                           //µçÑ¹ĞŞ¸Ä×´Ì¬¸ÄÎª¡°ÓĞĞ§¡±
 2532              		.loc 1 531 0
 2533 0010 314A     		ldr	r2, .L166+8
 2534 0012 1360     		str	r3, [r2]
 532:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VChangeState_Addr, Voltage_Change_State); //´æ´¢µ½FLASHÖĞ
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 95


 2535              		.loc 1 532 0
 2536 0014 FF21     		movs	r1, #255
 2537 0016 314B     		ldr	r3, .L166+12
 2538 0018 1970     		strb	r1, [r3]
 533:../user/source/DLT645.c ****     Voltage_MAX = Voltage_MAX_Default;                               //µçÑ¹ºÏ¸ñÏŞÖµ»Ö¸´Ä¬ÈÏ²¢ÇÒ´æµµ
 2539              		.loc 1 533 0
 2540 001a 3148     		ldr	r0, .L166+16
 2541              	.LVL313:
 2542 001c FFF7FEFF 		bl	Flash_Write_Word
 2543              	.LVL314:
 534:../user/source/DLT645.c ****     Voltage_MIN = Voltage_MIN_Default;
 2544              		.loc 1 534 0
 2545 0020 304E     		ldr	r6, .L166+20
 2546 0022 40F62E10 		movw	r0, #2350
 2547 0026 3060     		str	r0, [r6]
 535:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMAX1_Addr, GetLowByte(Voltage_MAX));
 2548              		.loc 1 535 0
 2549 0028 2F4D     		ldr	r5, .L166+24
 2550 002a 40F2BC73 		movw	r3, #1980
 2551 002e 2B60     		str	r3, [r5]
 536:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMAX2_Addr, GetHighByte(Voltage_MAX));
 2552              		.loc 1 536 0
 2553 0030 FFF7FEFF 		bl	GetLowByte
 2554              	.LVL315:
 2555 0034 0146     		mov	r1, r0
 2556 0036 2D48     		ldr	r0, .L166+28
 2557 0038 FFF7FEFF 		bl	Flash_Write_Word
 2558              	.LVL316:
 537:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMIN1_Addr, GetLowByte(Voltage_MIN));
 2559              		.loc 1 537 0
 2560 003c 3068     		ldr	r0, [r6]
 2561 003e FFF7FEFF 		bl	GetHighByte
 2562              	.LVL317:
 2563 0042 0146     		mov	r1, r0
 2564 0044 2A48     		ldr	r0, .L166+32
 2565 0046 FFF7FEFF 		bl	Flash_Write_Word
 2566              	.LVL318:
 538:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMIN2_Addr, GetHighByte(Voltage_MIN));
 2567              		.loc 1 538 0
 2568 004a 2868     		ldr	r0, [r5]
 2569 004c FFF7FEFF 		bl	GetLowByte
 2570              	.LVL319:
 2571 0050 0146     		mov	r1, r0
 2572 0052 2848     		ldr	r0, .L166+36
 2573 0054 FFF7FEFF 		bl	Flash_Write_Word
 2574              	.LVL320:
 539:../user/source/DLT645.c ****     pucBuffer[8] = 0x94;  //ÇóÈ¡Ğ£ÑéºÍ
 2575              		.loc 1 539 0
 2576 0058 2868     		ldr	r0, [r5]
 2577 005a FFF7FEFF 		bl	GetHighByte
 2578              	.LVL321:
 2579 005e 0146     		mov	r1, r0
 2580 0060 2548     		ldr	r0, .L166+40
 2581 0062 FFF7FEFF 		bl	Flash_Write_Word
 2582              	.LVL322:
 540:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;  //ÇóÈ¡Ğ£ÑéºÍ
 2583              		.loc 1 540 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 96


 2584 0066 9423     		movs	r3, #148
 2585 0068 2372     		strb	r3, [r4, #8]
 541:../user/source/DLT645.c ****     pucBuffer[10] = 0x00; //ÇóÈ¡Ğ£ÑéºÍ
 2586              		.loc 1 541 0
 2587 006a 0023     		movs	r3, #0
 2588 006c 6372     		strb	r3, [r4, #9]
 542:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 2589              		.loc 1 542 0
 2590 006e A372     		strb	r3, [r4, #10]
 543:../user/source/DLT645.c ****     {
 2591              		.loc 1 543 0
 2592 0070 04E0     		b	.L161
 2593              	.LVL323:
 2594              	.L162:
 545:../user/source/DLT645.c ****     }
 2595              		.loc 1 545 0 discriminator 3
 2596 0072 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2597 0074 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 2598 0076 0A44     		add	r2, r2, r1
 2599 0078 A272     		strb	r2, [r4, #10]
 543:../user/source/DLT645.c ****     {
 2600              		.loc 1 543 0 discriminator 3
 2601 007a 0133     		adds	r3, r3, #1
 2602              	.LVL324:
 2603              	.L161:
 543:../user/source/DLT645.c ****     {
 2604              		.loc 1 543 0 is_stmt 0 discriminator 1
 2605 007c 092B     		cmp	r3, #9
 2606 007e F8DD     		ble	.L162
 547:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
 2607              		.loc 1 547 0 is_stmt 1
 2608 0080 1623     		movs	r3, #22
 2609              	.LVL325:
 2610 0082 E372     		strb	r3, [r4, #11]
 548:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2611              		.loc 1 548 0
 2612 0084 0022     		movs	r2, #0
 2613 0086 1D4B     		ldr	r3, .L166+44
 2614 0088 1A70     		strb	r2, [r3]
 550:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 2615              		.loc 1 550 0
 2616 008a 1D4D     		ldr	r5, .L166+48
 2617 008c 0C22     		movs	r2, #12
 2618 008e 2946     		mov	r1, r5
 2619 0090 2046     		mov	r0, r4
 2620 0092 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2621              	.LVL326:
 551:../user/source/DLT645.c ****     {
 2622              		.loc 1 551 0
 2623 0096 2846     		mov	r0, r5
 2624 0098 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2625              	.LVL327:
 2626 009c 10B9     		cbnz	r0, .L163
 553:../user/source/DLT645.c ****     }
 2627              		.loc 1 553 0
 2628 009e 1948     		ldr	r0, .L166+52
 2629 00a0 FFF7FEFF 		bl	Uart_DataPut
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 97


 2630              	.LVL328:
 2631              	.L163:
 557:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
 2632              		.loc 1 557 0
 2633 00a4 184D     		ldr	r5, .L166+56
 2634 00a6 0C22     		movs	r2, #12
 2635 00a8 2946     		mov	r1, r5
 2636 00aa 2046     		mov	r0, r4
 2637 00ac FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2638              	.LVL329:
 558:../user/source/DLT645.c ****     {
 2639              		.loc 1 558 0
 2640 00b0 2846     		mov	r0, r5
 2641 00b2 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2642              	.LVL330:
 2643 00b6 50B9     		cbnz	r0, .L160
 560:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 2644              		.loc 1 560 0
 2645 00b8 144C     		ldr	r4, .L166+60
 2646              	.LVL331:
 2647 00ba 0022     		movs	r2, #0
 2648 00bc 1449     		ldr	r1, .L166+64
 2649 00be 2046     		mov	r0, r4
 2650 00c0 FFF7FEFF 		bl	USART_ITConfig
 2651              	.LVL332:
 561:../user/source/DLT645.c ****     }
 2652              		.loc 1 561 0
 2653 00c4 0122     		movs	r2, #1
 2654 00c6 1349     		ldr	r1, .L166+68
 2655 00c8 2046     		mov	r0, r4
 2656 00ca FFF7FEFF 		bl	USART_ITConfig
 2657              	.LVL333:
 2658              	.L160:
 2659 00ce 70BD     		pop	{r4, r5, r6, pc}
 2660              	.L167:
 2661              		.align	2
 2662              	.L166:
 2663 00d0 00000000 		.word	.LANCHOR4
 2664 00d4 00000000 		.word	.LANCHOR6
 2665 00d8 00000000 		.word	.LANCHOR7
 2666 00dc 00000000 		.word	.LANCHOR5
 2667 00e0 141F0308 		.word	134422292
 2668 00e4 00000000 		.word	Voltage_MAX
 2669 00e8 00000000 		.word	Voltage_MIN
 2670 00ec 001F0308 		.word	134422272
 2671 00f0 041F0308 		.word	134422276
 2672 00f4 081F0308 		.word	134422280
 2673 00f8 0C1F0308 		.word	134422284
 2674 00fc 00000000 		.word	.LANCHOR0
 2675 0100 00000000 		.word	ucDrv_Buf_Uart3_Snd
 2676 0104 00480040 		.word	1073760256
 2677 0108 00000000 		.word	ucDrv_Buf_Uart2_Snd
 2678 010c 00440040 		.word	1073759232
 2679 0110 05010500 		.word	327941
 2680 0114 07010700 		.word	459015
 2681              		.cfi_endproc
 2682              	.LFE118:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 98


 2684              		.section	.text.vCurrent_Limit_Set,"ax",%progbits
 2685              		.align	2
 2686              		.global	vCurrent_Limit_Set
 2687              		.thumb
 2688              		.thumb_func
 2690              	vCurrent_Limit_Set:
 2691              	.LFB135:
1481:../user/source/DLT645.c ****     uint8_t i;
 2692              		.loc 1 1481 0
 2693              		.cfi_startproc
 2694              		@ args = 0, pretend = 0, frame = 0
 2695              		@ frame_needed = 0, uses_anonymous_args = 0
 2696              	.LVL334:
 2697 0000 38B5     		push	{r3, r4, r5, lr}
 2698              	.LCFI25:
 2699              		.cfi_def_cfa_offset 16
 2700              		.cfi_offset 3, -16
 2701              		.cfi_offset 4, -12
 2702              		.cfi_offset 5, -8
 2703              		.cfi_offset 14, -4
 2704 0002 0446     		mov	r4, r0
1484:../user/source/DLT645.c ****     /*·ÇÖØ¹ıÔØµ÷Õû°æ±¾Ê±£¬»Ø¸´·ñÈÏÖ¡*/
 2705              		.loc 1 1484 0
 2706 0004 D423     		movs	r3, #212
 2707 0006 0372     		strb	r3, [r0, #8]
1507:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 2708              		.loc 1 1507 0
 2709 0008 0023     		movs	r3, #0
 2710 000a 4372     		strb	r3, [r0, #9]
1508:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 2711              		.loc 1 1508 0
 2712 000c 8372     		strb	r3, [r0, #10]
 2713              	.LVL335:
1509:../user/source/DLT645.c ****     {
 2714              		.loc 1 1509 0
 2715 000e 05E0     		b	.L169
 2716              	.LVL336:
 2717              	.L170:
1511:../user/source/DLT645.c ****     }
 2718              		.loc 1 1511 0 discriminator 3
 2719 0010 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2720 0012 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 2721 0014 0A44     		add	r2, r2, r1
 2722 0016 A272     		strb	r2, [r4, #10]
1509:../user/source/DLT645.c ****     {
 2723              		.loc 1 1509 0 discriminator 3
 2724 0018 0133     		adds	r3, r3, #1
 2725              	.LVL337:
 2726 001a DBB2     		uxtb	r3, r3
 2727              	.LVL338:
 2728              	.L169:
1509:../user/source/DLT645.c ****     {
 2729              		.loc 1 1509 0 is_stmt 0 discriminator 1
 2730 001c 092B     		cmp	r3, #9
 2731 001e F7D9     		bls	.L170
1513:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2732              		.loc 1 1513 0 is_stmt 1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 99


 2733 0020 1623     		movs	r3, #22
 2734              	.LVL339:
 2735 0022 E372     		strb	r3, [r4, #11]
1515:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
 2736              		.loc 1 1515 0
 2737 0024 0022     		movs	r2, #0
 2738 0026 124B     		ldr	r3, .L174
 2739 0028 1A70     		strb	r2, [r3]
1516:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 2740              		.loc 1 1516 0
 2741 002a 124D     		ldr	r5, .L174+4
 2742 002c 0C22     		movs	r2, #12
 2743 002e 2946     		mov	r1, r5
 2744 0030 2046     		mov	r0, r4
 2745              	.LVL340:
 2746 0032 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2747              	.LVL341:
1517:../user/source/DLT645.c ****     {
 2748              		.loc 1 1517 0
 2749 0036 2846     		mov	r0, r5
 2750 0038 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2751              	.LVL342:
 2752 003c 10B9     		cbnz	r0, .L171
1519:../user/source/DLT645.c ****     }
 2753              		.loc 1 1519 0
 2754 003e 0E48     		ldr	r0, .L174+8
 2755 0040 FFF7FEFF 		bl	Uart_DataPut
 2756              	.LVL343:
 2757              	.L171:
1523:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
 2758              		.loc 1 1523 0
 2759 0044 0D4D     		ldr	r5, .L174+12
 2760 0046 0C22     		movs	r2, #12
 2761 0048 2946     		mov	r1, r5
 2762 004a 2046     		mov	r0, r4
 2763 004c FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2764              	.LVL344:
1524:../user/source/DLT645.c ****     {
 2765              		.loc 1 1524 0
 2766 0050 2846     		mov	r0, r5
 2767 0052 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2768              	.LVL345:
 2769 0056 50B9     		cbnz	r0, .L168
1526:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 2770              		.loc 1 1526 0
 2771 0058 094C     		ldr	r4, .L174+16
 2772              	.LVL346:
 2773 005a 0022     		movs	r2, #0
 2774 005c 0949     		ldr	r1, .L174+20
 2775 005e 2046     		mov	r0, r4
 2776 0060 FFF7FEFF 		bl	USART_ITConfig
 2777              	.LVL347:
1527:../user/source/DLT645.c ****     }
 2778              		.loc 1 1527 0
 2779 0064 0122     		movs	r2, #1
 2780 0066 0849     		ldr	r1, .L174+24
 2781 0068 2046     		mov	r0, r4
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 100


 2782 006a FFF7FEFF 		bl	USART_ITConfig
 2783              	.LVL348:
 2784              	.L168:
 2785 006e 38BD     		pop	{r3, r4, r5, pc}
 2786              	.L175:
 2787              		.align	2
 2788              	.L174:
 2789 0070 00000000 		.word	.LANCHOR0
 2790 0074 00000000 		.word	ucDrv_Buf_Uart3_Snd
 2791 0078 00480040 		.word	1073760256
 2792 007c 00000000 		.word	ucDrv_Buf_Uart2_Snd
 2793 0080 00440040 		.word	1073759232
 2794 0084 05010500 		.word	327941
 2795 0088 07010700 		.word	459015
 2796              		.cfi_endproc
 2797              	.LFE135:
 2799              		.section	.text.vCurrent_CTRatio_Set,"ax",%progbits
 2800              		.align	2
 2801              		.global	vCurrent_CTRatio_Set
 2802              		.thumb
 2803              		.thumb_func
 2805              	vCurrent_CTRatio_Set:
 2806              	.LFB136:
1544:../user/source/DLT645.c ****     uint8_t i;
 2807              		.loc 1 1544 0
 2808              		.cfi_startproc
 2809              		@ args = 0, pretend = 0, frame = 0
 2810              		@ frame_needed = 0, uses_anonymous_args = 0
 2811              	.LVL349:
 2812 0000 38B5     		push	{r3, r4, r5, lr}
 2813              	.LCFI26:
 2814              		.cfi_def_cfa_offset 16
 2815              		.cfi_offset 3, -16
 2816              		.cfi_offset 4, -12
 2817              		.cfi_offset 5, -8
 2818              		.cfi_offset 14, -4
 2819 0002 0446     		mov	r4, r0
 2820              	.LVL350:
1547:../user/source/DLT645.c **** /*ÊäÈëµÄ×Ö½Ú¼õÈ¥33ºó²»ÊÇBCDÂëÔõÃ´°ì£¿*/
 2821              		.loc 1 1547 0
 2822 0004 D423     		movs	r3, #212
 2823 0006 0372     		strb	r3, [r0, #8]
1565:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 2824              		.loc 1 1565 0
 2825 0008 0023     		movs	r3, #0
 2826 000a 4372     		strb	r3, [r0, #9]
1566:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 2827              		.loc 1 1566 0
 2828 000c 8372     		strb	r3, [r0, #10]
 2829              	.LVL351:
1567:../user/source/DLT645.c ****     {
 2830              		.loc 1 1567 0
 2831 000e 05E0     		b	.L177
 2832              	.LVL352:
 2833              	.L178:
1569:../user/source/DLT645.c ****     }
 2834              		.loc 1 1569 0 discriminator 3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 101


 2835 0010 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2836 0012 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 2837 0014 0A44     		add	r2, r2, r1
 2838 0016 A272     		strb	r2, [r4, #10]
1567:../user/source/DLT645.c ****     {
 2839              		.loc 1 1567 0 discriminator 3
 2840 0018 0133     		adds	r3, r3, #1
 2841              	.LVL353:
 2842 001a DBB2     		uxtb	r3, r3
 2843              	.LVL354:
 2844              	.L177:
1567:../user/source/DLT645.c ****     {
 2845              		.loc 1 1567 0 is_stmt 0 discriminator 1
 2846 001c 092B     		cmp	r3, #9
 2847 001e F7D9     		bls	.L178
1571:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2848              		.loc 1 1571 0 is_stmt 1
 2849 0020 1623     		movs	r3, #22
 2850              	.LVL355:
 2851 0022 E372     		strb	r3, [r4, #11]
1573:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
 2852              		.loc 1 1573 0
 2853 0024 0022     		movs	r2, #0
 2854 0026 124B     		ldr	r3, .L182
 2855 0028 1A70     		strb	r2, [r3]
1574:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 2856              		.loc 1 1574 0
 2857 002a 124D     		ldr	r5, .L182+4
 2858 002c 0C22     		movs	r2, #12
 2859 002e 2946     		mov	r1, r5
 2860 0030 2046     		mov	r0, r4
 2861              	.LVL356:
 2862 0032 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2863              	.LVL357:
1575:../user/source/DLT645.c ****     {
 2864              		.loc 1 1575 0
 2865 0036 2846     		mov	r0, r5
 2866 0038 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2867              	.LVL358:
 2868 003c 10B9     		cbnz	r0, .L179
1577:../user/source/DLT645.c ****     }
 2869              		.loc 1 1577 0
 2870 003e 0E48     		ldr	r0, .L182+8
 2871 0040 FFF7FEFF 		bl	Uart_DataPut
 2872              	.LVL359:
 2873              	.L179:
1581:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
 2874              		.loc 1 1581 0
 2875 0044 0D4D     		ldr	r5, .L182+12
 2876 0046 0C22     		movs	r2, #12
 2877 0048 2946     		mov	r1, r5
 2878 004a 2046     		mov	r0, r4
 2879 004c FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2880              	.LVL360:
1582:../user/source/DLT645.c ****     {
 2881              		.loc 1 1582 0
 2882 0050 2846     		mov	r0, r5
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 102


 2883 0052 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2884              	.LVL361:
 2885 0056 50B9     		cbnz	r0, .L176
1584:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 2886              		.loc 1 1584 0
 2887 0058 094C     		ldr	r4, .L182+16
 2888              	.LVL362:
 2889 005a 0022     		movs	r2, #0
 2890 005c 0949     		ldr	r1, .L182+20
 2891 005e 2046     		mov	r0, r4
 2892 0060 FFF7FEFF 		bl	USART_ITConfig
 2893              	.LVL363:
1585:../user/source/DLT645.c ****     }
 2894              		.loc 1 1585 0
 2895 0064 0122     		movs	r2, #1
 2896 0066 0849     		ldr	r1, .L182+24
 2897 0068 2046     		mov	r0, r4
 2898 006a FFF7FEFF 		bl	USART_ITConfig
 2899              	.LVL364:
 2900              	.L176:
 2901 006e 38BD     		pop	{r3, r4, r5, pc}
 2902              	.L183:
 2903              		.align	2
 2904              	.L182:
 2905 0070 00000000 		.word	.LANCHOR0
 2906 0074 00000000 		.word	ucDrv_Buf_Uart3_Snd
 2907 0078 00480040 		.word	1073760256
 2908 007c 00000000 		.word	ucDrv_Buf_Uart2_Snd
 2909 0080 00440040 		.word	1073759232
 2910 0084 05010500 		.word	327941
 2911 0088 07010700 		.word	459015
 2912              		.cfi_endproc
 2913              	.LFE136:
 2915              		.section	.text.vCurrent_Limit_ReadSet,"ax",%progbits
 2916              		.align	2
 2917              		.global	vCurrent_Limit_ReadSet
 2918              		.thumb
 2919              		.thumb_func
 2921              	vCurrent_Limit_ReadSet:
 2922              	.LFB137:
1601:../user/source/DLT645.c ****     uint8_t i;
 2923              		.loc 1 1601 0
 2924              		.cfi_startproc
 2925              		@ args = 0, pretend = 0, frame = 8
 2926              		@ frame_needed = 0, uses_anonymous_args = 0
 2927              	.LVL365:
 2928 0000 30B5     		push	{r4, r5, lr}
 2929              	.LCFI27:
 2930              		.cfi_def_cfa_offset 12
 2931              		.cfi_offset 4, -12
 2932              		.cfi_offset 5, -8
 2933              		.cfi_offset 14, -4
 2934 0002 85B0     		sub	sp, sp, #20
 2935              	.LCFI28:
 2936              		.cfi_def_cfa_offset 32
 2937 0004 0546     		mov	r5, r0
1604:../user/source/DLT645.c ****     limit.isminus = false;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 103


 2938              		.loc 1 1604 0
 2939 0006 254B     		ldr	r3, .L190
 2940 0008 DB68     		ldr	r3, [r3, #12]
 2941 000a 0293     		str	r3, [sp, #8]
1605:../user/source/DLT645.c ****     vPut_Current(limit, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
 2942              		.loc 1 1605 0
 2943 000c 0024     		movs	r4, #0
 2944 000e 8DF80D40 		strb	r4, [sp, #13]
1606:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
 2945              		.loc 1 1606 0
 2946 0012 00F11003 		add	r3, r0, #16
 2947 0016 0093     		str	r3, [sp]
 2948 0018 00F10F03 		add	r3, r0, #15
 2949 001c 00F10E02 		add	r2, r0, #14
 2950 0020 04A9     		add	r1, sp, #16
 2951 0022 11E90300 		ldmdb	r1, {r0, r1}
 2952              	.LVL366:
 2953 0026 FFF7FEFF 		bl	vPut_Current
 2954              	.LVL367:
1607:../user/source/DLT645.c ****     pucBuffer[9] = 0x07;
 2955              		.loc 1 1607 0
 2956 002a 9123     		movs	r3, #145
 2957 002c 2B72     		strb	r3, [r5, #8]
1608:../user/source/DLT645.c ****     pucBuffer[17] = 0;
 2958              		.loc 1 1608 0
 2959 002e 0723     		movs	r3, #7
 2960 0030 6B72     		strb	r3, [r5, #9]
1609:../user/source/DLT645.c ****     for (i = 0; i < 17; i++)
 2961              		.loc 1 1609 0
 2962 0032 6C74     		strb	r4, [r5, #17]
 2963              	.LVL368:
1610:../user/source/DLT645.c ****     {
 2964              		.loc 1 1610 0
 2965 0034 2346     		mov	r3, r4
 2966 0036 05E0     		b	.L185
 2967              	.LVL369:
 2968              	.L186:
1612:../user/source/DLT645.c ****     }
 2969              		.loc 1 1612 0 discriminator 3
 2970 0038 E95C     		ldrb	r1, [r5, r3]	@ zero_extendqisi2
 2971 003a 6A7C     		ldrb	r2, [r5, #17]	@ zero_extendqisi2
 2972 003c 0A44     		add	r2, r2, r1
 2973 003e 6A74     		strb	r2, [r5, #17]
1610:../user/source/DLT645.c ****     {
 2974              		.loc 1 1610 0 discriminator 3
 2975 0040 0133     		adds	r3, r3, #1
 2976              	.LVL370:
 2977 0042 DBB2     		uxtb	r3, r3
 2978              	.LVL371:
 2979              	.L185:
1610:../user/source/DLT645.c ****     {
 2980              		.loc 1 1610 0 is_stmt 0 discriminator 1
 2981 0044 102B     		cmp	r3, #16
 2982 0046 F7D9     		bls	.L186
1614:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2983              		.loc 1 1614 0 is_stmt 1
 2984 0048 1623     		movs	r3, #22
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 104


 2985              	.LVL372:
 2986 004a AB74     		strb	r3, [r5, #18]
1616:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 19);
 2987              		.loc 1 1616 0
 2988 004c 0722     		movs	r2, #7
 2989 004e 144B     		ldr	r3, .L190+4
 2990 0050 1A70     		strb	r2, [r3]
1617:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 2991              		.loc 1 1617 0
 2992 0052 144C     		ldr	r4, .L190+8
 2993 0054 1322     		movs	r2, #19
 2994 0056 2146     		mov	r1, r4
 2995 0058 2846     		mov	r0, r5
 2996 005a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2997              	.LVL373:
1618:../user/source/DLT645.c ****     {
 2998              		.loc 1 1618 0
 2999 005e 2046     		mov	r0, r4
 3000 0060 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3001              	.LVL374:
 3002 0064 10B9     		cbnz	r0, .L187
1620:../user/source/DLT645.c ****     }
 3003              		.loc 1 1620 0
 3004 0066 1048     		ldr	r0, .L190+12
 3005 0068 FFF7FEFF 		bl	Uart_DataPut
 3006              	.LVL375:
 3007              	.L187:
1624:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
 3008              		.loc 1 1624 0
 3009 006c 0F4C     		ldr	r4, .L190+16
 3010 006e 1322     		movs	r2, #19
 3011 0070 2146     		mov	r1, r4
 3012 0072 2846     		mov	r0, r5
 3013 0074 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3014              	.LVL376:
1625:../user/source/DLT645.c ****     {
 3015              		.loc 1 1625 0
 3016 0078 2046     		mov	r0, r4
 3017 007a FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3018              	.LVL377:
 3019 007e 50B9     		cbnz	r0, .L184
1627:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3020              		.loc 1 1627 0
 3021 0080 0B4C     		ldr	r4, .L190+20
 3022 0082 0022     		movs	r2, #0
 3023 0084 0B49     		ldr	r1, .L190+24
 3024 0086 2046     		mov	r0, r4
 3025 0088 FFF7FEFF 		bl	USART_ITConfig
 3026              	.LVL378:
1628:../user/source/DLT645.c ****     }
 3027              		.loc 1 1628 0
 3028 008c 0122     		movs	r2, #1
 3029 008e 0A49     		ldr	r1, .L190+28
 3030 0090 2046     		mov	r0, r4
 3031 0092 FFF7FEFF 		bl	USART_ITConfig
 3032              	.LVL379:
 3033              	.L184:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 105


1631:../user/source/DLT645.c **** 
 3034              		.loc 1 1631 0
 3035 0096 05B0     		add	sp, sp, #20
 3036              	.LCFI29:
 3037              		.cfi_def_cfa_offset 12
 3038              		@ sp needed
 3039 0098 30BD     		pop	{r4, r5, pc}
 3040              	.LVL380:
 3041              	.L191:
 3042 009a 00BF     		.align	2
 3043              	.L190:
 3044 009c 00000000 		.word	TransFormer
 3045 00a0 00000000 		.word	.LANCHOR0
 3046 00a4 00000000 		.word	ucDrv_Buf_Uart3_Snd
 3047 00a8 00480040 		.word	1073760256
 3048 00ac 00000000 		.word	ucDrv_Buf_Uart2_Snd
 3049 00b0 00440040 		.word	1073759232
 3050 00b4 05010500 		.word	327941
 3051 00b8 07010700 		.word	459015
 3052              		.cfi_endproc
 3053              	.LFE137:
 3055              		.section	.text.vCurrent_CTRatio_ReadSet,"ax",%progbits
 3056              		.align	2
 3057              		.global	vCurrent_CTRatio_ReadSet
 3058              		.thumb
 3059              		.thumb_func
 3061              	vCurrent_CTRatio_ReadSet:
 3062              	.LFB138:
1644:../user/source/DLT645.c **** 
 3063              		.loc 1 1644 0
 3064              		.cfi_startproc
 3065              		@ args = 0, pretend = 0, frame = 0
 3066              		@ frame_needed = 0, uses_anonymous_args = 0
 3067              	.LVL381:
 3068 0000 38B5     		push	{r3, r4, r5, lr}
 3069              	.LCFI30:
 3070              		.cfi_def_cfa_offset 16
 3071              		.cfi_offset 3, -16
 3072              		.cfi_offset 4, -12
 3073              		.cfi_offset 5, -8
 3074              		.cfi_offset 14, -4
 3075 0002 0446     		mov	r4, r0
1647:../user/source/DLT645.c ****     pucBuffer[9] = 0x06;
 3076              		.loc 1 1647 0
 3077 0004 9123     		movs	r3, #145
 3078 0006 0372     		strb	r3, [r0, #8]
1648:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(TransFormer.CTratio);
 3079              		.loc 1 1648 0
 3080 0008 0623     		movs	r3, #6
 3081 000a 4372     		strb	r3, [r0, #9]
1649:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(TransFormer.CTratio);
 3082              		.loc 1 1649 0
 3083 000c 1E4B     		ldr	r3, .L198
 3084 000e 9D68     		ldr	r5, [r3, #8]
 3085 0010 2846     		mov	r0, r5
 3086              	.LVL382:
 3087 0012 FFF7FEFF 		bl	GetLowByte
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 106


 3088              	.LVL383:
 3089 0016 A073     		strb	r0, [r4, #14]
1650:../user/source/DLT645.c ****     pucBuffer[16] = 0;
 3090              		.loc 1 1650 0
 3091 0018 2846     		mov	r0, r5
 3092 001a FFF7FEFF 		bl	GetHighByte
 3093              	.LVL384:
 3094 001e E073     		strb	r0, [r4, #15]
1651:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
 3095              		.loc 1 1651 0
 3096 0020 0023     		movs	r3, #0
 3097 0022 2374     		strb	r3, [r4, #16]
 3098              	.LVL385:
1652:../user/source/DLT645.c ****     {
 3099              		.loc 1 1652 0
 3100 0024 05E0     		b	.L193
 3101              	.LVL386:
 3102              	.L194:
1654:../user/source/DLT645.c ****     }
 3103              		.loc 1 1654 0 discriminator 3
 3104 0026 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3105 0028 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 3106 002a 0A44     		add	r2, r2, r1
 3107 002c 2274     		strb	r2, [r4, #16]
1652:../user/source/DLT645.c ****     {
 3108              		.loc 1 1652 0 discriminator 3
 3109 002e 0133     		adds	r3, r3, #1
 3110              	.LVL387:
 3111 0030 DBB2     		uxtb	r3, r3
 3112              	.LVL388:
 3113              	.L193:
1652:../user/source/DLT645.c ****     {
 3114              		.loc 1 1652 0 is_stmt 0 discriminator 1
 3115 0032 0F2B     		cmp	r3, #15
 3116 0034 F7D9     		bls	.L194
1656:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 3117              		.loc 1 1656 0 is_stmt 1
 3118 0036 1623     		movs	r3, #22
 3119              	.LVL389:
 3120 0038 6374     		strb	r3, [r4, #17]
1658:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 18);
 3121              		.loc 1 1658 0
 3122 003a 0622     		movs	r2, #6
 3123 003c 134B     		ldr	r3, .L198+4
 3124 003e 1A70     		strb	r2, [r3]
1659:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 3125              		.loc 1 1659 0
 3126 0040 134D     		ldr	r5, .L198+8
 3127 0042 1222     		movs	r2, #18
 3128 0044 2946     		mov	r1, r5
 3129 0046 2046     		mov	r0, r4
 3130 0048 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3131              	.LVL390:
1660:../user/source/DLT645.c ****     {
 3132              		.loc 1 1660 0
 3133 004c 2846     		mov	r0, r5
 3134 004e FFF7FEFF 		bl	blDrv_Buf_IsEmpty
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 107


 3135              	.LVL391:
 3136 0052 10B9     		cbnz	r0, .L195
1662:../user/source/DLT645.c ****     }
 3137              		.loc 1 1662 0
 3138 0054 0F48     		ldr	r0, .L198+12
 3139 0056 FFF7FEFF 		bl	Uart_DataPut
 3140              	.LVL392:
 3141              	.L195:
1666:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
 3142              		.loc 1 1666 0
 3143 005a 0F4D     		ldr	r5, .L198+16
 3144 005c 1222     		movs	r2, #18
 3145 005e 2946     		mov	r1, r5
 3146 0060 2046     		mov	r0, r4
 3147 0062 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3148              	.LVL393:
1667:../user/source/DLT645.c ****     {
 3149              		.loc 1 1667 0
 3150 0066 2846     		mov	r0, r5
 3151 0068 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3152              	.LVL394:
 3153 006c 50B9     		cbnz	r0, .L192
1669:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3154              		.loc 1 1669 0
 3155 006e 0B4C     		ldr	r4, .L198+20
 3156              	.LVL395:
 3157 0070 0022     		movs	r2, #0
 3158 0072 0B49     		ldr	r1, .L198+24
 3159 0074 2046     		mov	r0, r4
 3160 0076 FFF7FEFF 		bl	USART_ITConfig
 3161              	.LVL396:
1670:../user/source/DLT645.c ****     }
 3162              		.loc 1 1670 0
 3163 007a 0122     		movs	r2, #1
 3164 007c 0949     		ldr	r1, .L198+28
 3165 007e 2046     		mov	r0, r4
 3166 0080 FFF7FEFF 		bl	USART_ITConfig
 3167              	.LVL397:
 3168              	.L192:
 3169 0084 38BD     		pop	{r3, r4, r5, pc}
 3170              	.L199:
 3171 0086 00BF     		.align	2
 3172              	.L198:
 3173 0088 00000000 		.word	TransFormer
 3174 008c 00000000 		.word	.LANCHOR0
 3175 0090 00000000 		.word	ucDrv_Buf_Uart3_Snd
 3176 0094 00480040 		.word	1073760256
 3177 0098 00000000 		.word	ucDrv_Buf_Uart2_Snd
 3178 009c 00440040 		.word	1073759232
 3179 00a0 05010500 		.word	327941
 3180 00a4 07010700 		.word	459015
 3181              		.cfi_endproc
 3182              	.LFE138:
 3184              		.section	.text.vCurrent_TransFormer_Capacity_ReadSet,"ax",%progbits
 3185              		.align	2
 3186              		.global	vCurrent_TransFormer_Capacity_ReadSet
 3187              		.thumb
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 108


 3188              		.thumb_func
 3190              	vCurrent_TransFormer_Capacity_ReadSet:
 3191              	.LFB139:
1686:../user/source/DLT645.c ****     uint8_t i;
 3192              		.loc 1 1686 0
 3193              		.cfi_startproc
 3194              		@ args = 0, pretend = 0, frame = 0
 3195              		@ frame_needed = 0, uses_anonymous_args = 0
 3196              	.LVL398:
 3197 0000 38B5     		push	{r3, r4, r5, lr}
 3198              	.LCFI31:
 3199              		.cfi_def_cfa_offset 16
 3200              		.cfi_offset 3, -16
 3201              		.cfi_offset 4, -12
 3202              		.cfi_offset 5, -8
 3203              		.cfi_offset 14, -4
 3204 0002 0446     		mov	r4, r0
1688:../user/source/DLT645.c ****     pucBuffer[9] = 0x06;
 3205              		.loc 1 1688 0
 3206 0004 9123     		movs	r3, #145
 3207 0006 0372     		strb	r3, [r0, #8]
1689:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(TransFormer.capacity);
 3208              		.loc 1 1689 0
 3209 0008 0623     		movs	r3, #6
 3210 000a 4372     		strb	r3, [r0, #9]
1690:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(TransFormer.capacity);
 3211              		.loc 1 1690 0
 3212 000c 1E4B     		ldr	r3, .L206
 3213 000e 1D68     		ldr	r5, [r3]
 3214 0010 2846     		mov	r0, r5
 3215              	.LVL399:
 3216 0012 FFF7FEFF 		bl	GetLowByte
 3217              	.LVL400:
 3218 0016 A073     		strb	r0, [r4, #14]
1691:../user/source/DLT645.c ****     pucBuffer[16] = 0;
 3219              		.loc 1 1691 0
 3220 0018 2846     		mov	r0, r5
 3221 001a FFF7FEFF 		bl	GetHighByte
 3222              	.LVL401:
 3223 001e E073     		strb	r0, [r4, #15]
1692:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
 3224              		.loc 1 1692 0
 3225 0020 0023     		movs	r3, #0
 3226 0022 2374     		strb	r3, [r4, #16]
 3227              	.LVL402:
1693:../user/source/DLT645.c ****     {
 3228              		.loc 1 1693 0
 3229 0024 05E0     		b	.L201
 3230              	.LVL403:
 3231              	.L202:
1695:../user/source/DLT645.c ****     }
 3232              		.loc 1 1695 0 discriminator 3
 3233 0026 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3234 0028 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 3235 002a 0A44     		add	r2, r2, r1
 3236 002c 2274     		strb	r2, [r4, #16]
1693:../user/source/DLT645.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 109


 3237              		.loc 1 1693 0 discriminator 3
 3238 002e 0133     		adds	r3, r3, #1
 3239              	.LVL404:
 3240 0030 DBB2     		uxtb	r3, r3
 3241              	.LVL405:
 3242              	.L201:
1693:../user/source/DLT645.c ****     {
 3243              		.loc 1 1693 0 is_stmt 0 discriminator 1
 3244 0032 0F2B     		cmp	r3, #15
 3245 0034 F7D9     		bls	.L202
1697:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 3246              		.loc 1 1697 0 is_stmt 1
 3247 0036 1623     		movs	r3, #22
 3248              	.LVL406:
 3249 0038 6374     		strb	r3, [r4, #17]
1699:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 18);
 3250              		.loc 1 1699 0
 3251 003a 0022     		movs	r2, #0
 3252 003c 134B     		ldr	r3, .L206+4
 3253 003e 1A70     		strb	r2, [r3]
1700:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 3254              		.loc 1 1700 0
 3255 0040 134D     		ldr	r5, .L206+8
 3256 0042 1222     		movs	r2, #18
 3257 0044 2946     		mov	r1, r5
 3258 0046 2046     		mov	r0, r4
 3259 0048 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3260              	.LVL407:
1701:../user/source/DLT645.c ****     {
 3261              		.loc 1 1701 0
 3262 004c 2846     		mov	r0, r5
 3263 004e FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3264              	.LVL408:
 3265 0052 10B9     		cbnz	r0, .L203
1703:../user/source/DLT645.c ****     }
 3266              		.loc 1 1703 0
 3267 0054 0F48     		ldr	r0, .L206+12
 3268 0056 FFF7FEFF 		bl	Uart_DataPut
 3269              	.LVL409:
 3270              	.L203:
1707:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
 3271              		.loc 1 1707 0
 3272 005a 0F4D     		ldr	r5, .L206+16
 3273 005c 1222     		movs	r2, #18
 3274 005e 2946     		mov	r1, r5
 3275 0060 2046     		mov	r0, r4
 3276 0062 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3277              	.LVL410:
1708:../user/source/DLT645.c ****     {
 3278              		.loc 1 1708 0
 3279 0066 2846     		mov	r0, r5
 3280 0068 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3281              	.LVL411:
 3282 006c 50B9     		cbnz	r0, .L200
1710:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3283              		.loc 1 1710 0
 3284 006e 0B4C     		ldr	r4, .L206+20
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 110


 3285              	.LVL412:
 3286 0070 0022     		movs	r2, #0
 3287 0072 0B49     		ldr	r1, .L206+24
 3288 0074 2046     		mov	r0, r4
 3289 0076 FFF7FEFF 		bl	USART_ITConfig
 3290              	.LVL413:
1711:../user/source/DLT645.c ****     }
 3291              		.loc 1 1711 0
 3292 007a 0122     		movs	r2, #1
 3293 007c 0949     		ldr	r1, .L206+28
 3294 007e 2046     		mov	r0, r4
 3295 0080 FFF7FEFF 		bl	USART_ITConfig
 3296              	.LVL414:
 3297              	.L200:
 3298 0084 38BD     		pop	{r3, r4, r5, pc}
 3299              	.L207:
 3300 0086 00BF     		.align	2
 3301              	.L206:
 3302 0088 00000000 		.word	TransFormer
 3303 008c 00000000 		.word	.LANCHOR0
 3304 0090 00000000 		.word	ucDrv_Buf_Uart3_Snd
 3305 0094 00480040 		.word	1073760256
 3306 0098 00000000 		.word	ucDrv_Buf_Uart2_Snd
 3307 009c 00440040 		.word	1073759232
 3308 00a0 05010500 		.word	327941
 3309 00a4 07010700 		.word	459015
 3310              		.cfi_endproc
 3311              	.LFE139:
 3313              		.section	.text.vEnergy_Modify_ReadSet,"ax",%progbits
 3314              		.align	2
 3315              		.global	vEnergy_Modify_ReadSet
 3316              		.thumb
 3317              		.thumb_func
 3319              	vEnergy_Modify_ReadSet:
 3320              	.LFB155:
2403:../user/source/DLT645.c ****     //68 AA AA AA AA AA AA 68 91 04 33 76 34 33 71 16
 3321              		.loc 1 2403 0
 3322              		.cfi_startproc
 3323              		@ args = 0, pretend = 0, frame = 0
 3324              		@ frame_needed = 0, uses_anonymous_args = 0
 3325              	.LVL415:
 3326 0000 38B5     		push	{r3, r4, r5, lr}
 3327              	.LCFI32:
 3328              		.cfi_def_cfa_offset 16
 3329              		.cfi_offset 3, -16
 3330              		.cfi_offset 4, -12
 3331              		.cfi_offset 5, -8
 3332              		.cfi_offset 14, -4
2407:../user/source/DLT645.c ****         return;
 3333              		.loc 1 2407 0
 3334 0002 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 3335 0004 912B     		cmp	r3, #145
 3336 0006 48D1     		bne	.L208
2410:../user/source/DLT645.c ****     //ratio = EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR);
 3337              		.loc 1 2410 0
 3338 0008 0623     		movs	r3, #6
 3339 000a 4372     		strb	r3, [r0, #9]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 111


2412:../user/source/DLT645.c **** 
 3340              		.loc 1 2412 0
 3341 000c 234B     		ldr	r3, .L214
 3342 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3343              	.LVL416:
2414:../user/source/DLT645.c ****     pucbuffer[15] = DEC2BCD(ratio / 100); //¸ßÎ»ÔÚºó
 3344              		.loc 1 2414 0
 3345 0010 2349     		ldr	r1, .L214+4
 3346 0012 A1FB0231 		umull	r3, r1, r1, r2
 3347 0016 4909     		lsrs	r1, r1, #5
 3348 0018 6423     		movs	r3, #100
 3349 001a 03FB1123 		mls	r3, r3, r1, r2
 3350 001e DBB2     		uxtb	r3, r3
 3351 0020 204A     		ldr	r2, .L214+8
 3352              	.LVL417:
 3353 0022 A2FB0342 		umull	r4, r2, r2, r3
 3354 0026 D208     		lsrs	r2, r2, #3
 3355 0028 02EB8205 		add	r5, r2, r2, lsl #2
 3356 002c 6C00     		lsls	r4, r5, #1
 3357 002e 1B1B     		subs	r3, r3, r4
 3358 0030 43EA0213 		orr	r3, r3, r2, lsl #4
 3359 0034 8373     		strb	r3, [r0, #14]
2415:../user/source/DLT645.c ****     pucbuffer[16] = 0;
 3360              		.loc 1 2415 0
 3361 0036 C173     		strb	r1, [r0, #15]
2416:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
 3362              		.loc 1 2416 0
 3363 0038 0023     		movs	r3, #0
 3364 003a 0374     		strb	r3, [r0, #16]
 3365              	.LVL418:
2417:../user/source/DLT645.c ****     {
 3366              		.loc 1 2417 0
 3367 003c 04E0     		b	.L210
 3368              	.LVL419:
 3369              	.L211:
2419:../user/source/DLT645.c ****     }
 3370              		.loc 1 2419 0 discriminator 3
 3371 003e C15C     		ldrb	r1, [r0, r3]	@ zero_extendqisi2
 3372 0040 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 3373 0042 0A44     		add	r2, r2, r1
 3374 0044 0274     		strb	r2, [r0, #16]
2417:../user/source/DLT645.c ****     {
 3375              		.loc 1 2417 0 discriminator 3
 3376 0046 0133     		adds	r3, r3, #1
 3377              	.LVL420:
 3378              	.L210:
2417:../user/source/DLT645.c ****     {
 3379              		.loc 1 2417 0 is_stmt 0 discriminator 1
 3380 0048 0F2B     		cmp	r3, #15
 3381 004a F8D9     		bls	.L211
 3382 004c 0446     		mov	r4, r0
2421:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 3383              		.loc 1 2421 0 is_stmt 1
 3384 004e 1623     		movs	r3, #22
 3385              	.LVL421:
 3386 0050 4374     		strb	r3, [r0, #17]
2423:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, &ucDrv_Buf_Uart3_Snd, 18);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 112


 3387              		.loc 1 2423 0
 3388 0052 0422     		movs	r2, #4
 3389 0054 144B     		ldr	r3, .L214+12
 3390 0056 1A70     		strb	r2, [r3]
2424:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 3391              		.loc 1 2424 0
 3392 0058 144D     		ldr	r5, .L214+16
 3393 005a 1222     		movs	r2, #18
 3394 005c 2946     		mov	r1, r5
 3395 005e FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3396              	.LVL422:
2425:../user/source/DLT645.c ****     {
 3397              		.loc 1 2425 0
 3398 0062 2846     		mov	r0, r5
 3399 0064 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3400              	.LVL423:
 3401 0068 10B9     		cbnz	r0, .L212
2427:../user/source/DLT645.c ****     }
 3402              		.loc 1 2427 0
 3403 006a 1148     		ldr	r0, .L214+20
 3404 006c FFF7FEFF 		bl	Uart_DataPut
 3405              	.LVL424:
 3406              	.L212:
2431:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
 3407              		.loc 1 2431 0
 3408 0070 104D     		ldr	r5, .L214+24
 3409 0072 1222     		movs	r2, #18
 3410 0074 2946     		mov	r1, r5
 3411 0076 2046     		mov	r0, r4
 3412 0078 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3413              	.LVL425:
2432:../user/source/DLT645.c ****     {
 3414              		.loc 1 2432 0
 3415 007c 2846     		mov	r0, r5
 3416 007e FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3417              	.LVL426:
 3418 0082 50B9     		cbnz	r0, .L208
2434:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3419              		.loc 1 2434 0
 3420 0084 0C4C     		ldr	r4, .L214+28
 3421              	.LVL427:
 3422 0086 0022     		movs	r2, #0
 3423 0088 0C49     		ldr	r1, .L214+32
 3424 008a 2046     		mov	r0, r4
 3425 008c FFF7FEFF 		bl	USART_ITConfig
 3426              	.LVL428:
2435:../user/source/DLT645.c ****     }
 3427              		.loc 1 2435 0
 3428 0090 0122     		movs	r2, #1
 3429 0092 0B49     		ldr	r1, .L214+36
 3430 0094 2046     		mov	r0, r4
 3431 0096 FFF7FEFF 		bl	USART_ITConfig
 3432              	.LVL429:
 3433              	.L208:
 3434 009a 38BD     		pop	{r3, r4, r5, pc}
 3435              	.L215:
 3436              		.align	2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 113


 3437              	.L214:
 3438 009c 00000000 		.word	ucDayfrozen_Modify_Ratio
 3439 00a0 1F85EB51 		.word	1374389535
 3440 00a4 CDCCCCCC 		.word	-858993459
 3441 00a8 00000000 		.word	.LANCHOR0
 3442 00ac 00000000 		.word	ucDrv_Buf_Uart3_Snd
 3443 00b0 00480040 		.word	1073760256
 3444 00b4 00000000 		.word	ucDrv_Buf_Uart2_Snd
 3445 00b8 00440040 		.word	1073759232
 3446 00bc 05010500 		.word	327941
 3447 00c0 07010700 		.word	459015
 3448              		.cfi_endproc
 3449              	.LFE155:
 3451              		.section	.text.vRead_Version,"ax",%progbits
 3452              		.align	2
 3453              		.global	vRead_Version
 3454              		.thumb
 3455              		.thumb_func
 3457              	vRead_Version:
 3458              	.LFB163:
2703:../user/source/DLT645.c ****     uint16_t n = 0; //Êı¾İ¿é¸öÊı
2704:../user/source/DLT645.c ****     uint16_t length = pucbuffer[9];
2705:../user/source/DLT645.c ****     uint16_t ID_length = 0;
2706:../user/source/DLT645.c ****     uint32_t current = 0;
2707:../user/source/DLT645.c ****     uint16_t i = 0;
2708:../user/source/DLT645.c ****     uint32_t ABCcurrent = 0;
2709:../user/source/DLT645.c **** 
2710:../user/source/DLT645.c ****     if (pucbuffer[8] == 0x91 || pucbuffer[8] == 0xB1) //ÎŞºóĞøÖ¡£¬»ò·ÖÖ¡µÄµÚÒ»Ö¡
2711:../user/source/DLT645.c ****     {
2712:../user/source/DLT645.c ****         ID_length = 9; //Êı¾İ±êÊ¶*4 + Ê±±ê*5
2713:../user/source/DLT645.c ****     }
2714:../user/source/DLT645.c ****     if (pucbuffer[8] == 0x92 || pucbuffer[8] == 0xB2)
2715:../user/source/DLT645.c ****     {
2716:../user/source/DLT645.c ****         ID_length = 4; //Êı¾İ±êÊ¶*4 £¬ºöÂÔºóÃæµÄSEQ*1£¬Ô­ÒòÎªÕû³ı2ºó½á¹ûÒ»Ñù
2717:../user/source/DLT645.c ****     }
2718:../user/source/DLT645.c **** 
2719:../user/source/DLT645.c ****     switch (pucbuffer[10])
2720:../user/source/DLT645.c ****     {
2721:../user/source/DLT645.c ****     /*AÏàµçÁ÷*/
2722:../user/source/DLT645.c ****     case 0x34:
2723:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
2724:../user/source/DLT645.c ****         n = (length - ID_length) / 3;
2725:../user/source/DLT645.c ****         while (n--)
2726:../user/source/DLT645.c ****         {
2727:../user/source/DLT645.c ****             if (pucbuffer[10 + ID_length + 3 * n] == 0x32 || //ÊÇ3²»ÊÇ9
2728:../user/source/DLT645.c ****                 pucbuffer[11 + ID_length + 3 * n] == 0x32 ||
2729:../user/source/DLT645.c ****                 pucbuffer[12 + ID_length + 3 * n] == 0x32)
2730:../user/source/DLT645.c ****                 continue;
2731:../user/source/DLT645.c ****             /*¶ÁÈ¡µçÁ÷*/
2732:../user/source/DLT645.c ****             vGet_Current(pucbuffer[10 + ID_length + 3 * n],
2733:../user/source/DLT645.c ****                          pucbuffer[11 + ID_length + 3 * n],
2734:../user/source/DLT645.c ****                          pucbuffer[12 + ID_length + 3 * n],
2735:../user/source/DLT645.c ****                          &Acurrent);
2736:../user/source/DLT645.c ****             /*ĞŞ¸ÄµçÁ÷*/
2737:../user/source/DLT645.c ****             Acurrent.value = (Acurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT
2738:../user/source/DLT645.c ****             /*»ØĞ´µçÁ÷*/
2739:../user/source/DLT645.c ****             vPut_Current(Acurrent,
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 114


2740:../user/source/DLT645.c ****                          &pucbuffer[10 + ID_length + 3 * n],
2741:../user/source/DLT645.c ****                          &pucbuffer[11 + ID_length + 3 * n],
2742:../user/source/DLT645.c ****                          &pucbuffer[12 + ID_length + 3 * n]);
2743:../user/source/DLT645.c ****         }
2744:../user/source/DLT645.c ****         pucbuffer[length + 10] = 0;
2745:../user/source/DLT645.c ****         for (i = 0; i < (length + 10); i++)
2746:../user/source/DLT645.c ****         {
2747:../user/source/DLT645.c ****             pucbuffer[length + 10] += pucbuffer[i];
2748:../user/source/DLT645.c ****         }
2749:../user/source/DLT645.c ****         pucbuffer[length + 11] = 16;
2750:../user/source/DLT645.c **** #endif
2751:../user/source/DLT645.c ****         break;
2752:../user/source/DLT645.c ****         /*BÏàµçÁ÷*/
2753:../user/source/DLT645.c ****     case 0x35:
2754:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
2755:../user/source/DLT645.c ****         n = (length - ID_length) / 3;
2756:../user/source/DLT645.c ****         while (n--)
2757:../user/source/DLT645.c ****         {
2758:../user/source/DLT645.c ****             if (pucbuffer[10 + ID_length + 3 * n] == 0x32 ||
2759:../user/source/DLT645.c ****                 pucbuffer[11 + ID_length + 3 * n] == 0x32 ||
2760:../user/source/DLT645.c ****                 pucbuffer[12 + ID_length + 3 * n] == 0x32)
2761:../user/source/DLT645.c ****                 continue;
2762:../user/source/DLT645.c ****             /*¶ÁÈ¡µçÁ÷*/
2763:../user/source/DLT645.c ****             vGet_Current(pucbuffer[10 + ID_length + 3 * n],
2764:../user/source/DLT645.c ****                          pucbuffer[11 + ID_length + 3 * n],
2765:../user/source/DLT645.c ****                          pucbuffer[12 + ID_length + 3 * n],
2766:../user/source/DLT645.c ****                          &Bcurrent);
2767:../user/source/DLT645.c ****             /*ĞŞ¸ÄµçÁ÷*/
2768:../user/source/DLT645.c ****             Bcurrent.value = (Bcurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT
2769:../user/source/DLT645.c ****                                                                                   : Bcurrent.value)
2770:../user/source/DLT645.c ****             /*»ØĞ´µçÁ÷*/
2771:../user/source/DLT645.c ****             vPut_Current(Bcurrent,
2772:../user/source/DLT645.c ****                          &pucbuffer[10 + ID_length + 3 * n],
2773:../user/source/DLT645.c ****                          &pucbuffer[11 + ID_length + 3 * n],
2774:../user/source/DLT645.c ****                          &pucbuffer[12 + ID_length + 3 * n]);
2775:../user/source/DLT645.c ****         }
2776:../user/source/DLT645.c ****         pucbuffer[length + 10] = 0;
2777:../user/source/DLT645.c ****         for (i = 0; i < (length + 10); i++)
2778:../user/source/DLT645.c ****         {
2779:../user/source/DLT645.c ****             pucbuffer[length + 10] += pucbuffer[i];
2780:../user/source/DLT645.c ****         }
2781:../user/source/DLT645.c ****         pucbuffer[length + 11] = 16;
2782:../user/source/DLT645.c **** #endif
2783:../user/source/DLT645.c ****         break;
2784:../user/source/DLT645.c ****     case 0x36: //CÏàµçÁ÷
2785:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
2786:../user/source/DLT645.c ****         n = (length - ID_length) / 3;
2787:../user/source/DLT645.c ****         while (n--)
2788:../user/source/DLT645.c ****         {
2789:../user/source/DLT645.c ****             if (pucbuffer[10 + ID_length + 9 * n] == 0x32 ||
2790:../user/source/DLT645.c ****                 pucbuffer[11 + ID_length + 9 * n] == 0x32 ||
2791:../user/source/DLT645.c ****                 pucbuffer[12 + ID_length + 9 * n] == 0x32)
2792:../user/source/DLT645.c ****                 continue;
2793:../user/source/DLT645.c ****             /*¶ÁÈ¡µçÁ÷*/
2794:../user/source/DLT645.c ****             vGet_Current(pucbuffer[10 + ID_length + 3 * n],
2795:../user/source/DLT645.c ****                          pucbuffer[11 + ID_length + 3 * n],
2796:../user/source/DLT645.c ****                          pucbuffer[12 + ID_length + 3 * n],
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 115


2797:../user/source/DLT645.c ****                          &Ccurrent);
2798:../user/source/DLT645.c ****             /*ĞŞ¸ÄµçÁ÷*/
2799:../user/source/DLT645.c ****             Ccurrent.value = (Ccurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT
2800:../user/source/DLT645.c ****             /*»ØĞ´µçÁ÷*/
2801:../user/source/DLT645.c ****             vPut_Current(Ccurrent,
2802:../user/source/DLT645.c ****                          &pucbuffer[10 + ID_length + 3 * n],
2803:../user/source/DLT645.c ****                          &pucbuffer[11 + ID_length + 3 * n],
2804:../user/source/DLT645.c ****                          &pucbuffer[12 + ID_length + 3 * n]);
2805:../user/source/DLT645.c ****         }
2806:../user/source/DLT645.c ****         pucbuffer[length + 10] = 0;
2807:../user/source/DLT645.c ****         for (i = 0; i < (length + 10); i++)
2808:../user/source/DLT645.c ****         {
2809:../user/source/DLT645.c ****             pucbuffer[length + 10] += pucbuffer[i];
2810:../user/source/DLT645.c ****         }
2811:../user/source/DLT645.c ****         pucbuffer[length + 11] = 16;
2812:../user/source/DLT645.c **** #endif
2813:../user/source/DLT645.c ****         break;
2814:../user/source/DLT645.c ****     case 0x32: //¿éµçÁ÷
2815:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_DEVIATION
2816:../user/source/DLT645.c ****         n = (length - ID_length) / 9; //Êı¾İµã¸öÊı
2817:../user/source/DLT645.c ****         while (n--)
2818:../user/source/DLT645.c ****         {
2819:../user/source/DLT645.c ****             vGet_Current(pucbuffer[10 + ID_length + 9 * n],
2820:../user/source/DLT645.c ****                          pucbuffer[11 + ID_length + 9 * n],
2821:../user/source/DLT645.c ****                          pucbuffer[12 + ID_length + 9 * n],
2822:../user/source/DLT645.c ****                          &Acurrent);
2823:../user/source/DLT645.c **** 
2824:../user/source/DLT645.c ****             vGet_Current(pucbuffer[13 + ID_length + 9 * n],
2825:../user/source/DLT645.c ****                          pucbuffer[14 + ID_length + 9 * n],
2826:../user/source/DLT645.c ****                          pucbuffer[15 + ID_length + 9 * n],
2827:../user/source/DLT645.c ****                          &Bcurrent);
2828:../user/source/DLT645.c **** 
2829:../user/source/DLT645.c ****             vGet_Current(pucbuffer[16 + ID_length + 9 * n],
2830:../user/source/DLT645.c ****                          pucbuffer[17 + ID_length + 9 * n],
2831:../user/source/DLT645.c ****                          pucbuffer[18 + ID_length + 9 * n],
2832:../user/source/DLT645.c ****                          &Ccurrent);
2833:../user/source/DLT645.c **** 
2834:../user/source/DLT645.c ****             //µçÁ÷Îª¸ºÖµ,²»ĞŞ¸ÄµçÁ÷
2835:../user/source/DLT645.c ****             if (Acurrent.isminus || Bcurrent.isminus || Ccurrent.isminus)
2836:../user/source/DLT645.c ****                 continue;
2837:../user/source/DLT645.c ****             //µçÁ÷Îª0£¬²»ĞŞ¸ÄµçÁ÷
2838:../user/source/DLT645.c ****             if ((Acurrent.value == 0) || (Bcurrent.value == 0) || (Ccurrent.value == 0))
2839:../user/source/DLT645.c ****                 continue;
2840:../user/source/DLT645.c ****             //µçÁ÷Ïà»¥Ö®¼ä²»³¬²î£¬²»ĞŞ¸ÄµçÁ÷
2841:../user/source/DLT645.c ****             if (CURRENT_MAX_DVALUE * MAX(Acurrent.value, MAX(Bcurrent.value, Ccurrent.value)) / 100
2842:../user/source/DLT645.c ****                 MIN(Acurrent.value, MIN(Bcurrent.value, Ccurrent.value)))
2843:../user/source/DLT645.c ****                 continue;
2844:../user/source/DLT645.c ****             else //ĞèÒªĞŞ¸Ä£¬×î´óÖµ¼õĞ¡£¬×îĞ¡ÖµÔö´ó£¬Ê£ÏÂµÄÊÇÖĞ¼äÖµ
2845:../user/source/DLT645.c ****             {
2846:../user/source/DLT645.c ****                 if ((Acurrent.value >= Bcurrent.value) && (Bcurrent.value >= Ccurrent.value))
2847:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Acurrent, &Bcurrent, &Ccurrent);
2848:../user/source/DLT645.c ****                 else if ((Acurrent.value >= Ccurrent.value) && (Ccurrent.value >= Bcurrent.value))
2849:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Acurrent, &Ccurrent, &Bcurrent);
2850:../user/source/DLT645.c ****                 else if ((Bcurrent.value >= Acurrent.value) && (Acurrent.value >= Ccurrent.value))
2851:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Bcurrent, &Acurrent, &Ccurrent);
2852:../user/source/DLT645.c ****                 else if ((Bcurrent.value >= Ccurrent.value) && (Ccurrent.value >= Acurrent.value))
2853:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Bcurrent, &Ccurrent, &Acurrent);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 116


2854:../user/source/DLT645.c ****                 else if ((Ccurrent.value >= Acurrent.value) && (Acurrent.value >= Bcurrent.value))
2855:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Ccurrent, &Acurrent, &Bcurrent);
2856:../user/source/DLT645.c ****                 else if ((Ccurrent.value >= Bcurrent.value) && (Bcurrent.value >= Acurrent.value))
2857:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Ccurrent, &Bcurrent, &Acurrent);
2858:../user/source/DLT645.c ****                 /*»ØĞ´µçÁ÷*/
2859:../user/source/DLT645.c ****                 vPut_Current(Acurrent,
2860:../user/source/DLT645.c ****                              &pucbuffer[10 + ID_length + 9 * n],
2861:../user/source/DLT645.c ****                              &pucbuffer[11 + ID_length + 9 * n],
2862:../user/source/DLT645.c ****                              &pucbuffer[12 + ID_length + 9 * n]);
2863:../user/source/DLT645.c **** 
2864:../user/source/DLT645.c ****                 vPut_Current(Bcurrent,
2865:../user/source/DLT645.c ****                              &pucbuffer[14 + ID_length + 9 * n],
2866:../user/source/DLT645.c ****                              &pucbuffer[15 + ID_length + 9 * n],
2867:../user/source/DLT645.c ****                              &pucbuffer[16 + ID_length + 9 * n]);
2868:../user/source/DLT645.c **** 
2869:../user/source/DLT645.c ****                 vPut_Current(Ccurrent,
2870:../user/source/DLT645.c ****                              &pucbuffer[17 + ID_length + 9 * n],
2871:../user/source/DLT645.c ****                              &pucbuffer[18 + ID_length + 9 * n],
2872:../user/source/DLT645.c ****                              &pucbuffer[19 + ID_length + 9 * n]);
2873:../user/source/DLT645.c ****             }
2874:../user/source/DLT645.c ****         }
2875:../user/source/DLT645.c ****         pucbuffer[length + 10] = 0;
2876:../user/source/DLT645.c ****         for (i = 0; i < length + 10; i++)
2877:../user/source/DLT645.c ****         {
2878:../user/source/DLT645.c ****             pucbuffer[length + 10] += pucbuffer[i];
2879:../user/source/DLT645.c ****         }
2880:../user/source/DLT645.c ****         pucbuffer[length + 11] = 0x16;
2881:../user/source/DLT645.c **** #endif
2882:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
2883:../user/source/DLT645.c ****         n = (length - ID_length) / 9; //Êı¾İµã¸öÊı
2884:../user/source/DLT645.c ****         while (n--)
2885:../user/source/DLT645.c ****         {
2886:../user/source/DLT645.c ****             /*FFÎŞĞ§Êı¾İ*/
2887:../user/source/DLT645.c ****             if (pucbuffer[10 + ID_length + 9 * n] == 0x32 ||
2888:../user/source/DLT645.c ****                 pucbuffer[11 + ID_length + 9 * n] == 0x32 ||
2889:../user/source/DLT645.c ****                 pucbuffer[12 + ID_length + 9 * n] == 0x32 ||
2890:../user/source/DLT645.c ****                 pucbuffer[13 + ID_length + 9 * n] == 0x32 ||
2891:../user/source/DLT645.c ****                 pucbuffer[14 + ID_length + 9 * n] == 0x32 ||
2892:../user/source/DLT645.c ****                 pucbuffer[15 + ID_length + 9 * n] == 0x32 ||
2893:../user/source/DLT645.c ****                 pucbuffer[16 + ID_length + 9 * n] == 0x32 ||
2894:../user/source/DLT645.c ****                 pucbuffer[17 + ID_length + 9 * n] == 0x32 ||
2895:../user/source/DLT645.c ****                 pucbuffer[18 + ID_length + 9 * n] == 0x32)
2896:../user/source/DLT645.c ****                 continue;
2897:../user/source/DLT645.c **** 
2898:../user/source/DLT645.c ****             /*¶ÁÈ¡µçÁ÷*/
2899:../user/source/DLT645.c ****             vGet_Current(pucbuffer[10 + ID_length + 9 * n],
2900:../user/source/DLT645.c ****                          pucbuffer[11 + ID_length + 9 * n],
2901:../user/source/DLT645.c ****                          pucbuffer[12 + ID_length + 9 * n],
2902:../user/source/DLT645.c ****                          &Acurrent);
2903:../user/source/DLT645.c ****             vGet_Current(pucbuffer[13 + ID_length + 9 * n],
2904:../user/source/DLT645.c ****                          pucbuffer[14 + ID_length + 9 * n],
2905:../user/source/DLT645.c ****                          pucbuffer[15 + ID_length + 9 * n],
2906:../user/source/DLT645.c ****                          &Bcurrent);
2907:../user/source/DLT645.c ****             vGet_Current(pucbuffer[16 + ID_length + 9 * n],
2908:../user/source/DLT645.c ****                          pucbuffer[17 + ID_length + 9 * n],
2909:../user/source/DLT645.c ****                          pucbuffer[18 + ID_length + 9 * n],
2910:../user/source/DLT645.c ****                          &Ccurrent);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 117


2911:../user/source/DLT645.c **** 
2912:../user/source/DLT645.c ****             ABCcurrent = Acurrent.value + Bcurrent.value + Ccurrent.value;
2913:../user/source/DLT645.c ****             if (ABCcurrent > TransFormer.CT2_CurrentLimit)
2914:../user/source/DLT645.c ****             {
2915:../user/source/DLT645.c ****                 Acurrent.value = TransFormer.CT2_CurrentLimit * Acurrent.value / ABCcurrent;
2916:../user/source/DLT645.c ****                 Bcurrent.value = TransFormer.CT2_CurrentLimit * Bcurrent.value / ABCcurrent;
2917:../user/source/DLT645.c ****                 Ccurrent.value = TransFormer.CT2_CurrentLimit * Ccurrent.value / ABCcurrent;
2918:../user/source/DLT645.c ****             }
2919:../user/source/DLT645.c ****             /*±£Ö¤Ã¿µ¥ÏàµçÁ÷²»ÖØÔØ*/
2920:../user/source/DLT645.c ****             Acurrent.value = (Acurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT
2921:../user/source/DLT645.c ****             Bcurrent.value = (Bcurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT
2922:../user/source/DLT645.c ****             Ccurrent.value = (Ccurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT
2923:../user/source/DLT645.c ****             /*»ØĞ´µçÁ÷*/
2924:../user/source/DLT645.c ****             vPut_Current(Acurrent,
2925:../user/source/DLT645.c ****                          &pucbuffer[10 + ID_length + 9 * n],
2926:../user/source/DLT645.c ****                          &pucbuffer[11 + ID_length + 9 * n],
2927:../user/source/DLT645.c ****                          &pucbuffer[12 + ID_length + 9 * n]);
2928:../user/source/DLT645.c ****             vPut_Current(Bcurrent,
2929:../user/source/DLT645.c ****                          &pucbuffer[13 + ID_length + 9 * n],
2930:../user/source/DLT645.c ****                          &pucbuffer[14 + ID_length + 9 * n],
2931:../user/source/DLT645.c ****                          &pucbuffer[15 + ID_length + 9 * n]);
2932:../user/source/DLT645.c ****             vPut_Current(Ccurrent,
2933:../user/source/DLT645.c ****                          &pucbuffer[16 + ID_length + 9 * n],
2934:../user/source/DLT645.c ****                          &pucbuffer[17 + ID_length + 9 * n],
2935:../user/source/DLT645.c ****                          &pucbuffer[18 + ID_length + 9 * n]);
2936:../user/source/DLT645.c ****         }
2937:../user/source/DLT645.c ****         pucbuffer[length + 10] = 0;
2938:../user/source/DLT645.c ****         for (i = 0; i < length + 10; i++)
2939:../user/source/DLT645.c ****         {
2940:../user/source/DLT645.c ****             pucbuffer[length + 10] += pucbuffer[i];
2941:../user/source/DLT645.c ****         }
2942:../user/source/DLT645.c ****         pucbuffer[length + 11] = 0x16;
2943:../user/source/DLT645.c **** #endif
2944:../user/source/DLT645.c ****         break;
2945:../user/source/DLT645.c ****     default:
2946:../user/source/DLT645.c ****         break;
2947:../user/source/DLT645.c ****     }
2948:../user/source/DLT645.c **** }
2949:../user/source/DLT645.c **** 
2950:../user/source/DLT645.c **** /*
2951:../user/source/DLT645.c **** ½­Î÷£º01
2952:../user/source/DLT645.c **** É½¶«£º02
2953:../user/source/DLT645.c **** ÖØÇì£º03
2954:../user/source/DLT645.c **** */
2955:../user/source/DLT645.c **** void vRead_Version(uint8_t *pucbuffer)
2956:../user/source/DLT645.c **** {
 3459              		.loc 1 2956 0
 3460              		.cfi_startproc
 3461              		@ args = 0, pretend = 0, frame = 0
 3462              		@ frame_needed = 0, uses_anonymous_args = 0
 3463              	.LVL430:
 3464 0000 38B5     		push	{r3, r4, r5, lr}
 3465              	.LCFI33:
 3466              		.cfi_def_cfa_offset 16
 3467              		.cfi_offset 3, -16
 3468              		.cfi_offset 4, -12
 3469              		.cfi_offset 5, -8
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 118


 3470              		.cfi_offset 14, -4
 3471 0002 0446     		mov	r4, r0
2957:../user/source/DLT645.c ****     uint8_t i;
2958:../user/source/DLT645.c ****     pucbuffer[8] = 0x91;
 3472              		.loc 1 2958 0
 3473 0004 9123     		movs	r3, #145
 3474 0006 0372     		strb	r3, [r0, #8]
2959:../user/source/DLT645.c ****     pucbuffer[9] = 0x08;
 3475              		.loc 1 2959 0
 3476 0008 0823     		movs	r3, #8
 3477 000a 4372     		strb	r3, [r0, #9]
2960:../user/source/DLT645.c ****     pucbuffer[14] = 0x03; //µØÇø
 3478              		.loc 1 2960 0
 3479 000c 0323     		movs	r3, #3
 3480 000e 8373     		strb	r3, [r0, #14]
2961:../user/source/DLT645.c ****     pucbuffer[15] = 0x05; //ÈÕÔÂÄê
 3481              		.loc 1 2961 0
 3482 0010 0523     		movs	r3, #5
 3483 0012 C373     		strb	r3, [r0, #15]
2962:../user/source/DLT645.c ****     pucbuffer[16] = 0x11;
 3484              		.loc 1 2962 0
 3485 0014 1123     		movs	r3, #17
 3486 0016 0374     		strb	r3, [r0, #16]
2963:../user/source/DLT645.c ****     pucbuffer[17] = 0x18;
 3487              		.loc 1 2963 0
 3488 0018 1823     		movs	r3, #24
 3489 001a 4374     		strb	r3, [r0, #17]
2964:../user/source/DLT645.c ****     pucbuffer[18] = 0;
 3490              		.loc 1 2964 0
 3491 001c 0023     		movs	r3, #0
 3492 001e 8374     		strb	r3, [r0, #18]
 3493              	.LVL431:
2965:../user/source/DLT645.c ****     for (i = 0; i < 18; i++)
 3494              		.loc 1 2965 0
 3495 0020 05E0     		b	.L217
 3496              	.LVL432:
 3497              	.L218:
2966:../user/source/DLT645.c ****     {
2967:../user/source/DLT645.c ****         pucbuffer[18] += pucbuffer[i];
 3498              		.loc 1 2967 0 discriminator 3
 3499 0022 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3500 0024 A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 3501 0026 0A44     		add	r2, r2, r1
 3502 0028 A274     		strb	r2, [r4, #18]
2965:../user/source/DLT645.c ****     for (i = 0; i < 18; i++)
 3503              		.loc 1 2965 0 discriminator 3
 3504 002a 0133     		adds	r3, r3, #1
 3505              	.LVL433:
 3506 002c DBB2     		uxtb	r3, r3
 3507              	.LVL434:
 3508              	.L217:
2965:../user/source/DLT645.c ****     for (i = 0; i < 18; i++)
 3509              		.loc 1 2965 0 is_stmt 0 discriminator 1
 3510 002e 112B     		cmp	r3, #17
 3511 0030 F7D9     		bls	.L218
2968:../user/source/DLT645.c ****     }
2969:../user/source/DLT645.c ****     pucbuffer[19] = 0x16;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 119


 3512              		.loc 1 2969 0 is_stmt 1
 3513 0032 1623     		movs	r3, #22
 3514              	.LVL435:
 3515 0034 E374     		strb	r3, [r4, #19]
2970:../user/source/DLT645.c ****     uc645DataDomainLength = 8;
 3516              		.loc 1 2970 0
 3517 0036 0822     		movs	r2, #8
 3518 0038 124B     		ldr	r3, .L222
 3519 003a 1A70     		strb	r2, [r3]
2971:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, &ucDrv_Buf_Uart3_Snd, 20);
 3520              		.loc 1 2971 0
 3521 003c 124D     		ldr	r5, .L222+4
 3522 003e 1422     		movs	r2, #20
 3523 0040 2946     		mov	r1, r5
 3524 0042 2046     		mov	r0, r4
 3525              	.LVL436:
 3526 0044 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3527              	.LVL437:
2972:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 3528              		.loc 1 2972 0
 3529 0048 2846     		mov	r0, r5
 3530 004a FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3531              	.LVL438:
 3532 004e 10B9     		cbnz	r0, .L219
2973:../user/source/DLT645.c ****     {
2974:../user/source/DLT645.c ****         Uart_DataPut(USART3);
 3533              		.loc 1 2974 0
 3534 0050 0E48     		ldr	r0, .L222+8
 3535 0052 FFF7FEFF 		bl	Uart_DataPut
 3536              	.LVL439:
 3537              	.L219:
2975:../user/source/DLT645.c ****     }
2976:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
2977:../user/source/DLT645.c **** #ifdef ENABLE_INFR
2978:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, &ucDrv_Buf_Uart2_Snd, 20);
 3538              		.loc 1 2978 0
 3539 0056 0E4D     		ldr	r5, .L222+12
 3540 0058 1422     		movs	r2, #20
 3541 005a 2946     		mov	r1, r5
 3542 005c 2046     		mov	r0, r4
 3543 005e FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3544              	.LVL440:
2979:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
 3545              		.loc 1 2979 0
 3546 0062 2846     		mov	r0, r5
 3547 0064 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3548              	.LVL441:
 3549 0068 50B9     		cbnz	r0, .L216
2980:../user/source/DLT645.c ****     {
2981:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
 3550              		.loc 1 2981 0
 3551 006a 0A4C     		ldr	r4, .L222+16
 3552              	.LVL442:
 3553 006c 0022     		movs	r2, #0
 3554 006e 0A49     		ldr	r1, .L222+20
 3555 0070 2046     		mov	r0, r4
 3556 0072 FFF7FEFF 		bl	USART_ITConfig
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 120


 3557              	.LVL443:
2982:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3558              		.loc 1 2982 0
 3559 0076 0122     		movs	r2, #1
 3560 0078 0849     		ldr	r1, .L222+24
 3561 007a 2046     		mov	r0, r4
 3562 007c FFF7FEFF 		bl	USART_ITConfig
 3563              	.LVL444:
 3564              	.L216:
 3565 0080 38BD     		pop	{r3, r4, r5, pc}
 3566              	.L223:
 3567 0082 00BF     		.align	2
 3568              	.L222:
 3569 0084 00000000 		.word	.LANCHOR0
 3570 0088 00000000 		.word	ucDrv_Buf_Uart3_Snd
 3571 008c 00480040 		.word	1073760256
 3572 0090 00000000 		.word	ucDrv_Buf_Uart2_Snd
 3573 0094 00440040 		.word	1073759232
 3574 0098 05010500 		.word	327941
 3575 009c 07010700 		.word	459015
 3576              		.cfi_endproc
 3577              	.LFE163:
 3579              		.section	.text.vEnergy_Modify_RaitoSet,"ax",%progbits
 3580              		.align	2
 3581              		.global	vEnergy_Modify_RaitoSet
 3582              		.thumb
 3583              		.thumb_func
 3585              	vEnergy_Modify_RaitoSet:
 3586              	.LFB153:
2278:../user/source/DLT645.c ****     uint8_t ratio;
 3587              		.loc 1 2278 0
 3588              		.cfi_startproc
 3589              		@ args = 0, pretend = 0, frame = 0
 3590              		@ frame_needed = 0, uses_anonymous_args = 0
 3591              	.LVL445:
 3592 0000 70B5     		push	{r4, r5, r6, lr}
 3593              	.LCFI34:
 3594              		.cfi_def_cfa_offset 16
 3595              		.cfi_offset 4, -16
 3596              		.cfi_offset 5, -12
 3597              		.cfi_offset 6, -8
 3598              		.cfi_offset 14, -4
 3599 0002 0446     		mov	r4, r0
2285:../user/source/DLT645.c ****     ratioValid = (ratio > 0 && ratio <= 255);
 3600              		.loc 1 2285 0
 3601 0004 817B     		ldrb	r1, [r0, #14]	@ zero_extendqisi2
 3602 0006 0809     		lsrs	r0, r1, #4
 3603              	.LVL446:
 3604 0008 E27B     		ldrb	r2, [r4, #15]	@ zero_extendqisi2
 3605 000a 1509     		lsrs	r5, r2, #4
 3606 000c 05EB8505 		add	r5, r5, r5, lsl #2
 3607 0010 6B00     		lsls	r3, r5, #1
 3608 0012 02F00F02 		and	r2, r2, #15
 3609 0016 1344     		add	r3, r3, r2
 3610 0018 00EB8002 		add	r2, r0, r0, lsl #2
 3611 001c 5000     		lsls	r0, r2, #1
 3612 001e 03EB8303 		add	r3, r3, r3, lsl #2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 121


 3613 0022 03EB8303 		add	r3, r3, r3, lsl #2
 3614 0026 9A00     		lsls	r2, r3, #2
 3615 0028 8318     		adds	r3, r0, r2
 3616 002a 01F00F01 		and	r1, r1, #15
 3617 002e 0B44     		add	r3, r3, r1
 3618              	.LVL447:
2287:../user/source/DLT645.c ****     {
 3619              		.loc 1 2287 0
 3620 0030 13F0FF05 		ands	r5, r3, #255
 3621 0034 11D0     		beq	.L225
2289:../user/source/DLT645.c ****         ucDayfrozen_Modify_Ratio = ratio;
 3622              		.loc 1 2289 0
 3623 0036 244E     		ldr	r6, .L233
 3624 0038 2946     		mov	r1, r5
 3625 003a 3046     		mov	r0, r6
 3626 003c FFF7FEFF 		bl	Flash_Write_Word
 3627              	.LVL448:
2290:../user/source/DLT645.c ****         if (EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR) == ratio)
 3628              		.loc 1 2290 0
 3629 0040 224B     		ldr	r3, .L233+4
 3630 0042 1D70     		strb	r5, [r3]
2291:../user/source/DLT645.c ****         {
 3631              		.loc 1 2291 0
 3632 0044 3046     		mov	r0, r6
 3633 0046 FFF7FEFF 		bl	EEProm_Read
 3634              	.LVL449:
 3635 004a 8542     		cmp	r5, r0
 3636 004c 02D1     		bne	.L226
2293:../user/source/DLT645.c ****         }
 3637              		.loc 1 2293 0
 3638 004e 9423     		movs	r3, #148
 3639 0050 2372     		strb	r3, [r4, #8]
 3640 0052 04E0     		b	.L227
 3641              	.L226:
2297:../user/source/DLT645.c ****         }
 3642              		.loc 1 2297 0
 3643 0054 D423     		movs	r3, #212
 3644 0056 2372     		strb	r3, [r4, #8]
 3645 0058 01E0     		b	.L227
 3646              	.LVL450:
 3647              	.L225:
2302:../user/source/DLT645.c ****     }
 3648              		.loc 1 2302 0
 3649 005a D423     		movs	r3, #212
 3650              	.LVL451:
 3651 005c 2372     		strb	r3, [r4, #8]
 3652              	.LVL452:
 3653              	.L227:
2304:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 3654              		.loc 1 2304 0
 3655 005e 0023     		movs	r3, #0
 3656 0060 6372     		strb	r3, [r4, #9]
2305:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 3657              		.loc 1 2305 0
 3658 0062 A372     		strb	r3, [r4, #10]
 3659              	.LVL453:
2306:../user/source/DLT645.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 122


 3660              		.loc 1 2306 0
 3661 0064 05E0     		b	.L228
 3662              	.LVL454:
 3663              	.L229:
2308:../user/source/DLT645.c ****     }
 3664              		.loc 1 2308 0 discriminator 3
 3665 0066 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3666 0068 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 3667 006a 0A44     		add	r2, r2, r1
 3668 006c A272     		strb	r2, [r4, #10]
2306:../user/source/DLT645.c ****     {
 3669              		.loc 1 2306 0 discriminator 3
 3670 006e 0133     		adds	r3, r3, #1
 3671              	.LVL455:
 3672 0070 9BB2     		uxth	r3, r3
 3673              	.LVL456:
 3674              	.L228:
2306:../user/source/DLT645.c ****     {
 3675              		.loc 1 2306 0 is_stmt 0 discriminator 1
 3676 0072 092B     		cmp	r3, #9
 3677 0074 F7D9     		bls	.L229
2310:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 3678              		.loc 1 2310 0 is_stmt 1
 3679 0076 1623     		movs	r3, #22
 3680              	.LVL457:
 3681 0078 E372     		strb	r3, [r4, #11]
2312:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
 3682              		.loc 1 2312 0
 3683 007a 0022     		movs	r2, #0
 3684 007c 144B     		ldr	r3, .L233+8
 3685 007e 1A70     		strb	r2, [r3]
2313:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 3686              		.loc 1 2313 0
 3687 0080 144D     		ldr	r5, .L233+12
 3688 0082 0C22     		movs	r2, #12
 3689 0084 2946     		mov	r1, r5
 3690 0086 2046     		mov	r0, r4
 3691 0088 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3692              	.LVL458:
2314:../user/source/DLT645.c ****     {
 3693              		.loc 1 2314 0
 3694 008c 2846     		mov	r0, r5
 3695 008e FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3696              	.LVL459:
 3697 0092 10B9     		cbnz	r0, .L230
2316:../user/source/DLT645.c ****     }
 3698              		.loc 1 2316 0
 3699 0094 1048     		ldr	r0, .L233+16
 3700 0096 FFF7FEFF 		bl	Uart_DataPut
 3701              	.LVL460:
 3702              	.L230:
2320:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
 3703              		.loc 1 2320 0
 3704 009a 104D     		ldr	r5, .L233+20
 3705 009c 0C22     		movs	r2, #12
 3706 009e 2946     		mov	r1, r5
 3707 00a0 2046     		mov	r0, r4
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 123


 3708 00a2 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3709              	.LVL461:
2321:../user/source/DLT645.c ****     {
 3710              		.loc 1 2321 0
 3711 00a6 2846     		mov	r0, r5
 3712 00a8 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3713              	.LVL462:
 3714 00ac 50B9     		cbnz	r0, .L224
2323:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3715              		.loc 1 2323 0
 3716 00ae 0C4C     		ldr	r4, .L233+24
 3717              	.LVL463:
 3718 00b0 0022     		movs	r2, #0
 3719 00b2 0C49     		ldr	r1, .L233+28
 3720 00b4 2046     		mov	r0, r4
 3721 00b6 FFF7FEFF 		bl	USART_ITConfig
 3722              	.LVL464:
2324:../user/source/DLT645.c ****     }
 3723              		.loc 1 2324 0
 3724 00ba 0122     		movs	r2, #1
 3725 00bc 0A49     		ldr	r1, .L233+32
 3726 00be 2046     		mov	r0, r4
 3727 00c0 FFF7FEFF 		bl	USART_ITConfig
 3728              	.LVL465:
 3729              	.L224:
 3730 00c4 70BD     		pop	{r4, r5, r6, pc}
 3731              	.L234:
 3732 00c6 00BF     		.align	2
 3733              	.L233:
 3734 00c8 101F0308 		.word	134422288
 3735 00cc 00000000 		.word	ucDayfrozen_Modify_Ratio
 3736 00d0 00000000 		.word	.LANCHOR0
 3737 00d4 00000000 		.word	ucDrv_Buf_Uart3_Snd
 3738 00d8 00480040 		.word	1073760256
 3739 00dc 00000000 		.word	ucDrv_Buf_Uart2_Snd
 3740 00e0 00440040 		.word	1073759232
 3741 00e4 05010500 		.word	327941
 3742 00e8 07010700 		.word	459015
 3743              		.cfi_endproc
 3744              	.LFE153:
 3746              		.section	.text.vVoltage_SetMinValue,"ax",%progbits
 3747              		.align	2
 3748              		.global	vVoltage_SetMinValue
 3749              		.thumb
 3750              		.thumb_func
 3752              	vVoltage_SetMinValue:
 3753              	.LFB158:
2551:../user/source/DLT645.c ****     int VMIN = 0;
 3754              		.loc 1 2551 0
 3755              		.cfi_startproc
 3756              		@ args = 0, pretend = 0, frame = 0
 3757              		@ frame_needed = 0, uses_anonymous_args = 0
 3758              	.LVL466:
 3759 0000 70B5     		push	{r4, r5, r6, lr}
 3760              	.LCFI35:
 3761              		.cfi_def_cfa_offset 16
 3762              		.cfi_offset 4, -16
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 124


 3763              		.cfi_offset 5, -12
 3764              		.cfi_offset 6, -8
 3765              		.cfi_offset 14, -4
 3766 0002 0446     		mov	r4, r0
 3767              	.LVL467:
2554:../user/source/DLT645.c ****     if (VMIN < 2200)
 3768              		.loc 1 2554 0
 3769 0004 857B     		ldrb	r5, [r0, #14]	@ zero_extendqisi2
 3770 0006 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 3771 0008 2846     		mov	r0, r5
 3772              	.LVL468:
 3773 000a FFF7FEFF 		bl	Get_Voltage
 3774              	.LVL469:
2555:../user/source/DLT645.c ****     {
 3775              		.loc 1 2555 0
 3776 000e 40F69703 		movw	r3, #2199
 3777 0012 9842     		cmp	r0, r3
 3778 0014 1CDC     		bgt	.L236
2557:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN1_Addr, pucBuffer[14]);
 3779              		.loc 1 2557 0
 3780 0016 214B     		ldr	r3, .L243
 3781 0018 1860     		str	r0, [r3]
2558:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN2_Addr, pucBuffer[15]);
 3782              		.loc 1 2558 0
 3783 001a 214E     		ldr	r6, .L243+4
 3784 001c 2946     		mov	r1, r5
 3785 001e 3046     		mov	r0, r6
 3786              	.LVL470:
 3787 0020 FFF7FEFF 		bl	Flash_Write_Word
 3788              	.LVL471:
2559:../user/source/DLT645.c ****         if ((EEProm_Read(FLASH_VMIN1_Addr) == pucBuffer[14]) &&
 3789              		.loc 1 2559 0
 3790 0024 E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
 3791 0026 1F48     		ldr	r0, .L243+8
 3792 0028 FFF7FEFF 		bl	Flash_Write_Word
 3793              	.LVL472:
2560:../user/source/DLT645.c ****             (EEProm_Read(FLASH_VMIN2_Addr) == pucBuffer[15]))
 3794              		.loc 1 2560 0
 3795 002c 3046     		mov	r0, r6
 3796 002e FFF7FEFF 		bl	EEProm_Read
 3797              	.LVL473:
 3798 0032 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 3799 0034 9842     		cmp	r0, r3
 3800 0036 08D1     		bne	.L237
2561:../user/source/DLT645.c ****         {
 3801              		.loc 1 2561 0 discriminator 1
 3802 0038 1A48     		ldr	r0, .L243+8
 3803 003a FFF7FEFF 		bl	EEProm_Read
 3804              	.LVL474:
 3805 003e E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
2560:../user/source/DLT645.c ****             (EEProm_Read(FLASH_VMIN2_Addr) == pucBuffer[15]))
 3806              		.loc 1 2560 0 discriminator 1
 3807 0040 9842     		cmp	r0, r3
 3808 0042 02D1     		bne	.L237
2563:../user/source/DLT645.c ****         }
 3809              		.loc 1 2563 0
 3810 0044 9423     		movs	r3, #148
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 125


 3811 0046 2372     		strb	r3, [r4, #8]
 3812 0048 04E0     		b	.L238
 3813              	.L237:
2567:../user/source/DLT645.c ****         }
 3814              		.loc 1 2567 0
 3815 004a D423     		movs	r3, #212
 3816 004c 2372     		strb	r3, [r4, #8]
 3817 004e 01E0     		b	.L238
 3818              	.LVL475:
 3819              	.L236:
2572:../user/source/DLT645.c ****     }
 3820              		.loc 1 2572 0
 3821 0050 D423     		movs	r3, #212
 3822 0052 2372     		strb	r3, [r4, #8]
 3823              	.LVL476:
 3824              	.L238:
2574:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 3825              		.loc 1 2574 0
 3826 0054 0023     		movs	r3, #0
 3827 0056 6372     		strb	r3, [r4, #9]
2575:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 3828              		.loc 1 2575 0
 3829 0058 A372     		strb	r3, [r4, #10]
2576:../user/source/DLT645.c ****     {
 3830              		.loc 1 2576 0
 3831 005a 05E0     		b	.L239
 3832              	.LVL477:
 3833              	.L240:
2578:../user/source/DLT645.c ****     }
 3834              		.loc 1 2578 0 discriminator 3
 3835 005c E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3836 005e A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 3837 0060 0A44     		add	r2, r2, r1
 3838 0062 A272     		strb	r2, [r4, #10]
2576:../user/source/DLT645.c ****     {
 3839              		.loc 1 2576 0 discriminator 3
 3840 0064 0133     		adds	r3, r3, #1
 3841              	.LVL478:
 3842 0066 9BB2     		uxth	r3, r3
 3843              	.LVL479:
 3844              	.L239:
2576:../user/source/DLT645.c ****     {
 3845              		.loc 1 2576 0 is_stmt 0 discriminator 1
 3846 0068 092B     		cmp	r3, #9
 3847 006a F7D9     		bls	.L240
2580:../user/source/DLT645.c **** #ifdef ENABLE_INFR
 3848              		.loc 1 2580 0 is_stmt 1
 3849 006c 1623     		movs	r3, #22
 3850              	.LVL480:
 3851 006e E372     		strb	r3, [r4, #11]
2582:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
 3852              		.loc 1 2582 0
 3853 0070 0D4D     		ldr	r5, .L243+12
 3854 0072 0C22     		movs	r2, #12
 3855 0074 2946     		mov	r1, r5
 3856 0076 2046     		mov	r0, r4
 3857 0078 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 126


 3858              	.LVL481:
2583:../user/source/DLT645.c ****     {
 3859              		.loc 1 2583 0
 3860 007c 2846     		mov	r0, r5
 3861 007e FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3862              	.LVL482:
 3863 0082 50B9     		cbnz	r0, .L235
2585:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3864              		.loc 1 2585 0
 3865 0084 094C     		ldr	r4, .L243+16
 3866              	.LVL483:
 3867 0086 0022     		movs	r2, #0
 3868 0088 0949     		ldr	r1, .L243+20
 3869 008a 2046     		mov	r0, r4
 3870 008c FFF7FEFF 		bl	USART_ITConfig
 3871              	.LVL484:
2586:../user/source/DLT645.c ****     }
 3872              		.loc 1 2586 0
 3873 0090 0122     		movs	r2, #1
 3874 0092 0849     		ldr	r1, .L243+24
 3875 0094 2046     		mov	r0, r4
 3876 0096 FFF7FEFF 		bl	USART_ITConfig
 3877              	.LVL485:
 3878              	.L235:
 3879 009a 70BD     		pop	{r4, r5, r6, pc}
 3880              	.L244:
 3881              		.align	2
 3882              	.L243:
 3883 009c 00000000 		.word	Voltage_MIN
 3884 00a0 081F0308 		.word	134422280
 3885 00a4 0C1F0308 		.word	134422284
 3886 00a8 00000000 		.word	ucDrv_Buf_Uart2_Snd
 3887 00ac 00440040 		.word	1073759232
 3888 00b0 05010500 		.word	327941
 3889 00b4 07010700 		.word	459015
 3890              		.cfi_endproc
 3891              	.LFE158:
 3893              		.section	.text.vEnergy_Modify_ReadValue,"ax",%progbits
 3894              		.align	2
 3895              		.global	vEnergy_Modify_ReadValue
 3896              		.thumb
 3897              		.thumb_func
 3899              	vEnergy_Modify_ReadValue:
 3900              	.LFB156:
2449:../user/source/DLT645.c ****     uint8_t i;
 3901              		.loc 1 2449 0
 3902              		.cfi_startproc
 3903              		@ args = 0, pretend = 0, frame = 0
 3904              		@ frame_needed = 0, uses_anonymous_args = 0
 3905              	.LVL486:
 3906 0000 70B5     		push	{r4, r5, r6, lr}
 3907              	.LCFI36:
 3908              		.cfi_def_cfa_offset 16
 3909              		.cfi_offset 4, -16
 3910              		.cfi_offset 5, -12
 3911              		.cfi_offset 6, -8
 3912              		.cfi_offset 14, -4
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 127


 3913 0002 82B0     		sub	sp, sp, #8
 3914              	.LCFI37:
 3915              		.cfi_def_cfa_offset 24
 3916 0004 0446     		mov	r4, r0
2455:../user/source/DLT645.c ****     pucbuffer[9] = 0x0C;
 3917              		.loc 1 2455 0
 3918 0006 9123     		movs	r3, #145
 3919 0008 0372     		strb	r3, [r0, #8]
2456:../user/source/DLT645.c **** 
 3920              		.loc 1 2456 0
 3921 000a 0C23     		movs	r3, #12
 3922 000c 4372     		strb	r3, [r0, #9]
2459:../user/source/DLT645.c ****     modifiedValue = Flash_Read_Word(FLASH_MODIFIED_1DAYFROZEN_ADDR + 4);
 3923              		.loc 1 2459 0
 3924 000e 2E48     		ldr	r0, .L255
 3925              	.LVL487:
 3926 0010 FFF7FEFF 		bl	Flash_Read_Word
 3927              	.LVL488:
 3928 0014 0646     		mov	r6, r0
 3929              	.LVL489:
2460:../user/source/DLT645.c ****     /*ÖÕ¶ËµÚÒ»´ÎÊ¹ÓÃ*/
 3930              		.loc 1 2460 0
 3931 0016 2D48     		ldr	r0, .L255+4
 3932              	.LVL490:
 3933 0018 FFF7FEFF 		bl	Flash_Read_Word
 3934              	.LVL491:
 3935 001c 0546     		mov	r5, r0
 3936              	.LVL492:
2462:../user/source/DLT645.c ****     {
 3937              		.loc 1 2462 0
 3938 001e B6F1FF3F 		cmp	r6, #-1
 3939 0022 00D1     		bne	.L246
2464:../user/source/DLT645.c ****     }
 3940              		.loc 1 2464 0
 3941 0024 0026     		movs	r6, #0
 3942              	.LVL493:
 3943              	.L246:
2466:../user/source/DLT645.c ****     if (modifiedValue == 0XFFFFFFFF)
 3944              		.loc 1 2466 0
 3945 0026 04F11103 		add	r3, r4, #17
 3946 002a 0093     		str	r3, [sp]
 3947 002c 04F11003 		add	r3, r4, #16
 3948 0030 04F10F02 		add	r2, r4, #15
 3949 0034 04F10E01 		add	r1, r4, #14
 3950 0038 3046     		mov	r0, r6
 3951              	.LVL494:
 3952 003a FFF7FEFF 		bl	Fill_Energy
 3953              	.LVL495:
2467:../user/source/DLT645.c ****     {
 3954              		.loc 1 2467 0
 3955 003e B5F1FF3F 		cmp	r5, #-1
 3956 0042 00D1     		bne	.L247
2469:../user/source/DLT645.c ****     }
 3957              		.loc 1 2469 0
 3958 0044 0025     		movs	r5, #0
 3959              	.LVL496:
 3960              	.L247:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 128


2471:../user/source/DLT645.c ****     pucbuffer[22] = 0;
 3961              		.loc 1 2471 0
 3962 0046 04F11503 		add	r3, r4, #21
 3963 004a 0093     		str	r3, [sp]
 3964 004c 04F11403 		add	r3, r4, #20
 3965 0050 04F11302 		add	r2, r4, #19
 3966 0054 04F11201 		add	r1, r4, #18
 3967 0058 2846     		mov	r0, r5
 3968 005a FFF7FEFF 		bl	Fill_Energy
 3969              	.LVL497:
2472:../user/source/DLT645.c ****     for (i = 0; i < 22; i++)
 3970              		.loc 1 2472 0
 3971 005e 0023     		movs	r3, #0
 3972 0060 A375     		strb	r3, [r4, #22]
 3973              	.LVL498:
2473:../user/source/DLT645.c ****     {
 3974              		.loc 1 2473 0
 3975 0062 05E0     		b	.L248
 3976              	.LVL499:
 3977              	.L249:
2475:../user/source/DLT645.c ****     }
 3978              		.loc 1 2475 0 discriminator 3
 3979 0064 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3980 0066 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
 3981 0068 0A44     		add	r2, r2, r1
 3982 006a A275     		strb	r2, [r4, #22]
2473:../user/source/DLT645.c ****     {
 3983              		.loc 1 2473 0 discriminator 3
 3984 006c 0133     		adds	r3, r3, #1
 3985              	.LVL500:
 3986 006e DBB2     		uxtb	r3, r3
 3987              	.LVL501:
 3988              	.L248:
2473:../user/source/DLT645.c ****     {
 3989              		.loc 1 2473 0 is_stmt 0 discriminator 1
 3990 0070 152B     		cmp	r3, #21
 3991 0072 F7D9     		bls	.L249
2477:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 3992              		.loc 1 2477 0 is_stmt 1
 3993 0074 1623     		movs	r3, #22
 3994              	.LVL502:
 3995 0076 E375     		strb	r3, [r4, #23]
2479:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, &ucDrv_Buf_Uart3_Snd, 24);
 3996              		.loc 1 2479 0
 3997 0078 0022     		movs	r2, #0
 3998 007a 154B     		ldr	r3, .L255+8
 3999 007c 1A70     		strb	r2, [r3]
2480:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 4000              		.loc 1 2480 0
 4001 007e 154D     		ldr	r5, .L255+12
 4002              	.LVL503:
 4003 0080 1822     		movs	r2, #24
 4004 0082 2946     		mov	r1, r5
 4005 0084 2046     		mov	r0, r4
 4006 0086 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4007              	.LVL504:
2481:../user/source/DLT645.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 129


 4008              		.loc 1 2481 0
 4009 008a 2846     		mov	r0, r5
 4010 008c FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4011              	.LVL505:
 4012 0090 10B9     		cbnz	r0, .L250
2483:../user/source/DLT645.c ****     }
 4013              		.loc 1 2483 0
 4014 0092 1148     		ldr	r0, .L255+16
 4015 0094 FFF7FEFF 		bl	Uart_DataPut
 4016              	.LVL506:
 4017              	.L250:
2487:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
 4018              		.loc 1 2487 0
 4019 0098 104D     		ldr	r5, .L255+20
 4020 009a 1822     		movs	r2, #24
 4021 009c 2946     		mov	r1, r5
 4022 009e 2046     		mov	r0, r4
 4023 00a0 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4024              	.LVL507:
2488:../user/source/DLT645.c ****     {
 4025              		.loc 1 2488 0
 4026 00a4 2846     		mov	r0, r5
 4027 00a6 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4028              	.LVL508:
 4029 00aa 50B9     		cbnz	r0, .L245
2490:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 4030              		.loc 1 2490 0
 4031 00ac 0C4C     		ldr	r4, .L255+24
 4032              	.LVL509:
 4033 00ae 0022     		movs	r2, #0
 4034 00b0 0C49     		ldr	r1, .L255+28
 4035 00b2 2046     		mov	r0, r4
 4036 00b4 FFF7FEFF 		bl	USART_ITConfig
 4037              	.LVL510:
2491:../user/source/DLT645.c ****     }
 4038              		.loc 1 2491 0
 4039 00b8 0122     		movs	r2, #1
 4040 00ba 0B49     		ldr	r1, .L255+32
 4041 00bc 2046     		mov	r0, r4
 4042 00be FFF7FEFF 		bl	USART_ITConfig
 4043              	.LVL511:
 4044              	.L245:
2494:../user/source/DLT645.c **** 
 4045              		.loc 1 2494 0
 4046 00c2 02B0     		add	sp, sp, #8
 4047              	.LCFI38:
 4048              		.cfi_def_cfa_offset 16
 4049              		@ sp needed
 4050 00c4 70BD     		pop	{r4, r5, r6, pc}
 4051              	.LVL512:
 4052              	.L256:
 4053 00c6 00BF     		.align	2
 4054              	.L255:
 4055 00c8 04200308 		.word	134422532
 4056 00cc 40200308 		.word	134422592
 4057 00d0 00000000 		.word	.LANCHOR0
 4058 00d4 00000000 		.word	ucDrv_Buf_Uart3_Snd
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 130


 4059 00d8 00480040 		.word	1073760256
 4060 00dc 00000000 		.word	ucDrv_Buf_Uart2_Snd
 4061 00e0 00440040 		.word	1073759232
 4062 00e4 05010500 		.word	327941
 4063 00e8 07010700 		.word	459015
 4064              		.cfi_endproc
 4065              	.LFE156:
 4067              		.section	.text.vVoltage_SetMaxValue,"ax",%progbits
 4068              		.align	2
 4069              		.global	vVoltage_SetMaxValue
 4070              		.thumb
 4071              		.thumb_func
 4073              	vVoltage_SetMaxValue:
 4074              	.LFB157:
2504:../user/source/DLT645.c ****     int VMAX = 0;
 4075              		.loc 1 2504 0
 4076              		.cfi_startproc
 4077              		@ args = 0, pretend = 0, frame = 0
 4078              		@ frame_needed = 0, uses_anonymous_args = 0
 4079              	.LVL513:
 4080 0000 70B5     		push	{r4, r5, r6, lr}
 4081              	.LCFI39:
 4082              		.cfi_def_cfa_offset 16
 4083              		.cfi_offset 4, -16
 4084              		.cfi_offset 5, -12
 4085              		.cfi_offset 6, -8
 4086              		.cfi_offset 14, -4
 4087 0002 0446     		mov	r4, r0
 4088              	.LVL514:
2507:../user/source/DLT645.c ****     if (VMAX > 2200)
 4089              		.loc 1 2507 0
 4090 0004 857B     		ldrb	r5, [r0, #14]	@ zero_extendqisi2
 4091 0006 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 4092 0008 2846     		mov	r0, r5
 4093              	.LVL515:
 4094 000a FFF7FEFF 		bl	Get_Voltage
 4095              	.LVL516:
2508:../user/source/DLT645.c ****     {
 4096              		.loc 1 2508 0
 4097 000e 40F69803 		movw	r3, #2200
 4098 0012 9842     		cmp	r0, r3
 4099 0014 1EDD     		ble	.L258
2510:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX1_Addr, pucBuffer[14]);
 4100              		.loc 1 2510 0
 4101 0016 224B     		ldr	r3, .L265
 4102 0018 1860     		str	r0, [r3]
2511:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX2_Addr, pucBuffer[15]);
 4103              		.loc 1 2511 0
 4104 001a 224E     		ldr	r6, .L265+4
 4105 001c 2946     		mov	r1, r5
 4106 001e 3046     		mov	r0, r6
 4107              	.LVL517:
 4108 0020 FFF7FEFF 		bl	Flash_Write_Word
 4109              	.LVL518:
2512:../user/source/DLT645.c ****         if (((uint8_t)Flash_Read_Word(FLASH_VMAX1_Addr) == pucBuffer[14]) &&
 4110              		.loc 1 2512 0
 4111 0024 E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 131


 4112 0026 2048     		ldr	r0, .L265+8
 4113 0028 FFF7FEFF 		bl	Flash_Write_Word
 4114              	.LVL519:
2513:../user/source/DLT645.c ****             ((uint8_t)Flash_Read_Word(FLASH_VMAX2_Addr) == pucBuffer[15]))
 4115              		.loc 1 2513 0
 4116 002c 3046     		mov	r0, r6
 4117 002e FFF7FEFF 		bl	Flash_Read_Word
 4118              	.LVL520:
 4119 0032 C0B2     		uxtb	r0, r0
 4120 0034 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 4121 0036 9842     		cmp	r0, r3
 4122 0038 09D1     		bne	.L259
2514:../user/source/DLT645.c ****         {
 4123              		.loc 1 2514 0 discriminator 1
 4124 003a 1B48     		ldr	r0, .L265+8
 4125 003c FFF7FEFF 		bl	Flash_Read_Word
 4126              	.LVL521:
 4127 0040 C0B2     		uxtb	r0, r0
 4128 0042 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
2513:../user/source/DLT645.c ****             ((uint8_t)Flash_Read_Word(FLASH_VMAX2_Addr) == pucBuffer[15]))
 4129              		.loc 1 2513 0 discriminator 1
 4130 0044 9842     		cmp	r0, r3
 4131 0046 02D1     		bne	.L259
2516:../user/source/DLT645.c ****         }
 4132              		.loc 1 2516 0
 4133 0048 9423     		movs	r3, #148
 4134 004a 2372     		strb	r3, [r4, #8]
 4135 004c 04E0     		b	.L260
 4136              	.L259:
2520:../user/source/DLT645.c ****         }
 4137              		.loc 1 2520 0
 4138 004e D423     		movs	r3, #212
 4139 0050 2372     		strb	r3, [r4, #8]
 4140 0052 01E0     		b	.L260
 4141              	.LVL522:
 4142              	.L258:
2525:../user/source/DLT645.c ****     }
 4143              		.loc 1 2525 0
 4144 0054 D423     		movs	r3, #212
 4145 0056 2372     		strb	r3, [r4, #8]
 4146              	.LVL523:
 4147              	.L260:
2527:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 4148              		.loc 1 2527 0
 4149 0058 0023     		movs	r3, #0
 4150 005a 6372     		strb	r3, [r4, #9]
2528:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 4151              		.loc 1 2528 0
 4152 005c A372     		strb	r3, [r4, #10]
2529:../user/source/DLT645.c ****     {
 4153              		.loc 1 2529 0
 4154 005e 05E0     		b	.L261
 4155              	.LVL524:
 4156              	.L262:
2531:../user/source/DLT645.c ****     }
 4157              		.loc 1 2531 0 discriminator 3
 4158 0060 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 132


 4159 0062 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 4160 0064 0A44     		add	r2, r2, r1
 4161 0066 A272     		strb	r2, [r4, #10]
2529:../user/source/DLT645.c ****     {
 4162              		.loc 1 2529 0 discriminator 3
 4163 0068 0133     		adds	r3, r3, #1
 4164              	.LVL525:
 4165 006a 9BB2     		uxth	r3, r3
 4166              	.LVL526:
 4167              	.L261:
2529:../user/source/DLT645.c ****     {
 4168              		.loc 1 2529 0 is_stmt 0 discriminator 1
 4169 006c 092B     		cmp	r3, #9
 4170 006e F7D9     		bls	.L262
2533:../user/source/DLT645.c **** #ifdef ENABLE_INFR
 4171              		.loc 1 2533 0 is_stmt 1
 4172 0070 1623     		movs	r3, #22
 4173              	.LVL527:
 4174 0072 E372     		strb	r3, [r4, #11]
2535:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
 4175              		.loc 1 2535 0
 4176 0074 0D4D     		ldr	r5, .L265+12
 4177 0076 0C22     		movs	r2, #12
 4178 0078 2946     		mov	r1, r5
 4179 007a 2046     		mov	r0, r4
 4180 007c FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4181              	.LVL528:
2536:../user/source/DLT645.c ****     {
 4182              		.loc 1 2536 0
 4183 0080 2846     		mov	r0, r5
 4184 0082 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4185              	.LVL529:
 4186 0086 50B9     		cbnz	r0, .L257
2538:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 4187              		.loc 1 2538 0
 4188 0088 094C     		ldr	r4, .L265+16
 4189              	.LVL530:
 4190 008a 0022     		movs	r2, #0
 4191 008c 0949     		ldr	r1, .L265+20
 4192 008e 2046     		mov	r0, r4
 4193 0090 FFF7FEFF 		bl	USART_ITConfig
 4194              	.LVL531:
2539:../user/source/DLT645.c ****     }
 4195              		.loc 1 2539 0
 4196 0094 0122     		movs	r2, #1
 4197 0096 0849     		ldr	r1, .L265+24
 4198 0098 2046     		mov	r0, r4
 4199 009a FFF7FEFF 		bl	USART_ITConfig
 4200              	.LVL532:
 4201              	.L257:
 4202 009e 70BD     		pop	{r4, r5, r6, pc}
 4203              	.L266:
 4204              		.align	2
 4205              	.L265:
 4206 00a0 00000000 		.word	Voltage_MAX
 4207 00a4 001F0308 		.word	134422272
 4208 00a8 041F0308 		.word	134422276
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 133


 4209 00ac 00000000 		.word	ucDrv_Buf_Uart2_Snd
 4210 00b0 00440040 		.word	1073759232
 4211 00b4 05010500 		.word	327941
 4212 00b8 07010700 		.word	459015
 4213              		.cfi_endproc
 4214              	.LFE157:
 4216              		.section	.text.vEnergy_Modify_AbleSet,"ax",%progbits
 4217              		.align	2
 4218              		.global	vEnergy_Modify_AbleSet
 4219              		.thumb
 4220              		.thumb_func
 4222              	vEnergy_Modify_AbleSet:
 4223              	.LFB152:
2218:../user/source/DLT645.c ****     uint16_t i;
 4224              		.loc 1 2218 0
 4225              		.cfi_startproc
 4226              		@ args = 0, pretend = 0, frame = 0
 4227              		@ frame_needed = 0, uses_anonymous_args = 0
 4228              	.LVL533:
 4229 0000 70B5     		push	{r4, r5, r6, lr}
 4230              	.LCFI40:
 4231              		.cfi_def_cfa_offset 16
 4232              		.cfi_offset 4, -16
 4233              		.cfi_offset 5, -12
 4234              		.cfi_offset 6, -8
 4235              		.cfi_offset 14, -4
 4236 0002 0446     		mov	r4, r0
2220:../user/source/DLT645.c ****     {
 4237              		.loc 1 2220 0
 4238 0004 817B     		ldrb	r1, [r0, #14]	@ zero_extendqisi2
 4239 0006 FF29     		cmp	r1, #255
 4240 0008 10D1     		bne	.L268
2222:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZENCHANGESTATE_ADDR, Dayfrozen_Change_State);
 4241              		.loc 1 2222 0
 4242 000a 304D     		ldr	r5, .L280
 4243 000c 2970     		strb	r1, [r5]
2223:../user/source/DLT645.c ****         pucBuffer[8] = (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == Dayfrozen_Change_State
 4244              		.loc 1 2223 0
 4245 000e 304E     		ldr	r6, .L280+4
 4246 0010 3046     		mov	r0, r6
 4247              	.LVL534:
 4248 0012 FFF7FEFF 		bl	Flash_Write_Word
 4249              	.LVL535:
2224:../user/source/DLT645.c ****                             ? 0x94
 4250              		.loc 1 2224 0
 4251 0016 3046     		mov	r0, r6
 4252 0018 FFF7FEFF 		bl	EEProm_Read
 4253              	.LVL536:
 4254 001c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4255 001e 9842     		cmp	r0, r3
 4256 0020 01D1     		bne	.L277
 4257 0022 9423     		movs	r3, #148
 4258 0024 00E0     		b	.L269
 4259              	.L277:
 4260 0026 D423     		movs	r3, #212
 4261              	.L269:
2224:../user/source/DLT645.c ****                             ? 0x94
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 134


 4262              		.loc 1 2224 0 is_stmt 0 discriminator 4
 4263 0028 2372     		strb	r3, [r4, #8]
 4264 002a 1BE0     		b	.L270
 4265              	.LVL537:
 4266              	.L268:
2228:../user/source/DLT645.c ****     {
 4267              		.loc 1 2228 0 is_stmt 1
 4268 002c C1B9     		cbnz	r1, .L271
2231:../user/source/DLT645.c ****         FLASH_ErasePage(FLASH_ENERGY_PAGE);
 4269              		.loc 1 2231 0
 4270 002e FFF7FEFF 		bl	FLASH_Unlock
 4271              	.LVL538:
2232:../user/source/DLT645.c ****         FLASH_Lock();
 4272              		.loc 1 2232 0
 4273 0032 2848     		ldr	r0, .L280+8
 4274 0034 FFF7FEFF 		bl	FLASH_ErasePage
 4275              	.LVL539:
2233:../user/source/DLT645.c ****         Dayfrozen_Change_State = pucBuffer[14];
 4276              		.loc 1 2233 0
 4277 0038 FFF7FEFF 		bl	FLASH_Lock
 4278              	.LVL540:
2234:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZENCHANGESTATE_ADDR, Dayfrozen_Change_State);
 4279              		.loc 1 2234 0
 4280 003c A17B     		ldrb	r1, [r4, #14]	@ zero_extendqisi2
 4281 003e 234D     		ldr	r5, .L280
 4282 0040 2970     		strb	r1, [r5]
2235:../user/source/DLT645.c ****         pucBuffer[8] = (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == Dayfrozen_Change_State
 4283              		.loc 1 2235 0
 4284 0042 234E     		ldr	r6, .L280+4
 4285 0044 3046     		mov	r0, r6
 4286 0046 FFF7FEFF 		bl	Flash_Write_Word
 4287              	.LVL541:
2236:../user/source/DLT645.c ****                             ? 0x94
 4288              		.loc 1 2236 0
 4289 004a 3046     		mov	r0, r6
 4290 004c FFF7FEFF 		bl	EEProm_Read
 4291              	.LVL542:
 4292 0050 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4293 0052 9842     		cmp	r0, r3
 4294 0054 01D1     		bne	.L278
 4295 0056 9423     		movs	r3, #148
 4296 0058 00E0     		b	.L272
 4297              	.L278:
 4298 005a D423     		movs	r3, #212
 4299              	.L272:
2236:../user/source/DLT645.c ****                             ? 0x94
 4300              		.loc 1 2236 0 is_stmt 0 discriminator 4
 4301 005c 2372     		strb	r3, [r4, #8]
 4302 005e 01E0     		b	.L270
 4303              	.LVL543:
 4304              	.L271:
2242:../user/source/DLT645.c ****     }
 4305              		.loc 1 2242 0 is_stmt 1
 4306 0060 D423     		movs	r3, #212
 4307 0062 0372     		strb	r3, [r0, #8]
 4308              	.LVL544:
 4309              	.L270:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 135


2244:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 4310              		.loc 1 2244 0
 4311 0064 0023     		movs	r3, #0
 4312 0066 6372     		strb	r3, [r4, #9]
2245:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 4313              		.loc 1 2245 0
 4314 0068 A372     		strb	r3, [r4, #10]
 4315              	.LVL545:
2246:../user/source/DLT645.c ****     {
 4316              		.loc 1 2246 0
 4317 006a 05E0     		b	.L273
 4318              	.LVL546:
 4319              	.L274:
2248:../user/source/DLT645.c ****     }
 4320              		.loc 1 2248 0 discriminator 3
 4321 006c E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 4322 006e A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 4323 0070 0A44     		add	r2, r2, r1
 4324 0072 A272     		strb	r2, [r4, #10]
2246:../user/source/DLT645.c ****     {
 4325              		.loc 1 2246 0 discriminator 3
 4326 0074 0133     		adds	r3, r3, #1
 4327              	.LVL547:
 4328 0076 9BB2     		uxth	r3, r3
 4329              	.LVL548:
 4330              	.L273:
2246:../user/source/DLT645.c ****     {
 4331              		.loc 1 2246 0 is_stmt 0 discriminator 1
 4332 0078 092B     		cmp	r3, #9
 4333 007a F7D9     		bls	.L274
2250:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 4334              		.loc 1 2250 0 is_stmt 1
 4335 007c 1623     		movs	r3, #22
 4336              	.LVL549:
 4337 007e E372     		strb	r3, [r4, #11]
2252:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
 4338              		.loc 1 2252 0
 4339 0080 0022     		movs	r2, #0
 4340 0082 154B     		ldr	r3, .L280+12
 4341 0084 1A70     		strb	r2, [r3]
2253:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 4342              		.loc 1 2253 0
 4343 0086 154D     		ldr	r5, .L280+16
 4344 0088 0C22     		movs	r2, #12
 4345 008a 2946     		mov	r1, r5
 4346 008c 2046     		mov	r0, r4
 4347 008e FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4348              	.LVL550:
2254:../user/source/DLT645.c ****     {
 4349              		.loc 1 2254 0
 4350 0092 2846     		mov	r0, r5
 4351 0094 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4352              	.LVL551:
 4353 0098 10B9     		cbnz	r0, .L275
2256:../user/source/DLT645.c ****     }
 4354              		.loc 1 2256 0
 4355 009a 1148     		ldr	r0, .L280+20
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 136


 4356 009c FFF7FEFF 		bl	Uart_DataPut
 4357              	.LVL552:
 4358              	.L275:
2260:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
 4359              		.loc 1 2260 0
 4360 00a0 104D     		ldr	r5, .L280+24
 4361 00a2 0C22     		movs	r2, #12
 4362 00a4 2946     		mov	r1, r5
 4363 00a6 2046     		mov	r0, r4
 4364 00a8 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4365              	.LVL553:
2261:../user/source/DLT645.c ****     {
 4366              		.loc 1 2261 0
 4367 00ac 2846     		mov	r0, r5
 4368 00ae FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4369              	.LVL554:
 4370 00b2 50B9     		cbnz	r0, .L267
2263:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 4371              		.loc 1 2263 0
 4372 00b4 0C4C     		ldr	r4, .L280+28
 4373              	.LVL555:
 4374 00b6 0022     		movs	r2, #0
 4375 00b8 0C49     		ldr	r1, .L280+32
 4376 00ba 2046     		mov	r0, r4
 4377 00bc FFF7FEFF 		bl	USART_ITConfig
 4378              	.LVL556:
2264:../user/source/DLT645.c ****     }
 4379              		.loc 1 2264 0
 4380 00c0 0122     		movs	r2, #1
 4381 00c2 0B49     		ldr	r1, .L280+36
 4382 00c4 2046     		mov	r0, r4
 4383 00c6 FFF7FEFF 		bl	USART_ITConfig
 4384              	.LVL557:
 4385              	.L267:
 4386 00ca 70BD     		pop	{r4, r5, r6, pc}
 4387              	.L281:
 4388              		.align	2
 4389              	.L280:
 4390 00cc 00000000 		.word	.LANCHOR8
 4391 00d0 181F0308 		.word	134422296
 4392 00d4 00200308 		.word	134422528
 4393 00d8 00000000 		.word	.LANCHOR0
 4394 00dc 00000000 		.word	ucDrv_Buf_Uart3_Snd
 4395 00e0 00480040 		.word	1073760256
 4396 00e4 00000000 		.word	ucDrv_Buf_Uart2_Snd
 4397 00e8 00440040 		.word	1073759232
 4398 00ec 05010500 		.word	327941
 4399 00f0 07010700 		.word	459015
 4400              		.cfi_endproc
 4401              	.LFE152:
 4403              		.section	.text.vEnergy_Modify_Reset,"ax",%progbits
 4404              		.align	2
 4405              		.global	vEnergy_Modify_Reset
 4406              		.thumb
 4407              		.thumb_func
 4409              	vEnergy_Modify_Reset:
 4410              	.LFB154:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 137


2338:../user/source/DLT645.c ****     bool cmdValid;
 4411              		.loc 1 2338 0
 4412              		.cfi_startproc
 4413              		@ args = 0, pretend = 0, frame = 0
 4414              		@ frame_needed = 0, uses_anonymous_args = 0
 4415              	.LVL558:
 4416 0000 38B5     		push	{r3, r4, r5, lr}
 4417              	.LCFI41:
 4418              		.cfi_def_cfa_offset 16
 4419              		.cfi_offset 3, -16
 4420              		.cfi_offset 4, -12
 4421              		.cfi_offset 5, -8
 4422              		.cfi_offset 14, -4
 4423 0002 0446     		mov	r4, r0
2342:../user/source/DLT645.c ****     if (cmdValid)
 4424              		.loc 1 2342 0
 4425 0004 837B     		ldrb	r3, [r0, #14]	@ zero_extendqisi2
 4426              	.LVL559:
2343:../user/source/DLT645.c ****     {
 4427              		.loc 1 2343 0
 4428 0006 CBB9     		cbnz	r3, .L283
2346:../user/source/DLT645.c ****         Dayfrozen_Change_State = 0xff;
 4429              		.loc 1 2346 0
 4430 0008 274D     		ldr	r5, .L291
 4431 000a FF21     		movs	r1, #255
 4432 000c 2846     		mov	r0, r5
 4433              	.LVL560:
 4434 000e FFF7FEFF 		bl	Flash_Write_Word
 4435              	.LVL561:
2347:../user/source/DLT645.c ****         /*ÈÕ¶³½áĞŞ¸Ä±ÈÀıÉèÖÃÎª90*/
 4436              		.loc 1 2347 0
 4437 0012 FF22     		movs	r2, #255
 4438 0014 254B     		ldr	r3, .L291+4
 4439 0016 1A70     		strb	r2, [r3]
2352:../user/source/DLT645.c ****         FLASH_ErasePage(FLASH_ENERGY_PAGE);
 4440              		.loc 1 2352 0
 4441 0018 FFF7FEFF 		bl	FLASH_Unlock
 4442              	.LVL562:
2353:../user/source/DLT645.c ****         FLASH_Lock();
 4443              		.loc 1 2353 0
 4444 001c 2448     		ldr	r0, .L291+8
 4445 001e FFF7FEFF 		bl	FLASH_ErasePage
 4446              	.LVL563:
2354:../user/source/DLT645.c ****         if ( //(EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR) == 90) &&
 4447              		.loc 1 2354 0
 4448 0022 FFF7FEFF 		bl	FLASH_Lock
 4449              	.LVL564:
2356:../user/source/DLT645.c ****         {
 4450              		.loc 1 2356 0
 4451 0026 2846     		mov	r0, r5
 4452 0028 FFF7FEFF 		bl	EEProm_Read
 4453              	.LVL565:
2355:../user/source/DLT645.c ****             (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == 0xff))
 4454              		.loc 1 2355 0
 4455 002c FF28     		cmp	r0, #255
 4456 002e 02D1     		bne	.L284
2358:../user/source/DLT645.c ****         }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 138


 4457              		.loc 1 2358 0
 4458 0030 9423     		movs	r3, #148
 4459 0032 2372     		strb	r3, [r4, #8]
 4460 0034 04E0     		b	.L285
 4461              	.L284:
2362:../user/source/DLT645.c ****         }
 4462              		.loc 1 2362 0
 4463 0036 D423     		movs	r3, #212
 4464 0038 2372     		strb	r3, [r4, #8]
 4465 003a 01E0     		b	.L285
 4466              	.LVL566:
 4467              	.L283:
2367:../user/source/DLT645.c ****     }
 4468              		.loc 1 2367 0
 4469 003c D423     		movs	r3, #212
 4470              	.LVL567:
 4471 003e 0372     		strb	r3, [r0, #8]
 4472              	.LVL568:
 4473              	.L285:
2369:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 4474              		.loc 1 2369 0
 4475 0040 0023     		movs	r3, #0
 4476 0042 6372     		strb	r3, [r4, #9]
2370:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 4477              		.loc 1 2370 0
 4478 0044 A372     		strb	r3, [r4, #10]
 4479              	.LVL569:
2371:../user/source/DLT645.c ****     {
 4480              		.loc 1 2371 0
 4481 0046 05E0     		b	.L286
 4482              	.LVL570:
 4483              	.L287:
2373:../user/source/DLT645.c ****     }
 4484              		.loc 1 2373 0 discriminator 3
 4485 0048 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 4486 004a A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 4487 004c 0A44     		add	r2, r2, r1
 4488 004e A272     		strb	r2, [r4, #10]
2371:../user/source/DLT645.c ****     {
 4489              		.loc 1 2371 0 discriminator 3
 4490 0050 0133     		adds	r3, r3, #1
 4491              	.LVL571:
 4492 0052 9BB2     		uxth	r3, r3
 4493              	.LVL572:
 4494              	.L286:
2371:../user/source/DLT645.c ****     {
 4495              		.loc 1 2371 0 is_stmt 0 discriminator 1
 4496 0054 092B     		cmp	r3, #9
 4497 0056 F7D9     		bls	.L287
2375:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 4498              		.loc 1 2375 0 is_stmt 1
 4499 0058 1623     		movs	r3, #22
 4500              	.LVL573:
 4501 005a E372     		strb	r3, [r4, #11]
2377:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
 4502              		.loc 1 2377 0
 4503 005c 0022     		movs	r2, #0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 139


 4504 005e 154B     		ldr	r3, .L291+12
 4505 0060 1A70     		strb	r2, [r3]
2378:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 4506              		.loc 1 2378 0
 4507 0062 154D     		ldr	r5, .L291+16
 4508 0064 0C22     		movs	r2, #12
 4509 0066 2946     		mov	r1, r5
 4510 0068 2046     		mov	r0, r4
 4511 006a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4512              	.LVL574:
2379:../user/source/DLT645.c ****     {
 4513              		.loc 1 2379 0
 4514 006e 2846     		mov	r0, r5
 4515 0070 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4516              	.LVL575:
 4517 0074 10B9     		cbnz	r0, .L288
2381:../user/source/DLT645.c ****     }
 4518              		.loc 1 2381 0
 4519 0076 1148     		ldr	r0, .L291+20
 4520 0078 FFF7FEFF 		bl	Uart_DataPut
 4521              	.LVL576:
 4522              	.L288:
2385:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
 4523              		.loc 1 2385 0
 4524 007c 104D     		ldr	r5, .L291+24
 4525 007e 0C22     		movs	r2, #12
 4526 0080 2946     		mov	r1, r5
 4527 0082 2046     		mov	r0, r4
 4528 0084 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4529              	.LVL577:
2386:../user/source/DLT645.c ****     {
 4530              		.loc 1 2386 0
 4531 0088 2846     		mov	r0, r5
 4532 008a FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4533              	.LVL578:
 4534 008e 50B9     		cbnz	r0, .L282
2388:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 4535              		.loc 1 2388 0
 4536 0090 0C4C     		ldr	r4, .L291+28
 4537              	.LVL579:
 4538 0092 0022     		movs	r2, #0
 4539 0094 0C49     		ldr	r1, .L291+32
 4540 0096 2046     		mov	r0, r4
 4541 0098 FFF7FEFF 		bl	USART_ITConfig
 4542              	.LVL580:
2389:../user/source/DLT645.c ****     }
 4543              		.loc 1 2389 0
 4544 009c 0122     		movs	r2, #1
 4545 009e 0B49     		ldr	r1, .L291+36
 4546 00a0 2046     		mov	r0, r4
 4547 00a2 FFF7FEFF 		bl	USART_ITConfig
 4548              	.LVL581:
 4549              	.L282:
 4550 00a6 38BD     		pop	{r3, r4, r5, pc}
 4551              	.L292:
 4552              		.align	2
 4553              	.L291:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 140


 4554 00a8 181F0308 		.word	134422296
 4555 00ac 00000000 		.word	.LANCHOR8
 4556 00b0 00200308 		.word	134422528
 4557 00b4 00000000 		.word	.LANCHOR0
 4558 00b8 00000000 		.word	ucDrv_Buf_Uart3_Snd
 4559 00bc 00480040 		.word	1073760256
 4560 00c0 00000000 		.word	ucDrv_Buf_Uart2_Snd
 4561 00c4 00440040 		.word	1073759232
 4562 00c8 05010500 		.word	327941
 4563 00cc 07010700 		.word	459015
 4564              		.cfi_endproc
 4565              	.LFE154:
 4567              		.section	.text.blRecvFrame,"ax",%progbits
 4568              		.align	2
 4569              		.global	blRecvFrame
 4570              		.thumb
 4571              		.thumb_func
 4573              	blRecvFrame:
 4574              	.LFB111:
 157:../user/source/DLT645.c ****     /*ÊÕÖ¡×´Ì¬*/
 4575              		.loc 1 157 0
 4576              		.cfi_startproc
 4577              		@ args = 0, pretend = 0, frame = 0
 4578              		@ frame_needed = 0, uses_anonymous_args = 0
 4579              	.LVL582:
 4580 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4581              	.LCFI42:
 4582              		.cfi_def_cfa_offset 24
 4583              		.cfi_offset 3, -24
 4584              		.cfi_offset 4, -20
 4585              		.cfi_offset 5, -16
 4586              		.cfi_offset 6, -12
 4587              		.cfi_offset 7, -8
 4588              		.cfi_offset 14, -4
 4589 0002 0646     		mov	r6, r0
 4590 0004 0D46     		mov	r5, r1
 159:../user/source/DLT645.c ****     {
 4591              		.loc 1 159 0
 4592 0006 3A4B     		ldr	r3, .L307
 4593 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4594 000a 012B     		cmp	r3, #1
 4595 000c 11D0     		beq	.L295
 4596 000e 13B1     		cbz	r3, .L296
 4597 0010 022B     		cmp	r3, #2
 4598 0012 41D0     		beq	.L297
 4599 0014 65E0     		b	.L305
 4600              	.L296:
 165:../user/source/DLT645.c ****         {
 4601              		.loc 1 165 0
 4602 0016 0122     		movs	r2, #1
 4603 0018 FFF7FEFF 		bl	ucDrv_Buf_GetBytes
 4604              	.LVL583:
 4605 001c 0446     		mov	r4, r0
 4606 001e 0028     		cmp	r0, #0
 4607 0020 64D0     		beq	.L294
 173:../user/source/DLT645.c ****             {
 4608              		.loc 1 173 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 141


 4609 0022 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4610 0024 682B     		cmp	r3, #104
 4611 0026 5ED1     		bne	.L303
 180:../user/source/DLT645.c ****                 blWordsCounterStatus = true;
 4612              		.loc 1 180 0
 4613 0028 0123     		movs	r3, #1
 4614 002a 314A     		ldr	r2, .L307
 4615 002c 1370     		strb	r3, [r2]
 181:../user/source/DLT645.c ****             }
 4616              		.loc 1 181 0
 4617 002e 314A     		ldr	r2, .L307+4
 4618 0030 1370     		strb	r3, [r2]
 4619              	.L295:
 188:../user/source/DLT645.c ****         {
 4620              		.loc 1 188 0
 4621 0032 0922     		movs	r2, #9
 4622 0034 691C     		adds	r1, r5, #1
 4623 0036 3046     		mov	r0, r6
 4624 0038 FFF7FEFF 		bl	ucDrv_Buf_GetBytes
 4625              	.LVL584:
 4626 003c 0746     		mov	r7, r0
 4627 003e 80B9     		cbnz	r0, .L298
 191:../user/source/DLT645.c ****             {
 4628              		.loc 1 191 0
 4629 0040 1421     		movs	r1, #20
 4630 0042 2D4B     		ldr	r3, .L307+8
 4631 0044 1888     		ldrh	r0, [r3]
 4632 0046 FFF7FEFF 		bl	blTime2_Update
 4633              	.LVL585:
 4634 004a 0446     		mov	r4, r0
 4635 004c 0028     		cmp	r0, #0
 4636 004e 4DD0     		beq	.L294
 194:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 4637              		.loc 1 194 0
 4638 0050 0023     		movs	r3, #0
 4639 0052 274A     		ldr	r2, .L307
 4640 0054 1370     		strb	r3, [r2]
 195:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 4641              		.loc 1 195 0
 4642 0056 274A     		ldr	r2, .L307+4
 4643 0058 1370     		strb	r3, [r2]
 196:../user/source/DLT645.c ****             }
 4644              		.loc 1 196 0
 4645 005a 274A     		ldr	r2, .L307+8
 4646 005c 1380     		strh	r3, [r2]	@ movhi
 256:../user/source/DLT645.c **** }
 4647              		.loc 1 256 0
 4648 005e 3C46     		mov	r4, r7
 4649 0060 44E0     		b	.L294
 4650              	.L298:
 202:../user/source/DLT645.c ****             {
 4651              		.loc 1 202 0
 4652 0062 EB79     		ldrb	r3, [r5, #7]	@ zero_extendqisi2
 4653 0064 682B     		cmp	r3, #104
 4654 0066 04D1     		bne	.L299
 202:../user/source/DLT645.c ****             {
 4655              		.loc 1 202 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 142


 4656 0068 6B7A     		ldrb	r3, [r5, #9]	@ zero_extendqisi2
 4657 006a 03F10C02 		add	r2, r3, #12
 4658 006e FE2A     		cmp	r2, #254
 4659 0070 07DD     		ble	.L300
 4660              	.L299:
 204:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 4661              		.loc 1 204 0 is_stmt 1
 4662 0072 0024     		movs	r4, #0
 4663 0074 1E4B     		ldr	r3, .L307
 4664 0076 1C70     		strb	r4, [r3]
 205:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 4665              		.loc 1 205 0
 4666 0078 1E4B     		ldr	r3, .L307+4
 4667 007a 1C70     		strb	r4, [r3]
 206:../user/source/DLT645.c ****                 break;
 4668              		.loc 1 206 0
 4669 007c 1E4B     		ldr	r3, .L307+8
 4670 007e 1C80     		strh	r4, [r3]	@ movhi
 207:../user/source/DLT645.c ****             }
 4671              		.loc 1 207 0
 4672 0080 34E0     		b	.L294
 4673              	.L300:
 211:../user/source/DLT645.c ****                 ucRcvStatus = RCV_DATA2;                   //Ö¸ÏòÏÂÒ»²¿·Ö
 4674              		.loc 1 211 0
 4675 0082 1E4A     		ldr	r2, .L307+12
 4676 0084 1370     		strb	r3, [r2]
 212:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 4677              		.loc 1 212 0
 4678 0086 0222     		movs	r2, #2
 4679 0088 194B     		ldr	r3, .L307
 4680 008a 1A70     		strb	r2, [r3]
 214:../user/source/DLT645.c ****                 blWordsCounterStatus = true;
 4681              		.loc 1 214 0
 4682 008c 1A4B     		ldr	r3, .L307+8
 4683 008e 0022     		movs	r2, #0
 4684 0090 1A80     		strh	r2, [r3]	@ movhi
 215:../user/source/DLT645.c ****             }
 4685              		.loc 1 215 0
 4686 0092 0122     		movs	r2, #1
 4687 0094 174B     		ldr	r3, .L307+4
 4688 0096 1A70     		strb	r2, [r3]
 4689              	.L297:
 221:../user/source/DLT645.c ****         {                                                                    //¶ÁºóĞø×Ö½ÚÊ§°Ü£¬Ìø³ö
 4690              		.loc 1 221 0
 4691 0098 184B     		ldr	r3, .L307+12
 4692 009a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4693 009c 0232     		adds	r2, r2, #2
 4694 009e 05F10A01 		add	r1, r5, #10
 4695 00a2 3046     		mov	r0, r6
 4696 00a4 FFF7FEFF 		bl	ucDrv_Buf_GetBytes
 4697              	.LVL586:
 4698 00a8 0446     		mov	r4, r0
 4699 00aa 68B9     		cbnz	r0, .L301
 223:../user/source/DLT645.c ****             {                                                                //Èç¹û³¬Ê±£¬ÔòÖØĞÂÕÒ68
 4700              		.loc 1 223 0
 4701 00ac 1421     		movs	r1, #20
 4702 00ae 124B     		ldr	r3, .L307+8
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 143


 4703 00b0 1888     		ldrh	r0, [r3]
 4704 00b2 FFF7FEFF 		bl	blTime2_Update
 4705              	.LVL587:
 4706 00b6 C0B1     		cbz	r0, .L304
 225:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 4707              		.loc 1 225 0
 4708 00b8 0023     		movs	r3, #0
 4709 00ba 0D4A     		ldr	r2, .L307
 4710 00bc 1370     		strb	r3, [r2]
 226:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 4711              		.loc 1 226 0
 4712 00be 0D4A     		ldr	r2, .L307+4
 4713 00c0 1370     		strb	r3, [r2]
 227:../user/source/DLT645.c ****             }
 4714              		.loc 1 227 0
 4715 00c2 0D4A     		ldr	r2, .L307+8
 4716 00c4 1380     		strh	r3, [r2]	@ movhi
 4717 00c6 11E0     		b	.L294
 4718              	.L301:
 233:../user/source/DLT645.c ****             blWordsCounterStatus = false;
 4719              		.loc 1 233 0
 4720 00c8 0023     		movs	r3, #0
 4721 00ca 094A     		ldr	r2, .L307
 4722 00cc 1370     		strb	r3, [r2]
 234:../user/source/DLT645.c ****             uwTime2WordsCounter = 0;
 4723              		.loc 1 234 0
 4724 00ce 094A     		ldr	r2, .L307+4
 4725 00d0 1370     		strb	r3, [r2]
 235:../user/source/DLT645.c ****             if (dwCheckFrame(ucdata_buf) != OK_1)
 4726              		.loc 1 235 0
 4727 00d2 094A     		ldr	r2, .L307+8
 4728 00d4 1380     		strh	r3, [r2]	@ movhi
 236:../user/source/DLT645.c ****             {
 4729              		.loc 1 236 0
 4730 00d6 2846     		mov	r0, r5
 4731 00d8 FFF7FEFF 		bl	dwCheckFrame
 4732              	.LVL588:
 4733 00dc 30B1     		cbz	r0, .L294
 242:../user/source/DLT645.c ****             }
 4734              		.loc 1 242 0
 4735 00de 0024     		movs	r4, #0
 4736 00e0 04E0     		b	.L294
 4737              	.LVL589:
 4738              	.L305:
 256:../user/source/DLT645.c **** }
 4739              		.loc 1 256 0
 4740 00e2 0024     		movs	r4, #0
 4741 00e4 02E0     		b	.L294
 4742              	.LVL590:
 4743              	.L303:
 4744 00e6 0024     		movs	r4, #0
 4745 00e8 00E0     		b	.L294
 4746              	.L304:
 4747 00ea 0446     		mov	r4, r0
 4748              	.L294:
 257:../user/source/DLT645.c **** 
 4749              		.loc 1 257 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 144


 4750 00ec 2046     		mov	r0, r4
 4751 00ee F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4752              	.LVL591:
 4753              	.L308:
 4754              		.align	2
 4755              	.L307:
 4756 00f0 00000000 		.word	.LANCHOR9
 4757 00f4 00000000 		.word	blWordsCounterStatus
 4758 00f8 00000000 		.word	uwTime2WordsCounter
 4759 00fc 00000000 		.word	.LANCHOR0
 4760              		.cfi_endproc
 4761              	.LFE111:
 4763              		.section	.text.vDBDataID_Handle,"ax",%progbits
 4764              		.align	2
 4765              		.global	vDBDataID_Handle
 4766              		.thumb
 4767              		.thumb_func
 4769              	vDBDataID_Handle:
 4770              	.LFB113:
 296:../user/source/DLT645.c ****     uint8_t i;
 4771              		.loc 1 296 0
 4772              		.cfi_startproc
 4773              		@ args = 0, pretend = 0, frame = 0
 4774              		@ frame_needed = 0, uses_anonymous_args = 0
 4775              	.LVL592:
 4776 0000 10B5     		push	{r4, lr}
 4777              	.LCFI43:
 4778              		.cfi_def_cfa_offset 8
 4779              		.cfi_offset 4, -8
 4780              		.cfi_offset 14, -4
 4781              	.LVL593:
 300:../user/source/DLT645.c ****     {
 4782              		.loc 1 300 0
 4783 0002 0023     		movs	r3, #0
 4784 0004 1CE0     		b	.L310
 4785              	.LVL594:
 4786              	.L313:
 302:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 4787              		.loc 1 302 0
 4788 0006 184A     		ldr	r2, .L316
 4789 0008 12F83310 		ldrb	r1, [r2, r3, lsl #3]	@ zero_extendqisi2
 4790 000c 827A     		ldrb	r2, [r0, #10]	@ zero_extendqisi2
 4791 000e 9142     		cmp	r1, r2
 4792 0010 14D1     		bne	.L311
 303:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 4793              		.loc 1 303 0 discriminator 1
 4794 0012 154A     		ldr	r2, .L316
 4795 0014 02EBC302 		add	r2, r2, r3, lsl #3
 4796 0018 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 4797 001a C27A     		ldrb	r2, [r0, #11]	@ zero_extendqisi2
 302:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 4798              		.loc 1 302 0 discriminator 1
 4799 001c 9142     		cmp	r1, r2
 4800 001e 0DD1     		bne	.L311
 304:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 4801              		.loc 1 304 0
 4802 0020 114A     		ldr	r2, .L316
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 145


 4803 0022 02EBC302 		add	r2, r2, r3, lsl #3
 4804 0026 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 4805 0028 027B     		ldrb	r2, [r0, #12]	@ zero_extendqisi2
 303:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 4806              		.loc 1 303 0
 4807 002a 9142     		cmp	r1, r2
 4808 002c 06D1     		bne	.L311
 305:../user/source/DLT645.c ****             break;
 4809              		.loc 1 305 0
 4810 002e 0E4A     		ldr	r2, .L316
 4811 0030 02EBC304 		add	r4, r2, r3, lsl #3
 4812 0034 E178     		ldrb	r1, [r4, #3]	@ zero_extendqisi2
 4813 0036 427B     		ldrb	r2, [r0, #13]	@ zero_extendqisi2
 304:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 4814              		.loc 1 304 0
 4815 0038 9142     		cmp	r1, r2
 4816 003a 03D0     		beq	.L312
 4817              	.L311:
 300:../user/source/DLT645.c ****     {
 4818              		.loc 1 300 0 discriminator 2
 4819 003c 0133     		adds	r3, r3, #1
 4820              	.LVL595:
 4821 003e DBB2     		uxtb	r3, r3
 4822              	.LVL596:
 4823              	.L310:
 300:../user/source/DLT645.c ****     {
 4824              		.loc 1 300 0 is_stmt 0 discriminator 1
 4825 0040 342B     		cmp	r3, #52
 4826 0042 E0D9     		bls	.L313
 4827              	.L312:
 308:../user/source/DLT645.c ****     {
 4828              		.loc 1 308 0 is_stmt 1
 4829 0044 342B     		cmp	r3, #52
 4830 0046 0DD8     		bhi	.L309
 311:../user/source/DLT645.c ****             return;
 4831              		.loc 1 311 0
 4832 0048 074A     		ldr	r2, .L316
 4833 004a 02EBC303 		add	r3, r2, r3, lsl #3
 4834              	.LVL597:
 4835 004e 5B68     		ldr	r3, [r3, #4]
 4836 0050 064A     		ldr	r2, .L316+4
 4837 0052 9342     		cmp	r3, r2
 4838 0054 06D0     		beq	.L309
 315:../user/source/DLT645.c ****             return;
 4839              		.loc 1 315 0
 4840 0056 064A     		ldr	r2, .L316+8
 4841 0058 9342     		cmp	r3, r2
 4842 005a 03D0     		beq	.L309
 319:../user/source/DLT645.c ****             return;
 4843              		.loc 1 319 0
 4844 005c 054A     		ldr	r2, .L316+12
 4845 005e 9342     		cmp	r3, r2
 4846 0060 00D0     		beq	.L309
 331:../user/source/DLT645.c ****     }
 4847              		.loc 1 331 0
 4848 0062 9847     		blx	r3
 4849              	.LVL598:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 146


 4850              	.L309:
 4851 0064 10BD     		pop	{r4, pc}
 4852              	.L317:
 4853 0066 00BF     		.align	2
 4854              	.L316:
 4855 0068 00000000 		.word	.LANCHOR10
 4856 006c 00000000 		.word	vCurrent_Modify
 4857 0070 00000000 		.word	vCurrent_Limit_Modify
 4858 0074 00000000 		.word	Estatus_Modify_CurrentEvent
 4859              		.cfi_endproc
 4860              	.LFE113:
 4862              		.section	.text.vINFRDataID_Handle,"ax",%progbits
 4863              		.align	2
 4864              		.global	vINFRDataID_Handle
 4865              		.thumb
 4866              		.thumb_func
 4868              	vINFRDataID_Handle:
 4869              	.LFB114:
 345:../user/source/DLT645.c ****     uint8_t i;
 4870              		.loc 1 345 0
 4871              		.cfi_startproc
 4872              		@ args = 0, pretend = 0, frame = 0
 4873              		@ frame_needed = 0, uses_anonymous_args = 0
 4874              	.LVL599:
 4875 0000 10B5     		push	{r4, lr}
 4876              	.LCFI44:
 4877              		.cfi_def_cfa_offset 8
 4878              		.cfi_offset 4, -8
 4879              		.cfi_offset 14, -4
 4880              	.LVL600:
 349:../user/source/DLT645.c ****     {
 4881              		.loc 1 349 0
 4882 0002 0023     		movs	r3, #0
 4883 0004 1CE0     		b	.L319
 4884              	.LVL601:
 4885              	.L322:
 351:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 4886              		.loc 1 351 0
 4887 0006 134A     		ldr	r2, .L325
 4888 0008 12F83310 		ldrb	r1, [r2, r3, lsl #3]	@ zero_extendqisi2
 4889 000c 827A     		ldrb	r2, [r0, #10]	@ zero_extendqisi2
 4890 000e 9142     		cmp	r1, r2
 4891 0010 14D1     		bne	.L320
 352:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 4892              		.loc 1 352 0 discriminator 1
 4893 0012 104A     		ldr	r2, .L325
 4894 0014 02EBC302 		add	r2, r2, r3, lsl #3
 4895 0018 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 4896 001a C27A     		ldrb	r2, [r0, #11]	@ zero_extendqisi2
 351:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 4897              		.loc 1 351 0 discriminator 1
 4898 001c 9142     		cmp	r1, r2
 4899 001e 0DD1     		bne	.L320
 353:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 4900              		.loc 1 353 0
 4901 0020 0C4A     		ldr	r2, .L325
 4902 0022 02EBC302 		add	r2, r2, r3, lsl #3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 147


 4903 0026 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 4904 0028 027B     		ldrb	r2, [r0, #12]	@ zero_extendqisi2
 352:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 4905              		.loc 1 352 0
 4906 002a 9142     		cmp	r1, r2
 4907 002c 06D1     		bne	.L320
 354:../user/source/DLT645.c ****             break;
 4908              		.loc 1 354 0
 4909 002e 094A     		ldr	r2, .L325
 4910 0030 02EBC304 		add	r4, r2, r3, lsl #3
 4911 0034 E178     		ldrb	r1, [r4, #3]	@ zero_extendqisi2
 4912 0036 427B     		ldrb	r2, [r0, #13]	@ zero_extendqisi2
 353:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 4913              		.loc 1 353 0
 4914 0038 9142     		cmp	r1, r2
 4915 003a 03D0     		beq	.L321
 4916              	.L320:
 349:../user/source/DLT645.c ****     {
 4917              		.loc 1 349 0 discriminator 2
 4918 003c 0133     		adds	r3, r3, #1
 4919              	.LVL602:
 4920 003e DBB2     		uxtb	r3, r3
 4921              	.LVL603:
 4922              	.L319:
 349:../user/source/DLT645.c ****     {
 4923              		.loc 1 349 0 is_stmt 0 discriminator 1
 4924 0040 0C2B     		cmp	r3, #12
 4925 0042 E0D9     		bls	.L322
 4926              	.L321:
 357:../user/source/DLT645.c ****     {
 4927              		.loc 1 357 0 is_stmt 1
 4928 0044 0C2B     		cmp	r3, #12
 4929 0046 04D8     		bhi	.L318
 367:../user/source/DLT645.c ****     }
 4930              		.loc 1 367 0
 4931 0048 024A     		ldr	r2, .L325
 4932 004a 02EBC303 		add	r3, r2, r3, lsl #3
 4933              	.LVL604:
 4934 004e 5B68     		ldr	r3, [r3, #4]
 4935 0050 9847     		blx	r3
 4936              	.LVL605:
 4937              	.L318:
 4938 0052 10BD     		pop	{r4, pc}
 4939              	.L326:
 4940              		.align	2
 4941              	.L325:
 4942 0054 00000000 		.word	.LANCHOR11
 4943              		.cfi_endproc
 4944              	.LFE114:
 4946              		.section	.text.blVoltage_Create,"ax",%progbits
 4947              		.align	2
 4948              		.global	blVoltage_Create
 4949              		.thumb
 4950              		.thumb_func
 4952              	blVoltage_Create:
 4953              	.LFB121:
 691:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 148


 4954              		.loc 1 691 0
 4955              		.cfi_startproc
 4956              		@ args = 0, pretend = 0, frame = 0
 4957              		@ frame_needed = 0, uses_anonymous_args = 0
 4958              	.LVL606:
 4959 0000 70B5     		push	{r4, r5, r6, lr}
 4960              	.LCFI45:
 4961              		.cfi_def_cfa_offset 16
 4962              		.cfi_offset 4, -16
 4963              		.cfi_offset 5, -12
 4964              		.cfi_offset 6, -8
 4965              		.cfi_offset 14, -4
 4966 0002 0446     		mov	r4, r0
 4967              	.LVL607:
 694:../user/source/DLT645.c ****     {
 4968              		.loc 1 694 0
 4969 0004 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 4970 0006 323B     		subs	r3, r3, #50
 4971 0008 042B     		cmp	r3, #4
 4972 000a 00F2E580 		bhi	.L348
 4973 000e DFE813F0 		tbh	[pc, r3, lsl #1]
 4974              	.L330:
 4975 0012 0500     		.2byte	(.L329-.L330)/2
 4976 0014 E300     		.2byte	(.L348-.L330)/2
 4977 0016 5F00     		.2byte	(.L331-.L330)/2
 4978 0018 8B00     		.2byte	(.L332-.L330)/2
 4979 001a B700     		.2byte	(.L333-.L330)/2
 4980              		.p2align 1
 4981              	.L329:
 698:../user/source/DLT645.c ****         pucBuffer[9] = 0x0A;
 4982              		.loc 1 698 0
 4983 001c 9123     		movs	r3, #145
 4984 001e 0372     		strb	r3, [r0, #8]
 699:../user/source/DLT645.c ****         //Ê¹ÓÃÉÏ´ÎĞŞ¸ÄµÄºÏ·¨µçÑ¹Öµ»ò1000 2017-10-25:
 4985              		.loc 1 699 0
 4986 0020 0A23     		movs	r3, #10
 4987 0022 4372     		strb	r3, [r0, #9]
 701:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 4988              		.loc 1 701 0
 4989 0024 6D4B     		ldr	r3, .L356
 4990 0026 1D68     		ldr	r5, [r3]
 4991 0028 6D4B     		ldr	r3, .L356+4
 4992 002a 1E68     		ldr	r6, [r3]
 4993 002c B542     		cmp	r5, r6
 4994 002e 06DC     		bgt	.L349
 701:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 4995              		.loc 1 701 0 is_stmt 0 discriminator 1
 4996 0030 6C4B     		ldr	r3, .L356+8
 4997 0032 1B68     		ldr	r3, [r3]
 4998 0034 9D42     		cmp	r5, r3
 4999 0036 04DA     		bge	.L334
 701:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 5000              		.loc 1 701 0
 5001 0038 40F69805 		movw	r5, #2200
 5002 003c 01E0     		b	.L334
 5003              	.L349:
 5004 003e 40F69805 		movw	r5, #2200
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 149


 5005              	.L334:
 701:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 5006              		.loc 1 701 0 discriminator 6
 5007 0042 664B     		ldr	r3, .L356
 5008 0044 1D60     		str	r5, [r3]
 702:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(A_Voltage);
 5009              		.loc 1 702 0 is_stmt 1 discriminator 6
 5010 0046 2846     		mov	r0, r5
 5011              	.LVL608:
 5012 0048 FFF7FEFF 		bl	GetLowByte
 5013              	.LVL609:
 5014 004c A073     		strb	r0, [r4, #14]
 703:../user/source/DLT645.c ****         B_Voltage = ((B_Voltage <= Voltage_MAX) && (B_Voltage >= Voltage_MIN) ? B_Voltage : WORK_VO
 5015              		.loc 1 703 0 discriminator 6
 5016 004e 2846     		mov	r0, r5
 5017 0050 FFF7FEFF 		bl	GetHighByte
 5018              	.LVL610:
 5019 0054 E073     		strb	r0, [r4, #15]
 704:../user/source/DLT645.c ****         pucBuffer[16] = GetLowByte(B_Voltage);
 5020              		.loc 1 704 0 discriminator 6
 5021 0056 644B     		ldr	r3, .L356+12
 5022 0058 1D68     		ldr	r5, [r3]
 5023 005a AE42     		cmp	r6, r5
 5024 005c 06DB     		blt	.L350
 704:../user/source/DLT645.c ****         pucBuffer[16] = GetLowByte(B_Voltage);
 5025              		.loc 1 704 0 is_stmt 0 discriminator 1
 5026 005e 614B     		ldr	r3, .L356+8
 5027 0060 1B68     		ldr	r3, [r3]
 5028 0062 9D42     		cmp	r5, r3
 5029 0064 04DA     		bge	.L335
 704:../user/source/DLT645.c ****         pucBuffer[16] = GetLowByte(B_Voltage);
 5030              		.loc 1 704 0
 5031 0066 40F69805 		movw	r5, #2200
 5032 006a 01E0     		b	.L335
 5033              	.L350:
 5034 006c 40F69805 		movw	r5, #2200
 5035              	.L335:
 704:../user/source/DLT645.c ****         pucBuffer[16] = GetLowByte(B_Voltage);
 5036              		.loc 1 704 0 discriminator 6
 5037 0070 5D4B     		ldr	r3, .L356+12
 5038 0072 1D60     		str	r5, [r3]
 705:../user/source/DLT645.c ****         pucBuffer[17] = GetHighByte(B_Voltage);
 5039              		.loc 1 705 0 is_stmt 1 discriminator 6
 5040 0074 2846     		mov	r0, r5
 5041 0076 FFF7FEFF 		bl	GetLowByte
 5042              	.LVL611:
 5043 007a 2074     		strb	r0, [r4, #16]
 706:../user/source/DLT645.c ****         C_Voltage = ((C_Voltage <= Voltage_MAX) && (C_Voltage >= Voltage_MIN) ? C_Voltage : WORK_VO
 5044              		.loc 1 706 0 discriminator 6
 5045 007c 2846     		mov	r0, r5
 5046 007e FFF7FEFF 		bl	GetHighByte
 5047              	.LVL612:
 5048 0082 6074     		strb	r0, [r4, #17]
 707:../user/source/DLT645.c ****         pucBuffer[18] = GetLowByte(C_Voltage);
 5049              		.loc 1 707 0 discriminator 6
 5050 0084 594B     		ldr	r3, .L356+16
 5051 0086 1D68     		ldr	r5, [r3]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 150


 5052 0088 AE42     		cmp	r6, r5
 5053 008a 06DB     		blt	.L351
 707:../user/source/DLT645.c ****         pucBuffer[18] = GetLowByte(C_Voltage);
 5054              		.loc 1 707 0 is_stmt 0 discriminator 1
 5055 008c 554B     		ldr	r3, .L356+8
 5056 008e 1B68     		ldr	r3, [r3]
 5057 0090 9D42     		cmp	r5, r3
 5058 0092 04DA     		bge	.L336
 707:../user/source/DLT645.c ****         pucBuffer[18] = GetLowByte(C_Voltage);
 5059              		.loc 1 707 0
 5060 0094 40F69805 		movw	r5, #2200
 5061 0098 01E0     		b	.L336
 5062              	.L351:
 5063 009a 40F69805 		movw	r5, #2200
 5064              	.L336:
 707:../user/source/DLT645.c ****         pucBuffer[18] = GetLowByte(C_Voltage);
 5065              		.loc 1 707 0 discriminator 6
 5066 009e 534B     		ldr	r3, .L356+16
 5067 00a0 1D60     		str	r5, [r3]
 708:../user/source/DLT645.c ****         pucBuffer[19] = GetHighByte(C_Voltage);
 5068              		.loc 1 708 0 is_stmt 1 discriminator 6
 5069 00a2 2846     		mov	r0, r5
 5070 00a4 FFF7FEFF 		bl	GetLowByte
 5071              	.LVL613:
 5072 00a8 A074     		strb	r0, [r4, #18]
 709:../user/source/DLT645.c ****         for (i = 0; i < 20; i++) //¹Ì¶¨Ö¡³¤22
 5073              		.loc 1 709 0 discriminator 6
 5074 00aa 2846     		mov	r0, r5
 5075 00ac FFF7FEFF 		bl	GetHighByte
 5076              	.LVL614:
 5077 00b0 E074     		strb	r0, [r4, #19]
 710:../user/source/DLT645.c ****         {
 5078              		.loc 1 710 0 discriminator 6
 5079 00b2 0023     		movs	r3, #0
 692:../user/source/DLT645.c ****     uint8_t i = 0;
 5080              		.loc 1 692 0 discriminator 6
 5081 00b4 1A46     		mov	r2, r3
 710:../user/source/DLT645.c ****         {
 5082              		.loc 1 710 0 discriminator 6
 5083 00b6 04E0     		b	.L337
 5084              	.LVL615:
 5085              	.L338:
 712:../user/source/DLT645.c ****         }
 5086              		.loc 1 712 0 discriminator 3
 5087 00b8 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 5088 00ba 0A44     		add	r2, r2, r1
 5089              	.LVL616:
 5090 00bc D2B2     		uxtb	r2, r2
 5091              	.LVL617:
 710:../user/source/DLT645.c ****         {
 5092              		.loc 1 710 0 discriminator 3
 5093 00be 0133     		adds	r3, r3, #1
 5094              	.LVL618:
 5095 00c0 DBB2     		uxtb	r3, r3
 5096              	.LVL619:
 5097              	.L337:
 710:../user/source/DLT645.c ****         {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 151


 5098              		.loc 1 710 0 is_stmt 0 discriminator 1
 5099 00c2 132B     		cmp	r3, #19
 5100 00c4 F8D9     		bls	.L338
 714:../user/source/DLT645.c ****         pucBuffer[21] = 0x16;
 5101              		.loc 1 714 0 is_stmt 1
 5102 00c6 2275     		strb	r2, [r4, #20]
 715:../user/source/DLT645.c ****         return true;
 5103              		.loc 1 715 0
 5104 00c8 1623     		movs	r3, #22
 5105              	.LVL620:
 5106 00ca 6375     		strb	r3, [r4, #21]
 716:../user/source/DLT645.c ****     }
 5107              		.loc 1 716 0
 5108 00cc 0120     		movs	r0, #1
 5109 00ce 70BD     		pop	{r4, r5, r6, pc}
 5110              	.LVL621:
 5111              	.L331:
 720:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5112              		.loc 1 720 0
 5113 00d0 424B     		ldr	r3, .L356
 5114 00d2 1D68     		ldr	r5, [r3]
 5115 00d4 424B     		ldr	r3, .L356+4
 5116 00d6 1B68     		ldr	r3, [r3]
 5117 00d8 9D42     		cmp	r5, r3
 5118 00da 06DC     		bgt	.L352
 720:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5119              		.loc 1 720 0 is_stmt 0 discriminator 1
 5120 00dc 414B     		ldr	r3, .L356+8
 5121 00de 1B68     		ldr	r3, [r3]
 5122 00e0 9D42     		cmp	r5, r3
 5123 00e2 04DA     		bge	.L339
 720:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5124              		.loc 1 720 0
 5125 00e4 40F69805 		movw	r5, #2200
 5126 00e8 01E0     		b	.L339
 5127              	.L352:
 5128 00ea 40F69805 		movw	r5, #2200
 5129              	.L339:
 720:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5130              		.loc 1 720 0 discriminator 6
 5131 00ee 3B4B     		ldr	r3, .L356
 5132 00f0 1D60     		str	r5, [r3]
 721:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 5133              		.loc 1 721 0 is_stmt 1 discriminator 6
 5134 00f2 9123     		movs	r3, #145
 5135 00f4 2372     		strb	r3, [r4, #8]
 722:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 5136              		.loc 1 722 0 discriminator 6
 5137 00f6 0623     		movs	r3, #6
 5138 00f8 6372     		strb	r3, [r4, #9]
 723:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(A_Voltage);
 5139              		.loc 1 723 0 discriminator 6
 5140 00fa 2846     		mov	r0, r5
 5141              	.LVL622:
 5142 00fc FFF7FEFF 		bl	GetLowByte
 5143              	.LVL623:
 5144 0100 A073     		strb	r0, [r4, #14]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 152


 724:../user/source/DLT645.c ****         for (i = 0; i < 16; i++) //¹Ì¶¨Ö¡³¤18
 5145              		.loc 1 724 0 discriminator 6
 5146 0102 2846     		mov	r0, r5
 5147 0104 FFF7FEFF 		bl	GetHighByte
 5148              	.LVL624:
 5149 0108 E073     		strb	r0, [r4, #15]
 725:../user/source/DLT645.c ****         {
 5150              		.loc 1 725 0 discriminator 6
 5151 010a 0023     		movs	r3, #0
 692:../user/source/DLT645.c ****     uint8_t i = 0;
 5152              		.loc 1 692 0 discriminator 6
 5153 010c 1A46     		mov	r2, r3
 725:../user/source/DLT645.c ****         {
 5154              		.loc 1 725 0 discriminator 6
 5155 010e 04E0     		b	.L340
 5156              	.LVL625:
 5157              	.L341:
 727:../user/source/DLT645.c ****         }
 5158              		.loc 1 727 0 discriminator 3
 5159 0110 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 5160 0112 0A44     		add	r2, r2, r1
 5161              	.LVL626:
 5162 0114 D2B2     		uxtb	r2, r2
 5163              	.LVL627:
 725:../user/source/DLT645.c ****         {
 5164              		.loc 1 725 0 discriminator 3
 5165 0116 0133     		adds	r3, r3, #1
 5166              	.LVL628:
 5167 0118 DBB2     		uxtb	r3, r3
 5168              	.LVL629:
 5169              	.L340:
 725:../user/source/DLT645.c ****         {
 5170              		.loc 1 725 0 is_stmt 0 discriminator 1
 5171 011a 0F2B     		cmp	r3, #15
 5172 011c F8D9     		bls	.L341
 729:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 5173              		.loc 1 729 0 is_stmt 1
 5174 011e 2274     		strb	r2, [r4, #16]
 730:../user/source/DLT645.c ****         return true;
 5175              		.loc 1 730 0
 5176 0120 1623     		movs	r3, #22
 5177              	.LVL630:
 5178 0122 6374     		strb	r3, [r4, #17]
 731:../user/source/DLT645.c ****     }
 5179              		.loc 1 731 0
 5180 0124 0120     		movs	r0, #1
 5181 0126 70BD     		pop	{r4, r5, r6, pc}
 5182              	.LVL631:
 5183              	.L332:
 735:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5184              		.loc 1 735 0
 5185 0128 2F4B     		ldr	r3, .L356+12
 5186 012a 1D68     		ldr	r5, [r3]
 5187 012c 2C4B     		ldr	r3, .L356+4
 5188 012e 1B68     		ldr	r3, [r3]
 5189 0130 9D42     		cmp	r5, r3
 5190 0132 06DC     		bgt	.L353
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 153


 735:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5191              		.loc 1 735 0 is_stmt 0 discriminator 1
 5192 0134 2B4B     		ldr	r3, .L356+8
 5193 0136 1B68     		ldr	r3, [r3]
 5194 0138 9D42     		cmp	r5, r3
 5195 013a 04DA     		bge	.L342
 735:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5196              		.loc 1 735 0
 5197 013c 40F69805 		movw	r5, #2200
 5198 0140 01E0     		b	.L342
 5199              	.L353:
 5200 0142 40F69805 		movw	r5, #2200
 5201              	.L342:
 735:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5202              		.loc 1 735 0 discriminator 6
 5203 0146 284B     		ldr	r3, .L356+12
 5204 0148 1D60     		str	r5, [r3]
 736:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 5205              		.loc 1 736 0 is_stmt 1 discriminator 6
 5206 014a 9123     		movs	r3, #145
 5207 014c 2372     		strb	r3, [r4, #8]
 737:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(B_Voltage);
 5208              		.loc 1 737 0 discriminator 6
 5209 014e 0623     		movs	r3, #6
 5210 0150 6372     		strb	r3, [r4, #9]
 738:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(B_Voltage);
 5211              		.loc 1 738 0 discriminator 6
 5212 0152 2846     		mov	r0, r5
 5213              	.LVL632:
 5214 0154 FFF7FEFF 		bl	GetLowByte
 5215              	.LVL633:
 5216 0158 A073     		strb	r0, [r4, #14]
 739:../user/source/DLT645.c ****         for (i = 0; i < 16; i++) //¹Ì¶¨Ö¡³¤18
 5217              		.loc 1 739 0 discriminator 6
 5218 015a 2846     		mov	r0, r5
 5219 015c FFF7FEFF 		bl	GetHighByte
 5220              	.LVL634:
 5221 0160 E073     		strb	r0, [r4, #15]
 740:../user/source/DLT645.c ****         {
 5222              		.loc 1 740 0 discriminator 6
 5223 0162 0023     		movs	r3, #0
 692:../user/source/DLT645.c ****     uint8_t i = 0;
 5224              		.loc 1 692 0 discriminator 6
 5225 0164 1A46     		mov	r2, r3
 740:../user/source/DLT645.c ****         {
 5226              		.loc 1 740 0 discriminator 6
 5227 0166 04E0     		b	.L343
 5228              	.LVL635:
 5229              	.L344:
 742:../user/source/DLT645.c ****         }
 5230              		.loc 1 742 0 discriminator 3
 5231 0168 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 5232 016a 0A44     		add	r2, r2, r1
 5233              	.LVL636:
 5234 016c D2B2     		uxtb	r2, r2
 5235              	.LVL637:
 740:../user/source/DLT645.c ****         {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 154


 5236              		.loc 1 740 0 discriminator 3
 5237 016e 0133     		adds	r3, r3, #1
 5238              	.LVL638:
 5239 0170 DBB2     		uxtb	r3, r3
 5240              	.LVL639:
 5241              	.L343:
 740:../user/source/DLT645.c ****         {
 5242              		.loc 1 740 0 is_stmt 0 discriminator 1
 5243 0172 0F2B     		cmp	r3, #15
 5244 0174 F8D9     		bls	.L344
 744:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 5245              		.loc 1 744 0 is_stmt 1
 5246 0176 2274     		strb	r2, [r4, #16]
 745:../user/source/DLT645.c ****         return true;
 5247              		.loc 1 745 0
 5248 0178 1623     		movs	r3, #22
 5249              	.LVL640:
 5250 017a 6374     		strb	r3, [r4, #17]
 746:../user/source/DLT645.c ****     }
 5251              		.loc 1 746 0
 5252 017c 0120     		movs	r0, #1
 5253 017e 70BD     		pop	{r4, r5, r6, pc}
 5254              	.LVL641:
 5255              	.L333:
 750:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5256              		.loc 1 750 0
 5257 0180 1A4B     		ldr	r3, .L356+16
 5258 0182 1D68     		ldr	r5, [r3]
 5259 0184 164B     		ldr	r3, .L356+4
 5260 0186 1B68     		ldr	r3, [r3]
 5261 0188 9D42     		cmp	r5, r3
 5262 018a 06DC     		bgt	.L354
 750:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5263              		.loc 1 750 0 is_stmt 0 discriminator 1
 5264 018c 154B     		ldr	r3, .L356+8
 5265 018e 1B68     		ldr	r3, [r3]
 5266 0190 9D42     		cmp	r5, r3
 5267 0192 04DA     		bge	.L345
 750:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5268              		.loc 1 750 0
 5269 0194 40F69805 		movw	r5, #2200
 5270 0198 01E0     		b	.L345
 5271              	.L354:
 5272 019a 40F69805 		movw	r5, #2200
 5273              	.L345:
 750:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5274              		.loc 1 750 0 discriminator 6
 5275 019e 134B     		ldr	r3, .L356+16
 5276 01a0 1D60     		str	r5, [r3]
 751:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 5277              		.loc 1 751 0 is_stmt 1 discriminator 6
 5278 01a2 9123     		movs	r3, #145
 5279 01a4 2372     		strb	r3, [r4, #8]
 752:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(C_Voltage);
 5280              		.loc 1 752 0 discriminator 6
 5281 01a6 0623     		movs	r3, #6
 5282 01a8 6372     		strb	r3, [r4, #9]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 155


 753:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(C_Voltage);
 5283              		.loc 1 753 0 discriminator 6
 5284 01aa 2846     		mov	r0, r5
 5285              	.LVL642:
 5286 01ac FFF7FEFF 		bl	GetLowByte
 5287              	.LVL643:
 5288 01b0 A073     		strb	r0, [r4, #14]
 754:../user/source/DLT645.c ****         for (i = 0; i < 16; i++)
 5289              		.loc 1 754 0 discriminator 6
 5290 01b2 2846     		mov	r0, r5
 5291 01b4 FFF7FEFF 		bl	GetHighByte
 5292              	.LVL644:
 5293 01b8 E073     		strb	r0, [r4, #15]
 755:../user/source/DLT645.c ****         {
 5294              		.loc 1 755 0 discriminator 6
 5295 01ba 0023     		movs	r3, #0
 692:../user/source/DLT645.c ****     uint8_t i = 0;
 5296              		.loc 1 692 0 discriminator 6
 5297 01bc 1A46     		mov	r2, r3
 755:../user/source/DLT645.c ****         {
 5298              		.loc 1 755 0 discriminator 6
 5299 01be 04E0     		b	.L346
 5300              	.LVL645:
 5301              	.L347:
 757:../user/source/DLT645.c ****         }
 5302              		.loc 1 757 0 discriminator 3
 5303 01c0 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 5304 01c2 0A44     		add	r2, r2, r1
 5305              	.LVL646:
 5306 01c4 D2B2     		uxtb	r2, r2
 5307              	.LVL647:
 755:../user/source/DLT645.c ****         {
 5308              		.loc 1 755 0 discriminator 3
 5309 01c6 0133     		adds	r3, r3, #1
 5310              	.LVL648:
 5311 01c8 DBB2     		uxtb	r3, r3
 5312              	.LVL649:
 5313              	.L346:
 755:../user/source/DLT645.c ****         {
 5314              		.loc 1 755 0 is_stmt 0 discriminator 1
 5315 01ca 0F2B     		cmp	r3, #15
 5316 01cc F8D9     		bls	.L347
 759:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 5317              		.loc 1 759 0 is_stmt 1
 5318 01ce 2274     		strb	r2, [r4, #16]
 760:../user/source/DLT645.c ****         return true;
 5319              		.loc 1 760 0
 5320 01d0 1623     		movs	r3, #22
 5321              	.LVL650:
 5322 01d2 6374     		strb	r3, [r4, #17]
 761:../user/source/DLT645.c ****     }
 5323              		.loc 1 761 0
 5324 01d4 0120     		movs	r0, #1
 5325 01d6 70BD     		pop	{r4, r5, r6, pc}
 5326              	.LVL651:
 5327              	.L348:
 764:../user/source/DLT645.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 156


 5328              		.loc 1 764 0
 5329 01d8 0020     		movs	r0, #0
 5330              	.LVL652:
 766:../user/source/DLT645.c **** /********************************************************************
 5331              		.loc 1 766 0
 5332 01da 70BD     		pop	{r4, r5, r6, pc}
 5333              	.LVL653:
 5334              	.L357:
 5335              		.align	2
 5336              	.L356:
 5337 01dc 00000000 		.word	.LANCHOR4
 5338 01e0 00000000 		.word	Voltage_MAX
 5339 01e4 00000000 		.word	Voltage_MIN
 5340 01e8 00000000 		.word	.LANCHOR6
 5341 01ec 00000000 		.word	.LANCHOR7
 5342              		.cfi_endproc
 5343              	.LFE121:
 5345              		.section	.text.Voltage_Change_Init,"ax",%progbits
 5346              		.align	2
 5347              		.global	Voltage_Change_Init
 5348              		.thumb
 5349              		.thumb_func
 5351              	Voltage_Change_Init:
 5352              	.LFB126:
 871:../user/source/DLT645.c ****     uint8_t Vmax1;
 5353              		.loc 1 871 0
 5354              		.cfi_startproc
 5355              		@ args = 0, pretend = 0, frame = 0
 5356              		@ frame_needed = 0, uses_anonymous_args = 0
 5357 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5358              	.LCFI46:
 5359              		.cfi_def_cfa_offset 24
 5360              		.cfi_offset 3, -24
 5361              		.cfi_offset 4, -20
 5362              		.cfi_offset 5, -16
 5363              		.cfi_offset 6, -12
 5364              		.cfi_offset 7, -8
 5365              		.cfi_offset 14, -4
 877:../user/source/DLT645.c ****     /*µçÑ¹ĞŞ¸ÄÉÏÏÂÏŞ³õÊ¼»¯*/
 5366              		.loc 1 877 0
 5367 0002 1948     		ldr	r0, .L362
 5368 0004 FFF7FEFF 		bl	EEProm_Read
 5369              	.LVL654:
 5370 0008 184B     		ldr	r3, .L362+4
 5371 000a 1870     		strb	r0, [r3]
 879:../user/source/DLT645.c ****     Vmax2 = EEProm_Read(FLASH_VMAX2_Addr);
 5372              		.loc 1 879 0
 5373 000c 1848     		ldr	r0, .L362+8
 5374 000e FFF7FEFF 		bl	EEProm_Read
 5375              	.LVL655:
 5376 0012 0446     		mov	r4, r0
 5377              	.LVL656:
 880:../user/source/DLT645.c ****     Vmin1 = EEProm_Read(FLASH_VMIN1_Addr);
 5378              		.loc 1 880 0
 5379 0014 1748     		ldr	r0, .L362+12
 5380 0016 FFF7FEFF 		bl	EEProm_Read
 5381              	.LVL657:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 157


 5382 001a 0546     		mov	r5, r0
 5383              	.LVL658:
 881:../user/source/DLT645.c ****     Vmin2 = EEProm_Read(FLASH_VMIN2_Addr);
 5384              		.loc 1 881 0
 5385 001c 1648     		ldr	r0, .L362+16
 5386 001e FFF7FEFF 		bl	EEProm_Read
 5387              	.LVL659:
 5388 0022 0646     		mov	r6, r0
 5389              	.LVL660:
 882:../user/source/DLT645.c **** 
 5390              		.loc 1 882 0
 5391 0024 1548     		ldr	r0, .L362+20
 5392 0026 FFF7FEFF 		bl	EEProm_Read
 5393              	.LVL661:
 5394 002a 0746     		mov	r7, r0
 5395              	.LVL662:
 884:../user/source/DLT645.c ****     {
 5396              		.loc 1 884 0
 5397 002c FF2C     		cmp	r4, #255
 5398 002e 0ED1     		bne	.L359
 884:../user/source/DLT645.c ****     {
 5399              		.loc 1 884 0 is_stmt 0 discriminator 1
 5400 0030 FF2D     		cmp	r5, #255
 5401 0032 0CD1     		bne	.L359
 884:../user/source/DLT645.c ****     {
 5402              		.loc 1 884 0 discriminator 2
 5403 0034 FF2E     		cmp	r6, #255
 5404 0036 0AD1     		bne	.L359
 884:../user/source/DLT645.c ****     {
 5405              		.loc 1 884 0 discriminator 3
 5406 0038 FF28     		cmp	r0, #255
 5407 003a 08D1     		bne	.L359
 886:../user/source/DLT645.c ****         Voltage_MIN = Voltage_MIN_Default;
 5408              		.loc 1 886 0 is_stmt 1
 5409 003c 40F62E12 		movw	r2, #2350
 5410 0040 0F4B     		ldr	r3, .L362+24
 5411 0042 1A60     		str	r2, [r3]
 887:../user/source/DLT645.c ****     }
 5412              		.loc 1 887 0
 5413 0044 40F2BC72 		movw	r2, #1980
 5414 0048 0E4B     		ldr	r3, .L362+28
 5415 004a 1A60     		str	r2, [r3]
 5416 004c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5417              	.LVL663:
 5418              	.L359:
 891:../user/source/DLT645.c ****         Voltage_MIN = Get_Voltage(Vmin1, Vmin2);
 5419              		.loc 1 891 0
 5420 004e 2946     		mov	r1, r5
 5421 0050 2046     		mov	r0, r4
 5422              	.LVL664:
 5423 0052 FFF7FEFF 		bl	Get_Voltage
 5424              	.LVL665:
 5425 0056 0A4B     		ldr	r3, .L362+24
 5426 0058 1860     		str	r0, [r3]
 892:../user/source/DLT645.c ****     }
 5427              		.loc 1 892 0
 5428 005a 3946     		mov	r1, r7
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 158


 5429 005c 3046     		mov	r0, r6
 5430 005e FFF7FEFF 		bl	Get_Voltage
 5431              	.LVL666:
 5432 0062 084B     		ldr	r3, .L362+28
 5433 0064 1860     		str	r0, [r3]
 5434 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5435              	.LVL667:
 5436              	.L363:
 5437              		.align	2
 5438              	.L362:
 5439 0068 141F0308 		.word	134422292
 5440 006c 00000000 		.word	.LANCHOR5
 5441 0070 001F0308 		.word	134422272
 5442 0074 041F0308 		.word	134422276
 5443 0078 081F0308 		.word	134422280
 5444 007c 0C1F0308 		.word	134422284
 5445 0080 00000000 		.word	Voltage_MAX
 5446 0084 00000000 		.word	Voltage_MIN
 5447              		.cfi_endproc
 5448              	.LFE126:
 5450              		.section	.text.Voltage_Modifier_Method,"ax",%progbits
 5451              		.align	2
 5452              		.global	Voltage_Modifier_Method
 5453              		.thumb
 5454              		.thumb_func
 5456              	Voltage_Modifier_Method:
 5457              	.LFB127:
 905:../user/source/DLT645.c ****     int n = 0;
 5458              		.loc 1 905 0
 5459              		.cfi_startproc
 5460              		@ args = 0, pretend = 0, frame = 0
 5461              		@ frame_needed = 0, uses_anonymous_args = 0
 5462              	.LVL668:
 5463 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5464              	.LCFI47:
 5465              		.cfi_def_cfa_offset 20
 5466              		.cfi_offset 4, -20
 5467              		.cfi_offset 5, -16
 5468              		.cfi_offset 6, -12
 5469              		.cfi_offset 7, -8
 5470              		.cfi_offset 14, -4
 5471              	.LVL669:
 909:../user/source/DLT645.c ****     m = (Voltage_MAX_MAX - Voltage_MAX) / (Voltage_MAX - Voltage_MIN) + 1; //(260-235)/(235-198)+1»
 5472              		.loc 1 909 0
 5473 0002 1F4B     		ldr	r3, .L376
 5474 0004 1E68     		ldr	r6, [r3]
 5475 0006 A6F59661 		sub	r1, r6, #1200
 5476 000a 1E4B     		ldr	r3, .L376+4
 5477 000c 1D68     		ldr	r5, [r3]
 5478 000e AA1B     		subs	r2, r5, r6
 5479 0010 91FBF2F1 		sdiv	r1, r1, r2
 5480 0014 0131     		adds	r1, r1, #1
 5481              	.LVL670:
 910:../user/source/DLT645.c ****     if ((Voltage > Voltage_MAX) && (Voltage <= Voltage_MAX_MAX))
 5482              		.loc 1 910 0
 5483 0016 C5F52F64 		rsb	r4, r5, #2800
 5484 001a 94FBF2F4 		sdiv	r4, r4, r2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 159


 5485              	.LVL671:
 911:../user/source/DLT645.c ****     {
 5486              		.loc 1 911 0
 5487 001e 8542     		cmp	r5, r0
 5488 0020 16DA     		bge	.L365
 5489 0022 0134     		adds	r4, r4, #1
 5490              	.LVL672:
 911:../user/source/DLT645.c ****     {
 5491              		.loc 1 911 0 is_stmt 0 discriminator 1
 5492 0024 B0F52F6F 		cmp	r0, #2800
 5493 0028 12DC     		bgt	.L365
 913:../user/source/DLT645.c ****         {
 5494              		.loc 1 913 0 is_stmt 1
 5495 002a AB18     		adds	r3, r5, r2
 5496 002c 9842     		cmp	r0, r3
 5497 002e 0CDC     		bgt	.L371
 915:../user/source/DLT645.c ****             return Voltage;
 5498              		.loc 1 915 0
 5499 0030 451B     		subs	r5, r0, r5
 5500 0032 A0EB4500 		sub	r0, r0, r5, lsl #1
 5501              	.LVL673:
 916:../user/source/DLT645.c ****         }
 5502              		.loc 1 916 0
 5503 0036 F0BD     		pop	{r4, r5, r6, r7, pc}
 5504              	.LVL674:
 5505              	.L368:
 922:../user/source/DLT645.c ****                 {
 5506              		.loc 1 922 0
 5507 0038 0133     		adds	r3, r3, #1
 5508              	.LVL675:
 5509 003a 03FB02F7 		mul	r7, r3, r2
 5510 003e 05EB070E 		add	lr, r5, r7
 5511 0042 7045     		cmp	r0, lr
 5512 0044 02DC     		bgt	.L366
 924:../user/source/DLT645.c ****                     return Voltage;
 5513              		.loc 1 924 0
 5514 0046 C01B     		subs	r0, r0, r7
 5515              	.LVL676:
 925:../user/source/DLT645.c ****                 }
 5516              		.loc 1 925 0
 5517 0048 F0BD     		pop	{r4, r5, r6, r7, pc}
 5518              	.LVL677:
 5519              	.L371:
 5520 004a 0123     		movs	r3, #1
 5521              	.LVL678:
 5522              	.L366:
 920:../user/source/DLT645.c ****             {
 5523              		.loc 1 920 0 discriminator 1
 5524 004c A342     		cmp	r3, r4
 5525 004e F3DB     		blt	.L368
 5526              	.LVL679:
 5527              	.L365:
 930:../user/source/DLT645.c ****     {
 5528              		.loc 1 930 0
 5529 0050 8642     		cmp	r6, r0
 5530 0052 14DD     		ble	.L367
 930:../user/source/DLT645.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 160


 5531              		.loc 1 930 0 is_stmt 0 discriminator 1
 5532 0054 B0F5966F 		cmp	r0, #1200
 5533 0058 11DB     		blt	.L367
 932:../user/source/DLT645.c ****         {
 5534              		.loc 1 932 0 is_stmt 1
 5535 005a B31A     		subs	r3, r6, r2
 5536 005c 9842     		cmp	r0, r3
 5537 005e 0BDB     		blt	.L374
 934:../user/source/DLT645.c ****             return Voltage;
 5538              		.loc 1 934 0
 5539 0060 361A     		subs	r6, r6, r0
 5540 0062 00EB4600 		add	r0, r0, r6, lsl #1
 5541              	.LVL680:
 935:../user/source/DLT645.c ****         }
 5542              		.loc 1 935 0
 5543 0066 F0BD     		pop	{r4, r5, r6, r7, pc}
 5544              	.LVL681:
 5545              	.L370:
 941:../user/source/DLT645.c ****                 {
 5546              		.loc 1 941 0
 5547 0068 0133     		adds	r3, r3, #1
 5548              	.LVL682:
 5549 006a 03FB02F4 		mul	r4, r3, r2
 5550 006e 351B     		subs	r5, r6, r4
 5551 0070 A842     		cmp	r0, r5
 5552 0072 02DB     		blt	.L369
 943:../user/source/DLT645.c ****                     return Voltage;
 5553              		.loc 1 943 0
 5554 0074 2044     		add	r0, r0, r4
 5555              	.LVL683:
 944:../user/source/DLT645.c ****                 }
 5556              		.loc 1 944 0
 5557 0076 F0BD     		pop	{r4, r5, r6, r7, pc}
 5558              	.LVL684:
 5559              	.L374:
 5560 0078 0123     		movs	r3, #1
 5561              	.LVL685:
 5562              	.L369:
 939:../user/source/DLT645.c ****             {
 5563              		.loc 1 939 0 discriminator 1
 5564 007a 8B42     		cmp	r3, r1
 5565 007c F4DB     		blt	.L370
 5566              	.LVL686:
 5567              	.L367:
 950:../user/source/DLT645.c **** /*****************************************************
 5568              		.loc 1 950 0
 5569 007e F0BD     		pop	{r4, r5, r6, r7, pc}
 5570              	.L377:
 5571              		.align	2
 5572              	.L376:
 5573 0080 00000000 		.word	Voltage_MIN
 5574 0084 00000000 		.word	Voltage_MAX
 5575              		.cfi_endproc
 5576              	.LFE127:
 5578              		.section	.text.Voltage_Modifier,"ax",%progbits
 5579              		.align	2
 5580              		.global	Voltage_Modifier
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 161


 5581              		.thumb
 5582              		.thumb_func
 5584              	Voltage_Modifier:
 5585              	.LFB120:
 593:../user/source/DLT645.c **** 
 5586              		.loc 1 593 0
 5587              		.cfi_startproc
 5588              		@ args = 0, pretend = 0, frame = 0
 5589              		@ frame_needed = 0, uses_anonymous_args = 0
 5590              	.LVL687:
 5591 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5592              	.LCFI48:
 5593              		.cfi_def_cfa_offset 24
 5594              		.cfi_offset 3, -24
 5595              		.cfi_offset 4, -20
 5596              		.cfi_offset 5, -16
 5597              		.cfi_offset 6, -12
 5598              		.cfi_offset 7, -8
 5599              		.cfi_offset 14, -4
 5600              	.LVL688:
 598:../user/source/DLT645.c ****         return;
 5601              		.loc 1 598 0
 5602 0002 7A4B     		ldr	r3, .L395
 5603 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5604 0006 002B     		cmp	r3, #0
 5605 0008 00F0EF80 		beq	.L378
 600:../user/source/DLT645.c ****     {
 5606              		.loc 1 600 0
 5607 000c 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 5608 000e 912B     		cmp	r3, #145
 5609 0010 40F0EB80 		bne	.L378
 600:../user/source/DLT645.c ****     {
 5610              		.loc 1 600 0 is_stmt 0 discriminator 1
 5611 0014 837A     		ldrb	r3, [r0, #10]	@ zero_extendqisi2
 5612 0016 332B     		cmp	r3, #51
 5613 0018 40F0E780 		bne	.L378
 600:../user/source/DLT645.c ****     {
 5614              		.loc 1 600 0 discriminator 2
 5615 001c 037B     		ldrb	r3, [r0, #12]	@ zero_extendqisi2
 5616 001e 342B     		cmp	r3, #52
 5617 0020 40F0E380 		bne	.L378
 600:../user/source/DLT645.c ****     {
 5618              		.loc 1 600 0 discriminator 3
 5619 0024 437B     		ldrb	r3, [r0, #13]	@ zero_extendqisi2
 5620 0026 352B     		cmp	r3, #53
 5621 0028 40F0DF80 		bne	.L378
 5622 002c 0446     		mov	r4, r0
 602:../user/source/DLT645.c ****         {
 5623              		.loc 1 602 0 is_stmt 1
 5624 002e C57A     		ldrb	r5, [r0, #11]	@ zero_extendqisi2
 5625 0030 322D     		cmp	r5, #50
 5626 0032 62D1     		bne	.L380
 604:../user/source/DLT645.c ****             {
 5627              		.loc 1 604 0
 5628 0034 867B     		ldrb	r6, [r0, #14]	@ zero_extendqisi2
 5629 0036 C77B     		ldrb	r7, [r0, #15]	@ zero_extendqisi2
 5630 0038 3946     		mov	r1, r7
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 162


 5631 003a 3046     		mov	r0, r6
 5632              	.LVL689:
 5633 003c FFF7FEFF 		bl	BCD_Verity
 5634              	.LVL690:
 5635 0040 C8B1     		cbz	r0, .L381
 606:../user/source/DLT645.c ****                 if ((A_Voltage > Voltage_MAX) || (A_Voltage < Voltage_MIN)) //ĞŞ¸ÄAÏàµçÑ¹
 5636              		.loc 1 606 0
 5637 0042 3946     		mov	r1, r7
 5638 0044 3046     		mov	r0, r6
 5639 0046 FFF7FEFF 		bl	Get_Voltage
 5640              	.LVL691:
 5641 004a 694B     		ldr	r3, .L395+4
 5642 004c 1860     		str	r0, [r3]
 607:../user/source/DLT645.c ****                 {
 5643              		.loc 1 607 0
 5644 004e 694B     		ldr	r3, .L395+8
 5645 0050 1B68     		ldr	r3, [r3]
 5646 0052 9842     		cmp	r0, r3
 5647 0054 03DC     		bgt	.L382
 607:../user/source/DLT645.c ****                 {
 5648              		.loc 1 607 0 is_stmt 0 discriminator 1
 5649 0056 684B     		ldr	r3, .L395+12
 5650 0058 1B68     		ldr	r3, [r3]
 5651 005a 9842     		cmp	r0, r3
 5652 005c 0BDA     		bge	.L381
 5653              	.L382:
 609:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(A_Voltage);
 5654              		.loc 1 609 0 is_stmt 1
 5655 005e FFF7FEFF 		bl	Voltage_Modifier_Method
 5656              	.LVL692:
 5657 0062 0646     		mov	r6, r0
 5658 0064 624B     		ldr	r3, .L395+4
 5659 0066 1860     		str	r0, [r3]
 610:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(A_Voltage);
 5660              		.loc 1 610 0
 5661 0068 FFF7FEFF 		bl	GetLowByte
 5662              	.LVL693:
 5663 006c A073     		strb	r0, [r4, #14]
 611:../user/source/DLT645.c ****                 }
 5664              		.loc 1 611 0
 5665 006e 3046     		mov	r0, r6
 5666 0070 FFF7FEFF 		bl	GetHighByte
 5667              	.LVL694:
 5668 0074 E073     		strb	r0, [r4, #15]
 5669              	.L381:
 614:../user/source/DLT645.c ****             {
 5670              		.loc 1 614 0
 5671 0076 267C     		ldrb	r6, [r4, #16]	@ zero_extendqisi2
 5672 0078 677C     		ldrb	r7, [r4, #17]	@ zero_extendqisi2
 5673 007a 3946     		mov	r1, r7
 5674 007c 3046     		mov	r0, r6
 5675 007e FFF7FEFF 		bl	BCD_Verity
 5676              	.LVL695:
 5677 0082 C8B1     		cbz	r0, .L383
 616:../user/source/DLT645.c ****                 if ((B_Voltage > Voltage_MAX) || (B_Voltage < Voltage_MIN)) //ĞŞ¸ÄBÏàµçÑ¹
 5678              		.loc 1 616 0
 5679 0084 3946     		mov	r1, r7
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 163


 5680 0086 3046     		mov	r0, r6
 5681 0088 FFF7FEFF 		bl	Get_Voltage
 5682              	.LVL696:
 5683 008c 5B4B     		ldr	r3, .L395+16
 5684 008e 1860     		str	r0, [r3]
 617:../user/source/DLT645.c ****                 {
 5685              		.loc 1 617 0
 5686 0090 584B     		ldr	r3, .L395+8
 5687 0092 1B68     		ldr	r3, [r3]
 5688 0094 9842     		cmp	r0, r3
 5689 0096 03DC     		bgt	.L384
 617:../user/source/DLT645.c ****                 {
 5690              		.loc 1 617 0 is_stmt 0 discriminator 1
 5691 0098 574B     		ldr	r3, .L395+12
 5692 009a 1B68     		ldr	r3, [r3]
 5693 009c 9842     		cmp	r0, r3
 5694 009e 0BDA     		bge	.L383
 5695              	.L384:
 619:../user/source/DLT645.c ****                     pucBuffer[16] = GetLowByte(B_Voltage);
 5696              		.loc 1 619 0 is_stmt 1
 5697 00a0 FFF7FEFF 		bl	Voltage_Modifier_Method
 5698              	.LVL697:
 5699 00a4 0646     		mov	r6, r0
 5700 00a6 554B     		ldr	r3, .L395+16
 5701 00a8 1860     		str	r0, [r3]
 620:../user/source/DLT645.c ****                     pucBuffer[17] = GetHighByte(B_Voltage);
 5702              		.loc 1 620 0
 5703 00aa FFF7FEFF 		bl	GetLowByte
 5704              	.LVL698:
 5705 00ae 2074     		strb	r0, [r4, #16]
 621:../user/source/DLT645.c ****                 }
 5706              		.loc 1 621 0
 5707 00b0 3046     		mov	r0, r6
 5708 00b2 FFF7FEFF 		bl	GetHighByte
 5709              	.LVL699:
 5710 00b6 6074     		strb	r0, [r4, #17]
 5711              	.L383:
 624:../user/source/DLT645.c ****             {
 5712              		.loc 1 624 0
 5713 00b8 A67C     		ldrb	r6, [r4, #18]	@ zero_extendqisi2
 5714 00ba E77C     		ldrb	r7, [r4, #19]	@ zero_extendqisi2
 5715 00bc 3946     		mov	r1, r7
 5716 00be 3046     		mov	r0, r6
 5717 00c0 FFF7FEFF 		bl	BCD_Verity
 5718              	.LVL700:
 5719 00c4 C8B1     		cbz	r0, .L380
 626:../user/source/DLT645.c ****                 if ((C_Voltage > Voltage_MAX) || (C_Voltage < Voltage_MIN)) //ĞŞ¸ÄCÏàµçÑ¹
 5720              		.loc 1 626 0
 5721 00c6 3946     		mov	r1, r7
 5722 00c8 3046     		mov	r0, r6
 5723 00ca FFF7FEFF 		bl	Get_Voltage
 5724              	.LVL701:
 5725 00ce 4C4B     		ldr	r3, .L395+20
 5726 00d0 1860     		str	r0, [r3]
 627:../user/source/DLT645.c ****                 {
 5727              		.loc 1 627 0
 5728 00d2 484B     		ldr	r3, .L395+8
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 164


 5729 00d4 1B68     		ldr	r3, [r3]
 5730 00d6 9842     		cmp	r0, r3
 5731 00d8 03DC     		bgt	.L385
 627:../user/source/DLT645.c ****                 {
 5732              		.loc 1 627 0 is_stmt 0 discriminator 1
 5733 00da 474B     		ldr	r3, .L395+12
 5734 00dc 1B68     		ldr	r3, [r3]
 5735 00de 9842     		cmp	r0, r3
 5736 00e0 0BDA     		bge	.L380
 5737              	.L385:
 629:../user/source/DLT645.c ****                     pucBuffer[18] = GetLowByte(C_Voltage);
 5738              		.loc 1 629 0 is_stmt 1
 5739 00e2 FFF7FEFF 		bl	Voltage_Modifier_Method
 5740              	.LVL702:
 5741 00e6 0646     		mov	r6, r0
 5742 00e8 454B     		ldr	r3, .L395+20
 5743 00ea 1860     		str	r0, [r3]
 630:../user/source/DLT645.c ****                     pucBuffer[19] = GetHighByte(C_Voltage);
 5744              		.loc 1 630 0
 5745 00ec FFF7FEFF 		bl	GetLowByte
 5746              	.LVL703:
 5747 00f0 A074     		strb	r0, [r4, #18]
 631:../user/source/DLT645.c ****                 }
 5748              		.loc 1 631 0
 5749 00f2 3046     		mov	r0, r6
 5750 00f4 FFF7FEFF 		bl	GetHighByte
 5751              	.LVL704:
 5752 00f8 E074     		strb	r0, [r4, #19]
 5753              	.L380:
 635:../user/source/DLT645.c ****         {
 5754              		.loc 1 635 0
 5755 00fa 342D     		cmp	r5, #52
 5756 00fc 20D1     		bne	.L386
 637:../user/source/DLT645.c ****             {
 5757              		.loc 1 637 0
 5758 00fe A67B     		ldrb	r6, [r4, #14]	@ zero_extendqisi2
 5759 0100 E77B     		ldrb	r7, [r4, #15]	@ zero_extendqisi2
 5760 0102 3946     		mov	r1, r7
 5761 0104 3046     		mov	r0, r6
 5762 0106 FFF7FEFF 		bl	BCD_Verity
 5763              	.LVL705:
 5764 010a C8B1     		cbz	r0, .L386
 639:../user/source/DLT645.c ****                 if ((A_Voltage > Voltage_MAX) || (A_Voltage < Voltage_MIN)) //ĞŞ¸ÄAÏàµçÑ¹
 5765              		.loc 1 639 0
 5766 010c 3946     		mov	r1, r7
 5767 010e 3046     		mov	r0, r6
 5768 0110 FFF7FEFF 		bl	Get_Voltage
 5769              	.LVL706:
 5770 0114 364B     		ldr	r3, .L395+4
 5771 0116 1860     		str	r0, [r3]
 640:../user/source/DLT645.c ****                 {
 5772              		.loc 1 640 0
 5773 0118 364B     		ldr	r3, .L395+8
 5774 011a 1B68     		ldr	r3, [r3]
 5775 011c 9842     		cmp	r0, r3
 5776 011e 03DC     		bgt	.L387
 640:../user/source/DLT645.c ****                 {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 165


 5777              		.loc 1 640 0 is_stmt 0 discriminator 1
 5778 0120 354B     		ldr	r3, .L395+12
 5779 0122 1B68     		ldr	r3, [r3]
 5780 0124 9842     		cmp	r0, r3
 5781 0126 0BDA     		bge	.L386
 5782              	.L387:
 642:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(A_Voltage);
 5783              		.loc 1 642 0 is_stmt 1
 5784 0128 FFF7FEFF 		bl	Voltage_Modifier_Method
 5785              	.LVL707:
 5786 012c 0646     		mov	r6, r0
 5787 012e 304B     		ldr	r3, .L395+4
 5788 0130 1860     		str	r0, [r3]
 643:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(A_Voltage);
 5789              		.loc 1 643 0
 5790 0132 FFF7FEFF 		bl	GetLowByte
 5791              	.LVL708:
 5792 0136 A073     		strb	r0, [r4, #14]
 644:../user/source/DLT645.c ****                 }
 5793              		.loc 1 644 0
 5794 0138 3046     		mov	r0, r6
 5795 013a FFF7FEFF 		bl	GetHighByte
 5796              	.LVL709:
 5797 013e E073     		strb	r0, [r4, #15]
 5798              	.L386:
 648:../user/source/DLT645.c ****         {
 5799              		.loc 1 648 0
 5800 0140 352D     		cmp	r5, #53
 5801 0142 20D1     		bne	.L388
 650:../user/source/DLT645.c ****             {
 5802              		.loc 1 650 0
 5803 0144 A67B     		ldrb	r6, [r4, #14]	@ zero_extendqisi2
 5804 0146 E77B     		ldrb	r7, [r4, #15]	@ zero_extendqisi2
 5805 0148 3946     		mov	r1, r7
 5806 014a 3046     		mov	r0, r6
 5807 014c FFF7FEFF 		bl	BCD_Verity
 5808              	.LVL710:
 5809 0150 C8B1     		cbz	r0, .L388
 652:../user/source/DLT645.c ****                 if ((B_Voltage > Voltage_MAX) || (B_Voltage < Voltage_MIN)) //ĞŞ¸ÄBÏàµçÑ¹
 5810              		.loc 1 652 0
 5811 0152 3946     		mov	r1, r7
 5812 0154 3046     		mov	r0, r6
 5813 0156 FFF7FEFF 		bl	Get_Voltage
 5814              	.LVL711:
 5815 015a 284B     		ldr	r3, .L395+16
 5816 015c 1860     		str	r0, [r3]
 653:../user/source/DLT645.c ****                 {
 5817              		.loc 1 653 0
 5818 015e 254B     		ldr	r3, .L395+8
 5819 0160 1B68     		ldr	r3, [r3]
 5820 0162 9842     		cmp	r0, r3
 5821 0164 03DC     		bgt	.L389
 653:../user/source/DLT645.c ****                 {
 5822              		.loc 1 653 0 is_stmt 0 discriminator 1
 5823 0166 244B     		ldr	r3, .L395+12
 5824 0168 1B68     		ldr	r3, [r3]
 5825 016a 9842     		cmp	r0, r3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 166


 5826 016c 0BDA     		bge	.L388
 5827              	.L389:
 655:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(B_Voltage);
 5828              		.loc 1 655 0 is_stmt 1
 5829 016e FFF7FEFF 		bl	Voltage_Modifier_Method
 5830              	.LVL712:
 5831 0172 0646     		mov	r6, r0
 5832 0174 214B     		ldr	r3, .L395+16
 5833 0176 1860     		str	r0, [r3]
 656:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(B_Voltage);
 5834              		.loc 1 656 0
 5835 0178 FFF7FEFF 		bl	GetLowByte
 5836              	.LVL713:
 5837 017c A073     		strb	r0, [r4, #14]
 657:../user/source/DLT645.c ****                 }
 5838              		.loc 1 657 0
 5839 017e 3046     		mov	r0, r6
 5840 0180 FFF7FEFF 		bl	GetHighByte
 5841              	.LVL714:
 5842 0184 E073     		strb	r0, [r4, #15]
 5843              	.L388:
 661:../user/source/DLT645.c ****         {
 5844              		.loc 1 661 0
 5845 0186 362D     		cmp	r5, #54
 5846 0188 20D1     		bne	.L390
 663:../user/source/DLT645.c ****             {
 5847              		.loc 1 663 0
 5848 018a A57B     		ldrb	r5, [r4, #14]	@ zero_extendqisi2
 5849 018c E67B     		ldrb	r6, [r4, #15]	@ zero_extendqisi2
 5850 018e 3146     		mov	r1, r6
 5851 0190 2846     		mov	r0, r5
 5852 0192 FFF7FEFF 		bl	BCD_Verity
 5853              	.LVL715:
 5854 0196 C8B1     		cbz	r0, .L390
 665:../user/source/DLT645.c ****                 if ((C_Voltage > Voltage_MAX) || (C_Voltage < Voltage_MIN)) //ĞŞ¸ÄCÏàµçÑ¹
 5855              		.loc 1 665 0
 5856 0198 3146     		mov	r1, r6
 5857 019a 2846     		mov	r0, r5
 5858 019c FFF7FEFF 		bl	Get_Voltage
 5859              	.LVL716:
 5860 01a0 174B     		ldr	r3, .L395+20
 5861 01a2 1860     		str	r0, [r3]
 666:../user/source/DLT645.c ****                 {
 5862              		.loc 1 666 0
 5863 01a4 134B     		ldr	r3, .L395+8
 5864 01a6 1B68     		ldr	r3, [r3]
 5865 01a8 9842     		cmp	r0, r3
 5866 01aa 03DC     		bgt	.L391
 666:../user/source/DLT645.c ****                 {
 5867              		.loc 1 666 0 is_stmt 0 discriminator 1
 5868 01ac 124B     		ldr	r3, .L395+12
 5869 01ae 1B68     		ldr	r3, [r3]
 5870 01b0 9842     		cmp	r0, r3
 5871 01b2 0BDA     		bge	.L390
 5872              	.L391:
 668:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(C_Voltage);
 5873              		.loc 1 668 0 is_stmt 1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 167


 5874 01b4 FFF7FEFF 		bl	Voltage_Modifier_Method
 5875              	.LVL717:
 5876 01b8 0546     		mov	r5, r0
 5877 01ba 114B     		ldr	r3, .L395+20
 5878 01bc 1860     		str	r0, [r3]
 669:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(C_Voltage);
 5879              		.loc 1 669 0
 5880 01be FFF7FEFF 		bl	GetLowByte
 5881              	.LVL718:
 5882 01c2 A073     		strb	r0, [r4, #14]
 670:../user/source/DLT645.c ****                 }
 5883              		.loc 1 670 0
 5884 01c4 2846     		mov	r0, r5
 5885 01c6 FFF7FEFF 		bl	GetHighByte
 5886              	.LVL719:
 5887 01ca E073     		strb	r0, [r4, #15]
 5888              	.L390:
 675:../user/source/DLT645.c ****         {
 5889              		.loc 1 675 0
 5890 01cc 0023     		movs	r3, #0
 595:../user/source/DLT645.c ****     uint8_t i = 0;
 5891              		.loc 1 595 0
 5892 01ce 1A46     		mov	r2, r3
 675:../user/source/DLT645.c ****         {
 5893              		.loc 1 675 0
 5894 01d0 04E0     		b	.L392
 5895              	.LVL720:
 5896              	.L393:
 677:../user/source/DLT645.c ****         }
 5897              		.loc 1 677 0 discriminator 3
 5898 01d2 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 5899 01d4 0A44     		add	r2, r2, r1
 5900              	.LVL721:
 5901 01d6 D2B2     		uxtb	r2, r2
 5902              	.LVL722:
 675:../user/source/DLT645.c ****         {
 5903              		.loc 1 675 0 discriminator 3
 5904 01d8 0133     		adds	r3, r3, #1
 5905              	.LVL723:
 5906 01da DBB2     		uxtb	r3, r3
 5907              	.LVL724:
 5908              	.L392:
 675:../user/source/DLT645.c ****         {
 5909              		.loc 1 675 0 is_stmt 0 discriminator 1
 5910 01dc 0949     		ldr	r1, .L395+24
 5911 01de 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 5912 01e0 01F10A00 		add	r0, r1, #10
 5913 01e4 8342     		cmp	r3, r0
 5914 01e6 F4DB     		blt	.L393
 679:../user/source/DLT645.c ****     }
 5915              		.loc 1 679 0 is_stmt 1
 5916 01e8 2254     		strb	r2, [r4, r0]
 5917              	.LVL725:
 5918              	.L378:
 5919 01ea F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5920              	.L396:
 5921              		.align	2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 168


 5922              	.L395:
 5923 01ec 00000000 		.word	.LANCHOR5
 5924 01f0 00000000 		.word	.LANCHOR4
 5925 01f4 00000000 		.word	Voltage_MAX
 5926 01f8 00000000 		.word	Voltage_MIN
 5927 01fc 00000000 		.word	.LANCHOR6
 5928 0200 00000000 		.word	.LANCHOR7
 5929 0204 00000000 		.word	.LANCHOR0
 5930              		.cfi_endproc
 5931              	.LFE120:
 5933              		.section	.text.vVoltageHandle,"ax",%progbits
 5934              		.align	2
 5935              		.global	vVoltageHandle
 5936              		.thumb
 5937              		.thumb_func
 5939              	vVoltageHandle:
 5940              	.LFB119:
 575:../user/source/DLT645.c ****     /*µÈ´ıµçÑ¹»ØÖ¡×´Ì¬ÇåÎ»*/
 5941              		.loc 1 575 0
 5942              		.cfi_startproc
 5943              		@ args = 0, pretend = 0, frame = 0
 5944              		@ frame_needed = 0, uses_anonymous_args = 0
 5945              	.LVL726:
 5946 0000 08B5     		push	{r3, lr}
 5947              	.LCFI49:
 5948              		.cfi_def_cfa_offset 8
 5949              		.cfi_offset 3, -8
 5950              		.cfi_offset 14, -4
 577:../user/source/DLT645.c ****     /*¼ÆÊ±Æ÷¸´Î»*/
 5951              		.loc 1 577 0
 5952 0002 0122     		movs	r2, #1
 5953 0004 044B     		ldr	r3, .L399
 5954 0006 1A70     		strb	r2, [r3]
 579:../user/source/DLT645.c ****     uwTime2FramesCounter = 0;
 5955              		.loc 1 579 0
 5956 0008 0023     		movs	r3, #0
 5957 000a 044A     		ldr	r2, .L399+4
 5958 000c 1370     		strb	r3, [r2]
 580:../user/source/DLT645.c ****     /*µçÑ¹Ö¡ÅĞ¶Ï´¦Àí*/
 5959              		.loc 1 580 0
 5960 000e 044A     		ldr	r2, .L399+8
 5961 0010 1380     		strh	r3, [r2]	@ movhi
 582:../user/source/DLT645.c **** }
 5962              		.loc 1 582 0
 5963 0012 FFF7FEFF 		bl	Voltage_Modifier
 5964              	.LVL727:
 5965 0016 08BD     		pop	{r3, pc}
 5966              	.L400:
 5967              		.align	2
 5968              	.L399:
 5969 0018 00000000 		.word	Voltage_Frame_Status
 5970 001c 00000000 		.word	blFramesCounterStatus
 5971 0020 00000000 		.word	uwTime2FramesCounter
 5972              		.cfi_endproc
 5973              	.LFE119:
 5975              		.section	.text.vCurrent_Limit_DefaultSet,"ax",%progbits
 5976              		.align	2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 169


 5977              		.global	vCurrent_Limit_DefaultSet
 5978              		.thumb
 5979              		.thumb_func
 5981              	vCurrent_Limit_DefaultSet:
 5982              	.LFB132:
1258:../user/source/DLT645.c ****     uint32_t uwLimit;
 5983              		.loc 1 1258 0
 5984              		.cfi_startproc
 5985              		@ args = 0, pretend = 0, frame = 0
 5986              		@ frame_needed = 0, uses_anonymous_args = 0
 5987 0000 08B5     		push	{r3, lr}
 5988              	.LCFI50:
 5989              		.cfi_def_cfa_offset 8
 5990              		.cfi_offset 3, -8
 5991              		.cfi_offset 14, -4
1273:../user/source/DLT645.c ****     TransFormer.rated_current = 288000;
 5992              		.loc 1 1273 0
 5993 0002 174B     		ldr	r3, .L407
 5994 0004 C822     		movs	r2, #200
 5995 0006 1A60     		str	r2, [r3]
1274:../user/source/DLT645.c **** #endif
 5996              		.loc 1 1274 0
 5997 0008 164A     		ldr	r2, .L407+4
 5998 000a 5A60     		str	r2, [r3, #4]
1282:../user/source/DLT645.c ****     /*±ä±ÈÎŞĞ§ £¬ÔòÎª³õ´ÎÉÏµç*/
 5999              		.loc 1 1282 0
 6000 000c 1648     		ldr	r0, .L407+8
 6001 000e FFF7FEFF 		bl	Flash_Read_Word
 6002              	.LVL728:
1284:../user/source/DLT645.c ****     {
 6003              		.loc 1 1284 0
 6004 0012 B0F1FF3F 		cmp	r0, #-1
 6005 0016 06D1     		bne	.L402
1287:../user/source/DLT645.c ****         /*´æ´¢CTÖµ*/
 6006              		.loc 1 1287 0
 6007 0018 5021     		movs	r1, #80
 6008 001a 114B     		ldr	r3, .L407
 6009 001c 9960     		str	r1, [r3, #8]
1289:../user/source/DLT645.c ****     }
 6010              		.loc 1 1289 0
 6011 001e 1248     		ldr	r0, .L407+8
 6012              	.LVL729:
 6013 0020 FFF7FEFF 		bl	Flash_Write_Word
 6014              	.LVL730:
 6015 0024 01E0     		b	.L403
 6016              	.LVL731:
 6017              	.L402:
1294:../user/source/DLT645.c ****     }
 6018              		.loc 1 1294 0
 6019 0026 0E4B     		ldr	r3, .L407
 6020 0028 9860     		str	r0, [r3, #8]
 6021              	.LVL732:
 6022              	.L403:
1297:../user/source/DLT645.c ****     /*²ÎÊıÎŞĞ§£¬³õ´ÎÉÏµç*/
 6023              		.loc 1 1297 0
 6024 002a 1048     		ldr	r0, .L407+12
 6025 002c FFF7FEFF 		bl	Flash_Read_Word
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 170


 6026              	.LVL733:
1299:../user/source/DLT645.c ****     {
 6027              		.loc 1 1299 0
 6028 0030 B0F1FF3F 		cmp	r0, #-1
 6029 0034 10D1     		bne	.L404
1302:../user/source/DLT645.c ****         /*´æ´¢µçÁ÷ÉÏÏŞÖµ*/
 6030              		.loc 1 1302 0
 6031 0036 0A48     		ldr	r0, .L407
 6032              	.LVL734:
 6033 0038 4368     		ldr	r3, [r0, #4]
 6034 003a 8268     		ldr	r2, [r0, #8]
 6035 003c B3FBF2F2 		udiv	r2, r3, r2
 6036 0040 02EB4202 		add	r2, r2, r2, lsl #1
 6037 0044 D300     		lsls	r3, r2, #3
 6038 0046 0A49     		ldr	r1, .L407+16
 6039 0048 A1FB0331 		umull	r3, r1, r1, r3
 6040 004c C908     		lsrs	r1, r1, #3
 6041 004e C160     		str	r1, [r0, #12]
1304:../user/source/DLT645.c ****     }
 6042              		.loc 1 1304 0
 6043 0050 0648     		ldr	r0, .L407+12
 6044 0052 FFF7FEFF 		bl	Flash_Write_Word
 6045              	.LVL735:
 6046 0056 08BD     		pop	{r3, pc}
 6047              	.LVL736:
 6048              	.L404:
1309:../user/source/DLT645.c ****     }
 6049              		.loc 1 1309 0
 6050 0058 014B     		ldr	r3, .L407
 6051 005a D860     		str	r0, [r3, #12]
 6052 005c 08BD     		pop	{r3, pc}
 6053              	.L408:
 6054 005e 00BF     		.align	2
 6055              	.L407:
 6056 0060 00000000 		.word	TransFormer
 6057 0064 00650400 		.word	288000
 6058 0068 201F0308 		.word	134422304
 6059 006c 1C1F0308 		.word	134422300
 6060 0070 CDCCCCCC 		.word	-858993459
 6061              		.cfi_endproc
 6062              	.LFE132:
 6064              		.section	.text.vCurrentDirect_Modify,"ax",%progbits
 6065              		.align	2
 6066              		.global	vCurrentDirect_Modify
 6067              		.thumb
 6068              		.thumb_func
 6070              	vCurrentDirect_Modify:
 6071              	.LFB134:
1415:../user/source/DLT645.c ****     uint8_t i = 0;
 6072              		.loc 1 1415 0
 6073              		.cfi_startproc
 6074              		@ args = 0, pretend = 0, frame = 0
 6075              		@ frame_needed = 0, uses_anonymous_args = 0
 6076              		@ link register save eliminated.
 6077              	.LVL737:
1418:../user/source/DLT645.c ****     {
 6078              		.loc 1 1418 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 171


 6079 0000 C27A     		ldrb	r2, [r0, #11]	@ zero_extendqisi2
 6080 0002 323A     		subs	r2, r2, #50
 6081 0004 042A     		cmp	r2, #4
 6082 0006 55D8     		bhi	.L409
 6083 0008 DFE802F0 		tbb	[pc, r2]
 6084              	.L412:
 6085 000c 03       		.byte	(.L411-.L412)/2
 6086 000d 54       		.byte	(.L409-.L412)/2
 6087 000e 1F       		.byte	(.L413-.L412)/2
 6088 000f 31       		.byte	(.L414-.L412)/2
 6089 0010 43       		.byte	(.L415-.L412)/2
 6090 0011 00       		.p2align 1
 6091              	.L411:
1422:../user/source/DLT645.c ****         pucBuffer[19] = (pucBuffer[19] - 0x33) & 0xEF + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ»Æ
 6092              		.loc 1 1422 0
 6093 0012 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 6094 0014 333A     		subs	r2, r2, #51
 6095 0016 02F02202 		and	r2, r2, #34
 6096 001a 0274     		strb	r2, [r0, #16]
1423:../user/source/DLT645.c ****         pucBuffer[22] = (pucBuffer[22] - 0x33) & 0xEF + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ»Æ
 6097              		.loc 1 1423 0
 6098 001c C27C     		ldrb	r2, [r0, #19]	@ zero_extendqisi2
 6099 001e 333A     		subs	r2, r2, #51
 6100 0020 02F02202 		and	r2, r2, #34
 6101 0024 C274     		strb	r2, [r0, #19]
1424:../user/source/DLT645.c ****         for (i = 0; i < 23; i++)                              //Êı¾İÓò³¤¶È23
 6102              		.loc 1 1424 0
 6103 0026 827D     		ldrb	r2, [r0, #22]	@ zero_extendqisi2
 6104 0028 333A     		subs	r2, r2, #51
 6105 002a 02F02202 		and	r2, r2, #34
 6106 002e 8275     		strb	r2, [r0, #22]
1425:../user/source/DLT645.c ****         {
 6107              		.loc 1 1425 0
 6108 0030 0022     		movs	r2, #0
 6109 0032 04E0     		b	.L416
 6110              	.LVL738:
 6111              	.L417:
1427:../user/source/DLT645.c ****         }
 6112              		.loc 1 1427 0 discriminator 3
 6113 0034 815C     		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 6114 0036 0B44     		add	r3, r3, r1
 6115              	.LVL739:
 6116 0038 DBB2     		uxtb	r3, r3
 6117              	.LVL740:
1425:../user/source/DLT645.c ****         {
 6118              		.loc 1 1425 0 discriminator 3
 6119 003a 0132     		adds	r2, r2, #1
 6120              	.LVL741:
 6121 003c D2B2     		uxtb	r2, r2
 6122              	.LVL742:
 6123              	.L416:
1425:../user/source/DLT645.c ****         {
 6124              		.loc 1 1425 0 is_stmt 0 discriminator 1
 6125 003e 162A     		cmp	r2, #22
 6126 0040 F8D9     		bls	.L417
1429:../user/source/DLT645.c ****         pucBuffer[24] = 0x16;
 6127              		.loc 1 1429 0 is_stmt 1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 172


 6128 0042 C375     		strb	r3, [r0, #23]
1430:../user/source/DLT645.c ****         break;
 6129              		.loc 1 1430 0
 6130 0044 1623     		movs	r3, #22
 6131              	.LVL743:
 6132 0046 0376     		strb	r3, [r0, #24]
1431:../user/source/DLT645.c ****     }
 6133              		.loc 1 1431 0
 6134 0048 7047     		bx	lr
 6135              	.LVL744:
 6136              	.L413:
1435:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                              //Êı¾İÓò³¤¶È17
 6137              		.loc 1 1435 0
 6138 004a 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 6139 004c 333A     		subs	r2, r2, #51
 6140 004e 02F02202 		and	r2, r2, #34
 6141 0052 0274     		strb	r2, [r0, #16]
1436:../user/source/DLT645.c ****         {
 6142              		.loc 1 1436 0
 6143 0054 0022     		movs	r2, #0
 6144 0056 04E0     		b	.L418
 6145              	.LVL745:
 6146              	.L419:
1438:../user/source/DLT645.c ****         }
 6147              		.loc 1 1438 0 discriminator 3
 6148 0058 815C     		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 6149 005a 0B44     		add	r3, r3, r1
 6150              	.LVL746:
 6151 005c DBB2     		uxtb	r3, r3
 6152              	.LVL747:
1436:../user/source/DLT645.c ****         {
 6153              		.loc 1 1436 0 discriminator 3
 6154 005e 0132     		adds	r2, r2, #1
 6155              	.LVL748:
 6156 0060 D2B2     		uxtb	r2, r2
 6157              	.LVL749:
 6158              	.L418:
1436:../user/source/DLT645.c ****         {
 6159              		.loc 1 1436 0 is_stmt 0 discriminator 1
 6160 0062 102A     		cmp	r2, #16
 6161 0064 F8D9     		bls	.L419
1440:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
 6162              		.loc 1 1440 0 is_stmt 1
 6163 0066 4374     		strb	r3, [r0, #17]
1441:../user/source/DLT645.c ****         break;
 6164              		.loc 1 1441 0
 6165 0068 1623     		movs	r3, #22
 6166              	.LVL750:
 6167 006a 8374     		strb	r3, [r0, #18]
1442:../user/source/DLT645.c ****     }
 6168              		.loc 1 1442 0
 6169 006c 7047     		bx	lr
 6170              	.LVL751:
 6171              	.L414:
1446:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                              //Êı¾İÓò³¤¶È17
 6172              		.loc 1 1446 0
 6173 006e 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 173


 6174 0070 333A     		subs	r2, r2, #51
 6175 0072 02F02202 		and	r2, r2, #34
 6176 0076 0274     		strb	r2, [r0, #16]
1447:../user/source/DLT645.c ****         {
 6177              		.loc 1 1447 0
 6178 0078 0022     		movs	r2, #0
 6179 007a 04E0     		b	.L420
 6180              	.LVL752:
 6181              	.L421:
1449:../user/source/DLT645.c ****         }
 6182              		.loc 1 1449 0 discriminator 3
 6183 007c 815C     		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 6184 007e 0B44     		add	r3, r3, r1
 6185              	.LVL753:
 6186 0080 DBB2     		uxtb	r3, r3
 6187              	.LVL754:
1447:../user/source/DLT645.c ****         {
 6188              		.loc 1 1447 0 discriminator 3
 6189 0082 0132     		adds	r2, r2, #1
 6190              	.LVL755:
 6191 0084 D2B2     		uxtb	r2, r2
 6192              	.LVL756:
 6193              	.L420:
1447:../user/source/DLT645.c ****         {
 6194              		.loc 1 1447 0 is_stmt 0 discriminator 1
 6195 0086 102A     		cmp	r2, #16
 6196 0088 F8D9     		bls	.L421
1451:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
 6197              		.loc 1 1451 0 is_stmt 1
 6198 008a 4374     		strb	r3, [r0, #17]
1452:../user/source/DLT645.c ****         break;
 6199              		.loc 1 1452 0
 6200 008c 1623     		movs	r3, #22
 6201              	.LVL757:
 6202 008e 8374     		strb	r3, [r0, #18]
1453:../user/source/DLT645.c ****     }
 6203              		.loc 1 1453 0
 6204 0090 7047     		bx	lr
 6205              	.LVL758:
 6206              	.L415:
1457:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                              //Êı¾İÓò³¤¶È16
 6207              		.loc 1 1457 0
 6208 0092 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 6209 0094 333A     		subs	r2, r2, #51
 6210 0096 02F02202 		and	r2, r2, #34
 6211 009a 0274     		strb	r2, [r0, #16]
1458:../user/source/DLT645.c ****         {
 6212              		.loc 1 1458 0
 6213 009c 0022     		movs	r2, #0
 6214 009e 04E0     		b	.L422
 6215              	.LVL759:
 6216              	.L423:
1460:../user/source/DLT645.c ****         }
 6217              		.loc 1 1460 0 discriminator 3
 6218 00a0 815C     		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 6219 00a2 0B44     		add	r3, r3, r1
 6220              	.LVL760:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 174


 6221 00a4 DBB2     		uxtb	r3, r3
 6222              	.LVL761:
1458:../user/source/DLT645.c ****         {
 6223              		.loc 1 1458 0 discriminator 3
 6224 00a6 0132     		adds	r2, r2, #1
 6225              	.LVL762:
 6226 00a8 D2B2     		uxtb	r2, r2
 6227              	.LVL763:
 6228              	.L422:
1458:../user/source/DLT645.c ****         {
 6229              		.loc 1 1458 0 is_stmt 0 discriminator 1
 6230 00aa 102A     		cmp	r2, #16
 6231 00ac F8D9     		bls	.L423
1462:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
 6232              		.loc 1 1462 0 is_stmt 1
 6233 00ae 4374     		strb	r3, [r0, #17]
1463:../user/source/DLT645.c ****         break;
 6234              		.loc 1 1463 0
 6235 00b0 1623     		movs	r3, #22
 6236              	.LVL764:
 6237 00b2 8374     		strb	r3, [r0, #18]
 6238              	.LVL765:
 6239              	.L409:
 6240 00b4 7047     		bx	lr
 6241              		.cfi_endproc
 6242              	.LFE134:
 6244 00b6 00BF     		.section	.text.vCurrent_Count_Clear,"ax",%progbits
 6245              		.align	2
 6246              		.global	vCurrent_Count_Clear
 6247              		.thumb
 6248              		.thumb_func
 6250              	vCurrent_Count_Clear:
 6251              	.LFB140:
1725:../user/source/DLT645.c ****     Acurrent.count = 0;
 6252              		.loc 1 1725 0
 6253              		.cfi_startproc
 6254              		@ args = 0, pretend = 0, frame = 0
 6255              		@ frame_needed = 0, uses_anonymous_args = 0
 6256              		@ link register save eliminated.
1726:../user/source/DLT645.c ****     Bcurrent.count = 0;
 6257              		.loc 1 1726 0
 6258 0000 0023     		movs	r3, #0
 6259 0002 034A     		ldr	r2, .L425
 6260 0004 1371     		strb	r3, [r2, #4]
1727:../user/source/DLT645.c ****     Ccurrent.count = 0;
 6261              		.loc 1 1727 0
 6262 0006 034A     		ldr	r2, .L425+4
 6263 0008 1371     		strb	r3, [r2, #4]
1728:../user/source/DLT645.c **** }
 6264              		.loc 1 1728 0
 6265 000a 034A     		ldr	r2, .L425+8
 6266 000c 1371     		strb	r3, [r2, #4]
 6267 000e 7047     		bx	lr
 6268              	.L426:
 6269              		.align	2
 6270              	.L425:
 6271 0010 00000000 		.word	.LANCHOR1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 175


 6272 0014 00000000 		.word	.LANCHOR2
 6273 0018 00000000 		.word	.LANCHOR3
 6274              		.cfi_endproc
 6275              	.LFE140:
 6277              		.section	.text.vEnergy_Modify_Init,"ax",%progbits
 6278              		.align	2
 6279              		.global	vEnergy_Modify_Init
 6280              		.thumb
 6281              		.thumb_func
 6283              	vEnergy_Modify_Init:
 6284              	.LFB144:
1785:../user/source/DLT645.c ****     uint8_t tmp;
 6285              		.loc 1 1785 0
 6286              		.cfi_startproc
 6287              		@ args = 0, pretend = 0, frame = 0
 6288              		@ frame_needed = 0, uses_anonymous_args = 0
 6289 0000 08B5     		push	{r3, lr}
 6290              	.LCFI51:
 6291              		.cfi_def_cfa_offset 8
 6292              		.cfi_offset 3, -8
 6293              		.cfi_offset 14, -4
1788:../user/source/DLT645.c ****     tmp = EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR);
 6294              		.loc 1 1788 0
 6295 0002 0848     		ldr	r0, .L431
 6296 0004 FFF7FEFF 		bl	EEProm_Read
 6297              	.LVL766:
 6298 0008 074B     		ldr	r3, .L431+4
 6299 000a 1870     		strb	r0, [r3]
1789:../user/source/DLT645.c ****     /*ÅĞ¶ÏflashÖĞÊÇ·ñÒÑ´æ´¢µçÑ¹ĞŞ¸Ä±ÈÀı*/
 6300              		.loc 1 1789 0
 6301 000c 0748     		ldr	r0, .L431+8
 6302 000e FFF7FEFF 		bl	EEProm_Read
 6303              	.LVL767:
1791:../user/source/DLT645.c ****     {
 6304              		.loc 1 1791 0
 6305 0012 FF28     		cmp	r0, #255
 6306 0014 03D1     		bne	.L428
1794:../user/source/DLT645.c ****     }
 6307              		.loc 1 1794 0
 6308 0016 5A22     		movs	r2, #90
 6309 0018 054B     		ldr	r3, .L431+12
 6310 001a 1A70     		strb	r2, [r3]
 6311 001c 08BD     		pop	{r3, pc}
 6312              	.L428:
1798:../user/source/DLT645.c ****     }
 6313              		.loc 1 1798 0
 6314 001e 044B     		ldr	r3, .L431+12
 6315 0020 1870     		strb	r0, [r3]
 6316 0022 08BD     		pop	{r3, pc}
 6317              	.L432:
 6318              		.align	2
 6319              	.L431:
 6320 0024 181F0308 		.word	134422296
 6321 0028 00000000 		.word	.LANCHOR8
 6322 002c 101F0308 		.word	134422288
 6323 0030 00000000 		.word	ucDayfrozen_Modify_Ratio
 6324              		.cfi_endproc
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 176


 6325              	.LFE144:
 6327              		.global	__aeabi_uldivmod
 6328              		.section	.text.vNow_Frozen_Modify_Mothod,"ax",%progbits
 6329              		.align	2
 6330              		.global	vNow_Frozen_Modify_Mothod
 6331              		.thumb
 6332              		.thumb_func
 6334              	vNow_Frozen_Modify_Mothod:
 6335              	.LFB147:
1845:../user/source/DLT645.c ****     uint32_t RealValue;
 6336              		.loc 1 1845 0
 6337              		.cfi_startproc
 6338              		@ args = 0, pretend = 0, frame = 0
 6339              		@ frame_needed = 0, uses_anonymous_args = 0
 6340              	.LVL768:
 6341 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 6342              	.LCFI52:
 6343              		.cfi_def_cfa_offset 24
 6344              		.cfi_offset 4, -24
 6345              		.cfi_offset 5, -20
 6346              		.cfi_offset 6, -16
 6347              		.cfi_offset 7, -12
 6348              		.cfi_offset 8, -8
 6349              		.cfi_offset 14, -4
 6350 0004 0646     		mov	r6, r0
 6351 0006 8846     		mov	r8, r1
 6352 0008 1746     		mov	r7, r2
1850:../user/source/DLT645.c ****     Modified_Value = Flash_Read_Word(ModifiedValueAddr);
 6353              		.loc 1 1850 0
 6354 000a 0846     		mov	r0, r1
 6355              	.LVL769:
 6356 000c FFF7FEFF 		bl	Flash_Read_Word
 6357              	.LVL770:
 6358 0010 0546     		mov	r5, r0
 6359              	.LVL771:
1851:../user/source/DLT645.c ****     /*ÖÕ¶ËµÚÒ»´ÎÊ¹ÓÃ*/
 6360              		.loc 1 1851 0
 6361 0012 3846     		mov	r0, r7
 6362              	.LVL772:
 6363 0014 FFF7FEFF 		bl	Flash_Read_Word
 6364              	.LVL773:
1853:../user/source/DLT645.c ****     {
 6365              		.loc 1 1853 0
 6366 0018 B5F1FF3F 		cmp	r5, #-1
 6367 001c 03D0     		beq	.L434
 6368 001e 0446     		mov	r4, r0
1853:../user/source/DLT645.c ****     {
 6369              		.loc 1 1853 0 is_stmt 0 discriminator 1
 6370 0020 B0F1FF3F 		cmp	r0, #-1
 6371 0024 0AD1     		bne	.L435
 6372              	.L434:
1856:../user/source/DLT645.c ****         Flash_Write_Word(ModifiedValueAddr, nowenergy);
 6373              		.loc 1 1856 0 is_stmt 1
 6374 0026 3146     		mov	r1, r6
 6375 0028 4046     		mov	r0, r8
 6376              	.LVL774:
 6377 002a FFF7FEFF 		bl	Flash_Write_Word
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 177


 6378              	.LVL775:
1857:../user/source/DLT645.c ****         /*²»ĞŞ¸Ä*/
 6379              		.loc 1 1857 0
 6380 002e 3146     		mov	r1, r6
 6381 0030 3846     		mov	r0, r7
 6382 0032 FFF7FEFF 		bl	Flash_Write_Word
 6383              	.LVL776:
1859:../user/source/DLT645.c ****     }
 6384              		.loc 1 1859 0
 6385 0036 3046     		mov	r0, r6
 6386 0038 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6387              	.LVL777:
 6388              	.L435:
1865:../user/source/DLT645.c ****         {
 6389              		.loc 1 1865 0
 6390 003c B542     		cmp	r5, r6
 6391 003e 0ED9     		bls	.L437
1869:../user/source/DLT645.c ****         }
 6392              		.loc 1 1869 0
 6393 0040 751B     		subs	r5, r6, r5
 6394              	.LVL778:
 6395 0042 1748     		ldr	r0, .L441
 6396              	.LVL779:
 6397 0044 2844     		add	r0, r0, r5
 6398 0046 174B     		ldr	r3, .L441+4
 6399 0048 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6400 004a A2FB0001 		umull	r0, r1, r2, r0
 6401 004e 6422     		movs	r2, #100
 6402 0050 0023     		movs	r3, #0
 6403 0052 3230     		adds	r0, r0, #50
 6404 0054 41F10001 		adc	r1, r1, #0
 6405 0058 FFF7FEFF 		bl	__aeabi_uldivmod
 6406              	.LVL780:
 6407 005c 0BE0     		b	.L438
 6408              	.LVL781:
 6409              	.L437:
1873:../user/source/DLT645.c ****         }
 6410              		.loc 1 1873 0
 6411 005e 751B     		subs	r5, r6, r5
 6412              	.LVL782:
 6413 0060 104B     		ldr	r3, .L441+4
 6414 0062 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6415              	.LVL783:
 6416 0064 A0FB0501 		umull	r0, r1, r0, r5
 6417 0068 6422     		movs	r2, #100
 6418 006a 0023     		movs	r3, #0
 6419 006c 3230     		adds	r0, r0, #50
 6420 006e 41F10001 		adc	r1, r1, #0
 6421 0072 FFF7FEFF 		bl	__aeabi_uldivmod
 6422              	.LVL784:
 6423              	.L438:
1875:../user/source/DLT645.c ****         /*ÀÛ¼ÆÖµÒç³öºó¹éÁã*/
 6424              		.loc 1 1875 0
 6425 0076 0444     		add	r4, r4, r0
 6426              	.LVL785:
1877:../user/source/DLT645.c ****         /*½«ÉÏËÍÖµ´æ´¢ÎªÕæÊµÖµ*/
 6427              		.loc 1 1877 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 178


 6428 0078 094B     		ldr	r3, .L441
 6429 007a 9C42     		cmp	r4, r3
 6430 007c 05D9     		bls	.L439
1877:../user/source/DLT645.c ****         /*½«ÉÏËÍÖµ´æ´¢ÎªÕæÊµÖµ*/
 6431              		.loc 1 1877 0 is_stmt 0 discriminator 1
 6432 007e 04F17A44 		add	r4, r4, #-100663296
 6433              	.LVL786:
 6434 0082 04F52124 		add	r4, r4, #659456
 6435              	.LVL787:
 6436 0086 04F60174 		addw	r4, r4, #3841
 6437              	.LVL788:
 6438              	.L439:
1879:../user/source/DLT645.c ****         /*ĞÂµÄĞŞ¸ÄÖµ¸²¸Ç¾ÉÖµ´æ´¢*/
 6439              		.loc 1 1879 0 is_stmt 1 discriminator 4
 6440 008a 3146     		mov	r1, r6
 6441 008c 4046     		mov	r0, r8
 6442 008e FFF7FEFF 		bl	Flash_Write_Word
 6443              	.LVL789:
1881:../user/source/DLT645.c ****         /*·µ»ØĞŞ¸ÄÖµ*/
 6444              		.loc 1 1881 0 discriminator 4
 6445 0092 2146     		mov	r1, r4
 6446 0094 3846     		mov	r0, r7
 6447 0096 FFF7FEFF 		bl	Flash_Write_Word
 6448              	.LVL790:
1883:../user/source/DLT645.c ****     }
 6449              		.loc 1 1883 0 discriminator 4
 6450 009a 2046     		mov	r0, r4
1885:../user/source/DLT645.c **** 
 6451              		.loc 1 1885 0 discriminator 4
 6452 009c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6453              	.LVL791:
 6454              	.L442:
 6455              		.align	2
 6456              	.L441:
 6457 00a0 FFE0F505 		.word	99999999
 6458 00a4 00000000 		.word	ucDayfrozen_Modify_Ratio
 6459              		.cfi_endproc
 6460              	.LFE147:
 6462              		.section	.text.vNowEnergy_Modifier,"ax",%progbits
 6463              		.align	2
 6464              		.global	vNowEnergy_Modifier
 6465              		.thumb
 6466              		.thumb_func
 6468              	vNowEnergy_Modifier:
 6469              	.LFB148:
1904:../user/source/DLT645.c ****     uint16_t i;
 6470              		.loc 1 1904 0
 6471              		.cfi_startproc
 6472              		@ args = 0, pretend = 0, frame = 0
 6473              		@ frame_needed = 0, uses_anonymous_args = 0
 6474              	.LVL792:
1911:../user/source/DLT645.c ****         return;
 6475              		.loc 1 1911 0
 6476 0000 834B     		ldr	r3, .L466
 6477 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6478 0004 002B     		cmp	r3, #0
 6479 0006 00F00181 		beq	.L465
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 179


1904:../user/source/DLT645.c ****     uint16_t i;
 6480              		.loc 1 1904 0
 6481 000a 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 6482              	.LCFI53:
 6483              		.cfi_def_cfa_offset 28
 6484              		.cfi_offset 4, -28
 6485              		.cfi_offset 5, -24
 6486              		.cfi_offset 6, -20
 6487              		.cfi_offset 7, -16
 6488              		.cfi_offset 8, -12
 6489              		.cfi_offset 9, -8
 6490              		.cfi_offset 14, -4
 6491 000e 83B0     		sub	sp, sp, #12
 6492              	.LCFI54:
 6493              		.cfi_def_cfa_offset 40
 6494 0010 0446     		mov	r4, r0
1913:../user/source/DLT645.c ****     switch (pucBuffer[11])
 6495              		.loc 1 1913 0
 6496 0012 437C     		ldrb	r3, [r0, #17]	@ zero_extendqisi2
 6497 0014 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 6498 0016 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 6499 0018 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 6500              	.LVL793:
 6501 001a FFF7FEFF 		bl	Get_Energy
 6502              	.LVL794:
 6503 001e 0546     		mov	r5, r0
 6504              	.LVL795:
1914:../user/source/DLT645.c ****     {
 6505              		.loc 1 1914 0
 6506 0020 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 6507 0022 323B     		subs	r3, r3, #50
 6508 0024 052B     		cmp	r3, #5
 6509 0026 00F28180 		bhi	.L445
 6510 002a DFE803F0 		tbb	[pc, r3]
 6511              	.L447:
 6512 002e 3F       		.byte	(.L446-.L447)/2
 6513 002f 03       		.byte	(.L448-.L447)/2
 6514 0030 27       		.byte	(.L449-.L447)/2
 6515 0031 2D       		.byte	(.L450-.L447)/2
 6516 0032 33       		.byte	(.L451-.L447)/2
 6517 0033 39       		.byte	(.L452-.L447)/2
 6518              		.p2align 1
 6519              	.L448:
1918:../user/source/DLT645.c ****         {
 6520              		.loc 1 1918 0
 6521 0034 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 6522 0036 482B     		cmp	r3, #72
 6523 0038 0ED0     		beq	.L453
 6524 003a 02D8     		bhi	.L454
 6525 003c 342B     		cmp	r3, #52
 6526 003e 05D0     		beq	.L455
 6527 0040 74E0     		b	.L445
 6528              	.L454:
 6529 0042 5C2B     		cmp	r3, #92
 6530 0044 0ED0     		beq	.L456
 6531 0046 702B     		cmp	r3, #112
 6532 0048 12D0     		beq	.L457
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 180


 6533 004a 6FE0     		b	.L445
 6534              	.L455:
1923:../user/source/DLT645.c ****                                                FLASH_MODIFIED_ALL_NOWENERGY_ADDR);
 6535              		.loc 1 1923 0
 6536 004c 714A     		ldr	r2, .L466+4
 6537 004e 7249     		ldr	r1, .L466+8
 6538 0050 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6539              	.LVL796:
 6540 0054 0546     		mov	r5, r0
 6541              	.LVL797:
1925:../user/source/DLT645.c ****         }
 6542              		.loc 1 1925 0
 6543 0056 69E0     		b	.L445
 6544              	.L453:
1930:../user/source/DLT645.c ****                                                FLASH_MODIFIED_A_NOWENERGY_ADDR);
 6545              		.loc 1 1930 0
 6546 0058 704A     		ldr	r2, .L466+12
 6547 005a 7149     		ldr	r1, .L466+16
 6548 005c FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6549              	.LVL798:
 6550 0060 0546     		mov	r5, r0
 6551              	.LVL799:
1932:../user/source/DLT645.c ****         }
 6552              		.loc 1 1932 0
 6553 0062 63E0     		b	.L445
 6554              	.L456:
1937:../user/source/DLT645.c ****                                                FLASH_MODIFIED_B_NOWENERGY_ADDR);
 6555              		.loc 1 1937 0
 6556 0064 6F4A     		ldr	r2, .L466+20
 6557 0066 7049     		ldr	r1, .L466+24
 6558 0068 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6559              	.LVL800:
 6560 006c 0546     		mov	r5, r0
 6561              	.LVL801:
1939:../user/source/DLT645.c ****         }
 6562              		.loc 1 1939 0
 6563 006e 5DE0     		b	.L445
 6564              	.L457:
1944:../user/source/DLT645.c ****                                                FLASH_MODIFIED_C_NOWENERGY_ADDR);
 6565              		.loc 1 1944 0
 6566 0070 6E4A     		ldr	r2, .L466+28
 6567 0072 6F49     		ldr	r1, .L466+32
 6568 0074 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6569              	.LVL802:
 6570 0078 0546     		mov	r5, r0
 6571              	.LVL803:
1946:../user/source/DLT645.c ****         }
 6572              		.loc 1 1946 0
 6573 007a 57E0     		b	.L445
 6574              	.L449:
1956:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F1_NOWENERGY_ADDR);
 6575              		.loc 1 1956 0
 6576 007c 6D4A     		ldr	r2, .L466+36
 6577 007e 6E49     		ldr	r1, .L466+40
 6578 0080 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6579              	.LVL804:
 6580 0084 0546     		mov	r5, r0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 181


 6581              	.LVL805:
1958:../user/source/DLT645.c ****     }
 6582              		.loc 1 1958 0
 6583 0086 51E0     		b	.L445
 6584              	.L450:
1963:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F2_NOWENERGY_ADDR);
 6585              		.loc 1 1963 0
 6586 0088 6C4A     		ldr	r2, .L466+44
 6587 008a 6D49     		ldr	r1, .L466+48
 6588 008c FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6589              	.LVL806:
 6590 0090 0546     		mov	r5, r0
 6591              	.LVL807:
1965:../user/source/DLT645.c ****     }
 6592              		.loc 1 1965 0
 6593 0092 4BE0     		b	.L445
 6594              	.L451:
1970:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F3_NOWENERGY_ADDR);
 6595              		.loc 1 1970 0
 6596 0094 6B4A     		ldr	r2, .L466+52
 6597 0096 6C49     		ldr	r1, .L466+56
 6598 0098 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6599              	.LVL808:
 6600 009c 0546     		mov	r5, r0
 6601              	.LVL809:
1972:../user/source/DLT645.c ****     }
 6602              		.loc 1 1972 0
 6603 009e 45E0     		b	.L445
 6604              	.L452:
1977:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F4_NOWENERGY_ADDR);
 6605              		.loc 1 1977 0
 6606 00a0 6A4A     		ldr	r2, .L466+60
 6607 00a2 6B49     		ldr	r1, .L466+64
 6608 00a4 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6609              	.LVL810:
 6610 00a8 0546     		mov	r5, r0
 6611              	.LVL811:
1979:../user/source/DLT645.c ****     }
 6612              		.loc 1 1979 0
 6613 00aa 3FE0     		b	.L445
 6614              	.L446:
1989:../user/source/DLT645.c ****         energy_F1 = vNow_Frozen_Modify_Mothod(energy_F1, FLASH_REAL_F1_NOWENERGY_ADDR,
 6615              		.loc 1 1989 0
 6616 00ac 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 6617 00ae 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 6618 00b0 E17C     		ldrb	r1, [r4, #19]	@ zero_extendqisi2
 6619 00b2 A07C     		ldrb	r0, [r4, #18]	@ zero_extendqisi2
 6620              	.LVL812:
 6621 00b4 FFF7FEFF 		bl	Get_Energy
 6622              	.LVL813:
1990:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F1_NOWENERGY_ADDR);
 6623              		.loc 1 1990 0
 6624 00b8 5E4A     		ldr	r2, .L466+36
 6625 00ba 5F49     		ldr	r1, .L466+40
 6626 00bc FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6627              	.LVL814:
 6628 00c0 8146     		mov	r9, r0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 182


 6629              	.LVL815:
1992:../user/source/DLT645.c ****         energy_F2 = vNow_Frozen_Modify_Mothod(energy_F2, FLASH_REAL_F2_NOWENERGY_ADDR,
 6630              		.loc 1 1992 0
 6631 00c2 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 6632 00c4 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 6633 00c6 E17D     		ldrb	r1, [r4, #23]	@ zero_extendqisi2
 6634 00c8 A07D     		ldrb	r0, [r4, #22]	@ zero_extendqisi2
 6635              	.LVL816:
 6636 00ca FFF7FEFF 		bl	Get_Energy
 6637              	.LVL817:
1993:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F2_NOWENERGY_ADDR);
 6638              		.loc 1 1993 0
 6639 00ce 5B4A     		ldr	r2, .L466+44
 6640 00d0 5B49     		ldr	r1, .L466+48
 6641 00d2 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6642              	.LVL818:
 6643 00d6 8046     		mov	r8, r0
 6644              	.LVL819:
1995:../user/source/DLT645.c ****         energy_F3 = vNow_Frozen_Modify_Mothod(energy_F3, FLASH_REAL_F3_NOWENERGY_ADDR,
 6645              		.loc 1 1995 0
 6646 00d8 637F     		ldrb	r3, [r4, #29]	@ zero_extendqisi2
 6647 00da 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 6648 00dc E17E     		ldrb	r1, [r4, #27]	@ zero_extendqisi2
 6649 00de A07E     		ldrb	r0, [r4, #26]	@ zero_extendqisi2
 6650              	.LVL820:
 6651 00e0 FFF7FEFF 		bl	Get_Energy
 6652              	.LVL821:
1996:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F3_NOWENERGY_ADDR);
 6653              		.loc 1 1996 0
 6654 00e4 574A     		ldr	r2, .L466+52
 6655 00e6 5849     		ldr	r1, .L466+56
 6656 00e8 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6657              	.LVL822:
 6658 00ec 0746     		mov	r7, r0
 6659              	.LVL823:
1999:../user/source/DLT645.c ****         energy_F4 = vNow_Frozen_Modify_Mothod(energy_F4, FLASH_REAL_F4_NOWENERGY_ADDR,
 6660              		.loc 1 1999 0
 6661 00ee 94F82130 		ldrb	r3, [r4, #33]	@ zero_extendqisi2
 6662 00f2 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 6663 00f6 E17F     		ldrb	r1, [r4, #31]	@ zero_extendqisi2
 6664 00f8 A07F     		ldrb	r0, [r4, #30]	@ zero_extendqisi2
 6665              	.LVL824:
 6666 00fa FFF7FEFF 		bl	Get_Energy
 6667              	.LVL825:
2000:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F4_NOWENERGY_ADDR);
 6668              		.loc 1 2000 0
 6669 00fe 534A     		ldr	r2, .L466+60
 6670 0100 5349     		ldr	r1, .L466+64
 6671 0102 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6672              	.LVL826:
 6673 0106 0646     		mov	r6, r0
 6674              	.LVL827:
2003:../user/source/DLT645.c ****         /*±£´æ×ÜµçÁ¿ÕæÊµÖµ£¬µ¥³­×ÜµçÁ¿Ê±Ê¹ÓÃ*/
 6675              		.loc 1 2003 0
 6676 0108 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 6677 010a 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 6678 010c E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 183


 6679 010e A07B     		ldrb	r0, [r4, #14]	@ zero_extendqisi2
 6680              	.LVL828:
 6681 0110 FFF7FEFF 		bl	Get_Energy
 6682              	.LVL829:
2005:../user/source/DLT645.c ****         /*¸ù¾İ·Ö·ÑÂÊµçÁ¿¼ÆËãĞŞ¸ÄºóµÄ×ÜµçÁ¿*/
 6683              		.loc 1 2005 0
 6684 0114 0146     		mov	r1, r0
 6685 0116 4048     		ldr	r0, .L466+8
 6686              	.LVL830:
 6687 0118 FFF7FEFF 		bl	Flash_Write_Word
 6688              	.LVL831:
2007:../user/source/DLT645.c ****         /*±£´æĞŞ¸ÄÖµ£¬µ¥³­×ÜµçÁ¿Ê±Ê¹ÓÃ*/
 6689              		.loc 1 2007 0
 6690 011c 09EB0805 		add	r5, r9, r8
 6691 0120 3D44     		add	r5, r5, r7
 6692 0122 3544     		add	r5, r5, r6
 6693              	.LVL832:
2009:../user/source/DLT645.c ****         break;
 6694              		.loc 1 2009 0
 6695 0124 2946     		mov	r1, r5
 6696 0126 3B48     		ldr	r0, .L466+4
 6697 0128 FFF7FEFF 		bl	Flash_Write_Word
 6698              	.LVL833:
 6699              	.L445:
2015:../user/source/DLT645.c ****     {
 6700              		.loc 1 2015 0
 6701 012c E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 6702 012e 322B     		cmp	r3, #50
 6703 0130 1CD0     		beq	.L458
 6704 0132 68D3     		bcc	.L443
 6705 0134 372B     		cmp	r3, #55
 6706 0136 66D8     		bhi	.L443
2024:../user/source/DLT645.c ****         pucBuffer[18] = 0;
 6707              		.loc 1 2024 0
 6708 0138 04F11103 		add	r3, r4, #17
 6709 013c 0093     		str	r3, [sp]
 6710 013e 04F11003 		add	r3, r4, #16
 6711 0142 04F10F02 		add	r2, r4, #15
 6712 0146 04F10E01 		add	r1, r4, #14
 6713 014a 2846     		mov	r0, r5
 6714 014c FFF7FEFF 		bl	Fill_Energy
 6715              	.LVL834:
2025:../user/source/DLT645.c ****         for (i = 0; i < 18; i++)
 6716              		.loc 1 2025 0
 6717 0150 0023     		movs	r3, #0
 6718 0152 A374     		strb	r3, [r4, #18]
 6719              	.LVL835:
2026:../user/source/DLT645.c ****         {
 6720              		.loc 1 2026 0
 6721 0154 05E0     		b	.L460
 6722              	.LVL836:
 6723              	.L461:
2028:../user/source/DLT645.c ****         }
 6724              		.loc 1 2028 0 discriminator 3
 6725 0156 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 6726 0158 A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 6727 015a 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 184


 6728 015c A274     		strb	r2, [r4, #18]
2026:../user/source/DLT645.c ****         {
 6729              		.loc 1 2026 0 discriminator 3
 6730 015e 0133     		adds	r3, r3, #1
 6731              	.LVL837:
 6732 0160 9BB2     		uxth	r3, r3
 6733              	.LVL838:
 6734              	.L460:
2026:../user/source/DLT645.c ****         {
 6735              		.loc 1 2026 0 is_stmt 0 discriminator 1
 6736 0162 112B     		cmp	r3, #17
 6737 0164 F7D9     		bls	.L461
2030:../user/source/DLT645.c ****         break;
 6738              		.loc 1 2030 0 is_stmt 1
 6739 0166 1623     		movs	r3, #22
 6740              	.LVL839:
 6741 0168 E374     		strb	r3, [r4, #19]
2031:../user/source/DLT645.c ****     }
 6742              		.loc 1 2031 0
 6743 016a 4CE0     		b	.L443
 6744              	.L458:
2037:../user/source/DLT645.c ****         /*¼â*/
 6745              		.loc 1 2037 0
 6746 016c 04F11103 		add	r3, r4, #17
 6747 0170 0093     		str	r3, [sp]
 6748 0172 04F11003 		add	r3, r4, #16
 6749 0176 04F10F02 		add	r2, r4, #15
 6750 017a 04F10E01 		add	r1, r4, #14
 6751 017e 2846     		mov	r0, r5
 6752 0180 FFF7FEFF 		bl	Fill_Energy
 6753              	.LVL840:
2039:../user/source/DLT645.c ****         /*·å*/
 6754              		.loc 1 2039 0
 6755 0184 04F11503 		add	r3, r4, #21
 6756 0188 0093     		str	r3, [sp]
 6757 018a 04F11403 		add	r3, r4, #20
 6758 018e 04F11302 		add	r2, r4, #19
 6759 0192 04F11201 		add	r1, r4, #18
 6760 0196 4846     		mov	r0, r9
 6761 0198 FFF7FEFF 		bl	Fill_Energy
 6762              	.LVL841:
2041:../user/source/DLT645.c ****         /*Æ½*/
 6763              		.loc 1 2041 0
 6764 019c 04F11903 		add	r3, r4, #25
 6765 01a0 0093     		str	r3, [sp]
 6766 01a2 04F11803 		add	r3, r4, #24
 6767 01a6 04F11702 		add	r2, r4, #23
 6768 01aa 04F11601 		add	r1, r4, #22
 6769 01ae 4046     		mov	r0, r8
 6770 01b0 FFF7FEFF 		bl	Fill_Energy
 6771              	.LVL842:
2043:../user/source/DLT645.c ****         /*¹È*/
 6772              		.loc 1 2043 0
 6773 01b4 04F11D03 		add	r3, r4, #29
 6774 01b8 0093     		str	r3, [sp]
 6775 01ba 04F11C03 		add	r3, r4, #28
 6776 01be 04F11B02 		add	r2, r4, #27
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 185


 6777 01c2 04F11A01 		add	r1, r4, #26
 6778 01c6 3846     		mov	r0, r7
 6779 01c8 FFF7FEFF 		bl	Fill_Energy
 6780              	.LVL843:
2045:../user/source/DLT645.c ****         pucBuffer[34] = 0;
 6781              		.loc 1 2045 0
 6782 01cc 04F12103 		add	r3, r4, #33
 6783 01d0 0093     		str	r3, [sp]
 6784 01d2 04F12003 		add	r3, r4, #32
 6785 01d6 04F11F02 		add	r2, r4, #31
 6786 01da 04F11E01 		add	r1, r4, #30
 6787 01de 3046     		mov	r0, r6
 6788 01e0 FFF7FEFF 		bl	Fill_Energy
 6789              	.LVL844:
2046:../user/source/DLT645.c ****         for (i = 0; i < 34; i++)
 6790              		.loc 1 2046 0
 6791 01e4 0023     		movs	r3, #0
 6792 01e6 84F82230 		strb	r3, [r4, #34]
 6793              	.LVL845:
2047:../user/source/DLT645.c ****         {
 6794              		.loc 1 2047 0
 6795 01ea 07E0     		b	.L462
 6796              	.LVL846:
 6797              	.L463:
2049:../user/source/DLT645.c ****         }
 6798              		.loc 1 2049 0 discriminator 3
 6799 01ec E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 6800 01ee 94F82220 		ldrb	r2, [r4, #34]	@ zero_extendqisi2
 6801 01f2 0A44     		add	r2, r2, r1
 6802 01f4 84F82220 		strb	r2, [r4, #34]
2047:../user/source/DLT645.c ****         {
 6803              		.loc 1 2047 0 discriminator 3
 6804 01f8 0133     		adds	r3, r3, #1
 6805              	.LVL847:
 6806 01fa 9BB2     		uxth	r3, r3
 6807              	.LVL848:
 6808              	.L462:
2047:../user/source/DLT645.c ****         {
 6809              		.loc 1 2047 0 is_stmt 0 discriminator 1
 6810 01fc 212B     		cmp	r3, #33
 6811 01fe F5D9     		bls	.L463
2051:../user/source/DLT645.c ****         break;
 6812              		.loc 1 2051 0 is_stmt 1
 6813 0200 1623     		movs	r3, #22
 6814              	.LVL849:
 6815 0202 84F82330 		strb	r3, [r4, #35]
 6816              	.L443:
2057:../user/source/DLT645.c **** 
 6817              		.loc 1 2057 0
 6818 0206 03B0     		add	sp, sp, #12
 6819              	.LCFI55:
 6820              		.cfi_def_cfa_offset 28
 6821              		@ sp needed
 6822 0208 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 6823              	.LVL850:
 6824              	.L465:
 6825              	.LCFI56:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 186


 6826              		.cfi_def_cfa_offset 0
 6827              		.cfi_restore 4
 6828              		.cfi_restore 5
 6829              		.cfi_restore 6
 6830              		.cfi_restore 7
 6831              		.cfi_restore 8
 6832              		.cfi_restore 9
 6833              		.cfi_restore 14
 6834 020c 7047     		bx	lr
 6835              	.L467:
 6836 020e 00BF     		.align	2
 6837              	.L466:
 6838 0210 00000000 		.word	.LANCHOR8
 6839 0214 74200308 		.word	134422644
 6840 0218 70200308 		.word	134422640
 6841 021c 9C200308 		.word	134422684
 6842 0220 98200308 		.word	134422680
 6843 0224 A4200308 		.word	134422692
 6844 0228 A0200308 		.word	134422688
 6845 022c AC200308 		.word	134422700
 6846 0230 A8200308 		.word	134422696
 6847 0234 7C200308 		.word	134422652
 6848 0238 78200308 		.word	134422648
 6849 023c 84200308 		.word	134422660
 6850 0240 80200308 		.word	134422656
 6851 0244 8C200308 		.word	134422668
 6852 0248 88200308 		.word	134422664
 6853 024c 94200308 		.word	134422676
 6854 0250 90200308 		.word	134422672
 6855              		.cfi_endproc
 6856              	.LFE148:
 6858              		.section	.text.vDayfrozen_Modifier,"ax",%progbits
 6859              		.align	2
 6860              		.global	vDayfrozen_Modifier
 6861              		.thumb
 6862              		.thumb_func
 6864              	vDayfrozen_Modifier:
 6865              	.LFB149:
2076:../user/source/DLT645.c ****     uint32_t energy, energy_F1, energy_F2, energy_F3, energy_F4;
 6866              		.loc 1 2076 0
 6867              		.cfi_startproc
 6868              		@ args = 0, pretend = 0, frame = 0
 6869              		@ frame_needed = 0, uses_anonymous_args = 0
 6870              	.LVL851:
2080:../user/source/DLT645.c ****         return;
 6871              		.loc 1 2080 0
 6872 0000 4A4B     		ldr	r3, .L474
 6873 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6874 0004 002B     		cmp	r3, #0
 6875 0006 00F08F80 		beq	.L473
2076:../user/source/DLT645.c ****     uint32_t energy, energy_F1, energy_F2, energy_F3, energy_F4;
 6876              		.loc 1 2076 0
 6877 000a 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 6878              	.LCFI57:
 6879              		.cfi_def_cfa_offset 24
 6880              		.cfi_offset 4, -24
 6881              		.cfi_offset 5, -20
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 187


 6882              		.cfi_offset 6, -16
 6883              		.cfi_offset 7, -12
 6884              		.cfi_offset 8, -8
 6885              		.cfi_offset 14, -4
 6886 000e 82B0     		sub	sp, sp, #8
 6887              	.LCFI58:
 6888              		.cfi_def_cfa_offset 32
 6889 0010 0446     		mov	r4, r0
2092:../user/source/DLT645.c ****     energy_F1 = vNow_Frozen_Modify_Mothod(energy_F1, FLASH_REAL_1DAYFROZEN_ADDR + 4, FLASH_MODIFIED
 6890              		.loc 1 2092 0
 6891 0012 437D     		ldrb	r3, [r0, #21]	@ zero_extendqisi2
 6892 0014 027D     		ldrb	r2, [r0, #20]	@ zero_extendqisi2
 6893 0016 C17C     		ldrb	r1, [r0, #19]	@ zero_extendqisi2
 6894 0018 807C     		ldrb	r0, [r0, #18]	@ zero_extendqisi2
 6895              	.LVL852:
 6896 001a FFF7FEFF 		bl	Get_Energy
 6897              	.LVL853:
2093:../user/source/DLT645.c ****     Fill_Energy(energy_F1, &pucBuffer[18], &pucBuffer[19], &pucBuffer[20], &pucBuffer[21]);
 6898              		.loc 1 2093 0
 6899 001e 444A     		ldr	r2, .L474+4
 6900 0020 4449     		ldr	r1, .L474+8
 6901 0022 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6902              	.LVL854:
 6903 0026 8046     		mov	r8, r0
 6904              	.LVL855:
2094:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦·å·ÑÂÊµçÁ¿*/
 6905              		.loc 1 2094 0
 6906 0028 04F11503 		add	r3, r4, #21
 6907 002c 0093     		str	r3, [sp]
 6908 002e 04F11403 		add	r3, r4, #20
 6909 0032 04F11302 		add	r2, r4, #19
 6910 0036 04F11201 		add	r1, r4, #18
 6911 003a FFF7FEFF 		bl	Fill_Energy
 6912              	.LVL856:
2096:../user/source/DLT645.c ****     energy_F2 = vNow_Frozen_Modify_Mothod(energy_F2, FLASH_REAL_1DAYFROZEN_ADDR + 8, FLASH_MODIFIED
 6913              		.loc 1 2096 0
 6914 003e 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 6915 0040 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 6916 0042 E17D     		ldrb	r1, [r4, #23]	@ zero_extendqisi2
 6917 0044 A07D     		ldrb	r0, [r4, #22]	@ zero_extendqisi2
 6918 0046 FFF7FEFF 		bl	Get_Energy
 6919              	.LVL857:
2097:../user/source/DLT645.c ****     Fill_Energy(energy_F2, &pucBuffer[22], &pucBuffer[23], &pucBuffer[24], &pucBuffer[25]);
 6920              		.loc 1 2097 0
 6921 004a 3B4A     		ldr	r2, .L474+12
 6922 004c 3B49     		ldr	r1, .L474+16
 6923 004e FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6924              	.LVL858:
 6925 0052 0646     		mov	r6, r0
 6926              	.LVL859:
2098:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦Æ½·ÑÂÊµçÁ¿*/
 6927              		.loc 1 2098 0
 6928 0054 04F11903 		add	r3, r4, #25
 6929 0058 0093     		str	r3, [sp]
 6930 005a 04F11803 		add	r3, r4, #24
 6931 005e 04F11702 		add	r2, r4, #23
 6932 0062 04F11601 		add	r1, r4, #22
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 188


 6933 0066 FFF7FEFF 		bl	Fill_Energy
 6934              	.LVL860:
2100:../user/source/DLT645.c ****     energy_F3 = vNow_Frozen_Modify_Mothod(energy_F3, FLASH_REAL_1DAYFROZEN_ADDR + 12, FLASH_MODIFIE
 6935              		.loc 1 2100 0
 6936 006a 637F     		ldrb	r3, [r4, #29]	@ zero_extendqisi2
 6937 006c 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 6938 006e E17E     		ldrb	r1, [r4, #27]	@ zero_extendqisi2
 6939 0070 A07E     		ldrb	r0, [r4, #26]	@ zero_extendqisi2
 6940 0072 FFF7FEFF 		bl	Get_Energy
 6941              	.LVL861:
2101:../user/source/DLT645.c ****     Fill_Energy(energy_F3, &pucBuffer[26], &pucBuffer[27], &pucBuffer[28], &pucBuffer[29]);
 6942              		.loc 1 2101 0
 6943 0076 324A     		ldr	r2, .L474+20
 6944 0078 3249     		ldr	r1, .L474+24
 6945 007a FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6946              	.LVL862:
 6947 007e 0546     		mov	r5, r0
 6948              	.LVL863:
2102:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦¹È·ÑÂÊµçÁ¿*/
 6949              		.loc 1 2102 0
 6950 0080 04F11D03 		add	r3, r4, #29
 6951 0084 0093     		str	r3, [sp]
 6952 0086 04F11C03 		add	r3, r4, #28
 6953 008a 04F11B02 		add	r2, r4, #27
 6954 008e 04F11A01 		add	r1, r4, #26
 6955 0092 FFF7FEFF 		bl	Fill_Energy
 6956              	.LVL864:
2104:../user/source/DLT645.c ****     energy_F4 = vNow_Frozen_Modify_Mothod(energy_F4, FLASH_REAL_1DAYFROZEN_ADDR + 16, FLASH_MODIFIE
 6957              		.loc 1 2104 0
 6958 0096 94F82130 		ldrb	r3, [r4, #33]	@ zero_extendqisi2
 6959 009a 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 6960 009e E17F     		ldrb	r1, [r4, #31]	@ zero_extendqisi2
 6961 00a0 A07F     		ldrb	r0, [r4, #30]	@ zero_extendqisi2
 6962 00a2 FFF7FEFF 		bl	Get_Energy
 6963              	.LVL865:
2105:../user/source/DLT645.c ****     Fill_Energy(energy_F4, &pucBuffer[30], &pucBuffer[31], &pucBuffer[32], &pucBuffer[33]);
 6964              		.loc 1 2105 0
 6965 00a6 284A     		ldr	r2, .L474+28
 6966 00a8 2849     		ldr	r1, .L474+32
 6967 00aa FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6968              	.LVL866:
 6969 00ae 0746     		mov	r7, r0
 6970              	.LVL867:
2106:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×ÜµçÁ¿*/
 6971              		.loc 1 2106 0
 6972 00b0 04F12103 		add	r3, r4, #33
 6973 00b4 0093     		str	r3, [sp]
 6974 00b6 04F12003 		add	r3, r4, #32
 6975 00ba 04F11F02 		add	r2, r4, #31
 6976 00be 04F11E01 		add	r1, r4, #30
 6977 00c2 FFF7FEFF 		bl	Fill_Energy
 6978              	.LVL868:
2109:../user/source/DLT645.c ****     /*´æ´¢ÕæÊµÖµ*/
 6979              		.loc 1 2109 0
 6980 00c6 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 6981 00c8 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 6982 00ca E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 189


 6983 00cc A07B     		ldrb	r0, [r4, #14]	@ zero_extendqisi2
 6984 00ce FFF7FEFF 		bl	Get_Energy
 6985              	.LVL869:
2111:../user/source/DLT645.c ****     /*¼ÆËãĞŞ¸ÄºóµÄÖµ*/
 6986              		.loc 1 2111 0
 6987 00d2 0146     		mov	r1, r0
 6988 00d4 1E48     		ldr	r0, .L474+36
 6989              	.LVL870:
 6990 00d6 FFF7FEFF 		bl	Flash_Write_Word
 6991              	.LVL871:
2113:../user/source/DLT645.c ****     /*´æ´¢ĞŞ¸ÄºóµÄÖµ*/
 6992              		.loc 1 2113 0
 6993 00da 4644     		add	r6, r6, r8
 6994              	.LVL872:
 6995 00dc 2E44     		add	r6, r6, r5
 6996 00de BD19     		adds	r5, r7, r6
 6997              	.LVL873:
2115:../user/source/DLT645.c ****     /*×éÖ¡*/
 6998              		.loc 1 2115 0
 6999 00e0 2946     		mov	r1, r5
 7000 00e2 1C48     		ldr	r0, .L474+40
 7001 00e4 FFF7FEFF 		bl	Flash_Write_Word
 7002              	.LVL874:
2117:../user/source/DLT645.c **** 
 7003              		.loc 1 2117 0
 7004 00e8 04F11103 		add	r3, r4, #17
 7005 00ec 0093     		str	r3, [sp]
 7006 00ee 04F11003 		add	r3, r4, #16
 7007 00f2 04F10F02 		add	r2, r4, #15
 7008 00f6 04F10E01 		add	r1, r4, #14
 7009 00fa 2846     		mov	r0, r5
 7010 00fc FFF7FEFF 		bl	Fill_Energy
 7011              	.LVL875:
2119:../user/source/DLT645.c ****     for (i = 0; i < 34; i++)
 7012              		.loc 1 2119 0
 7013 0100 0023     		movs	r3, #0
 7014 0102 84F82230 		strb	r3, [r4, #34]
 7015              	.LVL876:
2120:../user/source/DLT645.c ****     {
 7016              		.loc 1 2120 0
 7017 0106 07E0     		b	.L470
 7018              	.LVL877:
 7019              	.L471:
2122:../user/source/DLT645.c ****     }
 7020              		.loc 1 2122 0 discriminator 3
 7021 0108 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 7022 010a 94F82220 		ldrb	r2, [r4, #34]	@ zero_extendqisi2
 7023 010e 0A44     		add	r2, r2, r1
 7024 0110 84F82220 		strb	r2, [r4, #34]
2120:../user/source/DLT645.c ****     {
 7025              		.loc 1 2120 0 discriminator 3
 7026 0114 0133     		adds	r3, r3, #1
 7027              	.LVL878:
 7028 0116 9BB2     		uxth	r3, r3
 7029              	.LVL879:
 7030              	.L470:
2120:../user/source/DLT645.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 190


 7031              		.loc 1 2120 0 is_stmt 0 discriminator 1
 7032 0118 212B     		cmp	r3, #33
 7033 011a F5D9     		bls	.L471
2124:../user/source/DLT645.c **** }
 7034              		.loc 1 2124 0 is_stmt 1
 7035 011c 1623     		movs	r3, #22
 7036              	.LVL880:
 7037 011e 84F82330 		strb	r3, [r4, #35]
2125:../user/source/DLT645.c **** 
 7038              		.loc 1 2125 0
 7039 0122 02B0     		add	sp, sp, #8
 7040              	.LCFI59:
 7041              		.cfi_def_cfa_offset 24
 7042              		@ sp needed
 7043 0124 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 7044              	.LVL881:
 7045              	.L473:
 7046              	.LCFI60:
 7047              		.cfi_def_cfa_offset 0
 7048              		.cfi_restore 4
 7049              		.cfi_restore 5
 7050              		.cfi_restore 6
 7051              		.cfi_restore 7
 7052              		.cfi_restore 8
 7053              		.cfi_restore 14
 7054 0128 7047     		bx	lr
 7055              	.L475:
 7056 012a 00BF     		.align	2
 7057              	.L474:
 7058 012c 00000000 		.word	.LANCHOR8
 7059 0130 40200308 		.word	134422592
 7060 0134 04200308 		.word	134422532
 7061 0138 44200308 		.word	134422596
 7062 013c 08200308 		.word	134422536
 7063 0140 48200308 		.word	134422600
 7064 0144 0C200308 		.word	134422540
 7065 0148 4C200308 		.word	134422604
 7066 014c 10200308 		.word	134422544
 7067 0150 00200308 		.word	134422528
 7068 0154 3C200308 		.word	134422588
 7069              		.cfi_endproc
 7070              	.LFE149:
 7072              		.section	.text.vAccountEnergy_Modify_Mothod,"ax",%progbits
 7073              		.align	2
 7074              		.global	vAccountEnergy_Modify_Mothod
 7075              		.thumb
 7076              		.thumb_func
 7078              	vAccountEnergy_Modify_Mothod:
 7079              	.LFB150:
2136:../user/source/DLT645.c ****     uint64_t i;
 7080              		.loc 1 2136 0
 7081              		.cfi_startproc
 7082              		@ args = 0, pretend = 0, frame = 0
 7083              		@ frame_needed = 0, uses_anonymous_args = 0
 7084              	.LVL882:
 7085 0000 08B5     		push	{r3, lr}
 7086              	.LCFI61:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 191


 7087              		.cfi_def_cfa_offset 8
 7088              		.cfi_offset 3, -8
 7089              		.cfi_offset 14, -4
2138:../user/source/DLT645.c ****     return (uint32_t)(i / 100);
 7090              		.loc 1 2138 0
 7091 0002 044B     		ldr	r3, .L478
 7092 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7093 0006 A0FB0201 		umull	r0, r1, r0, r2
 7094              	.LVL883:
2139:../user/source/DLT645.c **** }
 7095              		.loc 1 2139 0
 7096 000a 6422     		movs	r2, #100
 7097 000c 0023     		movs	r3, #0
 7098 000e FFF7FEFF 		bl	__aeabi_uldivmod
 7099              	.LVL884:
2140:../user/source/DLT645.c **** 
 7100              		.loc 1 2140 0
 7101 0012 08BD     		pop	{r3, pc}
 7102              	.L479:
 7103              		.align	2
 7104              	.L478:
 7105 0014 00000000 		.word	ucDayfrozen_Modify_Ratio
 7106              		.cfi_endproc
 7107              	.LFE150:
 7109              		.section	.text.vAccountEnergy_Modify,"ax",%progbits
 7110              		.align	2
 7111              		.global	vAccountEnergy_Modify
 7112              		.thumb
 7113              		.thumb_func
 7115              	vAccountEnergy_Modify:
 7116              	.LFB151:
2160:../user/source/DLT645.c ****     int energy;
 7117              		.loc 1 2160 0
 7118              		.cfi_startproc
 7119              		@ args = 0, pretend = 0, frame = 0
 7120              		@ frame_needed = 0, uses_anonymous_args = 0
 7121              	.LVL885:
2163:../user/source/DLT645.c ****         return;
 7122              		.loc 1 2163 0
 7123 0000 504B     		ldr	r3, .L489
 7124 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7125 0004 002B     		cmp	r3, #0
 7126 0006 00F09B80 		beq	.L488
2160:../user/source/DLT645.c ****     int energy;
 7127              		.loc 1 2160 0
 7128 000a 10B5     		push	{r4, lr}
 7129              	.LCFI62:
 7130              		.cfi_def_cfa_offset 8
 7131              		.cfi_offset 4, -8
 7132              		.cfi_offset 14, -4
 7133 000c 82B0     		sub	sp, sp, #8
 7134              	.LCFI63:
 7135              		.cfi_def_cfa_offset 16
 7136 000e 0446     		mov	r4, r0
2165:../user/source/DLT645.c ****     {
 7137              		.loc 1 2165 0
 7138 0010 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 192


 7139 0012 322B     		cmp	r3, #50
 7140 0014 72D1     		bne	.L482
2168:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 7141              		.loc 1 2168 0
 7142 0016 437C     		ldrb	r3, [r0, #17]	@ zero_extendqisi2
 7143 0018 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 7144 001a C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 7145 001c 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 7146              	.LVL886:
 7147 001e FFF7FEFF 		bl	Get_Energy
 7148              	.LVL887:
2169:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
 7149              		.loc 1 2169 0
 7150 0022 FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 7151              	.LVL888:
2170:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦¼â·ÑÂÊµçÁ¿*/
 7152              		.loc 1 2170 0
 7153 0026 04F11103 		add	r3, r4, #17
 7154 002a 0093     		str	r3, [sp]
 7155 002c 04F11003 		add	r3, r4, #16
 7156 0030 04F10F02 		add	r2, r4, #15
 7157 0034 04F10E01 		add	r1, r4, #14
 7158 0038 FFF7FEFF 		bl	Fill_Energy
 7159              	.LVL889:
2172:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 7160              		.loc 1 2172 0
 7161 003c 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 7162 003e 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 7163 0040 E17C     		ldrb	r1, [r4, #19]	@ zero_extendqisi2
 7164 0042 A07C     		ldrb	r0, [r4, #18]	@ zero_extendqisi2
 7165 0044 FFF7FEFF 		bl	Get_Energy
 7166              	.LVL890:
2173:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[18], &pucBuffer[19], &pucBuffer[20], &pucBuffer[21]);
 7167              		.loc 1 2173 0
 7168 0048 FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 7169              	.LVL891:
2174:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦·å·ÑÂÊµçÁ¿*/
 7170              		.loc 1 2174 0
 7171 004c 04F11503 		add	r3, r4, #21
 7172 0050 0093     		str	r3, [sp]
 7173 0052 04F11403 		add	r3, r4, #20
 7174 0056 04F11302 		add	r2, r4, #19
 7175 005a 04F11201 		add	r1, r4, #18
 7176 005e FFF7FEFF 		bl	Fill_Energy
 7177              	.LVL892:
2176:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 7178              		.loc 1 2176 0
 7179 0062 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 7180 0064 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 7181 0066 E17D     		ldrb	r1, [r4, #23]	@ zero_extendqisi2
 7182 0068 A07D     		ldrb	r0, [r4, #22]	@ zero_extendqisi2
 7183 006a FFF7FEFF 		bl	Get_Energy
 7184              	.LVL893:
2177:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[22], &pucBuffer[23], &pucBuffer[24], &pucBuffer[25]);
 7185              		.loc 1 2177 0
 7186 006e FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 7187              	.LVL894:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 193


2178:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦Æ½·ÑÂÊµçÁ¿*/
 7188              		.loc 1 2178 0
 7189 0072 04F11903 		add	r3, r4, #25
 7190 0076 0093     		str	r3, [sp]
 7191 0078 04F11803 		add	r3, r4, #24
 7192 007c 04F11702 		add	r2, r4, #23
 7193 0080 04F11601 		add	r1, r4, #22
 7194 0084 FFF7FEFF 		bl	Fill_Energy
 7195              	.LVL895:
2180:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 7196              		.loc 1 2180 0
 7197 0088 637F     		ldrb	r3, [r4, #29]	@ zero_extendqisi2
 7198 008a 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 7199 008c E17E     		ldrb	r1, [r4, #27]	@ zero_extendqisi2
 7200 008e A07E     		ldrb	r0, [r4, #26]	@ zero_extendqisi2
 7201 0090 FFF7FEFF 		bl	Get_Energy
 7202              	.LVL896:
2181:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[26], &pucBuffer[27], &pucBuffer[28], &pucBuffer[29]);
 7203              		.loc 1 2181 0
 7204 0094 FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 7205              	.LVL897:
2182:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦¹È·ÑÂÊµçÁ¿*/
 7206              		.loc 1 2182 0
 7207 0098 04F11D03 		add	r3, r4, #29
 7208 009c 0093     		str	r3, [sp]
 7209 009e 04F11C03 		add	r3, r4, #28
 7210 00a2 04F11B02 		add	r2, r4, #27
 7211 00a6 04F11A01 		add	r1, r4, #26
 7212 00aa FFF7FEFF 		bl	Fill_Energy
 7213              	.LVL898:
2184:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 7214              		.loc 1 2184 0
 7215 00ae 94F82130 		ldrb	r3, [r4, #33]	@ zero_extendqisi2
 7216 00b2 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 7217 00b6 E17F     		ldrb	r1, [r4, #31]	@ zero_extendqisi2
 7218 00b8 A07F     		ldrb	r0, [r4, #30]	@ zero_extendqisi2
 7219 00ba FFF7FEFF 		bl	Get_Energy
 7220              	.LVL899:
2185:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[30], &pucBuffer[31], &pucBuffer[32], &pucBuffer[33]);
 7221              		.loc 1 2185 0
 7222 00be FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 7223              	.LVL900:
2186:../user/source/DLT645.c **** 
 7224              		.loc 1 2186 0
 7225 00c2 04F12103 		add	r3, r4, #33
 7226 00c6 0093     		str	r3, [sp]
 7227 00c8 04F12003 		add	r3, r4, #32
 7228 00cc 04F11F02 		add	r2, r4, #31
 7229 00d0 04F11E01 		add	r1, r4, #30
 7230 00d4 FFF7FEFF 		bl	Fill_Energy
 7231              	.LVL901:
2188:../user/source/DLT645.c ****         for (i = 0; i < 34; i++)
 7232              		.loc 1 2188 0
 7233 00d8 0023     		movs	r3, #0
 7234 00da 84F82230 		strb	r3, [r4, #34]
 7235              	.LVL902:
2189:../user/source/DLT645.c ****         {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 194


 7236              		.loc 1 2189 0
 7237 00de 07E0     		b	.L483
 7238              	.LVL903:
 7239              	.L484:
2191:../user/source/DLT645.c ****         }
 7240              		.loc 1 2191 0 discriminator 3
 7241 00e0 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 7242 00e2 94F82220 		ldrb	r2, [r4, #34]	@ zero_extendqisi2
 7243 00e6 0A44     		add	r2, r2, r1
 7244 00e8 84F82220 		strb	r2, [r4, #34]
2189:../user/source/DLT645.c ****         {
 7245              		.loc 1 2189 0 discriminator 3
 7246 00ec 0133     		adds	r3, r3, #1
 7247              	.LVL904:
 7248 00ee 9BB2     		uxth	r3, r3
 7249              	.LVL905:
 7250              	.L483:
2189:../user/source/DLT645.c ****         {
 7251              		.loc 1 2189 0 is_stmt 0 discriminator 1
 7252 00f0 212B     		cmp	r3, #33
 7253 00f2 F5D9     		bls	.L484
2193:../user/source/DLT645.c ****     }
 7254              		.loc 1 2193 0 is_stmt 1
 7255 00f4 1623     		movs	r3, #22
 7256              	.LVL906:
 7257 00f6 84F82330 		strb	r3, [r4, #35]
 7258 00fa 1FE0     		b	.L480
 7259              	.LVL907:
 7260              	.L482:
2197:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 7261              		.loc 1 2197 0
 7262 00fc 437C     		ldrb	r3, [r0, #17]	@ zero_extendqisi2
 7263 00fe 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 7264 0100 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 7265 0102 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 7266              	.LVL908:
 7267 0104 FFF7FEFF 		bl	Get_Energy
 7268              	.LVL909:
2198:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
 7269              		.loc 1 2198 0
 7270 0108 FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 7271              	.LVL910:
2199:../user/source/DLT645.c **** 
 7272              		.loc 1 2199 0
 7273 010c 04F11103 		add	r3, r4, #17
 7274 0110 0093     		str	r3, [sp]
 7275 0112 04F11003 		add	r3, r4, #16
 7276 0116 04F10F02 		add	r2, r4, #15
 7277 011a 04F10E01 		add	r1, r4, #14
 7278 011e FFF7FEFF 		bl	Fill_Energy
 7279              	.LVL911:
2201:../user/source/DLT645.c ****         for (i = 0; i < 18; i++)
 7280              		.loc 1 2201 0
 7281 0122 0023     		movs	r3, #0
 7282 0124 A374     		strb	r3, [r4, #18]
 7283              	.LVL912:
2202:../user/source/DLT645.c ****         {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 195


 7284              		.loc 1 2202 0
 7285 0126 05E0     		b	.L485
 7286              	.LVL913:
 7287              	.L486:
2204:../user/source/DLT645.c ****         }
 7288              		.loc 1 2204 0 discriminator 3
 7289 0128 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 7290 012a A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 7291 012c 0A44     		add	r2, r2, r1
 7292 012e A274     		strb	r2, [r4, #18]
2202:../user/source/DLT645.c ****         {
 7293              		.loc 1 2202 0 discriminator 3
 7294 0130 0133     		adds	r3, r3, #1
 7295              	.LVL914:
 7296 0132 9BB2     		uxth	r3, r3
 7297              	.LVL915:
 7298              	.L485:
2202:../user/source/DLT645.c ****         {
 7299              		.loc 1 2202 0 is_stmt 0 discriminator 1
 7300 0134 112B     		cmp	r3, #17
 7301 0136 F7D9     		bls	.L486
2206:../user/source/DLT645.c ****     }
 7302              		.loc 1 2206 0 is_stmt 1
 7303 0138 1623     		movs	r3, #22
 7304              	.LVL916:
 7305 013a E374     		strb	r3, [r4, #19]
 7306              	.L480:
2208:../user/source/DLT645.c **** 
 7307              		.loc 1 2208 0
 7308 013c 02B0     		add	sp, sp, #8
 7309              	.LCFI64:
 7310              		.cfi_def_cfa_offset 8
 7311              		@ sp needed
 7312 013e 10BD     		pop	{r4, pc}
 7313              	.LVL917:
 7314              	.L488:
 7315              	.LCFI65:
 7316              		.cfi_def_cfa_offset 0
 7317              		.cfi_restore 4
 7318              		.cfi_restore 14
 7319 0140 7047     		bx	lr
 7320              	.L490:
 7321 0142 00BF     		.align	2
 7322              	.L489:
 7323 0144 00000000 		.word	.LANCHOR8
 7324              		.cfi_endproc
 7325              	.LFE151:
 7327              		.comm	TransFormer,16,4
 7328              		.global	Ccurrent
 7329              		.global	Bcurrent
 7330              		.global	Acurrent
 7331              		.global	C_Voltage
 7332              		.global	B_Voltage
 7333              		.global	A_Voltage
 7334              		.comm	Voltage_MIN,4,4
 7335              		.comm	Voltage_MAX,4,4
 7336              		.comm	ucDayfrozen_Modify_Ratio,1,1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 196


 7337              		.global	Dayfrozen_Change_State
 7338              		.global	Voltage_Change_State
 7339              		.global	uc645DataDomainLength
 7340              		.comm	ucApp_Buf_INFR,300,4
 7341              		.comm	ucApp_Buf_ZD2DB,300,4
 7342              		.comm	ucApp_Buf_DB2ZD,300,4
 7343              		.global	ucRcvStatus
 7344              		.comm	Voltage_Frame_Status,1,1
 7345              		.global	DBDataID_Handle_List
 7346              		.global	INFRDataID_Handle_List
 7347              		.section	.rodata.DBDataID_Handle_List,"a",%progbits
 7348              		.align	2
 7349              		.set	.LANCHOR10,. + 0
 7352              	DBDataID_Handle_List:
 7353 0000 33       		.byte	51
 7354 0001 34       		.byte	52
 7355 0002 34       		.byte	52
 7356 0003 35       		.byte	53
 7357 0004 00000000 		.word	vVoltageHandle
 7358 0008 33       		.byte	51
 7359 0009 35       		.byte	53
 7360 000a 34       		.byte	52
 7361 000b 35       		.byte	53
 7362 000c 00000000 		.word	vVoltageHandle
 7363 0010 33       		.byte	51
 7364 0011 36       		.byte	54
 7365 0012 34       		.byte	52
 7366 0013 35       		.byte	53
 7367 0014 00000000 		.word	vVoltageHandle
 7368 0018 33       		.byte	51
 7369 0019 32       		.byte	50
 7370 001a 34       		.byte	52
 7371 001b 35       		.byte	53
 7372 001c 00000000 		.word	vVoltageHandle
 7373 0020 37       		.byte	55
 7374 0021 38       		.byte	56
 7375 0022 33       		.byte	51
 7376 0023 38       		.byte	56
 7377 0024 00000000 		.word	Estatus_Modify_CurrentEvent
 7378 0028 38       		.byte	56
 7379 0029 38       		.byte	56
 7380 002a 33       		.byte	51
 7381 002b 38       		.byte	56
 7382 002c 00000000 		.word	Estatus_Modify_CurrentEvent
 7383 0030 39       		.byte	57
 7384 0031 38       		.byte	56
 7385 0032 33       		.byte	51
 7386 0033 38       		.byte	56
 7387 0034 00000000 		.word	Estatus_Modify_CurrentEvent
 7388 0038 3A       		.byte	58
 7389 0039 38       		.byte	56
 7390 003a 33       		.byte	51
 7391 003b 38       		.byte	56
 7392 003c 00000000 		.word	Estatus_Modify_CurrentEvent
 7393 0040 32       		.byte	50
 7394 0041 38       		.byte	56
 7395 0042 33       		.byte	51
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 197


 7396 0043 38       		.byte	56
 7397 0044 00000000 		.word	Estatus_Modify_CurrentEvent
 7398 0048 33       		.byte	51
 7399 0049 33       		.byte	51
 7400 004a 34       		.byte	52
 7401 004b 33       		.byte	51
 7402 004c 00000000 		.word	vNowEnergy_Modifier
 7403 0050 33       		.byte	51
 7404 0051 34       		.byte	52
 7405 0052 34       		.byte	52
 7406 0053 33       		.byte	51
 7407 0054 00000000 		.word	vNowEnergy_Modifier
 7408 0058 33       		.byte	51
 7409 0059 35       		.byte	53
 7410 005a 34       		.byte	52
 7411 005b 33       		.byte	51
 7412 005c 00000000 		.word	vNowEnergy_Modifier
 7413 0060 33       		.byte	51
 7414 0061 36       		.byte	54
 7415 0062 34       		.byte	52
 7416 0063 33       		.byte	51
 7417 0064 00000000 		.word	vNowEnergy_Modifier
 7418 0068 33       		.byte	51
 7419 0069 37       		.byte	55
 7420 006a 34       		.byte	52
 7421 006b 33       		.byte	51
 7422 006c 00000000 		.word	vNowEnergy_Modifier
 7423 0070 33       		.byte	51
 7424 0071 32       		.byte	50
 7425 0072 34       		.byte	52
 7426 0073 33       		.byte	51
 7427 0074 00000000 		.word	vNowEnergy_Modifier
 7428 0078 33       		.byte	51
 7429 0079 33       		.byte	51
 7430 007a 48       		.byte	72
 7431 007b 33       		.byte	51
 7432 007c 00000000 		.word	vNowEnergy_Modifier
 7433 0080 33       		.byte	51
 7434 0081 33       		.byte	51
 7435 0082 5C       		.byte	92
 7436 0083 33       		.byte	51
 7437 0084 00000000 		.word	vNowEnergy_Modifier
 7438 0088 33       		.byte	51
 7439 0089 33       		.byte	51
 7440 008a 70       		.byte	112
 7441 008b 33       		.byte	51
 7442 008c 00000000 		.word	vNowEnergy_Modifier
 7443 0090 34       		.byte	52
 7444 0091 34       		.byte	52
 7445 0092 39       		.byte	57
 7446 0093 38       		.byte	56
 7447 0094 00000000 		.word	vDayfrozen_Modifier
 7448 0098 35       		.byte	53
 7449 0099 34       		.byte	52
 7450 009a 39       		.byte	57
 7451 009b 38       		.byte	56
 7452 009c 00000000 		.word	vDayfrozen_Modifier
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 198


 7453 00a0 36       		.byte	54
 7454 00a1 34       		.byte	52
 7455 00a2 39       		.byte	57
 7456 00a3 38       		.byte	56
 7457 00a4 00000000 		.word	vDayfrozen_Modifier
 7458 00a8 34       		.byte	52
 7459 00a9 33       		.byte	51
 7460 00aa 34       		.byte	52
 7461 00ab 33       		.byte	51
 7462 00ac 00000000 		.word	vAccountEnergy_Modify
 7463 00b0 34       		.byte	52
 7464 00b1 34       		.byte	52
 7465 00b2 34       		.byte	52
 7466 00b3 33       		.byte	51
 7467 00b4 00000000 		.word	vAccountEnergy_Modify
 7468 00b8 34       		.byte	52
 7469 00b9 35       		.byte	53
 7470 00ba 34       		.byte	52
 7471 00bb 33       		.byte	51
 7472 00bc 00000000 		.word	vAccountEnergy_Modify
 7473 00c0 34       		.byte	52
 7474 00c1 36       		.byte	54
 7475 00c2 34       		.byte	52
 7476 00c3 33       		.byte	51
 7477 00c4 00000000 		.word	vAccountEnergy_Modify
 7478 00c8 34       		.byte	52
 7479 00c9 37       		.byte	55
 7480 00ca 34       		.byte	52
 7481 00cb 33       		.byte	51
 7482 00cc 00000000 		.word	vAccountEnergy_Modify
 7483 00d0 34       		.byte	52
 7484 00d1 32       		.byte	50
 7485 00d2 34       		.byte	52
 7486 00d3 33       		.byte	51
 7487 00d4 00000000 		.word	vAccountEnergy_Modify
 7488 00d8 34       		.byte	52
 7489 00d9 33       		.byte	51
 7490 00da 48       		.byte	72
 7491 00db 33       		.byte	51
 7492 00dc 00000000 		.word	vAccountEnergy_Modify
 7493 00e0 34       		.byte	52
 7494 00e1 33       		.byte	51
 7495 00e2 5C       		.byte	92
 7496 00e3 33       		.byte	51
 7497 00e4 00000000 		.word	vAccountEnergy_Modify
 7498 00e8 34       		.byte	52
 7499 00e9 33       		.byte	51
 7500 00ea 70       		.byte	112
 7501 00eb 33       		.byte	51
 7502 00ec 00000000 		.word	vAccountEnergy_Modify
 7503 00f0 33       		.byte	51
 7504 00f1 37       		.byte	55
 7505 00f2 34       		.byte	52
 7506 00f3 35       		.byte	53
 7507 00f4 00000000 		.word	Get_VChange_State
 7508 00f8 33       		.byte	51
 7509 00f9 38       		.byte	56
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 199


 7510 00fa 34       		.byte	52
 7511 00fb 35       		.byte	53
 7512 00fc 00000000 		.word	Set_Voltage_Limit
 7513 0100 33       		.byte	51
 7514 0101 39       		.byte	57
 7515 0102 34       		.byte	52
 7516 0103 35       		.byte	53
 7517 0104 00000000 		.word	Query_Voltage_Limit
 7518 0108 33       		.byte	51
 7519 0109 3A       		.byte	58
 7520 010a 34       		.byte	52
 7521 010b 35       		.byte	53
 7522 010c 00000000 		.word	Default_Reset
 7523 0110 33       		.byte	51
 7524 0111 37       		.byte	55
 7525 0112 35       		.byte	53
 7526 0113 35       		.byte	53
 7527 0114 00000000 		.word	vCurrent_Limit_Set
 7528 0118 33       		.byte	51
 7529 0119 38       		.byte	56
 7530 011a 35       		.byte	53
 7531 011b 35       		.byte	53
 7532 011c 00000000 		.word	vCurrent_Limit_ReadSet
 7533 0120 33       		.byte	51
 7534 0121 39       		.byte	57
 7535 0122 35       		.byte	53
 7536 0123 35       		.byte	53
 7537 0124 00000000 		.word	vCurrent_CTRatio_Set
 7538 0128 33       		.byte	51
 7539 0129 3A       		.byte	58
 7540 012a 35       		.byte	53
 7541 012b 35       		.byte	53
 7542 012c 00000000 		.word	vCurrent_CTRatio_ReadSet
 7543 0130 33       		.byte	51
 7544 0131 3B       		.byte	59
 7545 0132 35       		.byte	53
 7546 0133 35       		.byte	53
 7547 0134 00000000 		.word	vCurrent_TransFormer_Capacity_ReadSet
 7548 0138 33       		.byte	51
 7549 0139 73       		.byte	115
 7550 013a 34       		.byte	52
 7551 013b 33       		.byte	51
 7552 013c 00000000 		.word	vEnergy_Modify_AbleSet
 7553 0140 33       		.byte	51
 7554 0141 74       		.byte	116
 7555 0142 34       		.byte	52
 7556 0143 33       		.byte	51
 7557 0144 00000000 		.word	vEnergy_Modify_RaitoSet
 7558 0148 33       		.byte	51
 7559 0149 75       		.byte	117
 7560 014a 34       		.byte	52
 7561 014b 33       		.byte	51
 7562 014c 00000000 		.word	vEnergy_Modify_Reset
 7563 0150 33       		.byte	51
 7564 0151 76       		.byte	118
 7565 0152 34       		.byte	52
 7566 0153 33       		.byte	51
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 200


 7567 0154 00000000 		.word	vEnergy_Modify_ReadSet
 7568 0158 33       		.byte	51
 7569 0159 77       		.byte	119
 7570 015a 34       		.byte	52
 7571 015b 33       		.byte	51
 7572 015c 00000000 		.word	vEnergy_Modify_ReadValue
 7573 0160 33       		.byte	51
 7574 0161 34       		.byte	52
 7575 0162 43       		.byte	67
 7576 0163 39       		.byte	57
 7577 0164 00000000 		.word	vLoadProfile_Voltage_Modify
 7578 0168 34       		.byte	52
 7579 0169 34       		.byte	52
 7580 016a 43       		.byte	67
 7581 016b 39       		.byte	57
 7582 016c 00000000 		.word	vLoadProfile_Voltage_Modify
 7583 0170 35       		.byte	53
 7584 0171 34       		.byte	52
 7585 0172 43       		.byte	67
 7586 0173 39       		.byte	57
 7587 0174 00000000 		.word	vLoadProfile_Voltage_Modify
 7588 0178 32       		.byte	50
 7589 0179 34       		.byte	52
 7590 017a 43       		.byte	67
 7591 017b 39       		.byte	57
 7592 017c 00000000 		.word	vLoadProfile_Voltage_Modify
 7593 0180 33       		.byte	51
 7594 0181 35       		.byte	53
 7595 0182 43       		.byte	67
 7596 0183 39       		.byte	57
 7597 0184 00000000 		.word	vLoadProfile_Current_Modify
 7598 0188 34       		.byte	52
 7599 0189 35       		.byte	53
 7600 018a 43       		.byte	67
 7601 018b 39       		.byte	57
 7602 018c 00000000 		.word	vLoadProfile_Current_Modify
 7603 0190 35       		.byte	53
 7604 0191 35       		.byte	53
 7605 0192 43       		.byte	67
 7606 0193 39       		.byte	57
 7607 0194 00000000 		.word	vLoadProfile_Current_Modify
 7608 0198 32       		.byte	50
 7609 0199 35       		.byte	53
 7610 019a 43       		.byte	67
 7611 019b 39       		.byte	57
 7612 019c 00000000 		.word	vLoadProfile_Current_Modify
 7613 01a0 32       		.byte	50
 7614 01a1 32       		.byte	50
 7615 01a2 32       		.byte	50
 7616 01a3 32       		.byte	50
 7617 01a4 00000000 		.word	vRead_Version
 7618              		.section	.bss.Voltage_Change_State,"aw",%nobits
 7619              		.set	.LANCHOR5,. + 0
 7622              	Voltage_Change_State:
 7623 0000 00       		.space	1
 7624              		.section	.data.B_Voltage,"aw",%progbits
 7625              		.align	2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 201


 7626              		.set	.LANCHOR6,. + 0
 7629              	B_Voltage:
 7630 0000 98080000 		.word	2200
 7631              		.section	.bss.uc645DataDomainLength,"aw",%nobits
 7632              		.set	.LANCHOR0,. + 0
 7635              	uc645DataDomainLength:
 7636 0000 00       		.space	1
 7637              		.section	.bss.Bcurrent,"aw",%nobits
 7638              		.align	2
 7639              		.set	.LANCHOR2,. + 0
 7642              	Bcurrent:
 7643 0000 00000000 		.space	8
 7643      00000000 
 7644              		.section	.bss.Ccurrent,"aw",%nobits
 7645              		.align	2
 7646              		.set	.LANCHOR3,. + 0
 7649              	Ccurrent:
 7650 0000 00000000 		.space	8
 7650      00000000 
 7651              		.section	.data.Dayfrozen_Change_State,"aw",%progbits
 7652              		.set	.LANCHOR8,. + 0
 7655              	Dayfrozen_Change_State:
 7656 0000 FF       		.byte	-1
 7657              		.section	.bss.ucRcvStatus,"aw",%nobits
 7658              		.set	.LANCHOR9,. + 0
 7661              	ucRcvStatus:
 7662 0000 00       		.space	1
 7663              		.section	.bss.Acurrent,"aw",%nobits
 7664              		.align	2
 7665              		.set	.LANCHOR1,. + 0
 7668              	Acurrent:
 7669 0000 00000000 		.space	8
 7669      00000000 
 7670              		.section	.data.C_Voltage,"aw",%progbits
 7671              		.align	2
 7672              		.set	.LANCHOR7,. + 0
 7675              	C_Voltage:
 7676 0000 98080000 		.word	2200
 7677              		.section	.rodata.INFRDataID_Handle_List,"a",%progbits
 7678              		.align	2
 7679              		.set	.LANCHOR11,. + 0
 7682              	INFRDataID_Handle_List:
 7683 0000 33       		.byte	51
 7684 0001 37       		.byte	55
 7685 0002 34       		.byte	52
 7686 0003 35       		.byte	53
 7687 0004 00000000 		.word	Get_VChange_State
 7688 0008 33       		.byte	51
 7689 0009 39       		.byte	57
 7690 000a 34       		.byte	52
 7691 000b 35       		.byte	53
 7692 000c 00000000 		.word	Query_Voltage_Limit
 7693 0010 33       		.byte	51
 7694 0011 3A       		.byte	58
 7695 0012 34       		.byte	52
 7696 0013 35       		.byte	53
 7697 0014 00000000 		.word	Default_Reset
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 202


 7698 0018 33       		.byte	51
 7699 0019 3B       		.byte	59
 7700 001a 34       		.byte	52
 7701 001b 35       		.byte	53
 7702 001c 00000000 		.word	vVoltage_SetMaxValue
 7703 0020 33       		.byte	51
 7704 0021 3C       		.byte	60
 7705 0022 34       		.byte	52
 7706 0023 35       		.byte	53
 7707 0024 00000000 		.word	vVoltage_SetMinValue
 7708 0028 33       		.byte	51
 7709 0029 3D       		.byte	61
 7710 002a 34       		.byte	52
 7711 002b 35       		.byte	53
 7712 002c 00000000 		.word	vVoltage_SetMaxMaxValue
 7713 0030 33       		.byte	51
 7714 0031 3E       		.byte	62
 7715 0032 34       		.byte	52
 7716 0033 35       		.byte	53
 7717 0034 00000000 		.word	vVoltage_SetMinMinValue
 7718 0038 33       		.byte	51
 7719 0039 73       		.byte	115
 7720 003a 34       		.byte	52
 7721 003b 33       		.byte	51
 7722 003c 00000000 		.word	vEnergy_Modify_AbleSet
 7723 0040 33       		.byte	51
 7724 0041 74       		.byte	116
 7725 0042 34       		.byte	52
 7726 0043 33       		.byte	51
 7727 0044 00000000 		.word	vEnergy_Modify_RaitoSet
 7728 0048 33       		.byte	51
 7729 0049 75       		.byte	117
 7730 004a 34       		.byte	52
 7731 004b 33       		.byte	51
 7732 004c 00000000 		.word	vEnergy_Modify_Reset
 7733 0050 33       		.byte	51
 7734 0051 76       		.byte	118
 7735 0052 34       		.byte	52
 7736 0053 33       		.byte	51
 7737 0054 00000000 		.word	vEnergy_Modify_ReadSet
 7738 0058 33       		.byte	51
 7739 0059 77       		.byte	119
 7740 005a 34       		.byte	52
 7741 005b 33       		.byte	51
 7742 005c 00000000 		.word	vEnergy_Modify_ReadValue
 7743 0060 32       		.byte	50
 7744 0061 32       		.byte	50
 7745 0062 32       		.byte	50
 7746 0063 32       		.byte	50
 7747 0064 00000000 		.word	vRead_Version
 7748              		.section	.data.A_Voltage,"aw",%progbits
 7749              		.align	2
 7750              		.set	.LANCHOR4,. + 0
 7753              	A_Voltage:
 7754 0000 98080000 		.word	2200
 7755              		.text
 7756              	.Letext0:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 203


 7757              		.file 2 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\machine\\_defaul
 7758              		.file 3 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\sys\\_stdint.h"
 7759              		.file 4 "../cmsis/include/stm32f37x.h"
 7760              		.file 5 "../user/include/BaseDef.h"
 7761              		.file 6 "../user/include/Uart.h"
 7762              		.file 7 "../user/include/DLT645.h"
 7763              		.file 8 "../cmsis/include/core_cm4.h"
 7764              		.file 9 "../user/include/Time.h"
 7765              		.file 10 "../user/include/Flash.h"
 7766              		.file 11 "../stdperiph/include/stm32f37x_usart.h"
 7767              		.file 12 "../stdperiph/include/stm32f37x_flash.h"
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 204


DEFINED SYMBOLS
                            *ABS*:00000000 DLT645.c
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:22     .text.dwCheckFrame:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:26     .text.dwCheckFrame:00000000 dwCheckFrame
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:101    .text.dwCheckFrame:00000044 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:106    .text.BCD_Verity:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:110    .text.BCD_Verity:00000000 BCD_Verity
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:200    .text.Get_Voltage:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:204    .text.Get_Voltage:00000000 Get_Voltage
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:257    .text.vGet_Current:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:261    .text.vGet_Current:00000000 vGet_Current
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:330    .text.vGet_Current:00000058 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:335    .text.vPut_Current:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:339    .text.vPut_Current:00000000 vPut_Current
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:448    .text.vPut_Current:000000b0 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:457    .text.blCurrentSingle_Modify_Method:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:461    .text.blCurrentSingle_Modify_Method:00000000 blCurrentSingle_Modify_Method
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:783    .text.blCurrentSingle_Modify_Method:000001ac $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:789    .text.vCurrentTriple_Modify_Method:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:793    .text.vCurrentTriple_Modify_Method:00000000 vCurrentTriple_Modify_Method
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:840    .text.vCurrent_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:845    .text.vCurrent_Modify:00000000 vCurrent_Modify
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:870    .text.vCurrent_Modify:00000014 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:875    .text.vCurrent_Modify:0000001e $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1268   .text.vCurrent_Modify:0000026c $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1276   .text.vCurrent_Limit_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1281   .text.vCurrent_Limit_Modify:00000000 vCurrent_Limit_Modify
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1294   .text.Get_Estatus:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1298   .text.Get_Estatus:00000000 Get_Estatus
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1322   .text.Estatus_Modify_CurrentEvent:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1327   .text.Estatus_Modify_CurrentEvent:00000000 Estatus_Modify_CurrentEvent
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1348   .text.Estatus_Modify_CurrentEvent:00000010 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1551   .text.Estatus_Modify_CurrentEvent:00000110 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1556   .text.GetLowByte:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1560   .text.GetLowByte:00000000 GetLowByte
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1599   .text.GetLowByte:00000048 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1606   .text.GetHighByte:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1610   .text.GetHighByte:00000000 GetHighByte
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1642   .text.GetHighByte:00000034 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1648   .text.Get_Energy:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1652   .text.Get_Energy:00000000 Get_Energy
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1719   .text.Get_Energy:00000064 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1724   .text.Fill_Energy:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1728   .text.Fill_Energy:00000000 Fill_Energy
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1814   .text.Fill_Energy:000000b8 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1822   .text.vVoltage_SetMaxMaxValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1827   .text.vVoltage_SetMaxMaxValue:00000000 vVoltage_SetMaxMaxValue
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1840   .text.vVoltage_SetMinMinValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1845   .text.vVoltage_SetMinMinValue:00000000 vVoltage_SetMinMinValue
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1858   .text.vLoadProfile_Voltage_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1863   .text.vLoadProfile_Voltage_Modify:00000000 vLoadProfile_Voltage_Modify
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1996   .text.vLoadProfile_Voltage_Modify:000000a0 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:2001   .text.vLoadProfile_Current_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:2006   .text.vLoadProfile_Current_Modify:00000000 vLoadProfile_Current_Modify
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:2019   .text.Get_VChange_State:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:2024   .text.Get_VChange_State:00000000 Get_VChange_State
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:2154   .text.Get_VChange_State:00000098 $d
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 205


C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:2167   .text.Set_Voltage_Limit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:2172   .text.Set_Voltage_Limit:00000000 Set_Voltage_Limit
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:2328   .text.Set_Voltage_Limit:000000c0 $d
                            *COM*:00000004 Voltage_MAX
                            *COM*:00000004 Voltage_MIN
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:2345   .text.Query_Voltage_Limit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:2350   .text.Query_Voltage_Limit:00000000 Query_Voltage_Limit
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:2491   .text.Query_Voltage_Limit:000000c0 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:2504   .text.Default_Reset:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:2509   .text.Default_Reset:00000000 Default_Reset
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:2663   .text.Default_Reset:000000d0 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:2685   .text.vCurrent_Limit_Set:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:2690   .text.vCurrent_Limit_Set:00000000 vCurrent_Limit_Set
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:2789   .text.vCurrent_Limit_Set:00000070 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:2800   .text.vCurrent_CTRatio_Set:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:2805   .text.vCurrent_CTRatio_Set:00000000 vCurrent_CTRatio_Set
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:2905   .text.vCurrent_CTRatio_Set:00000070 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:2916   .text.vCurrent_Limit_ReadSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:2921   .text.vCurrent_Limit_ReadSet:00000000 vCurrent_Limit_ReadSet
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:3044   .text.vCurrent_Limit_ReadSet:0000009c $d
                            *COM*:00000010 TransFormer
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:3056   .text.vCurrent_CTRatio_ReadSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:3061   .text.vCurrent_CTRatio_ReadSet:00000000 vCurrent_CTRatio_ReadSet
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:3173   .text.vCurrent_CTRatio_ReadSet:00000088 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:3185   .text.vCurrent_TransFormer_Capacity_ReadSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:3190   .text.vCurrent_TransFormer_Capacity_ReadSet:00000000 vCurrent_TransFormer_Capacity_ReadSet
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:3302   .text.vCurrent_TransFormer_Capacity_ReadSet:00000088 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:3314   .text.vEnergy_Modify_ReadSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:3319   .text.vEnergy_Modify_ReadSet:00000000 vEnergy_Modify_ReadSet
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:3438   .text.vEnergy_Modify_ReadSet:0000009c $d
                            *COM*:00000001 ucDayfrozen_Modify_Ratio
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:3452   .text.vRead_Version:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:3457   .text.vRead_Version:00000000 vRead_Version
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:3569   .text.vRead_Version:00000084 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:3580   .text.vEnergy_Modify_RaitoSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:3585   .text.vEnergy_Modify_RaitoSet:00000000 vEnergy_Modify_RaitoSet
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:3734   .text.vEnergy_Modify_RaitoSet:000000c8 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:3747   .text.vVoltage_SetMinValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:3752   .text.vVoltage_SetMinValue:00000000 vVoltage_SetMinValue
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:3883   .text.vVoltage_SetMinValue:0000009c $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:3894   .text.vEnergy_Modify_ReadValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:3899   .text.vEnergy_Modify_ReadValue:00000000 vEnergy_Modify_ReadValue
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:4055   .text.vEnergy_Modify_ReadValue:000000c8 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:4068   .text.vVoltage_SetMaxValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:4073   .text.vVoltage_SetMaxValue:00000000 vVoltage_SetMaxValue
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:4206   .text.vVoltage_SetMaxValue:000000a0 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:4217   .text.vEnergy_Modify_AbleSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:4222   .text.vEnergy_Modify_AbleSet:00000000 vEnergy_Modify_AbleSet
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:4390   .text.vEnergy_Modify_AbleSet:000000cc $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:4404   .text.vEnergy_Modify_Reset:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:4409   .text.vEnergy_Modify_Reset:00000000 vEnergy_Modify_Reset
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:4554   .text.vEnergy_Modify_Reset:000000a8 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:4568   .text.blRecvFrame:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:4573   .text.blRecvFrame:00000000 blRecvFrame
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:4756   .text.blRecvFrame:000000f0 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:4764   .text.vDBDataID_Handle:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:4769   .text.vDBDataID_Handle:00000000 vDBDataID_Handle
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 206


C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:4855   .text.vDBDataID_Handle:00000068 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:4863   .text.vINFRDataID_Handle:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:4868   .text.vINFRDataID_Handle:00000000 vINFRDataID_Handle
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:4942   .text.vINFRDataID_Handle:00000054 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:4947   .text.blVoltage_Create:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:4952   .text.blVoltage_Create:00000000 blVoltage_Create
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:4975   .text.blVoltage_Create:00000012 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:4980   .text.blVoltage_Create:0000001c $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:5337   .text.blVoltage_Create:000001dc $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:5346   .text.Voltage_Change_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:5351   .text.Voltage_Change_Init:00000000 Voltage_Change_Init
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:5439   .text.Voltage_Change_Init:00000068 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:5451   .text.Voltage_Modifier_Method:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:5456   .text.Voltage_Modifier_Method:00000000 Voltage_Modifier_Method
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:5573   .text.Voltage_Modifier_Method:00000080 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:5579   .text.Voltage_Modifier:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:5584   .text.Voltage_Modifier:00000000 Voltage_Modifier
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:5923   .text.Voltage_Modifier:000001ec $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:5934   .text.vVoltageHandle:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:5939   .text.vVoltageHandle:00000000 vVoltageHandle
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:5969   .text.vVoltageHandle:00000018 $d
                            *COM*:00000001 Voltage_Frame_Status
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:5976   .text.vCurrent_Limit_DefaultSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:5981   .text.vCurrent_Limit_DefaultSet:00000000 vCurrent_Limit_DefaultSet
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:6056   .text.vCurrent_Limit_DefaultSet:00000060 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:6065   .text.vCurrentDirect_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:6070   .text.vCurrentDirect_Modify:00000000 vCurrentDirect_Modify
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:6085   .text.vCurrentDirect_Modify:0000000c $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:6245   .text.vCurrent_Count_Clear:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:6250   .text.vCurrent_Count_Clear:00000000 vCurrent_Count_Clear
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:6271   .text.vCurrent_Count_Clear:00000010 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:6278   .text.vEnergy_Modify_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:6283   .text.vEnergy_Modify_Init:00000000 vEnergy_Modify_Init
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:6320   .text.vEnergy_Modify_Init:00000024 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:6329   .text.vNow_Frozen_Modify_Mothod:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:6334   .text.vNow_Frozen_Modify_Mothod:00000000 vNow_Frozen_Modify_Mothod
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:6457   .text.vNow_Frozen_Modify_Mothod:000000a0 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:6463   .text.vNowEnergy_Modifier:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:6468   .text.vNowEnergy_Modifier:00000000 vNowEnergy_Modifier
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:6512   .text.vNowEnergy_Modifier:0000002e $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:6518   .text.vNowEnergy_Modifier:00000034 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:6838   .text.vNowEnergy_Modifier:00000210 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:6859   .text.vDayfrozen_Modifier:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:6864   .text.vDayfrozen_Modifier:00000000 vDayfrozen_Modifier
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7058   .text.vDayfrozen_Modifier:0000012c $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7073   .text.vAccountEnergy_Modify_Mothod:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7078   .text.vAccountEnergy_Modify_Mothod:00000000 vAccountEnergy_Modify_Mothod
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7105   .text.vAccountEnergy_Modify_Mothod:00000014 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7110   .text.vAccountEnergy_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7115   .text.vAccountEnergy_Modify:00000000 vAccountEnergy_Modify
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7323   .text.vAccountEnergy_Modify:00000144 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7649   .bss.Ccurrent:00000000 Ccurrent
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7642   .bss.Bcurrent:00000000 Bcurrent
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7668   .bss.Acurrent:00000000 Acurrent
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7675   .data.C_Voltage:00000000 C_Voltage
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7629   .data.B_Voltage:00000000 B_Voltage
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7753   .data.A_Voltage:00000000 A_Voltage
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s 			page 207


C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7655   .data.Dayfrozen_Change_State:00000000 Dayfrozen_Change_State
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7622   .bss.Voltage_Change_State:00000000 Voltage_Change_State
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7635   .bss.uc645DataDomainLength:00000000 uc645DataDomainLength
                            *COM*:0000012c ucApp_Buf_INFR
                            *COM*:0000012c ucApp_Buf_ZD2DB
                            *COM*:0000012c ucApp_Buf_DB2ZD
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7661   .bss.ucRcvStatus:00000000 ucRcvStatus
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7352   .rodata.DBDataID_Handle_List:00000000 DBDataID_Handle_List
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7682   .rodata.INFRDataID_Handle_List:00000000 INFRDataID_Handle_List
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7348   .rodata.DBDataID_Handle_List:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7623   .bss.Voltage_Change_State:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7625   .data.B_Voltage:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7636   .bss.uc645DataDomainLength:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7638   .bss.Bcurrent:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7645   .bss.Ccurrent:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7662   .bss.ucRcvStatus:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7664   .bss.Acurrent:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7671   .data.C_Voltage:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7678   .rodata.INFRDataID_Handle_List:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:7749   .data.A_Voltage:00000000 $d
                     .debug_frame:00000010 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1357   .text.Estatus_Modify_CurrentEvent:00000019 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:1357   .text.Estatus_Modify_CurrentEvent:0000001a $t
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:6090   .text.vCurrentDirect_Modify:00000011 $d
C:\Users\strag\AppData\Local\Temp\ccpSSBSY.s:6090   .text.vCurrentDirect_Modify:00000012 $t

UNDEFINED SYMBOLS
Flash_Write_Word
ucDrv_Buf_PutBytes
blDrv_Buf_IsEmpty
Uart_DataPut
USART_ITConfig
ucDrv_Buf_Uart3_Snd
ucDrv_Buf_Uart2_Snd
EEProm_Read
Flash_Read_Word
FLASH_Unlock
FLASH_ErasePage
FLASH_Lock
ucDrv_Buf_GetBytes
blTime2_Update
blWordsCounterStatus
uwTime2WordsCounter
blFramesCounterStatus
uwTime2FramesCounter
__aeabi_uldivmod
