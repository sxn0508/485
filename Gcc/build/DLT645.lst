ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"DLT645.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.dwCheckFrame,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	dwCheckFrame:
  27              	.LFB112:
  28              		.file 1 "../user/source/DLT645.c"
   1:../user/source/DLT645.c **** #include "DLT645.h"
   2:../user/source/DLT645.c **** #include "Time.h"
   3:../user/source/DLT645.c **** #include "Flash.h"
   4:../user/source/DLT645.c **** 
   5:../user/source/DLT645.c **** /*
   6:../user/source/DLT645.c **** #define ENABLE_ESTATUS						//µç±í×´Ì¬×ÖĞŞ¸Ä¹¦ÄÜ 
   7:../user/source/DLT645.c **** #define ENABLE_CURRENT_DEVIATION			//µçÁ÷¸÷Ïà²îÖµĞŞ¸Ä¹¦ÄÜ
   8:../user/source/DLT645.c **** #define ENABLE_CURRENT_LIMIT				//µçÁ÷×î´óÖµĞŞ¸Ä¹¦ÄÜ
   9:../user/source/DLT645.c **** #define ENABLE_ENERGY_MODIFY				//ĞŞ¸ÄÕıÏòÓĞ¹¦
  10:../user/source/DLT645.c **** #define ENABLE_INFR							//ĞŞ¸ÄÕıÏòÓĞ¹¦
  11:../user/source/DLT645.c **** */
  12:../user/source/DLT645.c **** const DefDataIDHandle INFRDataID_Handle_List[] = {
  13:../user/source/DLT645.c ****     {{0X33, 0X37, 0X34, 0X35}, Get_VChange_State},       //À©³ä£ºµçÑ¹ĞŞ¸ÄÊ¹ÄÜ/½ûÄÜID_02010400,
  14:../user/source/DLT645.c ****     {{0X33, 0X39, 0X34, 0X35}, Query_Voltage_Limit},     //À©³ä£ºµçÑ¹ÏŞÖµ²éÑ¯ID_02010600,
  15:../user/source/DLT645.c ****     {{0X33, 0X3A, 0X34, 0X35}, Default_Reset},           //À©³ä£ºµçÑ¹ĞŞ¸Ä¹¦ÄÜ»Ö¸´³ö³§ÉèÖÃID_0201070
  16:../user/source/DLT645.c ****     {{0X33, 0X3B, 0X34, 0X35}, vVoltage_SetMaxValue},    //À©³ä£ºµçÑ¹ÉèÖÃºÏ¸ñÉÏÏŞ
  17:../user/source/DLT645.c ****     {{0X33, 0X3C, 0X34, 0X35}, vVoltage_SetMinValue},    //À©³ä£ºµçÑ¹ÉèÖÃºÏ¸ñÏÂÏŞ
  18:../user/source/DLT645.c ****     {{0X33, 0X3D, 0X34, 0X35}, vVoltage_SetMaxMaxValue}, //À©³ä£ºµçÑ¹ÉèÖÃĞŞ¸ÄÉÏÏŞ
  19:../user/source/DLT645.c ****     {{0X33, 0X3E, 0X34, 0X35}, vVoltage_SetMinMinValue}, //À©³ä£ºµçÑ¹ÉèÖÃĞŞ¸ÄÏÂÏŞ
  20:../user/source/DLT645.c ****     {{0X33, 0X73, 0X34, 0X33}, vEnergy_Modify_AbleSet},  //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸ÄÊ¹ÄÜ/½ûÄÜID_0001
  21:../user/source/DLT645.c ****     {{0X33, 0X74, 0X34, 0X33}, vEnergy_Modify_RaitoSet}, //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä±ÈÀıÉèÖÃID_00014
  22:../user/source/DLT645.c ****     {{0X33, 0X75, 0X34, 0X33}, vEnergy_Modify_Reset},    //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä»Ö¸´³ö³§ÉèÖÃID_0
  23:../user/source/DLT645.c ****     {{0X33, 0X76, 0X34, 0X33}, vEnergy_Modify_ReadSet},  //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä¶ÁÈ¡Éè£ºÖÃ
  24:../user/source/DLT645.c ****     /*µçÁ÷ÖØ¹ıÔØ*/
  25:../user/source/DLT645.c ****     {{0X33, 0X37, 0X35, 0X35}, vCurrent_Limit_Set},                    //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:µ
  26:../user/source/DLT645.c ****     {{0X33, 0X38, 0X35, 0X35}, vCurrent_Limit_ReadSet},                //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:µ
  27:../user/source/DLT645.c ****     {{0X33, 0X39, 0X35, 0X35}, vCurrent_CTRatio_Set},                  //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:¶
  28:../user/source/DLT645.c ****     {{0X33, 0X3A, 0X35, 0X35}, vCurrent_CTRatio_ReadSet},              //À©³ä£º¶ÁÈ¡µçÁ÷ÖØ¹ıÔØ²ÎÊı:¶
  29:../user/source/DLT645.c ****     {{0X33, 0X3B, 0X35, 0X35}, vCurrent_TransFormer_Capacity_ReadSet}, //À©³ä£º¶ÁÈ¡µçÁ÷ÖØ¹ıÔØ²ÎÊı:±
  30:../user/source/DLT645.c ****     {{0X32, 0X32, 0X32, 0X32}, vRead_Version},                         //À©³ä£º¶ÁÈ¡³ÌĞò°æ±¾
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 2


  31:../user/source/DLT645.c **** };
  32:../user/source/DLT645.c **** const DefDataIDHandle DBDataID_Handle_List[] = {
  33:../user/source/DLT645.c ****     {{0X33, 0X34, 0X34, 0X35}, vVoltageHandle}, //AÏàµçÑ¹ID_02010100,
  34:../user/source/DLT645.c ****     {{0X33, 0X35, 0X34, 0X35}, vVoltageHandle}, //BÏàµçÑ¹ID_02010200,
  35:../user/source/DLT645.c ****     {{0X33, 0X36, 0X34, 0X35}, vVoltageHandle}, //CÏàµçÑ¹ID_02010300,
  36:../user/source/DLT645.c ****     {{0X33, 0X32, 0X34, 0X35}, vVoltageHandle}, //µçÑ¹Êı¾İ¿éID_0201FF00,
  37:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_DEVIATION
  38:../user/source/DLT645.c ****     {{0X33, 0X34, 0X35, 0X35}, vCurrent_Modify}, //AÏàµçÁ÷ID_02020100,
  39:../user/source/DLT645.c ****     {{0X33, 0X35, 0X35, 0X35}, vCurrent_Modify}, //BÏàµçÁ÷ID_02020200,
  40:../user/source/DLT645.c ****     {{0X33, 0X36, 0X35, 0X35}, vCurrent_Modify}, //CÏàµçÁ÷ID_02020300,
  41:../user/source/DLT645.c ****     {{0X33, 0X32, 0X35, 0X35}, vCurrent_Modify}, //µçÁ÷Êı¾İ¿éID_0202FF00,
  42:../user/source/DLT645.c **** #else
  43:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
  44:../user/source/DLT645.c ****     {{0X33, 0X34, 0X35, 0X35}, vCurrent_Limit_Modify}, //AÏàµçÁ÷ID_02020100,
  45:../user/source/DLT645.c ****     {{0X33, 0X35, 0X35, 0X35}, vCurrent_Limit_Modify}, //BÏàµçÁ÷ID_02020200,
  46:../user/source/DLT645.c ****     {{0X33, 0X36, 0X35, 0X35}, vCurrent_Limit_Modify}, //CÏàµçÁ÷ID_02020300,
  47:../user/source/DLT645.c ****     {{0X33, 0X32, 0X35, 0X35}, vCurrent_Limit_Modify}, //µçÁ÷Êı¾İ¿éID_0202FF00,
  48:../user/source/DLT645.c **** #endif
  49:../user/source/DLT645.c **** #endif
  50:../user/source/DLT645.c ****     {{0X37, 0X38, 0X33, 0X38}, Estatus_Modify_CurrentEvent}, //µç±íÔËĞĞ×´Ì¬×Ö4ID_04000504,
  51:../user/source/DLT645.c ****     {{0X38, 0X38, 0X33, 0X38}, Estatus_Modify_CurrentEvent}, //µç±íÔËĞĞ×´Ì¬×Ö5ID_04000505,
  52:../user/source/DLT645.c ****     {{0X39, 0X38, 0X33, 0X38}, Estatus_Modify_CurrentEvent}, //µç±íÔËĞĞ×´Ì¬×Ö6ID_04000506,
  53:../user/source/DLT645.c ****     {{0X3A, 0X38, 0X33, 0X38}, Estatus_Modify_CurrentEvent}, //µç±íÔËĞĞ×´Ì¬×Ö7ID_04000507,
  54:../user/source/DLT645.c ****     {{0X32, 0X38, 0X33, 0X38}, Estatus_Modify_CurrentEvent}, //µç±íÔËĞĞ×´Ì¬×ÖÊı¾İ¿éID_040005FF,
  55:../user/source/DLT645.c ****     {{0X33, 0X33, 0X34, 0X33}, vNowEnergy_Modifier},         //µ±Ç°ÕıÏòÓĞ¹¦×ÜµçÄÜID_00010000,
  56:../user/source/DLT645.c ****     {{0X33, 0X34, 0X34, 0X33}, vNowEnergy_Modifier},         //µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜID_00010100,
  57:../user/source/DLT645.c ****     {{0X33, 0X35, 0X34, 0X33}, vNowEnergy_Modifier},         //µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ2µçÄÜID_00010200,
  58:../user/source/DLT645.c ****     {{0X33, 0X36, 0X34, 0X33}, vNowEnergy_Modifier},         //µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ3µçÄÜID_00010300,
  59:../user/source/DLT645.c ****     {{0X33, 0X37, 0X34, 0X33}, vNowEnergy_Modifier},         //µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ4µçÄÜID_00010400,
  60:../user/source/DLT645.c ****     {{0X33, 0X32, 0X34, 0X33}, vNowEnergy_Modifier},         //µ±Ç°ÕıÏòÓĞ¹¦µçÄÜÊı¾İ¿éID_0001FF00,
  61:../user/source/DLT645.c ****     {{0X33, 0X33, 0X48, 0X33}, vNowEnergy_Modifier},         //µ±Ç°AÏàÕıÏòÓĞ¹¦ID_00150000,
  62:../user/source/DLT645.c ****     {{0X33, 0X33, 0X5C, 0X33}, vNowEnergy_Modifier},         //µ±Ç°BÏàÕıÏòÓĞ¹¦ID_00290000,
  63:../user/source/DLT645.c ****     {{0X33, 0X33, 0X70, 0X33}, vNowEnergy_Modifier},         //µ±Ç°CÏàÕıÏòÓĞ¹¦ID_003D0000,
  64:../user/source/DLT645.c ****     {{0X34, 0X34, 0X39, 0X38}, vDayfrozen_Modifier},         //ÉÏ1ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£©
  65:../user/source/DLT645.c ****     {{0X35, 0X34, 0X39, 0X38}, vDayfrozen_Modifier},         //ÉÏ2ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£©
  66:../user/source/DLT645.c ****     {{0X36, 0X34, 0X39, 0X38}, vDayfrozen_Modifier},         //ÉÏ3ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£©
  67:../user/source/DLT645.c ****     {{0X34, 0X33, 0X34, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦×ÜµçÄÜID_00010001,
  68:../user/source/DLT645.c ****     {{0X34, 0X34, 0X34, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜID_0001010
  69:../user/source/DLT645.c ****     {{0X34, 0X35, 0X34, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜ ID_000102
  70:../user/source/DLT645.c ****     {{0X34, 0X36, 0X34, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜID_0001030
  71:../user/source/DLT645.c ****     {{0X34, 0X37, 0X34, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜID_0001040
  72:../user/source/DLT645.c ****     {{0X34, 0X32, 0X34, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦µçÄÜÊı¾İ¿éID_0001FF
  73:../user/source/DLT645.c ****     {{0X34, 0X33, 0X48, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕAÏàÕıÏòÓĞ¹¦µçÄÜID_00150001,
  74:../user/source/DLT645.c ****     {{0X34, 0X33, 0X5C, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕBÏàÕıÏòÓĞ¹¦µçÄÜID_00290001,
  75:../user/source/DLT645.c ****     {{0X34, 0X33, 0X70, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕCÏàÕıÏòÓĞ¹¦µçÄÜID_003D0001,
  76:../user/source/DLT645.c ****     {{0X33, 0X37, 0X34, 0X35}, Get_VChange_State},           //À©³ä£ºµçÑ¹ĞŞ¸ÄÊ¹ÄÜ/½ûÄÜID_02010400,
  77:../user/source/DLT645.c ****     {{0X33, 0X38, 0X34, 0X35}, Set_Voltage_Limit},           //À©³ä£ºµçÑ¹ÏŞÖµÉèÖÃID_02010500,
  78:../user/source/DLT645.c ****     {{0X33, 0X39, 0X34, 0X35}, Query_Voltage_Limit},         //À©³ä£ºµçÑ¹ÏŞÖµ²éÑ¯ID_02010600,
  79:../user/source/DLT645.c ****     {{0X33, 0X3A, 0X34, 0X35}, Default_Reset},               //À©³ä£ºµçÑ¹ĞŞ¸Ä¹¦ÄÜ»Ö¸´³ö³§ÉèÖÃID_020
  80:../user/source/DLT645.c **** 
  81:../user/source/DLT645.c ****     /*µçÁ÷ÖØ¹ıÔØ*/
  82:../user/source/DLT645.c ****     {{0X33, 0X37, 0X35, 0X35}, vCurrent_Limit_Set},                    //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:µ
  83:../user/source/DLT645.c ****     {{0X33, 0X38, 0X35, 0X35}, vCurrent_Limit_ReadSet},                //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:µ
  84:../user/source/DLT645.c ****     {{0X33, 0X39, 0X35, 0X35}, vCurrent_CTRatio_Set},                  //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:¶
  85:../user/source/DLT645.c ****     {{0X33, 0X3A, 0X35, 0X35}, vCurrent_CTRatio_ReadSet},              //À©³ä£º¶ÁÈ¡µçÁ÷ÖØ¹ıÔØ²ÎÊı:¶
  86:../user/source/DLT645.c ****     {{0X33, 0X3B, 0X35, 0X35}, vCurrent_TransFormer_Capacity_ReadSet}, //À©³ä£º¶ÁÈ¡µçÁ÷ÖØ¹ıÔØ²ÎÊı:±
  87:../user/source/DLT645.c **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 3


  88:../user/source/DLT645.c ****     {{0X33, 0X73, 0X34, 0X33}, vEnergy_Modify_AbleSet},   //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸ÄÊ¹ÄÜ/½ûÄÜID_000
  89:../user/source/DLT645.c ****     {{0X33, 0X74, 0X34, 0X33}, vEnergy_Modify_RaitoSet},  //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä±ÈÀıÉèÖÃID_0001
  90:../user/source/DLT645.c ****     {{0X33, 0X75, 0X34, 0X33}, vEnergy_Modify_Reset},     //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿»Ø¸´³ö³§ÉèÖÃID_0001
  91:../user/source/DLT645.c ****     {{0X33, 0X76, 0X34, 0X33}, vEnergy_Modify_ReadSet},   //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä¶ÁÈ¡ÉèÖÃ
  92:../user/source/DLT645.c ****     {{0X33, 0X77, 0X34, 0X33}, vEnergy_Modify_ReadValue}, //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿¶ÁÈ¡´æ´¢µÄÕæÊµÖµºÍĞ
  93:../user/source/DLT645.c ****     /*4ºÅ²¹ÒÅ¸ººÉÇúÏßÁ¬Ğø³­¶Á²¿·ÖÖĞµÄµçÑ¹ÇúÏß¡¢µçÁ÷ÇúÏßĞŞ¸Ä,2018Äê8ÔÂ7ÈÕ20:53:4£º0*/
  94:../user/source/DLT645.c ****     {{0X33, 0X34, 0X43, 0X39}, vLoadProfile_Voltage_Modify}, //AÏàµçÑ¹ÇúÏßÁ¬Ğø³­¶ÁID_06100101,
  95:../user/source/DLT645.c ****     {{0X34, 0X34, 0X43, 0X39}, vLoadProfile_Voltage_Modify}, //BµçÑ¹Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_06100102,
  96:../user/source/DLT645.c ****     {{0X35, 0X34, 0X43, 0X39}, vLoadProfile_Voltage_Modify}, //CµçÑ¹Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_06100103,
  97:../user/source/DLT645.c ****     {{0X32, 0X34, 0X43, 0X39}, vLoadProfile_Voltage_Modify}, //µçÑ¹Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_061001FF,
  98:../user/source/DLT645.c ****     {{0X33, 0X35, 0X43, 0X39}, vLoadProfile_Current_Modify}, //AÏàµçÁ÷ÇúÏßÁ¬Ğø³­¶ÁID_06100201,
  99:../user/source/DLT645.c ****     {{0X34, 0X35, 0X43, 0X39}, vLoadProfile_Current_Modify}, //BµçÁ÷Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_06100202,
 100:../user/source/DLT645.c ****     {{0X35, 0X35, 0X43, 0X39}, vLoadProfile_Current_Modify}, //CµçÁ÷Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_06100203,
 101:../user/source/DLT645.c ****     {{0X32, 0X35, 0X43, 0X39}, vLoadProfile_Current_Modify}, //µçÁ÷Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_061002FF,
 102:../user/source/DLT645.c ****     {{0X32, 0X32, 0X32, 0X32}, vRead_Version},               //À©³ä£º¶ÁÈ¡³ÌĞò°æ±¾
 103:../user/source/DLT645.c **** };
 104:../user/source/DLT645.c **** 
 105:../user/source/DLT645.c **** FrameHandleStatus Voltage_Frame_Status;
 106:../user/source/DLT645.c **** uint8_t ucRcvStatus = 0;
 107:../user/source/DLT645.c **** uint8_t ucApp_Buf_DB2ZD[DATA_BUF_SIZE];            //µç±íÉÏĞĞÖ¡Ó¦ÓÃ»º´æ
 108:../user/source/DLT645.c **** uint8_t ucApp_Buf_ZD2DB[DATA_BUF_SIZE];            //ÖÕ¶ËÏÂĞĞÖ¡Ó¦ÓÃ»º´æ
 109:../user/source/DLT645.c **** uint8_t ucApp_Buf_INFR[DATA_BUF_SIZE];             //ºìÍâ¿ÚÓ¦ÓÃ»º´æ
 110:../user/source/DLT645.c **** uint8_t uc645DataDomainLength = 0;                 //645Ö¡Êı¾İÓò³¤¶È
 111:../user/source/DLT645.c **** uint8_t Voltage_Change_State = Voltage_NOChange;   //µçÑ¹ÊÇ·ñĞŞ¸Ä±êÖ¾Î»£¬Ä¬ÈÏĞŞ¸Ä×´Ì¬
 112:../user/source/DLT645.c **** uint8_t Dayfrozen_Change_State = DAYFROZEN_CHANGE; //µçÁ¿ÊÇ·ñĞŞ¸Ä£¬Ä¬ÈÏĞŞ¸Ä
 113:../user/source/DLT645.c **** uint8_t ucDayfrozen_Modify_Ratio;                  //µçÁ¿µ÷Õû±ÈÀı
 114:../user/source/DLT645.c **** int Voltage_MAX;                                   //µçÑ¹ºÏ¸ñÉÏÏŞ
 115:../user/source/DLT645.c **** int Voltage_MIN;                                   //µçÑ¹ºÏ¸ñÏÂÏŞ
 116:../user/source/DLT645.c **** int A_Voltage = WORK_VOLTAGE;                      //×îºóÒ»´ÎĞŞ¸ÄºóµÄAÏàµçÑ¹Öµ
 117:../user/source/DLT645.c **** int B_Voltage = WORK_VOLTAGE;                      //×îºóÒ»´ÎĞŞ¸ÄºóµÄBÏàµçÑ¹Öµ
 118:../user/source/DLT645.c **** int C_Voltage = WORK_VOLTAGE;                      //×îºóÒ»´ÎĞŞ¸ÄºóµÄCÏàµçÑ¹Öµ
 119:../user/source/DLT645.c **** CURRENT Acurrent = {0, 0, false};
 120:../user/source/DLT645.c **** CURRENT Bcurrent = {0, 0, false};
 121:../user/source/DLT645.c **** CURRENT Ccurrent = {0, 0, false};
 122:../user/source/DLT645.c **** 
 123:../user/source/DLT645.c **** /*±äÑ¹Æ÷½á¹¹Ìå¶¨Òå*/
 124:../user/source/DLT645.c **** TransFormer_TypeDef TransFormer;
 125:../user/source/DLT645.c **** 
 126:../user/source/DLT645.c **** /*µçÁ÷ÖØÔØ¡¢¹ıÔØµ÷ÕûÏà¹Ø²ÎÊı
 127:../user/source/DLT645.c **** #ifdef	  TRANSFORMER_CAPACITY_50KVA
 128:../user/source/DLT645.c **** 	#define TransFormer.CT2_CurrentLimit					2700						//50KVA±äÑ¹Æ÷µÄCT¶ş´Î²àÈıÏàµçÁ÷ºÍµÄ×î´óÖµ£¬À©´ó
 129:../user/source/DLT645.c **** #endif
 130:../user/source/DLT645.c **** #ifdef	  TRANSFORMER_CAPACITY_100KVA
 131:../user/source/DLT645.c **** 	#define TransFormer.CT2_CurrentLimit					5400						//100KVA±äÑ¹Æ÷µÄCT¶ş´Î²àÈıÏàµçÁ÷ºÍµÄ×î´óÖµ£¬À©´
 132:../user/source/DLT645.c **** #endif
 133:../user/source/DLT645.c **** #ifdef	  TRANSFORMER_CAPACITY_200KVA
 134:../user/source/DLT645.c **** 	#define TransFormer.CT2_CurrentLimit					10800						//200KVA±äÑ¹Æ÷µÄCT¶ş´Î²àÈıÏàµçÁ÷ºÍµÄ×î´óÖµ£¬À©
 135:../user/source/DLT645.c **** #endif
 136:../user/source/DLT645.c **** #ifdef	  TRANSFORMER_CAPACITY_400KVA
 137:../user/source/DLT645.c **** 	#define TransFormer.CT2_CurrentLimit					21600						//400KVA±äÑ¹Æ÷µÄCT¶ş´Î²àÈıÏàµçÁ÷ºÍµÄ×î´óÖµ£¬À©
 138:../user/source/DLT645.c **** #endif
 139:../user/source/DLT645.c **** */
 140:../user/source/DLT645.c **** 
 141:../user/source/DLT645.c **** /********************************************************************
 142:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½«±¨ÎÄ´æµ½Ó¦ÓÃ²ã»º´æ£¬²¢ÅĞ¶ÏÊÇ·ñÎª645Ö¡
 143:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë£¬Çı¶¯²ã»º´æÖ¸Õë
 144:../user/source/DLT645.c ****  * Êä    ³ö£ºÈç¹û¶¼ºÏ·¨·µ»Øtrue
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 4


 145:../user/source/DLT645.c ****  ·ñÔò·µ»Øfalse
 146:../user/source/DLT645.c ****  *           
 147:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 148:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 149:../user/source/DLT645.c ****  **********************************************************************/
 150:../user/source/DLT645.c **** 
 151:../user/source/DLT645.c **** bool blRecvFrame(UCDRV_BUF *ucDrv_Buf, uint8_t *ucdata_buf)
 152:../user/source/DLT645.c **** {
 153:../user/source/DLT645.c ****     /*ÊÕÖ¡×´Ì¬*/
 154:../user/source/DLT645.c ****     switch (ucRcvStatus)
 155:../user/source/DLT645.c ****     {
 156:../user/source/DLT645.c ****     /*Ö¡Í·68*/
 157:../user/source/DLT645.c ****     case SEARCH_SOH:
 158:../user/source/DLT645.c ****     {
 159:../user/source/DLT645.c ****         /*Î´¶Áµ½Ö¸¶¨×Ö½ÚÊı£¬Ìø³ö·ÖÖ§£¬·µ»Øfalse*/
 160:../user/source/DLT645.c ****         if (ucDrv_Buf_GetBytes(ucDrv_Buf, ucdata_buf, 1) == false)
 161:../user/source/DLT645.c ****         {
 162:../user/source/DLT645.c ****             break;
 163:../user/source/DLT645.c ****         }
 164:../user/source/DLT645.c ****         /*¶Áµ½Ò»¸ö×Ö½Ú*/
 165:../user/source/DLT645.c ****         else
 166:../user/source/DLT645.c ****         {
 167:../user/source/DLT645.c ****             /*Ö¡Í·²»ºÏ·¨£¬·µ»Øfalse*/
 168:../user/source/DLT645.c ****             if (*(ucdata_buf + 0) != 0X68)
 169:../user/source/DLT645.c ****             {
 170:../user/source/DLT645.c ****                 break;
 171:../user/source/DLT645.c ****             }
 172:../user/source/DLT645.c ****             else
 173:../user/source/DLT645.c ****             {
 174:../user/source/DLT645.c ****                 /*Ö¡Í·ºÏ·¨£¬ÊÕÖ¡×´¸ÄÎªRCV_DATA1*/
 175:../user/source/DLT645.c ****                 ucRcvStatus = RCV_DATA1;
 176:../user/source/DLT645.c ****                 blWordsCounterStatus = true;
 177:../user/source/DLT645.c ****             }
 178:../user/source/DLT645.c ****         }
 179:../user/source/DLT645.c ****     }
 180:../user/source/DLT645.c ****     case RCV_DATA1:
 181:../user/source/DLT645.c ****     {
 182:../user/source/DLT645.c ****         /*¶Á9¸ö×Ö½ÚÊ§°Ü£¬Ìø³ö·ÖÖ§£¬·µ»Øfalse*/
 183:../user/source/DLT645.c ****         if (ucDrv_Buf_GetBytes(ucDrv_Buf, ucdata_buf + 1, 9) == false)
 184:../user/source/DLT645.c ****         {
 185:../user/source/DLT645.c ****             /*DLT645_WORDS_DELAY_MAX£¬×Ö½Ú½ÓÊÕ³¬Ê±*/
 186:../user/source/DLT645.c ****             if (blTime2_Update(uwTime2WordsCounter, DLT645_WORDS_DELAY_MAX))
 187:../user/source/DLT645.c ****             {
 188:../user/source/DLT645.c ****                 /*³¬Ê±ÔòÖØĞÂÅĞ¶ÏÖ¡Í·68£¬²»³¬Ê±Ôò¼ÌĞøÕÒ³¤¶È£»*/
 189:../user/source/DLT645.c ****                 ucRcvStatus = SEARCH_SOH;
 190:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 191:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 192:../user/source/DLT645.c ****             }
 193:../user/source/DLT645.c ****             break;
 194:../user/source/DLT645.c ****         }
 195:../user/source/DLT645.c ****         else //¶Á68Ö®ºó9¸ö×Ö½Ú³É¹¦
 196:../user/source/DLT645.c ****         {
 197:../user/source/DLT645.c ****             if ((*(ucdata_buf + 7) != 0X68) || ((*(ucdata_buf + 9) + 12) >= 255))
 198:../user/source/DLT645.c ****             {
 199:../user/source/DLT645.c ****                 ucRcvStatus = SEARCH_SOH; //µÚÆß¸ö×Ö½Ú²»Îª68 ,Ìø³ö£¬·µ»Øfalse£¬ÖØĞÂÕÒ68
 200:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 201:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 5


 202:../user/source/DLT645.c ****                 break;
 203:../user/source/DLT645.c ****             }
 204:../user/source/DLT645.c ****             else
 205:../user/source/DLT645.c ****             {                                              //µÚÆß¸ö×Ö½ÚÊÇ68
 206:../user/source/DLT645.c ****                 uc645DataDomainLength = *(ucdata_buf + 9); //¶Á³ö645Ö¡³¤¶ÈL
 207:../user/source/DLT645.c ****                 ucRcvStatus = RCV_DATA2;                   //Ö¸ÏòÏÂÒ»²¿·Ö
 208:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 209:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 210:../user/source/DLT645.c ****                 blWordsCounterStatus = true;
 211:../user/source/DLT645.c ****             }
 212:../user/source/DLT645.c ****         }
 213:../user/source/DLT645.c ****     }
 214:../user/source/DLT645.c ****     case RCV_DATA2:
 215:../user/source/DLT645.c ****     {
 216:../user/source/DLT645.c ****         if (ucDrv_Buf_GetBytes(ucDrv_Buf, ucdata_buf + 10, uc645DataDomainLength + 2) == false)
 217:../user/source/DLT645.c ****         {                                                                    //¶ÁºóĞø×Ö½ÚÊ§°Ü£¬Ìø³ö
 218:../user/source/DLT645.c ****             if (blTime2_Update(uwTime2WordsCounter, DLT645_WORDS_DELAY_MAX)) //DLT645_WORDS_DELAY_M
 219:../user/source/DLT645.c ****             {                                                                //Èç¹û³¬Ê±£¬ÔòÖØĞÂÕÒ68
 220:../user/source/DLT645.c ****                 ucRcvStatus = SEARCH_SOH;
 221:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 222:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 223:../user/source/DLT645.c ****             }
 224:../user/source/DLT645.c ****             break;
 225:../user/source/DLT645.c ****         }
 226:../user/source/DLT645.c ****         else //¶Á³öÖ¸¶¨×Ö½ÚÊıµÄÒ»Ö¡
 227:../user/source/DLT645.c ****         {
 228:../user/source/DLT645.c ****             ucRcvStatus = SEARCH_SOH; //×´Ì¬¸ÄÎª²éÕÒ68£»
 229:../user/source/DLT645.c ****             blWordsCounterStatus = false;
 230:../user/source/DLT645.c ****             uwTime2WordsCounter = 0;
 231:../user/source/DLT645.c ****             if (dwCheckFrame(ucdata_buf) != OK_1)
 232:../user/source/DLT645.c ****             {
 233:../user/source/DLT645.c ****                 //	if (blTime2_Update(uwTime2WordsCounter,DLT645_WORDS_DELAY_MAX)) //DLT645_WORDS_D
 234:../user/source/DLT645.c ****                 //{ //Èç¹û³¬Ê±£¬ÔòÖØĞÂÕÒ68£¬·ñÔòÖØĞÂ½ÓÊÕºóĞø×Ö½Ú£»Ìø³ö·ÖÖ§
 235:../user/source/DLT645.c ****                 //ucRcvStatus = SEARCH_SOH;
 236:../user/source/DLT645.c ****                 //}//Ö¡Ğ£Ñé´íÎó
 237:../user/source/DLT645.c ****                 return false;
 238:../user/source/DLT645.c ****             }
 239:../user/source/DLT645.c ****             else
 240:../user/source/DLT645.c ****             {
 241:../user/source/DLT645.c ****                 //ucRcvStatus = SEARCH_SOH;//×´Ì¬¸ÄÎª²éÕÒ68£»
 242:../user/source/DLT645.c ****                 //blWordsCounterStatus = false;
 243:../user/source/DLT645.c ****                 return true; //ÅĞ¶ÏÊÕÖ¡ÊÇ·ñºÏ¸ñ£¬ºÏ¸ñ·µ»Øtrue£¬·ñÔò·µ»Øfalse
 244:../user/source/DLT645.c ****             }
 245:../user/source/DLT645.c ****         }
 246:../user/source/DLT645.c ****     }
 247:../user/source/DLT645.c ****     break;
 248:../user/source/DLT645.c ****     default:
 249:../user/source/DLT645.c ****         break;
 250:../user/source/DLT645.c ****     }
 251:../user/source/DLT645.c ****     return false;
 252:../user/source/DLT645.c **** }
 253:../user/source/DLT645.c **** 
 254:../user/source/DLT645.c **** /********************************************************************
 255:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÅĞ¶ÏÖ¡µÄĞ£ÑéºÍ¡¢½áÊø×Ö½ÚÊÇ·ñºÏ·¨
 256:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 257:../user/source/DLT645.c ****  * Êä    ³ö£ºÈç¹û¶¼ºÏ·¨·µ»Øtrue
 258:../user/source/DLT645.c ****  ·ñÔò·µ»Øfalse
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 6


 259:../user/source/DLT645.c ****  *           
 260:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 261:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 262:../user/source/DLT645.c ****  **********************************************************************/
 263:../user/source/DLT645.c **** STATUS dwCheckFrame(uint8_t *pucBuffer)
 264:../user/source/DLT645.c **** {
  29              		.loc 1 264 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35 0000 10B4     		push	{r4}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 4, -4
  39              	.LVL1:
 265:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
 266:../user/source/DLT645.c ****     uint8_t i;
 267:../user/source/DLT645.c ****     //ÇóÈ¡Ğ£ÑéºÍ
 268:../user/source/DLT645.c ****     for (i = 0; i < uc645DataDomainLength + 10; i++)
  40              		.loc 1 268 0
  41 0002 0023     		movs	r3, #0
 265:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
  42              		.loc 1 265 0
  43 0004 1A46     		mov	r2, r3
  44              		.loc 1 268 0
  45 0006 04E0     		b	.L2
  46              	.LVL2:
  47              	.L3:
 269:../user/source/DLT645.c ****     {
 270:../user/source/DLT645.c ****         ucCheckData += pucBuffer[i];
  48              		.loc 1 270 0 discriminator 3
  49 0008 C45C     		ldrb	r4, [r0, r3]	@ zero_extendqisi2
  50 000a 2244     		add	r2, r2, r4
  51              	.LVL3:
  52 000c D2B2     		uxtb	r2, r2
  53              	.LVL4:
 268:../user/source/DLT645.c ****     {
  54              		.loc 1 268 0 discriminator 3
  55 000e 0133     		adds	r3, r3, #1
  56              	.LVL5:
  57 0010 DBB2     		uxtb	r3, r3
  58              	.LVL6:
  59              	.L2:
 268:../user/source/DLT645.c ****     {
  60              		.loc 1 268 0 is_stmt 0 discriminator 1
  61 0012 0C4C     		ldr	r4, .L8
  62 0014 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
  63 0016 01F10A04 		add	r4, r1, #10
  64 001a A342     		cmp	r3, r4
  65 001c F4DB     		blt	.L3
 271:../user/source/DLT645.c ****     }
 272:../user/source/DLT645.c ****     //ÅĞ¶ÏĞ£ÑéºÍºÍ½áÊø·û
 273:../user/source/DLT645.c ****     if ((ucCheckData == pucBuffer[uc645DataDomainLength + 10]) && (pucBuffer[uc645DataDomainLength 
  66              		.loc 1 273 0 is_stmt 1
  67 001e 4318     		adds	r3, r0, r1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 7


  68              	.LVL7:
  69 0020 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
  70 0022 9A42     		cmp	r2, r3
  71 0024 06D1     		bne	.L5
  72              		.loc 1 273 0 is_stmt 0 discriminator 1
  73 0026 0144     		add	r1, r1, r0
  74 0028 CB7A     		ldrb	r3, [r1, #11]	@ zero_extendqisi2
  75 002a 162B     		cmp	r3, #22
  76 002c 05D0     		beq	.L6
 274:../user/source/DLT645.c ****     {
 275:../user/source/DLT645.c ****         return OK_1;
 276:../user/source/DLT645.c ****     }
 277:../user/source/DLT645.c ****     else
 278:../user/source/DLT645.c ****     {
 279:../user/source/DLT645.c ****         return ERROR_1;
  77              		.loc 1 279 0 is_stmt 1
  78 002e 4FF0FF30 		mov	r0, #-1
  79              	.LVL8:
  80 0032 03E0     		b	.L4
  81              	.LVL9:
  82              	.L5:
  83 0034 4FF0FF30 		mov	r0, #-1
  84              	.LVL10:
  85 0038 00E0     		b	.L4
  86              	.LVL11:
  87              	.L6:
 275:../user/source/DLT645.c ****     }
  88              		.loc 1 275 0
  89 003a 0020     		movs	r0, #0
  90              	.LVL12:
  91              	.L4:
 280:../user/source/DLT645.c ****     }
 281:../user/source/DLT645.c **** }
  92              		.loc 1 281 0
  93 003c 5DF8044B 		ldr	r4, [sp], #4
  94              	.LCFI1:
  95              		.cfi_restore 4
  96              		.cfi_def_cfa_offset 0
  97 0040 7047     		bx	lr
  98              	.L9:
  99 0042 00BF     		.align	2
 100              	.L8:
 101 0044 00000000 		.word	.LANCHOR0
 102              		.cfi_endproc
 103              	.LFE112:
 105              		.section	.text.BCD_Verity,"ax",%progbits
 106              		.align	2
 107              		.thumb
 108              		.thumb_func
 110              	BCD_Verity:
 111              	.LFB122:
 282:../user/source/DLT645.c **** 
 283:../user/source/DLT645.c **** /********************************************************************
 284:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµç±í£º²àÊÕÖ¡Êı¾İ±êÊ¶·ÖÎö´¦Àí
 285:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 286:../user/source/DLT645.c ****  * Êä    ³ö£ºÊı¾İ±êÊ¶
 287:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 8


 288:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.8
 289:../user/source/DLT645.c ****  **********************************************************************/
 290:../user/source/DLT645.c **** void vDBDataID_Handle(uint8_t *pucBuffer)
 291:../user/source/DLT645.c **** {
 292:../user/source/DLT645.c ****     uint8_t i;
 293:../user/source/DLT645.c ****     uint16_t idcount;
 294:../user/source/DLT645.c ****     idcount = sizeof(DBDataID_Handle_List) / sizeof(DBDataID_Handle_List[0]);
 295:../user/source/DLT645.c ****     for (i = 0; i < idcount; i++)
 296:../user/source/DLT645.c ****     {
 297:../user/source/DLT645.c ****         if ((DBDataID_Handle_List[i].Data_ID[0] == pucBuffer[10]) &&
 298:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 299:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 300:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 301:../user/source/DLT645.c ****             break;
 302:../user/source/DLT645.c ****     }
 303:../user/source/DLT645.c ****     if (i < idcount)
 304:../user/source/DLT645.c ****     {
 305:../user/source/DLT645.c **** #ifndef ENABLE_CURRENT_DEVIATION
 306:../user/source/DLT645.c ****         if (DBDataID_Handle_List[i].Handle == vCurrent_Modify)
 307:../user/source/DLT645.c ****             return;
 308:../user/source/DLT645.c **** #endif
 309:../user/source/DLT645.c **** #ifndef ENABLE_CURRENT_LIMIT
 310:../user/source/DLT645.c ****         if (DBDataID_Handle_List[i].Handle == vCurrent_Limit_Modify)
 311:../user/source/DLT645.c ****             return;
 312:../user/source/DLT645.c **** #endif
 313:../user/source/DLT645.c **** #ifndef ENABLE_ESTATUS
 314:../user/source/DLT645.c ****         if (DBDataID_Handle_List[i].Handle == Estatus_Modify_CurrentEvent)
 315:../user/source/DLT645.c ****             return;
 316:../user/source/DLT645.c **** #endif
 317:../user/source/DLT645.c **** #ifndef ENABLE_ENERGY_MODIFY
 318:../user/source/DLT645.c ****         if ((DBDataID_Handle_List[i].Handle == vNowEnergy_Modifier) ||
 319:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vDayfrozen_Modifier)) ||
 320:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vAccountEnergy_Modify)) ||
 321:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_AbleSet)) ||
 322:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_RaitoSet)) ||
 323:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_Reset)))
 324:../user/source/DLT645.c ****             return;
 325:../user/source/DLT645.c **** #endif
 326:../user/source/DLT645.c ****         DBDataID_Handle_List[i].Handle(pucBuffer);
 327:../user/source/DLT645.c ****     }
 328:../user/source/DLT645.c ****     else
 329:../user/source/DLT645.c ****         return;
 330:../user/source/DLT645.c **** }
 331:../user/source/DLT645.c **** 
 332:../user/source/DLT645.c **** /********************************************************************
 333:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ººìÍâ²àÊÕÖ¡Êı¾İ±êÊ¶·ÖÎö´¦Àí
 334:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 335:../user/source/DLT645.c ****  * Êä    ³ö£ºÊı¾İ±êÊ¶
 336:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 337:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.8
 338:../user/source/DLT645.c ****  **********************************************************************/
 339:../user/source/DLT645.c **** void vINFRDataID_Handle(uint8_t *pucBuffer)
 340:../user/source/DLT645.c **** {
 341:../user/source/DLT645.c ****     uint8_t i;
 342:../user/source/DLT645.c ****     uint16_t idcount;
 343:../user/source/DLT645.c ****     idcount = sizeof(INFRDataID_Handle_List) / sizeof(INFRDataID_Handle_List[0]);
 344:../user/source/DLT645.c ****     for (i = 0; i < idcount; i++)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 9


 345:../user/source/DLT645.c ****     {
 346:../user/source/DLT645.c ****         if ((INFRDataID_Handle_List[i].Data_ID[0] == pucBuffer[10]) &&
 347:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 348:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 349:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 350:../user/source/DLT645.c ****             break;
 351:../user/source/DLT645.c ****     }
 352:../user/source/DLT645.c ****     if (i < idcount)
 353:../user/source/DLT645.c ****     {
 354:../user/source/DLT645.c **** #ifndef ENABLE_ENERGY_MODIFY
 355:../user/source/DLT645.c ****         if (((DBDataID_Handle_List[i].Handle == vEnergy_Modify_AbleSet)) ||
 356:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_RaitoSet)) ||
 357:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_Reset)) ||
 358:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_ReadSet)) ||
 359:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_ReadValue)))
 360:../user/source/DLT645.c ****             return;
 361:../user/source/DLT645.c **** #endif
 362:../user/source/DLT645.c ****         INFRDataID_Handle_List[i].Handle(pucBuffer);
 363:../user/source/DLT645.c ****     }
 364:../user/source/DLT645.c ****     else
 365:../user/source/DLT645.c ****         return;
 366:../user/source/DLT645.c **** }
 367:../user/source/DLT645.c **** 
 368:../user/source/DLT645.c **** /********************************************************************
 369:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÀ©³äÖ¡£º¸ü¸ÄµçÑ¹ĞŞ¸Ä±êÖ¾Î»
 370:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 371:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
 372:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 373:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 374:../user/source/DLT645.c ****  **********************************************************************/
 375:../user/source/DLT645.c **** void Get_VChange_State(uint8_t *pucBuffer)
 376:../user/source/DLT645.c **** {
 377:../user/source/DLT645.c ****     uint8_t i;
 378:../user/source/DLT645.c ****     if (pucBuffer[14] == 0x34)
 379:../user/source/DLT645.c ****     {
 380:../user/source/DLT645.c ****         Voltage_Change_State = Voltage_NOChange;
 381:../user/source/DLT645.c ****     }
 382:../user/source/DLT645.c ****     if (pucBuffer[14] == 0x33)
 383:../user/source/DLT645.c ****     {
 384:../user/source/DLT645.c ****         Voltage_Change_State = Voltage_Change;
 385:../user/source/DLT645.c ****     }
 386:../user/source/DLT645.c ****     if (ERROR == Flash_Write_Word(FLASH_VChangeState_Addr, Voltage_Change_State))
 387:../user/source/DLT645.c ****     {
 388:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
 389:../user/source/DLT645.c ****     }
 390:../user/source/DLT645.c ****     else
 391:../user/source/DLT645.c ****         pucBuffer[8] = 0x94;
 392:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
 393:../user/source/DLT645.c ****     pucBuffer[10] = 0x00;
 394:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 395:../user/source/DLT645.c ****     {
 396:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
 397:../user/source/DLT645.c ****     }
 398:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
 399:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 400:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
 401:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 10


 402:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 403:../user/source/DLT645.c ****     {
 404:../user/source/DLT645.c ****         Uart_DataPut(USART3);
 405:../user/source/DLT645.c ****     }
 406:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
 407:../user/source/DLT645.c **** #ifdef ENABLE_INFR
 408:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 12);
 409:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
 410:../user/source/DLT645.c ****     {
 411:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
 412:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 413:../user/source/DLT645.c ****     }
 414:../user/source/DLT645.c **** #endif
 415:../user/source/DLT645.c **** }
 416:../user/source/DLT645.c **** /********************************************************************
 417:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÀ©³äÖ¡£ºµçÑ¹ÏŞÖµÉèÖÃ
 418:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 419:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
 420:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 421:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 422:../user/source/DLT645.c ****  **********************************************************************/
 423:../user/source/DLT645.c **** void Set_Voltage_Limit(uint8_t *pucBuffer)
 424:../user/source/DLT645.c **** {
 425:../user/source/DLT645.c ****     int VMAX = 0;
 426:../user/source/DLT645.c ****     int VMIN = 0;
 427:../user/source/DLT645.c ****     int i = 0;
 428:../user/source/DLT645.c ****     VMAX = Get_Voltage(pucBuffer[14], pucBuffer[15]);
 429:../user/source/DLT645.c ****     VMIN = Get_Voltage(pucBuffer[16], pucBuffer[17]);
 430:../user/source/DLT645.c ****     if ((VMAX > VMIN) && (VMAX < Voltage_MAX_MAX) //µçÑ¹ÏŞÖµÉèÖÃÌõ¼ş£¬ÉÏÏŞ´óÓÚÏÂÏŞÇÒĞ¡ÓÚÉÏÉÏÏŞ
 431:../user/source/DLT645.c ****         && (VMIN > Voltage_MIN_MIN))              //µçÑ¹ÏÂÏŞ´óÓÚÏÂÏÂÏŞ
 432:../user/source/DLT645.c ****     {
 433:../user/source/DLT645.c ****         Voltage_MAX = VMAX;
 434:../user/source/DLT645.c ****         Voltage_MIN = VMIN;
 435:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX1_Addr, pucBuffer[14]);
 436:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX2_Addr, pucBuffer[15]);
 437:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN1_Addr, pucBuffer[16]);
 438:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN2_Addr, pucBuffer[17]);
 439:../user/source/DLT645.c ****         pucBuffer[8] = 0x94; //ÉèÖÃ³É¹¦±êÖ¾
 440:../user/source/DLT645.c ****     }
 441:../user/source/DLT645.c ****     else
 442:../user/source/DLT645.c ****     {
 443:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4; //ÉèÖÃÒì³£±êÖ¾
 444:../user/source/DLT645.c ****     }
 445:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
 446:../user/source/DLT645.c ****     pucBuffer[10] = 0x00; //ÇóÈ¡Ğ£ÑéºÍ
 447:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 448:../user/source/DLT645.c ****     {
 449:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
 450:../user/source/DLT645.c ****     }
 451:../user/source/DLT645.c ****     pucBuffer[11] = 0x16; //½áÊø·û
 452:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 453:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
 454:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
 455:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 456:../user/source/DLT645.c ****     {
 457:../user/source/DLT645.c ****         Uart_DataPut(USART3);
 458:../user/source/DLT645.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 11


 459:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
 460:../user/source/DLT645.c **** #ifdef ENABLE_INFR
 461:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 12);
 462:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
 463:../user/source/DLT645.c ****     {
 464:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
 465:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 466:../user/source/DLT645.c ****     }
 467:../user/source/DLT645.c **** #endif
 468:../user/source/DLT645.c **** }
 469:../user/source/DLT645.c **** 
 470:../user/source/DLT645.c **** /********************************************************************
 471:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÀ©³äÖ¡£ºµçÑ¹ÏŞÖµ²éÑ¯
 472:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 473:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
 474:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 475:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 476:../user/source/DLT645.c ****  **********************************************************************/
 477:../user/source/DLT645.c **** void Query_Voltage_Limit(uint8_t *pucBuffer)
 478:../user/source/DLT645.c **** {
 479:../user/source/DLT645.c ****     int i = 0;
 480:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
 481:../user/source/DLT645.c ****     pucBuffer[9] = 0x0C;
 482:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(Voltage_MAX_MAX);
 483:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(Voltage_MAX_MAX); //µçÑ¹ÉÏÉÏÏŞ
 484:../user/source/DLT645.c ****     pucBuffer[16] = GetLowByte(Voltage_MIN_MIN);
 485:../user/source/DLT645.c ****     pucBuffer[17] = GetHighByte(Voltage_MIN_MIN); //µçÑ¹ÏÂÏÂÏŞ
 486:../user/source/DLT645.c ****     pucBuffer[18] = GetLowByte(Voltage_MAX);
 487:../user/source/DLT645.c ****     pucBuffer[19] = GetHighByte(Voltage_MAX); //µçÑ¹ÉÏÏŞÖµ
 488:../user/source/DLT645.c ****     pucBuffer[20] = GetLowByte(Voltage_MIN);
 489:../user/source/DLT645.c ****     pucBuffer[21] = GetHighByte(Voltage_MIN); //µçÑ¹ÏÂÏŞÖµ
 490:../user/source/DLT645.c ****     pucBuffer[22] = 0x00;                     //ÇóÈ¡Ğ£ÑéºÍ
 491:../user/source/DLT645.c ****     for (i = 0; i < 24 - 2; i++)              //±¨ÎÄ³¤¶È24
 492:../user/source/DLT645.c ****     {
 493:../user/source/DLT645.c ****         pucBuffer[22] += pucBuffer[i];
 494:../user/source/DLT645.c ****     }
 495:../user/source/DLT645.c ****     pucBuffer[23] = 0x16; //½áÊø·û
 496:../user/source/DLT645.c ****     uc645DataDomainLength = 12;
 497:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 498:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
 499:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 500:../user/source/DLT645.c ****     {
 501:../user/source/DLT645.c ****         Uart_DataPut(USART3);
 502:../user/source/DLT645.c ****     }
 503:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
 504:../user/source/DLT645.c **** #ifdef ENABLE_INFR
 505:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 24);
 506:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
 507:../user/source/DLT645.c ****     {
 508:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
 509:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 510:../user/source/DLT645.c ****     }
 511:../user/source/DLT645.c **** #endif
 512:../user/source/DLT645.c **** }
 513:../user/source/DLT645.c **** 
 514:../user/source/DLT645.c **** /********************************************************************
 515:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ÏŞÖµ»Ö¸´³ö³§
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 12


 516:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 517:../user/source/DLT645.c ****  * Êä    ³ö£º	none
 518:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 519:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 520:../user/source/DLT645.c ****  **********************************************************************/
 521:../user/source/DLT645.c **** void Default_Reset(uint8_t *pucBuffer)
 522:../user/source/DLT645.c **** {
 523:../user/source/DLT645.c ****     int i = 0;
 524:../user/source/DLT645.c ****     A_Voltage = WORK_VOLTAGE;                                        //AÏàµçÑ¹Öµ¸ÄÎª±ê×¼Öµ
 525:../user/source/DLT645.c ****     B_Voltage = WORK_VOLTAGE;                                        //BÏàµçÑ¹Öµ¸ÄÎª±ê×¼Öµ
 526:../user/source/DLT645.c ****     C_Voltage = WORK_VOLTAGE;                                        //CÏàµçÑ¹Öµ¸ÄÎª±ê×¼Öµ
 527:../user/source/DLT645.c ****     Voltage_Change_State = Voltage_Change;                           //µçÑ¹ĞŞ¸Ä×´Ì¬¸ÄÎª¡°ÓĞĞ§¡±
 528:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VChangeState_Addr, Voltage_Change_State); //´æ´¢µ½FLASHÖĞ
 529:../user/source/DLT645.c ****     Voltage_MAX = Voltage_MAX_Default;                               //µçÑ¹ºÏ¸ñÏŞÖµ»Ö¸´Ä¬ÈÏ²¢ÇÒ´æµµ
 530:../user/source/DLT645.c ****     Voltage_MIN = Voltage_MIN_Default;
 531:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMAX1_Addr, GetLowByte(Voltage_MAX));
 532:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMAX2_Addr, GetHighByte(Voltage_MAX));
 533:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMIN1_Addr, GetLowByte(Voltage_MIN));
 534:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMIN2_Addr, GetHighByte(Voltage_MIN));
 535:../user/source/DLT645.c ****     pucBuffer[8] = 0x94;  //ÇóÈ¡Ğ£ÑéºÍ
 536:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;  //ÇóÈ¡Ğ£ÑéºÍ
 537:../user/source/DLT645.c ****     pucBuffer[10] = 0x00; //ÇóÈ¡Ğ£ÑéºÍ
 538:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 539:../user/source/DLT645.c ****     {
 540:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
 541:../user/source/DLT645.c ****     }
 542:../user/source/DLT645.c ****     pucBuffer[11] = 0x16; //½áÊø·û
 543:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
 544:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 545:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
 546:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 547:../user/source/DLT645.c ****     {
 548:../user/source/DLT645.c ****         Uart_DataPut(USART3);
 549:../user/source/DLT645.c ****     }
 550:../user/source/DLT645.c **** /*ºìÍâ¿Ú·¢ËÍ*/
 551:../user/source/DLT645.c **** #ifdef ENABLE_INFR
 552:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 12);
 553:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
 554:../user/source/DLT645.c ****     {
 555:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
 556:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 557:../user/source/DLT645.c ****     }
 558:../user/source/DLT645.c **** #endif
 559:../user/source/DLT645.c **** }
 560:../user/source/DLT645.c **** 
 561:../user/source/DLT645.c **** /********************************************************************
 562:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹Ö¡´¦Àíº¯Êı
 563:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë£¬Çı¶¯²ã»º´æÖ¸Õë
 564:../user/source/DLT645.c ****  * Êä    ³ö£º
 565:../user/source/DLT645.c ****  *           
 566:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 567:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.10
 568:../user/source/DLT645.c ****  **********************************************************************/
 569:../user/source/DLT645.c **** void vVoltageHandle(uint8_t *pucBuffer)
 570:../user/source/DLT645.c **** {
 571:../user/source/DLT645.c ****     /*µÈ´ıµçÑ¹»ØÖ¡×´Ì¬ÇåÎ»*/
 572:../user/source/DLT645.c ****     Voltage_Frame_Status = FrameReplied;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 13


 573:../user/source/DLT645.c ****     /*¼ÆÊ±Æ÷¸´Î»*/
 574:../user/source/DLT645.c ****     blFramesCounterStatus = false;
 575:../user/source/DLT645.c ****     uwTime2FramesCounter = 0;
 576:../user/source/DLT645.c ****     /*µçÑ¹Ö¡ÅĞ¶Ï´¦Àí*/
 577:../user/source/DLT645.c ****     Voltage_Modifier(pucBuffer);
 578:../user/source/DLT645.c **** }
 579:../user/source/DLT645.c **** 
 580:../user/source/DLT645.c **** /********************************************************************
 581:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ºÏ¸ñÂÊÅĞ¶Ïµ÷Õû
 582:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 583:../user/source/DLT645.c ****  * Êä    ³ö£º	none
 584:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 585:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 586:../user/source/DLT645.c ****  **********************************************************************/
 587:../user/source/DLT645.c **** void Voltage_Modifier(uint8_t *pucBuffer)
 588:../user/source/DLT645.c **** {
 589:../user/source/DLT645.c **** 
 590:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
 591:../user/source/DLT645.c ****     uint8_t i = 0;
 592:../user/source/DLT645.c ****     //IWDG_ReloadCounter();
 593:../user/source/DLT645.c ****     if (Voltage_Change_State == Voltage_NOChange)
 594:../user/source/DLT645.c ****         return;
 595:../user/source/DLT645.c ****     if ((pucBuffer[8] == 0X91) && (pucBuffer[10] == 0x33) && (pucBuffer[12] == 0x34) && (pucBuffer[
 596:../user/source/DLT645.c ****     {
 597:../user/source/DLT645.c ****         if (pucBuffer[11] == 0x32) //ÈıÏàµçÑ¹Êı¾İ¿é
 598:../user/source/DLT645.c ****         {
 599:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[14], pucBuffer[15])) //BCDĞ£Ñé
 600:../user/source/DLT645.c ****             {
 601:../user/source/DLT645.c ****                 A_Voltage = Get_Voltage(pucBuffer[14], pucBuffer[15]);
 602:../user/source/DLT645.c ****                 if ((A_Voltage > Voltage_MAX) || (A_Voltage < Voltage_MIN)) //ĞŞ¸ÄAÏàµçÑ¹
 603:../user/source/DLT645.c ****                 {
 604:../user/source/DLT645.c ****                     A_Voltage = Voltage_Modifier_Method(A_Voltage);
 605:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(A_Voltage);
 606:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(A_Voltage);
 607:../user/source/DLT645.c ****                 }
 608:../user/source/DLT645.c ****             }
 609:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[16], pucBuffer[17])) //BCDĞ£Ñé
 610:../user/source/DLT645.c ****             {
 611:../user/source/DLT645.c ****                 B_Voltage = Get_Voltage(pucBuffer[16], pucBuffer[17]);
 612:../user/source/DLT645.c ****                 if ((B_Voltage > Voltage_MAX) || (B_Voltage < Voltage_MIN)) //ĞŞ¸ÄBÏàµçÑ¹
 613:../user/source/DLT645.c ****                 {
 614:../user/source/DLT645.c ****                     B_Voltage = Voltage_Modifier_Method(B_Voltage);
 615:../user/source/DLT645.c ****                     pucBuffer[16] = GetLowByte(B_Voltage);
 616:../user/source/DLT645.c ****                     pucBuffer[17] = GetHighByte(B_Voltage);
 617:../user/source/DLT645.c ****                 }
 618:../user/source/DLT645.c ****             }
 619:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[18], pucBuffer[19])) //BCDĞ£Ñé
 620:../user/source/DLT645.c ****             {
 621:../user/source/DLT645.c ****                 C_Voltage = Get_Voltage(pucBuffer[18], pucBuffer[19]);
 622:../user/source/DLT645.c ****                 if ((C_Voltage > Voltage_MAX) || (C_Voltage < Voltage_MIN)) //ĞŞ¸ÄCÏàµçÑ¹
 623:../user/source/DLT645.c ****                 {
 624:../user/source/DLT645.c ****                     C_Voltage = Voltage_Modifier_Method(C_Voltage);
 625:../user/source/DLT645.c ****                     pucBuffer[18] = GetLowByte(C_Voltage);
 626:../user/source/DLT645.c ****                     pucBuffer[19] = GetHighByte(C_Voltage);
 627:../user/source/DLT645.c ****                 }
 628:../user/source/DLT645.c ****             }
 629:../user/source/DLT645.c ****         }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 14


 630:../user/source/DLT645.c ****         if (pucBuffer[11] == 0x34) //AÏàµçÑ¹Êı¾İ
 631:../user/source/DLT645.c ****         {
 632:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[14], pucBuffer[15])) //BCDĞ£Ñé
 633:../user/source/DLT645.c ****             {
 634:../user/source/DLT645.c ****                 A_Voltage = Get_Voltage(pucBuffer[14], pucBuffer[15]);
 635:../user/source/DLT645.c ****                 if ((A_Voltage > Voltage_MAX) || (A_Voltage < Voltage_MIN)) //ĞŞ¸ÄAÏàµçÑ¹
 636:../user/source/DLT645.c ****                 {
 637:../user/source/DLT645.c ****                     A_Voltage = Voltage_Modifier_Method(A_Voltage);
 638:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(A_Voltage);
 639:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(A_Voltage);
 640:../user/source/DLT645.c ****                 }
 641:../user/source/DLT645.c ****             }
 642:../user/source/DLT645.c ****         }
 643:../user/source/DLT645.c ****         if (pucBuffer[11] == 0x35) //BÏàµçÑ¹Êı¾İ
 644:../user/source/DLT645.c ****         {
 645:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[14], pucBuffer[15])) //BCDĞ£Ñé
 646:../user/source/DLT645.c ****             {
 647:../user/source/DLT645.c ****                 B_Voltage = Get_Voltage(pucBuffer[14], pucBuffer[15]);
 648:../user/source/DLT645.c ****                 if ((B_Voltage > Voltage_MAX) || (B_Voltage < Voltage_MIN)) //ĞŞ¸ÄBÏàµçÑ¹
 649:../user/source/DLT645.c ****                 {
 650:../user/source/DLT645.c ****                     B_Voltage = Voltage_Modifier_Method(B_Voltage);
 651:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(B_Voltage);
 652:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(B_Voltage);
 653:../user/source/DLT645.c ****                 }
 654:../user/source/DLT645.c ****             }
 655:../user/source/DLT645.c ****         }
 656:../user/source/DLT645.c ****         if (pucBuffer[11] == 0x36) //CÏàµçÑ¹Êı¾İ
 657:../user/source/DLT645.c ****         {
 658:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[14], pucBuffer[15])) //BCDĞ£Ñé
 659:../user/source/DLT645.c ****             {
 660:../user/source/DLT645.c ****                 C_Voltage = Get_Voltage(pucBuffer[14], pucBuffer[15]);
 661:../user/source/DLT645.c ****                 if ((C_Voltage > Voltage_MAX) || (C_Voltage < Voltage_MIN)) //ĞŞ¸ÄCÏàµçÑ¹
 662:../user/source/DLT645.c ****                 {
 663:../user/source/DLT645.c ****                     C_Voltage = Voltage_Modifier_Method(C_Voltage);
 664:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(C_Voltage);
 665:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(C_Voltage);
 666:../user/source/DLT645.c ****                 }
 667:../user/source/DLT645.c ****             }
 668:../user/source/DLT645.c ****         }
 669:../user/source/DLT645.c ****         //ÇóÈ¡Ğ£ÑéºÍ
 670:../user/source/DLT645.c ****         for (i = 0; i < uc645DataDomainLength + 10; i++)
 671:../user/source/DLT645.c ****         {
 672:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
 673:../user/source/DLT645.c ****         }
 674:../user/source/DLT645.c ****         pucBuffer[uc645DataDomainLength + 10] = ucCheckData;
 675:../user/source/DLT645.c ****     }
 676:../user/source/DLT645.c ****     return;
 677:../user/source/DLT645.c **** }
 678:../user/source/DLT645.c **** /********************************************************************
 679:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º»Ø¸´µçÑ¹Ö¡×éÖ¡º¯Êı
 680:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 681:../user/source/DLT645.c ****  * Êä    ³ö£º	true/false
 682:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 683:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 684:../user/source/DLT645.c ****  **********************************************************************/
 685:../user/source/DLT645.c **** bool blVoltage_Create(uint8_t *pucBuffer)
 686:../user/source/DLT645.c **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 15


 687:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
 688:../user/source/DLT645.c ****     uint8_t i = 0;
 689:../user/source/DLT645.c ****     switch (pucBuffer[11])
 690:../user/source/DLT645.c ****     {
 691:../user/source/DLT645.c ****     case 0x32: //ÈıÏàµçÑ¹Êı¾İ¿é
 692:../user/source/DLT645.c ****     {
 693:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 694:../user/source/DLT645.c ****         pucBuffer[9] = 0x0A;
 695:../user/source/DLT645.c ****         //Ê¹ÓÃÉÏ´ÎĞŞ¸ÄµÄºÏ·¨µçÑ¹Öµ»ò1000 2017-10-25:
 696:../user/source/DLT645.c ****         A_Voltage = ((A_Voltage <= Voltage_MAX) && (A_Voltage >= Voltage_MIN) ? A_Voltage : WORK_VO
 697:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 698:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(A_Voltage);
 699:../user/source/DLT645.c ****         B_Voltage = ((B_Voltage <= Voltage_MAX) && (B_Voltage >= Voltage_MIN) ? B_Voltage : WORK_VO
 700:../user/source/DLT645.c ****         pucBuffer[16] = GetLowByte(B_Voltage);
 701:../user/source/DLT645.c ****         pucBuffer[17] = GetHighByte(B_Voltage);
 702:../user/source/DLT645.c ****         C_Voltage = ((C_Voltage <= Voltage_MAX) && (C_Voltage >= Voltage_MIN) ? C_Voltage : WORK_VO
 703:../user/source/DLT645.c ****         pucBuffer[18] = GetLowByte(C_Voltage);
 704:../user/source/DLT645.c ****         pucBuffer[19] = GetHighByte(C_Voltage);
 705:../user/source/DLT645.c ****         for (i = 0; i < 20; i++) //¹Ì¶¨Ö¡³¤22
 706:../user/source/DLT645.c ****         {
 707:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
 708:../user/source/DLT645.c ****         }
 709:../user/source/DLT645.c ****         pucBuffer[20] = ucCheckData;
 710:../user/source/DLT645.c ****         pucBuffer[21] = 0x16;
 711:../user/source/DLT645.c ****         return true;
 712:../user/source/DLT645.c ****     }
 713:../user/source/DLT645.c ****     case 0x34: //AÏàµçÑ¹Êı¾İ
 714:../user/source/DLT645.c ****     {
 715:../user/source/DLT645.c ****         A_Voltage = ((A_Voltage <= Voltage_MAX) && (A_Voltage >= Voltage_MIN) ? A_Voltage : WORK_VO
 716:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 717:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 718:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 719:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(A_Voltage);
 720:../user/source/DLT645.c ****         for (i = 0; i < 16; i++) //¹Ì¶¨Ö¡³¤18
 721:../user/source/DLT645.c ****         {
 722:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
 723:../user/source/DLT645.c ****         }
 724:../user/source/DLT645.c ****         pucBuffer[16] = ucCheckData;
 725:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 726:../user/source/DLT645.c ****         return true;
 727:../user/source/DLT645.c ****     }
 728:../user/source/DLT645.c ****     case 0x35: //BÏàµçÑ¹Êı¾İ
 729:../user/source/DLT645.c ****     {
 730:../user/source/DLT645.c ****         B_Voltage = ((B_Voltage <= Voltage_MAX) && (B_Voltage >= Voltage_MIN) ? B_Voltage : WORK_VO
 731:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 732:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 733:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(B_Voltage);
 734:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(B_Voltage);
 735:../user/source/DLT645.c ****         for (i = 0; i < 16; i++) //¹Ì¶¨Ö¡³¤18
 736:../user/source/DLT645.c ****         {
 737:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
 738:../user/source/DLT645.c ****         }
 739:../user/source/DLT645.c ****         pucBuffer[16] = ucCheckData;
 740:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 741:../user/source/DLT645.c ****         return true;
 742:../user/source/DLT645.c ****     }
 743:../user/source/DLT645.c ****     case 0x36: //CÏàµçÑ¹Êı¾İ
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 16


 744:../user/source/DLT645.c ****     {
 745:../user/source/DLT645.c ****         C_Voltage = ((C_Voltage <= Voltage_MAX) && (C_Voltage >= Voltage_MIN) ? C_Voltage : WORK_VO
 746:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 747:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 748:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(C_Voltage);
 749:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(C_Voltage);
 750:../user/source/DLT645.c ****         for (i = 0; i < 16; i++)
 751:../user/source/DLT645.c ****         {
 752:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
 753:../user/source/DLT645.c ****         }
 754:../user/source/DLT645.c ****         pucBuffer[16] = ucCheckData;
 755:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 756:../user/source/DLT645.c ****         return true;
 757:../user/source/DLT645.c ****     }
 758:../user/source/DLT645.c ****     default:
 759:../user/source/DLT645.c ****         return false; //Èç¹ûÊÕµ½µÄµçÑ¹Ö¡²»ÊÇÕÙ²âA/B/CÏà£¬ÔòÊÕÖ¡´íÎó£¬¼´Ê¹µç±í»Ø¸´³¬Ê±£¬Ò²²»ÄÜÌæ´ú»Ø
 760:../user/source/DLT645.c ****     }
 761:../user/source/DLT645.c **** }
 762:../user/source/DLT645.c **** /********************************************************************
 763:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºBCDÂëĞ£Ñé
 764:../user/source/DLT645.c ****  * Êä    Èë£ºµçÑ¹Êı¾İµÄµÍ×Ö½ÚºÍ¸ß×Ö½Ú
 765:../user/source/DLT645.c ****  * Êä    ³ö£ºtrue»òfalse
 766:../user/source/DLT645.c ****  *           
 767:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 768:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 769:../user/source/DLT645.c ****  **********************************************************************/
 770:../user/source/DLT645.c **** bool BCD_Verity(uint8_t LowByte, uint8_t HighByte)
 771:../user/source/DLT645.c **** {
 112              		.loc 1 771 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117              	.LVL13:
 772:../user/source/DLT645.c ****     uint8_t hundreds; //µçÑ¹°ÙÎ»
 773:../user/source/DLT645.c ****     uint8_t tens;     //µçÑ¹Ê®Î»
 774:../user/source/DLT645.c ****     uint8_t ones;     //µçÑ¹¸öÎ»
 775:../user/source/DLT645.c ****     uint8_t decimals; //µçÑ¹Ğ¡ÊıÎ»
 776:../user/source/DLT645.c ****     hundreds = (HighByte & 0xF0) >> 4;
 118              		.loc 1 776 0
 119 0000 0B09     		lsrs	r3, r1, #4
 120              	.LVL14:
 777:../user/source/DLT645.c ****     tens = HighByte & 0x0F;
 121              		.loc 1 777 0
 122 0002 01F00F01 		and	r1, r1, #15
 123              	.LVL15:
 778:../user/source/DLT645.c ****     ones = (LowByte & 0xF0) >> 4;
 124              		.loc 1 778 0
 125 0006 0209     		lsrs	r2, r0, #4
 126              	.LVL16:
 779:../user/source/DLT645.c ****     decimals = LowByte & 0x0F;
 127              		.loc 1 779 0
 128 0008 00F00F00 		and	r0, r0, #15
 129              	.LVL17:
 780:../user/source/DLT645.c ****     if ((hundreds >= 0x03) && (hundreds <= 0x0C) && (tens >= 0x03) && (tens <= 0x0C) && (ones >= 0x
 130              		.loc 1 780 0
 131 000c 033B     		subs	r3, r3, #3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 17


 132              	.LVL18:
 133 000e DBB2     		uxtb	r3, r3
 134              	.LVL19:
 135 0010 092B     		cmp	r3, #9
 136 0012 0DD8     		bhi	.L12
 137              		.loc 1 780 0 is_stmt 0 discriminator 1
 138 0014 0229     		cmp	r1, #2
 139 0016 0DD9     		bls	.L13
 140              		.loc 1 780 0 discriminator 2
 141 0018 0C29     		cmp	r1, #12
 142 001a 0DD8     		bhi	.L14
 143              		.loc 1 780 0 discriminator 3
 144 001c 022A     		cmp	r2, #2
 145 001e 0DD9     		bls	.L15
 146              		.loc 1 780 0 discriminator 4
 147 0020 0C2A     		cmp	r2, #12
 148 0022 0DD8     		bhi	.L16
 149              		.loc 1 780 0 discriminator 5
 150 0024 0228     		cmp	r0, #2
 151 0026 0DD9     		bls	.L17
 152              		.loc 1 780 0 discriminator 6
 153 0028 0C28     		cmp	r0, #12
 154 002a 0DD9     		bls	.L18
 781:../user/source/DLT645.c ****     {
 782:../user/source/DLT645.c ****         return true;
 783:../user/source/DLT645.c ****     }
 784:../user/source/DLT645.c ****     else
 785:../user/source/DLT645.c ****     {
 786:../user/source/DLT645.c ****         return false;
 155              		.loc 1 786 0 is_stmt 1
 156 002c 0020     		movs	r0, #0
 157              	.LVL20:
 158 002e 7047     		bx	lr
 159              	.LVL21:
 160              	.L12:
 161 0030 0020     		movs	r0, #0
 162              	.LVL22:
 163 0032 7047     		bx	lr
 164              	.LVL23:
 165              	.L13:
 166 0034 0020     		movs	r0, #0
 167              	.LVL24:
 168 0036 7047     		bx	lr
 169              	.LVL25:
 170              	.L14:
 171 0038 0020     		movs	r0, #0
 172              	.LVL26:
 173 003a 7047     		bx	lr
 174              	.LVL27:
 175              	.L15:
 176 003c 0020     		movs	r0, #0
 177              	.LVL28:
 178 003e 7047     		bx	lr
 179              	.LVL29:
 180              	.L16:
 181 0040 0020     		movs	r0, #0
 182              	.LVL30:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 18


 183 0042 7047     		bx	lr
 184              	.LVL31:
 185              	.L17:
 186 0044 0020     		movs	r0, #0
 187              	.LVL32:
 188 0046 7047     		bx	lr
 189              	.LVL33:
 190              	.L18:
 782:../user/source/DLT645.c ****     }
 191              		.loc 1 782 0
 192 0048 0120     		movs	r0, #1
 193              	.LVL34:
 787:../user/source/DLT645.c ****     }
 788:../user/source/DLT645.c **** }
 194              		.loc 1 788 0
 195 004a 7047     		bx	lr
 196              		.cfi_endproc
 197              	.LFE122:
 199              		.section	.text.Get_Voltage,"ax",%progbits
 200              		.align	2
 201              		.thumb
 202              		.thumb_func
 204              	Get_Voltage:
 205              	.LFB123:
 789:../user/source/DLT645.c **** 
 790:../user/source/DLT645.c **** /********************************************************************
 791:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º´ÓÊı¾İÖ¡ÖĞ¶ÁÈ¡µçÑ¹Öµ
 792:../user/source/DLT645.c ****  * Êä    Èë£ºµçÑ¹ÖµµÍ×Ö½Ú¡¢¸ß×Ö½Ú
 793:../user/source/DLT645.c ****  * Êä    ³ö£ºÊ®½øÖÆµÄµçÑ¹Öµ
 794:../user/source/DLT645.c ****  *           
 795:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 796:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 797:../user/source/DLT645.c ****  **********************************************************************/
 798:../user/source/DLT645.c **** int Get_Voltage(uint8_t LowByte, uint8_t HighByte)
 799:../user/source/DLT645.c **** {
 206              		.loc 1 799 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              		@ link register save eliminated.
 211              	.LVL35:
 212 0000 10B4     		push	{r4}
 213              	.LCFI2:
 214              		.cfi_def_cfa_offset 4
 215              		.cfi_offset 4, -4
 216              	.LVL36:
 800:../user/source/DLT645.c ****     int Voltage = 0;
 801:../user/source/DLT645.c ****     uint8_t hundreds; //µçÑ¹°ÙÎ»
 802:../user/source/DLT645.c ****     uint8_t tens;     //µçÑ¹Ê®Î»
 803:../user/source/DLT645.c ****     uint8_t ones;     //µçÑ¹¸öÎ»
 804:../user/source/DLT645.c ****     uint8_t decimals; //µçÑ¹Ğ¡ÊıÎ»
 805:../user/source/DLT645.c ****     hundreds = ((HighByte - 0x33) & 0xF0) >> 4;
 217              		.loc 1 805 0
 218 0002 3339     		subs	r1, r1, #51
 219              	.LVL37:
 220 0004 C1F30314 		ubfx	r4, r1, #4, #4
 221              	.LVL38:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 19


 806:../user/source/DLT645.c ****     tens = (HighByte - 0x33) & 0x0F;
 222              		.loc 1 806 0
 223 0008 01F00F01 		and	r1, r1, #15
 224              	.LVL39:
 807:../user/source/DLT645.c ****     ones = ((LowByte - 0x33) & 0xF0) >> 4;
 225              		.loc 1 807 0
 226 000c 3338     		subs	r0, r0, #51
 227              	.LVL40:
 228 000e C0F30313 		ubfx	r3, r0, #4, #4
 229              	.LVL41:
 808:../user/source/DLT645.c ****     decimals = (LowByte - 0x33) & 0x0F;
 230              		.loc 1 808 0
 231 0012 00F00F00 		and	r0, r0, #15
 232              	.LVL42:
 809:../user/source/DLT645.c ****     Voltage = hundreds * 1000 + tens * 100 + ones * 10 + decimals; //Îª±íÊ¾Ğ¡ÊıÎ»£¬½«ÊıÕûÌåÔö´ó10±¶
 233              		.loc 1 809 0
 234 0016 6422     		movs	r2, #100
 235 0018 02FB01F1 		mul	r1, r2, r1
 236              	.LVL43:
 237 001c 4FF47A72 		mov	r2, #1000
 238 0020 02FB0414 		mla	r4, r2, r4, r1
 239              	.LVL44:
 240 0024 03EB8303 		add	r3, r3, r3, lsl #2
 241              	.LVL45:
 242 0028 5A00     		lsls	r2, r3, #1
 243 002a 2244     		add	r2, r2, r4
 244              	.LVL46:
 810:../user/source/DLT645.c ****     return Voltage;
 811:../user/source/DLT645.c **** }
 245              		.loc 1 811 0
 246 002c 1044     		add	r0, r0, r2
 247              	.LVL47:
 248 002e 5DF8044B 		ldr	r4, [sp], #4
 249              	.LCFI3:
 250              		.cfi_restore 4
 251              		.cfi_def_cfa_offset 0
 252 0032 7047     		bx	lr
 253              		.cfi_endproc
 254              	.LFE123:
 256              		.section	.text.vGet_Current,"ax",%progbits
 257              		.align	2
 258              		.thumb
 259              		.thumb_func
 261              	vGet_Current:
 262              	.LFB124:
 812:../user/source/DLT645.c **** 
 813:../user/source/DLT645.c **** /********************************************************************
 814:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º´ÓÊı¾İÖ¡ÖĞ¶ÁÈ¡µçÁ÷Öµ
 815:../user/source/DLT645.c ****  * Êä    Èë£ºµçÁ÷ÖµµÍ×Ö½Ú¡¢ÖĞ×Ö½Ú¡¢¸ß×Ö½Ú
 816:../user/source/DLT645.c ****  * Êä    ³ö£ºÊ®½øÖÆµÄµçÁ÷Öµ
 817:../user/source/DLT645.c ****  * Òª    Çó£º
 818:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 819:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 820:../user/source/DLT645.c ****  **********************************************************************/
 821:../user/source/DLT645.c **** void vGet_Current(uint8_t LowByte, uint8_t MidByte, uint8_t HighByte, CURRENT *pcurrent)
 822:../user/source/DLT645.c **** {
 263              		.loc 1 822 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 20


 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              	.LVL48:
 268 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 269              	.LCFI4:
 270              		.cfi_def_cfa_offset 20
 271              		.cfi_offset 4, -20
 272              		.cfi_offset 5, -16
 273              		.cfi_offset 6, -12
 274              		.cfi_offset 7, -8
 275              		.cfi_offset 14, -4
 823:../user/source/DLT645.c ****     uint8_t million;
 824:../user/source/DLT645.c ****     uint8_t tenkillo;
 825:../user/source/DLT645.c ****     uint8_t killo;
 826:../user/source/DLT645.c ****     uint8_t hundreds;
 827:../user/source/DLT645.c ****     uint8_t tens;
 828:../user/source/DLT645.c ****     uint8_t ones;
 829:../user/source/DLT645.c ****     million = ((HighByte - 0x33) & 0x70) >> 4; //È¡bit7~bit5£¬×î¸ßÎ»ÊÇ·ûºÅÎ»,ºöÂÔ
 276              		.loc 1 829 0
 277 0002 333A     		subs	r2, r2, #51
 278              	.LVL49:
 279 0004 C2F30217 		ubfx	r7, r2, #4, #3
 280              	.LVL50:
 830:../user/source/DLT645.c ****     tenkillo = (HighByte - 0x33) & 0x0F;
 281              		.loc 1 830 0
 282 0008 02F00F04 		and	r4, r2, #15
 283              	.LVL51:
 831:../user/source/DLT645.c ****     killo = ((MidByte - 0x33) & 0xF0) >> 4;
 284              		.loc 1 831 0
 285 000c 3339     		subs	r1, r1, #51
 286              	.LVL52:
 287 000e C1F30316 		ubfx	r6, r1, #4, #4
 288              	.LVL53:
 832:../user/source/DLT645.c ****     hundreds = (MidByte - 0x33) & 0x0F;
 289              		.loc 1 832 0
 290 0012 01F00F0C 		and	ip, r1, #15
 291              	.LVL54:
 833:../user/source/DLT645.c ****     tens = ((LowByte - 0x33) & 0xF0) >> 4;
 292              		.loc 1 833 0
 293 0016 3338     		subs	r0, r0, #51
 294              	.LVL55:
 295 0018 C0F30315 		ubfx	r5, r0, #4, #4
 296              	.LVL56:
 834:../user/source/DLT645.c ****     ones = (LowByte - 0x33) & 0x0F;
 297              		.loc 1 834 0
 298 001c 00F00F00 		and	r0, r0, #15
 299              	.LVL57:
 835:../user/source/DLT645.c ****     pcurrent->value = million * 100000 + tenkillo * 10000 + killo * 1000 + hundreds * 100 + tens * 
 300              		.loc 1 835 0
 301 0020 42F2107E 		movw	lr, #10000
 302 0024 0EFB04FE 		mul	lr, lr, r4
 303 0028 0B49     		ldr	r1, .L23
 304 002a 01FB07E7 		mla	r7, r1, r7, lr
 305              	.LVL58:
 306 002e 4FF47A71 		mov	r1, #1000
 307 0032 01FB0676 		mla	r6, r1, r6, r7
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 21


 308              	.LVL59:
 309 0036 6424     		movs	r4, #100
 310              	.LVL60:
 311 0038 04FB0C61 		mla	r1, r4, ip, r6
 312 003c 05EB8505 		add	r5, r5, r5, lsl #2
 313              	.LVL61:
 314 0040 6C00     		lsls	r4, r5, #1
 315 0042 0C44     		add	r4, r4, r1
 316 0044 0444     		add	r4, r4, r0
 317 0046 1C60     		str	r4, [r3]
 836:../user/source/DLT645.c ****     pcurrent->count++;
 318              		.loc 1 836 0
 319 0048 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 320 004a 0131     		adds	r1, r1, #1
 321 004c 1971     		strb	r1, [r3, #4]
 837:../user/source/DLT645.c ****     pcurrent->isminus = ((((HighByte - 0x33) & 0x80) != 0) ? true : false);
 322              		.loc 1 837 0
 323 004e C2F3C012 		ubfx	r2, r2, #7, #1
 324              	.LVL62:
 325 0052 5A71     		strb	r2, [r3, #5]
 326 0054 F0BD     		pop	{r4, r5, r6, r7, pc}
 327              	.L24:
 328 0056 00BF     		.align	2
 329              	.L23:
 330 0058 A0860100 		.word	100000
 331              		.cfi_endproc
 332              	.LFE124:
 334              		.section	.text.vPut_Current,"ax",%progbits
 335              		.align	2
 336              		.thumb
 337              		.thumb_func
 339              	vPut_Current:
 340              	.LFB125:
 838:../user/source/DLT645.c **** }
 839:../user/source/DLT645.c **** /********************************************************************
 840:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½«µçÁ÷ÖµĞ´ÈëÖ¡×Ö½Ú
 841:../user/source/DLT645.c ****  * Êä    Èë£ºµçÁ÷ÖµµÍ×Ö½Ú¡¢ÖĞ×Ö½Ú¡¢¸ß×Ö½Ú£¬µçÁ÷Öµ
 842:../user/source/DLT645.c ****  * Êä    ³ö£º
 843:../user/source/DLT645.c ****  * Òª    Çó£ºµçÁ÷Öµ²»Îª¸ºÖµ
 844:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 845:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 846:../user/source/DLT645.c ****  **********************************************************************/
 847:../user/source/DLT645.c **** void vPut_Current(CURRENT pcurrent, uint8_t *pLowByte, uint8_t *pMidByte, uint8_t *pHighByte)
 848:../user/source/DLT645.c **** {
 341              		.loc 1 848 0
 342              		.cfi_startproc
 343              		@ args = 4, pretend = 0, frame = 8
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 346              	.LVL63:
 347 0000 F0B4     		push	{r4, r5, r6, r7}
 348              	.LCFI5:
 349              		.cfi_def_cfa_offset 16
 350              		.cfi_offset 4, -16
 351              		.cfi_offset 5, -12
 352              		.cfi_offset 6, -8
 353              		.cfi_offset 7, -4
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 22


 354 0002 82B0     		sub	sp, sp, #8
 355              	.LCFI6:
 356              		.cfi_def_cfa_offset 24
 357 0004 02AC     		add	r4, sp, #8
 358 0006 04E90300 		stmdb	r4, {r0, r1}
 359 000a 0698     		ldr	r0, [sp, #24]
 849:../user/source/DLT645.c ****     *pLowByte = 0x33 + ((uint8_t)(((pcurrent.value / 10) % 10) << 4) | (uint8_t)(pcurrent.value % 1
 360              		.loc 1 849 0
 361 000c 009E     		ldr	r6, [sp]
 362 000e 2849     		ldr	r1, .L28
 363 0010 A1FB0647 		umull	r4, r7, r1, r6
 364 0014 FF08     		lsrs	r7, r7, #3
 365 0016 A1FB0754 		umull	r5, r4, r1, r7
 366 001a E408     		lsrs	r4, r4, #3
 367 001c 04EB8404 		add	r4, r4, r4, lsl #2
 368 0020 6500     		lsls	r5, r4, #1
 369 0022 7C1B     		subs	r4, r7, r5
 370 0024 2401     		lsls	r4, r4, #4
 371 0026 E4B2     		uxtb	r4, r4
 372 0028 07EB8707 		add	r7, r7, r7, lsl #2
 373 002c 7D00     		lsls	r5, r7, #1
 374 002e 751B     		subs	r5, r6, r5
 375 0030 EDB2     		uxtb	r5, r5
 376 0032 2C43     		orrs	r4, r4, r5
 377 0034 3334     		adds	r4, r4, #51
 378 0036 1470     		strb	r4, [r2]
 850:../user/source/DLT645.c ****     *pMidByte = 0x33 + ((uint8_t)(((pcurrent.value / 1000) % 10) << 4) | (uint8_t)((pcurrent.value 
 379              		.loc 1 850 0
 380 0038 1E4C     		ldr	r4, .L28+4
 381 003a A4FB0624 		umull	r2, r4, r4, r6
 382              	.LVL64:
 383 003e A409     		lsrs	r4, r4, #6
 384 0040 A1FB0452 		umull	r5, r2, r1, r4
 385 0044 D208     		lsrs	r2, r2, #3
 386 0046 02EB8202 		add	r2, r2, r2, lsl #2
 387 004a 5500     		lsls	r5, r2, #1
 388 004c 621B     		subs	r2, r4, r5
 389 004e 1201     		lsls	r2, r2, #4
 390 0050 D5B2     		uxtb	r5, r2
 391 0052 194F     		ldr	r7, .L28+8
 392 0054 A7FB0627 		umull	r2, r7, r7, r6
 393 0058 7F09     		lsrs	r7, r7, #5
 394 005a A1FB0724 		umull	r2, r4, r1, r7
 395 005e E208     		lsrs	r2, r4, #3
 396 0060 02EB8202 		add	r2, r2, r2, lsl #2
 397 0064 5400     		lsls	r4, r2, #1
 398 0066 3A1B     		subs	r2, r7, r4
 399 0068 D2B2     		uxtb	r2, r2
 400 006a 2A43     		orrs	r2, r2, r5
 401 006c 3332     		adds	r2, r2, #51
 402 006e 1A70     		strb	r2, [r3]
 851:../user/source/DLT645.c ****     *pHighByte = 0x33 + ((uint8_t)((pcurrent.value / 100000) << 4) | (uint8_t)((pcurrent.value / 10
 403              		.loc 1 851 0
 404 0070 7309     		lsrs	r3, r6, #5
 405              	.LVL65:
 406 0072 124A     		ldr	r2, .L28+12
 407 0074 A2FB0332 		umull	r3, r2, r2, r3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 23


 408 0078 D209     		lsrs	r2, r2, #7
 409 007a 1201     		lsls	r2, r2, #4
 410 007c D2B2     		uxtb	r2, r2
 411 007e 104B     		ldr	r3, .L28+16
 412 0080 A3FB0636 		umull	r3, r6, r3, r6
 413 0084 760B     		lsrs	r6, r6, #13
 414 0086 A1FB0613 		umull	r1, r3, r1, r6
 415 008a D908     		lsrs	r1, r3, #3
 416 008c 01EB8101 		add	r1, r1, r1, lsl #2
 417 0090 4B00     		lsls	r3, r1, #1
 418 0092 F11A     		subs	r1, r6, r3
 419 0094 C9B2     		uxtb	r1, r1
 420 0096 1143     		orrs	r1, r1, r2
 421 0098 3331     		adds	r1, r1, #51
 422 009a C9B2     		uxtb	r1, r1
 423 009c 0170     		strb	r1, [r0]
 852:../user/source/DLT645.c ****     if (pcurrent.isminus == true)
 424              		.loc 1 852 0
 425 009e 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 426 00a2 13B1     		cbz	r3, .L25
 853:../user/source/DLT645.c ****     {
 854:../user/source/DLT645.c ****         *pHighByte = *pHighByte | 0x80;
 427              		.loc 1 854 0
 428 00a4 61F07F01 		orn	r1, r1, #127
 429 00a8 0170     		strb	r1, [r0]
 430              	.L25:
 855:../user/source/DLT645.c ****     }
 856:../user/source/DLT645.c **** }
 431              		.loc 1 856 0
 432 00aa 02B0     		add	sp, sp, #8
 433              	.LCFI7:
 434              		.cfi_def_cfa_offset 16
 435              		@ sp needed
 436 00ac F0BC     		pop	{r4, r5, r6, r7}
 437              	.LCFI8:
 438              		.cfi_restore 7
 439              		.cfi_restore 6
 440              		.cfi_restore 5
 441              		.cfi_restore 4
 442              		.cfi_def_cfa_offset 0
 443              	.LVL66:
 444 00ae 7047     		bx	lr
 445              	.L29:
 446              		.align	2
 447              	.L28:
 448 00b0 CDCCCCCC 		.word	-858993459
 449 00b4 D34D6210 		.word	274877907
 450 00b8 1F85EB51 		.word	1374389535
 451 00bc C55A7C0A 		.word	175921861
 452 00c0 5917B7D1 		.word	-776530087
 453              		.cfi_endproc
 454              	.LFE125:
 456              		.section	.text.blCurrentSingle_Modify_Method,"ax",%progbits
 457              		.align	2
 458              		.thumb
 459              		.thumb_func
 461              	blCurrentSingle_Modify_Method:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 24


 462              	.LFB129:
 857:../user/source/DLT645.c **** 
 858:../user/source/DLT645.c **** /********************************************************************
 859:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ĞŞ¸Ä³õÊ¼»¯£º
 860:../user/source/DLT645.c ****  * Êä    Èë£º	none
 861:../user/source/DLT645.c ****  * Êä    ³ö£º	none
 862:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 863:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.10.25
 864:../user/source/DLT645.c ****  **********************************************************************/
 865:../user/source/DLT645.c **** void Voltage_Change_Init(void)
 866:../user/source/DLT645.c **** {
 867:../user/source/DLT645.c ****     uint8_t Vmax1;
 868:../user/source/DLT645.c ****     uint8_t Vmax2;
 869:../user/source/DLT645.c ****     uint8_t Vmin1;
 870:../user/source/DLT645.c ****     uint8_t Vmin2;
 871:../user/source/DLT645.c ****     /*µçÑ¹ĞŞ¸ÄÊ¹ÄÜÎ»³õÊ¼»¯*/
 872:../user/source/DLT645.c ****     Voltage_Change_State = EEProm_Read(FLASH_VChangeState_Addr); //´ÓflashÖĞ¶ÁÈ¡µçÑ¹ĞŞ¸ÄÊ¹ÄÜ×Ö½Ú
 873:../user/source/DLT645.c ****     /*µçÑ¹ĞŞ¸ÄÉÏÏÂÏŞ³õÊ¼»¯*/
 874:../user/source/DLT645.c ****     Vmax1 = EEProm_Read(FLASH_VMAX1_Addr);
 875:../user/source/DLT645.c ****     Vmax2 = EEProm_Read(FLASH_VMAX2_Addr);
 876:../user/source/DLT645.c ****     Vmin1 = EEProm_Read(FLASH_VMIN1_Addr);
 877:../user/source/DLT645.c ****     Vmin2 = EEProm_Read(FLASH_VMIN2_Addr);
 878:../user/source/DLT645.c **** 
 879:../user/source/DLT645.c ****     if ((Vmax1 == 0xff) && (Vmax2 == 0xff) && (Vmin1 == 0xff) && (Vmin2 == 0xff))
 880:../user/source/DLT645.c ****     {
 881:../user/source/DLT645.c ****         Voltage_MAX = Voltage_MAX_Default; //ÉèÖÃµçÑ¹ºÏ¸ñÉÏÏÂÏŞÄ¬ÈÏÖµ
 882:../user/source/DLT645.c ****         Voltage_MIN = Voltage_MIN_Default;
 883:../user/source/DLT645.c ****     }
 884:../user/source/DLT645.c ****     else
 885:../user/source/DLT645.c ****     {
 886:../user/source/DLT645.c ****         Voltage_MAX = Get_Voltage(Vmax1, Vmax2); //flashÖĞ´æ´¢µÄÊÇ654¶ÔÓ¦Ö¡×Ö½Ú£¬Á½¸ö×Ö½Ú
 887:../user/source/DLT645.c ****         Voltage_MIN = Get_Voltage(Vmin1, Vmin2);
 888:../user/source/DLT645.c ****     }
 889:../user/source/DLT645.c **** }
 890:../user/source/DLT645.c **** 
 891:../user/source/DLT645.c **** /*****************************************************
 892:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ºÏ¸ñÂÊµ÷Õû²ßÂÔ
 893:../user/source/DLT645.c ****  * Êä    Èë£º
 894:../user/source/DLT645.c ****  * Êä    ³ö£º
 895:../user/source/DLT645.c ****  * Ëµ    Ã÷£ºµçÑ¹Æ«Ğ¡Ğèµ÷½ÚÊ±£¬ÒÔMINÎª»ù×¼£¬½«Voltage¾µÏñ£¬Èô¾µÏñµã³¬¹ıMAX£¬ÒÀ´Î¼õĞ¡ÓĞĞ§Çø¼äÖµ£¨MAX
 896:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 897:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 898:../user/source/DLT645.c ****  *******************************************************/
 899:../user/source/DLT645.c **** int Voltage_Modifier_Method(int Voltage)
 900:../user/source/DLT645.c **** {
 901:../user/source/DLT645.c ****     int n = 0;
 902:../user/source/DLT645.c ****     int m = 0;
 903:../user/source/DLT645.c ****     int i = 0;
 904:../user/source/DLT645.c ****     n = (Voltage_MIN - Voltage_MIN_MIN) / (Voltage_MAX - Voltage_MIN) + 1; //(198-120)/(235-198)+1»
 905:../user/source/DLT645.c ****     m = (Voltage_MAX_MAX - Voltage_MAX) / (Voltage_MAX - Voltage_MIN) + 1; //(260-235)/(235-198)+1»
 906:../user/source/DLT645.c ****     if ((Voltage > Voltage_MAX) && (Voltage <= Voltage_MAX_MAX))
 907:../user/source/DLT645.c ****     {
 908:../user/source/DLT645.c ****         if (Voltage <= (Voltage_MAX + (Voltage_MAX - Voltage_MIN)))
 909:../user/source/DLT645.c ****         {
 910:../user/source/DLT645.c ****             Voltage = Voltage - (Voltage - Voltage_MAX) * 2;
 911:../user/source/DLT645.c ****             return Voltage;
 912:../user/source/DLT645.c ****         }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 25


 913:../user/source/DLT645.c ****         else
 914:../user/source/DLT645.c ****         {
 915:../user/source/DLT645.c ****             for (i = 1; i < m; i++)
 916:../user/source/DLT645.c ****             {
 917:../user/source/DLT645.c ****                 if (Voltage <= (Voltage_MAX + (Voltage_MAX - Voltage_MIN) * (i + 1)))
 918:../user/source/DLT645.c ****                 {
 919:../user/source/DLT645.c ****                     Voltage = Voltage - (Voltage_MAX - Voltage_MIN) * (i + 1);
 920:../user/source/DLT645.c ****                     return Voltage;
 921:../user/source/DLT645.c ****                 }
 922:../user/source/DLT645.c ****             }
 923:../user/source/DLT645.c ****         }
 924:../user/source/DLT645.c ****     }
 925:../user/source/DLT645.c ****     if ((Voltage < Voltage_MIN) && (Voltage >= Voltage_MIN_MIN))
 926:../user/source/DLT645.c ****     {
 927:../user/source/DLT645.c ****         if (Voltage >= (Voltage_MIN - (Voltage_MAX - Voltage_MIN)))
 928:../user/source/DLT645.c ****         {
 929:../user/source/DLT645.c ****             Voltage = Voltage + (Voltage_MIN - Voltage) * 2;
 930:../user/source/DLT645.c ****             return Voltage;
 931:../user/source/DLT645.c ****         }
 932:../user/source/DLT645.c ****         else
 933:../user/source/DLT645.c ****         {
 934:../user/source/DLT645.c ****             for (i = 1; i < n; i++)
 935:../user/source/DLT645.c ****             {
 936:../user/source/DLT645.c ****                 if (Voltage >= (Voltage_MIN - (Voltage_MAX - Voltage_MIN) * (i + 1)))
 937:../user/source/DLT645.c ****                 {
 938:../user/source/DLT645.c ****                     Voltage = Voltage + (Voltage_MAX - Voltage_MIN) * (i + 1);
 939:../user/source/DLT645.c ****                     return Voltage;
 940:../user/source/DLT645.c ****                 }
 941:../user/source/DLT645.c ****             }
 942:../user/source/DLT645.c ****         }
 943:../user/source/DLT645.c ****     }
 944:../user/source/DLT645.c ****     return Voltage;
 945:../user/source/DLT645.c **** }
 946:../user/source/DLT645.c **** /*****************************************************
 947:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºĞŞ¸Äµç±í×´Ì¬×ÖÖĞµÄµçÁ÷·´Ïò¡¢µçÁ÷¶ÌÂ·¡¢µçÁ÷¶ÏÂ·×´Ì¬×Ö
 948:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 949:../user/source/DLT645.c ****  * Êä    ³ö£º
 950:../user/source/DLT645.c ****  *           
 951:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 952:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.5.23
 953:../user/source/DLT645.c ****  *******************************************************/
 954:../user/source/DLT645.c **** void Estatus_Modify_CurrentEvent(uint8_t *pucBuffer)
 955:../user/source/DLT645.c **** {
 956:../user/source/DLT645.c ****     uint16_t estatus = 0x0000;
 957:../user/source/DLT645.c ****     int i = 0;
 958:../user/source/DLT645.c ****     uint8_t ucCheckData = 0x0;
 959:../user/source/DLT645.c ****     switch (pucBuffer[10])
 960:../user/source/DLT645.c ****     {
 961:../user/source/DLT645.c ****     case 0x37: //×´Ì¬×Ö4,AÏà×´Ì¬×Ö
 962:../user/source/DLT645.c ****     {
 963:../user/source/DLT645.c ****         //BIT4,BIT6,bit8 ÖÃ0->11111110 10101111:
 964:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[14], pucBuffer[15]);
 965:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
 966:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
 967:../user/source/DLT645.c ****         break;
 968:../user/source/DLT645.c ****     }
 969:../user/source/DLT645.c ****     case 0x38: //×´Ì¬×Ö5,BÏà×´Ì¬×Ö
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 26


 970:../user/source/DLT645.c ****     {
 971:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[14], pucBuffer[15]); //[14][15]×ª»»Îª¶ş½øÖÆ
 972:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 973:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 974:../user/source/DLT645.c ****         break;
 975:../user/source/DLT645.c ****     }
 976:../user/source/DLT645.c ****     case 0x39: //×´Ì¬×Ö6,CÏà×´Ì¬×Ö
 977:../user/source/DLT645.c ****     {
 978:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[14], pucBuffer[15]); //[14][15]×ª»»Îª¶ş½øÖÆ
 979:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 980:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 981:../user/source/DLT645.c ****         break;
 982:../user/source/DLT645.c ****     }
 983:../user/source/DLT645.c ****     case 0x3A: //×´Ì¬×Ö7£¬ºÏÏà×´Ì¬×Ö
 984:../user/source/DLT645.c ****     {
 985:../user/source/DLT645.c ****         estatus = 0xFFF7 & Get_Estatus(pucBuffer[14], pucBuffer[15]); //BIT3=0   11111111 11110111
 986:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 987:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 988:../user/source/DLT645.c ****         break;
 989:../user/source/DLT645.c ****     }
 990:../user/source/DLT645.c ****     case 0x32: //×´Ì¬×ÖÊı¾İ¿é
 991:../user/source/DLT645.c ****     {
 992:../user/source/DLT645.c ****         //1:[14][15] 2:[16][17] 3:[18][19] 4:[20][21] 5:[22][23] 6:[24][25] 7:[26][27]
 993:../user/source/DLT645.c ****         //×´Ì¬×Ö4,AÏà×´Ì¬×Ö
 994:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[20], pucBuffer[21]); //BIT4,BIT6,bit8 =0->11111110
 995:../user/source/DLT645.c ****         pucBuffer[20] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 996:../user/source/DLT645.c ****         pucBuffer[21] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 997:../user/source/DLT645.c ****         //×´Ì¬×Ö5,BÏà×´Ì¬×Ö
 998:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[22], pucBuffer[23]);
 999:../user/source/DLT645.c ****         pucBuffer[22] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
1000:../user/source/DLT645.c ****         pucBuffer[23] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
1001:../user/source/DLT645.c ****         //×´Ì¬×Ö6,CÏà×´Ì¬×Ö
1002:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[24], pucBuffer[25]);
1003:../user/source/DLT645.c ****         pucBuffer[24] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
1004:../user/source/DLT645.c ****         pucBuffer[25] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
1005:../user/source/DLT645.c ****         //×´Ì¬×Ö7£¬ºÏÏà×´Ì¬×Ö
1006:../user/source/DLT645.c ****         estatus = 0xFFF7 & Get_Estatus(pucBuffer[26], pucBuffer[27]);
1007:../user/source/DLT645.c ****         pucBuffer[26] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
1008:../user/source/DLT645.c ****         pucBuffer[27] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
1009:../user/source/DLT645.c ****         break;
1010:../user/source/DLT645.c ****     }
1011:../user/source/DLT645.c ****     default:
1012:../user/source/DLT645.c ****         break;
1013:../user/source/DLT645.c ****     }
1014:../user/source/DLT645.c ****     for (i = 0; i < uc645DataDomainLength + 10; i++)
1015:../user/source/DLT645.c ****     {
1016:../user/source/DLT645.c ****         ucCheckData += pucBuffer[i];
1017:../user/source/DLT645.c ****     }
1018:../user/source/DLT645.c ****     pucBuffer[uc645DataDomainLength + 10] = ucCheckData;
1019:../user/source/DLT645.c **** }
1020:../user/source/DLT645.c **** 
1021:../user/source/DLT645.c **** /*****************************************************
1022:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµ¥ÏàµçÁ÷ĞŞ¸Ä·½·¨
1023:../user/source/DLT645.c ****  * Êä    Èë£ºÁ½Ïà²Î¿¼µçÁ÷£¬Ò»ÏàĞèĞŞ¸ÄµçÁ÷
1024:../user/source/DLT645.c ****  * Êä    ³ö£ºµçÁ÷²»ĞèÒªĞŞ¸Ä£¬Êä³öfalse
1025:../user/source/DLT645.c ****  *           µçÁ÷ÒÑĞŞ¸Ä£¬Êä³ötrue
1026:../user/source/DLT645.c ****  * Ëµ	  Ã÷£º
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 27


1027:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1028:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.12.13
1029:../user/source/DLT645.c ****  *******************************************************/
1030:../user/source/DLT645.c **** bool blCurrentSingle_Modify_Method(CURRENT *ref1, CURRENT *ref2, CURRENT *result) //×¢ÊÍÖĞ¸ù¾İBÏàºÍ
1031:../user/source/DLT645.c **** {
 463              		.loc 1 1031 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 468              	.LVL67:
 469 0000 30B4     		push	{r4, r5}
 470              	.LCFI9:
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 4, -8
 473              		.cfi_offset 5, -4
1032:../user/source/DLT645.c ****     //if Acurrent->count>Bcurrent->count && Acurrent->count>Ccurrent->count,ÏÈA£¬²»ĞŞ¸Ä
1033:../user/source/DLT645.c ****     //if Bcurrent->count=Acurrent->count && Acurrent->count>Ccurrent->count,ÏÈB£¬ºóA£¬¸ù¾İBĞŞ¸ÄA
1034:../user/source/DLT645.c ****     //if Ccurrent->count=Acurrent->count && Acurrent->count>Bcurrent->count,ÏÈC£¬ºóA£¬¸ù¾İCĞŞ¸ÄA
1035:../user/source/DLT645.c ****     //if Bcurrent->count=Ccurrent->count && Acurrent->count<Ccurrent->count,ÏÈBC£¬ºóA£¬¸ù¾İBCĞŞ¸ÄA
1036:../user/source/DLT645.c ****     if ((result->count > ref1->count) &&
 474              		.loc 1 1036 0
 475 0002 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 476 0004 0479     		ldrb	r4, [r0, #4]	@ zero_extendqisi2
 477 0006 A342     		cmp	r3, r4
 478 0008 03D9     		bls	.L31
1037:../user/source/DLT645.c ****         (result->count > ref2->count)) //ÏÈresultÏà£¬²»ĞŞ¸Ä
 479              		.loc 1 1037 0 discriminator 1
 480 000a 0D79     		ldrb	r5, [r1, #4]	@ zero_extendqisi2
1036:../user/source/DLT645.c ****         (result->count > ref2->count)) //ÏÈresultÏà£¬²»ĞŞ¸Ä
 481              		.loc 1 1036 0 discriminator 1
 482 000c AB42     		cmp	r3, r5
 483 000e 00F2AF80 		bhi	.L41
 484              	.L31:
1038:../user/source/DLT645.c ****         return false;
1039:../user/source/DLT645.c ****     else if ((result->count == ref1->count) &&
 485              		.loc 1 1039 0
 486 0012 A342     		cmp	r3, r4
 487 0014 34D1     		bne	.L33
1040:../user/source/DLT645.c ****              (result->count > ref2->count)) //ÏÈref1Ïà£¬ºóresultÏà,¸ù¾İref1ĞŞ¸Äresult
 488              		.loc 1 1040 0 discriminator 1
 489 0016 0D79     		ldrb	r5, [r1, #4]	@ zero_extendqisi2
1039:../user/source/DLT645.c ****              (result->count > ref2->count)) //ÏÈref1Ïà£¬ºóresultÏà,¸ù¾İref1ĞŞ¸Äresult
 490              		.loc 1 1039 0 discriminator 1
 491 0018 AB42     		cmp	r3, r5
 492 001a 31D9     		bls	.L33
1041:../user/source/DLT645.c ****     {
1042:../user/source/DLT645.c ****         if (ref1->value == 0 || result->value == 0 || ref1->isminus || result->isminus)
 493              		.loc 1 1042 0
 494 001c 0368     		ldr	r3, [r0]
 495 001e 002B     		cmp	r3, #0
 496 0020 00F0A880 		beq	.L42
 497              		.loc 1 1042 0 is_stmt 0 discriminator 1
 498 0024 1168     		ldr	r1, [r2]
 499              	.LVL68:
 500 0026 0029     		cmp	r1, #0
 501 0028 00F0A680 		beq	.L43
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 28


 502              		.loc 1 1042 0 discriminator 2
 503 002c 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2
 504              	.LVL69:
 505 002e 0028     		cmp	r0, #0
 506 0030 40F0A480 		bne	.L44
 507              		.loc 1 1042 0 discriminator 3
 508 0034 5479     		ldrb	r4, [r2, #5]	@ zero_extendqisi2
 509 0036 002C     		cmp	r4, #0
 510 0038 40F0B580 		bne	.L32
1043:../user/source/DLT645.c ****             return false; //ÒÑ¾­ÊÕµ½µÄÁ½ÏàµçÁ÷ÖĞ£¬ÓĞ0Öµ£¬»òÕßÓĞ¸ºÖµ£¬²»×öĞŞ¸Ä
1044:../user/source/DLT645.c ****         if (result->value < ref1->value)
 511              		.loc 1 1044 0 is_stmt 1
 512 003c 8B42     		cmp	r3, r1
 513 003e 0CD9     		bls	.L34
1045:../user/source/DLT645.c ****         {
1046:../user/source/DLT645.c ****             //ÈôresultĞ¡£¬resultĞŞ¸ÄÎªref1µÄ¹Ì¶¨±ÈÀı£ºCURRENT_MAX_DVALUE/100
1047:../user/source/DLT645.c ****             result->value = ((result->value < (CURRENT_MAX_DVALUE * ref1->value / 100))
1048:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * ref1->value / 100
 514              		.loc 1 1048 0
 515 0040 03EB8303 		add	r3, r3, r3, lsl #2
 516 0044 1801     		lsls	r0, r3, #4
 517 0046 594B     		ldr	r3, .L56
 518 0048 A3FB0003 		umull	r0, r3, r3, r0
 519 004c 5B09     		lsrs	r3, r3, #5
1049:../user/source/DLT645.c ****                                  : result->value);
 520              		.loc 1 1049 0
 521 004e 9942     		cmp	r1, r3
 522 0050 38BF     		it	cc
 523 0052 1946     		movcc	r1, r3
1047:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * ref1->value / 100
 524              		.loc 1 1047 0
 525 0054 1160     		str	r1, [r2]
1050:../user/source/DLT645.c ****         }
1051:../user/source/DLT645.c ****         else
1052:../user/source/DLT645.c ****         {
1053:../user/source/DLT645.c ****             //Èôresult´ó£¬resultĞŞ¸ÄÎªref1µÄ¹Ì¶¨±ÈÀı£º100/CURRENT_MAX_DVALUE£»²»³¬¹ı·¶Î§»òÕßref1µÈÓ
1054:../user/source/DLT645.c ****             result->value = ((CURRENT_MAX_DVALUE * result->value / 100 > ref1->value)
1055:../user/source/DLT645.c ****                                  ? 100 * ref1->value / CURRENT_MAX_DVALUE
1056:../user/source/DLT645.c ****                                  : result->value);
1057:../user/source/DLT645.c ****         }
1058:../user/source/DLT645.c ****         return true;
 526              		.loc 1 1058 0
 527 0056 0120     		movs	r0, #1
 528 0058 A5E0     		b	.L32
 529              	.L34:
1054:../user/source/DLT645.c ****                                  ? 100 * ref1->value / CURRENT_MAX_DVALUE
 530              		.loc 1 1054 0
 531 005a 01EB8104 		add	r4, r1, r1, lsl #2
 532 005e 2001     		lsls	r0, r4, #4
 533 0060 524C     		ldr	r4, .L56
 534 0062 A4FB0040 		umull	r4, r0, r4, r0
1056:../user/source/DLT645.c ****         }
 535              		.loc 1 1056 0
 536 0066 B3EB501F 		cmp	r3, r0, lsr #5
 537 006a 06D2     		bcs	.L35
1055:../user/source/DLT645.c ****                                  : result->value);
 538              		.loc 1 1055 0 discriminator 1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 29


 539 006c 6421     		movs	r1, #100
 540 006e 01FB03F3 		mul	r3, r1, r3
1056:../user/source/DLT645.c ****         }
 541              		.loc 1 1056 0 discriminator 1
 542 0072 4F49     		ldr	r1, .L56+4
 543 0074 A1FB0331 		umull	r3, r1, r1, r3
 544 0078 8909     		lsrs	r1, r1, #6
 545              	.L35:
1054:../user/source/DLT645.c ****                                  ? 100 * ref1->value / CURRENT_MAX_DVALUE
 546              		.loc 1 1054 0
 547 007a 1160     		str	r1, [r2]
 548              		.loc 1 1058 0
 549 007c 0120     		movs	r0, #1
 550 007e 92E0     		b	.L32
 551              	.LVL70:
 552              	.L33:
1059:../user/source/DLT645.c ****     }
1060:../user/source/DLT645.c ****     else if ((result->count == ref2->count) && (result->count > ref1->count)) //ÏÈref2Ïà£¬ºóresultÏ
 553              		.loc 1 1060 0
 554 0080 0D79     		ldrb	r5, [r1, #4]	@ zero_extendqisi2
 555 0082 AB42     		cmp	r3, r5
 556 0084 30D1     		bne	.L36
 557              		.loc 1 1060 0 is_stmt 0 discriminator 1
 558 0086 A342     		cmp	r3, r4
 559 0088 2ED9     		bls	.L36
1061:../user/source/DLT645.c ****     {
1062:../user/source/DLT645.c ****         if (ref2->value == 0 || result->value == 0 || ref2->isminus || result->isminus)
 560              		.loc 1 1062 0 is_stmt 1
 561 008a 0B68     		ldr	r3, [r1]
 562 008c 002B     		cmp	r3, #0
 563 008e 77D0     		beq	.L45
 564              		.loc 1 1062 0 is_stmt 0 discriminator 1
 565 0090 1468     		ldr	r4, [r2]
 566 0092 002C     		cmp	r4, #0
 567 0094 76D0     		beq	.L46
 568              		.loc 1 1062 0 discriminator 2
 569 0096 4879     		ldrb	r0, [r1, #5]	@ zero_extendqisi2
 570              	.LVL71:
 571 0098 0028     		cmp	r0, #0
 572 009a 75D1     		bne	.L47
 573              		.loc 1 1062 0 discriminator 3
 574 009c 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 575              	.LVL72:
 576 009e 0029     		cmp	r1, #0
 577 00a0 40F08180 		bne	.L32
1063:../user/source/DLT645.c ****             return false;
1064:../user/source/DLT645.c ****         if (result->value < ref2->value)
 578              		.loc 1 1064 0 is_stmt 1
 579 00a4 A342     		cmp	r3, r4
 580 00a6 0CD9     		bls	.L37
1065:../user/source/DLT645.c ****         {
1066:../user/source/DLT645.c ****             result->value = ((result->value < (CURRENT_MAX_DVALUE * ref2->value / 100))
1067:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * ref2->value / 100
 581              		.loc 1 1067 0
 582 00a8 03EB8303 		add	r3, r3, r3, lsl #2
 583 00ac 1901     		lsls	r1, r3, #4
 584 00ae 3F4B     		ldr	r3, .L56
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 30


 585 00b0 A3FB0113 		umull	r1, r3, r3, r1
 586 00b4 5B09     		lsrs	r3, r3, #5
1068:../user/source/DLT645.c ****                                  : result->value);
 587              		.loc 1 1068 0
 588 00b6 9C42     		cmp	r4, r3
 589 00b8 38BF     		it	cc
 590 00ba 1C46     		movcc	r4, r3
1066:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * ref2->value / 100
 591              		.loc 1 1066 0
 592 00bc 1460     		str	r4, [r2]
1069:../user/source/DLT645.c ****         }
1070:../user/source/DLT645.c ****         else
1071:../user/source/DLT645.c ****         {
1072:../user/source/DLT645.c ****             result->value = ((CURRENT_MAX_DVALUE * result->value / 100 > ref2->value)
1073:../user/source/DLT645.c ****                                  ? 100 * ref2->value / CURRENT_MAX_DVALUE
1074:../user/source/DLT645.c ****                                  : result->value);
1075:../user/source/DLT645.c ****         }
1076:../user/source/DLT645.c ****         return true;
 593              		.loc 1 1076 0
 594 00be 0120     		movs	r0, #1
 595 00c0 71E0     		b	.L32
 596              	.L37:
1072:../user/source/DLT645.c ****                                  ? 100 * ref2->value / CURRENT_MAX_DVALUE
 597              		.loc 1 1072 0
 598 00c2 04EB8400 		add	r0, r4, r4, lsl #2
 599 00c6 0101     		lsls	r1, r0, #4
 600 00c8 3848     		ldr	r0, .L56
 601 00ca A0FB0101 		umull	r0, r1, r0, r1
1074:../user/source/DLT645.c ****         }
 602              		.loc 1 1074 0
 603 00ce B3EB511F 		cmp	r3, r1, lsr #5
 604 00d2 06D2     		bcs	.L38
1073:../user/source/DLT645.c ****                                  : result->value);
 605              		.loc 1 1073 0 discriminator 1
 606 00d4 6424     		movs	r4, #100
 607 00d6 04FB03F3 		mul	r3, r4, r3
1074:../user/source/DLT645.c ****         }
 608              		.loc 1 1074 0 discriminator 1
 609 00da 354C     		ldr	r4, .L56+4
 610 00dc A4FB0334 		umull	r3, r4, r4, r3
 611 00e0 A409     		lsrs	r4, r4, #6
 612              	.L38:
1072:../user/source/DLT645.c ****                                  ? 100 * ref2->value / CURRENT_MAX_DVALUE
 613              		.loc 1 1072 0
 614 00e2 1460     		str	r4, [r2]
 615              		.loc 1 1076 0
 616 00e4 0120     		movs	r0, #1
 617 00e6 5EE0     		b	.L32
 618              	.LVL73:
 619              	.L36:
1077:../user/source/DLT645.c ****     }
1078:../user/source/DLT645.c ****     else if ((result->count == ref1->count) && (result->count == ref2->count)) //Ç°Á½ÏàÊÇref1ºÍref2
 620              		.loc 1 1078 0
 621 00e8 A342     		cmp	r3, r4
 622 00ea 4FD1     		bne	.L48
 623              		.loc 1 1078 0 is_stmt 0 discriminator 1
 624 00ec AB42     		cmp	r3, r5
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 31


 625 00ee 4FD1     		bne	.L49
1079:../user/source/DLT645.c ****     {
1080:../user/source/DLT645.c ****         if ((ref1->value == 0) || (ref2->value == 0) || (result->value == 0) || ref1->isminus || re
 626              		.loc 1 1080 0 is_stmt 1
 627 00f0 0368     		ldr	r3, [r0]
 628 00f2 002B     		cmp	r3, #0
 629 00f4 4ED0     		beq	.L50
 630              		.loc 1 1080 0 is_stmt 0 discriminator 1
 631 00f6 0C68     		ldr	r4, [r1]
 632 00f8 002C     		cmp	r4, #0
 633 00fa 4DD0     		beq	.L51
 634              		.loc 1 1080 0 discriminator 2
 635 00fc 1568     		ldr	r5, [r2]
 636 00fe 002D     		cmp	r5, #0
 637 0100 4CD0     		beq	.L52
 638              		.loc 1 1080 0 discriminator 3
 639 0102 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2
 640              	.LVL74:
 641 0104 0028     		cmp	r0, #0
 642 0106 4BD1     		bne	.L53
 643              		.loc 1 1080 0 discriminator 4
 644 0108 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 645              	.LVL75:
 646 010a 0029     		cmp	r1, #0
 647 010c 4BD1     		bne	.L32
 648              		.loc 1 1080 0 discriminator 5
 649 010e 5079     		ldrb	r0, [r2, #5]	@ zero_extendqisi2
 650 0110 0028     		cmp	r0, #0
 651 0112 47D1     		bne	.L54
1081:../user/source/DLT645.c ****             return false;
1082:../user/source/DLT645.c ****         if (result->value > MAX(ref1->value, ref2->value)) //result±ÈÇ°Á½Ïà¶¼´ó£¬resultĞŞ¸ÄÎª½ÏĞ¡Öµ
 652              		.loc 1 1082 0 is_stmt 1
 653 0114 1946     		mov	r1, r3
 654 0116 A342     		cmp	r3, r4
 655 0118 38BF     		it	cc
 656 011a 2146     		movcc	r1, r4
 657 011c 8D42     		cmp	r5, r1
 658 011e 15D9     		bls	.L39
1083:../user/source/DLT645.c ****         {
1084:../user/source/DLT645.c ****             result->value = (CURRENT_MAX_DVALUE * result->value / 100 >= MIN(ref1->value, ref2->val
 659              		.loc 1 1084 0
 660 0120 05EB8500 		add	r0, r5, r5, lsl #2
 661 0124 0101     		lsls	r1, r0, #4
 662 0126 2148     		ldr	r0, .L56
 663 0128 A0FB0101 		umull	r0, r1, r0, r1
 664 012c A342     		cmp	r3, r4
 665 012e 28BF     		it	cs
 666 0130 2346     		movcs	r3, r4
1085:../user/source/DLT645.c ****                                  ? 100 * MIN(ref1->value, ref2->value) / CURRENT_MAX_DVALUE
1086:../user/source/DLT645.c ****                                  : result->value);
 667              		.loc 1 1086 0
 668 0132 B3EB511F 		cmp	r3, r1, lsr #5
 669 0136 06D8     		bhi	.L40
1085:../user/source/DLT645.c ****                                  ? 100 * MIN(ref1->value, ref2->value) / CURRENT_MAX_DVALUE
 670              		.loc 1 1085 0 discriminator 1
 671 0138 6425     		movs	r5, #100
 672 013a 05FB03F3 		mul	r3, r5, r3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 32


 673              		.loc 1 1086 0 discriminator 1
 674 013e 1C4D     		ldr	r5, .L56+4
 675 0140 A5FB0335 		umull	r3, r5, r5, r3
 676 0144 AD09     		lsrs	r5, r5, #6
 677              	.L40:
1084:../user/source/DLT645.c ****                                  ? 100 * MIN(ref1->value, ref2->value) / CURRENT_MAX_DVALUE
 678              		.loc 1 1084 0
 679 0146 1560     		str	r5, [r2]
1087:../user/source/DLT645.c ****         }
1088:../user/source/DLT645.c ****         else if (result->value < MIN(ref1->value, ref2->value)) //result±ÈÇ°Á½Ïà¶¼Ğ¡£¬resultĞŞ¸ÄÎª½
1089:../user/source/DLT645.c ****         {
1090:../user/source/DLT645.c ****             result->value = ((result->value < CURRENT_MAX_DVALUE * MAX(ref1->value, ref2->value) / 
1091:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * MAX(ref1->value, ref2->value) / 100
1092:../user/source/DLT645.c ****                                  : result->value);
1093:../user/source/DLT645.c ****         }
1094:../user/source/DLT645.c ****         else //resultÔÚref1ºÍref2Ö®¼ä£¬ÒòÎªÇ°Á½Ö¡²îÖµÒÑ±£Ö¤²»³¬³ö·¶Î§£¬ËùÒÔresult²»ĞèÒªĞŞ¸Ä
1095:../user/source/DLT645.c ****         {
1096:../user/source/DLT645.c ****             return false;
1097:../user/source/DLT645.c ****         }
1098:../user/source/DLT645.c ****         return true;
 680              		.loc 1 1098 0
 681 0148 0120     		movs	r0, #1
 682 014a 2CE0     		b	.L32
 683              	.L39:
1088:../user/source/DLT645.c ****         {
 684              		.loc 1 1088 0
 685 014c A342     		cmp	r3, r4
 686 014e 28BF     		it	cs
 687 0150 2346     		movcs	r3, r4
 688 0152 9D42     		cmp	r5, r3
 689 0154 27D2     		bcs	.L32
1091:../user/source/DLT645.c ****                                  : result->value);
 690              		.loc 1 1091 0
 691 0156 01EB8101 		add	r1, r1, r1, lsl #2
 692 015a 0B01     		lsls	r3, r1, #4
 693 015c 1349     		ldr	r1, .L56
 694 015e A1FB0313 		umull	r1, r3, r1, r3
 695 0162 5B09     		lsrs	r3, r3, #5
1092:../user/source/DLT645.c ****         }
 696              		.loc 1 1092 0
 697 0164 9D42     		cmp	r5, r3
 698 0166 38BF     		it	cc
 699 0168 1D46     		movcc	r5, r3
1090:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * MAX(ref1->value, ref2->value) / 100
 700              		.loc 1 1090 0
 701 016a 1560     		str	r5, [r2]
 702              		.loc 1 1098 0
 703 016c 0120     		movs	r0, #1
 704 016e 1AE0     		b	.L32
 705              	.LVL76:
 706              	.L41:
1038:../user/source/DLT645.c ****     else if ((result->count == ref1->count) &&
 707              		.loc 1 1038 0
 708 0170 0020     		movs	r0, #0
 709              	.LVL77:
 710 0172 18E0     		b	.L32
 711              	.LVL78:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 33


 712              	.L42:
1043:../user/source/DLT645.c ****         if (result->value < ref1->value)
 713              		.loc 1 1043 0
 714 0174 0020     		movs	r0, #0
 715              	.LVL79:
 716 0176 16E0     		b	.L32
 717              	.LVL80:
 718              	.L43:
 719 0178 0020     		movs	r0, #0
 720              	.LVL81:
 721 017a 14E0     		b	.L32
 722              	.L44:
 723 017c 0020     		movs	r0, #0
 724 017e 12E0     		b	.L32
 725              	.LVL82:
 726              	.L45:
1063:../user/source/DLT645.c ****         if (result->value < ref2->value)
 727              		.loc 1 1063 0
 728 0180 0020     		movs	r0, #0
 729              	.LVL83:
 730 0182 10E0     		b	.L32
 731              	.LVL84:
 732              	.L46:
 733 0184 0020     		movs	r0, #0
 734              	.LVL85:
 735 0186 0EE0     		b	.L32
 736              	.L47:
 737 0188 0020     		movs	r0, #0
 738 018a 0CE0     		b	.L32
 739              	.LVL86:
 740              	.L48:
1099:../user/source/DLT645.c ****     }
1100:../user/source/DLT645.c ****     return true;
 741              		.loc 1 1100 0
 742 018c 0120     		movs	r0, #1
 743              	.LVL87:
 744 018e 0AE0     		b	.L32
 745              	.LVL88:
 746              	.L49:
 747 0190 0120     		movs	r0, #1
 748              	.LVL89:
 749 0192 08E0     		b	.L32
 750              	.LVL90:
 751              	.L50:
1081:../user/source/DLT645.c ****         if (result->value > MAX(ref1->value, ref2->value)) //result±ÈÇ°Á½Ïà¶¼´ó£¬resultĞŞ¸ÄÎª½ÏĞ¡Öµ
 752              		.loc 1 1081 0
 753 0194 0020     		movs	r0, #0
 754              	.LVL91:
 755 0196 06E0     		b	.L32
 756              	.LVL92:
 757              	.L51:
 758 0198 0020     		movs	r0, #0
 759              	.LVL93:
 760 019a 04E0     		b	.L32
 761              	.LVL94:
 762              	.L52:
 763 019c 0020     		movs	r0, #0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 34


 764              	.LVL95:
 765 019e 02E0     		b	.L32
 766              	.L53:
 767 01a0 0020     		movs	r0, #0
 768 01a2 00E0     		b	.L32
 769              	.LVL96:
 770              	.L54:
 771 01a4 0846     		mov	r0, r1
 772              	.L32:
1101:../user/source/DLT645.c **** }
 773              		.loc 1 1101 0
 774 01a6 30BC     		pop	{r4, r5}
 775              	.LCFI10:
 776              		.cfi_restore 5
 777              		.cfi_restore 4
 778              		.cfi_def_cfa_offset 0
 779 01a8 7047     		bx	lr
 780              	.L57:
 781 01aa 00BF     		.align	2
 782              	.L56:
 783 01ac 1F85EB51 		.word	1374389535
 784 01b0 CDCCCCCC 		.word	-858993459
 785              		.cfi_endproc
 786              	.LFE129:
 788              		.section	.text.vCurrentTriple_Modify_Method,"ax",%progbits
 789              		.align	2
 790              		.thumb
 791              		.thumb_func
 793              	vCurrentTriple_Modify_Method:
 794              	.LFB130:
1102:../user/source/DLT645.c **** 
1103:../user/source/DLT645.c **** /*****************************************************
1104:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÈıÏàµçÁ÷ĞŞ¸Ä·½·¨
1105:../user/source/DLT645.c ****  * Êä    Èë£ºÈıÏà²Î¿¼µçÁ÷
1106:../user/source/DLT645.c ****  * Êä    ³ö£ºÎŞ
1107:../user/source/DLT645.c ****  * Ëµ	  Ã÷£º×î´óµçÁ÷Öµ¸ÄÎªÆ½¾ùÖµµÄ1.1±¶£¬ÖĞ¼äÖµ¸ÄÎªÆ½¾ùÖµ£¬×îĞ¡Öµ¸ÄÎªÆ½¾ùÖµµÄ90%£¬
1108:../user/source/DLT645.c ****  *				´ËÊ±×î´óµçÁ÷ÖµºÍ×îµçÁ÷ÖµµÄ²îÖµÊÇ×î´óÖµµÄ18.18%
1109:../user/source/DLT645.c ****  *				
1110:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1111:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.12.13
1112:../user/source/DLT645.c ****  *******************************************************/
1113:../user/source/DLT645.c **** void vCurrentTriple_Modify_Method(CURRENT *current_max, CURRENT *current_mid, CURRENT *current_min)
1114:../user/source/DLT645.c **** {
 795              		.loc 1 1114 0
 796              		.cfi_startproc
 797              		@ args = 0, pretend = 0, frame = 0
 798              		@ frame_needed = 0, uses_anonymous_args = 0
 799              		@ link register save eliminated.
 800              	.LVL97:
 801 0000 30B4     		push	{r4, r5}
 802              	.LCFI11:
 803              		.cfi_def_cfa_offset 8
 804              		.cfi_offset 4, -8
 805              		.cfi_offset 5, -4
1115:../user/source/DLT645.c ****     uint32_t current_average;
1116:../user/source/DLT645.c ****     current_average = (current_max->value + current_mid->value + current_min->value) / 3;
 806              		.loc 1 1116 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 35


 807 0002 0468     		ldr	r4, [r0]
 808 0004 0B68     		ldr	r3, [r1]
 809 0006 1C44     		add	r4, r4, r3
 810 0008 1368     		ldr	r3, [r2]
 811 000a 2344     		add	r3, r3, r4
 812 000c 0324     		movs	r4, #3
 813 000e B3FBF4F3 		udiv	r3, r3, r4
 814              	.LVL98:
1117:../user/source/DLT645.c ****     current_max->value = current_average * 11 / 10; //×î´óÖµ¸ÄÎªÆ½¾ùÖµµÄ110%
 815              		.loc 1 1117 0
 816 0012 0B24     		movs	r4, #11
 817 0014 04FB03F4 		mul	r4, r4, r3
 818 0018 0A25     		movs	r5, #10
 819 001a B4FBF5F4 		udiv	r4, r4, r5
 820 001e 0460     		str	r4, [r0]
1118:../user/source/DLT645.c ****     current_mid->value = current_average;           //ÖĞ¼äÖµ¸ÄÎªÆ½¾ùÖµ
 821              		.loc 1 1118 0
 822 0020 0B60     		str	r3, [r1]
1119:../user/source/DLT645.c ****     current_min->value = current_average * 9 / 10;  //×îĞ¡Öµ¸ÄÎªÆ½¾ùÖµµÄ90%£»
 823              		.loc 1 1119 0
 824 0022 03EBC303 		add	r3, r3, r3, lsl #3
 825              	.LVL99:
 826 0026 B3FBF5F3 		udiv	r3, r3, r5
 827 002a 1360     		str	r3, [r2]
 828              	.LVL100:
1120:../user/source/DLT645.c **** }
 829              		.loc 1 1120 0
 830 002c 30BC     		pop	{r4, r5}
 831              	.LCFI12:
 832              		.cfi_restore 5
 833              		.cfi_restore 4
 834              		.cfi_def_cfa_offset 0
 835 002e 7047     		bx	lr
 836              		.cfi_endproc
 837              	.LFE130:
 839              		.section	.text.vCurrent_Modify,"ax",%progbits
 840              		.align	2
 841              		.global	vCurrent_Modify
 842              		.thumb
 843              		.thumb_func
 845              	vCurrent_Modify:
 846              	.LFB131:
1121:../user/source/DLT645.c **** 
1122:../user/source/DLT645.c **** /*****************************************************
1123:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºĞŞ¸ÄµçÁ÷¸÷Ïà²îÖµ
1124:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
1125:../user/source/DLT645.c ****  * Êä    ³ö£ºÎŞ
1126:../user/source/DLT645.c ****  * Ëµ	  Ã÷£ºµ¥ÏàµçÁ÷£ºÈôÈÎÒâÁ½Ïà²îÖµ´óÓÚ20%µÄ½Ï´óÖµ£¬Ôò½«½ÏĞ¡Öµ¸ÄÎª½Ï´óÖµµÄ80%          
1127:../user/source/DLT645.c ****  *				ÈıÏàµçÁ÷£º°´ÕÕ×ÜºÍ²»±äÀ´ĞŞ¸Ä
1128:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1129:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.12.13
1130:../user/source/DLT645.c ****  *******************************************************/
1131:../user/source/DLT645.c **** void vCurrent_Modify(uint8_t *pucBuffer)
1132:../user/source/DLT645.c **** {
 847              		.loc 1 1132 0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 36


 850              		@ frame_needed = 0, uses_anonymous_args = 0
 851              	.LVL101:
 852 0000 30B5     		push	{r4, r5, lr}
 853              	.LCFI13:
 854              		.cfi_def_cfa_offset 12
 855              		.cfi_offset 4, -12
 856              		.cfi_offset 5, -8
 857              		.cfi_offset 14, -4
 858 0002 83B0     		sub	sp, sp, #12
 859              	.LCFI14:
 860              		.cfi_def_cfa_offset 24
 861 0004 0446     		mov	r4, r0
 862              	.LVL102:
1133:../user/source/DLT645.c ****     uint8_t i;
1134:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
1135:../user/source/DLT645.c ****     switch (pucBuffer[11])
 863              		.loc 1 1135 0
 864 0006 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 865 0008 323B     		subs	r3, r3, #50
 866 000a 042B     		cmp	r3, #4
 867 000c 00F22C81 		bhi	.L60
 868 0010 DFE813F0 		tbh	[pc, r3, lsl #1]
 869              	.L63:
 870 0014 0500     		.2byte	(.L62-.L63)/2
 871 0016 2A01     		.2byte	(.L60-.L63)/2
 872 0018 AB00     		.2byte	(.L64-.L63)/2
 873 001a D600     		.2byte	(.L65-.L63)/2
 874 001c 0101     		.2byte	(.L66-.L63)/2
 875              		.p2align 1
 876              	.L62:
1136:../user/source/DLT645.c ****     {
1137:../user/source/DLT645.c ****     case 0x32: //ÈıÏàµçÁ÷Êı¾İ¿é
1138:../user/source/DLT645.c ****     {
1139:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Acurrent);
 877              		.loc 1 1139 0
 878 001e 934D     		ldr	r5, .L82
 879 0020 2B46     		mov	r3, r5
 880 0022 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 881 0024 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 882 0026 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 883              	.LVL103:
 884 0028 FFF7FEFF 		bl	vGet_Current
 885              	.LVL104:
1140:../user/source/DLT645.c ****         /*µçÁ÷Îª¸ºÖµ,²»ĞŞ¸ÄµçÁ÷*/
1141:../user/source/DLT645.c ****         if (Acurrent.isminus || Bcurrent.isminus || Ccurrent.isminus)
 886              		.loc 1 1141 0
 887 002c 6B79     		ldrb	r3, [r5, #5]	@ zero_extendqisi2
 888 002e 002B     		cmp	r3, #0
 889 0030 40F01A81 		bne	.L60
 890              		.loc 1 1141 0 is_stmt 0 discriminator 1
 891 0034 8E4B     		ldr	r3, .L82+4
 892 0036 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 893 0038 002B     		cmp	r3, #0
 894 003a 40F01581 		bne	.L60
 895              		.loc 1 1141 0 discriminator 2
 896 003e 8D4B     		ldr	r3, .L82+8
 897 0040 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 37


 898 0042 002B     		cmp	r3, #0
 899 0044 40F01081 		bne	.L60
1142:../user/source/DLT645.c ****             return;
1143:../user/source/DLT645.c ****         /*µçÁ÷Îª0£¬²»ĞŞ¸ÄµçÁ÷*/
1144:../user/source/DLT645.c ****         if ((Acurrent.value == 0) || (Bcurrent.value == 0) || (Ccurrent.value == 0))
 900              		.loc 1 1144 0 is_stmt 1
 901 0048 2B68     		ldr	r3, [r5]
 902 004a 002B     		cmp	r3, #0
 903 004c 00F00C81 		beq	.L60
 904              		.loc 1 1144 0 is_stmt 0 discriminator 1
 905 0050 874A     		ldr	r2, .L82+4
 906 0052 1268     		ldr	r2, [r2]
 907 0054 002A     		cmp	r2, #0
 908 0056 00F00781 		beq	.L60
 909              		.loc 1 1144 0 discriminator 2
 910 005a 8649     		ldr	r1, .L82+8
 911 005c 0868     		ldr	r0, [r1]
 912 005e 0028     		cmp	r0, #0
 913 0060 00F00281 		beq	.L60
1145:../user/source/DLT645.c ****             return;
1146:../user/source/DLT645.c ****         /*µçÁ÷Ïà»¥Ö®¼ä²»³¬²î£¬²»ĞŞ¸ÄµçÁ÷*/
1147:../user/source/DLT645.c ****         if (CURRENT_MAX_DVALUE * MAX(Acurrent.value, MAX(Bcurrent.value, Ccurrent.value)) / 100 <=
 914              		.loc 1 1147 0 is_stmt 1
 915 0064 1146     		mov	r1, r2
 916 0066 8242     		cmp	r2, r0
 917 0068 38BF     		it	cc
 918 006a 0146     		movcc	r1, r0
 919 006c 9942     		cmp	r1, r3
 920 006e 38BF     		it	cc
 921 0070 1946     		movcc	r1, r3
 922 0072 01EB8101 		add	r1, r1, r1, lsl #2
 923 0076 0D01     		lsls	r5, r1, #4
 924 0078 7F49     		ldr	r1, .L82+12
 925 007a A1FB0515 		umull	r1, r5, r1, r5
1148:../user/source/DLT645.c ****             MIN(Acurrent.value, MIN(Bcurrent.value, Ccurrent.value)))
 926              		.loc 1 1148 0
 927 007e 1146     		mov	r1, r2
 928 0080 8242     		cmp	r2, r0
 929 0082 28BF     		it	cs
 930 0084 0146     		movcs	r1, r0
 931 0086 9942     		cmp	r1, r3
 932 0088 28BF     		it	cs
 933 008a 1946     		movcs	r1, r3
1147:../user/source/DLT645.c ****             MIN(Acurrent.value, MIN(Bcurrent.value, Ccurrent.value)))
 934              		.loc 1 1147 0
 935 008c B1EB551F 		cmp	r1, r5, lsr #5
 936 0090 80F0EA80 		bcs	.L60
1149:../user/source/DLT645.c ****             return;
1150:../user/source/DLT645.c ****         else //ĞèÒªĞŞ¸Ä£¬×î´óÖµ¼õĞ¡£¬×îĞ¡ÖµÔö´ó£¬Ê£ÏÂµÄÊÇÖĞ¼äÖµ
1151:../user/source/DLT645.c ****         {
1152:../user/source/DLT645.c ****             if ((Acurrent.value >= Bcurrent.value) && (Bcurrent.value >= Ccurrent.value))
 937              		.loc 1 1152 0
 938 0094 9342     		cmp	r3, r2
 939 0096 07D3     		bcc	.L67
 940              		.loc 1 1152 0 is_stmt 0 discriminator 1
 941 0098 8242     		cmp	r2, r0
 942 009a 05D3     		bcc	.L67
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 38


1153:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Acurrent, &Bcurrent, &Ccurrent);
 943              		.loc 1 1153 0 is_stmt 1
 944 009c 754A     		ldr	r2, .L82+8
 945 009e 7449     		ldr	r1, .L82+4
 946 00a0 7248     		ldr	r0, .L82
 947 00a2 FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 948              	.LVL105:
 949 00a6 30E0     		b	.L68
 950              	.L67:
1154:../user/source/DLT645.c ****             else if ((Acurrent.value >= Ccurrent.value) && (Ccurrent.value >= Bcurrent.value))
 951              		.loc 1 1154 0
 952 00a8 8342     		cmp	r3, r0
 953 00aa 07D3     		bcc	.L69
 954              		.loc 1 1154 0 is_stmt 0 discriminator 1
 955 00ac 8242     		cmp	r2, r0
 956 00ae 05D8     		bhi	.L69
1155:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Acurrent, &Ccurrent, &Bcurrent);
 957              		.loc 1 1155 0 is_stmt 1
 958 00b0 6F4A     		ldr	r2, .L82+4
 959 00b2 7049     		ldr	r1, .L82+8
 960 00b4 6D48     		ldr	r0, .L82
 961 00b6 FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 962              	.LVL106:
 963 00ba 26E0     		b	.L68
 964              	.L69:
1156:../user/source/DLT645.c ****             else if ((Bcurrent.value >= Acurrent.value) && (Acurrent.value >= Ccurrent.value))
 965              		.loc 1 1156 0
 966 00bc 9342     		cmp	r3, r2
 967 00be 07D8     		bhi	.L70
 968              		.loc 1 1156 0 is_stmt 0 discriminator 1
 969 00c0 8342     		cmp	r3, r0
 970 00c2 05D3     		bcc	.L70
1157:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Bcurrent, &Acurrent, &Ccurrent);
 971              		.loc 1 1157 0 is_stmt 1
 972 00c4 6B4A     		ldr	r2, .L82+8
 973 00c6 6949     		ldr	r1, .L82
 974 00c8 6948     		ldr	r0, .L82+4
 975 00ca FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 976              	.LVL107:
 977 00ce 1CE0     		b	.L68
 978              	.L70:
1158:../user/source/DLT645.c ****             else if ((Bcurrent.value >= Ccurrent.value) && (Ccurrent.value >= Acurrent.value))
 979              		.loc 1 1158 0
 980 00d0 8242     		cmp	r2, r0
 981 00d2 07D3     		bcc	.L71
 982              		.loc 1 1158 0 is_stmt 0 discriminator 1
 983 00d4 8342     		cmp	r3, r0
 984 00d6 05D8     		bhi	.L71
1159:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Bcurrent, &Ccurrent, &Acurrent);
 985              		.loc 1 1159 0 is_stmt 1
 986 00d8 644A     		ldr	r2, .L82
 987 00da 6649     		ldr	r1, .L82+8
 988 00dc 6448     		ldr	r0, .L82+4
 989 00de FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 990              	.LVL108:
 991 00e2 12E0     		b	.L68
 992              	.L71:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 39


1160:../user/source/DLT645.c ****             else if ((Ccurrent.value >= Acurrent.value) && (Acurrent.value >= Bcurrent.value))
 993              		.loc 1 1160 0
 994 00e4 8342     		cmp	r3, r0
 995 00e6 07D8     		bhi	.L72
 996              		.loc 1 1160 0 is_stmt 0 discriminator 1
 997 00e8 9342     		cmp	r3, r2
 998 00ea 05D3     		bcc	.L72
1161:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Ccurrent, &Acurrent, &Bcurrent);
 999              		.loc 1 1161 0 is_stmt 1
 1000 00ec 604A     		ldr	r2, .L82+4
 1001 00ee 5F49     		ldr	r1, .L82
 1002 00f0 6048     		ldr	r0, .L82+8
 1003 00f2 FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 1004              	.LVL109:
 1005 00f6 08E0     		b	.L68
 1006              	.L72:
1162:../user/source/DLT645.c ****             else if ((Ccurrent.value >= Bcurrent.value) && (Bcurrent.value >= Acurrent.value))
 1007              		.loc 1 1162 0
 1008 00f8 8242     		cmp	r2, r0
 1009 00fa 06D8     		bhi	.L68
 1010              		.loc 1 1162 0 is_stmt 0 discriminator 1
 1011 00fc 9342     		cmp	r3, r2
 1012 00fe 04D8     		bhi	.L68
1163:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Ccurrent, &Bcurrent, &Acurrent);
 1013              		.loc 1 1163 0 is_stmt 1
 1014 0100 5A4A     		ldr	r2, .L82
 1015 0102 5B49     		ldr	r1, .L82+4
 1016 0104 5B48     		ldr	r0, .L82+8
 1017 0106 FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 1018              	.LVL110:
 1019              	.L68:
1164:../user/source/DLT645.c ****             //AÏàµçÁ÷,Ê®½øÖÆÊı×ªBCDÂë
1165:../user/source/DLT645.c ****             vPut_Current(Acurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
 1020              		.loc 1 1165 0
 1021 010a 584D     		ldr	r5, .L82
 1022 010c 04F11003 		add	r3, r4, #16
 1023 0110 0093     		str	r3, [sp]
 1024 0112 04F10F03 		add	r3, r4, #15
 1025 0116 04F10E02 		add	r2, r4, #14
 1026 011a 95E80300 		ldmia	r5, {r0, r1}
 1027 011e FFF7FEFF 		bl	vPut_Current
 1028              	.LVL111:
1166:../user/source/DLT645.c ****             //BÏàµçÁ÷
1167:../user/source/DLT645.c ****             vPut_Current(Acurrent, &pucBuffer[17], &pucBuffer[18], &pucBuffer[19]);
 1029              		.loc 1 1167 0
 1030 0122 04F11303 		add	r3, r4, #19
 1031 0126 0093     		str	r3, [sp]
 1032 0128 04F11203 		add	r3, r4, #18
 1033 012c 04F11102 		add	r2, r4, #17
 1034 0130 95E80300 		ldmia	r5, {r0, r1}
 1035 0134 FFF7FEFF 		bl	vPut_Current
 1036              	.LVL112:
1168:../user/source/DLT645.c ****             //CÏàµçÁ÷
1169:../user/source/DLT645.c ****             vPut_Current(Acurrent, &pucBuffer[20], &pucBuffer[21], &pucBuffer[22]);
 1037              		.loc 1 1169 0
 1038 0138 04F11603 		add	r3, r4, #22
 1039 013c 0093     		str	r3, [sp]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 40


 1040 013e 04F11503 		add	r3, r4, #21
 1041 0142 04F11402 		add	r2, r4, #20
 1042 0146 95E80300 		ldmia	r5, {r0, r1}
 1043 014a FFF7FEFF 		bl	vPut_Current
 1044              	.LVL113:
1134:../user/source/DLT645.c ****     switch (pucBuffer[11])
 1045              		.loc 1 1134 0
 1046 014e 0022     		movs	r2, #0
1170:../user/source/DLT645.c ****             for (i = 0; i < 23; i++) //Êı¾İÓò³¤¶È23
 1047              		.loc 1 1170 0
 1048 0150 1346     		mov	r3, r2
 1049 0152 04E0     		b	.L73
 1050              	.LVL114:
 1051              	.L74:
1171:../user/source/DLT645.c ****             {
1172:../user/source/DLT645.c ****                 ucCheckData += pucBuffer[i];
 1052              		.loc 1 1172 0 discriminator 3
 1053 0154 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 1054 0156 0A44     		add	r2, r2, r1
 1055              	.LVL115:
 1056 0158 D2B2     		uxtb	r2, r2
 1057              	.LVL116:
1170:../user/source/DLT645.c ****             for (i = 0; i < 23; i++) //Êı¾İÓò³¤¶È23
 1058              		.loc 1 1170 0 discriminator 3
 1059 015a 0133     		adds	r3, r3, #1
 1060              	.LVL117:
 1061 015c DBB2     		uxtb	r3, r3
 1062              	.LVL118:
 1063              	.L73:
1170:../user/source/DLT645.c ****             for (i = 0; i < 23; i++) //Êı¾İÓò³¤¶È23
 1064              		.loc 1 1170 0 is_stmt 0 discriminator 1
 1065 015e 162B     		cmp	r3, #22
 1066 0160 F8D9     		bls	.L74
1173:../user/source/DLT645.c ****             }
1174:../user/source/DLT645.c ****             pucBuffer[23] = ucCheckData;
 1067              		.loc 1 1174 0 is_stmt 1
 1068 0162 E275     		strb	r2, [r4, #23]
1175:../user/source/DLT645.c ****             pucBuffer[24] = 0x16;
 1069              		.loc 1 1175 0
 1070 0164 1623     		movs	r3, #22
 1071              	.LVL119:
 1072 0166 2376     		strb	r3, [r4, #24]
1176:../user/source/DLT645.c ****         }
1177:../user/source/DLT645.c ****         break;
 1073              		.loc 1 1177 0
 1074 0168 7EE0     		b	.L60
 1075              	.LVL120:
 1076              	.L64:
1178:../user/source/DLT645.c ****     }
1179:../user/source/DLT645.c ****     case 0x34: //AÏàµçÁ÷
1180:../user/source/DLT645.c ****     {
1181:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Acurrent);
 1077              		.loc 1 1181 0
 1078 016a 404B     		ldr	r3, .L82
 1079 016c 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 1080 016e C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1081 0170 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 41


 1082              	.LVL121:
 1083 0172 FFF7FEFF 		bl	vGet_Current
 1084              	.LVL122:
1182:../user/source/DLT645.c ****         if (((pucBuffer[16] - 0x33) & 0x80) != 0)
 1085              		.loc 1 1182 0
 1086 0176 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1087 0178 333B     		subs	r3, r3, #51
 1088 017a 13F0800F 		tst	r3, #128
 1089 017e 73D1     		bne	.L60
1183:../user/source/DLT645.c ****         {
1184:../user/source/DLT645.c ****             return;
1185:../user/source/DLT645.c ****         }
1186:../user/source/DLT645.c ****         if (blCurrentSingle_Modify_Method(&Bcurrent, &Ccurrent, &Acurrent)) //¸ù¾İBÏàºÍCÏàµçÁ÷ĞŞ¸ÄA
 1090              		.loc 1 1186 0
 1091 0180 3A4A     		ldr	r2, .L82
 1092 0182 3C49     		ldr	r1, .L82+8
 1093 0184 3A48     		ldr	r0, .L82+4
 1094 0186 FFF7FEFF 		bl	blCurrentSingle_Modify_Method
 1095              	.LVL123:
 1096 018a 0028     		cmp	r0, #0
 1097 018c 6CD0     		beq	.L60
1187:../user/source/DLT645.c ****         {
1188:../user/source/DLT645.c ****             //AÏàµçÁ÷,Ê®½øÖÆÊı×ªBCDÂë
1189:../user/source/DLT645.c ****             vPut_Current(Acurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
 1098              		.loc 1 1189 0
 1099 018e 3749     		ldr	r1, .L82
 1100 0190 04F11003 		add	r3, r4, #16
 1101 0194 0093     		str	r3, [sp]
 1102 0196 04F10F03 		add	r3, r4, #15
 1103 019a 04F10E02 		add	r2, r4, #14
 1104 019e 03C9     		ldmia	r1, {r0, r1}
 1105 01a0 FFF7FEFF 		bl	vPut_Current
 1106              	.LVL124:
1134:../user/source/DLT645.c ****     switch (pucBuffer[11])
 1107              		.loc 1 1134 0
 1108 01a4 0022     		movs	r2, #0
1190:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1109              		.loc 1 1190 0
 1110 01a6 1346     		mov	r3, r2
 1111 01a8 04E0     		b	.L75
 1112              	.LVL125:
 1113              	.L76:
1191:../user/source/DLT645.c ****             {
1192:../user/source/DLT645.c ****                 ucCheckData += pucBuffer[i];
 1114              		.loc 1 1192 0 discriminator 3
 1115 01aa E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 1116 01ac 0A44     		add	r2, r2, r1
 1117              	.LVL126:
 1118 01ae D2B2     		uxtb	r2, r2
 1119              	.LVL127:
1190:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1120              		.loc 1 1190 0 discriminator 3
 1121 01b0 0133     		adds	r3, r3, #1
 1122              	.LVL128:
 1123 01b2 DBB2     		uxtb	r3, r3
 1124              	.LVL129:
 1125              	.L75:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 42


1190:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1126              		.loc 1 1190 0 is_stmt 0 discriminator 1
 1127 01b4 102B     		cmp	r3, #16
 1128 01b6 F8D9     		bls	.L76
1193:../user/source/DLT645.c ****             }
1194:../user/source/DLT645.c ****             pucBuffer[17] = ucCheckData;
 1129              		.loc 1 1194 0 is_stmt 1
 1130 01b8 6274     		strb	r2, [r4, #17]
1195:../user/source/DLT645.c ****             pucBuffer[18] = 0x16;
 1131              		.loc 1 1195 0
 1132 01ba 1623     		movs	r3, #22
 1133              	.LVL130:
 1134 01bc A374     		strb	r3, [r4, #18]
 1135 01be 53E0     		b	.L60
 1136              	.LVL131:
 1137              	.L65:
1196:../user/source/DLT645.c ****         }
1197:../user/source/DLT645.c ****         break;
1198:../user/source/DLT645.c ****     }
1199:../user/source/DLT645.c ****     case 0x35: //BÏàµçÁ÷
1200:../user/source/DLT645.c ****     {
1201:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Bcurrent);
 1138              		.loc 1 1201 0
 1139 01c0 2B4B     		ldr	r3, .L82+4
 1140 01c2 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 1141 01c4 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1142 01c6 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1143              	.LVL132:
 1144 01c8 FFF7FEFF 		bl	vGet_Current
 1145              	.LVL133:
1202:../user/source/DLT645.c **** 
1203:../user/source/DLT645.c ****         if (((pucBuffer[16] - 0x33) & 0x80) != 0) //µçÁ÷ÊÇ¸ºÖµ
 1146              		.loc 1 1203 0
 1147 01cc 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1148 01ce 333B     		subs	r3, r3, #51
 1149 01d0 13F0800F 		tst	r3, #128
 1150 01d4 48D1     		bne	.L60
1204:../user/source/DLT645.c ****         {
1205:../user/source/DLT645.c ****             return;
1206:../user/source/DLT645.c ****         }
1207:../user/source/DLT645.c ****         if (blCurrentSingle_Modify_Method(&Acurrent, &Ccurrent, &Bcurrent)) //¸ù¾İAÏàºÍCÏàĞŞ¸ÄBÏàµç
 1151              		.loc 1 1207 0
 1152 01d6 264A     		ldr	r2, .L82+4
 1153 01d8 2649     		ldr	r1, .L82+8
 1154 01da 2448     		ldr	r0, .L82
 1155 01dc FFF7FEFF 		bl	blCurrentSingle_Modify_Method
 1156              	.LVL134:
 1157 01e0 0028     		cmp	r0, #0
 1158 01e2 41D0     		beq	.L60
1208:../user/source/DLT645.c ****         {
1209:../user/source/DLT645.c ****             //BÏàµçÁ÷,Ê®½øÖÆÊı×ªBCDÂë
1210:../user/source/DLT645.c ****             vPut_Current(Bcurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
 1159              		.loc 1 1210 0
 1160 01e4 2249     		ldr	r1, .L82+4
 1161 01e6 04F11003 		add	r3, r4, #16
 1162 01ea 0093     		str	r3, [sp]
 1163 01ec 04F10F03 		add	r3, r4, #15
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 43


 1164 01f0 04F10E02 		add	r2, r4, #14
 1165 01f4 03C9     		ldmia	r1, {r0, r1}
 1166 01f6 FFF7FEFF 		bl	vPut_Current
 1167              	.LVL135:
1134:../user/source/DLT645.c ****     switch (pucBuffer[11])
 1168              		.loc 1 1134 0
 1169 01fa 0022     		movs	r2, #0
1211:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1170              		.loc 1 1211 0
 1171 01fc 1346     		mov	r3, r2
 1172 01fe 04E0     		b	.L77
 1173              	.LVL136:
 1174              	.L78:
1212:../user/source/DLT645.c ****             {
1213:../user/source/DLT645.c ****                 ucCheckData += pucBuffer[i];
 1175              		.loc 1 1213 0 discriminator 3
 1176 0200 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 1177 0202 0A44     		add	r2, r2, r1
 1178              	.LVL137:
 1179 0204 D2B2     		uxtb	r2, r2
 1180              	.LVL138:
1211:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1181              		.loc 1 1211 0 discriminator 3
 1182 0206 0133     		adds	r3, r3, #1
 1183              	.LVL139:
 1184 0208 DBB2     		uxtb	r3, r3
 1185              	.LVL140:
 1186              	.L77:
1211:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1187              		.loc 1 1211 0 is_stmt 0 discriminator 1
 1188 020a 102B     		cmp	r3, #16
 1189 020c F8D9     		bls	.L78
1214:../user/source/DLT645.c ****             }
1215:../user/source/DLT645.c ****             pucBuffer[17] = ucCheckData;
 1190              		.loc 1 1215 0 is_stmt 1
 1191 020e 6274     		strb	r2, [r4, #17]
1216:../user/source/DLT645.c ****             pucBuffer[18] = 0x16;
 1192              		.loc 1 1216 0
 1193 0210 1623     		movs	r3, #22
 1194              	.LVL141:
 1195 0212 A374     		strb	r3, [r4, #18]
 1196 0214 28E0     		b	.L60
 1197              	.LVL142:
 1198              	.L66:
1217:../user/source/DLT645.c ****         }
1218:../user/source/DLT645.c ****         break;
1219:../user/source/DLT645.c ****     }
1220:../user/source/DLT645.c ****     case 0x36: //CÏàµçÁ÷
1221:../user/source/DLT645.c ****     {
1222:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Ccurrent);
 1199              		.loc 1 1222 0
 1200 0216 174B     		ldr	r3, .L82+8
 1201 0218 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 1202 021a C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1203 021c 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1204              	.LVL143:
 1205 021e FFF7FEFF 		bl	vGet_Current
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 44


 1206              	.LVL144:
1223:../user/source/DLT645.c **** 
1224:../user/source/DLT645.c ****         if (((pucBuffer[16] - 0x33) & 0x80) != 0)
 1207              		.loc 1 1224 0
 1208 0222 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1209 0224 333B     		subs	r3, r3, #51
 1210 0226 13F0800F 		tst	r3, #128
 1211 022a 1DD1     		bne	.L60
1225:../user/source/DLT645.c ****         {
1226:../user/source/DLT645.c ****             return;
1227:../user/source/DLT645.c ****         }
1228:../user/source/DLT645.c ****         if (blCurrentSingle_Modify_Method(&Acurrent, &Bcurrent, &Ccurrent)) //¸ù¾İAÏàºÍBÏàĞŞ¸ÄCÏàµç
 1212              		.loc 1 1228 0
 1213 022c 114A     		ldr	r2, .L82+8
 1214 022e 1049     		ldr	r1, .L82+4
 1215 0230 0E48     		ldr	r0, .L82
 1216 0232 FFF7FEFF 		bl	blCurrentSingle_Modify_Method
 1217              	.LVL145:
 1218 0236 B8B1     		cbz	r0, .L60
1229:../user/source/DLT645.c ****         {
1230:../user/source/DLT645.c ****             //BÏàµçÁ÷,Ê®½øÖÆÊı×ªBCDÂë
1231:../user/source/DLT645.c ****             vPut_Current(Ccurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
 1219              		.loc 1 1231 0
 1220 0238 0E49     		ldr	r1, .L82+8
 1221 023a 04F11003 		add	r3, r4, #16
 1222 023e 0093     		str	r3, [sp]
 1223 0240 04F10F03 		add	r3, r4, #15
 1224 0244 04F10E02 		add	r2, r4, #14
 1225 0248 03C9     		ldmia	r1, {r0, r1}
 1226 024a FFF7FEFF 		bl	vPut_Current
 1227              	.LVL146:
1134:../user/source/DLT645.c ****     switch (pucBuffer[11])
 1228              		.loc 1 1134 0
 1229 024e 0022     		movs	r2, #0
1232:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È16
 1230              		.loc 1 1232 0
 1231 0250 1346     		mov	r3, r2
 1232 0252 04E0     		b	.L79
 1233              	.LVL147:
 1234              	.L80:
1233:../user/source/DLT645.c ****             {
1234:../user/source/DLT645.c ****                 ucCheckData += pucBuffer[i];
 1235              		.loc 1 1234 0 discriminator 3
 1236 0254 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 1237 0256 0A44     		add	r2, r2, r1
 1238              	.LVL148:
 1239 0258 D2B2     		uxtb	r2, r2
 1240              	.LVL149:
1232:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È16
 1241              		.loc 1 1232 0 discriminator 3
 1242 025a 0133     		adds	r3, r3, #1
 1243              	.LVL150:
 1244 025c DBB2     		uxtb	r3, r3
 1245              	.LVL151:
 1246              	.L79:
1232:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È16
 1247              		.loc 1 1232 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 45


 1248 025e 102B     		cmp	r3, #16
 1249 0260 F8D9     		bls	.L80
1235:../user/source/DLT645.c ****             }
1236:../user/source/DLT645.c ****             pucBuffer[17] = ucCheckData;
 1250              		.loc 1 1236 0 is_stmt 1
 1251 0262 6274     		strb	r2, [r4, #17]
1237:../user/source/DLT645.c ****             pucBuffer[18] = 0x16;
 1252              		.loc 1 1237 0
 1253 0264 1623     		movs	r3, #22
 1254              	.LVL152:
 1255 0266 A374     		strb	r3, [r4, #18]
 1256              	.LVL153:
 1257              	.L60:
1238:../user/source/DLT645.c ****         }
1239:../user/source/DLT645.c ****         break;
1240:../user/source/DLT645.c ****     }
1241:../user/source/DLT645.c ****     }
1242:../user/source/DLT645.c **** }
 1258              		.loc 1 1242 0
 1259 0268 03B0     		add	sp, sp, #12
 1260              	.LCFI15:
 1261              		.cfi_def_cfa_offset 12
 1262              		@ sp needed
 1263 026a 30BD     		pop	{r4, r5, pc}
 1264              	.LVL154:
 1265              	.L83:
 1266              		.align	2
 1267              	.L82:
 1268 026c 00000000 		.word	.LANCHOR1
 1269 0270 00000000 		.word	.LANCHOR2
 1270 0274 00000000 		.word	.LANCHOR3
 1271 0278 1F85EB51 		.word	1374389535
 1272              		.cfi_endproc
 1273              	.LFE131:
 1275              		.section	.text.vCurrent_Limit_Modify,"ax",%progbits
 1276              		.align	2
 1277              		.global	vCurrent_Limit_Modify
 1278              		.thumb
 1279              		.thumb_func
 1281              	vCurrent_Limit_Modify:
 1282              	.LFB133:
1243:../user/source/DLT645.c **** 
1244:../user/source/DLT645.c **** /********************************************************************
1245:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı³õÊ¼»¯
1246:../user/source/DLT645.c ****  * Êä    Èë£ºµçÁ÷Ö¡Êı×éÖ¸Õë
1247:../user/source/DLT645.c ****  * Êä    ³ö£º
1248:../user/source/DLT645.c ****  *           
1249:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1250:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ16:13:30
1251:../user/source/DLT645.c ****  **********************************************************************/
1252:../user/source/DLT645.c **** void vCurrent_Limit_DefaultSet(void)
1253:../user/source/DLT645.c **** {
1254:../user/source/DLT645.c ****     uint32_t uwLimit;
1255:../user/source/DLT645.c ****     uint32_t uwCTratio;
1256:../user/source/DLT645.c **** /*±äÑ¹Æ÷ÈİÁ¿ºÍ¶î¶¨µçÁ÷³ö³§¹Ì»¯£¬²»ÔÊĞíĞŞ¸Ä*/
1257:../user/source/DLT645.c **** #ifdef TRANSFORMER_CAPACITY_50KVA
1258:../user/source/DLT645.c ****     TransFormer.capacity = 50;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 46


1259:../user/source/DLT645.c ****     TransFormer.rated_current = 72000;
1260:../user/source/DLT645.c **** #endif
1261:../user/source/DLT645.c **** 
1262:../user/source/DLT645.c **** #ifdef TRANSFORMER_CAPACITY_100KVA
1263:../user/source/DLT645.c ****     TransFormer.capacity = 100;
1264:../user/source/DLT645.c ****     TransFormer.rated_current = 144000;
1265:../user/source/DLT645.c **** #endif
1266:../user/source/DLT645.c **** 
1267:../user/source/DLT645.c **** #ifdef TRANSFORMER_CAPACITY_200KVA
1268:../user/source/DLT645.c ****     TransFormer.capacity = 200;
1269:../user/source/DLT645.c ****     TransFormer.rated_current = 288000;
1270:../user/source/DLT645.c **** #endif
1271:../user/source/DLT645.c **** 
1272:../user/source/DLT645.c **** #ifdef TRANSFORMER_CAPACITY_400KVA
1273:../user/source/DLT645.c ****     TransFormer.capacity = 400;
1274:../user/source/DLT645.c ****     TransFormer.rated_current = 577000;
1275:../user/source/DLT645.c **** #endif
1276:../user/source/DLT645.c ****     /*´ÓFLASH¶ÁÈ¡±äÑ¹Æ÷¶ş´Î²àCT±ä±È*/
1277:../user/source/DLT645.c ****     uwCTratio = Flash_Read_Word(FLASH_CURRENT_LIMIT_RATIO_ADDR);
1278:../user/source/DLT645.c ****     /*±ä±ÈÎŞĞ§ £¬ÔòÎª³õ´ÎÉÏµç*/
1279:../user/source/DLT645.c ****     if (uwCTratio == 0xFFFFFFFF)
1280:../user/source/DLT645.c ****     {
1281:../user/source/DLT645.c ****         /*CTÉèÖÃÎª80*/
1282:../user/source/DLT645.c ****         TransFormer.CTratio = 80;
1283:../user/source/DLT645.c ****         /*´æ´¢CTÖµ*/
1284:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_CURRENT_LIMIT_RATIO_ADDR, TransFormer.CTratio);
1285:../user/source/DLT645.c ****     }
1286:../user/source/DLT645.c ****     else
1287:../user/source/DLT645.c ****     {
1288:../user/source/DLT645.c ****         /*Êı¾İÓĞĞ§£¬³õÊ¼»¯È«¾Ö±äÁ¿*/
1289:../user/source/DLT645.c ****         TransFormer.CTratio = uwCTratio;
1290:../user/source/DLT645.c ****     }
1291:../user/source/DLT645.c ****     /*¶ÁÈ¡µçÁ÷ÉÏÏŞ²ÎÊı*/
1292:../user/source/DLT645.c ****     uwLimit = Flash_Read_Word(FLASH_CURRENT_LIMIT_VALUE_ADDR);
1293:../user/source/DLT645.c ****     /*²ÎÊıÎŞĞ§£¬³õ´ÎÉÏµç*/
1294:../user/source/DLT645.c ****     if (uwLimit == 0xFFFFFFFF)
1295:../user/source/DLT645.c ****     {
1296:../user/source/DLT645.c ****         /*¸ù¾İ¶î¶¨µçÁ÷ºÍCT±ä±È¼ÆËãµçÁ÷ÉÏÏŞÖµ*/
1297:../user/source/DLT645.c ****         TransFormer.CT2_CurrentLimit = (TransFormer.rated_current / TransFormer.CTratio) * 3 * 8 / 
1298:../user/source/DLT645.c ****         /*´æ´¢µçÁ÷ÉÏÏŞÖµ*/
1299:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_CURRENT_LIMIT_VALUE_ADDR, TransFormer.CT2_CurrentLimit);
1300:../user/source/DLT645.c ****     }
1301:../user/source/DLT645.c ****     else
1302:../user/source/DLT645.c ****     {
1303:../user/source/DLT645.c ****         /*²ÎÊıÓĞĞ§£¬³õÊ¼»¯È«¾Ö±äÁ¿*/
1304:../user/source/DLT645.c ****         TransFormer.CT2_CurrentLimit = uwLimit;
1305:../user/source/DLT645.c ****     }
1306:../user/source/DLT645.c **** }
1307:../user/source/DLT645.c **** 
1308:../user/source/DLT645.c **** /********************************************************************
1309:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º¸÷ÏàµçÁ÷ÖµÉÏÏŞĞŞ¸Äº¯Êı
1310:../user/source/DLT645.c ****  * Êä    Èë£ºµçÁ÷Ö¡Êı×éÖ¸Õë
1311:../user/source/DLT645.c ****  * Êä    ³ö£º
1312:../user/source/DLT645.c ****  *           
1313:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1314:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.1.30
1315:../user/source/DLT645.c ****  **********************************************************************/
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 47


1316:../user/source/DLT645.c **** void vCurrent_Limit_Modify(uint8_t *pucBuffer)
1317:../user/source/DLT645.c **** {
 1283              		.loc 1 1317 0
 1284              		.cfi_startproc
 1285              		@ args = 0, pretend = 0, frame = 0
 1286              		@ frame_needed = 0, uses_anonymous_args = 0
 1287              		@ link register save eliminated.
 1288              	.LVL155:
 1289 0000 7047     		bx	lr
 1290              		.cfi_endproc
 1291              	.LFE133:
 1293 0002 00BF     		.section	.text.Get_Estatus,"ax",%progbits
 1294              		.align	2
 1295              		.thumb
 1296              		.thumb_func
 1298              	Get_Estatus:
 1299              	.LFB141:
1318:../user/source/DLT645.c ****     uint32_t ABCcurrent;
1319:../user/source/DLT645.c ****     uint8_t i;
1320:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
1321:../user/source/DLT645.c **** #ifndef ENABLE_CURRENT_LIMIT
1322:../user/source/DLT645.c ****     return;
1323:../user/source/DLT645.c **** #endif
1324:../user/source/DLT645.c **** 
1325:../user/source/DLT645.c ****     switch (pucBuffer[11])
1326:../user/source/DLT645.c ****     {
1327:../user/source/DLT645.c ****     case 0x32: //ÈıÏàµçÁ÷Êı¾İ¿é
1328:../user/source/DLT645.c ****     {
1329:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Acurrent);
1330:../user/source/DLT645.c ****         vGet_Current(pucBuffer[17], pucBuffer[18], pucBuffer[19], &Bcurrent);
1331:../user/source/DLT645.c ****         vGet_Current(pucBuffer[20], pucBuffer[21], pucBuffer[22], &Ccurrent);
1332:../user/source/DLT645.c ****         if (Acurrent.isminus || Bcurrent.isminus || Ccurrent.isminus)
1333:../user/source/DLT645.c ****             return;
1334:../user/source/DLT645.c ****         ABCcurrent = Acurrent.value + Bcurrent.value + Ccurrent.value;
1335:../user/source/DLT645.c ****         if (ABCcurrent > TransFormer.CT2_CurrentLimit)
1336:../user/source/DLT645.c ****         {
1337:../user/source/DLT645.c ****             Acurrent.value = TransFormer.CT2_CurrentLimit * Acurrent.value / ABCcurrent;
1338:../user/source/DLT645.c ****             Bcurrent.value = TransFormer.CT2_CurrentLimit * Bcurrent.value / ABCcurrent;
1339:../user/source/DLT645.c ****             Ccurrent.value = TransFormer.CT2_CurrentLimit * Ccurrent.value / ABCcurrent;
1340:../user/source/DLT645.c ****         }
1341:../user/source/DLT645.c ****         Acurrent.value = (Acurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT2_Cu
1342:../user/source/DLT645.c ****         Bcurrent.value = (Bcurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT2_Cu
1343:../user/source/DLT645.c ****         Ccurrent.value = (Ccurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT2_Cu
1344:../user/source/DLT645.c ****         //AÏàµçÁ÷,Ê®½øÖÆÊı×ªBCDÂë
1345:../user/source/DLT645.c ****         vPut_Current(Acurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
1346:../user/source/DLT645.c ****         //BÏàµçÁ÷
1347:../user/source/DLT645.c ****         vPut_Current(Bcurrent, &pucBuffer[17], &pucBuffer[18], &pucBuffer[19]);
1348:../user/source/DLT645.c ****         //CÏàµçÁ÷
1349:../user/source/DLT645.c ****         vPut_Current(Ccurrent, &pucBuffer[20], &pucBuffer[21], &pucBuffer[22]);
1350:../user/source/DLT645.c ****         for (i = 0; i < 23; i++) //Êı¾İÓò³¤¶È23
1351:../user/source/DLT645.c ****         {
1352:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1353:../user/source/DLT645.c ****         }
1354:../user/source/DLT645.c ****         pucBuffer[23] = ucCheckData;
1355:../user/source/DLT645.c ****         pucBuffer[24] = 0x16;
1356:../user/source/DLT645.c ****         break;
1357:../user/source/DLT645.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 48


1358:../user/source/DLT645.c ****     case 0x34: //AÏàµçÁ÷
1359:../user/source/DLT645.c ****     {
1360:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Acurrent);
1361:../user/source/DLT645.c ****         Acurrent.value = (Acurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT2_Cu
1362:../user/source/DLT645.c ****         vPut_Current(Acurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
1363:../user/source/DLT645.c ****         for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
1364:../user/source/DLT645.c ****         {
1365:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1366:../user/source/DLT645.c ****         }
1367:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1368:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1369:../user/source/DLT645.c ****         break;
1370:../user/source/DLT645.c ****     }
1371:../user/source/DLT645.c ****     case 0x35: //BÏàµçÁ÷
1372:../user/source/DLT645.c ****     {
1373:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Bcurrent);
1374:../user/source/DLT645.c ****         Bcurrent.value = (Bcurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT2_Cu
1375:../user/source/DLT645.c ****         vPut_Current(Bcurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
1376:../user/source/DLT645.c ****         for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
1377:../user/source/DLT645.c ****         {
1378:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1379:../user/source/DLT645.c ****         }
1380:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1381:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1382:../user/source/DLT645.c **** 
1383:../user/source/DLT645.c ****         break;
1384:../user/source/DLT645.c ****     }
1385:../user/source/DLT645.c ****     case 0x36: //CÏàµçÁ÷
1386:../user/source/DLT645.c ****     {
1387:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Ccurrent);
1388:../user/source/DLT645.c ****         Ccurrent.value = (Ccurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT2_Cu
1389:../user/source/DLT645.c ****         vPut_Current(Bcurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
1390:../user/source/DLT645.c ****         for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
1391:../user/source/DLT645.c ****         {
1392:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1393:../user/source/DLT645.c ****         }
1394:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1395:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1396:../user/source/DLT645.c ****         break;
1397:../user/source/DLT645.c ****     }
1398:../user/source/DLT645.c ****     }
1399:../user/source/DLT645.c **** }
1400:../user/source/DLT645.c **** 
1401:../user/source/DLT645.c **** /*****************************************************
1402:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºĞŞ¸ÄµçÁ÷·½ÏòÖ¡
1403:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
1404:../user/source/DLT645.c ****  * Êä    ³ö£º
1405:../user/source/DLT645.c ****  *           
1406:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1407:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.12.13
1408:../user/source/DLT645.c ****  *******************************************************/
1409:../user/source/DLT645.c **** void vCurrentDirect_Modify(uint8_t *pucBuffer)
1410:../user/source/DLT645.c **** {
1411:../user/source/DLT645.c ****     uint8_t i = 0;
1412:../user/source/DLT645.c ****     uint8_t ucCheckData;
1413:../user/source/DLT645.c ****     switch (pucBuffer[11])
1414:../user/source/DLT645.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 49


1415:../user/source/DLT645.c ****     case 0x32: //ÈıÏàµçÁ÷Êı¾İ¿é
1416:../user/source/DLT645.c ****     {
1417:../user/source/DLT645.c ****         pucBuffer[16] = (pucBuffer[16] - 0x33) & 0xEF + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ»Æ
1418:../user/source/DLT645.c ****         pucBuffer[19] = (pucBuffer[19] - 0x33) & 0xEF + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ»Æ
1419:../user/source/DLT645.c ****         pucBuffer[22] = (pucBuffer[22] - 0x33) & 0xEF + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ»Æ
1420:../user/source/DLT645.c ****         for (i = 0; i < 23; i++)                              //Êı¾İÓò³¤¶È23
1421:../user/source/DLT645.c ****         {
1422:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1423:../user/source/DLT645.c ****         }
1424:../user/source/DLT645.c ****         pucBuffer[23] = ucCheckData;
1425:../user/source/DLT645.c ****         pucBuffer[24] = 0x16;
1426:../user/source/DLT645.c ****         break;
1427:../user/source/DLT645.c ****     }
1428:../user/source/DLT645.c ****     case 0x34: //AÏàµçÁ÷
1429:../user/source/DLT645.c ****     {
1430:../user/source/DLT645.c ****         pucBuffer[16] = (pucBuffer[16] - 0x33) & 0xEF + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ»Æ
1431:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                              //Êı¾İÓò³¤¶È17
1432:../user/source/DLT645.c ****         {
1433:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1434:../user/source/DLT645.c ****         }
1435:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1436:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1437:../user/source/DLT645.c ****         break;
1438:../user/source/DLT645.c ****     }
1439:../user/source/DLT645.c ****     case 0x35: //BÏàµçÁ÷
1440:../user/source/DLT645.c ****     {
1441:../user/source/DLT645.c ****         pucBuffer[16] = (pucBuffer[16] - 0x33) & 0xEF + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ»Æ
1442:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                              //Êı¾İÓò³¤¶È17
1443:../user/source/DLT645.c ****         {
1444:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1445:../user/source/DLT645.c ****         }
1446:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1447:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1448:../user/source/DLT645.c ****         break;
1449:../user/source/DLT645.c ****     }
1450:../user/source/DLT645.c ****     case 0x36: //CÏàµçÁ÷
1451:../user/source/DLT645.c ****     {
1452:../user/source/DLT645.c ****         pucBuffer[16] = (pucBuffer[16] - 0x33) & 0xEF + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ»Æ
1453:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                              //Êı¾İÓò³¤¶È16
1454:../user/source/DLT645.c ****         {
1455:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1456:../user/source/DLT645.c ****         }
1457:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1458:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1459:../user/source/DLT645.c ****         break;
1460:../user/source/DLT645.c ****     }
1461:../user/source/DLT645.c ****     }
1462:../user/source/DLT645.c **** }
1463:../user/source/DLT645.c **** 
1464:../user/source/DLT645.c **** /********************************************************************
1465:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı£ºµçÁ÷ÉÏÏŞÖµÉèÖÃ
1466:../user/source/DLT645.c ****  * Êä    Èë£ºÎ¬»¤Ö¡Êı×éÖ¸Õë
1467:../user/source/DLT645.c ****  * Êä    ³ö£º
1468:../user/source/DLT645.c ****  *           
1469:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1470:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ09:39:18
1471:../user/source/DLT645.c ****  * ½ÓÊÜ£º   68 AA AA AA AA AA AA 68 14 07 33 37 35 35 56 34 12 XX 16(123.456A)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 50


1472:../user/source/DLT645.c ****  *³É¹¦»Ø¸´£º68 AA AA AA AA AA AA 68 94 00 XX 16
1473:../user/source/DLT645.c ****  *Ê§°Ü»Ø¸´£º68 AA AA AA AA AA AA 68 D4 00 XX 16
1474:../user/source/DLT645.c ****  **********************************************************************/
1475:../user/source/DLT645.c **** void vCurrent_Limit_Set(uint8_t *pucBuffer)
1476:../user/source/DLT645.c **** {
1477:../user/source/DLT645.c ****     uint8_t i;
1478:../user/source/DLT645.c ****     CURRENT limit;
1479:../user/source/DLT645.c ****     pucBuffer[8] = 0xD4;
1480:../user/source/DLT645.c ****     /*·ÇÖØ¹ıÔØµ÷Õû°æ±¾Ê±£¬»Ø¸´·ñÈÏÖ¡*/
1481:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
1482:../user/source/DLT645.c ****     /*ÊäÈëµÄ×Ö½Ú¼õÈ¥33ºó²»ÊÇBCDÂëÔõÃ´°ì£¿*/
1483:../user/source/DLT645.c ****     vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &limit);
1484:../user/source/DLT645.c ****     if (!limit.isminus && (limit.value > 0) && (limit.value <= 999999))
1485:../user/source/DLT645.c ****     {
1486:../user/source/DLT645.c ****         if (SUCCESS == Flash_Write_Word(FLASH_CURRENT_LIMIT_VALUE_ADDR, limit.value))
1487:../user/source/DLT645.c ****         {
1488:../user/source/DLT645.c ****             TransFormer.CT2_CurrentLimit = limit.value;
1489:../user/source/DLT645.c ****             //limit.value = TransFormer.rated_current / TransFormer.CTratio;
1490:../user/source/DLT645.c ****             //limit.value = limit.value * 8 / 10;
1491:../user/source/DLT645.c ****             //limit.value = limit.value * 3;
1492:../user/source/DLT645.c ****             TransFormer.CTratio = TransFormer.rated_current /
1493:../user/source/DLT645.c ****                                   (TransFormer.CT2_CurrentLimit / 3 * 10 / 8);
1494:../user/source/DLT645.c ****             if (SUCCESS == Flash_Write_Word(FLASH_CURRENT_LIMIT_RATIO_ADDR, TransFormer.CTratio))
1495:../user/source/DLT645.c ****             {
1496:../user/source/DLT645.c ****                 pucBuffer[8] = 0x94;
1497:../user/source/DLT645.c ****             }
1498:../user/source/DLT645.c ****         }
1499:../user/source/DLT645.c ****     }
1500:../user/source/DLT645.c **** #endif
1501:../user/source/DLT645.c **** 
1502:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
1503:../user/source/DLT645.c ****     pucBuffer[10] = 0;
1504:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
1505:../user/source/DLT645.c ****     {
1506:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
1507:../user/source/DLT645.c ****     }
1508:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
1509:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
1510:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
1511:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
1512:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
1513:../user/source/DLT645.c ****     {
1514:../user/source/DLT645.c ****         Uart_DataPut(USART3);
1515:../user/source/DLT645.c ****     }
1516:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
1517:../user/source/DLT645.c **** #ifdef ENABLE_INFR
1518:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 12);
1519:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
1520:../user/source/DLT645.c ****     {
1521:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
1522:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
1523:../user/source/DLT645.c ****     }
1524:../user/source/DLT645.c **** #endif
1525:../user/source/DLT645.c **** }
1526:../user/source/DLT645.c **** 
1527:../user/source/DLT645.c **** /********************************************************************
1528:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı£ºCT±ä±ÈÉèÖÃ
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 51


1529:../user/source/DLT645.c ****  * Êä    Èë£ºÎ¬»¤Ö¡Êı×éÖ¸Õë
1530:../user/source/DLT645.c ****  * Êä    ³ö£º
1531:../user/source/DLT645.c ****  *           
1532:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1533:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ09:39:18
1534:../user/source/DLT645.c ****  * ½ÓÊÜ£º   68 AA AA AA AA AA AA 68 14 06 33 39 35 35 00 01 XX 16(±ä±È100)
1535:../user/source/DLT645.c ****  *³É¹¦»Ø¸´£º68 AA AA AA AA AA AA 68 94 00 XX 16
1536:../user/source/DLT645.c ****  *Ê§°Ü»Ø¸´£º68 AA AA AA AA AA AA 68 D4 00 XX 16
1537:../user/source/DLT645.c ****  **********************************************************************/
1538:../user/source/DLT645.c **** void vCurrent_CTRatio_Set(uint8_t *pucBuffer)
1539:../user/source/DLT645.c **** {
1540:../user/source/DLT645.c ****     uint8_t i;
1541:../user/source/DLT645.c ****     uint32_t uwdata = 0;
1542:../user/source/DLT645.c ****     pucBuffer[8] = 0xD4;
1543:../user/source/DLT645.c **** /*ÊäÈëµÄ×Ö½Ú¼õÈ¥33ºó²»ÊÇBCDÂëÔõÃ´°ì£¿*/
1544:../user/source/DLT645.c **** /*²»Ö§³ÖÖØ¹ıÔØĞŞ¸Ä¹¦ÄÜÊ±£¬»Ø¸´·ñÈÏÖ¡*/
1545:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
1546:../user/source/DLT645.c ****     uwdata = Get_Voltage(pucBuffer[14], pucBuffer[15]);
1547:../user/source/DLT645.c ****     if ((uwdata > 0) && (uwdata <= 9999))
1548:../user/source/DLT645.c ****     {
1549:../user/source/DLT645.c ****         if (SUCCESS == Flash_Write_Word(FLASH_CURRENT_LIMIT_RATIO_ADDR, uwdata))
1550:../user/source/DLT645.c ****         {
1551:../user/source/DLT645.c ****             TransFormer.CTratio = uwdata;
1552:../user/source/DLT645.c ****             TransFormer.CT2_CurrentLimit = (TransFormer.rated_current / TransFormer.CTratio) * 24 /
1553:../user/source/DLT645.c ****             if (SUCCESS == Flash_Write_Word(FLASH_CURRENT_LIMIT_VALUE_ADDR, TransFormer.CT2_Current
1554:../user/source/DLT645.c ****             {
1555:../user/source/DLT645.c ****                 pucBuffer[8] = 0x94;
1556:../user/source/DLT645.c ****             }
1557:../user/source/DLT645.c ****         }
1558:../user/source/DLT645.c ****     }
1559:../user/source/DLT645.c **** #endif
1560:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
1561:../user/source/DLT645.c ****     pucBuffer[10] = 0;
1562:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
1563:../user/source/DLT645.c ****     {
1564:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
1565:../user/source/DLT645.c ****     }
1566:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
1567:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
1568:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
1569:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
1570:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
1571:../user/source/DLT645.c ****     {
1572:../user/source/DLT645.c ****         Uart_DataPut(USART3);
1573:../user/source/DLT645.c ****     }
1574:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
1575:../user/source/DLT645.c **** #ifdef ENABLE_INFR
1576:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 12);
1577:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
1578:../user/source/DLT645.c ****     {
1579:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
1580:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
1581:../user/source/DLT645.c ****     }
1582:../user/source/DLT645.c **** #endif
1583:../user/source/DLT645.c **** }
1584:../user/source/DLT645.c **** 
1585:../user/source/DLT645.c **** /********************************************************************
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 52


1586:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı²éÑ¯£ºµçÁ÷ÉÏÏŞÖµ
1587:../user/source/DLT645.c ****  * Êä    Èë£ºÎ¬»¤Ö¡Êı×éÖ¸Õë
1588:../user/source/DLT645.c ****  * Êä    ³ö£º
1589:../user/source/DLT645.c ****  *           
1590:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1591:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ09:39:18
1592:../user/source/DLT645.c ****  * ½ÓÊÕ£º   68 AA AA AA AA AA AA 68 11 04 33 38 35 35 XX 16
1593:../user/source/DLT645.c ****  *³É¹¦»Ø¸´£º68 AA AA AA AA AA AA 68 91 07 33 38 35 35 56 34 12 XX 16(123.456)
1594:../user/source/DLT645.c ****  **********************************************************************/
1595:../user/source/DLT645.c **** void vCurrent_Limit_ReadSet(uint8_t *pucBuffer)
1596:../user/source/DLT645.c **** {
1597:../user/source/DLT645.c ****     uint8_t i;
1598:../user/source/DLT645.c ****     CURRENT limit;
1599:../user/source/DLT645.c ****     limit.value = TransFormer.CT2_CurrentLimit;
1600:../user/source/DLT645.c ****     limit.isminus = false;
1601:../user/source/DLT645.c ****     vPut_Current(limit, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
1602:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
1603:../user/source/DLT645.c ****     pucBuffer[9] = 0x07;
1604:../user/source/DLT645.c ****     pucBuffer[17] = 0;
1605:../user/source/DLT645.c ****     for (i = 0; i < 17; i++)
1606:../user/source/DLT645.c ****     {
1607:../user/source/DLT645.c ****         pucBuffer[17] += pucBuffer[i];
1608:../user/source/DLT645.c ****     }
1609:../user/source/DLT645.c ****     pucBuffer[18] = 0x16;
1610:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
1611:../user/source/DLT645.c ****     uc645DataDomainLength = 7;
1612:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 19);
1613:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
1614:../user/source/DLT645.c ****     {
1615:../user/source/DLT645.c ****         Uart_DataPut(USART3);
1616:../user/source/DLT645.c ****     }
1617:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
1618:../user/source/DLT645.c **** #ifdef ENABLE_INFR
1619:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 19);
1620:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
1621:../user/source/DLT645.c ****     {
1622:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
1623:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
1624:../user/source/DLT645.c ****     }
1625:../user/source/DLT645.c **** #endif
1626:../user/source/DLT645.c **** }
1627:../user/source/DLT645.c **** 
1628:../user/source/DLT645.c **** /********************************************************************
1629:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı²éÑ¯£ºCT±ä±È
1630:../user/source/DLT645.c ****  * Êä    Èë£ºÎ¬»¤Ö¡Êı×éÖ¸Õë
1631:../user/source/DLT645.c ****  * Êä    ³ö£º
1632:../user/source/DLT645.c ****  *           
1633:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1634:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ09:39:18
1635:../user/source/DLT645.c ****  * ½ÓÊÕ£º   68 AA AA AA AA AA AA 68 11 04 33 3A 35 35 XX 16
1636:../user/source/DLT645.c ****  *³É¹¦»Ø¸´£º68 AA AA AA AA AA AA 68 91 06 33 3A 35 35 00 01 XX 16(±ä±È100)
1637:../user/source/DLT645.c ****  **********************************************************************/
1638:../user/source/DLT645.c **** void vCurrent_CTRatio_ReadSet(uint8_t *pucBuffer)
1639:../user/source/DLT645.c **** {
1640:../user/source/DLT645.c **** 
1641:../user/source/DLT645.c ****     uint8_t i;
1642:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 53


1643:../user/source/DLT645.c ****     pucBuffer[9] = 0x06;
1644:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(TransFormer.CTratio);
1645:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(TransFormer.CTratio);
1646:../user/source/DLT645.c ****     pucBuffer[16] = 0;
1647:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
1648:../user/source/DLT645.c ****     {
1649:../user/source/DLT645.c ****         pucBuffer[16] += pucBuffer[i];
1650:../user/source/DLT645.c ****     }
1651:../user/source/DLT645.c ****     pucBuffer[17] = 0x16;
1652:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
1653:../user/source/DLT645.c ****     uc645DataDomainLength = 6;
1654:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 18);
1655:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
1656:../user/source/DLT645.c ****     {
1657:../user/source/DLT645.c ****         Uart_DataPut(USART3);
1658:../user/source/DLT645.c ****     }
1659:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
1660:../user/source/DLT645.c **** #ifdef ENABLE_INFR
1661:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 18);
1662:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
1663:../user/source/DLT645.c ****     {
1664:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
1665:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
1666:../user/source/DLT645.c ****     }
1667:../user/source/DLT645.c **** #endif
1668:../user/source/DLT645.c **** }
1669:../user/source/DLT645.c **** 
1670:../user/source/DLT645.c **** /********************************************************************
1671:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı²éÑ¯£º±äÑ¹Æ÷ÈİÁ¿
1672:../user/source/DLT645.c ****  * Êä    Èë£ºÎ¬»¤Ö¡Êı×éÖ¸Õë
1673:../user/source/DLT645.c ****  * Êä    ³ö£º
1674:../user/source/DLT645.c ****  *           
1675:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1676:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ09:39:18
1677:../user/source/DLT645.c ****  * ½ÓÊÕ£º   68 AA AA AA AA AA AA 68 11 04 33 3B 35 35 XX 16
1678:../user/source/DLT645.c ****  *³É¹¦»Ø¸´£º68 AA AA AA AA AA AA 68 91 06 33 3B 35 35 00 01 XX 16(±ä±È100)
1679:../user/source/DLT645.c ****  **********************************************************************/
1680:../user/source/DLT645.c **** void vCurrent_TransFormer_Capacity_ReadSet(uint8_t *pucBuffer)
1681:../user/source/DLT645.c **** {
1682:../user/source/DLT645.c ****     uint8_t i;
1683:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
1684:../user/source/DLT645.c ****     pucBuffer[9] = 0x06;
1685:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(TransFormer.capacity);
1686:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(TransFormer.capacity);
1687:../user/source/DLT645.c ****     pucBuffer[16] = 0;
1688:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
1689:../user/source/DLT645.c ****     {
1690:../user/source/DLT645.c ****         pucBuffer[16] += pucBuffer[i];
1691:../user/source/DLT645.c ****     }
1692:../user/source/DLT645.c ****     pucBuffer[17] = 0x16;
1693:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
1694:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
1695:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 18);
1696:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
1697:../user/source/DLT645.c ****     {
1698:../user/source/DLT645.c ****         Uart_DataPut(USART3);
1699:../user/source/DLT645.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 54


1700:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
1701:../user/source/DLT645.c **** #ifdef ENABLE_INFR
1702:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 18);
1703:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
1704:../user/source/DLT645.c ****     {
1705:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
1706:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
1707:../user/source/DLT645.c ****     }
1708:../user/source/DLT645.c **** #endif
1709:../user/source/DLT645.c **** }
1710:../user/source/DLT645.c **** 
1711:../user/source/DLT645.c **** /*****************************************************
1712:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷Ö¡¼ÆÊıÇåÁã
1713:../user/source/DLT645.c ****  * Êä    Èë£º
1714:../user/source/DLT645.c ****  * Êä    ³ö£ºÎŞ
1715:../user/source/DLT645.c ****  * Ëµ	  Ã÷£ºÊÕµ½µçÑ¹»Ø¸´Ö¡ºó£¬½«µçÁ÷Ö¡¼ÆÊıÇåÁã
1716:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1717:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.12.13
1718:../user/source/DLT645.c ****  *******************************************************/
1719:../user/source/DLT645.c **** void vCurrent_Count_Clear(void)
1720:../user/source/DLT645.c **** {
1721:../user/source/DLT645.c ****     Acurrent.count = 0;
1722:../user/source/DLT645.c ****     Bcurrent.count = 0;
1723:../user/source/DLT645.c ****     Ccurrent.count = 0;
1724:../user/source/DLT645.c **** }
1725:../user/source/DLT645.c **** /********************************************************************
1726:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º´ÓÊı¾İÖ¡ÖĞ¶ÁÈ¡×´Ì¬×Ö
1727:../user/source/DLT645.c ****  * Êä    Èë£º×´Ì¬×ÖµÍ×Ö½Ú¡¢¸ß×Ö½Ú
1728:../user/source/DLT645.c ****  * Êä    ³ö£º¶ş½øÖÆµÄ×´Ì¬×Ö
1729:../user/source/DLT645.c ****  *           
1730:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1731:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.5.23
1732:../user/source/DLT645.c ****  **********************************************************************/
1733:../user/source/DLT645.c **** uint16_t Get_Estatus(uint8_t LowByte, uint8_t HighByte)
1734:../user/source/DLT645.c **** {
 1300              		.loc 1 1734 0
 1301              		.cfi_startproc
 1302              		@ args = 0, pretend = 0, frame = 0
 1303              		@ frame_needed = 0, uses_anonymous_args = 0
 1304              		@ link register save eliminated.
 1305              	.LVL156:
1735:../user/source/DLT645.c ****     uint16_t estatus;
1736:../user/source/DLT645.c ****     estatus = ((HighByte - 0x33) & 0x00FF) << 8; //00010000 00000000
 1306              		.loc 1 1736 0
 1307 0000 3339     		subs	r1, r1, #51
 1308              	.LVL157:
1737:../user/source/DLT645.c ****     estatus |= (LowByte - 0X33) & 0X00FF;
 1309              		.loc 1 1737 0
 1310 0002 3338     		subs	r0, r0, #51
 1311              	.LVL158:
 1312 0004 C0B2     		uxtb	r0, r0
 1313 0006 40EA0120 		orr	r0, r0, r1, lsl #8
 1314              	.LVL159:
1738:../user/source/DLT645.c ****     return estatus;
1739:../user/source/DLT645.c **** }
 1315              		.loc 1 1739 0
 1316 000a 80B2     		uxth	r0, r0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 55


 1317 000c 7047     		bx	lr
 1318              		.cfi_endproc
 1319              	.LFE141:
 1321 000e 00BF     		.section	.text.Estatus_Modify_CurrentEvent,"ax",%progbits
 1322              		.align	2
 1323              		.global	Estatus_Modify_CurrentEvent
 1324              		.thumb
 1325              		.thumb_func
 1327              	Estatus_Modify_CurrentEvent:
 1328              	.LFB128:
 955:../user/source/DLT645.c ****     uint16_t estatus = 0x0000;
 1329              		.loc 1 955 0
 1330              		.cfi_startproc
 1331              		@ args = 0, pretend = 0, frame = 0
 1332              		@ frame_needed = 0, uses_anonymous_args = 0
 1333              	.LVL160:
 1334 0000 10B5     		push	{r4, lr}
 1335              	.LCFI16:
 1336              		.cfi_def_cfa_offset 8
 1337              		.cfi_offset 4, -8
 1338              		.cfi_offset 14, -4
 1339 0002 0446     		mov	r4, r0
 1340              	.LVL161:
 959:../user/source/DLT645.c ****     {
 1341              		.loc 1 959 0
 1342 0004 837A     		ldrb	r3, [r0, #10]	@ zero_extendqisi2
 1343 0006 323B     		subs	r3, r3, #50
 1344 0008 082B     		cmp	r3, #8
 1345 000a 72D8     		bhi	.L87
 1346 000c DFE803F0 		tbb	[pc, r3]
 1347              	.L89:
 1348 0010 3D       		.byte	(.L88-.L89)/2
 1349 0011 71       		.byte	(.L87-.L89)/2
 1350 0012 71       		.byte	(.L87-.L89)/2
 1351 0013 71       		.byte	(.L87-.L89)/2
 1352 0014 71       		.byte	(.L87-.L89)/2
 1353 0015 05       		.byte	(.L90-.L89)/2
 1354 0016 13       		.byte	(.L91-.L89)/2
 1355 0017 21       		.byte	(.L92-.L89)/2
 1356 0018 2F       		.byte	(.L93-.L89)/2
 1357 0019 00       		.p2align 1
 1358              	.L90:
 964:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
 1359              		.loc 1 964 0
 1360 001a C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1361 001c 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1362              	.LVL162:
 1363 001e FFF7FEFF 		bl	Get_Estatus
 1364              	.LVL163:
 1365 0022 20F4A870 		bic	r0, r0, #336
 1366 0026 83B2     		uxth	r3, r0
 1367              	.LVL164:
 965:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
 1368              		.loc 1 965 0
 1369 0028 DAB2     		uxtb	r2, r3
 1370 002a 3332     		adds	r2, r2, #51
 1371 002c A273     		strb	r2, [r4, #14]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 56


 966:../user/source/DLT645.c ****         break;
 1372              		.loc 1 966 0
 1373 002e 1B0A     		lsrs	r3, r3, #8
 1374              	.LVL165:
 1375 0030 3333     		adds	r3, r3, #51
 1376 0032 E373     		strb	r3, [r4, #15]
 967:../user/source/DLT645.c ****     }
 1377              		.loc 1 967 0
 1378 0034 5DE0     		b	.L87
 1379              	.LVL166:
 1380              	.L91:
 971:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 1381              		.loc 1 971 0
 1382 0036 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1383 0038 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1384              	.LVL167:
 1385 003a FFF7FEFF 		bl	Get_Estatus
 1386              	.LVL168:
 1387 003e 20F4A870 		bic	r0, r0, #336
 1388 0042 83B2     		uxth	r3, r0
 1389              	.LVL169:
 972:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 1390              		.loc 1 972 0
 1391 0044 DAB2     		uxtb	r2, r3
 1392 0046 3332     		adds	r2, r2, #51
 1393 0048 A273     		strb	r2, [r4, #14]
 973:../user/source/DLT645.c ****         break;
 1394              		.loc 1 973 0
 1395 004a 1B0A     		lsrs	r3, r3, #8
 1396              	.LVL170:
 1397 004c 3333     		adds	r3, r3, #51
 1398 004e E373     		strb	r3, [r4, #15]
 974:../user/source/DLT645.c ****     }
 1399              		.loc 1 974 0
 1400 0050 4FE0     		b	.L87
 1401              	.LVL171:
 1402              	.L92:
 978:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 1403              		.loc 1 978 0
 1404 0052 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1405 0054 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1406              	.LVL172:
 1407 0056 FFF7FEFF 		bl	Get_Estatus
 1408              	.LVL173:
 1409 005a 20F4A870 		bic	r0, r0, #336
 1410 005e 83B2     		uxth	r3, r0
 1411              	.LVL174:
 979:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 1412              		.loc 1 979 0
 1413 0060 DAB2     		uxtb	r2, r3
 1414 0062 3332     		adds	r2, r2, #51
 1415 0064 A273     		strb	r2, [r4, #14]
 980:../user/source/DLT645.c ****         break;
 1416              		.loc 1 980 0
 1417 0066 1B0A     		lsrs	r3, r3, #8
 1418              	.LVL175:
 1419 0068 3333     		adds	r3, r3, #51
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 57


 1420 006a E373     		strb	r3, [r4, #15]
 981:../user/source/DLT645.c ****     }
 1421              		.loc 1 981 0
 1422 006c 41E0     		b	.L87
 1423              	.LVL176:
 1424              	.L93:
 985:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 1425              		.loc 1 985 0
 1426 006e C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1427 0070 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1428              	.LVL177:
 1429 0072 FFF7FEFF 		bl	Get_Estatus
 1430              	.LVL178:
 1431 0076 20F00800 		bic	r0, r0, #8
 1432 007a 83B2     		uxth	r3, r0
 1433              	.LVL179:
 986:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 1434              		.loc 1 986 0
 1435 007c DAB2     		uxtb	r2, r3
 1436 007e 3332     		adds	r2, r2, #51
 1437 0080 A273     		strb	r2, [r4, #14]
 987:../user/source/DLT645.c ****         break;
 1438              		.loc 1 987 0
 1439 0082 1B0A     		lsrs	r3, r3, #8
 1440              	.LVL180:
 1441 0084 3333     		adds	r3, r3, #51
 1442 0086 E373     		strb	r3, [r4, #15]
 988:../user/source/DLT645.c ****     }
 1443              		.loc 1 988 0
 1444 0088 33E0     		b	.L87
 1445              	.LVL181:
 1446              	.L88:
 994:../user/source/DLT645.c ****         pucBuffer[20] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 1447              		.loc 1 994 0
 1448 008a 417D     		ldrb	r1, [r0, #21]	@ zero_extendqisi2
 1449 008c 007D     		ldrb	r0, [r0, #20]	@ zero_extendqisi2
 1450              	.LVL182:
 1451 008e FFF7FEFF 		bl	Get_Estatus
 1452              	.LVL183:
 1453 0092 20F4A870 		bic	r0, r0, #336
 1454 0096 83B2     		uxth	r3, r0
 1455              	.LVL184:
 995:../user/source/DLT645.c ****         pucBuffer[21] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 1456              		.loc 1 995 0
 1457 0098 DAB2     		uxtb	r2, r3
 1458 009a 3332     		adds	r2, r2, #51
 1459 009c 2275     		strb	r2, [r4, #20]
 996:../user/source/DLT645.c ****         //×´Ì¬×Ö5,BÏà×´Ì¬×Ö
 1460              		.loc 1 996 0
 1461 009e 1B0A     		lsrs	r3, r3, #8
 1462              	.LVL185:
 1463 00a0 3333     		adds	r3, r3, #51
 1464 00a2 6375     		strb	r3, [r4, #21]
 998:../user/source/DLT645.c ****         pucBuffer[22] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
 1465              		.loc 1 998 0
 1466 00a4 E17D     		ldrb	r1, [r4, #23]	@ zero_extendqisi2
 1467 00a6 A07D     		ldrb	r0, [r4, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 58


 1468              	.LVL186:
 1469 00a8 FFF7FEFF 		bl	Get_Estatus
 1470              	.LVL187:
 1471 00ac 20F4A870 		bic	r0, r0, #336
 1472 00b0 83B2     		uxth	r3, r0
 1473              	.LVL188:
 999:../user/source/DLT645.c ****         pucBuffer[23] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
 1474              		.loc 1 999 0
 1475 00b2 DAB2     		uxtb	r2, r3
 1476 00b4 3332     		adds	r2, r2, #51
 1477 00b6 A275     		strb	r2, [r4, #22]
1000:../user/source/DLT645.c ****         //×´Ì¬×Ö6,CÏà×´Ì¬×Ö
 1478              		.loc 1 1000 0
 1479 00b8 1B0A     		lsrs	r3, r3, #8
 1480              	.LVL189:
 1481 00ba 3333     		adds	r3, r3, #51
 1482 00bc E375     		strb	r3, [r4, #23]
1002:../user/source/DLT645.c ****         pucBuffer[24] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
 1483              		.loc 1 1002 0
 1484 00be 617E     		ldrb	r1, [r4, #25]	@ zero_extendqisi2
 1485 00c0 207E     		ldrb	r0, [r4, #24]	@ zero_extendqisi2
 1486              	.LVL190:
 1487 00c2 FFF7FEFF 		bl	Get_Estatus
 1488              	.LVL191:
 1489 00c6 20F4A870 		bic	r0, r0, #336
 1490 00ca 83B2     		uxth	r3, r0
 1491              	.LVL192:
1003:../user/source/DLT645.c ****         pucBuffer[25] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
 1492              		.loc 1 1003 0
 1493 00cc DAB2     		uxtb	r2, r3
 1494 00ce 3332     		adds	r2, r2, #51
 1495 00d0 2276     		strb	r2, [r4, #24]
1004:../user/source/DLT645.c ****         //×´Ì¬×Ö7£¬ºÏÏà×´Ì¬×Ö
 1496              		.loc 1 1004 0
 1497 00d2 1B0A     		lsrs	r3, r3, #8
 1498              	.LVL193:
 1499 00d4 3333     		adds	r3, r3, #51
 1500 00d6 6376     		strb	r3, [r4, #25]
1006:../user/source/DLT645.c ****         pucBuffer[26] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
 1501              		.loc 1 1006 0
 1502 00d8 E17E     		ldrb	r1, [r4, #27]	@ zero_extendqisi2
 1503 00da A07E     		ldrb	r0, [r4, #26]	@ zero_extendqisi2
 1504              	.LVL194:
 1505 00dc FFF7FEFF 		bl	Get_Estatus
 1506              	.LVL195:
 1507 00e0 20F00800 		bic	r0, r0, #8
 1508 00e4 83B2     		uxth	r3, r0
 1509              	.LVL196:
1007:../user/source/DLT645.c ****         pucBuffer[27] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
 1510              		.loc 1 1007 0
 1511 00e6 DAB2     		uxtb	r2, r3
 1512 00e8 3332     		adds	r2, r2, #51
 1513 00ea A276     		strb	r2, [r4, #26]
1008:../user/source/DLT645.c ****         break;
 1514              		.loc 1 1008 0
 1515 00ec 1B0A     		lsrs	r3, r3, #8
 1516              	.LVL197:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 59


 1517 00ee 3333     		adds	r3, r3, #51
 1518 00f0 E376     		strb	r3, [r4, #27]
 1519              	.LVL198:
 1520              	.L87:
 958:../user/source/DLT645.c ****     switch (pucBuffer[10])
 1521              		.loc 1 958 0
 1522 00f2 0023     		movs	r3, #0
1014:../user/source/DLT645.c ****     {
 1523              		.loc 1 1014 0
 1524 00f4 1A46     		mov	r2, r3
 1525 00f6 03E0     		b	.L94
 1526              	.LVL199:
 1527              	.L95:
1016:../user/source/DLT645.c ****     }
 1528              		.loc 1 1016 0 discriminator 3
 1529 00f8 A15C     		ldrb	r1, [r4, r2]	@ zero_extendqisi2
 1530 00fa 0B44     		add	r3, r3, r1
 1531              	.LVL200:
 1532 00fc DBB2     		uxtb	r3, r3
 1533              	.LVL201:
1014:../user/source/DLT645.c ****     {
 1534              		.loc 1 1014 0 discriminator 3
 1535 00fe 0132     		adds	r2, r2, #1
 1536              	.LVL202:
 1537              	.L94:
1014:../user/source/DLT645.c ****     {
 1538              		.loc 1 1014 0 is_stmt 0 discriminator 1
 1539 0100 0349     		ldr	r1, .L97
 1540 0102 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1541 0104 01F10A00 		add	r0, r1, #10
 1542 0108 8242     		cmp	r2, r0
 1543 010a F5DB     		blt	.L95
1018:../user/source/DLT645.c **** }
 1544              		.loc 1 1018 0 is_stmt 1
 1545 010c 2354     		strb	r3, [r4, r0]
 1546 010e 10BD     		pop	{r4, pc}
 1547              	.LVL203:
 1548              	.L98:
 1549              		.align	2
 1550              	.L97:
 1551 0110 00000000 		.word	.LANCHOR0
 1552              		.cfi_endproc
 1553              	.LFE128:
 1555              		.section	.text.GetLowByte,"ax",%progbits
 1556              		.align	2
 1557              		.thumb
 1558              		.thumb_func
 1560              	GetLowByte:
 1561              	.LFB142:
1740:../user/source/DLT645.c **** /********************************************************************
1741:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½«µçÑ¹¸öÎ»×ª»»ÎªµÍ×Ö½Ú
1742:../user/source/DLT645.c ****  * Êä    Èë£ºÊ®½øÖÆµçÑ¹Öµ
1743:../user/source/DLT645.c ****  * Êä    ³ö£º	BCDÂë
1744:../user/source/DLT645.c ****  *           
1745:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1746:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
1747:../user/source/DLT645.c ****  **********************************************************************/
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 60


1748:../user/source/DLT645.c **** uint8_t GetLowByte(int Voltage)
1749:../user/source/DLT645.c **** {
 1562              		.loc 1 1749 0
 1563              		.cfi_startproc
 1564              		@ args = 0, pretend = 0, frame = 0
 1565              		@ frame_needed = 0, uses_anonymous_args = 0
 1566              		@ link register save eliminated.
 1567              	.LVL204:
1750:../user/source/DLT645.c ****     uint8_t LowByte = 0x00;
1751:../user/source/DLT645.c ****     LowByte = (((((Voltage % 1000) % 100) / 10) << 4) & 0xF0) + ((((Voltage % 1000) % 100) % 10) & 
 1568              		.loc 1 1751 0
 1569 0000 1149     		ldr	r1, .L100
 1570 0002 81FB0031 		smull	r3, r1, r1, r0
 1571 0006 C317     		asrs	r3, r0, #31
 1572 0008 C3EBA111 		rsb	r1, r3, r1, asr #6
 1573 000c 4FF47A73 		mov	r3, #1000
 1574 0010 03FB1101 		mls	r1, r3, r1, r0
 1575 0014 0D4A     		ldr	r2, .L100+4
 1576 0016 82FB0132 		smull	r3, r2, r2, r1
 1577 001a CB17     		asrs	r3, r1, #31
 1578 001c C3EB6212 		rsb	r2, r3, r2, asr #5
 1579 0020 6423     		movs	r3, #100
 1580 0022 03FB1212 		mls	r2, r3, r2, r1
 1581 0026 0A48     		ldr	r0, .L100+8
 1582              	.LVL205:
 1583 0028 80FB0230 		smull	r3, r0, r0, r2
 1584 002c D317     		asrs	r3, r2, #31
 1585 002e C3EBA000 		rsb	r0, r3, r0, asr #2
 1586 0032 00EB8001 		add	r1, r0, r0, lsl #2
 1587 0036 4B00     		lsls	r3, r1, #1
 1588 0038 D31A     		subs	r3, r2, r3
 1589 003a 03F00F03 		and	r3, r3, #15
 1590 003e 03EB0010 		add	r0, r3, r0, lsl #4
 1591 0042 3330     		adds	r0, r0, #51
 1592              	.LVL206:
1752:../user/source/DLT645.c ****     return LowByte;
1753:../user/source/DLT645.c **** }
 1593              		.loc 1 1753 0
 1594 0044 C0B2     		uxtb	r0, r0
 1595 0046 7047     		bx	lr
 1596              	.L101:
 1597              		.align	2
 1598              	.L100:
 1599 0048 D34D6210 		.word	274877907
 1600 004c 1F85EB51 		.word	1374389535
 1601 0050 67666666 		.word	1717986919
 1602              		.cfi_endproc
 1603              	.LFE142:
 1605              		.section	.text.GetHighByte,"ax",%progbits
 1606              		.align	2
 1607              		.thumb
 1608              		.thumb_func
 1610              	GetHighByte:
 1611              	.LFB143:
1754:../user/source/DLT645.c **** 
1755:../user/source/DLT645.c **** /********************************************************************
1756:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½«µçÑ¹°ÙÎ»¡¢Ê®Î»×ª»»ÎªµÍ×Ö½Ú
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 61


1757:../user/source/DLT645.c ****  * Êä    Èë£ºÊ®½øÖÆµçÑ¹Öµ
1758:../user/source/DLT645.c ****  * Êä    ³ö£º	BCDÂë
1759:../user/source/DLT645.c ****  *           
1760:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1761:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
1762:../user/source/DLT645.c ****  **********************************************************************/
1763:../user/source/DLT645.c **** uint8_t GetHighByte(int Voltage)
1764:../user/source/DLT645.c **** {
 1612              		.loc 1 1764 0
 1613              		.cfi_startproc
 1614              		@ args = 0, pretend = 0, frame = 0
 1615              		@ frame_needed = 0, uses_anonymous_args = 0
 1616              		@ link register save eliminated.
 1617              	.LVL207:
1765:../user/source/DLT645.c ****     uint8_t HighByte = 0x00;
1766:../user/source/DLT645.c ****     HighByte = (((uint8_t)(Voltage / 1000) << 4) & 0xF0) + ((uint8_t)((Voltage % 1000) / 100) & 0x0
 1618              		.loc 1 1766 0
 1619 0000 0C49     		ldr	r1, .L103
 1620 0002 81FB0031 		smull	r3, r1, r1, r0
 1621 0006 C317     		asrs	r3, r0, #31
 1622 0008 C3EBA111 		rsb	r1, r3, r1, asr #6
 1623 000c 0B01     		lsls	r3, r1, #4
 1624 000e 03F47F62 		and	r2, r3, #4080
 1625 0012 4FF47A73 		mov	r3, #1000
 1626 0016 03FB1103 		mls	r3, r3, r1, r0
 1627 001a 0748     		ldr	r0, .L103+4
 1628              	.LVL208:
 1629 001c 80FB0310 		smull	r1, r0, r0, r3
 1630 0020 DB17     		asrs	r3, r3, #31
 1631 0022 C3EB6013 		rsb	r3, r3, r0, asr #5
 1632 0026 03F00F03 		and	r3, r3, #15
 1633 002a 1344     		add	r3, r3, r2
 1634 002c 03F13300 		add	r0, r3, #51
 1635              	.LVL209:
1767:../user/source/DLT645.c ****     return HighByte;
1768:../user/source/DLT645.c **** }
 1636              		.loc 1 1768 0
 1637 0030 C0B2     		uxtb	r0, r0
 1638 0032 7047     		bx	lr
 1639              	.L104:
 1640              		.align	2
 1641              	.L103:
 1642 0034 D34D6210 		.word	274877907
 1643 0038 1F85EB51 		.word	1374389535
 1644              		.cfi_endproc
 1645              	.LFE143:
 1647              		.section	.text.Get_Energy,"ax",%progbits
 1648              		.align	2
 1649              		.thumb
 1650              		.thumb_func
 1652              	Get_Energy:
 1653              	.LFB145:
1769:../user/source/DLT645.c **** 
1770:../user/source/DLT645.c **** /********************************************************************
1771:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÈÕ¶³½áÊı¾İĞŞ¸Ä¹¦ÄÜ³õÊ¼»¯£ºÄ¬ÈÏĞŞ¸Ä£»
1772:../user/source/DLT645.c ****  * Êä    Èë£º
1773:../user/source/DLT645.c ****  * Êä    ³ö£º
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 62


1774:../user/source/DLT645.c ****  *
1775:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1776:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.9.6
1777:../user/source/DLT645.c ****  **********************************************************************/
1778:../user/source/DLT645.c **** //void vDayfrozen_Change_Init(void)
1779:../user/source/DLT645.c **** void vEnergy_Modify_Init(void)
1780:../user/source/DLT645.c **** {
1781:../user/source/DLT645.c ****     uint8_t tmp;
1782:../user/source/DLT645.c ****     /*ÈÕ¶³½áĞŞ¸ÄÊ¹ÄÜÎ»³õÊ¼»¯*/
1783:../user/source/DLT645.c ****     Dayfrozen_Change_State = EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR);
1784:../user/source/DLT645.c ****     tmp = EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR);
1785:../user/source/DLT645.c ****     /*ÅĞ¶ÏflashÖĞÊÇ·ñÒÑ´æ´¢µçÑ¹ĞŞ¸Ä±ÈÀı*/
1786:../user/source/DLT645.c ****     if (tmp == 0xFF)
1787:../user/source/DLT645.c ****     {
1788:../user/source/DLT645.c ****         /*Ê¹ÓÃÄ¬ÈÏĞŞ¸Ä±ÈÀı*/
1789:../user/source/DLT645.c ****         ucDayfrozen_Modify_Ratio = UCDAYFROZEN_CHANGE_DEFAULE_RATIO;
1790:../user/source/DLT645.c ****     }
1791:../user/source/DLT645.c ****     else
1792:../user/source/DLT645.c ****     {
1793:../user/source/DLT645.c ****         ucDayfrozen_Modify_Ratio = tmp;
1794:../user/source/DLT645.c ****     }
1795:../user/source/DLT645.c **** }
1796:../user/source/DLT645.c **** 
1797:../user/source/DLT645.c **** /********************************************************************
1798:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º´ÓÊı¾İÖ¡ÖĞ¶ÁÈ¡µçÄÜÁ¿Öµ
1799:../user/source/DLT645.c ****  * Êä    Èë£ºµçÄÜÁ¿Öµ´ÓµÍµ½¸ßËÄ¸ö×Ö½Ú
1800:../user/source/DLT645.c ****  * Êä    ³ö£ºÊ®½øÖÆµÄµçÄÜÁ¿Öµ
1801:../user/source/DLT645.c ****  * Òª    Çó£ºÊä³öÖµÀ©´ó100±¶
1802:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1803:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
1804:../user/source/DLT645.c ****  **********************************************************************/
1805:../user/source/DLT645.c **** uint32_t Get_Energy(uint8_t FstByte, uint8_t ScdByte, uint8_t TirdByte, uint8_t ForthByte)
1806:../user/source/DLT645.c **** {
 1654              		.loc 1 1806 0
 1655              		.cfi_startproc
 1656              		@ args = 0, pretend = 0, frame = 0
 1657              		@ frame_needed = 0, uses_anonymous_args = 0
 1658              		@ link register save eliminated.
 1659              	.LVL210:
 1660 0000 30B4     		push	{r4, r5}
 1661              	.LCFI17:
 1662              		.cfi_def_cfa_offset 8
 1663              		.cfi_offset 4, -8
 1664              		.cfi_offset 5, -4
 1665              	.LVL211:
1807:../user/source/DLT645.c ****     uint32_t Energy = 0;
1808:../user/source/DLT645.c ****     Energy = BCD2DEC(ForthByte - 0x33) * 1000000 +
 1666              		.loc 1 1808 0
 1667 0002 333B     		subs	r3, r3, #51
 1668              	.LVL212:
 1669 0004 C3F30314 		ubfx	r4, r3, #4, #4
 1670 0008 04EB8404 		add	r4, r4, r4, lsl #2
 1671 000c 6500     		lsls	r5, r4, #1
 1672 000e 03F00F03 		and	r3, r3, #15
 1673 0012 2B44     		add	r3, r3, r5
1809:../user/source/DLT645.c ****              BCD2DEC(TirdByte - 0x33) * 10000 +
 1674              		.loc 1 1809 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 63


 1675 0014 333A     		subs	r2, r2, #51
 1676              	.LVL213:
 1677 0016 C2F30314 		ubfx	r4, r2, #4, #4
 1678 001a 04EB8404 		add	r4, r4, r4, lsl #2
 1679 001e 6500     		lsls	r5, r4, #1
 1680 0020 02F00F02 		and	r2, r2, #15
 1681 0024 2A44     		add	r2, r2, r5
 1682 0026 42F21074 		movw	r4, #10000
 1683 002a 04FB02F2 		mul	r2, r4, r2
1808:../user/source/DLT645.c ****              BCD2DEC(TirdByte - 0x33) * 10000 +
 1684              		.loc 1 1808 0
 1685 002e 0D4C     		ldr	r4, .L107
 1686 0030 04FB0323 		mla	r3, r4, r3, r2
1810:../user/source/DLT645.c ****              BCD2DEC(ScdByte - 0x33) * 100 +
 1687              		.loc 1 1810 0
 1688 0034 3339     		subs	r1, r1, #51
 1689              	.LVL214:
 1690 0036 C1F30312 		ubfx	r2, r1, #4, #4
 1691 003a 02EB8202 		add	r2, r2, r2, lsl #2
 1692 003e 5400     		lsls	r4, r2, #1
 1693 0040 01F00F01 		and	r1, r1, #15
 1694 0044 2144     		add	r1, r1, r4
1809:../user/source/DLT645.c ****              BCD2DEC(TirdByte - 0x33) * 10000 +
 1695              		.loc 1 1809 0
 1696 0046 6422     		movs	r2, #100
 1697 0048 02FB0131 		mla	r1, r2, r1, r3
1811:../user/source/DLT645.c ****              BCD2DEC(FstByte - 0x33);
 1698              		.loc 1 1811 0
 1699 004c 3338     		subs	r0, r0, #51
 1700              	.LVL215:
 1701 004e C0F30313 		ubfx	r3, r0, #4, #4
 1702 0052 03EB8303 		add	r3, r3, r3, lsl #2
 1703 0056 5A00     		lsls	r2, r3, #1
 1704 0058 00F00F00 		and	r0, r0, #15
 1705 005c 1044     		add	r0, r0, r2
 1706              	.LVL216:
1812:../user/source/DLT645.c ****     return Energy;
1813:../user/source/DLT645.c **** }
 1707              		.loc 1 1813 0
 1708 005e 0844     		add	r0, r0, r1
 1709              	.LVL217:
 1710 0060 30BC     		pop	{r4, r5}
 1711              	.LCFI18:
 1712              		.cfi_restore 5
 1713              		.cfi_restore 4
 1714              		.cfi_def_cfa_offset 0
 1715 0062 7047     		bx	lr
 1716              	.L108:
 1717              		.align	2
 1718              	.L107:
 1719 0064 40420F00 		.word	1000000
 1720              		.cfi_endproc
 1721              	.LFE145:
 1723              		.section	.text.Fill_Energy,"ax",%progbits
 1724              		.align	2
 1725              		.thumb
 1726              		.thumb_func
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 64


 1728              	Fill_Energy:
 1729              	.LFB146:
1814:../user/source/DLT645.c **** 
1815:../user/source/DLT645.c **** /********************************************************************
1816:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½«µçÄÜÁ¿Öµ×ª»¯Îª645Ö¡×Ö½Ú
1817:../user/source/DLT645.c ****  * Êä    Èë£ºµçÄÜÁ¿Öµ£¬ËÄ×Ö½Ú°´´«ÊäË³ĞòÊäÈë
1818:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
1819:../user/source/DLT645.c ****  * Òª    Çó£ºÊä³öÖµÀ©´ó100±¶
1820:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1821:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.10
1822:../user/source/DLT645.c ****  **********************************************************************/
1823:../user/source/DLT645.c **** void Fill_Energy(uint32_t energy, uint8_t *pFstByte, uint8_t *pScdByte, uint8_t *pTirdByte, uint8_t
1824:../user/source/DLT645.c **** {
 1730              		.loc 1 1824 0
 1731              		.cfi_startproc
 1732              		@ args = 4, pretend = 0, frame = 0
 1733              		@ frame_needed = 0, uses_anonymous_args = 0
 1734              	.LVL218:
 1735 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1736              	.LCFI19:
 1737              		.cfi_def_cfa_offset 28
 1738              		.cfi_offset 4, -28
 1739              		.cfi_offset 5, -24
 1740              		.cfi_offset 6, -20
 1741              		.cfi_offset 7, -16
 1742              		.cfi_offset 8, -12
 1743              		.cfi_offset 9, -8
 1744              		.cfi_offset 14, -4
1825:../user/source/DLT645.c ****     *pFstByte = DEC2BCD(energy % 100) + 0x33;
 1745              		.loc 1 1825 0
 1746 0004 2C4D     		ldr	r5, .L111
 1747 0006 A5FB004C 		umull	r4, ip, r5, r0
 1748 000a 4FEA5C18 		lsr	r8, ip, #5
 1749 000e 6426     		movs	r6, #100
 1750 0010 06FB1808 		mls	r8, r6, r8, r0
 1751 0014 294C     		ldr	r4, .L111+4
 1752 0016 A4FB08E7 		umull	lr, r7, r4, r8
 1753 001a 4FEAD70E 		lsr	lr, r7, #3
 1754 001e 0EEB8E09 		add	r9, lr, lr, lsl #2
 1755 0022 4FEA4907 		lsl	r7, r9, #1
 1756 0026 C7EB0807 		rsb	r7, r7, r8
 1757 002a 47EA0E17 		orr	r7, r7, lr, lsl #4
 1758 002e 3337     		adds	r7, r7, #51
 1759 0030 0F70     		strb	r7, [r1]
1826:../user/source/DLT645.c ****     *pScdByte = DEC2BCD(energy / 100 % 100) + 0x33;
 1760              		.loc 1 1826 0
 1761 0032 4FEA5C1C 		lsr	ip, ip, #5
 1762 0036 A5FB0C1E 		umull	r1, lr, r5, ip
 1763              	.LVL219:
 1764 003a 4FEA5E1E 		lsr	lr, lr, #5
 1765 003e 06FB1ECE 		mls	lr, r6, lr, ip
 1766 0042 A4FB0E71 		umull	r7, r1, r4, lr
 1767 0046 CF08     		lsrs	r7, r1, #3
 1768 0048 07EB870C 		add	ip, r7, r7, lsl #2
 1769 004c 4FEA4C01 		lsl	r1, ip, #1
 1770 0050 C1EB0E01 		rsb	r1, r1, lr
 1771 0054 41EA0711 		orr	r1, r1, r7, lsl #4
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 65


 1772 0058 3331     		adds	r1, r1, #51
 1773 005a 1170     		strb	r1, [r2]
1827:../user/source/DLT645.c ****     *pTirdByte = DEC2BCD(energy / 10000 % 100) + 0x33;
 1774              		.loc 1 1827 0
 1775 005c 184A     		ldr	r2, .L111+8
 1776              	.LVL220:
 1777 005e A2FB0012 		umull	r1, r2, r2, r0
 1778 0062 520B     		lsrs	r2, r2, #13
 1779 0064 A5FB0217 		umull	r1, r7, r5, r2
 1780 0068 7F09     		lsrs	r7, r7, #5
 1781 006a 06FB1727 		mls	r7, r6, r7, r2
 1782 006e A4FB0712 		umull	r1, r2, r4, r7
 1783 0072 D108     		lsrs	r1, r2, #3
 1784 0074 01EB810E 		add	lr, r1, r1, lsl #2
 1785 0078 4FEA4E02 		lsl	r2, lr, #1
 1786 007c 9646     		mov	lr, r2
 1787 007e BA1A     		subs	r2, r7, r2
 1788 0080 42EA0112 		orr	r2, r2, r1, lsl #4
 1789 0084 3332     		adds	r2, r2, #51
 1790 0086 1A70     		strb	r2, [r3]
1828:../user/source/DLT645.c ****     *pForthByte = DEC2BCD(energy / 1000000 % 100) + 0x33;
 1791              		.loc 1 1828 0
 1792 0088 0E4B     		ldr	r3, .L111+12
 1793              	.LVL221:
 1794 008a A3FB0030 		umull	r3, r0, r3, r0
 1795              	.LVL222:
 1796 008e 800C     		lsrs	r0, r0, #18
 1797 0090 A5FB0035 		umull	r3, r5, r5, r0
 1798 0094 6D09     		lsrs	r5, r5, #5
 1799 0096 06FB1505 		mls	r5, r6, r5, r0
 1800 009a A4FB0534 		umull	r3, r4, r4, r5
 1801 009e E408     		lsrs	r4, r4, #3
 1802 00a0 04EB8402 		add	r2, r4, r4, lsl #2
 1803 00a4 5300     		lsls	r3, r2, #1
 1804 00a6 EB1A     		subs	r3, r5, r3
 1805 00a8 43EA0414 		orr	r4, r3, r4, lsl #4
 1806 00ac 3334     		adds	r4, r4, #51
 1807 00ae 079B     		ldr	r3, [sp, #28]
 1808 00b0 1C70     		strb	r4, [r3]
 1809 00b2 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1810              	.LVL223:
 1811              	.L112:
 1812 00b6 00BF     		.align	2
 1813              	.L111:
 1814 00b8 1F85EB51 		.word	1374389535
 1815 00bc CDCCCCCC 		.word	-858993459
 1816 00c0 5917B7D1 		.word	-776530087
 1817 00c4 83DE1B43 		.word	1125899907
 1818              		.cfi_endproc
 1819              	.LFE146:
 1821              		.section	.text.vVoltage_SetMaxMaxValue,"ax",%progbits
 1822              		.align	2
 1823              		.global	vVoltage_SetMaxMaxValue
 1824              		.thumb
 1825              		.thumb_func
 1827              	vVoltage_SetMaxMaxValue:
 1828              	.LFB159:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 66


1829:../user/source/DLT645.c **** }
1830:../user/source/DLT645.c **** 
1831:../user/source/DLT645.c **** /********************************************************************
1832:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµ±Ç°/ÈÕ¶³½áµçÄÜÁ¿µ÷Õû²ßÂÔ
1833:../user/source/DLT645.c ****  * Êä    Èë£º
1834:../user/source/DLT645.c ****  * Êä    ³ö£º
1835:../user/source/DLT645.c ****  *           
1836:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1837:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.8
1838:../user/source/DLT645.c ****  **********************************************************************/
1839:../user/source/DLT645.c **** uint32_t vNow_Frozen_Modify_Mothod(uint32_t nowenergy, uint32_t RealValueAddr, uint32_t ModifiedVal
1840:../user/source/DLT645.c **** {
1841:../user/source/DLT645.c ****     uint32_t RealValue;
1842:../user/source/DLT645.c ****     uint32_t Modified_Value;
1843:../user/source/DLT645.c ****     uint64_t i;
1844:../user/source/DLT645.c ****     /*¶ÁÈ¡´æ´¢µÄÉÏ´ÎÕæÊµÖµºÍĞŞ¸ÄÖµ*/
1845:../user/source/DLT645.c ****     RealValue = Flash_Read_Word(RealValueAddr);
1846:../user/source/DLT645.c ****     Modified_Value = Flash_Read_Word(ModifiedValueAddr);
1847:../user/source/DLT645.c ****     /*ÖÕ¶ËµÚÒ»´ÎÊ¹ÓÃ*/
1848:../user/source/DLT645.c ****     if ((RealValue == 0XFFFFFFFF) || (Modified_Value == 0XFFFFFFFF))
1849:../user/source/DLT645.c ****     {
1850:../user/source/DLT645.c ****         /*ÉÏËÍÖµ´æ´¢ÎªÕæÊµÖµºÍĞŞ¸ÄÖµ*/
1851:../user/source/DLT645.c ****         Flash_Write_Word(RealValueAddr, nowenergy);
1852:../user/source/DLT645.c ****         Flash_Write_Word(ModifiedValueAddr, nowenergy);
1853:../user/source/DLT645.c ****         /*²»ĞŞ¸Ä*/
1854:../user/source/DLT645.c ****         return nowenergy;
1855:../user/source/DLT645.c ****     }
1856:../user/source/DLT645.c ****     else
1857:../user/source/DLT645.c ****     {
1858:../user/source/DLT645.c ****         /*¼ÆËãÕæÊµµÄÔöÁ¿£¬´òÕÛºóÀÛ¼Óµ½ÉÏ´ÎµÄĞŞ¸ÄÖµ*/
1859:../user/source/DLT645.c ****         /*µç±íÖµÒç³öºó¹éÁã*/
1860:../user/source/DLT645.c ****         if (nowenergy < RealValue)
1861:../user/source/DLT645.c ****         {
1862:../user/source/DLT645.c ****             //i= ((uint64_t)(nowenergy+ 99999999- RealValue)* ucDayfrozen_Modify_Ratio)/100;
1863:../user/source/DLT645.c ****             /*2018-6-27 11:04:38£ºÔö¼ÓËÄÉáÎåÈë£¬µ¥´ÎÔö¼Ó0.05kwhÒÔÏÂÊ±£¬²»ĞŞ¸Ä*/
1864:../user/source/DLT645.c ****             i = ((uint64_t)(nowenergy + 99999999 - RealValue) * ucDayfrozen_Modify_Ratio + 50) / 10
1865:../user/source/DLT645.c ****         }
1866:../user/source/DLT645.c ****         else
1867:../user/source/DLT645.c ****         {
1868:../user/source/DLT645.c ****             i = ((uint64_t)(nowenergy - RealValue) * ucDayfrozen_Modify_Ratio + 50) / 100;
1869:../user/source/DLT645.c ****         }
1870:../user/source/DLT645.c ****         Modified_Value += (uint32_t)i;
1871:../user/source/DLT645.c ****         /*ÀÛ¼ÆÖµÒç³öºó¹éÁã*/
1872:../user/source/DLT645.c ****         Modified_Value = (Modified_Value > 99999999 ? Modified_Value - 99999999 : Modified_Value);
1873:../user/source/DLT645.c ****         /*½«ÉÏËÍÖµ´æ´¢ÎªÕæÊµÖµ*/
1874:../user/source/DLT645.c ****         Flash_Write_Word(RealValueAddr, nowenergy);
1875:../user/source/DLT645.c ****         /*ĞÂµÄĞŞ¸ÄÖµ¸²¸Ç¾ÉÖµ´æ´¢*/
1876:../user/source/DLT645.c ****         Flash_Write_Word(ModifiedValueAddr, Modified_Value);
1877:../user/source/DLT645.c ****         /*·µ»ØĞŞ¸ÄÖµ*/
1878:../user/source/DLT645.c ****         return Modified_Value;
1879:../user/source/DLT645.c ****     }
1880:../user/source/DLT645.c **** }
1881:../user/source/DLT645.c **** 
1882:../user/source/DLT645.c **** /********************************************************************
1883:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµ±Ç°µçÁ¿Êı¾İĞŞ¸Äº¯Êı
1884:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
1885:../user/source/DLT645.c ****  * Êä    ³ö£º	none
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 67


1886:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1887:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.9
1888:../user/source/DLT645.c ****  case ID_00010000:	//µ±Ç°ÕıÏòÓĞ¹¦×ÜµçÄÜ
1889:../user/source/DLT645.c ****  case ID_00010100:	//µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜ
1890:../user/source/DLT645.c ****  case ID_00010200:	//µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ2µçÄÜ
1891:../user/source/DLT645.c ****  case ID_00010300:	//µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ3µçÄÜ
1892:../user/source/DLT645.c ****  case ID_00010400:	//µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ4µçÄÜ
1893:../user/source/DLT645.c ****  case ID_0001FF00:	//µ±Ç°ÕıÏòÓĞ¹¦µçÄÜÊı¾İ¿é
1894:../user/source/DLT645.c ****  case ID_00150000:	//µ±Ç°AÏàÕıÏòÓĞ¹¦
1895:../user/source/DLT645.c ****  case ID_00290000:	//µ±Ç°BÏàÕıÏòÓĞ¹¦
1896:../user/source/DLT645.c ****  case ID_003D0000:	//µ±Ç°CÏàÕıÏòÓĞ¹¦
1897:../user/source/DLT645.c ****  **********************************************************************/
1898:../user/source/DLT645.c **** void vNowEnergy_Modifier(uint8_t *pucBuffer)
1899:../user/source/DLT645.c **** {
1900:../user/source/DLT645.c ****     uint16_t i;
1901:../user/source/DLT645.c ****     uint32_t energy;    //Êı¾İÓòµÄµÚÒ»¸öµçÁ¿Öµ
1902:../user/source/DLT645.c ****     uint32_t energy_F1; //·ÑÂÊ1µçÁ¿×¨ÓÃ±äÁ¿
1903:../user/source/DLT645.c ****     uint32_t energy_F2; //·ÑÂÊ2µçÁ¿×¨ÓÃ±äÁ¿
1904:../user/source/DLT645.c ****     uint32_t energy_F3; //·ÑÂÊ3µçÁ¿×¨ÓÃ±äÁ¿
1905:../user/source/DLT645.c ****     uint32_t energy_F4; //·ÑÂÊ4µçÁ¿×¨ÓÃ±äÁ¿
1906:../user/source/DLT645.c ****     if (Dayfrozen_Change_State == 0x00)
1907:../user/source/DLT645.c ****         return;
1908:../user/source/DLT645.c ****     energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);
1909:../user/source/DLT645.c ****     switch (pucBuffer[11])
1910:../user/source/DLT645.c ****     {
1911:../user/source/DLT645.c ****     case 0x33:
1912:../user/source/DLT645.c ****     {
1913:../user/source/DLT645.c ****         switch (pucBuffer[12])
1914:../user/source/DLT645.c ****         {
1915:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦×Ü*/
1916:../user/source/DLT645.c ****         case 0x34:
1917:../user/source/DLT645.c ****         {
1918:../user/source/DLT645.c ****             energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_ALL_NOWENERGY_ADDR,
1919:../user/source/DLT645.c ****                                                FLASH_MODIFIED_ALL_NOWENERGY_ADDR);
1920:../user/source/DLT645.c ****             break;
1921:../user/source/DLT645.c ****         }
1922:../user/source/DLT645.c ****         /*AÏàÕıÏòÓĞ¹¦*/
1923:../user/source/DLT645.c ****         case 0x48:
1924:../user/source/DLT645.c ****         {
1925:../user/source/DLT645.c ****             energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_A_NOWENERGY_ADDR,
1926:../user/source/DLT645.c ****                                                FLASH_MODIFIED_A_NOWENERGY_ADDR);
1927:../user/source/DLT645.c ****             break;
1928:../user/source/DLT645.c ****         }
1929:../user/source/DLT645.c ****         /*BÏàÕıÏòÓĞ¹¦*/
1930:../user/source/DLT645.c ****         case 0x5c:
1931:../user/source/DLT645.c ****         {
1932:../user/source/DLT645.c ****             energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_B_NOWENERGY_ADDR,
1933:../user/source/DLT645.c ****                                                FLASH_MODIFIED_B_NOWENERGY_ADDR);
1934:../user/source/DLT645.c ****             break;
1935:../user/source/DLT645.c ****         }
1936:../user/source/DLT645.c ****         /*CÏàÕıÏòÓĞ¹¦*/
1937:../user/source/DLT645.c ****         case 0x70:
1938:../user/source/DLT645.c ****         {
1939:../user/source/DLT645.c ****             energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_C_NOWENERGY_ADDR,
1940:../user/source/DLT645.c ****                                                FLASH_MODIFIED_C_NOWENERGY_ADDR);
1941:../user/source/DLT645.c ****             break;
1942:../user/source/DLT645.c ****         }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 68


1943:../user/source/DLT645.c ****         default:
1944:../user/source/DLT645.c ****             break;
1945:../user/source/DLT645.c ****         }
1946:../user/source/DLT645.c ****         break;
1947:../user/source/DLT645.c ****     }
1948:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×Ü·ÑÂÊ1*/
1949:../user/source/DLT645.c ****     case 0x34:
1950:../user/source/DLT645.c ****     {
1951:../user/source/DLT645.c ****         energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_F1_NOWENERGY_ADDR,
1952:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F1_NOWENERGY_ADDR);
1953:../user/source/DLT645.c ****         break;
1954:../user/source/DLT645.c ****     }
1955:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×Ü·ÑÂÊ2*/
1956:../user/source/DLT645.c ****     case 0x35:
1957:../user/source/DLT645.c ****     {
1958:../user/source/DLT645.c ****         energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_F2_NOWENERGY_ADDR,
1959:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F2_NOWENERGY_ADDR);
1960:../user/source/DLT645.c ****         break;
1961:../user/source/DLT645.c ****     }
1962:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×Ü·ÑÂÊ3*/
1963:../user/source/DLT645.c ****     case 0x36:
1964:../user/source/DLT645.c ****     {
1965:../user/source/DLT645.c ****         energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_F3_NOWENERGY_ADDR,
1966:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F3_NOWENERGY_ADDR);
1967:../user/source/DLT645.c ****         break;
1968:../user/source/DLT645.c ****     }
1969:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×Ü·ÑÂÊ4*/
1970:../user/source/DLT645.c ****     case 0x37:
1971:../user/source/DLT645.c ****     {
1972:../user/source/DLT645.c ****         energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_F4_NOWENERGY_ADDR,
1973:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F4_NOWENERGY_ADDR);
1974:../user/source/DLT645.c ****         break;
1975:../user/source/DLT645.c ****     }
1976:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×ÜÊı¾İ¿é*/
1977:../user/source/DLT645.c ****     case 0x32:
1978:../user/source/DLT645.c ****     {
1979:../user/source/DLT645.c ****         /*			2018-6-27 09:07:02£ºÖØÇìÕÙ²âÈÕ¶³½áÊı¾İ¿é·¢ÏÖ×ÜºÍËÄ·ÑÂÊÖ®ºÍÓĞ²îÒì£¬
1980:../user/source/DLT645.c **** 	 *			Ô­ÒòÎª³ËÒÔ0.9ºóĞ¡ÊıµãºóµÚÈıÎ»±»ºöÂÔ£¬×ÜµçÁ¿´óÓÚ·Ö·ÑÂÊµçÁ¿Ö®ºÍ£¬
1981:../user/source/DLT645.c **** 	 *			½«×ÜµçÁ¿¼ÆËã·½·¨¸ÄÎª½«ËÄ·ÑÂÊ·ÖµçÁ¿Ïà¼Ó
1982:../user/source/DLT645.c **** 	 *			energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_ALL_NOWENERGY_ADDR,FLASH_MODIFIED_ALL_N
1983:../user/source/DLT645.c **** 	 *			*/
1984:../user/source/DLT645.c ****         energy_F1 = Get_Energy(pucBuffer[18], pucBuffer[19], pucBuffer[20], pucBuffer[21]);
1985:../user/source/DLT645.c ****         energy_F1 = vNow_Frozen_Modify_Mothod(energy_F1, FLASH_REAL_F1_NOWENERGY_ADDR,
1986:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F1_NOWENERGY_ADDR);
1987:../user/source/DLT645.c ****         energy_F2 = Get_Energy(pucBuffer[22], pucBuffer[23], pucBuffer[24], pucBuffer[25]);
1988:../user/source/DLT645.c ****         energy_F2 = vNow_Frozen_Modify_Mothod(energy_F2, FLASH_REAL_F2_NOWENERGY_ADDR,
1989:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F2_NOWENERGY_ADDR);
1990:../user/source/DLT645.c ****         energy_F3 = Get_Energy(pucBuffer[26], pucBuffer[27], pucBuffer[28], pucBuffer[29]);
1991:../user/source/DLT645.c ****         energy_F3 = vNow_Frozen_Modify_Mothod(energy_F3, FLASH_REAL_F3_NOWENERGY_ADDR,
1992:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F3_NOWENERGY_ADDR);
1993:../user/source/DLT645.c **** 
1994:../user/source/DLT645.c ****         energy_F4 = Get_Energy(pucBuffer[30], pucBuffer[31], pucBuffer[32], pucBuffer[33]);
1995:../user/source/DLT645.c ****         energy_F4 = vNow_Frozen_Modify_Mothod(energy_F4, FLASH_REAL_F4_NOWENERGY_ADDR,
1996:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F4_NOWENERGY_ADDR);
1997:../user/source/DLT645.c ****         /*¶ÁÈ¡×ÜµçÁ¿ÕæÊµÖµ*/
1998:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);
1999:../user/source/DLT645.c ****         /*±£´æ×ÜµçÁ¿ÕæÊµÖµ£¬µ¥³­×ÜµçÁ¿Ê±Ê¹ÓÃ*/
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 69


2000:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_REAL_ALL_NOWENERGY_ADDR, energy);
2001:../user/source/DLT645.c ****         /*¸ù¾İ·Ö·ÑÂÊµçÁ¿¼ÆËãĞŞ¸ÄºóµÄ×ÜµçÁ¿*/
2002:../user/source/DLT645.c ****         energy = energy_F1 + energy_F2 + energy_F3 + energy_F4;
2003:../user/source/DLT645.c ****         /*±£´æĞŞ¸ÄÖµ£¬µ¥³­×ÜµçÁ¿Ê±Ê¹ÓÃ*/
2004:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_MODIFIED_ALL_NOWENERGY_ADDR, energy);
2005:../user/source/DLT645.c ****         break;
2006:../user/source/DLT645.c ****     }
2007:../user/source/DLT645.c ****     default:
2008:../user/source/DLT645.c ****         break;
2009:../user/source/DLT645.c ****     }
2010:../user/source/DLT645.c ****     switch (pucBuffer[11])
2011:../user/source/DLT645.c ****     {
2012:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×Ü£¬»òA/B/CÏàÕıÏòÓĞ¹¦*/
2013:../user/source/DLT645.c ****     case 0x33:
2014:../user/source/DLT645.c ****     case 0x34:
2015:../user/source/DLT645.c ****     case 0x35:
2016:../user/source/DLT645.c ****     case 0x36:
2017:../user/source/DLT645.c ****     case 0x37:
2018:../user/source/DLT645.c ****     {
2019:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2020:../user/source/DLT645.c ****         pucBuffer[18] = 0;
2021:../user/source/DLT645.c ****         for (i = 0; i < 18; i++)
2022:../user/source/DLT645.c ****         {
2023:../user/source/DLT645.c ****             pucBuffer[18] += pucBuffer[i];
2024:../user/source/DLT645.c ****         }
2025:../user/source/DLT645.c ****         pucBuffer[19] = 0x16;
2026:../user/source/DLT645.c ****         break;
2027:../user/source/DLT645.c ****     }
2028:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×ÜÊı¾İ¿é*/
2029:../user/source/DLT645.c ****     case 0x32:
2030:../user/source/DLT645.c ****     {
2031:../user/source/DLT645.c ****         /*×Ü*/
2032:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2033:../user/source/DLT645.c ****         /*¼â*/
2034:../user/source/DLT645.c ****         Fill_Energy(energy_F1, &pucBuffer[18], &pucBuffer[19], &pucBuffer[20], &pucBuffer[21]);
2035:../user/source/DLT645.c ****         /*·å*/
2036:../user/source/DLT645.c ****         Fill_Energy(energy_F2, &pucBuffer[22], &pucBuffer[23], &pucBuffer[24], &pucBuffer[25]);
2037:../user/source/DLT645.c ****         /*Æ½*/
2038:../user/source/DLT645.c ****         Fill_Energy(energy_F3, &pucBuffer[26], &pucBuffer[27], &pucBuffer[28], &pucBuffer[29]);
2039:../user/source/DLT645.c ****         /*¹È*/
2040:../user/source/DLT645.c ****         Fill_Energy(energy_F4, &pucBuffer[30], &pucBuffer[31], &pucBuffer[32], &pucBuffer[33]);
2041:../user/source/DLT645.c ****         pucBuffer[34] = 0;
2042:../user/source/DLT645.c ****         for (i = 0; i < 34; i++)
2043:../user/source/DLT645.c ****         {
2044:../user/source/DLT645.c ****             pucBuffer[34] += pucBuffer[i];
2045:../user/source/DLT645.c ****         }
2046:../user/source/DLT645.c ****         pucBuffer[35] = 0x16;
2047:../user/source/DLT645.c ****         break;
2048:../user/source/DLT645.c ****     }
2049:../user/source/DLT645.c ****     default:
2050:../user/source/DLT645.c ****         break;
2051:../user/source/DLT645.c ****     }
2052:../user/source/DLT645.c **** }
2053:../user/source/DLT645.c **** 
2054:../user/source/DLT645.c **** /********************************************************************
2055:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÈÕ¶³½áÊı¾İĞŞ¸Äº¯Êı
2056:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 70


2057:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2058:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2059:../user/source/DLT645.c ****  * Ç°1ÈÕ¶³½áµÚ¶şÌìÕÙ²â¿ªÊ¼¸Ä£¬
2060:../user/source/DLT645.c ****  * Ç°2ÈÕ¶³½áµÚÈıÌìÕÙ²â¿ªÊ¼¸Ä£¬
2061:../user/source/DLT645.c ****  * Ç°3ÈÕ¶«½áµÚËÄÌìÕÙ²â¿ªÊ¼¸Ä
2062:../user/source/DLT645.c ****  * ÈôÉÏµç3ÈÕÄÚ£¬Ç°1ÈÕ¡¢Ç°2ÈÕ¡¢Ç°3ÈÕ¶³½áÃ¿ÌìÕÙ²âµÄ´ÎÊı²»È«ÊÇÒ»´Î£¬ÔòÎŞ·¨
2063:../user/source/DLT645.c ****  * ÊµÏÖ£¬¹Ê²»ĞŞ¸ÄÇ°2ÈÕºÍÇ°3ÈÕ¶³½á
2064:../user/source/DLT645.c ****  *
2065:../user/source/DLT645.c **** 	case ID_05060101:	//ÉÏ1ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£©
2066:../user/source/DLT645.c **** 	case ID_05060102:	//ÉÏ2ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£©
2067:../user/source/DLT645.c **** 	case ID_05060103:	//ÉÏ3ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£© 
2068:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.9
2069:../user/source/DLT645.c ****  **********************************************************************/
2070:../user/source/DLT645.c **** void vDayfrozen_Modifier(uint8_t *pucBuffer) //ĞŞ¸ÄÈÕ¶³½áÊı¾İº¯Êı
2071:../user/source/DLT645.c **** {
2072:../user/source/DLT645.c ****     uint32_t energy, energy_F1, energy_F2, energy_F3, energy_F4;
2073:../user/source/DLT645.c ****     uint16_t i;
2074:../user/source/DLT645.c ****     /*ÉÏ1´Î¡¢ÉÏ2´Î¡¢ÉÏ3´ÎÈÕ¶³½áµçÄÜÊı£º¾İ*/
2075:../user/source/DLT645.c ****     if (Dayfrozen_Change_State == 0x00)
2076:../user/source/DLT645.c ****         return;
2077:../user/source/DLT645.c ****     /*2018-6-27 13:27:07£º
2078:../user/source/DLT645.c **** 	 *ÖØÇì·´À¡ÉÏ1ÈÕ¶³½áÕıÏòÓĞ¹¦×ÜÓëËÄ·ÑÂÊÖ®ºÍ²»Ò»ÖÂ£¬
2079:../user/source/DLT645.c **** 	 *Ô­ÒòÎª³ËÒÔ0.9Ê±Ğ¡ÊıµãºóµÚÈıÎ»±»ºöÂÔ£¬
2080:../user/source/DLT645.c **** 	 *ÕıÏòÓĞ¹¦×Ü²»ÔÙ³ËÒÔ0.9£¬Ö±½ÓÀÛ¼ÓËÄ·ÑÂÊĞŞ¸ÄºóµÄÖµ
2081:../user/source/DLT645.c **** 	 *energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);	
2082:../user/source/DLT645.c **** 	 *energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_1DAYFROZEN_ADDR, FLASH_MODIFIED_1DAYFROZEN
2083:../user/source/DLT645.c **** 	 *Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2084:../user/source/DLT645.c **** 	*/
2085:../user/source/DLT645.c **** 
2086:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦¼â·ÑÂÊµçÁ¿*/
2087:../user/source/DLT645.c ****     energy_F1 = Get_Energy(pucBuffer[18], pucBuffer[19], pucBuffer[20], pucBuffer[21]);
2088:../user/source/DLT645.c ****     energy_F1 = vNow_Frozen_Modify_Mothod(energy_F1, FLASH_REAL_1DAYFROZEN_ADDR + 4, FLASH_MODIFIED
2089:../user/source/DLT645.c ****     Fill_Energy(energy_F1, &pucBuffer[18], &pucBuffer[19], &pucBuffer[20], &pucBuffer[21]);
2090:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦·å·ÑÂÊµçÁ¿*/
2091:../user/source/DLT645.c ****     energy_F2 = Get_Energy(pucBuffer[22], pucBuffer[23], pucBuffer[24], pucBuffer[25]);
2092:../user/source/DLT645.c ****     energy_F2 = vNow_Frozen_Modify_Mothod(energy_F2, FLASH_REAL_1DAYFROZEN_ADDR + 8, FLASH_MODIFIED
2093:../user/source/DLT645.c ****     Fill_Energy(energy_F2, &pucBuffer[22], &pucBuffer[23], &pucBuffer[24], &pucBuffer[25]);
2094:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦Æ½·ÑÂÊµçÁ¿*/
2095:../user/source/DLT645.c ****     energy_F3 = Get_Energy(pucBuffer[26], pucBuffer[27], pucBuffer[28], pucBuffer[29]);
2096:../user/source/DLT645.c ****     energy_F3 = vNow_Frozen_Modify_Mothod(energy_F3, FLASH_REAL_1DAYFROZEN_ADDR + 12, FLASH_MODIFIE
2097:../user/source/DLT645.c ****     Fill_Energy(energy_F3, &pucBuffer[26], &pucBuffer[27], &pucBuffer[28], &pucBuffer[29]);
2098:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦¹È·ÑÂÊµçÁ¿*/
2099:../user/source/DLT645.c ****     energy_F4 = Get_Energy(pucBuffer[30], pucBuffer[31], pucBuffer[32], pucBuffer[33]);
2100:../user/source/DLT645.c ****     energy_F4 = vNow_Frozen_Modify_Mothod(energy_F4, FLASH_REAL_1DAYFROZEN_ADDR + 16, FLASH_MODIFIE
2101:../user/source/DLT645.c ****     Fill_Energy(energy_F4, &pucBuffer[30], &pucBuffer[31], &pucBuffer[32], &pucBuffer[33]);
2102:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×ÜµçÁ¿*/
2103:../user/source/DLT645.c ****     /*»ñÈ¡ÉÏÒ»ÈÕÕæÊµÖµ*/
2104:../user/source/DLT645.c ****     energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);
2105:../user/source/DLT645.c ****     /*´æ´¢ÕæÊµÖµ*/
2106:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_REAL_1DAYFROZEN_ADDR, energy);
2107:../user/source/DLT645.c ****     /*¼ÆËãĞŞ¸ÄºóµÄÖµ*/
2108:../user/source/DLT645.c ****     energy = energy_F1 + energy_F2 + energy_F3 + energy_F4;
2109:../user/source/DLT645.c ****     /*´æ´¢ĞŞ¸ÄºóµÄÖµ*/
2110:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_MODIFIED_1DAYFROZEN_ADDR, energy);
2111:../user/source/DLT645.c ****     /*×éÖ¡*/
2112:../user/source/DLT645.c ****     Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2113:../user/source/DLT645.c **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 71


2114:../user/source/DLT645.c ****     pucBuffer[34] = 0;
2115:../user/source/DLT645.c ****     for (i = 0; i < 34; i++)
2116:../user/source/DLT645.c ****     {
2117:../user/source/DLT645.c ****         pucBuffer[34] += pucBuffer[i];
2118:../user/source/DLT645.c ****     }
2119:../user/source/DLT645.c ****     pucBuffer[35] = 0x16;
2120:../user/source/DLT645.c **** }
2121:../user/source/DLT645.c **** 
2122:../user/source/DLT645.c **** /********************************************************************
2123:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½áËãÈÕÕıÏòÓĞ¹¦µçÁ¿Êı¾İµ÷Õû²ßÂÔ
2124:../user/source/DLT645.c ****  * Êä    Èë£º
2125:../user/source/DLT645.c ****  * Êä    ³ö£º
2126:../user/source/DLT645.c ****  * Ëµ    Ã÷£º½áËãÈÕµçÁ¿ÎªÔö¼ÓÖµ£¬¿ÉÒÔÖ±½Ó°´±ÈÀıËõĞ¡
2127:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2128:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.9.6
2129:../user/source/DLT645.c ****  **********************************************************************/
2130:../user/source/DLT645.c **** uint32_t vAccountEnergy_Modify_Mothod(uint32_t dayfrozen)
2131:../user/source/DLT645.c **** {
2132:../user/source/DLT645.c ****     uint64_t i;
2133:../user/source/DLT645.c ****     i = (uint64_t)dayfrozen * ucDayfrozen_Modify_Ratio;
2134:../user/source/DLT645.c ****     return (uint32_t)(i / 100);
2135:../user/source/DLT645.c **** }
2136:../user/source/DLT645.c **** 
2137:../user/source/DLT645.c **** /********************************************************************
2138:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½áËãÈÕÕıÏòÓĞ¹¦µçÁ¿Êı¾İĞŞ¸Äº¯Êı
2139:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2140:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
2141:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2142:../user/source/DLT645.c ****  *
2143:../user/source/DLT645.c **** 		case ID_00010001:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦×ÜµçÄÜ
2144:../user/source/DLT645.c **** 		case ID_00010101:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜ
2145:../user/source/DLT645.c **** 		case ID_00010201:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ2µçÄÜ 
2146:../user/source/DLT645.c **** 		case ID_00010301:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ3µçÄÜ
2147:../user/source/DLT645.c **** 		case ID_00010401:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ4µçÄÜ
2148:../user/source/DLT645.c **** 		case ID_0001FF01:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦µçÄÜÊı¾İ¿é
2149:../user/source/DLT645.c **** 		case ID_00150001:	//ÉÏ1½áËãÈÕAÏàÕıÏòÓĞ¹¦µçÄÜ
2150:../user/source/DLT645.c **** 		case ID_00290001:	//ÉÏ1½áËãÈÕBÏàÕıÏòÓĞ¹¦µçÄÜ
2151:../user/source/DLT645.c **** 		case ID_003D0001:	//ÉÏ1½áËãÈÕCÏàÕıÏòÓĞ¹¦µçÄÜ
2152:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.9.6
2153:../user/source/DLT645.c ****  **********************************************************************/
2154:../user/source/DLT645.c **** void vAccountEnergy_Modify(uint8_t *pucBuffer)
2155:../user/source/DLT645.c **** {
2156:../user/source/DLT645.c ****     int energy;
2157:../user/source/DLT645.c ****     uint16_t i;
2158:../user/source/DLT645.c ****     if (Dayfrozen_Change_State == 0x00)
2159:../user/source/DLT645.c ****         return;
2160:../user/source/DLT645.c ****     if (pucBuffer[11] == 0x32)
2161:../user/source/DLT645.c ****     {
2162:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦×ÜµçÁ¿*/
2163:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);
2164:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2165:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2166:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦¼â·ÑÂÊµçÁ¿*/
2167:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[18], pucBuffer[19], pucBuffer[20], pucBuffer[21]);
2168:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2169:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[18], &pucBuffer[19], &pucBuffer[20], &pucBuffer[21]);
2170:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦·å·ÑÂÊµçÁ¿*/
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 72


2171:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[22], pucBuffer[23], pucBuffer[24], pucBuffer[25]);
2172:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2173:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[22], &pucBuffer[23], &pucBuffer[24], &pucBuffer[25]);
2174:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦Æ½·ÑÂÊµçÁ¿*/
2175:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[26], pucBuffer[27], pucBuffer[28], pucBuffer[29]);
2176:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2177:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[26], &pucBuffer[27], &pucBuffer[28], &pucBuffer[29]);
2178:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦¹È·ÑÂÊµçÁ¿*/
2179:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[30], pucBuffer[31], pucBuffer[32], pucBuffer[33]);
2180:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2181:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[30], &pucBuffer[31], &pucBuffer[32], &pucBuffer[33]);
2182:../user/source/DLT645.c **** 
2183:../user/source/DLT645.c ****         pucBuffer[34] = 0;
2184:../user/source/DLT645.c ****         for (i = 0; i < 34; i++)
2185:../user/source/DLT645.c ****         {
2186:../user/source/DLT645.c ****             pucBuffer[34] += pucBuffer[i];
2187:../user/source/DLT645.c ****         }
2188:../user/source/DLT645.c ****         pucBuffer[35] = 0x16;
2189:../user/source/DLT645.c ****     }
2190:../user/source/DLT645.c ****     else
2191:../user/source/DLT645.c ****     {
2192:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);
2193:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2194:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2195:../user/source/DLT645.c **** 
2196:../user/source/DLT645.c ****         pucBuffer[18] = 0;
2197:../user/source/DLT645.c ****         for (i = 0; i < 18; i++)
2198:../user/source/DLT645.c ****         {
2199:../user/source/DLT645.c ****             pucBuffer[18] += pucBuffer[i];
2200:../user/source/DLT645.c ****         }
2201:../user/source/DLT645.c ****         pucBuffer[19] = 0x16;
2202:../user/source/DLT645.c ****     }
2203:../user/source/DLT645.c **** }
2204:../user/source/DLT645.c **** 
2205:../user/source/DLT645.c **** /********************************************************************
2206:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä½ûÄÜ/Ê¹ÄÜ
2207:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2208:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
2209:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2210:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2211:../user/source/DLT645.c ****  **********************************************************************/
2212:../user/source/DLT645.c **** void vEnergy_Modify_AbleSet(uint8_t *pucBuffer)
2213:../user/source/DLT645.c **** {
2214:../user/source/DLT645.c ****     uint16_t i;
2215:../user/source/DLT645.c ****     if (pucBuffer[14] == 0xFF) //Ê¹ÄÜ
2216:../user/source/DLT645.c ****     {
2217:../user/source/DLT645.c ****         Dayfrozen_Change_State = pucBuffer[14];
2218:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZENCHANGESTATE_ADDR, Dayfrozen_Change_State);
2219:../user/source/DLT645.c ****         pucBuffer[8] = (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == Dayfrozen_Change_State
2220:../user/source/DLT645.c ****                             ? 0x94
2221:../user/source/DLT645.c ****                             : 0xD4);
2222:../user/source/DLT645.c ****     }
2223:../user/source/DLT645.c ****     else if (pucBuffer[14] == 0x00) //½û£ºÄÜ
2224:../user/source/DLT645.c ****     {
2225:../user/source/DLT645.c ****         /*Çå¿Õ´æ´¢µÄµçÁ¿Öµ*/
2226:../user/source/DLT645.c ****         FLASH_Unlock();
2227:../user/source/DLT645.c ****         FLASH_ErasePage(FLASH_ENERGY_PAGE);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 73


2228:../user/source/DLT645.c ****         FLASH_Lock();
2229:../user/source/DLT645.c ****         Dayfrozen_Change_State = pucBuffer[14];
2230:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZENCHANGESTATE_ADDR, Dayfrozen_Change_State);
2231:../user/source/DLT645.c ****         pucBuffer[8] = (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == Dayfrozen_Change_State
2232:../user/source/DLT645.c ****                             ? 0x94
2233:../user/source/DLT645.c ****                             : 0xD4);
2234:../user/source/DLT645.c ****     }
2235:../user/source/DLT645.c ****     else
2236:../user/source/DLT645.c ****     {
2237:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
2238:../user/source/DLT645.c ****     }
2239:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
2240:../user/source/DLT645.c ****     pucBuffer[10] = 0;
2241:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
2242:../user/source/DLT645.c ****     {
2243:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
2244:../user/source/DLT645.c ****     }
2245:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
2246:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2247:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
2248:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
2249:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
2250:../user/source/DLT645.c ****     {
2251:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2252:../user/source/DLT645.c ****     }
2253:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
2254:../user/source/DLT645.c **** #ifdef ENABLE_INFR
2255:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 12);
2256:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
2257:../user/source/DLT645.c ****     {
2258:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2259:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2260:../user/source/DLT645.c ****     }
2261:../user/source/DLT645.c **** #endif
2262:../user/source/DLT645.c **** }
2263:../user/source/DLT645.c **** 
2264:../user/source/DLT645.c **** /********************************************************************
2265:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä±ÈÀıÉèÖÃ
2266:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2267:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2268:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2269:../user/source/DLT645.c ****  * ĞŞ¸Ä¼ÇÂ¼£ºĞŞ¸Ä±ÈÀı¸ÄÎªÓÃÁ½¸ö×Ö½Ú±íÊ¾£¬BCDÂë£¬µÍ×Ö½ÚÔÚÇ°£¬¸ß×Ö½ÚÔÚºó
2270:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2271:../user/source/DLT645.c ****  **********************************************************************/
2272:../user/source/DLT645.c **** void vEnergy_Modify_RaitoSet(uint8_t *pucBuffer)
2273:../user/source/DLT645.c **** {
2274:../user/source/DLT645.c ****     uint8_t ratio;
2275:../user/source/DLT645.c ****     bool ratioValid;
2276:../user/source/DLT645.c ****     uint16_t i;
2277:../user/source/DLT645.c **** 
2278:../user/source/DLT645.c ****     /*ratio = BCD2DEC(pucBuffer[14]);*/
2279:../user/source/DLT645.c ****     //68 AA AA AA AA AA AA 68 91 05 33 74 34 33 20 01 00 16  120%
2280:../user/source/DLT645.c ****     ratio = BCD2DEC(pucBuffer[14]) + BCD2DEC(pucBuffer[15]) * 100;
2281:../user/source/DLT645.c ****     ratioValid = (ratio > 0 && ratio <= 255);
2282:../user/source/DLT645.c ****     if (ratioValid)
2283:../user/source/DLT645.c ****     {
2284:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR, ratio);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 74


2285:../user/source/DLT645.c ****         ucDayfrozen_Modify_Ratio = ratio;
2286:../user/source/DLT645.c ****         if (EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR) == ratio)
2287:../user/source/DLT645.c ****         {
2288:../user/source/DLT645.c ****             pucBuffer[8] = 0x94;
2289:../user/source/DLT645.c ****         }
2290:../user/source/DLT645.c ****         else
2291:../user/source/DLT645.c ****         {
2292:../user/source/DLT645.c ****             pucBuffer[8] = 0xD4;
2293:../user/source/DLT645.c ****         }
2294:../user/source/DLT645.c ****     }
2295:../user/source/DLT645.c ****     else
2296:../user/source/DLT645.c ****     {
2297:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
2298:../user/source/DLT645.c ****     }
2299:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
2300:../user/source/DLT645.c ****     pucBuffer[10] = 0;
2301:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
2302:../user/source/DLT645.c ****     {
2303:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
2304:../user/source/DLT645.c ****     }
2305:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
2306:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2307:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
2308:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
2309:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
2310:../user/source/DLT645.c ****     {
2311:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2312:../user/source/DLT645.c ****     }
2313:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
2314:../user/source/DLT645.c **** #ifdef ENABLE_INFR
2315:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 12);
2316:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
2317:../user/source/DLT645.c ****     {
2318:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2319:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2320:../user/source/DLT645.c ****     }
2321:../user/source/DLT645.c **** #endif
2322:../user/source/DLT645.c **** }
2323:../user/source/DLT645.c **** 
2324:../user/source/DLT645.c **** /********************************************************************
2325:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÕıÏòÓĞ¹¦µçÄÜÁ¿»Ö¸´³ö³§ÉèÖÃ
2326:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2327:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2328:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2329:../user/source/DLT645.c ****  * ĞŞ¸Ä¼ÇÂ¼£º³ÌĞòĞèÖ§³ÖµçÄÜÁ¿µ÷¸ß£¬ËùÒÔ¸´Î»Ê±ÈÕ¶³½áĞŞ¸Ä±ÈÀı£¬²»ÔÙ¸´Î»:2018Äê11ÔÂ5ÈÕ16:11:34
2330:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2331:../user/source/DLT645.c ****  **********************************************************************/
2332:../user/source/DLT645.c **** void vEnergy_Modify_Reset(uint8_t *pucBuffer)
2333:../user/source/DLT645.c **** {
2334:../user/source/DLT645.c ****     bool cmdValid;
2335:../user/source/DLT645.c ****     uint16_t i;
2336:../user/source/DLT645.c **** 
2337:../user/source/DLT645.c ****     cmdValid = (pucBuffer[14] == 0x00);
2338:../user/source/DLT645.c ****     if (cmdValid)
2339:../user/source/DLT645.c ****     {
2340:../user/source/DLT645.c ****         /*µçÄÜĞŞ¸ÄÊ¹ÄÜ*/
2341:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZENCHANGESTATE_ADDR, 0xff);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 75


2342:../user/source/DLT645.c ****         Dayfrozen_Change_State = 0xff;
2343:../user/source/DLT645.c ****         /*ÈÕ¶³½áĞŞ¸Ä±ÈÀıÉèÖÃÎª90*/
2344:../user/source/DLT645.c ****         /*Flash_Write_Word(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR, 90);*/
2345:../user/source/DLT645.c ****         /*ucDayfrozen_Modify_Ratio = 90;*/
2346:../user/source/DLT645.c ****         /*É¾³ı´æ´¢µÄÔ­Ê¼ºÍĞŞ¸ÄºóµÄµçÁ¿Öµ£¨²Á³ı´æ´¢Ò³£©*/
2347:../user/source/DLT645.c ****         FLASH_Unlock();
2348:../user/source/DLT645.c ****         FLASH_ErasePage(FLASH_ENERGY_PAGE);
2349:../user/source/DLT645.c ****         FLASH_Lock();
2350:../user/source/DLT645.c ****         if ( //(EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR) == 90) &&
2351:../user/source/DLT645.c ****             (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == 0xff))
2352:../user/source/DLT645.c ****         {
2353:../user/source/DLT645.c ****             pucBuffer[8] = 0x94;
2354:../user/source/DLT645.c ****         }
2355:../user/source/DLT645.c ****         else
2356:../user/source/DLT645.c ****         {
2357:../user/source/DLT645.c ****             pucBuffer[8] = 0xD4;
2358:../user/source/DLT645.c ****         }
2359:../user/source/DLT645.c ****     }
2360:../user/source/DLT645.c ****     else
2361:../user/source/DLT645.c ****     {
2362:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
2363:../user/source/DLT645.c ****     }
2364:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
2365:../user/source/DLT645.c ****     pucBuffer[10] = 0;
2366:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
2367:../user/source/DLT645.c ****     {
2368:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
2369:../user/source/DLT645.c ****     }
2370:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
2371:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2372:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
2373:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
2374:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
2375:../user/source/DLT645.c ****     {
2376:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2377:../user/source/DLT645.c ****     }
2378:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
2379:../user/source/DLT645.c **** #ifdef ENABLE_INFR
2380:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 12);
2381:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
2382:../user/source/DLT645.c ****     {
2383:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2384:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2385:../user/source/DLT645.c ****     }
2386:../user/source/DLT645.c **** #endif
2387:../user/source/DLT645.c **** }
2388:../user/source/DLT645.c **** #if 1
2389:../user/source/DLT645.c **** /********************************************************************
2390:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÕıÏòÓĞ¹¦µçÄÜÁ¿²éÑ¯ĞŞ¸Ä±ÈÀı
2391:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2392:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2393:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2394:../user/source/DLT645.c ****  * ĞŞ¸Ä¼ÇÂ¼£º
2395:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018-11-5 16:12:03
2396:../user/source/DLT645.c ****  **********************************************************************/
2397:../user/source/DLT645.c **** void vEnergy_Modify_ReadSet(uint8_t *pucbuffer)
2398:../user/source/DLT645.c **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 76


2399:../user/source/DLT645.c ****     //68 AA AA AA AA AA AA 68 91 04 33 76 34 33 71 16
2400:../user/source/DLT645.c ****     uint8_t ratio;
2401:../user/source/DLT645.c ****     uint32_t i;
2402:../user/source/DLT645.c ****     if (pucbuffer[8] != 0x91)
2403:../user/source/DLT645.c ****         return;
2404:../user/source/DLT645.c ****     //pucbuffer[8] = 0x11;
2405:../user/source/DLT645.c ****     pucbuffer[9] = 0x06;
2406:../user/source/DLT645.c ****     //ratio = EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR);
2407:../user/source/DLT645.c ****     ratio = ucDayfrozen_Modify_Ratio;
2408:../user/source/DLT645.c **** 
2409:../user/source/DLT645.c ****     pucbuffer[14] = DEC2BCD(ratio % 100); //µÍÎ»ÔÚÇ°
2410:../user/source/DLT645.c ****     pucbuffer[15] = DEC2BCD(ratio / 100); //¸ßÎ»ÔÚºó
2411:../user/source/DLT645.c ****     pucbuffer[16] = 0;
2412:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
2413:../user/source/DLT645.c ****     {
2414:../user/source/DLT645.c ****         pucbuffer[16] += pucbuffer[i];
2415:../user/source/DLT645.c ****     }
2416:../user/source/DLT645.c ****     pucbuffer[17] = 0x16;
2417:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2418:../user/source/DLT645.c ****     uc645DataDomainLength = 4;
2419:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, &ucDrv_Buf_Uart3_Snd, 18);
2420:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
2421:../user/source/DLT645.c ****     {
2422:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2423:../user/source/DLT645.c ****     }
2424:../user/source/DLT645.c **** #ifdef ENABLE_INFR
2425:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
2426:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, &ucDrv_Buf_Uart2_Snd, 18);
2427:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
2428:../user/source/DLT645.c ****     {
2429:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2430:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2431:../user/source/DLT645.c ****     }
2432:../user/source/DLT645.c **** #endif
2433:../user/source/DLT645.c **** }
2434:../user/source/DLT645.c **** #endif
2435:../user/source/DLT645.c **** /********************************************************************
2436:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º²éÑ¯ÈÕ¶³½áÕıÏòÓĞ¹¦×Üµ±Ç°ÕæÊµÖµºÍĞŞ¸ÄÖµ
2437:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2438:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2439:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2440:../user/source/DLT645.c ****  * ĞŞ¸Ä¼ÇÂ¼£º
2441:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018-11-5 16:12:03
2442:../user/source/DLT645.c ****  **********************************************************************/
2443:../user/source/DLT645.c **** void vEnergy_Modify_ReadValue(uint8_t *pucbuffer)
2444:../user/source/DLT645.c **** {
2445:../user/source/DLT645.c ****     uint8_t i;
2446:../user/source/DLT645.c ****     int dayFrozen;
2447:../user/source/DLT645.c ****     uint32_t realValue;
2448:../user/source/DLT645.c ****     uint32_t modifiedValue;
2449:../user/source/DLT645.c **** 
2450:../user/source/DLT645.c ****     pucbuffer[8] = 0x91;
2451:../user/source/DLT645.c ****     pucbuffer[9] = 0x0C;
2452:../user/source/DLT645.c **** 
2453:../user/source/DLT645.c ****     /*¶ÁÈ¡´æ´¢µÄÉÏ´ÎÕæÊµÖµºÍĞŞ¸ÄÖµ*/
2454:../user/source/DLT645.c ****     realValue = Flash_Read_Word(FLASH_REAL_1DAYFROZEN_ADDR + 4);
2455:../user/source/DLT645.c ****     modifiedValue = Flash_Read_Word(FLASH_MODIFIED_1DAYFROZEN_ADDR + 4);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 77


2456:../user/source/DLT645.c ****     /*ÖÕ¶ËµÚÒ»´ÎÊ¹ÓÃ*/
2457:../user/source/DLT645.c ****     if (realValue == 0XFFFFFFFF)
2458:../user/source/DLT645.c ****     {
2459:../user/source/DLT645.c ****         realValue = 0;
2460:../user/source/DLT645.c ****     }
2461:../user/source/DLT645.c ****     Fill_Energy(realValue, &pucbuffer[14], &pucbuffer[15], &pucbuffer[16], &pucbuffer[17]);
2462:../user/source/DLT645.c ****     if (modifiedValue == 0XFFFFFFFF)
2463:../user/source/DLT645.c ****     {
2464:../user/source/DLT645.c ****         modifiedValue = 0;
2465:../user/source/DLT645.c ****     }
2466:../user/source/DLT645.c ****     Fill_Energy(modifiedValue, &pucbuffer[18], &pucbuffer[19], &pucbuffer[20], &pucbuffer[21]);
2467:../user/source/DLT645.c ****     pucbuffer[22] = 0;
2468:../user/source/DLT645.c ****     for (i = 0; i < 22; i++)
2469:../user/source/DLT645.c ****     {
2470:../user/source/DLT645.c ****         pucbuffer[22] += pucbuffer[i];
2471:../user/source/DLT645.c ****     }
2472:../user/source/DLT645.c ****     pucbuffer[23] = 0x16;
2473:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2474:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
2475:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, &ucDrv_Buf_Uart3_Snd, 24);
2476:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
2477:../user/source/DLT645.c ****     {
2478:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2479:../user/source/DLT645.c ****     }
2480:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
2481:../user/source/DLT645.c **** #ifdef ENABLE_INFR
2482:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, &ucDrv_Buf_Uart2_Snd, 24);
2483:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
2484:../user/source/DLT645.c ****     {
2485:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2486:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2487:../user/source/DLT645.c ****     }
2488:../user/source/DLT645.c **** #endif
2489:../user/source/DLT645.c **** }
2490:../user/source/DLT645.c **** 
2491:../user/source/DLT645.c **** /********************************************************************
2492:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ºÏ¸ñÉÏÏŞĞŞ¸Äº¯Êı£¨ºìÍâ¿ÚÊÕÖ¡´¦Àí£©
2493:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2494:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2495:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2496:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2497:../user/source/DLT645.c ****  **********************************************************************/
2498:../user/source/DLT645.c **** void vVoltage_SetMaxValue(uint8_t *pucBuffer)
2499:../user/source/DLT645.c **** {
2500:../user/source/DLT645.c ****     int VMAX = 0;
2501:../user/source/DLT645.c ****     uint16_t i = 0;
2502:../user/source/DLT645.c ****     VMAX = Get_Voltage(pucBuffer[14], pucBuffer[15]);
2503:../user/source/DLT645.c ****     if (VMAX > 2200)
2504:../user/source/DLT645.c ****     {
2505:../user/source/DLT645.c ****         Voltage_MAX = VMAX;
2506:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX1_Addr, pucBuffer[14]);
2507:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX2_Addr, pucBuffer[15]);
2508:../user/source/DLT645.c ****         if (((uint8_t)Flash_Read_Word(FLASH_VMAX1_Addr) == pucBuffer[14]) &&
2509:../user/source/DLT645.c ****             ((uint8_t)Flash_Read_Word(FLASH_VMAX2_Addr) == pucBuffer[15]))
2510:../user/source/DLT645.c ****         {
2511:../user/source/DLT645.c ****             pucBuffer[8] = 0x94; //ÉèÖÃ³É¹¦±êÖ¾
2512:../user/source/DLT645.c ****         }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 78


2513:../user/source/DLT645.c ****         else
2514:../user/source/DLT645.c ****         {
2515:../user/source/DLT645.c ****             pucBuffer[8] = 0xD4;
2516:../user/source/DLT645.c ****         }
2517:../user/source/DLT645.c ****     }
2518:../user/source/DLT645.c ****     else
2519:../user/source/DLT645.c ****     {
2520:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
2521:../user/source/DLT645.c ****     }
2522:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
2523:../user/source/DLT645.c ****     pucBuffer[10] = 0;
2524:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
2525:../user/source/DLT645.c ****     {
2526:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
2527:../user/source/DLT645.c ****     }
2528:../user/source/DLT645.c ****     pucBuffer[11] = 0x16; //½áÊø·û
2529:../user/source/DLT645.c **** #ifdef ENABLE_INFR
2530:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 12);
2531:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
2532:../user/source/DLT645.c ****     {
2533:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2534:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2535:../user/source/DLT645.c ****     }
2536:../user/source/DLT645.c **** #endif
2537:../user/source/DLT645.c **** }
2538:../user/source/DLT645.c **** /********************************************************************
2539:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ºÏ¸ñÏÂÏŞĞŞ¸Äº¯Êı£¨ºìÍâ¿ÚÊÕÖ¡´¦Àí£º£©
2540:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2541:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2542:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2543:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2544:../user/source/DLT645.c ****  **********************************************************************/
2545:../user/source/DLT645.c **** void vVoltage_SetMinValue(uint8_t *pucBuffer)
2546:../user/source/DLT645.c **** {
2547:../user/source/DLT645.c ****     int VMIN = 0;
2548:../user/source/DLT645.c ****     uint16_t i = 0;
2549:../user/source/DLT645.c ****     VMIN = Get_Voltage(pucBuffer[14], pucBuffer[15]);
2550:../user/source/DLT645.c ****     if (VMIN < 2200)
2551:../user/source/DLT645.c ****     {
2552:../user/source/DLT645.c ****         Voltage_MIN = VMIN;
2553:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN1_Addr, pucBuffer[14]);
2554:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN2_Addr, pucBuffer[15]);
2555:../user/source/DLT645.c ****         if ((EEProm_Read(FLASH_VMIN1_Addr) == pucBuffer[14]) &&
2556:../user/source/DLT645.c ****             (EEProm_Read(FLASH_VMIN2_Addr) == pucBuffer[15]))
2557:../user/source/DLT645.c ****         {
2558:../user/source/DLT645.c ****             pucBuffer[8] = 0x94; //ÉèÖÃ³É¹¦±êÖ¾
2559:../user/source/DLT645.c ****         }
2560:../user/source/DLT645.c ****         else
2561:../user/source/DLT645.c ****         {
2562:../user/source/DLT645.c ****             pucBuffer[8] = 0xD4;
2563:../user/source/DLT645.c ****         }
2564:../user/source/DLT645.c ****     }
2565:../user/source/DLT645.c ****     else
2566:../user/source/DLT645.c ****     {
2567:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
2568:../user/source/DLT645.c ****     }
2569:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 79


2570:../user/source/DLT645.c ****     pucBuffer[10] = 0;
2571:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
2572:../user/source/DLT645.c ****     {
2573:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
2574:../user/source/DLT645.c ****     }
2575:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
2576:../user/source/DLT645.c **** #ifdef ENABLE_INFR
2577:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 12);
2578:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
2579:../user/source/DLT645.c ****     {
2580:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2581:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2582:../user/source/DLT645.c ****     }
2583:../user/source/DLT645.c **** #endif
2584:../user/source/DLT645.c **** }
2585:../user/source/DLT645.c **** 
2586:../user/source/DLT645.c **** /********************************************************************
2587:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ĞŞ¸ÄÉÏÏŞĞŞ¸Äº¯Êı£¨ºìÍâ¿ÚÊÕÖ¡´¦Àí£º£©
2588:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2589:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2590:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2591:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2592:../user/source/DLT645.c ****  **********************************************************************/
2593:../user/source/DLT645.c **** void vVoltage_SetMaxMaxValue(uint8_t *pucBuffer)
2594:../user/source/DLT645.c **** {
 1829              		.loc 1 2594 0
 1830              		.cfi_startproc
 1831              		@ args = 0, pretend = 0, frame = 0
 1832              		@ frame_needed = 0, uses_anonymous_args = 0
 1833              		@ link register save eliminated.
 1834              	.LVL224:
 1835 0000 7047     		bx	lr
 1836              		.cfi_endproc
 1837              	.LFE159:
 1839 0002 00BF     		.section	.text.vVoltage_SetMinMinValue,"ax",%progbits
 1840              		.align	2
 1841              		.global	vVoltage_SetMinMinValue
 1842              		.thumb
 1843              		.thumb_func
 1845              	vVoltage_SetMinMinValue:
 1846              	.LFB160:
2595:../user/source/DLT645.c **** }
2596:../user/source/DLT645.c **** /********************************************************************
2597:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ĞŞ¸ÄÏÂÏŞĞŞ¸Äº¯Êı£¨ºìÍâ¿ÚÊÕÖ¡´¦Àí£º£©
2598:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2599:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2600:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2601:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2602:../user/source/DLT645.c ****  **********************************************************************/
2603:../user/source/DLT645.c **** void vVoltage_SetMinMinValue(uint8_t *pucBuffer)
2604:../user/source/DLT645.c **** {
 1847              		.loc 1 2604 0
 1848              		.cfi_startproc
 1849              		@ args = 0, pretend = 0, frame = 0
 1850              		@ frame_needed = 0, uses_anonymous_args = 0
 1851              		@ link register save eliminated.
 1852              	.LVL225:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 80


 1853 0000 7047     		bx	lr
 1854              		.cfi_endproc
 1855              	.LFE160:
 1857 0002 00BF     		.section	.text.vLoadProfile_Voltage_Modify,"ax",%progbits
 1858              		.align	2
 1859              		.global	vLoadProfile_Voltage_Modify
 1860              		.thumb
 1861              		.thumb_func
 1863              	vLoadProfile_Voltage_Modify:
 1864              	.LFB161:
2605:../user/source/DLT645.c **** }
2606:../user/source/DLT645.c **** #if 0
2607:../user/source/DLT645.c **** /********************************************************************
2608:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º¶ÁÈ¡µçÁ¿ĞŞ¸Ä²ÎÊı£ºÊÇ·ñĞŞ¸Ä/ĞŞ¸Ä±ÈÀı
2609:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2610:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2611:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2612:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2613:../user/source/DLT645.c ****  **********************************************************************/
2614:../user/source/DLT645.c **** void vEnergy_Modify_ReadSet(uint8_t *pucBuffer)
2615:../user/source/DLT645.c **** {
2616:../user/source/DLT645.c ****     uint16_t i;
2617:../user/source/DLT645.c ****     uint8_t tRatio;
2618:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
2619:../user/source/DLT645.c ****     pucBuffer[9] = 0x06;
2620:../user/source/DLT645.c ****     pucBuffer[14] = (uint8_t)Flash_Read_Word(FLASH_DAYFROZENCHANGESTATE_ADDR);
2621:../user/source/DLT645.c ****     tRatio = (uint8_t)Flash_Read_Word(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR);
2622:../user/source/DLT645.c ****     pucBuffer[15] = DEC2BCD(tRatio);
2623:../user/source/DLT645.c ****     pucBuffer[16] = 0;
2624:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
2625:../user/source/DLT645.c ****     {
2626:../user/source/DLT645.c ****         pucBuffer[16] += pucBuffer[i];
2627:../user/source/DLT645.c ****     }
2628:../user/source/DLT645.c ****     pucBuffer[17] = 0x16;
2629:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2630:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
2631:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 18);
2632:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
2633:../user/source/DLT645.c ****     {
2634:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2635:../user/source/DLT645.c ****     }
2636:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
2637:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart2_Snd, 18);
2638:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart2_Snd))
2639:../user/source/DLT645.c ****     {
2640:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2641:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2642:../user/source/DLT645.c ****     }
2643:../user/source/DLT645.c **** }
2644:../user/source/DLT645.c **** #endif
2645:../user/source/DLT645.c **** 
2646:../user/source/DLT645.c **** /********************************************************************
2647:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º¸ººÉ¼ÇÂ¼Á¬Ğø³­¶ÁµçÑ¹Êı¾İĞŞ¸Äº¯Êı
2648:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2649:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
2650:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2651:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ7ÈÕ21:08:05
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 81


2652:../user/source/DLT645.c ****  * µÚÒ»Ö¡£º68 AA AA AA AA AA AA 68 91 0X 32 34 43 39 mm hh DD MM YY 11 11 11 11 11 11 22 22 22 22 2
2653:../user/source/DLT645.c ****  *                                 B1
2654:../user/source/DLT645.c ****  * ºóĞøÖ¡£º68 AA AA AA AA AA AA 68 92 0X 32 34 43 39 11 11 11 11 22 22 22 22 33 33 33 33 44 44 44 4
2655:../user/source/DLT645.c ****  *                                 B2 04             cs 16
2656:../user/source/DLT645.c ****  **********************************************************************/
2657:../user/source/DLT645.c **** void vLoadProfile_Voltage_Modify(uint8_t *pucbuffer)
2658:../user/source/DLT645.c **** {
 1865              		.loc 1 2658 0
 1866              		.cfi_startproc
 1867              		@ args = 0, pretend = 0, frame = 0
 1868              		@ frame_needed = 0, uses_anonymous_args = 0
 1869              	.LVL226:
 1870              		.loc 1 2658 0
 1871 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1872              	.LCFI20:
 1873              		.cfi_def_cfa_offset 40
 1874              		.cfi_offset 3, -40
 1875              		.cfi_offset 4, -36
 1876              		.cfi_offset 5, -32
 1877              		.cfi_offset 6, -28
 1878              		.cfi_offset 7, -24
 1879              		.cfi_offset 8, -20
 1880              		.cfi_offset 9, -16
 1881              		.cfi_offset 10, -12
 1882              		.cfi_offset 11, -8
 1883              		.cfi_offset 14, -4
 1884 0004 0646     		mov	r6, r0
 1885              	.LVL227:
2659:../user/source/DLT645.c ****     uint16_t n = 0; //Êı¾İ¿é¸öÊı
2660:../user/source/DLT645.c ****     uint16_t length = pucbuffer[9];
 1886              		.loc 1 2660 0
 1887 0006 90F80980 		ldrb	r8, [r0, #9]	@ zero_extendqisi2
 1888              	.LVL228:
2661:../user/source/DLT645.c ****     uint16_t ID_length = 0; //Êı¾İÓòÖĞÊı¾İ±êÊ¶³¤¶È
2662:../user/source/DLT645.c ****     uint32_t voltage = 0;
2663:../user/source/DLT645.c ****     uint16_t i = 0;
2664:../user/source/DLT645.c **** 
2665:../user/source/DLT645.c ****     if (pucbuffer[8] == 0x91 || pucbuffer[8] == 0xB1) //ÎŞºóĞøÖ¡£¬»ò·ÖÖ¡µÄµÚÒ»Ö¡
 1889              		.loc 1 2665 0
 1890 000a 027A     		ldrb	r2, [r0, #8]	@ zero_extendqisi2
 1891 000c 912A     		cmp	r2, #145
 1892 000e 03D0     		beq	.L122
 1893              		.loc 1 2665 0 is_stmt 0 discriminator 1
 1894 0010 B12A     		cmp	r2, #177
 1895 0012 03D0     		beq	.L123
2661:../user/source/DLT645.c ****     uint16_t ID_length = 0; //Êı¾İÓòÖĞÊı¾İ±êÊ¶³¤¶È
 1896              		.loc 1 2661 0 is_stmt 1
 1897 0014 0023     		movs	r3, #0
 1898 0016 02E0     		b	.L116
 1899              	.L122:
2666:../user/source/DLT645.c ****     {
2667:../user/source/DLT645.c ****         ID_length = 9; //Êı¾İ±êÊ¶*4 + Ê±±ê*5
 1900              		.loc 1 2667 0
 1901 0018 0923     		movs	r3, #9
 1902 001a 00E0     		b	.L116
 1903              	.L123:
 1904 001c 0923     		movs	r3, #9
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 82


 1905              	.L116:
 1906              	.LVL229:
2668:../user/source/DLT645.c ****     }
2669:../user/source/DLT645.c ****     if (pucbuffer[8] == 0x92 || pucbuffer[8] == 0xB2)
 1907              		.loc 1 2669 0
 1908 001e 922A     		cmp	r2, #146
 1909 0020 02D0     		beq	.L124
 1910              		.loc 1 2669 0 is_stmt 0 discriminator 1
 1911 0022 B22A     		cmp	r2, #178
 1912 0024 03D1     		bne	.L117
 1913 0026 01E0     		b	.L125
 1914              	.L124:
2670:../user/source/DLT645.c ****     {
2671:../user/source/DLT645.c ****         ID_length = 4; //Êı¾İ±êÊ¶*4 £¬ºöÂÔºóÃæµÄSEQ*1£¬Ô­ÒòÎªÕû³ı2ºó½á¹ûÒ»Ñù
 1915              		.loc 1 2671 0 is_stmt 1
 1916 0028 0423     		movs	r3, #4
 1917              	.LVL230:
 1918 002a 00E0     		b	.L117
 1919              	.LVL231:
 1920              	.L125:
 1921 002c 0423     		movs	r3, #4
 1922              	.LVL232:
 1923              	.L117:
2672:../user/source/DLT645.c ****     }
2673:../user/source/DLT645.c ****     n = (length - ID_length) / 2; //µçÑ¹Êı¾İµÄ¸öÊı£¬·ÖÏàºÍ¿éÊı¾İ¶¼ÊÊÓÃ
 1924              		.loc 1 2673 0
 1925 002e 4746     		mov	r7, r8
 1926 0030 9946     		mov	r9, r3
 1927 0032 C3EB0803 		rsb	r3, r3, r8
 1928              	.LVL233:
 1929 0036 03EBD373 		add	r3, r3, r3, lsr #31
 1930 003a C3F34F03 		ubfx	r3, r3, #1, #16
 1931              	.LVL234:
2674:../user/source/DLT645.c ****     while (n--)
 1932              		.loc 1 2674 0
 1933 003e 15E0     		b	.L118
 1934              	.LVL235:
 1935              	.L119:
2675:../user/source/DLT645.c ****     {
2676:../user/source/DLT645.c ****         voltage = Get_Voltage(pucbuffer[10 + ID_length + 2 * n], pucbuffer[11 + ID_length + 2 * n])
 1936              		.loc 1 2676 0
 1937 0040 09F10A04 		add	r4, r9, #10
 1938 0044 4FEA450A 		lsl	r10, r5, #1
 1939 0048 5444     		add	r4, r4, r10
 1940 004a 09F10B03 		add	r3, r9, #11
 1941 004e 9A44     		add	r10, r10, r3
2677:../user/source/DLT645.c ****         voltage = Voltage_Modifier_Method(voltage);
2678:../user/source/DLT645.c ****         pucbuffer[10 + ID_length + 2 * n] = GetLowByte(A_Voltage);
 1942              		.loc 1 2678 0
 1943 0050 DFF84CB0 		ldr	fp, .L127
 1944 0054 DBF80000 		ldr	r0, [fp]
 1945 0058 FFF7FEFF 		bl	GetLowByte
 1946              	.LVL236:
 1947 005c 3055     		strb	r0, [r6, r4]
2679:../user/source/DLT645.c ****         pucbuffer[11 + ID_length + 2 * n] = GetHighByte(A_Voltage);
 1948              		.loc 1 2679 0
 1949 005e DBF80000 		ldr	r0, [fp]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 83


 1950 0062 FFF7FEFF 		bl	GetHighByte
 1951              	.LVL237:
 1952 0066 06F80A00 		strb	r0, [r6, r10]
2674:../user/source/DLT645.c ****     {
 1953              		.loc 1 2674 0
 1954 006a 2B46     		mov	r3, r5
 1955              	.LVL238:
 1956              	.L118:
 1957 006c 5D1E     		subs	r5, r3, #1
 1958 006e ADB2     		uxth	r5, r5
 1959              	.LVL239:
 1960 0070 002B     		cmp	r3, #0
 1961 0072 E5D1     		bne	.L119
2680:../user/source/DLT645.c ****     }
2681:../user/source/DLT645.c ****     pucbuffer[length + 10] = 0;
 1962              		.loc 1 2681 0
 1963 0074 08F10A02 		add	r2, r8, #10
 1964 0078 B118     		adds	r1, r6, r2
 1965 007a B354     		strb	r3, [r6, r2]
2682:../user/source/DLT645.c ****     for (i = 0; i < (length + 10); i++)
 1966              		.loc 1 2682 0
 1967 007c 05E0     		b	.L120
 1968              	.LVL240:
 1969              	.L121:
2683:../user/source/DLT645.c ****     {
2684:../user/source/DLT645.c ****         pucbuffer[length + 10] += pucbuffer[i];
 1970              		.loc 1 2684 0 discriminator 3
 1971 007e F05C     		ldrb	r0, [r6, r3]	@ zero_extendqisi2
 1972 0080 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1973 0082 0244     		add	r2, r2, r0
 1974 0084 0A70     		strb	r2, [r1]
2682:../user/source/DLT645.c ****     for (i = 0; i < (length + 10); i++)
 1975              		.loc 1 2682 0 discriminator 3
 1976 0086 0133     		adds	r3, r3, #1
 1977              	.LVL241:
 1978 0088 9BB2     		uxth	r3, r3
 1979              	.LVL242:
 1980              	.L120:
2682:../user/source/DLT645.c ****     for (i = 0; i < (length + 10); i++)
 1981              		.loc 1 2682 0 is_stmt 0 discriminator 1
 1982 008a 07F10A02 		add	r2, r7, #10
 1983 008e 9342     		cmp	r3, r2
 1984 0090 F5DB     		blt	.L121
2685:../user/source/DLT645.c ****     }
2686:../user/source/DLT645.c ****     pucbuffer[length + 11] = 16;
 1985              		.loc 1 2686 0 is_stmt 1
 1986 0092 08F10B08 		add	r8, r8, #11
 1987              	.LVL243:
 1988 0096 1023     		movs	r3, #16
 1989              	.LVL244:
 1990 0098 06F80830 		strb	r3, [r6, r8]
 1991 009c BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1992              	.LVL245:
 1993              	.L128:
 1994              		.align	2
 1995              	.L127:
 1996 00a0 00000000 		.word	.LANCHOR4
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 84


 1997              		.cfi_endproc
 1998              	.LFE161:
 2000              		.section	.text.vLoadProfile_Current_Modify,"ax",%progbits
 2001              		.align	2
 2002              		.global	vLoadProfile_Current_Modify
 2003              		.thumb
 2004              		.thumb_func
 2006              	vLoadProfile_Current_Modify:
 2007              	.LFB162:
2687:../user/source/DLT645.c **** }
2688:../user/source/DLT645.c **** 
2689:../user/source/DLT645.c **** /********************************************************************
2690:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º¸ººÉ¼ÇÂ¼Á¬Ğø³­¶ÁµçÁ÷Êı¾İĞŞ¸Äº¯Êı
2691:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2692:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2693:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2694:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ7ÈÕ21:08:05
2695:../user/source/DLT645.c ****  **********************************************************************/
2696:../user/source/DLT645.c **** void vLoadProfile_Current_Modify(uint8_t *pucbuffer)
2697:../user/source/DLT645.c **** {
 2008              		.loc 1 2697 0
 2009              		.cfi_startproc
 2010              		@ args = 0, pretend = 0, frame = 0
 2011              		@ frame_needed = 0, uses_anonymous_args = 0
 2012              		@ link register save eliminated.
 2013              	.LVL246:
 2014 0000 7047     		bx	lr
 2015              		.cfi_endproc
 2016              	.LFE162:
 2018 0002 00BF     		.section	.text.Get_VChange_State,"ax",%progbits
 2019              		.align	2
 2020              		.global	Get_VChange_State
 2021              		.thumb
 2022              		.thumb_func
 2024              	Get_VChange_State:
 2025              	.LFB115:
 376:../user/source/DLT645.c ****     uint8_t i;
 2026              		.loc 1 376 0
 2027              		.cfi_startproc
 2028              		@ args = 0, pretend = 0, frame = 0
 2029              		@ frame_needed = 0, uses_anonymous_args = 0
 2030              	.LVL247:
 376:../user/source/DLT645.c ****     uint8_t i;
 2031              		.loc 1 376 0
 2032 0000 38B5     		push	{r3, r4, r5, lr}
 2033              	.LCFI21:
 2034              		.cfi_def_cfa_offset 16
 2035              		.cfi_offset 3, -16
 2036              		.cfi_offset 4, -12
 2037              		.cfi_offset 5, -8
 2038              		.cfi_offset 14, -4
 2039 0002 0446     		mov	r4, r0
 378:../user/source/DLT645.c ****     {
 2040              		.loc 1 378 0
 2041 0004 837B     		ldrb	r3, [r0, #14]	@ zero_extendqisi2
 2042 0006 342B     		cmp	r3, #52
 2043 0008 02D1     		bne	.L131
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 85


 380:../user/source/DLT645.c ****     }
 2044              		.loc 1 380 0
 2045 000a 0021     		movs	r1, #0
 2046 000c 184A     		ldr	r2, .L139
 2047 000e 1170     		strb	r1, [r2]
 2048              	.L131:
 382:../user/source/DLT645.c ****     {
 2049              		.loc 1 382 0
 2050 0010 332B     		cmp	r3, #51
 2051 0012 02D1     		bne	.L132
 384:../user/source/DLT645.c ****     }
 2052              		.loc 1 384 0
 2053 0014 FF22     		movs	r2, #255
 2054 0016 164B     		ldr	r3, .L139
 2055 0018 1A70     		strb	r2, [r3]
 2056              	.L132:
 386:../user/source/DLT645.c ****     {
 2057              		.loc 1 386 0
 2058 001a 154B     		ldr	r3, .L139
 2059 001c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2060 001e 1548     		ldr	r0, .L139+4
 2061              	.LVL248:
 2062 0020 FFF7FEFF 		bl	Flash_Write_Word
 2063              	.LVL249:
 2064 0024 10B9     		cbnz	r0, .L133
 388:../user/source/DLT645.c ****     }
 2065              		.loc 1 388 0
 2066 0026 D423     		movs	r3, #212
 2067 0028 2372     		strb	r3, [r4, #8]
 2068 002a 01E0     		b	.L134
 2069              	.L133:
 391:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
 2070              		.loc 1 391 0
 2071 002c 9423     		movs	r3, #148
 2072 002e 2372     		strb	r3, [r4, #8]
 2073              	.L134:
 392:../user/source/DLT645.c ****     pucBuffer[10] = 0x00;
 2074              		.loc 1 392 0
 2075 0030 0023     		movs	r3, #0
 2076 0032 6372     		strb	r3, [r4, #9]
 393:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 2077              		.loc 1 393 0
 2078 0034 A372     		strb	r3, [r4, #10]
 2079              	.LVL250:
 394:../user/source/DLT645.c ****     {
 2080              		.loc 1 394 0
 2081 0036 05E0     		b	.L135
 2082              	.LVL251:
 2083              	.L136:
 396:../user/source/DLT645.c ****     }
 2084              		.loc 1 396 0 discriminator 3
 2085 0038 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2086 003a A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 2087 003c 0A44     		add	r2, r2, r1
 2088 003e A272     		strb	r2, [r4, #10]
 394:../user/source/DLT645.c ****     {
 2089              		.loc 1 394 0 discriminator 3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 86


 2090 0040 0133     		adds	r3, r3, #1
 2091              	.LVL252:
 2092 0042 DBB2     		uxtb	r3, r3
 2093              	.LVL253:
 2094              	.L135:
 394:../user/source/DLT645.c ****     {
 2095              		.loc 1 394 0 is_stmt 0 discriminator 1
 2096 0044 092B     		cmp	r3, #9
 2097 0046 F7D9     		bls	.L136
 398:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2098              		.loc 1 398 0 is_stmt 1
 2099 0048 1623     		movs	r3, #22
 2100              	.LVL254:
 2101 004a E372     		strb	r3, [r4, #11]
 400:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
 2102              		.loc 1 400 0
 2103 004c 0022     		movs	r2, #0
 2104 004e 0A4B     		ldr	r3, .L139+8
 2105 0050 1A70     		strb	r2, [r3]
 401:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 2106              		.loc 1 401 0
 2107 0052 0A4D     		ldr	r5, .L139+12
 2108 0054 0C22     		movs	r2, #12
 2109 0056 2946     		mov	r1, r5
 2110 0058 2046     		mov	r0, r4
 2111 005a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2112              	.LVL255:
 402:../user/source/DLT645.c ****     {
 2113              		.loc 1 402 0
 2114 005e 2846     		mov	r0, r5
 2115 0060 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2116              	.LVL256:
 2117 0064 10B9     		cbnz	r0, .L130
 404:../user/source/DLT645.c ****     }
 2118              		.loc 1 404 0
 2119 0066 0648     		ldr	r0, .L139+16
 2120 0068 FFF7FEFF 		bl	Uart_DataPut
 2121              	.LVL257:
 2122              	.L130:
 2123 006c 38BD     		pop	{r3, r4, r5, pc}
 2124              	.LVL258:
 2125              	.L140:
 2126 006e 00BF     		.align	2
 2127              	.L139:
 2128 0070 00000000 		.word	.LANCHOR5
 2129 0074 141F0308 		.word	134422292
 2130 0078 00000000 		.word	.LANCHOR0
 2131 007c 00000000 		.word	ucDrv_Buf_Uart3_Snd
 2132 0080 00480040 		.word	1073760256
 2133              		.cfi_endproc
 2134              	.LFE115:
 2136              		.section	.text.Set_Voltage_Limit,"ax",%progbits
 2137              		.align	2
 2138              		.global	Set_Voltage_Limit
 2139              		.thumb
 2140              		.thumb_func
 2142              	Set_Voltage_Limit:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 87


 2143              	.LFB116:
 424:../user/source/DLT645.c ****     int VMAX = 0;
 2144              		.loc 1 424 0
 2145              		.cfi_startproc
 2146              		@ args = 0, pretend = 0, frame = 0
 2147              		@ frame_needed = 0, uses_anonymous_args = 0
 2148              	.LVL259:
 2149 0000 70B5     		push	{r4, r5, r6, lr}
 2150              	.LCFI22:
 2151              		.cfi_def_cfa_offset 16
 2152              		.cfi_offset 4, -16
 2153              		.cfi_offset 5, -12
 2154              		.cfi_offset 6, -8
 2155              		.cfi_offset 14, -4
 2156 0002 0446     		mov	r4, r0
 2157              	.LVL260:
 428:../user/source/DLT645.c ****     VMIN = Get_Voltage(pucBuffer[16], pucBuffer[17]);
 2158              		.loc 1 428 0
 2159 0004 867B     		ldrb	r6, [r0, #14]	@ zero_extendqisi2
 2160 0006 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 2161 0008 3046     		mov	r0, r6
 2162              	.LVL261:
 2163 000a FFF7FEFF 		bl	Get_Voltage
 2164              	.LVL262:
 2165 000e 0546     		mov	r5, r0
 2166              	.LVL263:
 429:../user/source/DLT645.c ****     if ((VMAX > VMIN) && (VMAX < Voltage_MAX_MAX) //µçÑ¹ÏŞÖµÉèÖÃÌõ¼ş£¬ÉÏÏŞ´óÓÚÏÂÏŞÇÒĞ¡ÓÚÉÏÉÏÏŞ
 2167              		.loc 1 429 0
 2168 0010 617C     		ldrb	r1, [r4, #17]	@ zero_extendqisi2
 2169 0012 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 2170              	.LVL264:
 2171 0014 FFF7FEFF 		bl	Get_Voltage
 2172              	.LVL265:
 430:../user/source/DLT645.c ****         && (VMIN > Voltage_MIN_MIN))              //µçÑ¹ÏÂÏŞ´óÓÚÏÂÏÂÏŞ
 2173              		.loc 1 430 0
 2174 0018 8542     		cmp	r5, r0
 2175 001a 1CDD     		ble	.L142
 430:../user/source/DLT645.c ****         && (VMIN > Voltage_MIN_MIN))              //µçÑ¹ÏÂÏŞ´óÓÚÏÂÏÂÏŞ
 2176              		.loc 1 430 0 is_stmt 0 discriminator 1
 2177 001c B5F52F6F 		cmp	r5, #2800
 2178 0020 19DA     		bge	.L142
 431:../user/source/DLT645.c ****     {
 2179              		.loc 1 431 0 is_stmt 1
 2180 0022 B0F5966F 		cmp	r0, #1200
 2181 0026 16DD     		ble	.L142
 433:../user/source/DLT645.c ****         Voltage_MIN = VMIN;
 2182              		.loc 1 433 0
 2183 0028 1B4B     		ldr	r3, .L148
 2184 002a 1D60     		str	r5, [r3]
 434:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX1_Addr, pucBuffer[14]);
 2185              		.loc 1 434 0
 2186 002c 1B4B     		ldr	r3, .L148+4
 2187 002e 1860     		str	r0, [r3]
 435:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX2_Addr, pucBuffer[15]);
 2188              		.loc 1 435 0
 2189 0030 3146     		mov	r1, r6
 2190 0032 1B48     		ldr	r0, .L148+8
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 88


 2191              	.LVL266:
 2192 0034 FFF7FEFF 		bl	Flash_Write_Word
 2193              	.LVL267:
 436:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN1_Addr, pucBuffer[16]);
 2194              		.loc 1 436 0
 2195 0038 E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
 2196 003a 1A48     		ldr	r0, .L148+12
 2197 003c FFF7FEFF 		bl	Flash_Write_Word
 2198              	.LVL268:
 437:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN2_Addr, pucBuffer[17]);
 2199              		.loc 1 437 0
 2200 0040 217C     		ldrb	r1, [r4, #16]	@ zero_extendqisi2
 2201 0042 1948     		ldr	r0, .L148+16
 2202 0044 FFF7FEFF 		bl	Flash_Write_Word
 2203              	.LVL269:
 438:../user/source/DLT645.c ****         pucBuffer[8] = 0x94; //ÉèÖÃ³É¹¦±êÖ¾
 2204              		.loc 1 438 0
 2205 0048 617C     		ldrb	r1, [r4, #17]	@ zero_extendqisi2
 2206 004a 1848     		ldr	r0, .L148+20
 2207 004c FFF7FEFF 		bl	Flash_Write_Word
 2208              	.LVL270:
 439:../user/source/DLT645.c ****     }
 2209              		.loc 1 439 0
 2210 0050 9423     		movs	r3, #148
 2211 0052 2372     		strb	r3, [r4, #8]
 2212 0054 01E0     		b	.L143
 2213              	.LVL271:
 2214              	.L142:
 443:../user/source/DLT645.c ****     }
 2215              		.loc 1 443 0
 2216 0056 D423     		movs	r3, #212
 2217 0058 2372     		strb	r3, [r4, #8]
 2218              	.LVL272:
 2219              	.L143:
 445:../user/source/DLT645.c ****     pucBuffer[10] = 0x00; //ÇóÈ¡Ğ£ÑéºÍ
 2220              		.loc 1 445 0
 2221 005a 0023     		movs	r3, #0
 2222 005c 6372     		strb	r3, [r4, #9]
 446:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 2223              		.loc 1 446 0
 2224 005e A372     		strb	r3, [r4, #10]
 447:../user/source/DLT645.c ****     {
 2225              		.loc 1 447 0
 2226 0060 04E0     		b	.L144
 2227              	.LVL273:
 2228              	.L145:
 449:../user/source/DLT645.c ****     }
 2229              		.loc 1 449 0 discriminator 3
 2230 0062 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2231 0064 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 2232 0066 0A44     		add	r2, r2, r1
 2233 0068 A272     		strb	r2, [r4, #10]
 447:../user/source/DLT645.c ****     {
 2234              		.loc 1 447 0 discriminator 3
 2235 006a 0133     		adds	r3, r3, #1
 2236              	.LVL274:
 2237              	.L144:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 89


 447:../user/source/DLT645.c ****     {
 2238              		.loc 1 447 0 is_stmt 0 discriminator 1
 2239 006c 092B     		cmp	r3, #9
 2240 006e F8DD     		ble	.L145
 451:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2241              		.loc 1 451 0 is_stmt 1
 2242 0070 1623     		movs	r3, #22
 2243              	.LVL275:
 2244 0072 E372     		strb	r3, [r4, #11]
 453:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
 2245              		.loc 1 453 0
 2246 0074 0022     		movs	r2, #0
 2247 0076 0E4B     		ldr	r3, .L148+24
 2248 0078 1A70     		strb	r2, [r3]
 454:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 2249              		.loc 1 454 0
 2250 007a 0E4D     		ldr	r5, .L148+28
 2251              	.LVL276:
 2252 007c 0C22     		movs	r2, #12
 2253 007e 2946     		mov	r1, r5
 2254 0080 2046     		mov	r0, r4
 2255 0082 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2256              	.LVL277:
 455:../user/source/DLT645.c ****     {
 2257              		.loc 1 455 0
 2258 0086 2846     		mov	r0, r5
 2259 0088 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2260              	.LVL278:
 2261 008c 10B9     		cbnz	r0, .L141
 457:../user/source/DLT645.c ****     }
 2262              		.loc 1 457 0
 2263 008e 0A48     		ldr	r0, .L148+32
 2264 0090 FFF7FEFF 		bl	Uart_DataPut
 2265              	.LVL279:
 2266              	.L141:
 2267 0094 70BD     		pop	{r4, r5, r6, pc}
 2268              	.LVL280:
 2269              	.L149:
 2270 0096 00BF     		.align	2
 2271              	.L148:
 2272 0098 00000000 		.word	Voltage_MAX
 2273 009c 00000000 		.word	Voltage_MIN
 2274 00a0 001F0308 		.word	134422272
 2275 00a4 041F0308 		.word	134422276
 2276 00a8 081F0308 		.word	134422280
 2277 00ac 0C1F0308 		.word	134422284
 2278 00b0 00000000 		.word	.LANCHOR0
 2279 00b4 00000000 		.word	ucDrv_Buf_Uart3_Snd
 2280 00b8 00480040 		.word	1073760256
 2281              		.cfi_endproc
 2282              	.LFE116:
 2284              		.section	.text.Query_Voltage_Limit,"ax",%progbits
 2285              		.align	2
 2286              		.global	Query_Voltage_Limit
 2287              		.thumb
 2288              		.thumb_func
 2290              	Query_Voltage_Limit:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 90


 2291              	.LFB117:
 478:../user/source/DLT645.c ****     int i = 0;
 2292              		.loc 1 478 0
 2293              		.cfi_startproc
 2294              		@ args = 0, pretend = 0, frame = 0
 2295              		@ frame_needed = 0, uses_anonymous_args = 0
 2296              	.LVL281:
 2297 0000 38B5     		push	{r3, r4, r5, lr}
 2298              	.LCFI23:
 2299              		.cfi_def_cfa_offset 16
 2300              		.cfi_offset 3, -16
 2301              		.cfi_offset 4, -12
 2302              		.cfi_offset 5, -8
 2303              		.cfi_offset 14, -4
 2304 0002 0446     		mov	r4, r0
 2305              	.LVL282:
 480:../user/source/DLT645.c ****     pucBuffer[9] = 0x0C;
 2306              		.loc 1 480 0
 2307 0004 9123     		movs	r3, #145
 2308 0006 0372     		strb	r3, [r0, #8]
 481:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(Voltage_MAX_MAX);
 2309              		.loc 1 481 0
 2310 0008 0C23     		movs	r3, #12
 2311 000a 4372     		strb	r3, [r0, #9]
 482:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(Voltage_MAX_MAX); //µçÑ¹ÉÏÉÏÏŞ
 2312              		.loc 1 482 0
 2313 000c 4FF42F60 		mov	r0, #2800
 2314              	.LVL283:
 2315 0010 FFF7FEFF 		bl	GetLowByte
 2316              	.LVL284:
 2317 0014 A073     		strb	r0, [r4, #14]
 483:../user/source/DLT645.c ****     pucBuffer[16] = GetLowByte(Voltage_MIN_MIN);
 2318              		.loc 1 483 0
 2319 0016 4FF42F60 		mov	r0, #2800
 2320 001a FFF7FEFF 		bl	GetHighByte
 2321              	.LVL285:
 2322 001e E073     		strb	r0, [r4, #15]
 484:../user/source/DLT645.c ****     pucBuffer[17] = GetHighByte(Voltage_MIN_MIN); //µçÑ¹ÏÂÏÂÏŞ
 2323              		.loc 1 484 0
 2324 0020 4FF49660 		mov	r0, #1200
 2325 0024 FFF7FEFF 		bl	GetLowByte
 2326              	.LVL286:
 2327 0028 2074     		strb	r0, [r4, #16]
 485:../user/source/DLT645.c ****     pucBuffer[18] = GetLowByte(Voltage_MAX);
 2328              		.loc 1 485 0
 2329 002a 4FF49660 		mov	r0, #1200
 2330 002e FFF7FEFF 		bl	GetHighByte
 2331              	.LVL287:
 2332 0032 6074     		strb	r0, [r4, #17]
 486:../user/source/DLT645.c ****     pucBuffer[19] = GetHighByte(Voltage_MAX); //µçÑ¹ÉÏÏŞÖµ
 2333              		.loc 1 486 0
 2334 0034 174B     		ldr	r3, .L155
 2335 0036 1D68     		ldr	r5, [r3]
 2336 0038 2846     		mov	r0, r5
 2337 003a FFF7FEFF 		bl	GetLowByte
 2338              	.LVL288:
 2339 003e A074     		strb	r0, [r4, #18]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 91


 487:../user/source/DLT645.c ****     pucBuffer[20] = GetLowByte(Voltage_MIN);
 2340              		.loc 1 487 0
 2341 0040 2846     		mov	r0, r5
 2342 0042 FFF7FEFF 		bl	GetHighByte
 2343              	.LVL289:
 2344 0046 E074     		strb	r0, [r4, #19]
 488:../user/source/DLT645.c ****     pucBuffer[21] = GetHighByte(Voltage_MIN); //µçÑ¹ÏÂÏŞÖµ
 2345              		.loc 1 488 0
 2346 0048 134B     		ldr	r3, .L155+4
 2347 004a 1D68     		ldr	r5, [r3]
 2348 004c 2846     		mov	r0, r5
 2349 004e FFF7FEFF 		bl	GetLowByte
 2350              	.LVL290:
 2351 0052 2075     		strb	r0, [r4, #20]
 489:../user/source/DLT645.c ****     pucBuffer[22] = 0x00;                     //ÇóÈ¡Ğ£ÑéºÍ
 2352              		.loc 1 489 0
 2353 0054 2846     		mov	r0, r5
 2354 0056 FFF7FEFF 		bl	GetHighByte
 2355              	.LVL291:
 2356 005a 6075     		strb	r0, [r4, #21]
 490:../user/source/DLT645.c ****     for (i = 0; i < 24 - 2; i++)              //±¨ÎÄ³¤¶È24
 2357              		.loc 1 490 0
 2358 005c 0023     		movs	r3, #0
 2359 005e A375     		strb	r3, [r4, #22]
 491:../user/source/DLT645.c ****     {
 2360              		.loc 1 491 0
 2361 0060 04E0     		b	.L151
 2362              	.LVL292:
 2363              	.L152:
 493:../user/source/DLT645.c ****     }
 2364              		.loc 1 493 0 discriminator 3
 2365 0062 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2366 0064 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
 2367 0066 0A44     		add	r2, r2, r1
 2368 0068 A275     		strb	r2, [r4, #22]
 491:../user/source/DLT645.c ****     {
 2369              		.loc 1 491 0 discriminator 3
 2370 006a 0133     		adds	r3, r3, #1
 2371              	.LVL293:
 2372              	.L151:
 491:../user/source/DLT645.c ****     {
 2373              		.loc 1 491 0 is_stmt 0 discriminator 1
 2374 006c 152B     		cmp	r3, #21
 2375 006e F8DD     		ble	.L152
 495:../user/source/DLT645.c ****     uc645DataDomainLength = 12;
 2376              		.loc 1 495 0 is_stmt 1
 2377 0070 1623     		movs	r3, #22
 2378              	.LVL294:
 2379 0072 E375     		strb	r3, [r4, #23]
 496:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2380              		.loc 1 496 0
 2381 0074 0C22     		movs	r2, #12
 2382 0076 094B     		ldr	r3, .L155+8
 2383 0078 1A70     		strb	r2, [r3]
 498:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 2384              		.loc 1 498 0
 2385 007a 094D     		ldr	r5, .L155+12
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 92


 2386 007c 2946     		mov	r1, r5
 2387 007e 2046     		mov	r0, r4
 2388 0080 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2389              	.LVL295:
 499:../user/source/DLT645.c ****     {
 2390              		.loc 1 499 0
 2391 0084 2846     		mov	r0, r5
 2392 0086 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2393              	.LVL296:
 2394 008a 10B9     		cbnz	r0, .L150
 501:../user/source/DLT645.c ****     }
 2395              		.loc 1 501 0
 2396 008c 0548     		ldr	r0, .L155+16
 2397 008e FFF7FEFF 		bl	Uart_DataPut
 2398              	.LVL297:
 2399              	.L150:
 2400 0092 38BD     		pop	{r3, r4, r5, pc}
 2401              	.LVL298:
 2402              	.L156:
 2403              		.align	2
 2404              	.L155:
 2405 0094 00000000 		.word	Voltage_MAX
 2406 0098 00000000 		.word	Voltage_MIN
 2407 009c 00000000 		.word	.LANCHOR0
 2408 00a0 00000000 		.word	ucDrv_Buf_Uart3_Snd
 2409 00a4 00480040 		.word	1073760256
 2410              		.cfi_endproc
 2411              	.LFE117:
 2413              		.section	.text.Default_Reset,"ax",%progbits
 2414              		.align	2
 2415              		.global	Default_Reset
 2416              		.thumb
 2417              		.thumb_func
 2419              	Default_Reset:
 2420              	.LFB118:
 522:../user/source/DLT645.c ****     int i = 0;
 2421              		.loc 1 522 0
 2422              		.cfi_startproc
 2423              		@ args = 0, pretend = 0, frame = 0
 2424              		@ frame_needed = 0, uses_anonymous_args = 0
 2425              	.LVL299:
 2426 0000 70B5     		push	{r4, r5, r6, lr}
 2427              	.LCFI24:
 2428              		.cfi_def_cfa_offset 16
 2429              		.cfi_offset 4, -16
 2430              		.cfi_offset 5, -12
 2431              		.cfi_offset 6, -8
 2432              		.cfi_offset 14, -4
 2433 0002 0446     		mov	r4, r0
 2434              	.LVL300:
 524:../user/source/DLT645.c ****     B_Voltage = WORK_VOLTAGE;                                        //BÏàµçÑ¹Öµ¸ÄÎª±ê×¼Öµ
 2435              		.loc 1 524 0
 2436 0004 40F69803 		movw	r3, #2200
 2437 0008 274A     		ldr	r2, .L162
 2438 000a 1360     		str	r3, [r2]
 525:../user/source/DLT645.c ****     C_Voltage = WORK_VOLTAGE;                                        //CÏàµçÑ¹Öµ¸ÄÎª±ê×¼Öµ
 2439              		.loc 1 525 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 93


 2440 000c 274A     		ldr	r2, .L162+4
 2441 000e 1360     		str	r3, [r2]
 526:../user/source/DLT645.c ****     Voltage_Change_State = Voltage_Change;                           //µçÑ¹ĞŞ¸Ä×´Ì¬¸ÄÎª¡°ÓĞĞ§¡±
 2442              		.loc 1 526 0
 2443 0010 274A     		ldr	r2, .L162+8
 2444 0012 1360     		str	r3, [r2]
 527:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VChangeState_Addr, Voltage_Change_State); //´æ´¢µ½FLASHÖĞ
 2445              		.loc 1 527 0
 2446 0014 FF21     		movs	r1, #255
 2447 0016 274B     		ldr	r3, .L162+12
 2448 0018 1970     		strb	r1, [r3]
 528:../user/source/DLT645.c ****     Voltage_MAX = Voltage_MAX_Default;                               //µçÑ¹ºÏ¸ñÏŞÖµ»Ö¸´Ä¬ÈÏ²¢ÇÒ´æµµ
 2449              		.loc 1 528 0
 2450 001a 2748     		ldr	r0, .L162+16
 2451              	.LVL301:
 2452 001c FFF7FEFF 		bl	Flash_Write_Word
 2453              	.LVL302:
 529:../user/source/DLT645.c ****     Voltage_MIN = Voltage_MIN_Default;
 2454              		.loc 1 529 0
 2455 0020 264E     		ldr	r6, .L162+20
 2456 0022 40F62E10 		movw	r0, #2350
 2457 0026 3060     		str	r0, [r6]
 530:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMAX1_Addr, GetLowByte(Voltage_MAX));
 2458              		.loc 1 530 0
 2459 0028 254D     		ldr	r5, .L162+24
 2460 002a 40F2BC73 		movw	r3, #1980
 2461 002e 2B60     		str	r3, [r5]
 531:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMAX2_Addr, GetHighByte(Voltage_MAX));
 2462              		.loc 1 531 0
 2463 0030 FFF7FEFF 		bl	GetLowByte
 2464              	.LVL303:
 2465 0034 0146     		mov	r1, r0
 2466 0036 2348     		ldr	r0, .L162+28
 2467 0038 FFF7FEFF 		bl	Flash_Write_Word
 2468              	.LVL304:
 532:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMIN1_Addr, GetLowByte(Voltage_MIN));
 2469              		.loc 1 532 0
 2470 003c 3068     		ldr	r0, [r6]
 2471 003e FFF7FEFF 		bl	GetHighByte
 2472              	.LVL305:
 2473 0042 0146     		mov	r1, r0
 2474 0044 2048     		ldr	r0, .L162+32
 2475 0046 FFF7FEFF 		bl	Flash_Write_Word
 2476              	.LVL306:
 533:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMIN2_Addr, GetHighByte(Voltage_MIN));
 2477              		.loc 1 533 0
 2478 004a 2868     		ldr	r0, [r5]
 2479 004c FFF7FEFF 		bl	GetLowByte
 2480              	.LVL307:
 2481 0050 0146     		mov	r1, r0
 2482 0052 1E48     		ldr	r0, .L162+36
 2483 0054 FFF7FEFF 		bl	Flash_Write_Word
 2484              	.LVL308:
 534:../user/source/DLT645.c ****     pucBuffer[8] = 0x94;  //ÇóÈ¡Ğ£ÑéºÍ
 2485              		.loc 1 534 0
 2486 0058 2868     		ldr	r0, [r5]
 2487 005a FFF7FEFF 		bl	GetHighByte
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 94


 2488              	.LVL309:
 2489 005e 0146     		mov	r1, r0
 2490 0060 1B48     		ldr	r0, .L162+40
 2491 0062 FFF7FEFF 		bl	Flash_Write_Word
 2492              	.LVL310:
 535:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;  //ÇóÈ¡Ğ£ÑéºÍ
 2493              		.loc 1 535 0
 2494 0066 9423     		movs	r3, #148
 2495 0068 2372     		strb	r3, [r4, #8]
 536:../user/source/DLT645.c ****     pucBuffer[10] = 0x00; //ÇóÈ¡Ğ£ÑéºÍ
 2496              		.loc 1 536 0
 2497 006a 0023     		movs	r3, #0
 2498 006c 6372     		strb	r3, [r4, #9]
 537:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 2499              		.loc 1 537 0
 2500 006e A372     		strb	r3, [r4, #10]
 538:../user/source/DLT645.c ****     {
 2501              		.loc 1 538 0
 2502 0070 04E0     		b	.L158
 2503              	.LVL311:
 2504              	.L159:
 540:../user/source/DLT645.c ****     }
 2505              		.loc 1 540 0 discriminator 3
 2506 0072 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2507 0074 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 2508 0076 0A44     		add	r2, r2, r1
 2509 0078 A272     		strb	r2, [r4, #10]
 538:../user/source/DLT645.c ****     {
 2510              		.loc 1 538 0 discriminator 3
 2511 007a 0133     		adds	r3, r3, #1
 2512              	.LVL312:
 2513              	.L158:
 538:../user/source/DLT645.c ****     {
 2514              		.loc 1 538 0 is_stmt 0 discriminator 1
 2515 007c 092B     		cmp	r3, #9
 2516 007e F8DD     		ble	.L159
 542:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
 2517              		.loc 1 542 0 is_stmt 1
 2518 0080 1623     		movs	r3, #22
 2519              	.LVL313:
 2520 0082 E372     		strb	r3, [r4, #11]
 543:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2521              		.loc 1 543 0
 2522 0084 0022     		movs	r2, #0
 2523 0086 134B     		ldr	r3, .L162+44
 2524 0088 1A70     		strb	r2, [r3]
 545:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 2525              		.loc 1 545 0
 2526 008a 134D     		ldr	r5, .L162+48
 2527 008c 0C22     		movs	r2, #12
 2528 008e 2946     		mov	r1, r5
 2529 0090 2046     		mov	r0, r4
 2530 0092 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2531              	.LVL314:
 546:../user/source/DLT645.c ****     {
 2532              		.loc 1 546 0
 2533 0096 2846     		mov	r0, r5
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 95


 2534 0098 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2535              	.LVL315:
 2536 009c 10B9     		cbnz	r0, .L157
 548:../user/source/DLT645.c ****     }
 2537              		.loc 1 548 0
 2538 009e 0F48     		ldr	r0, .L162+52
 2539 00a0 FFF7FEFF 		bl	Uart_DataPut
 2540              	.LVL316:
 2541              	.L157:
 2542 00a4 70BD     		pop	{r4, r5, r6, pc}
 2543              	.LVL317:
 2544              	.L163:
 2545 00a6 00BF     		.align	2
 2546              	.L162:
 2547 00a8 00000000 		.word	.LANCHOR4
 2548 00ac 00000000 		.word	.LANCHOR6
 2549 00b0 00000000 		.word	.LANCHOR7
 2550 00b4 00000000 		.word	.LANCHOR5
 2551 00b8 141F0308 		.word	134422292
 2552 00bc 00000000 		.word	Voltage_MAX
 2553 00c0 00000000 		.word	Voltage_MIN
 2554 00c4 001F0308 		.word	134422272
 2555 00c8 041F0308 		.word	134422276
 2556 00cc 081F0308 		.word	134422280
 2557 00d0 0C1F0308 		.word	134422284
 2558 00d4 00000000 		.word	.LANCHOR0
 2559 00d8 00000000 		.word	ucDrv_Buf_Uart3_Snd
 2560 00dc 00480040 		.word	1073760256
 2561              		.cfi_endproc
 2562              	.LFE118:
 2564              		.section	.text.vCurrent_Limit_Set,"ax",%progbits
 2565              		.align	2
 2566              		.global	vCurrent_Limit_Set
 2567              		.thumb
 2568              		.thumb_func
 2570              	vCurrent_Limit_Set:
 2571              	.LFB135:
1476:../user/source/DLT645.c ****     uint8_t i;
 2572              		.loc 1 1476 0
 2573              		.cfi_startproc
 2574              		@ args = 0, pretend = 0, frame = 0
 2575              		@ frame_needed = 0, uses_anonymous_args = 0
 2576              	.LVL318:
1479:../user/source/DLT645.c ****     /*·ÇÖØ¹ıÔØµ÷Õû°æ±¾Ê±£¬»Ø¸´·ñÈÏÖ¡*/
 2577              		.loc 1 1479 0
 2578 0000 D423     		movs	r3, #212
 2579 0002 0372     		strb	r3, [r0, #8]
1502:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 2580              		.loc 1 1502 0
 2581 0004 0023     		movs	r3, #0
 2582 0006 4372     		strb	r3, [r0, #9]
1503:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 2583              		.loc 1 1503 0
 2584 0008 8372     		strb	r3, [r0, #10]
 2585              	.LVL319:
1504:../user/source/DLT645.c ****     {
 2586              		.loc 1 1504 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 96


 2587 000a 05E0     		b	.L165
 2588              	.LVL320:
 2589              	.L166:
1506:../user/source/DLT645.c ****     }
 2590              		.loc 1 1506 0 discriminator 3
 2591 000c C15C     		ldrb	r1, [r0, r3]	@ zero_extendqisi2
 2592 000e 827A     		ldrb	r2, [r0, #10]	@ zero_extendqisi2
 2593 0010 0A44     		add	r2, r2, r1
 2594 0012 8272     		strb	r2, [r0, #10]
1504:../user/source/DLT645.c ****     {
 2595              		.loc 1 1504 0 discriminator 3
 2596 0014 0133     		adds	r3, r3, #1
 2597              	.LVL321:
 2598 0016 DBB2     		uxtb	r3, r3
 2599              	.LVL322:
 2600              	.L165:
1504:../user/source/DLT645.c ****     {
 2601              		.loc 1 1504 0 is_stmt 0 discriminator 1
 2602 0018 092B     		cmp	r3, #9
 2603 001a F7D9     		bls	.L166
1476:../user/source/DLT645.c ****     uint8_t i;
 2604              		.loc 1 1476 0 is_stmt 1
 2605 001c 10B5     		push	{r4, lr}
 2606              	.LCFI25:
 2607              		.cfi_def_cfa_offset 8
 2608              		.cfi_offset 4, -8
 2609              		.cfi_offset 14, -4
1508:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2610              		.loc 1 1508 0
 2611 001e 1623     		movs	r3, #22
 2612              	.LVL323:
 2613 0020 C372     		strb	r3, [r0, #11]
1510:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
 2614              		.loc 1 1510 0
 2615 0022 0022     		movs	r2, #0
 2616 0024 074B     		ldr	r3, .L169
 2617 0026 1A70     		strb	r2, [r3]
1511:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 2618              		.loc 1 1511 0
 2619 0028 074C     		ldr	r4, .L169+4
 2620 002a 0C22     		movs	r2, #12
 2621 002c 2146     		mov	r1, r4
 2622 002e FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2623              	.LVL324:
1512:../user/source/DLT645.c ****     {
 2624              		.loc 1 1512 0
 2625 0032 2046     		mov	r0, r4
 2626 0034 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2627              	.LVL325:
 2628 0038 10B9     		cbnz	r0, .L164
1514:../user/source/DLT645.c ****     }
 2629              		.loc 1 1514 0
 2630 003a 0448     		ldr	r0, .L169+8
 2631 003c FFF7FEFF 		bl	Uart_DataPut
 2632              	.LVL326:
 2633              	.L164:
 2634 0040 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 97


 2635              	.L170:
 2636 0042 00BF     		.align	2
 2637              	.L169:
 2638 0044 00000000 		.word	.LANCHOR0
 2639 0048 00000000 		.word	ucDrv_Buf_Uart3_Snd
 2640 004c 00480040 		.word	1073760256
 2641              		.cfi_endproc
 2642              	.LFE135:
 2644              		.section	.text.vCurrent_CTRatio_Set,"ax",%progbits
 2645              		.align	2
 2646              		.global	vCurrent_CTRatio_Set
 2647              		.thumb
 2648              		.thumb_func
 2650              	vCurrent_CTRatio_Set:
 2651              	.LFB136:
1539:../user/source/DLT645.c ****     uint8_t i;
 2652              		.loc 1 1539 0
 2653              		.cfi_startproc
 2654              		@ args = 0, pretend = 0, frame = 0
 2655              		@ frame_needed = 0, uses_anonymous_args = 0
 2656              	.LVL327:
1542:../user/source/DLT645.c **** /*ÊäÈëµÄ×Ö½Ú¼õÈ¥33ºó²»ÊÇBCDÂëÔõÃ´°ì£¿*/
 2657              		.loc 1 1542 0
 2658 0000 D423     		movs	r3, #212
 2659 0002 0372     		strb	r3, [r0, #8]
1560:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 2660              		.loc 1 1560 0
 2661 0004 0023     		movs	r3, #0
 2662 0006 4372     		strb	r3, [r0, #9]
1561:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 2663              		.loc 1 1561 0
 2664 0008 8372     		strb	r3, [r0, #10]
 2665              	.LVL328:
1562:../user/source/DLT645.c ****     {
 2666              		.loc 1 1562 0
 2667 000a 05E0     		b	.L172
 2668              	.LVL329:
 2669              	.L173:
1564:../user/source/DLT645.c ****     }
 2670              		.loc 1 1564 0 discriminator 3
 2671 000c C15C     		ldrb	r1, [r0, r3]	@ zero_extendqisi2
 2672 000e 827A     		ldrb	r2, [r0, #10]	@ zero_extendqisi2
 2673 0010 0A44     		add	r2, r2, r1
 2674 0012 8272     		strb	r2, [r0, #10]
1562:../user/source/DLT645.c ****     {
 2675              		.loc 1 1562 0 discriminator 3
 2676 0014 0133     		adds	r3, r3, #1
 2677              	.LVL330:
 2678 0016 DBB2     		uxtb	r3, r3
 2679              	.LVL331:
 2680              	.L172:
1562:../user/source/DLT645.c ****     {
 2681              		.loc 1 1562 0 is_stmt 0 discriminator 1
 2682 0018 092B     		cmp	r3, #9
 2683 001a F7D9     		bls	.L173
1539:../user/source/DLT645.c ****     uint8_t i;
 2684              		.loc 1 1539 0 is_stmt 1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 98


 2685 001c 10B5     		push	{r4, lr}
 2686              	.LCFI26:
 2687              		.cfi_def_cfa_offset 8
 2688              		.cfi_offset 4, -8
 2689              		.cfi_offset 14, -4
1566:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2690              		.loc 1 1566 0
 2691 001e 1623     		movs	r3, #22
 2692              	.LVL332:
 2693 0020 C372     		strb	r3, [r0, #11]
1568:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
 2694              		.loc 1 1568 0
 2695 0022 0022     		movs	r2, #0
 2696 0024 074B     		ldr	r3, .L176
 2697 0026 1A70     		strb	r2, [r3]
1569:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 2698              		.loc 1 1569 0
 2699 0028 074C     		ldr	r4, .L176+4
 2700 002a 0C22     		movs	r2, #12
 2701 002c 2146     		mov	r1, r4
 2702 002e FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2703              	.LVL333:
1570:../user/source/DLT645.c ****     {
 2704              		.loc 1 1570 0
 2705 0032 2046     		mov	r0, r4
 2706 0034 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2707              	.LVL334:
 2708 0038 10B9     		cbnz	r0, .L171
1572:../user/source/DLT645.c ****     }
 2709              		.loc 1 1572 0
 2710 003a 0448     		ldr	r0, .L176+8
 2711 003c FFF7FEFF 		bl	Uart_DataPut
 2712              	.LVL335:
 2713              	.L171:
 2714 0040 10BD     		pop	{r4, pc}
 2715              	.L177:
 2716 0042 00BF     		.align	2
 2717              	.L176:
 2718 0044 00000000 		.word	.LANCHOR0
 2719 0048 00000000 		.word	ucDrv_Buf_Uart3_Snd
 2720 004c 00480040 		.word	1073760256
 2721              		.cfi_endproc
 2722              	.LFE136:
 2724              		.section	.text.vCurrent_Limit_ReadSet,"ax",%progbits
 2725              		.align	2
 2726              		.global	vCurrent_Limit_ReadSet
 2727              		.thumb
 2728              		.thumb_func
 2730              	vCurrent_Limit_ReadSet:
 2731              	.LFB137:
1596:../user/source/DLT645.c ****     uint8_t i;
 2732              		.loc 1 1596 0
 2733              		.cfi_startproc
 2734              		@ args = 0, pretend = 0, frame = 8
 2735              		@ frame_needed = 0, uses_anonymous_args = 0
 2736              	.LVL336:
 2737 0000 30B5     		push	{r4, r5, lr}
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 99


 2738              	.LCFI27:
 2739              		.cfi_def_cfa_offset 12
 2740              		.cfi_offset 4, -12
 2741              		.cfi_offset 5, -8
 2742              		.cfi_offset 14, -4
 2743 0002 85B0     		sub	sp, sp, #20
 2744              	.LCFI28:
 2745              		.cfi_def_cfa_offset 32
 2746 0004 0546     		mov	r5, r0
1599:../user/source/DLT645.c ****     limit.isminus = false;
 2747              		.loc 1 1599 0
 2748 0006 1A4B     		ldr	r3, .L183
 2749 0008 DB68     		ldr	r3, [r3, #12]
 2750 000a 0293     		str	r3, [sp, #8]
1600:../user/source/DLT645.c ****     vPut_Current(limit, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
 2751              		.loc 1 1600 0
 2752 000c 0024     		movs	r4, #0
 2753 000e 8DF80D40 		strb	r4, [sp, #13]
1601:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
 2754              		.loc 1 1601 0
 2755 0012 00F11003 		add	r3, r0, #16
 2756 0016 0093     		str	r3, [sp]
 2757 0018 00F10F03 		add	r3, r0, #15
 2758 001c 00F10E02 		add	r2, r0, #14
 2759 0020 04A9     		add	r1, sp, #16
 2760 0022 11E90300 		ldmdb	r1, {r0, r1}
 2761              	.LVL337:
 2762 0026 FFF7FEFF 		bl	vPut_Current
 2763              	.LVL338:
1602:../user/source/DLT645.c ****     pucBuffer[9] = 0x07;
 2764              		.loc 1 1602 0
 2765 002a 9123     		movs	r3, #145
 2766 002c 2B72     		strb	r3, [r5, #8]
1603:../user/source/DLT645.c ****     pucBuffer[17] = 0;
 2767              		.loc 1 1603 0
 2768 002e 0723     		movs	r3, #7
 2769 0030 6B72     		strb	r3, [r5, #9]
1604:../user/source/DLT645.c ****     for (i = 0; i < 17; i++)
 2770              		.loc 1 1604 0
 2771 0032 6C74     		strb	r4, [r5, #17]
 2772              	.LVL339:
1605:../user/source/DLT645.c ****     {
 2773              		.loc 1 1605 0
 2774 0034 2346     		mov	r3, r4
 2775 0036 05E0     		b	.L179
 2776              	.LVL340:
 2777              	.L180:
1607:../user/source/DLT645.c ****     }
 2778              		.loc 1 1607 0 discriminator 3
 2779 0038 E95C     		ldrb	r1, [r5, r3]	@ zero_extendqisi2
 2780 003a 6A7C     		ldrb	r2, [r5, #17]	@ zero_extendqisi2
 2781 003c 0A44     		add	r2, r2, r1
 2782 003e 6A74     		strb	r2, [r5, #17]
1605:../user/source/DLT645.c ****     {
 2783              		.loc 1 1605 0 discriminator 3
 2784 0040 0133     		adds	r3, r3, #1
 2785              	.LVL341:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 100


 2786 0042 DBB2     		uxtb	r3, r3
 2787              	.LVL342:
 2788              	.L179:
1605:../user/source/DLT645.c ****     {
 2789              		.loc 1 1605 0 is_stmt 0 discriminator 1
 2790 0044 102B     		cmp	r3, #16
 2791 0046 F7D9     		bls	.L180
1609:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2792              		.loc 1 1609 0 is_stmt 1
 2793 0048 1623     		movs	r3, #22
 2794              	.LVL343:
 2795 004a AB74     		strb	r3, [r5, #18]
1611:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 19);
 2796              		.loc 1 1611 0
 2797 004c 0722     		movs	r2, #7
 2798 004e 094B     		ldr	r3, .L183+4
 2799 0050 1A70     		strb	r2, [r3]
1612:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 2800              		.loc 1 1612 0
 2801 0052 094C     		ldr	r4, .L183+8
 2802 0054 1322     		movs	r2, #19
 2803 0056 2146     		mov	r1, r4
 2804 0058 2846     		mov	r0, r5
 2805 005a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2806              	.LVL344:
1613:../user/source/DLT645.c ****     {
 2807              		.loc 1 1613 0
 2808 005e 2046     		mov	r0, r4
 2809 0060 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2810              	.LVL345:
 2811 0064 10B9     		cbnz	r0, .L178
1615:../user/source/DLT645.c ****     }
 2812              		.loc 1 1615 0
 2813 0066 0548     		ldr	r0, .L183+12
 2814 0068 FFF7FEFF 		bl	Uart_DataPut
 2815              	.LVL346:
 2816              	.L178:
1626:../user/source/DLT645.c **** 
 2817              		.loc 1 1626 0
 2818 006c 05B0     		add	sp, sp, #20
 2819              	.LCFI29:
 2820              		.cfi_def_cfa_offset 12
 2821              		@ sp needed
 2822 006e 30BD     		pop	{r4, r5, pc}
 2823              	.LVL347:
 2824              	.L184:
 2825              		.align	2
 2826              	.L183:
 2827 0070 00000000 		.word	TransFormer
 2828 0074 00000000 		.word	.LANCHOR0
 2829 0078 00000000 		.word	ucDrv_Buf_Uart3_Snd
 2830 007c 00480040 		.word	1073760256
 2831              		.cfi_endproc
 2832              	.LFE137:
 2834              		.section	.text.vCurrent_CTRatio_ReadSet,"ax",%progbits
 2835              		.align	2
 2836              		.global	vCurrent_CTRatio_ReadSet
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 101


 2837              		.thumb
 2838              		.thumb_func
 2840              	vCurrent_CTRatio_ReadSet:
 2841              	.LFB138:
1639:../user/source/DLT645.c **** 
 2842              		.loc 1 1639 0
 2843              		.cfi_startproc
 2844              		@ args = 0, pretend = 0, frame = 0
 2845              		@ frame_needed = 0, uses_anonymous_args = 0
 2846              	.LVL348:
 2847 0000 38B5     		push	{r3, r4, r5, lr}
 2848              	.LCFI30:
 2849              		.cfi_def_cfa_offset 16
 2850              		.cfi_offset 3, -16
 2851              		.cfi_offset 4, -12
 2852              		.cfi_offset 5, -8
 2853              		.cfi_offset 14, -4
 2854 0002 0446     		mov	r4, r0
1642:../user/source/DLT645.c ****     pucBuffer[9] = 0x06;
 2855              		.loc 1 1642 0
 2856 0004 9123     		movs	r3, #145
 2857 0006 0372     		strb	r3, [r0, #8]
1643:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(TransFormer.CTratio);
 2858              		.loc 1 1643 0
 2859 0008 0623     		movs	r3, #6
 2860 000a 4372     		strb	r3, [r0, #9]
1644:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(TransFormer.CTratio);
 2861              		.loc 1 1644 0
 2862 000c 134B     		ldr	r3, .L190
 2863 000e 9D68     		ldr	r5, [r3, #8]
 2864 0010 2846     		mov	r0, r5
 2865              	.LVL349:
 2866 0012 FFF7FEFF 		bl	GetLowByte
 2867              	.LVL350:
 2868 0016 A073     		strb	r0, [r4, #14]
1645:../user/source/DLT645.c ****     pucBuffer[16] = 0;
 2869              		.loc 1 1645 0
 2870 0018 2846     		mov	r0, r5
 2871 001a FFF7FEFF 		bl	GetHighByte
 2872              	.LVL351:
 2873 001e E073     		strb	r0, [r4, #15]
1646:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
 2874              		.loc 1 1646 0
 2875 0020 0023     		movs	r3, #0
 2876 0022 2374     		strb	r3, [r4, #16]
 2877              	.LVL352:
1647:../user/source/DLT645.c ****     {
 2878              		.loc 1 1647 0
 2879 0024 05E0     		b	.L186
 2880              	.LVL353:
 2881              	.L187:
1649:../user/source/DLT645.c ****     }
 2882              		.loc 1 1649 0 discriminator 3
 2883 0026 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2884 0028 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 2885 002a 0A44     		add	r2, r2, r1
 2886 002c 2274     		strb	r2, [r4, #16]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 102


1647:../user/source/DLT645.c ****     {
 2887              		.loc 1 1647 0 discriminator 3
 2888 002e 0133     		adds	r3, r3, #1
 2889              	.LVL354:
 2890 0030 DBB2     		uxtb	r3, r3
 2891              	.LVL355:
 2892              	.L186:
1647:../user/source/DLT645.c ****     {
 2893              		.loc 1 1647 0 is_stmt 0 discriminator 1
 2894 0032 0F2B     		cmp	r3, #15
 2895 0034 F7D9     		bls	.L187
1651:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2896              		.loc 1 1651 0 is_stmt 1
 2897 0036 1623     		movs	r3, #22
 2898              	.LVL356:
 2899 0038 6374     		strb	r3, [r4, #17]
1653:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 18);
 2900              		.loc 1 1653 0
 2901 003a 0622     		movs	r2, #6
 2902 003c 084B     		ldr	r3, .L190+4
 2903 003e 1A70     		strb	r2, [r3]
1654:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 2904              		.loc 1 1654 0
 2905 0040 084D     		ldr	r5, .L190+8
 2906 0042 1222     		movs	r2, #18
 2907 0044 2946     		mov	r1, r5
 2908 0046 2046     		mov	r0, r4
 2909 0048 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2910              	.LVL357:
1655:../user/source/DLT645.c ****     {
 2911              		.loc 1 1655 0
 2912 004c 2846     		mov	r0, r5
 2913 004e FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2914              	.LVL358:
 2915 0052 10B9     		cbnz	r0, .L185
1657:../user/source/DLT645.c ****     }
 2916              		.loc 1 1657 0
 2917 0054 0448     		ldr	r0, .L190+12
 2918 0056 FFF7FEFF 		bl	Uart_DataPut
 2919              	.LVL359:
 2920              	.L185:
 2921 005a 38BD     		pop	{r3, r4, r5, pc}
 2922              	.LVL360:
 2923              	.L191:
 2924              		.align	2
 2925              	.L190:
 2926 005c 00000000 		.word	TransFormer
 2927 0060 00000000 		.word	.LANCHOR0
 2928 0064 00000000 		.word	ucDrv_Buf_Uart3_Snd
 2929 0068 00480040 		.word	1073760256
 2930              		.cfi_endproc
 2931              	.LFE138:
 2933              		.section	.text.vCurrent_TransFormer_Capacity_ReadSet,"ax",%progbits
 2934              		.align	2
 2935              		.global	vCurrent_TransFormer_Capacity_ReadSet
 2936              		.thumb
 2937              		.thumb_func
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 103


 2939              	vCurrent_TransFormer_Capacity_ReadSet:
 2940              	.LFB139:
1681:../user/source/DLT645.c ****     uint8_t i;
 2941              		.loc 1 1681 0
 2942              		.cfi_startproc
 2943              		@ args = 0, pretend = 0, frame = 0
 2944              		@ frame_needed = 0, uses_anonymous_args = 0
 2945              	.LVL361:
 2946 0000 38B5     		push	{r3, r4, r5, lr}
 2947              	.LCFI31:
 2948              		.cfi_def_cfa_offset 16
 2949              		.cfi_offset 3, -16
 2950              		.cfi_offset 4, -12
 2951              		.cfi_offset 5, -8
 2952              		.cfi_offset 14, -4
 2953 0002 0446     		mov	r4, r0
1683:../user/source/DLT645.c ****     pucBuffer[9] = 0x06;
 2954              		.loc 1 1683 0
 2955 0004 9123     		movs	r3, #145
 2956 0006 0372     		strb	r3, [r0, #8]
1684:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(TransFormer.capacity);
 2957              		.loc 1 1684 0
 2958 0008 0623     		movs	r3, #6
 2959 000a 4372     		strb	r3, [r0, #9]
1685:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(TransFormer.capacity);
 2960              		.loc 1 1685 0
 2961 000c 134B     		ldr	r3, .L197
 2962 000e 1D68     		ldr	r5, [r3]
 2963 0010 2846     		mov	r0, r5
 2964              	.LVL362:
 2965 0012 FFF7FEFF 		bl	GetLowByte
 2966              	.LVL363:
 2967 0016 A073     		strb	r0, [r4, #14]
1686:../user/source/DLT645.c ****     pucBuffer[16] = 0;
 2968              		.loc 1 1686 0
 2969 0018 2846     		mov	r0, r5
 2970 001a FFF7FEFF 		bl	GetHighByte
 2971              	.LVL364:
 2972 001e E073     		strb	r0, [r4, #15]
1687:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
 2973              		.loc 1 1687 0
 2974 0020 0023     		movs	r3, #0
 2975 0022 2374     		strb	r3, [r4, #16]
 2976              	.LVL365:
1688:../user/source/DLT645.c ****     {
 2977              		.loc 1 1688 0
 2978 0024 05E0     		b	.L193
 2979              	.LVL366:
 2980              	.L194:
1690:../user/source/DLT645.c ****     }
 2981              		.loc 1 1690 0 discriminator 3
 2982 0026 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2983 0028 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 2984 002a 0A44     		add	r2, r2, r1
 2985 002c 2274     		strb	r2, [r4, #16]
1688:../user/source/DLT645.c ****     {
 2986              		.loc 1 1688 0 discriminator 3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 104


 2987 002e 0133     		adds	r3, r3, #1
 2988              	.LVL367:
 2989 0030 DBB2     		uxtb	r3, r3
 2990              	.LVL368:
 2991              	.L193:
1688:../user/source/DLT645.c ****     {
 2992              		.loc 1 1688 0 is_stmt 0 discriminator 1
 2993 0032 0F2B     		cmp	r3, #15
 2994 0034 F7D9     		bls	.L194
1692:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2995              		.loc 1 1692 0 is_stmt 1
 2996 0036 1623     		movs	r3, #22
 2997              	.LVL369:
 2998 0038 6374     		strb	r3, [r4, #17]
1694:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 18);
 2999              		.loc 1 1694 0
 3000 003a 0022     		movs	r2, #0
 3001 003c 084B     		ldr	r3, .L197+4
 3002 003e 1A70     		strb	r2, [r3]
1695:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 3003              		.loc 1 1695 0
 3004 0040 084D     		ldr	r5, .L197+8
 3005 0042 1222     		movs	r2, #18
 3006 0044 2946     		mov	r1, r5
 3007 0046 2046     		mov	r0, r4
 3008 0048 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3009              	.LVL370:
1696:../user/source/DLT645.c ****     {
 3010              		.loc 1 1696 0
 3011 004c 2846     		mov	r0, r5
 3012 004e FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3013              	.LVL371:
 3014 0052 10B9     		cbnz	r0, .L192
1698:../user/source/DLT645.c ****     }
 3015              		.loc 1 1698 0
 3016 0054 0448     		ldr	r0, .L197+12
 3017 0056 FFF7FEFF 		bl	Uart_DataPut
 3018              	.LVL372:
 3019              	.L192:
 3020 005a 38BD     		pop	{r3, r4, r5, pc}
 3021              	.LVL373:
 3022              	.L198:
 3023              		.align	2
 3024              	.L197:
 3025 005c 00000000 		.word	TransFormer
 3026 0060 00000000 		.word	.LANCHOR0
 3027 0064 00000000 		.word	ucDrv_Buf_Uart3_Snd
 3028 0068 00480040 		.word	1073760256
 3029              		.cfi_endproc
 3030              	.LFE139:
 3032              		.section	.text.vEnergy_Modify_ReadSet,"ax",%progbits
 3033              		.align	2
 3034              		.global	vEnergy_Modify_ReadSet
 3035              		.thumb
 3036              		.thumb_func
 3038              	vEnergy_Modify_ReadSet:
 3039              	.LFB155:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 105


2398:../user/source/DLT645.c ****     //68 AA AA AA AA AA AA 68 91 04 33 76 34 33 71 16
 3040              		.loc 1 2398 0
 3041              		.cfi_startproc
 3042              		@ args = 0, pretend = 0, frame = 0
 3043              		@ frame_needed = 0, uses_anonymous_args = 0
 3044              	.LVL374:
 3045 0000 38B5     		push	{r3, r4, r5, lr}
 3046              	.LCFI32:
 3047              		.cfi_def_cfa_offset 16
 3048              		.cfi_offset 3, -16
 3049              		.cfi_offset 4, -12
 3050              		.cfi_offset 5, -8
 3051              		.cfi_offset 14, -4
2402:../user/source/DLT645.c ****         return;
 3052              		.loc 1 2402 0
 3053 0002 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 3054 0004 912B     		cmp	r3, #145
 3055 0006 32D1     		bne	.L199
2405:../user/source/DLT645.c ****     //ratio = EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR);
 3056              		.loc 1 2405 0
 3057 0008 0623     		movs	r3, #6
 3058 000a 4372     		strb	r3, [r0, #9]
2407:../user/source/DLT645.c **** 
 3059              		.loc 1 2407 0
 3060 000c 184B     		ldr	r3, .L204
 3061 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3062              	.LVL375:
2409:../user/source/DLT645.c ****     pucbuffer[15] = DEC2BCD(ratio / 100); //¸ßÎ»ÔÚºó
 3063              		.loc 1 2409 0
 3064 0010 1849     		ldr	r1, .L204+4
 3065 0012 A1FB0231 		umull	r3, r1, r1, r2
 3066 0016 4909     		lsrs	r1, r1, #5
 3067 0018 6423     		movs	r3, #100
 3068 001a 03FB1123 		mls	r3, r3, r1, r2
 3069 001e DBB2     		uxtb	r3, r3
 3070 0020 154A     		ldr	r2, .L204+8
 3071              	.LVL376:
 3072 0022 A2FB0342 		umull	r4, r2, r2, r3
 3073 0026 D208     		lsrs	r2, r2, #3
 3074 0028 02EB8205 		add	r5, r2, r2, lsl #2
 3075 002c 6C00     		lsls	r4, r5, #1
 3076 002e 1B1B     		subs	r3, r3, r4
 3077 0030 43EA0213 		orr	r3, r3, r2, lsl #4
 3078 0034 8373     		strb	r3, [r0, #14]
2410:../user/source/DLT645.c ****     pucbuffer[16] = 0;
 3079              		.loc 1 2410 0
 3080 0036 C173     		strb	r1, [r0, #15]
2411:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
 3081              		.loc 1 2411 0
 3082 0038 0023     		movs	r3, #0
 3083 003a 0374     		strb	r3, [r0, #16]
 3084              	.LVL377:
2412:../user/source/DLT645.c ****     {
 3085              		.loc 1 2412 0
 3086 003c 04E0     		b	.L201
 3087              	.LVL378:
 3088              	.L202:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 106


2414:../user/source/DLT645.c ****     }
 3089              		.loc 1 2414 0 discriminator 3
 3090 003e C15C     		ldrb	r1, [r0, r3]	@ zero_extendqisi2
 3091 0040 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 3092 0042 0A44     		add	r2, r2, r1
 3093 0044 0274     		strb	r2, [r0, #16]
2412:../user/source/DLT645.c ****     {
 3094              		.loc 1 2412 0 discriminator 3
 3095 0046 0133     		adds	r3, r3, #1
 3096              	.LVL379:
 3097              	.L201:
2412:../user/source/DLT645.c ****     {
 3098              		.loc 1 2412 0 is_stmt 0 discriminator 1
 3099 0048 0F2B     		cmp	r3, #15
 3100 004a F8D9     		bls	.L202
2416:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 3101              		.loc 1 2416 0 is_stmt 1
 3102 004c 1623     		movs	r3, #22
 3103              	.LVL380:
 3104 004e 4374     		strb	r3, [r0, #17]
2418:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, &ucDrv_Buf_Uart3_Snd, 18);
 3105              		.loc 1 2418 0
 3106 0050 0422     		movs	r2, #4
 3107 0052 0A4B     		ldr	r3, .L204+12
 3108 0054 1A70     		strb	r2, [r3]
2419:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 3109              		.loc 1 2419 0
 3110 0056 0A4C     		ldr	r4, .L204+16
 3111 0058 1222     		movs	r2, #18
 3112 005a 2146     		mov	r1, r4
 3113 005c FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3114              	.LVL381:
2420:../user/source/DLT645.c ****     {
 3115              		.loc 1 2420 0
 3116 0060 2046     		mov	r0, r4
 3117 0062 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3118              	.LVL382:
 3119 0066 10B9     		cbnz	r0, .L199
2422:../user/source/DLT645.c ****     }
 3120              		.loc 1 2422 0
 3121 0068 0648     		ldr	r0, .L204+20
 3122 006a FFF7FEFF 		bl	Uart_DataPut
 3123              	.LVL383:
 3124              	.L199:
 3125 006e 38BD     		pop	{r3, r4, r5, pc}
 3126              	.L205:
 3127              		.align	2
 3128              	.L204:
 3129 0070 00000000 		.word	ucDayfrozen_Modify_Ratio
 3130 0074 1F85EB51 		.word	1374389535
 3131 0078 CDCCCCCC 		.word	-858993459
 3132 007c 00000000 		.word	.LANCHOR0
 3133 0080 00000000 		.word	ucDrv_Buf_Uart3_Snd
 3134 0084 00480040 		.word	1073760256
 3135              		.cfi_endproc
 3136              	.LFE155:
 3138              		.section	.text.vRead_Version,"ax",%progbits
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 107


 3139              		.align	2
 3140              		.global	vRead_Version
 3141              		.thumb
 3142              		.thumb_func
 3144              	vRead_Version:
 3145              	.LFB163:
2698:../user/source/DLT645.c ****     uint16_t n = 0; //Êı¾İ¿é¸öÊı
2699:../user/source/DLT645.c ****     uint16_t length = pucbuffer[9];
2700:../user/source/DLT645.c ****     uint16_t ID_length = 0;
2701:../user/source/DLT645.c ****     uint32_t current = 0;
2702:../user/source/DLT645.c ****     uint16_t i = 0;
2703:../user/source/DLT645.c ****     uint32_t ABCcurrent = 0;
2704:../user/source/DLT645.c **** 
2705:../user/source/DLT645.c ****     if (pucbuffer[8] == 0x91 || pucbuffer[8] == 0xB1) //ÎŞºóĞøÖ¡£¬»ò·ÖÖ¡µÄµÚÒ»Ö¡
2706:../user/source/DLT645.c ****     {
2707:../user/source/DLT645.c ****         ID_length = 9; //Êı¾İ±êÊ¶*4 + Ê±±ê*5
2708:../user/source/DLT645.c ****     }
2709:../user/source/DLT645.c ****     if (pucbuffer[8] == 0x92 || pucbuffer[8] == 0xB2)
2710:../user/source/DLT645.c ****     {
2711:../user/source/DLT645.c ****         ID_length = 4; //Êı¾İ±êÊ¶*4 £¬ºöÂÔºóÃæµÄSEQ*1£¬Ô­ÒòÎªÕû³ı2ºó½á¹ûÒ»Ñù
2712:../user/source/DLT645.c ****     }
2713:../user/source/DLT645.c **** 
2714:../user/source/DLT645.c ****     switch (pucbuffer[10])
2715:../user/source/DLT645.c ****     {
2716:../user/source/DLT645.c ****     /*AÏàµçÁ÷*/
2717:../user/source/DLT645.c ****     case 0x34:
2718:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
2719:../user/source/DLT645.c ****         n = (length - ID_length) / 3;
2720:../user/source/DLT645.c ****         while (n--)
2721:../user/source/DLT645.c ****         {
2722:../user/source/DLT645.c ****             if (pucbuffer[10 + ID_length + 3 * n] == 0x32 || //ÊÇ3²»ÊÇ9
2723:../user/source/DLT645.c ****                 pucbuffer[11 + ID_length + 3 * n] == 0x32 ||
2724:../user/source/DLT645.c ****                 pucbuffer[12 + ID_length + 3 * n] == 0x32)
2725:../user/source/DLT645.c ****                 continue;
2726:../user/source/DLT645.c ****             /*¶ÁÈ¡µçÁ÷*/
2727:../user/source/DLT645.c ****             vGet_Current(pucbuffer[10 + ID_length + 3 * n],
2728:../user/source/DLT645.c ****                          pucbuffer[11 + ID_length + 3 * n],
2729:../user/source/DLT645.c ****                          pucbuffer[12 + ID_length + 3 * n],
2730:../user/source/DLT645.c ****                          &Acurrent);
2731:../user/source/DLT645.c ****             /*ĞŞ¸ÄµçÁ÷*/
2732:../user/source/DLT645.c ****             Acurrent.value = (Acurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT
2733:../user/source/DLT645.c ****             /*»ØĞ´µçÁ÷*/
2734:../user/source/DLT645.c ****             vPut_Current(Acurrent,
2735:../user/source/DLT645.c ****                          &pucbuffer[10 + ID_length + 3 * n],
2736:../user/source/DLT645.c ****                          &pucbuffer[11 + ID_length + 3 * n],
2737:../user/source/DLT645.c ****                          &pucbuffer[12 + ID_length + 3 * n]);
2738:../user/source/DLT645.c ****         }
2739:../user/source/DLT645.c ****         pucbuffer[length + 10] = 0;
2740:../user/source/DLT645.c ****         for (i = 0; i < (length + 10); i++)
2741:../user/source/DLT645.c ****         {
2742:../user/source/DLT645.c ****             pucbuffer[length + 10] += pucbuffer[i];
2743:../user/source/DLT645.c ****         }
2744:../user/source/DLT645.c ****         pucbuffer[length + 11] = 16;
2745:../user/source/DLT645.c **** #endif
2746:../user/source/DLT645.c ****         break;
2747:../user/source/DLT645.c ****         /*BÏàµçÁ÷*/
2748:../user/source/DLT645.c ****     case 0x35:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 108


2749:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
2750:../user/source/DLT645.c ****         n = (length - ID_length) / 3;
2751:../user/source/DLT645.c ****         while (n--)
2752:../user/source/DLT645.c ****         {
2753:../user/source/DLT645.c ****             if (pucbuffer[10 + ID_length + 3 * n] == 0x32 ||
2754:../user/source/DLT645.c ****                 pucbuffer[11 + ID_length + 3 * n] == 0x32 ||
2755:../user/source/DLT645.c ****                 pucbuffer[12 + ID_length + 3 * n] == 0x32)
2756:../user/source/DLT645.c ****                 continue;
2757:../user/source/DLT645.c ****             /*¶ÁÈ¡µçÁ÷*/
2758:../user/source/DLT645.c ****             vGet_Current(pucbuffer[10 + ID_length + 3 * n],
2759:../user/source/DLT645.c ****                          pucbuffer[11 + ID_length + 3 * n],
2760:../user/source/DLT645.c ****                          pucbuffer[12 + ID_length + 3 * n],
2761:../user/source/DLT645.c ****                          &Bcurrent);
2762:../user/source/DLT645.c ****             /*ĞŞ¸ÄµçÁ÷*/
2763:../user/source/DLT645.c ****             Bcurrent.value = (Bcurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT
2764:../user/source/DLT645.c ****                                                                                   : Bcurrent.value)
2765:../user/source/DLT645.c ****             /*»ØĞ´µçÁ÷*/
2766:../user/source/DLT645.c ****             vPut_Current(Bcurrent,
2767:../user/source/DLT645.c ****                          &pucbuffer[10 + ID_length + 3 * n],
2768:../user/source/DLT645.c ****                          &pucbuffer[11 + ID_length + 3 * n],
2769:../user/source/DLT645.c ****                          &pucbuffer[12 + ID_length + 3 * n]);
2770:../user/source/DLT645.c ****         }
2771:../user/source/DLT645.c ****         pucbuffer[length + 10] = 0;
2772:../user/source/DLT645.c ****         for (i = 0; i < (length + 10); i++)
2773:../user/source/DLT645.c ****         {
2774:../user/source/DLT645.c ****             pucbuffer[length + 10] += pucbuffer[i];
2775:../user/source/DLT645.c ****         }
2776:../user/source/DLT645.c ****         pucbuffer[length + 11] = 16;
2777:../user/source/DLT645.c **** #endif
2778:../user/source/DLT645.c ****         break;
2779:../user/source/DLT645.c ****     case 0x36: //CÏàµçÁ÷
2780:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
2781:../user/source/DLT645.c ****         n = (length - ID_length) / 3;
2782:../user/source/DLT645.c ****         while (n--)
2783:../user/source/DLT645.c ****         {
2784:../user/source/DLT645.c ****             if (pucbuffer[10 + ID_length + 9 * n] == 0x32 ||
2785:../user/source/DLT645.c ****                 pucbuffer[11 + ID_length + 9 * n] == 0x32 ||
2786:../user/source/DLT645.c ****                 pucbuffer[12 + ID_length + 9 * n] == 0x32)
2787:../user/source/DLT645.c ****                 continue;
2788:../user/source/DLT645.c ****             /*¶ÁÈ¡µçÁ÷*/
2789:../user/source/DLT645.c ****             vGet_Current(pucbuffer[10 + ID_length + 3 * n],
2790:../user/source/DLT645.c ****                          pucbuffer[11 + ID_length + 3 * n],
2791:../user/source/DLT645.c ****                          pucbuffer[12 + ID_length + 3 * n],
2792:../user/source/DLT645.c ****                          &Ccurrent);
2793:../user/source/DLT645.c ****             /*ĞŞ¸ÄµçÁ÷*/
2794:../user/source/DLT645.c ****             Ccurrent.value = (Ccurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT
2795:../user/source/DLT645.c ****             /*»ØĞ´µçÁ÷*/
2796:../user/source/DLT645.c ****             vPut_Current(Ccurrent,
2797:../user/source/DLT645.c ****                          &pucbuffer[10 + ID_length + 3 * n],
2798:../user/source/DLT645.c ****                          &pucbuffer[11 + ID_length + 3 * n],
2799:../user/source/DLT645.c ****                          &pucbuffer[12 + ID_length + 3 * n]);
2800:../user/source/DLT645.c ****         }
2801:../user/source/DLT645.c ****         pucbuffer[length + 10] = 0;
2802:../user/source/DLT645.c ****         for (i = 0; i < (length + 10); i++)
2803:../user/source/DLT645.c ****         {
2804:../user/source/DLT645.c ****             pucbuffer[length + 10] += pucbuffer[i];
2805:../user/source/DLT645.c ****         }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 109


2806:../user/source/DLT645.c ****         pucbuffer[length + 11] = 16;
2807:../user/source/DLT645.c **** #endif
2808:../user/source/DLT645.c ****         break;
2809:../user/source/DLT645.c ****     case 0x32: //¿éµçÁ÷
2810:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_DEVIATION
2811:../user/source/DLT645.c ****         n = (length - ID_length) / 9; //Êı¾İµã¸öÊı
2812:../user/source/DLT645.c ****         while (n--)
2813:../user/source/DLT645.c ****         {
2814:../user/source/DLT645.c ****             vGet_Current(pucbuffer[10 + ID_length + 9 * n],
2815:../user/source/DLT645.c ****                          pucbuffer[11 + ID_length + 9 * n],
2816:../user/source/DLT645.c ****                          pucbuffer[12 + ID_length + 9 * n],
2817:../user/source/DLT645.c ****                          &Acurrent);
2818:../user/source/DLT645.c **** 
2819:../user/source/DLT645.c ****             vGet_Current(pucbuffer[13 + ID_length + 9 * n],
2820:../user/source/DLT645.c ****                          pucbuffer[14 + ID_length + 9 * n],
2821:../user/source/DLT645.c ****                          pucbuffer[15 + ID_length + 9 * n],
2822:../user/source/DLT645.c ****                          &Bcurrent);
2823:../user/source/DLT645.c **** 
2824:../user/source/DLT645.c ****             vGet_Current(pucbuffer[16 + ID_length + 9 * n],
2825:../user/source/DLT645.c ****                          pucbuffer[17 + ID_length + 9 * n],
2826:../user/source/DLT645.c ****                          pucbuffer[18 + ID_length + 9 * n],
2827:../user/source/DLT645.c ****                          &Ccurrent);
2828:../user/source/DLT645.c **** 
2829:../user/source/DLT645.c ****             //µçÁ÷Îª¸ºÖµ,²»ĞŞ¸ÄµçÁ÷
2830:../user/source/DLT645.c ****             if (Acurrent.isminus || Bcurrent.isminus || Ccurrent.isminus)
2831:../user/source/DLT645.c ****                 continue;
2832:../user/source/DLT645.c ****             //µçÁ÷Îª0£¬²»ĞŞ¸ÄµçÁ÷
2833:../user/source/DLT645.c ****             if ((Acurrent.value == 0) || (Bcurrent.value == 0) || (Ccurrent.value == 0))
2834:../user/source/DLT645.c ****                 continue;
2835:../user/source/DLT645.c ****             //µçÁ÷Ïà»¥Ö®¼ä²»³¬²î£¬²»ĞŞ¸ÄµçÁ÷
2836:../user/source/DLT645.c ****             if (CURRENT_MAX_DVALUE * MAX(Acurrent.value, MAX(Bcurrent.value, Ccurrent.value)) / 100
2837:../user/source/DLT645.c ****                 MIN(Acurrent.value, MIN(Bcurrent.value, Ccurrent.value)))
2838:../user/source/DLT645.c ****                 continue;
2839:../user/source/DLT645.c ****             else //ĞèÒªĞŞ¸Ä£¬×î´óÖµ¼õĞ¡£¬×îĞ¡ÖµÔö´ó£¬Ê£ÏÂµÄÊÇÖĞ¼äÖµ
2840:../user/source/DLT645.c ****             {
2841:../user/source/DLT645.c ****                 if ((Acurrent.value >= Bcurrent.value) && (Bcurrent.value >= Ccurrent.value))
2842:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Acurrent, &Bcurrent, &Ccurrent);
2843:../user/source/DLT645.c ****                 else if ((Acurrent.value >= Ccurrent.value) && (Ccurrent.value >= Bcurrent.value))
2844:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Acurrent, &Ccurrent, &Bcurrent);
2845:../user/source/DLT645.c ****                 else if ((Bcurrent.value >= Acurrent.value) && (Acurrent.value >= Ccurrent.value))
2846:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Bcurrent, &Acurrent, &Ccurrent);
2847:../user/source/DLT645.c ****                 else if ((Bcurrent.value >= Ccurrent.value) && (Ccurrent.value >= Acurrent.value))
2848:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Bcurrent, &Ccurrent, &Acurrent);
2849:../user/source/DLT645.c ****                 else if ((Ccurrent.value >= Acurrent.value) && (Acurrent.value >= Bcurrent.value))
2850:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Ccurrent, &Acurrent, &Bcurrent);
2851:../user/source/DLT645.c ****                 else if ((Ccurrent.value >= Bcurrent.value) && (Bcurrent.value >= Acurrent.value))
2852:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Ccurrent, &Bcurrent, &Acurrent);
2853:../user/source/DLT645.c ****                 /*»ØĞ´µçÁ÷*/
2854:../user/source/DLT645.c ****                 vPut_Current(Acurrent,
2855:../user/source/DLT645.c ****                              &pucbuffer[10 + ID_length + 9 * n],
2856:../user/source/DLT645.c ****                              &pucbuffer[11 + ID_length + 9 * n],
2857:../user/source/DLT645.c ****                              &pucbuffer[12 + ID_length + 9 * n]);
2858:../user/source/DLT645.c **** 
2859:../user/source/DLT645.c ****                 vPut_Current(Bcurrent,
2860:../user/source/DLT645.c ****                              &pucbuffer[14 + ID_length + 9 * n],
2861:../user/source/DLT645.c ****                              &pucbuffer[15 + ID_length + 9 * n],
2862:../user/source/DLT645.c ****                              &pucbuffer[16 + ID_length + 9 * n]);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 110


2863:../user/source/DLT645.c **** 
2864:../user/source/DLT645.c ****                 vPut_Current(Ccurrent,
2865:../user/source/DLT645.c ****                              &pucbuffer[17 + ID_length + 9 * n],
2866:../user/source/DLT645.c ****                              &pucbuffer[18 + ID_length + 9 * n],
2867:../user/source/DLT645.c ****                              &pucbuffer[19 + ID_length + 9 * n]);
2868:../user/source/DLT645.c ****             }
2869:../user/source/DLT645.c ****         }
2870:../user/source/DLT645.c ****         pucbuffer[length + 10] = 0;
2871:../user/source/DLT645.c ****         for (i = 0; i < length + 10; i++)
2872:../user/source/DLT645.c ****         {
2873:../user/source/DLT645.c ****             pucbuffer[length + 10] += pucbuffer[i];
2874:../user/source/DLT645.c ****         }
2875:../user/source/DLT645.c ****         pucbuffer[length + 11] = 0x16;
2876:../user/source/DLT645.c **** #endif
2877:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
2878:../user/source/DLT645.c ****         n = (length - ID_length) / 9; //Êı¾İµã¸öÊı
2879:../user/source/DLT645.c ****         while (n--)
2880:../user/source/DLT645.c ****         {
2881:../user/source/DLT645.c ****             /*FFÎŞĞ§Êı¾İ*/
2882:../user/source/DLT645.c ****             if (pucbuffer[10 + ID_length + 9 * n] == 0x32 ||
2883:../user/source/DLT645.c ****                 pucbuffer[11 + ID_length + 9 * n] == 0x32 ||
2884:../user/source/DLT645.c ****                 pucbuffer[12 + ID_length + 9 * n] == 0x32 ||
2885:../user/source/DLT645.c ****                 pucbuffer[13 + ID_length + 9 * n] == 0x32 ||
2886:../user/source/DLT645.c ****                 pucbuffer[14 + ID_length + 9 * n] == 0x32 ||
2887:../user/source/DLT645.c ****                 pucbuffer[15 + ID_length + 9 * n] == 0x32 ||
2888:../user/source/DLT645.c ****                 pucbuffer[16 + ID_length + 9 * n] == 0x32 ||
2889:../user/source/DLT645.c ****                 pucbuffer[17 + ID_length + 9 * n] == 0x32 ||
2890:../user/source/DLT645.c ****                 pucbuffer[18 + ID_length + 9 * n] == 0x32)
2891:../user/source/DLT645.c ****                 continue;
2892:../user/source/DLT645.c **** 
2893:../user/source/DLT645.c ****             /*¶ÁÈ¡µçÁ÷*/
2894:../user/source/DLT645.c ****             vGet_Current(pucbuffer[10 + ID_length + 9 * n],
2895:../user/source/DLT645.c ****                          pucbuffer[11 + ID_length + 9 * n],
2896:../user/source/DLT645.c ****                          pucbuffer[12 + ID_length + 9 * n],
2897:../user/source/DLT645.c ****                          &Acurrent);
2898:../user/source/DLT645.c ****             vGet_Current(pucbuffer[13 + ID_length + 9 * n],
2899:../user/source/DLT645.c ****                          pucbuffer[14 + ID_length + 9 * n],
2900:../user/source/DLT645.c ****                          pucbuffer[15 + ID_length + 9 * n],
2901:../user/source/DLT645.c ****                          &Bcurrent);
2902:../user/source/DLT645.c ****             vGet_Current(pucbuffer[16 + ID_length + 9 * n],
2903:../user/source/DLT645.c ****                          pucbuffer[17 + ID_length + 9 * n],
2904:../user/source/DLT645.c ****                          pucbuffer[18 + ID_length + 9 * n],
2905:../user/source/DLT645.c ****                          &Ccurrent);
2906:../user/source/DLT645.c **** 
2907:../user/source/DLT645.c ****             ABCcurrent = Acurrent.value + Bcurrent.value + Ccurrent.value;
2908:../user/source/DLT645.c ****             if (ABCcurrent > TransFormer.CT2_CurrentLimit)
2909:../user/source/DLT645.c ****             {
2910:../user/source/DLT645.c ****                 Acurrent.value = TransFormer.CT2_CurrentLimit * Acurrent.value / ABCcurrent;
2911:../user/source/DLT645.c ****                 Bcurrent.value = TransFormer.CT2_CurrentLimit * Bcurrent.value / ABCcurrent;
2912:../user/source/DLT645.c ****                 Ccurrent.value = TransFormer.CT2_CurrentLimit * Ccurrent.value / ABCcurrent;
2913:../user/source/DLT645.c ****             }
2914:../user/source/DLT645.c ****             /*±£Ö¤Ã¿µ¥ÏàµçÁ÷²»ÖØÔØ*/
2915:../user/source/DLT645.c ****             Acurrent.value = (Acurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT
2916:../user/source/DLT645.c ****             Bcurrent.value = (Bcurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT
2917:../user/source/DLT645.c ****             Ccurrent.value = (Ccurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT
2918:../user/source/DLT645.c ****             /*»ØĞ´µçÁ÷*/
2919:../user/source/DLT645.c ****             vPut_Current(Acurrent,
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 111


2920:../user/source/DLT645.c ****                          &pucbuffer[10 + ID_length + 9 * n],
2921:../user/source/DLT645.c ****                          &pucbuffer[11 + ID_length + 9 * n],
2922:../user/source/DLT645.c ****                          &pucbuffer[12 + ID_length + 9 * n]);
2923:../user/source/DLT645.c ****             vPut_Current(Bcurrent,
2924:../user/source/DLT645.c ****                          &pucbuffer[13 + ID_length + 9 * n],
2925:../user/source/DLT645.c ****                          &pucbuffer[14 + ID_length + 9 * n],
2926:../user/source/DLT645.c ****                          &pucbuffer[15 + ID_length + 9 * n]);
2927:../user/source/DLT645.c ****             vPut_Current(Ccurrent,
2928:../user/source/DLT645.c ****                          &pucbuffer[16 + ID_length + 9 * n],
2929:../user/source/DLT645.c ****                          &pucbuffer[17 + ID_length + 9 * n],
2930:../user/source/DLT645.c ****                          &pucbuffer[18 + ID_length + 9 * n]);
2931:../user/source/DLT645.c ****         }
2932:../user/source/DLT645.c ****         pucbuffer[length + 10] = 0;
2933:../user/source/DLT645.c ****         for (i = 0; i < length + 10; i++)
2934:../user/source/DLT645.c ****         {
2935:../user/source/DLT645.c ****             pucbuffer[length + 10] += pucbuffer[i];
2936:../user/source/DLT645.c ****         }
2937:../user/source/DLT645.c ****         pucbuffer[length + 11] = 0x16;
2938:../user/source/DLT645.c **** #endif
2939:../user/source/DLT645.c ****         break;
2940:../user/source/DLT645.c ****     default:
2941:../user/source/DLT645.c ****         break;
2942:../user/source/DLT645.c ****     }
2943:../user/source/DLT645.c **** }
2944:../user/source/DLT645.c **** 
2945:../user/source/DLT645.c **** /*
2946:../user/source/DLT645.c **** ½­Î÷£º01
2947:../user/source/DLT645.c **** É½¶«£º02
2948:../user/source/DLT645.c **** ÖØÇì£º03
2949:../user/source/DLT645.c **** */
2950:../user/source/DLT645.c **** void vRead_Version(uint8_t *pucbuffer)
2951:../user/source/DLT645.c **** {
 3146              		.loc 1 2951 0
 3147              		.cfi_startproc
 3148              		@ args = 0, pretend = 0, frame = 0
 3149              		@ frame_needed = 0, uses_anonymous_args = 0
 3150              	.LVL384:
2952:../user/source/DLT645.c ****     uint8_t i;
2953:../user/source/DLT645.c ****     pucbuffer[8] = 0x91;
 3151              		.loc 1 2953 0
 3152 0000 9123     		movs	r3, #145
 3153 0002 0372     		strb	r3, [r0, #8]
2954:../user/source/DLT645.c ****     pucbuffer[9] = 0x08;
 3154              		.loc 1 2954 0
 3155 0004 0823     		movs	r3, #8
 3156 0006 4372     		strb	r3, [r0, #9]
2955:../user/source/DLT645.c ****     pucbuffer[14] = 0x03; //µØÇø
 3157              		.loc 1 2955 0
 3158 0008 0323     		movs	r3, #3
 3159 000a 8373     		strb	r3, [r0, #14]
2956:../user/source/DLT645.c ****     pucbuffer[15] = 0x05; //ÈÕÔÂÄê
 3160              		.loc 1 2956 0
 3161 000c 0523     		movs	r3, #5
 3162 000e C373     		strb	r3, [r0, #15]
2957:../user/source/DLT645.c ****     pucbuffer[16] = 0x11;
 3163              		.loc 1 2957 0
 3164 0010 1123     		movs	r3, #17
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 112


 3165 0012 0374     		strb	r3, [r0, #16]
2958:../user/source/DLT645.c ****     pucbuffer[17] = 0x18;
 3166              		.loc 1 2958 0
 3167 0014 1823     		movs	r3, #24
 3168 0016 4374     		strb	r3, [r0, #17]
2959:../user/source/DLT645.c ****     pucbuffer[18] = 0;
 3169              		.loc 1 2959 0
 3170 0018 0023     		movs	r3, #0
 3171 001a 8374     		strb	r3, [r0, #18]
 3172              	.LVL385:
2960:../user/source/DLT645.c ****     for (i = 0; i < 18; i++)
 3173              		.loc 1 2960 0
 3174 001c 05E0     		b	.L207
 3175              	.LVL386:
 3176              	.L208:
2961:../user/source/DLT645.c ****     {
2962:../user/source/DLT645.c ****         pucbuffer[18] += pucbuffer[i];
 3177              		.loc 1 2962 0 discriminator 3
 3178 001e C15C     		ldrb	r1, [r0, r3]	@ zero_extendqisi2
 3179 0020 827C     		ldrb	r2, [r0, #18]	@ zero_extendqisi2
 3180 0022 0A44     		add	r2, r2, r1
 3181 0024 8274     		strb	r2, [r0, #18]
2960:../user/source/DLT645.c ****     for (i = 0; i < 18; i++)
 3182              		.loc 1 2960 0 discriminator 3
 3183 0026 0133     		adds	r3, r3, #1
 3184              	.LVL387:
 3185 0028 DBB2     		uxtb	r3, r3
 3186              	.LVL388:
 3187              	.L207:
2960:../user/source/DLT645.c ****     for (i = 0; i < 18; i++)
 3188              		.loc 1 2960 0 is_stmt 0 discriminator 1
 3189 002a 112B     		cmp	r3, #17
 3190 002c F7D9     		bls	.L208
2951:../user/source/DLT645.c ****     uint8_t i;
 3191              		.loc 1 2951 0 is_stmt 1
 3192 002e 10B5     		push	{r4, lr}
 3193              	.LCFI33:
 3194              		.cfi_def_cfa_offset 8
 3195              		.cfi_offset 4, -8
 3196              		.cfi_offset 14, -4
2963:../user/source/DLT645.c ****     }
2964:../user/source/DLT645.c ****     pucbuffer[19] = 0x16;
 3197              		.loc 1 2964 0
 3198 0030 1623     		movs	r3, #22
 3199              	.LVL389:
 3200 0032 C374     		strb	r3, [r0, #19]
2965:../user/source/DLT645.c ****     uc645DataDomainLength = 8;
 3201              		.loc 1 2965 0
 3202 0034 0822     		movs	r2, #8
 3203 0036 074B     		ldr	r3, .L211
 3204 0038 1A70     		strb	r2, [r3]
2966:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, &ucDrv_Buf_Uart3_Snd, 20);
 3205              		.loc 1 2966 0
 3206 003a 074C     		ldr	r4, .L211+4
 3207 003c 1422     		movs	r2, #20
 3208 003e 2146     		mov	r1, r4
 3209 0040 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 113


 3210              	.LVL390:
2967:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 3211              		.loc 1 2967 0
 3212 0044 2046     		mov	r0, r4
 3213 0046 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3214              	.LVL391:
 3215 004a 10B9     		cbnz	r0, .L206
2968:../user/source/DLT645.c ****     {
2969:../user/source/DLT645.c ****         Uart_DataPut(USART3);
 3216              		.loc 1 2969 0
 3217 004c 0348     		ldr	r0, .L211+8
 3218 004e FFF7FEFF 		bl	Uart_DataPut
 3219              	.LVL392:
 3220              	.L206:
 3221 0052 10BD     		pop	{r4, pc}
 3222              	.L212:
 3223              		.align	2
 3224              	.L211:
 3225 0054 00000000 		.word	.LANCHOR0
 3226 0058 00000000 		.word	ucDrv_Buf_Uart3_Snd
 3227 005c 00480040 		.word	1073760256
 3228              		.cfi_endproc
 3229              	.LFE163:
 3231              		.section	.text.vEnergy_Modify_RaitoSet,"ax",%progbits
 3232              		.align	2
 3233              		.global	vEnergy_Modify_RaitoSet
 3234              		.thumb
 3235              		.thumb_func
 3237              	vEnergy_Modify_RaitoSet:
 3238              	.LFB153:
2273:../user/source/DLT645.c ****     uint8_t ratio;
 3239              		.loc 1 2273 0
 3240              		.cfi_startproc
 3241              		@ args = 0, pretend = 0, frame = 0
 3242              		@ frame_needed = 0, uses_anonymous_args = 0
 3243              	.LVL393:
 3244 0000 70B5     		push	{r4, r5, r6, lr}
 3245              	.LCFI34:
 3246              		.cfi_def_cfa_offset 16
 3247              		.cfi_offset 4, -16
 3248              		.cfi_offset 5, -12
 3249              		.cfi_offset 6, -8
 3250              		.cfi_offset 14, -4
 3251 0002 0446     		mov	r4, r0
2280:../user/source/DLT645.c ****     ratioValid = (ratio > 0 && ratio <= 255);
 3252              		.loc 1 2280 0
 3253 0004 817B     		ldrb	r1, [r0, #14]	@ zero_extendqisi2
 3254 0006 0809     		lsrs	r0, r1, #4
 3255              	.LVL394:
 3256 0008 E27B     		ldrb	r2, [r4, #15]	@ zero_extendqisi2
 3257 000a 1509     		lsrs	r5, r2, #4
 3258 000c 05EB8505 		add	r5, r5, r5, lsl #2
 3259 0010 6B00     		lsls	r3, r5, #1
 3260 0012 02F00F02 		and	r2, r2, #15
 3261 0016 1344     		add	r3, r3, r2
 3262 0018 00EB8002 		add	r2, r0, r0, lsl #2
 3263 001c 5000     		lsls	r0, r2, #1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 114


 3264 001e 03EB8303 		add	r3, r3, r3, lsl #2
 3265 0022 03EB8303 		add	r3, r3, r3, lsl #2
 3266 0026 9A00     		lsls	r2, r3, #2
 3267 0028 8318     		adds	r3, r0, r2
 3268 002a 01F00F01 		and	r1, r1, #15
 3269 002e 0B44     		add	r3, r3, r1
 3270              	.LVL395:
2282:../user/source/DLT645.c ****     {
 3271              		.loc 1 2282 0
 3272 0030 13F0FF05 		ands	r5, r3, #255
 3273 0034 11D0     		beq	.L214
2284:../user/source/DLT645.c ****         ucDayfrozen_Modify_Ratio = ratio;
 3274              		.loc 1 2284 0
 3275 0036 194E     		ldr	r6, .L221
 3276 0038 2946     		mov	r1, r5
 3277 003a 3046     		mov	r0, r6
 3278 003c FFF7FEFF 		bl	Flash_Write_Word
 3279              	.LVL396:
2285:../user/source/DLT645.c ****         if (EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR) == ratio)
 3280              		.loc 1 2285 0
 3281 0040 174B     		ldr	r3, .L221+4
 3282 0042 1D70     		strb	r5, [r3]
2286:../user/source/DLT645.c ****         {
 3283              		.loc 1 2286 0
 3284 0044 3046     		mov	r0, r6
 3285 0046 FFF7FEFF 		bl	EEProm_Read
 3286              	.LVL397:
 3287 004a 8542     		cmp	r5, r0
 3288 004c 02D1     		bne	.L215
2288:../user/source/DLT645.c ****         }
 3289              		.loc 1 2288 0
 3290 004e 9423     		movs	r3, #148
 3291 0050 2372     		strb	r3, [r4, #8]
 3292 0052 04E0     		b	.L216
 3293              	.L215:
2292:../user/source/DLT645.c ****         }
 3294              		.loc 1 2292 0
 3295 0054 D423     		movs	r3, #212
 3296 0056 2372     		strb	r3, [r4, #8]
 3297 0058 01E0     		b	.L216
 3298              	.LVL398:
 3299              	.L214:
2297:../user/source/DLT645.c ****     }
 3300              		.loc 1 2297 0
 3301 005a D423     		movs	r3, #212
 3302              	.LVL399:
 3303 005c 2372     		strb	r3, [r4, #8]
 3304              	.LVL400:
 3305              	.L216:
2299:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 3306              		.loc 1 2299 0
 3307 005e 0023     		movs	r3, #0
 3308 0060 6372     		strb	r3, [r4, #9]
2300:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 3309              		.loc 1 2300 0
 3310 0062 A372     		strb	r3, [r4, #10]
 3311              	.LVL401:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 115


2301:../user/source/DLT645.c ****     {
 3312              		.loc 1 2301 0
 3313 0064 05E0     		b	.L217
 3314              	.LVL402:
 3315              	.L218:
2303:../user/source/DLT645.c ****     }
 3316              		.loc 1 2303 0 discriminator 3
 3317 0066 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3318 0068 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 3319 006a 0A44     		add	r2, r2, r1
 3320 006c A272     		strb	r2, [r4, #10]
2301:../user/source/DLT645.c ****     {
 3321              		.loc 1 2301 0 discriminator 3
 3322 006e 0133     		adds	r3, r3, #1
 3323              	.LVL403:
 3324 0070 9BB2     		uxth	r3, r3
 3325              	.LVL404:
 3326              	.L217:
2301:../user/source/DLT645.c ****     {
 3327              		.loc 1 2301 0 is_stmt 0 discriminator 1
 3328 0072 092B     		cmp	r3, #9
 3329 0074 F7D9     		bls	.L218
2305:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 3330              		.loc 1 2305 0 is_stmt 1
 3331 0076 1623     		movs	r3, #22
 3332              	.LVL405:
 3333 0078 E372     		strb	r3, [r4, #11]
2307:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
 3334              		.loc 1 2307 0
 3335 007a 0022     		movs	r2, #0
 3336 007c 094B     		ldr	r3, .L221+8
 3337 007e 1A70     		strb	r2, [r3]
2308:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 3338              		.loc 1 2308 0
 3339 0080 094D     		ldr	r5, .L221+12
 3340 0082 0C22     		movs	r2, #12
 3341 0084 2946     		mov	r1, r5
 3342 0086 2046     		mov	r0, r4
 3343 0088 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3344              	.LVL406:
2309:../user/source/DLT645.c ****     {
 3345              		.loc 1 2309 0
 3346 008c 2846     		mov	r0, r5
 3347 008e FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3348              	.LVL407:
 3349 0092 10B9     		cbnz	r0, .L213
2311:../user/source/DLT645.c ****     }
 3350              		.loc 1 2311 0
 3351 0094 0548     		ldr	r0, .L221+16
 3352 0096 FFF7FEFF 		bl	Uart_DataPut
 3353              	.LVL408:
 3354              	.L213:
 3355 009a 70BD     		pop	{r4, r5, r6, pc}
 3356              	.LVL409:
 3357              	.L222:
 3358              		.align	2
 3359              	.L221:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 116


 3360 009c 101F0308 		.word	134422288
 3361 00a0 00000000 		.word	ucDayfrozen_Modify_Ratio
 3362 00a4 00000000 		.word	.LANCHOR0
 3363 00a8 00000000 		.word	ucDrv_Buf_Uart3_Snd
 3364 00ac 00480040 		.word	1073760256
 3365              		.cfi_endproc
 3366              	.LFE153:
 3368              		.section	.text.vVoltage_SetMinValue,"ax",%progbits
 3369              		.align	2
 3370              		.global	vVoltage_SetMinValue
 3371              		.thumb
 3372              		.thumb_func
 3374              	vVoltage_SetMinValue:
 3375              	.LFB158:
2546:../user/source/DLT645.c ****     int VMIN = 0;
 3376              		.loc 1 2546 0
 3377              		.cfi_startproc
 3378              		@ args = 0, pretend = 0, frame = 0
 3379              		@ frame_needed = 0, uses_anonymous_args = 0
 3380              	.LVL410:
 3381 0000 70B5     		push	{r4, r5, r6, lr}
 3382              	.LCFI35:
 3383              		.cfi_def_cfa_offset 16
 3384              		.cfi_offset 4, -16
 3385              		.cfi_offset 5, -12
 3386              		.cfi_offset 6, -8
 3387              		.cfi_offset 14, -4
 3388 0002 0446     		mov	r4, r0
 3389              	.LVL411:
2549:../user/source/DLT645.c ****     if (VMIN < 2200)
 3390              		.loc 1 2549 0
 3391 0004 857B     		ldrb	r5, [r0, #14]	@ zero_extendqisi2
 3392 0006 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 3393 0008 2846     		mov	r0, r5
 3394              	.LVL412:
 3395 000a FFF7FEFF 		bl	Get_Voltage
 3396              	.LVL413:
2550:../user/source/DLT645.c ****     {
 3397              		.loc 1 2550 0
 3398 000e 40F69703 		movw	r3, #2199
 3399 0012 9842     		cmp	r0, r3
 3400 0014 1CDC     		bgt	.L224
2552:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN1_Addr, pucBuffer[14]);
 3401              		.loc 1 2552 0
 3402 0016 174B     		ldr	r3, .L230
 3403 0018 1860     		str	r0, [r3]
2553:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN2_Addr, pucBuffer[15]);
 3404              		.loc 1 2553 0
 3405 001a 174E     		ldr	r6, .L230+4
 3406 001c 2946     		mov	r1, r5
 3407 001e 3046     		mov	r0, r6
 3408              	.LVL414:
 3409 0020 FFF7FEFF 		bl	Flash_Write_Word
 3410              	.LVL415:
2554:../user/source/DLT645.c ****         if ((EEProm_Read(FLASH_VMIN1_Addr) == pucBuffer[14]) &&
 3411              		.loc 1 2554 0
 3412 0024 E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 117


 3413 0026 1548     		ldr	r0, .L230+8
 3414 0028 FFF7FEFF 		bl	Flash_Write_Word
 3415              	.LVL416:
2555:../user/source/DLT645.c ****             (EEProm_Read(FLASH_VMIN2_Addr) == pucBuffer[15]))
 3416              		.loc 1 2555 0
 3417 002c 3046     		mov	r0, r6
 3418 002e FFF7FEFF 		bl	EEProm_Read
 3419              	.LVL417:
 3420 0032 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 3421 0034 9842     		cmp	r0, r3
 3422 0036 08D1     		bne	.L225
2556:../user/source/DLT645.c ****         {
 3423              		.loc 1 2556 0 discriminator 1
 3424 0038 1048     		ldr	r0, .L230+8
 3425 003a FFF7FEFF 		bl	EEProm_Read
 3426              	.LVL418:
 3427 003e E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
2555:../user/source/DLT645.c ****             (EEProm_Read(FLASH_VMIN2_Addr) == pucBuffer[15]))
 3428              		.loc 1 2555 0 discriminator 1
 3429 0040 9842     		cmp	r0, r3
 3430 0042 02D1     		bne	.L225
2558:../user/source/DLT645.c ****         }
 3431              		.loc 1 2558 0
 3432 0044 9423     		movs	r3, #148
 3433 0046 2372     		strb	r3, [r4, #8]
 3434 0048 04E0     		b	.L226
 3435              	.L225:
2562:../user/source/DLT645.c ****         }
 3436              		.loc 1 2562 0
 3437 004a D423     		movs	r3, #212
 3438 004c 2372     		strb	r3, [r4, #8]
 3439 004e 01E0     		b	.L226
 3440              	.LVL419:
 3441              	.L224:
2567:../user/source/DLT645.c ****     }
 3442              		.loc 1 2567 0
 3443 0050 D423     		movs	r3, #212
 3444 0052 2372     		strb	r3, [r4, #8]
 3445              	.LVL420:
 3446              	.L226:
2569:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 3447              		.loc 1 2569 0
 3448 0054 0023     		movs	r3, #0
 3449 0056 6372     		strb	r3, [r4, #9]
2570:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 3450              		.loc 1 2570 0
 3451 0058 A372     		strb	r3, [r4, #10]
2571:../user/source/DLT645.c ****     {
 3452              		.loc 1 2571 0
 3453 005a 05E0     		b	.L227
 3454              	.LVL421:
 3455              	.L228:
2573:../user/source/DLT645.c ****     }
 3456              		.loc 1 2573 0 discriminator 3
 3457 005c E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3458 005e A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 3459 0060 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 118


 3460 0062 A272     		strb	r2, [r4, #10]
2571:../user/source/DLT645.c ****     {
 3461              		.loc 1 2571 0 discriminator 3
 3462 0064 0133     		adds	r3, r3, #1
 3463              	.LVL422:
 3464 0066 9BB2     		uxth	r3, r3
 3465              	.LVL423:
 3466              	.L227:
2571:../user/source/DLT645.c ****     {
 3467              		.loc 1 2571 0 is_stmt 0 discriminator 1
 3468 0068 092B     		cmp	r3, #9
 3469 006a F7D9     		bls	.L228
2575:../user/source/DLT645.c **** #ifdef ENABLE_INFR
 3470              		.loc 1 2575 0 is_stmt 1
 3471 006c 1623     		movs	r3, #22
 3472              	.LVL424:
 3473 006e E372     		strb	r3, [r4, #11]
 3474 0070 70BD     		pop	{r4, r5, r6, pc}
 3475              	.LVL425:
 3476              	.L231:
 3477 0072 00BF     		.align	2
 3478              	.L230:
 3479 0074 00000000 		.word	Voltage_MIN
 3480 0078 081F0308 		.word	134422280
 3481 007c 0C1F0308 		.word	134422284
 3482              		.cfi_endproc
 3483              	.LFE158:
 3485              		.section	.text.vEnergy_Modify_ReadValue,"ax",%progbits
 3486              		.align	2
 3487              		.global	vEnergy_Modify_ReadValue
 3488              		.thumb
 3489              		.thumb_func
 3491              	vEnergy_Modify_ReadValue:
 3492              	.LFB156:
2444:../user/source/DLT645.c ****     uint8_t i;
 3493              		.loc 1 2444 0
 3494              		.cfi_startproc
 3495              		@ args = 0, pretend = 0, frame = 0
 3496              		@ frame_needed = 0, uses_anonymous_args = 0
 3497              	.LVL426:
 3498 0000 70B5     		push	{r4, r5, r6, lr}
 3499              	.LCFI36:
 3500              		.cfi_def_cfa_offset 16
 3501              		.cfi_offset 4, -16
 3502              		.cfi_offset 5, -12
 3503              		.cfi_offset 6, -8
 3504              		.cfi_offset 14, -4
 3505 0002 82B0     		sub	sp, sp, #8
 3506              	.LCFI37:
 3507              		.cfi_def_cfa_offset 24
 3508 0004 0446     		mov	r4, r0
2450:../user/source/DLT645.c ****     pucbuffer[9] = 0x0C;
 3509              		.loc 1 2450 0
 3510 0006 9123     		movs	r3, #145
 3511 0008 0372     		strb	r3, [r0, #8]
2451:../user/source/DLT645.c **** 
 3512              		.loc 1 2451 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 119


 3513 000a 0C23     		movs	r3, #12
 3514 000c 4372     		strb	r3, [r0, #9]
2454:../user/source/DLT645.c ****     modifiedValue = Flash_Read_Word(FLASH_MODIFIED_1DAYFROZEN_ADDR + 4);
 3515              		.loc 1 2454 0
 3516 000e 2348     		ldr	r0, .L241
 3517              	.LVL427:
 3518 0010 FFF7FEFF 		bl	Flash_Read_Word
 3519              	.LVL428:
 3520 0014 0646     		mov	r6, r0
 3521              	.LVL429:
2455:../user/source/DLT645.c ****     /*ÖÕ¶ËµÚÒ»´ÎÊ¹ÓÃ*/
 3522              		.loc 1 2455 0
 3523 0016 2248     		ldr	r0, .L241+4
 3524              	.LVL430:
 3525 0018 FFF7FEFF 		bl	Flash_Read_Word
 3526              	.LVL431:
 3527 001c 0546     		mov	r5, r0
 3528              	.LVL432:
2457:../user/source/DLT645.c ****     {
 3529              		.loc 1 2457 0
 3530 001e B6F1FF3F 		cmp	r6, #-1
 3531 0022 00D1     		bne	.L233
2459:../user/source/DLT645.c ****     }
 3532              		.loc 1 2459 0
 3533 0024 0026     		movs	r6, #0
 3534              	.LVL433:
 3535              	.L233:
2461:../user/source/DLT645.c ****     if (modifiedValue == 0XFFFFFFFF)
 3536              		.loc 1 2461 0
 3537 0026 04F11103 		add	r3, r4, #17
 3538 002a 0093     		str	r3, [sp]
 3539 002c 04F11003 		add	r3, r4, #16
 3540 0030 04F10F02 		add	r2, r4, #15
 3541 0034 04F10E01 		add	r1, r4, #14
 3542 0038 3046     		mov	r0, r6
 3543              	.LVL434:
 3544 003a FFF7FEFF 		bl	Fill_Energy
 3545              	.LVL435:
2462:../user/source/DLT645.c ****     {
 3546              		.loc 1 2462 0
 3547 003e B5F1FF3F 		cmp	r5, #-1
 3548 0042 00D1     		bne	.L234
2464:../user/source/DLT645.c ****     }
 3549              		.loc 1 2464 0
 3550 0044 0025     		movs	r5, #0
 3551              	.LVL436:
 3552              	.L234:
2466:../user/source/DLT645.c ****     pucbuffer[22] = 0;
 3553              		.loc 1 2466 0
 3554 0046 04F11503 		add	r3, r4, #21
 3555 004a 0093     		str	r3, [sp]
 3556 004c 04F11403 		add	r3, r4, #20
 3557 0050 04F11302 		add	r2, r4, #19
 3558 0054 04F11201 		add	r1, r4, #18
 3559 0058 2846     		mov	r0, r5
 3560 005a FFF7FEFF 		bl	Fill_Energy
 3561              	.LVL437:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 120


2467:../user/source/DLT645.c ****     for (i = 0; i < 22; i++)
 3562              		.loc 1 2467 0
 3563 005e 0023     		movs	r3, #0
 3564 0060 A375     		strb	r3, [r4, #22]
 3565              	.LVL438:
2468:../user/source/DLT645.c ****     {
 3566              		.loc 1 2468 0
 3567 0062 05E0     		b	.L235
 3568              	.LVL439:
 3569              	.L236:
2470:../user/source/DLT645.c ****     }
 3570              		.loc 1 2470 0 discriminator 3
 3571 0064 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3572 0066 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
 3573 0068 0A44     		add	r2, r2, r1
 3574 006a A275     		strb	r2, [r4, #22]
2468:../user/source/DLT645.c ****     {
 3575              		.loc 1 2468 0 discriminator 3
 3576 006c 0133     		adds	r3, r3, #1
 3577              	.LVL440:
 3578 006e DBB2     		uxtb	r3, r3
 3579              	.LVL441:
 3580              	.L235:
2468:../user/source/DLT645.c ****     {
 3581              		.loc 1 2468 0 is_stmt 0 discriminator 1
 3582 0070 152B     		cmp	r3, #21
 3583 0072 F7D9     		bls	.L236
2472:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 3584              		.loc 1 2472 0 is_stmt 1
 3585 0074 1623     		movs	r3, #22
 3586              	.LVL442:
 3587 0076 E375     		strb	r3, [r4, #23]
2474:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, &ucDrv_Buf_Uart3_Snd, 24);
 3588              		.loc 1 2474 0
 3589 0078 0022     		movs	r2, #0
 3590 007a 0A4B     		ldr	r3, .L241+8
 3591 007c 1A70     		strb	r2, [r3]
2475:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 3592              		.loc 1 2475 0
 3593 007e 0A4D     		ldr	r5, .L241+12
 3594              	.LVL443:
 3595 0080 1822     		movs	r2, #24
 3596 0082 2946     		mov	r1, r5
 3597 0084 2046     		mov	r0, r4
 3598 0086 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3599              	.LVL444:
2476:../user/source/DLT645.c ****     {
 3600              		.loc 1 2476 0
 3601 008a 2846     		mov	r0, r5
 3602 008c FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3603              	.LVL445:
 3604 0090 10B9     		cbnz	r0, .L232
2478:../user/source/DLT645.c ****     }
 3605              		.loc 1 2478 0
 3606 0092 0648     		ldr	r0, .L241+16
 3607 0094 FFF7FEFF 		bl	Uart_DataPut
 3608              	.LVL446:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 121


 3609              	.L232:
2489:../user/source/DLT645.c **** 
 3610              		.loc 1 2489 0
 3611 0098 02B0     		add	sp, sp, #8
 3612              	.LCFI38:
 3613              		.cfi_def_cfa_offset 16
 3614              		@ sp needed
 3615 009a 70BD     		pop	{r4, r5, r6, pc}
 3616              	.LVL447:
 3617              	.L242:
 3618              		.align	2
 3619              	.L241:
 3620 009c 04200308 		.word	134422532
 3621 00a0 40200308 		.word	134422592
 3622 00a4 00000000 		.word	.LANCHOR0
 3623 00a8 00000000 		.word	ucDrv_Buf_Uart3_Snd
 3624 00ac 00480040 		.word	1073760256
 3625              		.cfi_endproc
 3626              	.LFE156:
 3628              		.section	.text.vVoltage_SetMaxValue,"ax",%progbits
 3629              		.align	2
 3630              		.global	vVoltage_SetMaxValue
 3631              		.thumb
 3632              		.thumb_func
 3634              	vVoltage_SetMaxValue:
 3635              	.LFB157:
2499:../user/source/DLT645.c ****     int VMAX = 0;
 3636              		.loc 1 2499 0
 3637              		.cfi_startproc
 3638              		@ args = 0, pretend = 0, frame = 0
 3639              		@ frame_needed = 0, uses_anonymous_args = 0
 3640              	.LVL448:
 3641 0000 70B5     		push	{r4, r5, r6, lr}
 3642              	.LCFI39:
 3643              		.cfi_def_cfa_offset 16
 3644              		.cfi_offset 4, -16
 3645              		.cfi_offset 5, -12
 3646              		.cfi_offset 6, -8
 3647              		.cfi_offset 14, -4
 3648 0002 0446     		mov	r4, r0
 3649              	.LVL449:
2502:../user/source/DLT645.c ****     if (VMAX > 2200)
 3650              		.loc 1 2502 0
 3651 0004 857B     		ldrb	r5, [r0, #14]	@ zero_extendqisi2
 3652 0006 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 3653 0008 2846     		mov	r0, r5
 3654              	.LVL450:
 3655 000a FFF7FEFF 		bl	Get_Voltage
 3656              	.LVL451:
2503:../user/source/DLT645.c ****     {
 3657              		.loc 1 2503 0
 3658 000e 40F69803 		movw	r3, #2200
 3659 0012 9842     		cmp	r0, r3
 3660 0014 1EDD     		ble	.L244
2505:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX1_Addr, pucBuffer[14]);
 3661              		.loc 1 2505 0
 3662 0016 184B     		ldr	r3, .L250
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 122


 3663 0018 1860     		str	r0, [r3]
2506:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX2_Addr, pucBuffer[15]);
 3664              		.loc 1 2506 0
 3665 001a 184E     		ldr	r6, .L250+4
 3666 001c 2946     		mov	r1, r5
 3667 001e 3046     		mov	r0, r6
 3668              	.LVL452:
 3669 0020 FFF7FEFF 		bl	Flash_Write_Word
 3670              	.LVL453:
2507:../user/source/DLT645.c ****         if (((uint8_t)Flash_Read_Word(FLASH_VMAX1_Addr) == pucBuffer[14]) &&
 3671              		.loc 1 2507 0
 3672 0024 E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
 3673 0026 1648     		ldr	r0, .L250+8
 3674 0028 FFF7FEFF 		bl	Flash_Write_Word
 3675              	.LVL454:
2508:../user/source/DLT645.c ****             ((uint8_t)Flash_Read_Word(FLASH_VMAX2_Addr) == pucBuffer[15]))
 3676              		.loc 1 2508 0
 3677 002c 3046     		mov	r0, r6
 3678 002e FFF7FEFF 		bl	Flash_Read_Word
 3679              	.LVL455:
 3680 0032 C0B2     		uxtb	r0, r0
 3681 0034 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 3682 0036 9842     		cmp	r0, r3
 3683 0038 09D1     		bne	.L245
2509:../user/source/DLT645.c ****         {
 3684              		.loc 1 2509 0 discriminator 1
 3685 003a 1148     		ldr	r0, .L250+8
 3686 003c FFF7FEFF 		bl	Flash_Read_Word
 3687              	.LVL456:
 3688 0040 C0B2     		uxtb	r0, r0
 3689 0042 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
2508:../user/source/DLT645.c ****             ((uint8_t)Flash_Read_Word(FLASH_VMAX2_Addr) == pucBuffer[15]))
 3690              		.loc 1 2508 0 discriminator 1
 3691 0044 9842     		cmp	r0, r3
 3692 0046 02D1     		bne	.L245
2511:../user/source/DLT645.c ****         }
 3693              		.loc 1 2511 0
 3694 0048 9423     		movs	r3, #148
 3695 004a 2372     		strb	r3, [r4, #8]
 3696 004c 04E0     		b	.L246
 3697              	.L245:
2515:../user/source/DLT645.c ****         }
 3698              		.loc 1 2515 0
 3699 004e D423     		movs	r3, #212
 3700 0050 2372     		strb	r3, [r4, #8]
 3701 0052 01E0     		b	.L246
 3702              	.LVL457:
 3703              	.L244:
2520:../user/source/DLT645.c ****     }
 3704              		.loc 1 2520 0
 3705 0054 D423     		movs	r3, #212
 3706 0056 2372     		strb	r3, [r4, #8]
 3707              	.LVL458:
 3708              	.L246:
2522:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 3709              		.loc 1 2522 0
 3710 0058 0023     		movs	r3, #0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 123


 3711 005a 6372     		strb	r3, [r4, #9]
2523:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 3712              		.loc 1 2523 0
 3713 005c A372     		strb	r3, [r4, #10]
2524:../user/source/DLT645.c ****     {
 3714              		.loc 1 2524 0
 3715 005e 05E0     		b	.L247
 3716              	.LVL459:
 3717              	.L248:
2526:../user/source/DLT645.c ****     }
 3718              		.loc 1 2526 0 discriminator 3
 3719 0060 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3720 0062 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 3721 0064 0A44     		add	r2, r2, r1
 3722 0066 A272     		strb	r2, [r4, #10]
2524:../user/source/DLT645.c ****     {
 3723              		.loc 1 2524 0 discriminator 3
 3724 0068 0133     		adds	r3, r3, #1
 3725              	.LVL460:
 3726 006a 9BB2     		uxth	r3, r3
 3727              	.LVL461:
 3728              	.L247:
2524:../user/source/DLT645.c ****     {
 3729              		.loc 1 2524 0 is_stmt 0 discriminator 1
 3730 006c 092B     		cmp	r3, #9
 3731 006e F7D9     		bls	.L248
2528:../user/source/DLT645.c **** #ifdef ENABLE_INFR
 3732              		.loc 1 2528 0 is_stmt 1
 3733 0070 1623     		movs	r3, #22
 3734              	.LVL462:
 3735 0072 E372     		strb	r3, [r4, #11]
 3736 0074 70BD     		pop	{r4, r5, r6, pc}
 3737              	.LVL463:
 3738              	.L251:
 3739 0076 00BF     		.align	2
 3740              	.L250:
 3741 0078 00000000 		.word	Voltage_MAX
 3742 007c 001F0308 		.word	134422272
 3743 0080 041F0308 		.word	134422276
 3744              		.cfi_endproc
 3745              	.LFE157:
 3747              		.section	.text.vEnergy_Modify_AbleSet,"ax",%progbits
 3748              		.align	2
 3749              		.global	vEnergy_Modify_AbleSet
 3750              		.thumb
 3751              		.thumb_func
 3753              	vEnergy_Modify_AbleSet:
 3754              	.LFB152:
2213:../user/source/DLT645.c ****     uint16_t i;
 3755              		.loc 1 2213 0
 3756              		.cfi_startproc
 3757              		@ args = 0, pretend = 0, frame = 0
 3758              		@ frame_needed = 0, uses_anonymous_args = 0
 3759              	.LVL464:
 3760 0000 70B5     		push	{r4, r5, r6, lr}
 3761              	.LCFI40:
 3762              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 124


 3763              		.cfi_offset 4, -16
 3764              		.cfi_offset 5, -12
 3765              		.cfi_offset 6, -8
 3766              		.cfi_offset 14, -4
 3767 0002 0446     		mov	r4, r0
2215:../user/source/DLT645.c ****     {
 3768              		.loc 1 2215 0
 3769 0004 817B     		ldrb	r1, [r0, #14]	@ zero_extendqisi2
 3770 0006 FF29     		cmp	r1, #255
 3771 0008 10D1     		bne	.L253
2217:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZENCHANGESTATE_ADDR, Dayfrozen_Change_State);
 3772              		.loc 1 2217 0
 3773 000a 264D     		ldr	r5, .L264
 3774 000c 2970     		strb	r1, [r5]
2218:../user/source/DLT645.c ****         pucBuffer[8] = (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == Dayfrozen_Change_State
 3775              		.loc 1 2218 0
 3776 000e 264E     		ldr	r6, .L264+4
 3777 0010 3046     		mov	r0, r6
 3778              	.LVL465:
 3779 0012 FFF7FEFF 		bl	Flash_Write_Word
 3780              	.LVL466:
2219:../user/source/DLT645.c ****                             ? 0x94
 3781              		.loc 1 2219 0
 3782 0016 3046     		mov	r0, r6
 3783 0018 FFF7FEFF 		bl	EEProm_Read
 3784              	.LVL467:
 3785 001c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 3786 001e 9842     		cmp	r0, r3
 3787 0020 01D1     		bne	.L261
 3788 0022 9423     		movs	r3, #148
 3789 0024 00E0     		b	.L254
 3790              	.L261:
 3791 0026 D423     		movs	r3, #212
 3792              	.L254:
2219:../user/source/DLT645.c ****                             ? 0x94
 3793              		.loc 1 2219 0 is_stmt 0 discriminator 4
 3794 0028 2372     		strb	r3, [r4, #8]
 3795 002a 1BE0     		b	.L255
 3796              	.LVL468:
 3797              	.L253:
2223:../user/source/DLT645.c ****     {
 3798              		.loc 1 2223 0 is_stmt 1
 3799 002c C1B9     		cbnz	r1, .L256
2226:../user/source/DLT645.c ****         FLASH_ErasePage(FLASH_ENERGY_PAGE);
 3800              		.loc 1 2226 0
 3801 002e FFF7FEFF 		bl	FLASH_Unlock
 3802              	.LVL469:
2227:../user/source/DLT645.c ****         FLASH_Lock();
 3803              		.loc 1 2227 0
 3804 0032 1E48     		ldr	r0, .L264+8
 3805 0034 FFF7FEFF 		bl	FLASH_ErasePage
 3806              	.LVL470:
2228:../user/source/DLT645.c ****         Dayfrozen_Change_State = pucBuffer[14];
 3807              		.loc 1 2228 0
 3808 0038 FFF7FEFF 		bl	FLASH_Lock
 3809              	.LVL471:
2229:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZENCHANGESTATE_ADDR, Dayfrozen_Change_State);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 125


 3810              		.loc 1 2229 0
 3811 003c A17B     		ldrb	r1, [r4, #14]	@ zero_extendqisi2
 3812 003e 194D     		ldr	r5, .L264
 3813 0040 2970     		strb	r1, [r5]
2230:../user/source/DLT645.c ****         pucBuffer[8] = (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == Dayfrozen_Change_State
 3814              		.loc 1 2230 0
 3815 0042 194E     		ldr	r6, .L264+4
 3816 0044 3046     		mov	r0, r6
 3817 0046 FFF7FEFF 		bl	Flash_Write_Word
 3818              	.LVL472:
2231:../user/source/DLT645.c ****                             ? 0x94
 3819              		.loc 1 2231 0
 3820 004a 3046     		mov	r0, r6
 3821 004c FFF7FEFF 		bl	EEProm_Read
 3822              	.LVL473:
 3823 0050 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 3824 0052 9842     		cmp	r0, r3
 3825 0054 01D1     		bne	.L262
 3826 0056 9423     		movs	r3, #148
 3827 0058 00E0     		b	.L257
 3828              	.L262:
 3829 005a D423     		movs	r3, #212
 3830              	.L257:
2231:../user/source/DLT645.c ****                             ? 0x94
 3831              		.loc 1 2231 0 is_stmt 0 discriminator 4
 3832 005c 2372     		strb	r3, [r4, #8]
 3833 005e 01E0     		b	.L255
 3834              	.LVL474:
 3835              	.L256:
2237:../user/source/DLT645.c ****     }
 3836              		.loc 1 2237 0 is_stmt 1
 3837 0060 D423     		movs	r3, #212
 3838 0062 0372     		strb	r3, [r0, #8]
 3839              	.LVL475:
 3840              	.L255:
2239:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 3841              		.loc 1 2239 0
 3842 0064 0023     		movs	r3, #0
 3843 0066 6372     		strb	r3, [r4, #9]
2240:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 3844              		.loc 1 2240 0
 3845 0068 A372     		strb	r3, [r4, #10]
 3846              	.LVL476:
2241:../user/source/DLT645.c ****     {
 3847              		.loc 1 2241 0
 3848 006a 05E0     		b	.L258
 3849              	.LVL477:
 3850              	.L259:
2243:../user/source/DLT645.c ****     }
 3851              		.loc 1 2243 0 discriminator 3
 3852 006c E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3853 006e A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 3854 0070 0A44     		add	r2, r2, r1
 3855 0072 A272     		strb	r2, [r4, #10]
2241:../user/source/DLT645.c ****     {
 3856              		.loc 1 2241 0 discriminator 3
 3857 0074 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 126


 3858              	.LVL478:
 3859 0076 9BB2     		uxth	r3, r3
 3860              	.LVL479:
 3861              	.L258:
2241:../user/source/DLT645.c ****     {
 3862              		.loc 1 2241 0 is_stmt 0 discriminator 1
 3863 0078 092B     		cmp	r3, #9
 3864 007a F7D9     		bls	.L259
2245:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 3865              		.loc 1 2245 0 is_stmt 1
 3866 007c 1623     		movs	r3, #22
 3867              	.LVL480:
 3868 007e E372     		strb	r3, [r4, #11]
2247:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
 3869              		.loc 1 2247 0
 3870 0080 0022     		movs	r2, #0
 3871 0082 0B4B     		ldr	r3, .L264+12
 3872 0084 1A70     		strb	r2, [r3]
2248:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 3873              		.loc 1 2248 0
 3874 0086 0B4D     		ldr	r5, .L264+16
 3875 0088 0C22     		movs	r2, #12
 3876 008a 2946     		mov	r1, r5
 3877 008c 2046     		mov	r0, r4
 3878 008e FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3879              	.LVL481:
2249:../user/source/DLT645.c ****     {
 3880              		.loc 1 2249 0
 3881 0092 2846     		mov	r0, r5
 3882 0094 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3883              	.LVL482:
 3884 0098 10B9     		cbnz	r0, .L252
2251:../user/source/DLT645.c ****     }
 3885              		.loc 1 2251 0
 3886 009a 0748     		ldr	r0, .L264+20
 3887 009c FFF7FEFF 		bl	Uart_DataPut
 3888              	.LVL483:
 3889              	.L252:
 3890 00a0 70BD     		pop	{r4, r5, r6, pc}
 3891              	.LVL484:
 3892              	.L265:
 3893 00a2 00BF     		.align	2
 3894              	.L264:
 3895 00a4 00000000 		.word	.LANCHOR8
 3896 00a8 181F0308 		.word	134422296
 3897 00ac 00200308 		.word	134422528
 3898 00b0 00000000 		.word	.LANCHOR0
 3899 00b4 00000000 		.word	ucDrv_Buf_Uart3_Snd
 3900 00b8 00480040 		.word	1073760256
 3901              		.cfi_endproc
 3902              	.LFE152:
 3904              		.section	.text.vEnergy_Modify_Reset,"ax",%progbits
 3905              		.align	2
 3906              		.global	vEnergy_Modify_Reset
 3907              		.thumb
 3908              		.thumb_func
 3910              	vEnergy_Modify_Reset:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 127


 3911              	.LFB154:
2333:../user/source/DLT645.c ****     bool cmdValid;
 3912              		.loc 1 2333 0
 3913              		.cfi_startproc
 3914              		@ args = 0, pretend = 0, frame = 0
 3915              		@ frame_needed = 0, uses_anonymous_args = 0
 3916              	.LVL485:
 3917 0000 38B5     		push	{r3, r4, r5, lr}
 3918              	.LCFI41:
 3919              		.cfi_def_cfa_offset 16
 3920              		.cfi_offset 3, -16
 3921              		.cfi_offset 4, -12
 3922              		.cfi_offset 5, -8
 3923              		.cfi_offset 14, -4
 3924 0002 0446     		mov	r4, r0
2337:../user/source/DLT645.c ****     if (cmdValid)
 3925              		.loc 1 2337 0
 3926 0004 837B     		ldrb	r3, [r0, #14]	@ zero_extendqisi2
 3927              	.LVL486:
2338:../user/source/DLT645.c ****     {
 3928              		.loc 1 2338 0
 3929 0006 CBB9     		cbnz	r3, .L267
2341:../user/source/DLT645.c ****         Dayfrozen_Change_State = 0xff;
 3930              		.loc 1 2341 0
 3931 0008 1D4D     		ldr	r5, .L274
 3932 000a FF21     		movs	r1, #255
 3933 000c 2846     		mov	r0, r5
 3934              	.LVL487:
 3935 000e FFF7FEFF 		bl	Flash_Write_Word
 3936              	.LVL488:
2342:../user/source/DLT645.c ****         /*ÈÕ¶³½áĞŞ¸Ä±ÈÀıÉèÖÃÎª90*/
 3937              		.loc 1 2342 0
 3938 0012 FF22     		movs	r2, #255
 3939 0014 1B4B     		ldr	r3, .L274+4
 3940 0016 1A70     		strb	r2, [r3]
2347:../user/source/DLT645.c ****         FLASH_ErasePage(FLASH_ENERGY_PAGE);
 3941              		.loc 1 2347 0
 3942 0018 FFF7FEFF 		bl	FLASH_Unlock
 3943              	.LVL489:
2348:../user/source/DLT645.c ****         FLASH_Lock();
 3944              		.loc 1 2348 0
 3945 001c 1A48     		ldr	r0, .L274+8
 3946 001e FFF7FEFF 		bl	FLASH_ErasePage
 3947              	.LVL490:
2349:../user/source/DLT645.c ****         if ( //(EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR) == 90) &&
 3948              		.loc 1 2349 0
 3949 0022 FFF7FEFF 		bl	FLASH_Lock
 3950              	.LVL491:
2351:../user/source/DLT645.c ****         {
 3951              		.loc 1 2351 0
 3952 0026 2846     		mov	r0, r5
 3953 0028 FFF7FEFF 		bl	EEProm_Read
 3954              	.LVL492:
2350:../user/source/DLT645.c ****             (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == 0xff))
 3955              		.loc 1 2350 0
 3956 002c FF28     		cmp	r0, #255
 3957 002e 02D1     		bne	.L268
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 128


2353:../user/source/DLT645.c ****         }
 3958              		.loc 1 2353 0
 3959 0030 9423     		movs	r3, #148
 3960 0032 2372     		strb	r3, [r4, #8]
 3961 0034 04E0     		b	.L269
 3962              	.L268:
2357:../user/source/DLT645.c ****         }
 3963              		.loc 1 2357 0
 3964 0036 D423     		movs	r3, #212
 3965 0038 2372     		strb	r3, [r4, #8]
 3966 003a 01E0     		b	.L269
 3967              	.LVL493:
 3968              	.L267:
2362:../user/source/DLT645.c ****     }
 3969              		.loc 1 2362 0
 3970 003c D423     		movs	r3, #212
 3971              	.LVL494:
 3972 003e 0372     		strb	r3, [r0, #8]
 3973              	.LVL495:
 3974              	.L269:
2364:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 3975              		.loc 1 2364 0
 3976 0040 0023     		movs	r3, #0
 3977 0042 6372     		strb	r3, [r4, #9]
2365:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 3978              		.loc 1 2365 0
 3979 0044 A372     		strb	r3, [r4, #10]
 3980              	.LVL496:
2366:../user/source/DLT645.c ****     {
 3981              		.loc 1 2366 0
 3982 0046 05E0     		b	.L270
 3983              	.LVL497:
 3984              	.L271:
2368:../user/source/DLT645.c ****     }
 3985              		.loc 1 2368 0 discriminator 3
 3986 0048 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3987 004a A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 3988 004c 0A44     		add	r2, r2, r1
 3989 004e A272     		strb	r2, [r4, #10]
2366:../user/source/DLT645.c ****     {
 3990              		.loc 1 2366 0 discriminator 3
 3991 0050 0133     		adds	r3, r3, #1
 3992              	.LVL498:
 3993 0052 9BB2     		uxth	r3, r3
 3994              	.LVL499:
 3995              	.L270:
2366:../user/source/DLT645.c ****     {
 3996              		.loc 1 2366 0 is_stmt 0 discriminator 1
 3997 0054 092B     		cmp	r3, #9
 3998 0056 F7D9     		bls	.L271
2370:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 3999              		.loc 1 2370 0 is_stmt 1
 4000 0058 1623     		movs	r3, #22
 4001              	.LVL500:
 4002 005a E372     		strb	r3, [r4, #11]
2372:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, &ucDrv_Buf_Uart3_Snd, 12);
 4003              		.loc 1 2372 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 129


 4004 005c 0022     		movs	r2, #0
 4005 005e 0B4B     		ldr	r3, .L274+12
 4006 0060 1A70     		strb	r2, [r3]
2373:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(&ucDrv_Buf_Uart3_Snd))
 4007              		.loc 1 2373 0
 4008 0062 0B4D     		ldr	r5, .L274+16
 4009 0064 0C22     		movs	r2, #12
 4010 0066 2946     		mov	r1, r5
 4011 0068 2046     		mov	r0, r4
 4012 006a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4013              	.LVL501:
2374:../user/source/DLT645.c ****     {
 4014              		.loc 1 2374 0
 4015 006e 2846     		mov	r0, r5
 4016 0070 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4017              	.LVL502:
 4018 0074 10B9     		cbnz	r0, .L266
2376:../user/source/DLT645.c ****     }
 4019              		.loc 1 2376 0
 4020 0076 0748     		ldr	r0, .L274+20
 4021 0078 FFF7FEFF 		bl	Uart_DataPut
 4022              	.LVL503:
 4023              	.L266:
 4024 007c 38BD     		pop	{r3, r4, r5, pc}
 4025              	.LVL504:
 4026              	.L275:
 4027 007e 00BF     		.align	2
 4028              	.L274:
 4029 0080 181F0308 		.word	134422296
 4030 0084 00000000 		.word	.LANCHOR8
 4031 0088 00200308 		.word	134422528
 4032 008c 00000000 		.word	.LANCHOR0
 4033 0090 00000000 		.word	ucDrv_Buf_Uart3_Snd
 4034 0094 00480040 		.word	1073760256
 4035              		.cfi_endproc
 4036              	.LFE154:
 4038              		.section	.text.blRecvFrame,"ax",%progbits
 4039              		.align	2
 4040              		.global	blRecvFrame
 4041              		.thumb
 4042              		.thumb_func
 4044              	blRecvFrame:
 4045              	.LFB111:
 152:../user/source/DLT645.c ****     /*ÊÕÖ¡×´Ì¬*/
 4046              		.loc 1 152 0
 4047              		.cfi_startproc
 4048              		@ args = 0, pretend = 0, frame = 0
 4049              		@ frame_needed = 0, uses_anonymous_args = 0
 4050              	.LVL505:
 4051 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4052              	.LCFI42:
 4053              		.cfi_def_cfa_offset 24
 4054              		.cfi_offset 3, -24
 4055              		.cfi_offset 4, -20
 4056              		.cfi_offset 5, -16
 4057              		.cfi_offset 6, -12
 4058              		.cfi_offset 7, -8
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 130


 4059              		.cfi_offset 14, -4
 4060 0002 0646     		mov	r6, r0
 4061 0004 0D46     		mov	r5, r1
 154:../user/source/DLT645.c ****     {
 4062              		.loc 1 154 0
 4063 0006 3A4B     		ldr	r3, .L290
 4064 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4065 000a 012B     		cmp	r3, #1
 4066 000c 11D0     		beq	.L278
 4067 000e 13B1     		cbz	r3, .L279
 4068 0010 022B     		cmp	r3, #2
 4069 0012 41D0     		beq	.L280
 4070 0014 65E0     		b	.L288
 4071              	.L279:
 160:../user/source/DLT645.c ****         {
 4072              		.loc 1 160 0
 4073 0016 0122     		movs	r2, #1
 4074 0018 FFF7FEFF 		bl	ucDrv_Buf_GetBytes
 4075              	.LVL506:
 4076 001c 0446     		mov	r4, r0
 4077 001e 0028     		cmp	r0, #0
 4078 0020 64D0     		beq	.L277
 168:../user/source/DLT645.c ****             {
 4079              		.loc 1 168 0
 4080 0022 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4081 0024 682B     		cmp	r3, #104
 4082 0026 5ED1     		bne	.L286
 175:../user/source/DLT645.c ****                 blWordsCounterStatus = true;
 4083              		.loc 1 175 0
 4084 0028 0123     		movs	r3, #1
 4085 002a 314A     		ldr	r2, .L290
 4086 002c 1370     		strb	r3, [r2]
 176:../user/source/DLT645.c ****             }
 4087              		.loc 1 176 0
 4088 002e 314A     		ldr	r2, .L290+4
 4089 0030 1370     		strb	r3, [r2]
 4090              	.L278:
 183:../user/source/DLT645.c ****         {
 4091              		.loc 1 183 0
 4092 0032 0922     		movs	r2, #9
 4093 0034 691C     		adds	r1, r5, #1
 4094 0036 3046     		mov	r0, r6
 4095 0038 FFF7FEFF 		bl	ucDrv_Buf_GetBytes
 4096              	.LVL507:
 4097 003c 0746     		mov	r7, r0
 4098 003e 80B9     		cbnz	r0, .L281
 186:../user/source/DLT645.c ****             {
 4099              		.loc 1 186 0
 4100 0040 1421     		movs	r1, #20
 4101 0042 2D4B     		ldr	r3, .L290+8
 4102 0044 1888     		ldrh	r0, [r3]
 4103 0046 FFF7FEFF 		bl	blTime2_Update
 4104              	.LVL508:
 4105 004a 0446     		mov	r4, r0
 4106 004c 0028     		cmp	r0, #0
 4107 004e 4DD0     		beq	.L277
 189:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 131


 4108              		.loc 1 189 0
 4109 0050 0023     		movs	r3, #0
 4110 0052 274A     		ldr	r2, .L290
 4111 0054 1370     		strb	r3, [r2]
 190:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 4112              		.loc 1 190 0
 4113 0056 274A     		ldr	r2, .L290+4
 4114 0058 1370     		strb	r3, [r2]
 191:../user/source/DLT645.c ****             }
 4115              		.loc 1 191 0
 4116 005a 274A     		ldr	r2, .L290+8
 4117 005c 1380     		strh	r3, [r2]	@ movhi
 251:../user/source/DLT645.c **** }
 4118              		.loc 1 251 0
 4119 005e 3C46     		mov	r4, r7
 4120 0060 44E0     		b	.L277
 4121              	.L281:
 197:../user/source/DLT645.c ****             {
 4122              		.loc 1 197 0
 4123 0062 EB79     		ldrb	r3, [r5, #7]	@ zero_extendqisi2
 4124 0064 682B     		cmp	r3, #104
 4125 0066 04D1     		bne	.L282
 197:../user/source/DLT645.c ****             {
 4126              		.loc 1 197 0 is_stmt 0 discriminator 1
 4127 0068 6B7A     		ldrb	r3, [r5, #9]	@ zero_extendqisi2
 4128 006a 03F10C02 		add	r2, r3, #12
 4129 006e FE2A     		cmp	r2, #254
 4130 0070 07DD     		ble	.L283
 4131              	.L282:
 199:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 4132              		.loc 1 199 0 is_stmt 1
 4133 0072 0024     		movs	r4, #0
 4134 0074 1E4B     		ldr	r3, .L290
 4135 0076 1C70     		strb	r4, [r3]
 200:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 4136              		.loc 1 200 0
 4137 0078 1E4B     		ldr	r3, .L290+4
 4138 007a 1C70     		strb	r4, [r3]
 201:../user/source/DLT645.c ****                 break;
 4139              		.loc 1 201 0
 4140 007c 1E4B     		ldr	r3, .L290+8
 4141 007e 1C80     		strh	r4, [r3]	@ movhi
 202:../user/source/DLT645.c ****             }
 4142              		.loc 1 202 0
 4143 0080 34E0     		b	.L277
 4144              	.L283:
 206:../user/source/DLT645.c ****                 ucRcvStatus = RCV_DATA2;                   //Ö¸ÏòÏÂÒ»²¿·Ö
 4145              		.loc 1 206 0
 4146 0082 1E4A     		ldr	r2, .L290+12
 4147 0084 1370     		strb	r3, [r2]
 207:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 4148              		.loc 1 207 0
 4149 0086 0222     		movs	r2, #2
 4150 0088 194B     		ldr	r3, .L290
 4151 008a 1A70     		strb	r2, [r3]
 209:../user/source/DLT645.c ****                 blWordsCounterStatus = true;
 4152              		.loc 1 209 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 132


 4153 008c 1A4B     		ldr	r3, .L290+8
 4154 008e 0022     		movs	r2, #0
 4155 0090 1A80     		strh	r2, [r3]	@ movhi
 210:../user/source/DLT645.c ****             }
 4156              		.loc 1 210 0
 4157 0092 0122     		movs	r2, #1
 4158 0094 174B     		ldr	r3, .L290+4
 4159 0096 1A70     		strb	r2, [r3]
 4160              	.L280:
 216:../user/source/DLT645.c ****         {                                                                    //¶ÁºóĞø×Ö½ÚÊ§°Ü£¬Ìø³ö
 4161              		.loc 1 216 0
 4162 0098 184B     		ldr	r3, .L290+12
 4163 009a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4164 009c 0232     		adds	r2, r2, #2
 4165 009e 05F10A01 		add	r1, r5, #10
 4166 00a2 3046     		mov	r0, r6
 4167 00a4 FFF7FEFF 		bl	ucDrv_Buf_GetBytes
 4168              	.LVL509:
 4169 00a8 0446     		mov	r4, r0
 4170 00aa 68B9     		cbnz	r0, .L284
 218:../user/source/DLT645.c ****             {                                                                //Èç¹û³¬Ê±£¬ÔòÖØĞÂÕÒ68
 4171              		.loc 1 218 0
 4172 00ac 1421     		movs	r1, #20
 4173 00ae 124B     		ldr	r3, .L290+8
 4174 00b0 1888     		ldrh	r0, [r3]
 4175 00b2 FFF7FEFF 		bl	blTime2_Update
 4176              	.LVL510:
 4177 00b6 C0B1     		cbz	r0, .L287
 220:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 4178              		.loc 1 220 0
 4179 00b8 0023     		movs	r3, #0
 4180 00ba 0D4A     		ldr	r2, .L290
 4181 00bc 1370     		strb	r3, [r2]
 221:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 4182              		.loc 1 221 0
 4183 00be 0D4A     		ldr	r2, .L290+4
 4184 00c0 1370     		strb	r3, [r2]
 222:../user/source/DLT645.c ****             }
 4185              		.loc 1 222 0
 4186 00c2 0D4A     		ldr	r2, .L290+8
 4187 00c4 1380     		strh	r3, [r2]	@ movhi
 4188 00c6 11E0     		b	.L277
 4189              	.L284:
 228:../user/source/DLT645.c ****             blWordsCounterStatus = false;
 4190              		.loc 1 228 0
 4191 00c8 0023     		movs	r3, #0
 4192 00ca 094A     		ldr	r2, .L290
 4193 00cc 1370     		strb	r3, [r2]
 229:../user/source/DLT645.c ****             uwTime2WordsCounter = 0;
 4194              		.loc 1 229 0
 4195 00ce 094A     		ldr	r2, .L290+4
 4196 00d0 1370     		strb	r3, [r2]
 230:../user/source/DLT645.c ****             if (dwCheckFrame(ucdata_buf) != OK_1)
 4197              		.loc 1 230 0
 4198 00d2 094A     		ldr	r2, .L290+8
 4199 00d4 1380     		strh	r3, [r2]	@ movhi
 231:../user/source/DLT645.c ****             {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 133


 4200              		.loc 1 231 0
 4201 00d6 2846     		mov	r0, r5
 4202 00d8 FFF7FEFF 		bl	dwCheckFrame
 4203              	.LVL511:
 4204 00dc 30B1     		cbz	r0, .L277
 237:../user/source/DLT645.c ****             }
 4205              		.loc 1 237 0
 4206 00de 0024     		movs	r4, #0
 4207 00e0 04E0     		b	.L277
 4208              	.LVL512:
 4209              	.L288:
 251:../user/source/DLT645.c **** }
 4210              		.loc 1 251 0
 4211 00e2 0024     		movs	r4, #0
 4212 00e4 02E0     		b	.L277
 4213              	.LVL513:
 4214              	.L286:
 4215 00e6 0024     		movs	r4, #0
 4216 00e8 00E0     		b	.L277
 4217              	.L287:
 4218 00ea 0446     		mov	r4, r0
 4219              	.L277:
 252:../user/source/DLT645.c **** 
 4220              		.loc 1 252 0
 4221 00ec 2046     		mov	r0, r4
 4222 00ee F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4223              	.LVL514:
 4224              	.L291:
 4225              		.align	2
 4226              	.L290:
 4227 00f0 00000000 		.word	.LANCHOR9
 4228 00f4 00000000 		.word	blWordsCounterStatus
 4229 00f8 00000000 		.word	uwTime2WordsCounter
 4230 00fc 00000000 		.word	.LANCHOR0
 4231              		.cfi_endproc
 4232              	.LFE111:
 4234              		.section	.text.vDBDataID_Handle,"ax",%progbits
 4235              		.align	2
 4236              		.global	vDBDataID_Handle
 4237              		.thumb
 4238              		.thumb_func
 4240              	vDBDataID_Handle:
 4241              	.LFB113:
 291:../user/source/DLT645.c ****     uint8_t i;
 4242              		.loc 1 291 0
 4243              		.cfi_startproc
 4244              		@ args = 0, pretend = 0, frame = 0
 4245              		@ frame_needed = 0, uses_anonymous_args = 0
 4246              	.LVL515:
 4247 0000 10B5     		push	{r4, lr}
 4248              	.LCFI43:
 4249              		.cfi_def_cfa_offset 8
 4250              		.cfi_offset 4, -8
 4251              		.cfi_offset 14, -4
 4252              	.LVL516:
 295:../user/source/DLT645.c ****     {
 4253              		.loc 1 295 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 134


 4254 0002 0023     		movs	r3, #0
 4255 0004 1CE0     		b	.L293
 4256              	.LVL517:
 4257              	.L296:
 297:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 4258              		.loc 1 297 0
 4259 0006 184A     		ldr	r2, .L299
 4260 0008 12F83310 		ldrb	r1, [r2, r3, lsl #3]	@ zero_extendqisi2
 4261 000c 827A     		ldrb	r2, [r0, #10]	@ zero_extendqisi2
 4262 000e 9142     		cmp	r1, r2
 4263 0010 14D1     		bne	.L294
 298:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 4264              		.loc 1 298 0 discriminator 1
 4265 0012 154A     		ldr	r2, .L299
 4266 0014 02EBC302 		add	r2, r2, r3, lsl #3
 4267 0018 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 4268 001a C27A     		ldrb	r2, [r0, #11]	@ zero_extendqisi2
 297:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 4269              		.loc 1 297 0 discriminator 1
 4270 001c 9142     		cmp	r1, r2
 4271 001e 0DD1     		bne	.L294
 299:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 4272              		.loc 1 299 0
 4273 0020 114A     		ldr	r2, .L299
 4274 0022 02EBC302 		add	r2, r2, r3, lsl #3
 4275 0026 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 4276 0028 027B     		ldrb	r2, [r0, #12]	@ zero_extendqisi2
 298:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 4277              		.loc 1 298 0
 4278 002a 9142     		cmp	r1, r2
 4279 002c 06D1     		bne	.L294
 300:../user/source/DLT645.c ****             break;
 4280              		.loc 1 300 0
 4281 002e 0E4A     		ldr	r2, .L299
 4282 0030 02EBC304 		add	r4, r2, r3, lsl #3
 4283 0034 E178     		ldrb	r1, [r4, #3]	@ zero_extendqisi2
 4284 0036 427B     		ldrb	r2, [r0, #13]	@ zero_extendqisi2
 299:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 4285              		.loc 1 299 0
 4286 0038 9142     		cmp	r1, r2
 4287 003a 03D0     		beq	.L295
 4288              	.L294:
 295:../user/source/DLT645.c ****     {
 4289              		.loc 1 295 0 discriminator 2
 4290 003c 0133     		adds	r3, r3, #1
 4291              	.LVL518:
 4292 003e DBB2     		uxtb	r3, r3
 4293              	.LVL519:
 4294              	.L293:
 295:../user/source/DLT645.c ****     {
 4295              		.loc 1 295 0 is_stmt 0 discriminator 1
 4296 0040 342B     		cmp	r3, #52
 4297 0042 E0D9     		bls	.L296
 4298              	.L295:
 303:../user/source/DLT645.c ****     {
 4299              		.loc 1 303 0 is_stmt 1
 4300 0044 342B     		cmp	r3, #52
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 135


 4301 0046 0DD8     		bhi	.L292
 306:../user/source/DLT645.c ****             return;
 4302              		.loc 1 306 0
 4303 0048 074A     		ldr	r2, .L299
 4304 004a 02EBC303 		add	r3, r2, r3, lsl #3
 4305              	.LVL520:
 4306 004e 5B68     		ldr	r3, [r3, #4]
 4307 0050 064A     		ldr	r2, .L299+4
 4308 0052 9342     		cmp	r3, r2
 4309 0054 06D0     		beq	.L292
 310:../user/source/DLT645.c ****             return;
 4310              		.loc 1 310 0
 4311 0056 064A     		ldr	r2, .L299+8
 4312 0058 9342     		cmp	r3, r2
 4313 005a 03D0     		beq	.L292
 314:../user/source/DLT645.c ****             return;
 4314              		.loc 1 314 0
 4315 005c 054A     		ldr	r2, .L299+12
 4316 005e 9342     		cmp	r3, r2
 4317 0060 00D0     		beq	.L292
 326:../user/source/DLT645.c ****     }
 4318              		.loc 1 326 0
 4319 0062 9847     		blx	r3
 4320              	.LVL521:
 4321              	.L292:
 4322 0064 10BD     		pop	{r4, pc}
 4323              	.L300:
 4324 0066 00BF     		.align	2
 4325              	.L299:
 4326 0068 00000000 		.word	.LANCHOR10
 4327 006c 00000000 		.word	vCurrent_Modify
 4328 0070 00000000 		.word	vCurrent_Limit_Modify
 4329 0074 00000000 		.word	Estatus_Modify_CurrentEvent
 4330              		.cfi_endproc
 4331              	.LFE113:
 4333              		.section	.text.vINFRDataID_Handle,"ax",%progbits
 4334              		.align	2
 4335              		.global	vINFRDataID_Handle
 4336              		.thumb
 4337              		.thumb_func
 4339              	vINFRDataID_Handle:
 4340              	.LFB114:
 340:../user/source/DLT645.c ****     uint8_t i;
 4341              		.loc 1 340 0
 4342              		.cfi_startproc
 4343              		@ args = 0, pretend = 0, frame = 0
 4344              		@ frame_needed = 0, uses_anonymous_args = 0
 4345              	.LVL522:
 4346 0000 10B5     		push	{r4, lr}
 4347              	.LCFI44:
 4348              		.cfi_def_cfa_offset 8
 4349              		.cfi_offset 4, -8
 4350              		.cfi_offset 14, -4
 4351              	.LVL523:
 344:../user/source/DLT645.c ****     {
 4352              		.loc 1 344 0
 4353 0002 0023     		movs	r3, #0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 136


 4354 0004 1CE0     		b	.L302
 4355              	.LVL524:
 4356              	.L305:
 346:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 4357              		.loc 1 346 0
 4358 0006 134A     		ldr	r2, .L308
 4359 0008 12F83310 		ldrb	r1, [r2, r3, lsl #3]	@ zero_extendqisi2
 4360 000c 827A     		ldrb	r2, [r0, #10]	@ zero_extendqisi2
 4361 000e 9142     		cmp	r1, r2
 4362 0010 14D1     		bne	.L303
 347:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 4363              		.loc 1 347 0 discriminator 1
 4364 0012 104A     		ldr	r2, .L308
 4365 0014 02EBC302 		add	r2, r2, r3, lsl #3
 4366 0018 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 4367 001a C27A     		ldrb	r2, [r0, #11]	@ zero_extendqisi2
 346:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 4368              		.loc 1 346 0 discriminator 1
 4369 001c 9142     		cmp	r1, r2
 4370 001e 0DD1     		bne	.L303
 348:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 4371              		.loc 1 348 0
 4372 0020 0C4A     		ldr	r2, .L308
 4373 0022 02EBC302 		add	r2, r2, r3, lsl #3
 4374 0026 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 4375 0028 027B     		ldrb	r2, [r0, #12]	@ zero_extendqisi2
 347:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 4376              		.loc 1 347 0
 4377 002a 9142     		cmp	r1, r2
 4378 002c 06D1     		bne	.L303
 349:../user/source/DLT645.c ****             break;
 4379              		.loc 1 349 0
 4380 002e 094A     		ldr	r2, .L308
 4381 0030 02EBC304 		add	r4, r2, r3, lsl #3
 4382 0034 E178     		ldrb	r1, [r4, #3]	@ zero_extendqisi2
 4383 0036 427B     		ldrb	r2, [r0, #13]	@ zero_extendqisi2
 348:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 4384              		.loc 1 348 0
 4385 0038 9142     		cmp	r1, r2
 4386 003a 03D0     		beq	.L304
 4387              	.L303:
 344:../user/source/DLT645.c ****     {
 4388              		.loc 1 344 0 discriminator 2
 4389 003c 0133     		adds	r3, r3, #1
 4390              	.LVL525:
 4391 003e DBB2     		uxtb	r3, r3
 4392              	.LVL526:
 4393              	.L302:
 344:../user/source/DLT645.c ****     {
 4394              		.loc 1 344 0 is_stmt 0 discriminator 1
 4395 0040 102B     		cmp	r3, #16
 4396 0042 E0D9     		bls	.L305
 4397              	.L304:
 352:../user/source/DLT645.c ****     {
 4398              		.loc 1 352 0 is_stmt 1
 4399 0044 102B     		cmp	r3, #16
 4400 0046 04D8     		bhi	.L301
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 137


 362:../user/source/DLT645.c ****     }
 4401              		.loc 1 362 0
 4402 0048 024A     		ldr	r2, .L308
 4403 004a 02EBC303 		add	r3, r2, r3, lsl #3
 4404              	.LVL527:
 4405 004e 5B68     		ldr	r3, [r3, #4]
 4406 0050 9847     		blx	r3
 4407              	.LVL528:
 4408              	.L301:
 4409 0052 10BD     		pop	{r4, pc}
 4410              	.L309:
 4411              		.align	2
 4412              	.L308:
 4413 0054 00000000 		.word	.LANCHOR11
 4414              		.cfi_endproc
 4415              	.LFE114:
 4417              		.section	.text.blVoltage_Create,"ax",%progbits
 4418              		.align	2
 4419              		.global	blVoltage_Create
 4420              		.thumb
 4421              		.thumb_func
 4423              	blVoltage_Create:
 4424              	.LFB121:
 686:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
 4425              		.loc 1 686 0
 4426              		.cfi_startproc
 4427              		@ args = 0, pretend = 0, frame = 0
 4428              		@ frame_needed = 0, uses_anonymous_args = 0
 4429              	.LVL529:
 4430 0000 70B5     		push	{r4, r5, r6, lr}
 4431              	.LCFI45:
 4432              		.cfi_def_cfa_offset 16
 4433              		.cfi_offset 4, -16
 4434              		.cfi_offset 5, -12
 4435              		.cfi_offset 6, -8
 4436              		.cfi_offset 14, -4
 4437 0002 0446     		mov	r4, r0
 4438              	.LVL530:
 689:../user/source/DLT645.c ****     {
 4439              		.loc 1 689 0
 4440 0004 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 4441 0006 323B     		subs	r3, r3, #50
 4442 0008 042B     		cmp	r3, #4
 4443 000a 00F2E580 		bhi	.L331
 4444 000e DFE813F0 		tbh	[pc, r3, lsl #1]
 4445              	.L313:
 4446 0012 0500     		.2byte	(.L312-.L313)/2
 4447 0014 E300     		.2byte	(.L331-.L313)/2
 4448 0016 5F00     		.2byte	(.L314-.L313)/2
 4449 0018 8B00     		.2byte	(.L315-.L313)/2
 4450 001a B700     		.2byte	(.L316-.L313)/2
 4451              		.p2align 1
 4452              	.L312:
 693:../user/source/DLT645.c ****         pucBuffer[9] = 0x0A;
 4453              		.loc 1 693 0
 4454 001c 9123     		movs	r3, #145
 4455 001e 0372     		strb	r3, [r0, #8]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 138


 694:../user/source/DLT645.c ****         //Ê¹ÓÃÉÏ´ÎĞŞ¸ÄµÄºÏ·¨µçÑ¹Öµ»ò1000 2017-10-25:
 4456              		.loc 1 694 0
 4457 0020 0A23     		movs	r3, #10
 4458 0022 4372     		strb	r3, [r0, #9]
 696:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 4459              		.loc 1 696 0
 4460 0024 6D4B     		ldr	r3, .L339
 4461 0026 1D68     		ldr	r5, [r3]
 4462 0028 6D4B     		ldr	r3, .L339+4
 4463 002a 1E68     		ldr	r6, [r3]
 4464 002c B542     		cmp	r5, r6
 4465 002e 06DC     		bgt	.L332
 696:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 4466              		.loc 1 696 0 is_stmt 0 discriminator 1
 4467 0030 6C4B     		ldr	r3, .L339+8
 4468 0032 1B68     		ldr	r3, [r3]
 4469 0034 9D42     		cmp	r5, r3
 4470 0036 04DA     		bge	.L317
 696:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 4471              		.loc 1 696 0
 4472 0038 40F69805 		movw	r5, #2200
 4473 003c 01E0     		b	.L317
 4474              	.L332:
 4475 003e 40F69805 		movw	r5, #2200
 4476              	.L317:
 696:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 4477              		.loc 1 696 0 discriminator 6
 4478 0042 664B     		ldr	r3, .L339
 4479 0044 1D60     		str	r5, [r3]
 697:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(A_Voltage);
 4480              		.loc 1 697 0 is_stmt 1 discriminator 6
 4481 0046 2846     		mov	r0, r5
 4482              	.LVL531:
 4483 0048 FFF7FEFF 		bl	GetLowByte
 4484              	.LVL532:
 4485 004c A073     		strb	r0, [r4, #14]
 698:../user/source/DLT645.c ****         B_Voltage = ((B_Voltage <= Voltage_MAX) && (B_Voltage >= Voltage_MIN) ? B_Voltage : WORK_VO
 4486              		.loc 1 698 0 discriminator 6
 4487 004e 2846     		mov	r0, r5
 4488 0050 FFF7FEFF 		bl	GetHighByte
 4489              	.LVL533:
 4490 0054 E073     		strb	r0, [r4, #15]
 699:../user/source/DLT645.c ****         pucBuffer[16] = GetLowByte(B_Voltage);
 4491              		.loc 1 699 0 discriminator 6
 4492 0056 644B     		ldr	r3, .L339+12
 4493 0058 1D68     		ldr	r5, [r3]
 4494 005a AE42     		cmp	r6, r5
 4495 005c 06DB     		blt	.L333
 699:../user/source/DLT645.c ****         pucBuffer[16] = GetLowByte(B_Voltage);
 4496              		.loc 1 699 0 is_stmt 0 discriminator 1
 4497 005e 614B     		ldr	r3, .L339+8
 4498 0060 1B68     		ldr	r3, [r3]
 4499 0062 9D42     		cmp	r5, r3
 4500 0064 04DA     		bge	.L318
 699:../user/source/DLT645.c ****         pucBuffer[16] = GetLowByte(B_Voltage);
 4501              		.loc 1 699 0
 4502 0066 40F69805 		movw	r5, #2200
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 139


 4503 006a 01E0     		b	.L318
 4504              	.L333:
 4505 006c 40F69805 		movw	r5, #2200
 4506              	.L318:
 699:../user/source/DLT645.c ****         pucBuffer[16] = GetLowByte(B_Voltage);
 4507              		.loc 1 699 0 discriminator 6
 4508 0070 5D4B     		ldr	r3, .L339+12
 4509 0072 1D60     		str	r5, [r3]
 700:../user/source/DLT645.c ****         pucBuffer[17] = GetHighByte(B_Voltage);
 4510              		.loc 1 700 0 is_stmt 1 discriminator 6
 4511 0074 2846     		mov	r0, r5
 4512 0076 FFF7FEFF 		bl	GetLowByte
 4513              	.LVL534:
 4514 007a 2074     		strb	r0, [r4, #16]
 701:../user/source/DLT645.c ****         C_Voltage = ((C_Voltage <= Voltage_MAX) && (C_Voltage >= Voltage_MIN) ? C_Voltage : WORK_VO
 4515              		.loc 1 701 0 discriminator 6
 4516 007c 2846     		mov	r0, r5
 4517 007e FFF7FEFF 		bl	GetHighByte
 4518              	.LVL535:
 4519 0082 6074     		strb	r0, [r4, #17]
 702:../user/source/DLT645.c ****         pucBuffer[18] = GetLowByte(C_Voltage);
 4520              		.loc 1 702 0 discriminator 6
 4521 0084 594B     		ldr	r3, .L339+16
 4522 0086 1D68     		ldr	r5, [r3]
 4523 0088 AE42     		cmp	r6, r5
 4524 008a 06DB     		blt	.L334
 702:../user/source/DLT645.c ****         pucBuffer[18] = GetLowByte(C_Voltage);
 4525              		.loc 1 702 0 is_stmt 0 discriminator 1
 4526 008c 554B     		ldr	r3, .L339+8
 4527 008e 1B68     		ldr	r3, [r3]
 4528 0090 9D42     		cmp	r5, r3
 4529 0092 04DA     		bge	.L319
 702:../user/source/DLT645.c ****         pucBuffer[18] = GetLowByte(C_Voltage);
 4530              		.loc 1 702 0
 4531 0094 40F69805 		movw	r5, #2200
 4532 0098 01E0     		b	.L319
 4533              	.L334:
 4534 009a 40F69805 		movw	r5, #2200
 4535              	.L319:
 702:../user/source/DLT645.c ****         pucBuffer[18] = GetLowByte(C_Voltage);
 4536              		.loc 1 702 0 discriminator 6
 4537 009e 534B     		ldr	r3, .L339+16
 4538 00a0 1D60     		str	r5, [r3]
 703:../user/source/DLT645.c ****         pucBuffer[19] = GetHighByte(C_Voltage);
 4539              		.loc 1 703 0 is_stmt 1 discriminator 6
 4540 00a2 2846     		mov	r0, r5
 4541 00a4 FFF7FEFF 		bl	GetLowByte
 4542              	.LVL536:
 4543 00a8 A074     		strb	r0, [r4, #18]
 704:../user/source/DLT645.c ****         for (i = 0; i < 20; i++) //¹Ì¶¨Ö¡³¤22
 4544              		.loc 1 704 0 discriminator 6
 4545 00aa 2846     		mov	r0, r5
 4546 00ac FFF7FEFF 		bl	GetHighByte
 4547              	.LVL537:
 4548 00b0 E074     		strb	r0, [r4, #19]
 705:../user/source/DLT645.c ****         {
 4549              		.loc 1 705 0 discriminator 6
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 140


 4550 00b2 0023     		movs	r3, #0
 687:../user/source/DLT645.c ****     uint8_t i = 0;
 4551              		.loc 1 687 0 discriminator 6
 4552 00b4 1A46     		mov	r2, r3
 705:../user/source/DLT645.c ****         {
 4553              		.loc 1 705 0 discriminator 6
 4554 00b6 04E0     		b	.L320
 4555              	.LVL538:
 4556              	.L321:
 707:../user/source/DLT645.c ****         }
 4557              		.loc 1 707 0 discriminator 3
 4558 00b8 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 4559 00ba 0A44     		add	r2, r2, r1
 4560              	.LVL539:
 4561 00bc D2B2     		uxtb	r2, r2
 4562              	.LVL540:
 705:../user/source/DLT645.c ****         {
 4563              		.loc 1 705 0 discriminator 3
 4564 00be 0133     		adds	r3, r3, #1
 4565              	.LVL541:
 4566 00c0 DBB2     		uxtb	r3, r3
 4567              	.LVL542:
 4568              	.L320:
 705:../user/source/DLT645.c ****         {
 4569              		.loc 1 705 0 is_stmt 0 discriminator 1
 4570 00c2 132B     		cmp	r3, #19
 4571 00c4 F8D9     		bls	.L321
 709:../user/source/DLT645.c ****         pucBuffer[21] = 0x16;
 4572              		.loc 1 709 0 is_stmt 1
 4573 00c6 2275     		strb	r2, [r4, #20]
 710:../user/source/DLT645.c ****         return true;
 4574              		.loc 1 710 0
 4575 00c8 1623     		movs	r3, #22
 4576              	.LVL543:
 4577 00ca 6375     		strb	r3, [r4, #21]
 711:../user/source/DLT645.c ****     }
 4578              		.loc 1 711 0
 4579 00cc 0120     		movs	r0, #1
 4580 00ce 70BD     		pop	{r4, r5, r6, pc}
 4581              	.LVL544:
 4582              	.L314:
 715:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 4583              		.loc 1 715 0
 4584 00d0 424B     		ldr	r3, .L339
 4585 00d2 1D68     		ldr	r5, [r3]
 4586 00d4 424B     		ldr	r3, .L339+4
 4587 00d6 1B68     		ldr	r3, [r3]
 4588 00d8 9D42     		cmp	r5, r3
 4589 00da 06DC     		bgt	.L335
 715:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 4590              		.loc 1 715 0 is_stmt 0 discriminator 1
 4591 00dc 414B     		ldr	r3, .L339+8
 4592 00de 1B68     		ldr	r3, [r3]
 4593 00e0 9D42     		cmp	r5, r3
 4594 00e2 04DA     		bge	.L322
 715:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 4595              		.loc 1 715 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 141


 4596 00e4 40F69805 		movw	r5, #2200
 4597 00e8 01E0     		b	.L322
 4598              	.L335:
 4599 00ea 40F69805 		movw	r5, #2200
 4600              	.L322:
 715:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 4601              		.loc 1 715 0 discriminator 6
 4602 00ee 3B4B     		ldr	r3, .L339
 4603 00f0 1D60     		str	r5, [r3]
 716:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 4604              		.loc 1 716 0 is_stmt 1 discriminator 6
 4605 00f2 9123     		movs	r3, #145
 4606 00f4 2372     		strb	r3, [r4, #8]
 717:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 4607              		.loc 1 717 0 discriminator 6
 4608 00f6 0623     		movs	r3, #6
 4609 00f8 6372     		strb	r3, [r4, #9]
 718:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(A_Voltage);
 4610              		.loc 1 718 0 discriminator 6
 4611 00fa 2846     		mov	r0, r5
 4612              	.LVL545:
 4613 00fc FFF7FEFF 		bl	GetLowByte
 4614              	.LVL546:
 4615 0100 A073     		strb	r0, [r4, #14]
 719:../user/source/DLT645.c ****         for (i = 0; i < 16; i++) //¹Ì¶¨Ö¡³¤18
 4616              		.loc 1 719 0 discriminator 6
 4617 0102 2846     		mov	r0, r5
 4618 0104 FFF7FEFF 		bl	GetHighByte
 4619              	.LVL547:
 4620 0108 E073     		strb	r0, [r4, #15]
 720:../user/source/DLT645.c ****         {
 4621              		.loc 1 720 0 discriminator 6
 4622 010a 0023     		movs	r3, #0
 687:../user/source/DLT645.c ****     uint8_t i = 0;
 4623              		.loc 1 687 0 discriminator 6
 4624 010c 1A46     		mov	r2, r3
 720:../user/source/DLT645.c ****         {
 4625              		.loc 1 720 0 discriminator 6
 4626 010e 04E0     		b	.L323
 4627              	.LVL548:
 4628              	.L324:
 722:../user/source/DLT645.c ****         }
 4629              		.loc 1 722 0 discriminator 3
 4630 0110 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 4631 0112 0A44     		add	r2, r2, r1
 4632              	.LVL549:
 4633 0114 D2B2     		uxtb	r2, r2
 4634              	.LVL550:
 720:../user/source/DLT645.c ****         {
 4635              		.loc 1 720 0 discriminator 3
 4636 0116 0133     		adds	r3, r3, #1
 4637              	.LVL551:
 4638 0118 DBB2     		uxtb	r3, r3
 4639              	.LVL552:
 4640              	.L323:
 720:../user/source/DLT645.c ****         {
 4641              		.loc 1 720 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 142


 4642 011a 0F2B     		cmp	r3, #15
 4643 011c F8D9     		bls	.L324
 724:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 4644              		.loc 1 724 0 is_stmt 1
 4645 011e 2274     		strb	r2, [r4, #16]
 725:../user/source/DLT645.c ****         return true;
 4646              		.loc 1 725 0
 4647 0120 1623     		movs	r3, #22
 4648              	.LVL553:
 4649 0122 6374     		strb	r3, [r4, #17]
 726:../user/source/DLT645.c ****     }
 4650              		.loc 1 726 0
 4651 0124 0120     		movs	r0, #1
 4652 0126 70BD     		pop	{r4, r5, r6, pc}
 4653              	.LVL554:
 4654              	.L315:
 730:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 4655              		.loc 1 730 0
 4656 0128 2F4B     		ldr	r3, .L339+12
 4657 012a 1D68     		ldr	r5, [r3]
 4658 012c 2C4B     		ldr	r3, .L339+4
 4659 012e 1B68     		ldr	r3, [r3]
 4660 0130 9D42     		cmp	r5, r3
 4661 0132 06DC     		bgt	.L336
 730:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 4662              		.loc 1 730 0 is_stmt 0 discriminator 1
 4663 0134 2B4B     		ldr	r3, .L339+8
 4664 0136 1B68     		ldr	r3, [r3]
 4665 0138 9D42     		cmp	r5, r3
 4666 013a 04DA     		bge	.L325
 730:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 4667              		.loc 1 730 0
 4668 013c 40F69805 		movw	r5, #2200
 4669 0140 01E0     		b	.L325
 4670              	.L336:
 4671 0142 40F69805 		movw	r5, #2200
 4672              	.L325:
 730:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 4673              		.loc 1 730 0 discriminator 6
 4674 0146 284B     		ldr	r3, .L339+12
 4675 0148 1D60     		str	r5, [r3]
 731:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 4676              		.loc 1 731 0 is_stmt 1 discriminator 6
 4677 014a 9123     		movs	r3, #145
 4678 014c 2372     		strb	r3, [r4, #8]
 732:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(B_Voltage);
 4679              		.loc 1 732 0 discriminator 6
 4680 014e 0623     		movs	r3, #6
 4681 0150 6372     		strb	r3, [r4, #9]
 733:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(B_Voltage);
 4682              		.loc 1 733 0 discriminator 6
 4683 0152 2846     		mov	r0, r5
 4684              	.LVL555:
 4685 0154 FFF7FEFF 		bl	GetLowByte
 4686              	.LVL556:
 4687 0158 A073     		strb	r0, [r4, #14]
 734:../user/source/DLT645.c ****         for (i = 0; i < 16; i++) //¹Ì¶¨Ö¡³¤18
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 143


 4688              		.loc 1 734 0 discriminator 6
 4689 015a 2846     		mov	r0, r5
 4690 015c FFF7FEFF 		bl	GetHighByte
 4691              	.LVL557:
 4692 0160 E073     		strb	r0, [r4, #15]
 735:../user/source/DLT645.c ****         {
 4693              		.loc 1 735 0 discriminator 6
 4694 0162 0023     		movs	r3, #0
 687:../user/source/DLT645.c ****     uint8_t i = 0;
 4695              		.loc 1 687 0 discriminator 6
 4696 0164 1A46     		mov	r2, r3
 735:../user/source/DLT645.c ****         {
 4697              		.loc 1 735 0 discriminator 6
 4698 0166 04E0     		b	.L326
 4699              	.LVL558:
 4700              	.L327:
 737:../user/source/DLT645.c ****         }
 4701              		.loc 1 737 0 discriminator 3
 4702 0168 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 4703 016a 0A44     		add	r2, r2, r1
 4704              	.LVL559:
 4705 016c D2B2     		uxtb	r2, r2
 4706              	.LVL560:
 735:../user/source/DLT645.c ****         {
 4707              		.loc 1 735 0 discriminator 3
 4708 016e 0133     		adds	r3, r3, #1
 4709              	.LVL561:
 4710 0170 DBB2     		uxtb	r3, r3
 4711              	.LVL562:
 4712              	.L326:
 735:../user/source/DLT645.c ****         {
 4713              		.loc 1 735 0 is_stmt 0 discriminator 1
 4714 0172 0F2B     		cmp	r3, #15
 4715 0174 F8D9     		bls	.L327
 739:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 4716              		.loc 1 739 0 is_stmt 1
 4717 0176 2274     		strb	r2, [r4, #16]
 740:../user/source/DLT645.c ****         return true;
 4718              		.loc 1 740 0
 4719 0178 1623     		movs	r3, #22
 4720              	.LVL563:
 4721 017a 6374     		strb	r3, [r4, #17]
 741:../user/source/DLT645.c ****     }
 4722              		.loc 1 741 0
 4723 017c 0120     		movs	r0, #1
 4724 017e 70BD     		pop	{r4, r5, r6, pc}
 4725              	.LVL564:
 4726              	.L316:
 745:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 4727              		.loc 1 745 0
 4728 0180 1A4B     		ldr	r3, .L339+16
 4729 0182 1D68     		ldr	r5, [r3]
 4730 0184 164B     		ldr	r3, .L339+4
 4731 0186 1B68     		ldr	r3, [r3]
 4732 0188 9D42     		cmp	r5, r3
 4733 018a 06DC     		bgt	.L337
 745:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 144


 4734              		.loc 1 745 0 is_stmt 0 discriminator 1
 4735 018c 154B     		ldr	r3, .L339+8
 4736 018e 1B68     		ldr	r3, [r3]
 4737 0190 9D42     		cmp	r5, r3
 4738 0192 04DA     		bge	.L328
 745:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 4739              		.loc 1 745 0
 4740 0194 40F69805 		movw	r5, #2200
 4741 0198 01E0     		b	.L328
 4742              	.L337:
 4743 019a 40F69805 		movw	r5, #2200
 4744              	.L328:
 745:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 4745              		.loc 1 745 0 discriminator 6
 4746 019e 134B     		ldr	r3, .L339+16
 4747 01a0 1D60     		str	r5, [r3]
 746:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 4748              		.loc 1 746 0 is_stmt 1 discriminator 6
 4749 01a2 9123     		movs	r3, #145
 4750 01a4 2372     		strb	r3, [r4, #8]
 747:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(C_Voltage);
 4751              		.loc 1 747 0 discriminator 6
 4752 01a6 0623     		movs	r3, #6
 4753 01a8 6372     		strb	r3, [r4, #9]
 748:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(C_Voltage);
 4754              		.loc 1 748 0 discriminator 6
 4755 01aa 2846     		mov	r0, r5
 4756              	.LVL565:
 4757 01ac FFF7FEFF 		bl	GetLowByte
 4758              	.LVL566:
 4759 01b0 A073     		strb	r0, [r4, #14]
 749:../user/source/DLT645.c ****         for (i = 0; i < 16; i++)
 4760              		.loc 1 749 0 discriminator 6
 4761 01b2 2846     		mov	r0, r5
 4762 01b4 FFF7FEFF 		bl	GetHighByte
 4763              	.LVL567:
 4764 01b8 E073     		strb	r0, [r4, #15]
 750:../user/source/DLT645.c ****         {
 4765              		.loc 1 750 0 discriminator 6
 4766 01ba 0023     		movs	r3, #0
 687:../user/source/DLT645.c ****     uint8_t i = 0;
 4767              		.loc 1 687 0 discriminator 6
 4768 01bc 1A46     		mov	r2, r3
 750:../user/source/DLT645.c ****         {
 4769              		.loc 1 750 0 discriminator 6
 4770 01be 04E0     		b	.L329
 4771              	.LVL568:
 4772              	.L330:
 752:../user/source/DLT645.c ****         }
 4773              		.loc 1 752 0 discriminator 3
 4774 01c0 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 4775 01c2 0A44     		add	r2, r2, r1
 4776              	.LVL569:
 4777 01c4 D2B2     		uxtb	r2, r2
 4778              	.LVL570:
 750:../user/source/DLT645.c ****         {
 4779              		.loc 1 750 0 discriminator 3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 145


 4780 01c6 0133     		adds	r3, r3, #1
 4781              	.LVL571:
 4782 01c8 DBB2     		uxtb	r3, r3
 4783              	.LVL572:
 4784              	.L329:
 750:../user/source/DLT645.c ****         {
 4785              		.loc 1 750 0 is_stmt 0 discriminator 1
 4786 01ca 0F2B     		cmp	r3, #15
 4787 01cc F8D9     		bls	.L330
 754:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 4788              		.loc 1 754 0 is_stmt 1
 4789 01ce 2274     		strb	r2, [r4, #16]
 755:../user/source/DLT645.c ****         return true;
 4790              		.loc 1 755 0
 4791 01d0 1623     		movs	r3, #22
 4792              	.LVL573:
 4793 01d2 6374     		strb	r3, [r4, #17]
 756:../user/source/DLT645.c ****     }
 4794              		.loc 1 756 0
 4795 01d4 0120     		movs	r0, #1
 4796 01d6 70BD     		pop	{r4, r5, r6, pc}
 4797              	.LVL574:
 4798              	.L331:
 759:../user/source/DLT645.c ****     }
 4799              		.loc 1 759 0
 4800 01d8 0020     		movs	r0, #0
 4801              	.LVL575:
 761:../user/source/DLT645.c **** /********************************************************************
 4802              		.loc 1 761 0
 4803 01da 70BD     		pop	{r4, r5, r6, pc}
 4804              	.LVL576:
 4805              	.L340:
 4806              		.align	2
 4807              	.L339:
 4808 01dc 00000000 		.word	.LANCHOR4
 4809 01e0 00000000 		.word	Voltage_MAX
 4810 01e4 00000000 		.word	Voltage_MIN
 4811 01e8 00000000 		.word	.LANCHOR6
 4812 01ec 00000000 		.word	.LANCHOR7
 4813              		.cfi_endproc
 4814              	.LFE121:
 4816              		.section	.text.Voltage_Change_Init,"ax",%progbits
 4817              		.align	2
 4818              		.global	Voltage_Change_Init
 4819              		.thumb
 4820              		.thumb_func
 4822              	Voltage_Change_Init:
 4823              	.LFB126:
 866:../user/source/DLT645.c ****     uint8_t Vmax1;
 4824              		.loc 1 866 0
 4825              		.cfi_startproc
 4826              		@ args = 0, pretend = 0, frame = 0
 4827              		@ frame_needed = 0, uses_anonymous_args = 0
 4828 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4829              	.LCFI46:
 4830              		.cfi_def_cfa_offset 24
 4831              		.cfi_offset 3, -24
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 146


 4832              		.cfi_offset 4, -20
 4833              		.cfi_offset 5, -16
 4834              		.cfi_offset 6, -12
 4835              		.cfi_offset 7, -8
 4836              		.cfi_offset 14, -4
 872:../user/source/DLT645.c ****     /*µçÑ¹ĞŞ¸ÄÉÏÏÂÏŞ³õÊ¼»¯*/
 4837              		.loc 1 872 0
 4838 0002 1948     		ldr	r0, .L345
 4839 0004 FFF7FEFF 		bl	EEProm_Read
 4840              	.LVL577:
 4841 0008 184B     		ldr	r3, .L345+4
 4842 000a 1870     		strb	r0, [r3]
 874:../user/source/DLT645.c ****     Vmax2 = EEProm_Read(FLASH_VMAX2_Addr);
 4843              		.loc 1 874 0
 4844 000c 1848     		ldr	r0, .L345+8
 4845 000e FFF7FEFF 		bl	EEProm_Read
 4846              	.LVL578:
 4847 0012 0446     		mov	r4, r0
 4848              	.LVL579:
 875:../user/source/DLT645.c ****     Vmin1 = EEProm_Read(FLASH_VMIN1_Addr);
 4849              		.loc 1 875 0
 4850 0014 1748     		ldr	r0, .L345+12
 4851 0016 FFF7FEFF 		bl	EEProm_Read
 4852              	.LVL580:
 4853 001a 0546     		mov	r5, r0
 4854              	.LVL581:
 876:../user/source/DLT645.c ****     Vmin2 = EEProm_Read(FLASH_VMIN2_Addr);
 4855              		.loc 1 876 0
 4856 001c 1648     		ldr	r0, .L345+16
 4857 001e FFF7FEFF 		bl	EEProm_Read
 4858              	.LVL582:
 4859 0022 0646     		mov	r6, r0
 4860              	.LVL583:
 877:../user/source/DLT645.c **** 
 4861              		.loc 1 877 0
 4862 0024 1548     		ldr	r0, .L345+20
 4863 0026 FFF7FEFF 		bl	EEProm_Read
 4864              	.LVL584:
 4865 002a 0746     		mov	r7, r0
 4866              	.LVL585:
 879:../user/source/DLT645.c ****     {
 4867              		.loc 1 879 0
 4868 002c FF2C     		cmp	r4, #255
 4869 002e 0ED1     		bne	.L342
 879:../user/source/DLT645.c ****     {
 4870              		.loc 1 879 0 is_stmt 0 discriminator 1
 4871 0030 FF2D     		cmp	r5, #255
 4872 0032 0CD1     		bne	.L342
 879:../user/source/DLT645.c ****     {
 4873              		.loc 1 879 0 discriminator 2
 4874 0034 FF2E     		cmp	r6, #255
 4875 0036 0AD1     		bne	.L342
 879:../user/source/DLT645.c ****     {
 4876              		.loc 1 879 0 discriminator 3
 4877 0038 FF28     		cmp	r0, #255
 4878 003a 08D1     		bne	.L342
 881:../user/source/DLT645.c ****         Voltage_MIN = Voltage_MIN_Default;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 147


 4879              		.loc 1 881 0 is_stmt 1
 4880 003c 40F62E12 		movw	r2, #2350
 4881 0040 0F4B     		ldr	r3, .L345+24
 4882 0042 1A60     		str	r2, [r3]
 882:../user/source/DLT645.c ****     }
 4883              		.loc 1 882 0
 4884 0044 40F2BC72 		movw	r2, #1980
 4885 0048 0E4B     		ldr	r3, .L345+28
 4886 004a 1A60     		str	r2, [r3]
 4887 004c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4888              	.LVL586:
 4889              	.L342:
 886:../user/source/DLT645.c ****         Voltage_MIN = Get_Voltage(Vmin1, Vmin2);
 4890              		.loc 1 886 0
 4891 004e 2946     		mov	r1, r5
 4892 0050 2046     		mov	r0, r4
 4893              	.LVL587:
 4894 0052 FFF7FEFF 		bl	Get_Voltage
 4895              	.LVL588:
 4896 0056 0A4B     		ldr	r3, .L345+24
 4897 0058 1860     		str	r0, [r3]
 887:../user/source/DLT645.c ****     }
 4898              		.loc 1 887 0
 4899 005a 3946     		mov	r1, r7
 4900 005c 3046     		mov	r0, r6
 4901 005e FFF7FEFF 		bl	Get_Voltage
 4902              	.LVL589:
 4903 0062 084B     		ldr	r3, .L345+28
 4904 0064 1860     		str	r0, [r3]
 4905 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4906              	.LVL590:
 4907              	.L346:
 4908              		.align	2
 4909              	.L345:
 4910 0068 141F0308 		.word	134422292
 4911 006c 00000000 		.word	.LANCHOR5
 4912 0070 001F0308 		.word	134422272
 4913 0074 041F0308 		.word	134422276
 4914 0078 081F0308 		.word	134422280
 4915 007c 0C1F0308 		.word	134422284
 4916 0080 00000000 		.word	Voltage_MAX
 4917 0084 00000000 		.word	Voltage_MIN
 4918              		.cfi_endproc
 4919              	.LFE126:
 4921              		.section	.text.Voltage_Modifier_Method,"ax",%progbits
 4922              		.align	2
 4923              		.global	Voltage_Modifier_Method
 4924              		.thumb
 4925              		.thumb_func
 4927              	Voltage_Modifier_Method:
 4928              	.LFB127:
 900:../user/source/DLT645.c ****     int n = 0;
 4929              		.loc 1 900 0
 4930              		.cfi_startproc
 4931              		@ args = 0, pretend = 0, frame = 0
 4932              		@ frame_needed = 0, uses_anonymous_args = 0
 4933              	.LVL591:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 148


 4934 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4935              	.LCFI47:
 4936              		.cfi_def_cfa_offset 20
 4937              		.cfi_offset 4, -20
 4938              		.cfi_offset 5, -16
 4939              		.cfi_offset 6, -12
 4940              		.cfi_offset 7, -8
 4941              		.cfi_offset 14, -4
 4942              	.LVL592:
 904:../user/source/DLT645.c ****     m = (Voltage_MAX_MAX - Voltage_MAX) / (Voltage_MAX - Voltage_MIN) + 1; //(260-235)/(235-198)+1»
 4943              		.loc 1 904 0
 4944 0002 1F4B     		ldr	r3, .L359
 4945 0004 1E68     		ldr	r6, [r3]
 4946 0006 A6F59661 		sub	r1, r6, #1200
 4947 000a 1E4B     		ldr	r3, .L359+4
 4948 000c 1D68     		ldr	r5, [r3]
 4949 000e AA1B     		subs	r2, r5, r6
 4950 0010 91FBF2F1 		sdiv	r1, r1, r2
 4951 0014 0131     		adds	r1, r1, #1
 4952              	.LVL593:
 905:../user/source/DLT645.c ****     if ((Voltage > Voltage_MAX) && (Voltage <= Voltage_MAX_MAX))
 4953              		.loc 1 905 0
 4954 0016 C5F52F64 		rsb	r4, r5, #2800
 4955 001a 94FBF2F4 		sdiv	r4, r4, r2
 4956              	.LVL594:
 906:../user/source/DLT645.c ****     {
 4957              		.loc 1 906 0
 4958 001e 8542     		cmp	r5, r0
 4959 0020 16DA     		bge	.L348
 4960 0022 0134     		adds	r4, r4, #1
 4961              	.LVL595:
 906:../user/source/DLT645.c ****     {
 4962              		.loc 1 906 0 is_stmt 0 discriminator 1
 4963 0024 B0F52F6F 		cmp	r0, #2800
 4964 0028 12DC     		bgt	.L348
 908:../user/source/DLT645.c ****         {
 4965              		.loc 1 908 0 is_stmt 1
 4966 002a AB18     		adds	r3, r5, r2
 4967 002c 9842     		cmp	r0, r3
 4968 002e 0CDC     		bgt	.L354
 910:../user/source/DLT645.c ****             return Voltage;
 4969              		.loc 1 910 0
 4970 0030 451B     		subs	r5, r0, r5
 4971 0032 A0EB4500 		sub	r0, r0, r5, lsl #1
 4972              	.LVL596:
 911:../user/source/DLT645.c ****         }
 4973              		.loc 1 911 0
 4974 0036 F0BD     		pop	{r4, r5, r6, r7, pc}
 4975              	.LVL597:
 4976              	.L351:
 917:../user/source/DLT645.c ****                 {
 4977              		.loc 1 917 0
 4978 0038 0133     		adds	r3, r3, #1
 4979              	.LVL598:
 4980 003a 03FB02F7 		mul	r7, r3, r2
 4981 003e 05EB070E 		add	lr, r5, r7
 4982 0042 7045     		cmp	r0, lr
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 149


 4983 0044 02DC     		bgt	.L349
 919:../user/source/DLT645.c ****                     return Voltage;
 4984              		.loc 1 919 0
 4985 0046 C01B     		subs	r0, r0, r7
 4986              	.LVL599:
 920:../user/source/DLT645.c ****                 }
 4987              		.loc 1 920 0
 4988 0048 F0BD     		pop	{r4, r5, r6, r7, pc}
 4989              	.LVL600:
 4990              	.L354:
 4991 004a 0123     		movs	r3, #1
 4992              	.LVL601:
 4993              	.L349:
 915:../user/source/DLT645.c ****             {
 4994              		.loc 1 915 0 discriminator 1
 4995 004c A342     		cmp	r3, r4
 4996 004e F3DB     		blt	.L351
 4997              	.LVL602:
 4998              	.L348:
 925:../user/source/DLT645.c ****     {
 4999              		.loc 1 925 0
 5000 0050 8642     		cmp	r6, r0
 5001 0052 14DD     		ble	.L350
 925:../user/source/DLT645.c ****     {
 5002              		.loc 1 925 0 is_stmt 0 discriminator 1
 5003 0054 B0F5966F 		cmp	r0, #1200
 5004 0058 11DB     		blt	.L350
 927:../user/source/DLT645.c ****         {
 5005              		.loc 1 927 0 is_stmt 1
 5006 005a B31A     		subs	r3, r6, r2
 5007 005c 9842     		cmp	r0, r3
 5008 005e 0BDB     		blt	.L357
 929:../user/source/DLT645.c ****             return Voltage;
 5009              		.loc 1 929 0
 5010 0060 361A     		subs	r6, r6, r0
 5011 0062 00EB4600 		add	r0, r0, r6, lsl #1
 5012              	.LVL603:
 930:../user/source/DLT645.c ****         }
 5013              		.loc 1 930 0
 5014 0066 F0BD     		pop	{r4, r5, r6, r7, pc}
 5015              	.LVL604:
 5016              	.L353:
 936:../user/source/DLT645.c ****                 {
 5017              		.loc 1 936 0
 5018 0068 0133     		adds	r3, r3, #1
 5019              	.LVL605:
 5020 006a 03FB02F4 		mul	r4, r3, r2
 5021 006e 351B     		subs	r5, r6, r4
 5022 0070 A842     		cmp	r0, r5
 5023 0072 02DB     		blt	.L352
 938:../user/source/DLT645.c ****                     return Voltage;
 5024              		.loc 1 938 0
 5025 0074 2044     		add	r0, r0, r4
 5026              	.LVL606:
 939:../user/source/DLT645.c ****                 }
 5027              		.loc 1 939 0
 5028 0076 F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 150


 5029              	.LVL607:
 5030              	.L357:
 5031 0078 0123     		movs	r3, #1
 5032              	.LVL608:
 5033              	.L352:
 934:../user/source/DLT645.c ****             {
 5034              		.loc 1 934 0 discriminator 1
 5035 007a 8B42     		cmp	r3, r1
 5036 007c F4DB     		blt	.L353
 5037              	.LVL609:
 5038              	.L350:
 945:../user/source/DLT645.c **** /*****************************************************
 5039              		.loc 1 945 0
 5040 007e F0BD     		pop	{r4, r5, r6, r7, pc}
 5041              	.L360:
 5042              		.align	2
 5043              	.L359:
 5044 0080 00000000 		.word	Voltage_MIN
 5045 0084 00000000 		.word	Voltage_MAX
 5046              		.cfi_endproc
 5047              	.LFE127:
 5049              		.section	.text.Voltage_Modifier,"ax",%progbits
 5050              		.align	2
 5051              		.global	Voltage_Modifier
 5052              		.thumb
 5053              		.thumb_func
 5055              	Voltage_Modifier:
 5056              	.LFB120:
 588:../user/source/DLT645.c **** 
 5057              		.loc 1 588 0
 5058              		.cfi_startproc
 5059              		@ args = 0, pretend = 0, frame = 0
 5060              		@ frame_needed = 0, uses_anonymous_args = 0
 5061              	.LVL610:
 5062 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5063              	.LCFI48:
 5064              		.cfi_def_cfa_offset 24
 5065              		.cfi_offset 3, -24
 5066              		.cfi_offset 4, -20
 5067              		.cfi_offset 5, -16
 5068              		.cfi_offset 6, -12
 5069              		.cfi_offset 7, -8
 5070              		.cfi_offset 14, -4
 5071              	.LVL611:
 593:../user/source/DLT645.c ****         return;
 5072              		.loc 1 593 0
 5073 0002 7A4B     		ldr	r3, .L378
 5074 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5075 0006 002B     		cmp	r3, #0
 5076 0008 00F0EF80 		beq	.L361
 595:../user/source/DLT645.c ****     {
 5077              		.loc 1 595 0
 5078 000c 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 5079 000e 912B     		cmp	r3, #145
 5080 0010 40F0EB80 		bne	.L361
 595:../user/source/DLT645.c ****     {
 5081              		.loc 1 595 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 151


 5082 0014 837A     		ldrb	r3, [r0, #10]	@ zero_extendqisi2
 5083 0016 332B     		cmp	r3, #51
 5084 0018 40F0E780 		bne	.L361
 595:../user/source/DLT645.c ****     {
 5085              		.loc 1 595 0 discriminator 2
 5086 001c 037B     		ldrb	r3, [r0, #12]	@ zero_extendqisi2
 5087 001e 342B     		cmp	r3, #52
 5088 0020 40F0E380 		bne	.L361
 595:../user/source/DLT645.c ****     {
 5089              		.loc 1 595 0 discriminator 3
 5090 0024 437B     		ldrb	r3, [r0, #13]	@ zero_extendqisi2
 5091 0026 352B     		cmp	r3, #53
 5092 0028 40F0DF80 		bne	.L361
 5093 002c 0446     		mov	r4, r0
 597:../user/source/DLT645.c ****         {
 5094              		.loc 1 597 0 is_stmt 1
 5095 002e C57A     		ldrb	r5, [r0, #11]	@ zero_extendqisi2
 5096 0030 322D     		cmp	r5, #50
 5097 0032 62D1     		bne	.L363
 599:../user/source/DLT645.c ****             {
 5098              		.loc 1 599 0
 5099 0034 867B     		ldrb	r6, [r0, #14]	@ zero_extendqisi2
 5100 0036 C77B     		ldrb	r7, [r0, #15]	@ zero_extendqisi2
 5101 0038 3946     		mov	r1, r7
 5102 003a 3046     		mov	r0, r6
 5103              	.LVL612:
 5104 003c FFF7FEFF 		bl	BCD_Verity
 5105              	.LVL613:
 5106 0040 C8B1     		cbz	r0, .L364
 601:../user/source/DLT645.c ****                 if ((A_Voltage > Voltage_MAX) || (A_Voltage < Voltage_MIN)) //ĞŞ¸ÄAÏàµçÑ¹
 5107              		.loc 1 601 0
 5108 0042 3946     		mov	r1, r7
 5109 0044 3046     		mov	r0, r6
 5110 0046 FFF7FEFF 		bl	Get_Voltage
 5111              	.LVL614:
 5112 004a 694B     		ldr	r3, .L378+4
 5113 004c 1860     		str	r0, [r3]
 602:../user/source/DLT645.c ****                 {
 5114              		.loc 1 602 0
 5115 004e 694B     		ldr	r3, .L378+8
 5116 0050 1B68     		ldr	r3, [r3]
 5117 0052 9842     		cmp	r0, r3
 5118 0054 03DC     		bgt	.L365
 602:../user/source/DLT645.c ****                 {
 5119              		.loc 1 602 0 is_stmt 0 discriminator 1
 5120 0056 684B     		ldr	r3, .L378+12
 5121 0058 1B68     		ldr	r3, [r3]
 5122 005a 9842     		cmp	r0, r3
 5123 005c 0BDA     		bge	.L364
 5124              	.L365:
 604:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(A_Voltage);
 5125              		.loc 1 604 0 is_stmt 1
 5126 005e FFF7FEFF 		bl	Voltage_Modifier_Method
 5127              	.LVL615:
 5128 0062 0646     		mov	r6, r0
 5129 0064 624B     		ldr	r3, .L378+4
 5130 0066 1860     		str	r0, [r3]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 152


 605:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(A_Voltage);
 5131              		.loc 1 605 0
 5132 0068 FFF7FEFF 		bl	GetLowByte
 5133              	.LVL616:
 5134 006c A073     		strb	r0, [r4, #14]
 606:../user/source/DLT645.c ****                 }
 5135              		.loc 1 606 0
 5136 006e 3046     		mov	r0, r6
 5137 0070 FFF7FEFF 		bl	GetHighByte
 5138              	.LVL617:
 5139 0074 E073     		strb	r0, [r4, #15]
 5140              	.L364:
 609:../user/source/DLT645.c ****             {
 5141              		.loc 1 609 0
 5142 0076 267C     		ldrb	r6, [r4, #16]	@ zero_extendqisi2
 5143 0078 677C     		ldrb	r7, [r4, #17]	@ zero_extendqisi2
 5144 007a 3946     		mov	r1, r7
 5145 007c 3046     		mov	r0, r6
 5146 007e FFF7FEFF 		bl	BCD_Verity
 5147              	.LVL618:
 5148 0082 C8B1     		cbz	r0, .L366
 611:../user/source/DLT645.c ****                 if ((B_Voltage > Voltage_MAX) || (B_Voltage < Voltage_MIN)) //ĞŞ¸ÄBÏàµçÑ¹
 5149              		.loc 1 611 0
 5150 0084 3946     		mov	r1, r7
 5151 0086 3046     		mov	r0, r6
 5152 0088 FFF7FEFF 		bl	Get_Voltage
 5153              	.LVL619:
 5154 008c 5B4B     		ldr	r3, .L378+16
 5155 008e 1860     		str	r0, [r3]
 612:../user/source/DLT645.c ****                 {
 5156              		.loc 1 612 0
 5157 0090 584B     		ldr	r3, .L378+8
 5158 0092 1B68     		ldr	r3, [r3]
 5159 0094 9842     		cmp	r0, r3
 5160 0096 03DC     		bgt	.L367
 612:../user/source/DLT645.c ****                 {
 5161              		.loc 1 612 0 is_stmt 0 discriminator 1
 5162 0098 574B     		ldr	r3, .L378+12
 5163 009a 1B68     		ldr	r3, [r3]
 5164 009c 9842     		cmp	r0, r3
 5165 009e 0BDA     		bge	.L366
 5166              	.L367:
 614:../user/source/DLT645.c ****                     pucBuffer[16] = GetLowByte(B_Voltage);
 5167              		.loc 1 614 0 is_stmt 1
 5168 00a0 FFF7FEFF 		bl	Voltage_Modifier_Method
 5169              	.LVL620:
 5170 00a4 0646     		mov	r6, r0
 5171 00a6 554B     		ldr	r3, .L378+16
 5172 00a8 1860     		str	r0, [r3]
 615:../user/source/DLT645.c ****                     pucBuffer[17] = GetHighByte(B_Voltage);
 5173              		.loc 1 615 0
 5174 00aa FFF7FEFF 		bl	GetLowByte
 5175              	.LVL621:
 5176 00ae 2074     		strb	r0, [r4, #16]
 616:../user/source/DLT645.c ****                 }
 5177              		.loc 1 616 0
 5178 00b0 3046     		mov	r0, r6
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 153


 5179 00b2 FFF7FEFF 		bl	GetHighByte
 5180              	.LVL622:
 5181 00b6 6074     		strb	r0, [r4, #17]
 5182              	.L366:
 619:../user/source/DLT645.c ****             {
 5183              		.loc 1 619 0
 5184 00b8 A67C     		ldrb	r6, [r4, #18]	@ zero_extendqisi2
 5185 00ba E77C     		ldrb	r7, [r4, #19]	@ zero_extendqisi2
 5186 00bc 3946     		mov	r1, r7
 5187 00be 3046     		mov	r0, r6
 5188 00c0 FFF7FEFF 		bl	BCD_Verity
 5189              	.LVL623:
 5190 00c4 C8B1     		cbz	r0, .L363
 621:../user/source/DLT645.c ****                 if ((C_Voltage > Voltage_MAX) || (C_Voltage < Voltage_MIN)) //ĞŞ¸ÄCÏàµçÑ¹
 5191              		.loc 1 621 0
 5192 00c6 3946     		mov	r1, r7
 5193 00c8 3046     		mov	r0, r6
 5194 00ca FFF7FEFF 		bl	Get_Voltage
 5195              	.LVL624:
 5196 00ce 4C4B     		ldr	r3, .L378+20
 5197 00d0 1860     		str	r0, [r3]
 622:../user/source/DLT645.c ****                 {
 5198              		.loc 1 622 0
 5199 00d2 484B     		ldr	r3, .L378+8
 5200 00d4 1B68     		ldr	r3, [r3]
 5201 00d6 9842     		cmp	r0, r3
 5202 00d8 03DC     		bgt	.L368
 622:../user/source/DLT645.c ****                 {
 5203              		.loc 1 622 0 is_stmt 0 discriminator 1
 5204 00da 474B     		ldr	r3, .L378+12
 5205 00dc 1B68     		ldr	r3, [r3]
 5206 00de 9842     		cmp	r0, r3
 5207 00e0 0BDA     		bge	.L363
 5208              	.L368:
 624:../user/source/DLT645.c ****                     pucBuffer[18] = GetLowByte(C_Voltage);
 5209              		.loc 1 624 0 is_stmt 1
 5210 00e2 FFF7FEFF 		bl	Voltage_Modifier_Method
 5211              	.LVL625:
 5212 00e6 0646     		mov	r6, r0
 5213 00e8 454B     		ldr	r3, .L378+20
 5214 00ea 1860     		str	r0, [r3]
 625:../user/source/DLT645.c ****                     pucBuffer[19] = GetHighByte(C_Voltage);
 5215              		.loc 1 625 0
 5216 00ec FFF7FEFF 		bl	GetLowByte
 5217              	.LVL626:
 5218 00f0 A074     		strb	r0, [r4, #18]
 626:../user/source/DLT645.c ****                 }
 5219              		.loc 1 626 0
 5220 00f2 3046     		mov	r0, r6
 5221 00f4 FFF7FEFF 		bl	GetHighByte
 5222              	.LVL627:
 5223 00f8 E074     		strb	r0, [r4, #19]
 5224              	.L363:
 630:../user/source/DLT645.c ****         {
 5225              		.loc 1 630 0
 5226 00fa 342D     		cmp	r5, #52
 5227 00fc 20D1     		bne	.L369
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 154


 632:../user/source/DLT645.c ****             {
 5228              		.loc 1 632 0
 5229 00fe A67B     		ldrb	r6, [r4, #14]	@ zero_extendqisi2
 5230 0100 E77B     		ldrb	r7, [r4, #15]	@ zero_extendqisi2
 5231 0102 3946     		mov	r1, r7
 5232 0104 3046     		mov	r0, r6
 5233 0106 FFF7FEFF 		bl	BCD_Verity
 5234              	.LVL628:
 5235 010a C8B1     		cbz	r0, .L369
 634:../user/source/DLT645.c ****                 if ((A_Voltage > Voltage_MAX) || (A_Voltage < Voltage_MIN)) //ĞŞ¸ÄAÏàµçÑ¹
 5236              		.loc 1 634 0
 5237 010c 3946     		mov	r1, r7
 5238 010e 3046     		mov	r0, r6
 5239 0110 FFF7FEFF 		bl	Get_Voltage
 5240              	.LVL629:
 5241 0114 364B     		ldr	r3, .L378+4
 5242 0116 1860     		str	r0, [r3]
 635:../user/source/DLT645.c ****                 {
 5243              		.loc 1 635 0
 5244 0118 364B     		ldr	r3, .L378+8
 5245 011a 1B68     		ldr	r3, [r3]
 5246 011c 9842     		cmp	r0, r3
 5247 011e 03DC     		bgt	.L370
 635:../user/source/DLT645.c ****                 {
 5248              		.loc 1 635 0 is_stmt 0 discriminator 1
 5249 0120 354B     		ldr	r3, .L378+12
 5250 0122 1B68     		ldr	r3, [r3]
 5251 0124 9842     		cmp	r0, r3
 5252 0126 0BDA     		bge	.L369
 5253              	.L370:
 637:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(A_Voltage);
 5254              		.loc 1 637 0 is_stmt 1
 5255 0128 FFF7FEFF 		bl	Voltage_Modifier_Method
 5256              	.LVL630:
 5257 012c 0646     		mov	r6, r0
 5258 012e 304B     		ldr	r3, .L378+4
 5259 0130 1860     		str	r0, [r3]
 638:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(A_Voltage);
 5260              		.loc 1 638 0
 5261 0132 FFF7FEFF 		bl	GetLowByte
 5262              	.LVL631:
 5263 0136 A073     		strb	r0, [r4, #14]
 639:../user/source/DLT645.c ****                 }
 5264              		.loc 1 639 0
 5265 0138 3046     		mov	r0, r6
 5266 013a FFF7FEFF 		bl	GetHighByte
 5267              	.LVL632:
 5268 013e E073     		strb	r0, [r4, #15]
 5269              	.L369:
 643:../user/source/DLT645.c ****         {
 5270              		.loc 1 643 0
 5271 0140 352D     		cmp	r5, #53
 5272 0142 20D1     		bne	.L371
 645:../user/source/DLT645.c ****             {
 5273              		.loc 1 645 0
 5274 0144 A67B     		ldrb	r6, [r4, #14]	@ zero_extendqisi2
 5275 0146 E77B     		ldrb	r7, [r4, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 155


 5276 0148 3946     		mov	r1, r7
 5277 014a 3046     		mov	r0, r6
 5278 014c FFF7FEFF 		bl	BCD_Verity
 5279              	.LVL633:
 5280 0150 C8B1     		cbz	r0, .L371
 647:../user/source/DLT645.c ****                 if ((B_Voltage > Voltage_MAX) || (B_Voltage < Voltage_MIN)) //ĞŞ¸ÄBÏàµçÑ¹
 5281              		.loc 1 647 0
 5282 0152 3946     		mov	r1, r7
 5283 0154 3046     		mov	r0, r6
 5284 0156 FFF7FEFF 		bl	Get_Voltage
 5285              	.LVL634:
 5286 015a 284B     		ldr	r3, .L378+16
 5287 015c 1860     		str	r0, [r3]
 648:../user/source/DLT645.c ****                 {
 5288              		.loc 1 648 0
 5289 015e 254B     		ldr	r3, .L378+8
 5290 0160 1B68     		ldr	r3, [r3]
 5291 0162 9842     		cmp	r0, r3
 5292 0164 03DC     		bgt	.L372
 648:../user/source/DLT645.c ****                 {
 5293              		.loc 1 648 0 is_stmt 0 discriminator 1
 5294 0166 244B     		ldr	r3, .L378+12
 5295 0168 1B68     		ldr	r3, [r3]
 5296 016a 9842     		cmp	r0, r3
 5297 016c 0BDA     		bge	.L371
 5298              	.L372:
 650:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(B_Voltage);
 5299              		.loc 1 650 0 is_stmt 1
 5300 016e FFF7FEFF 		bl	Voltage_Modifier_Method
 5301              	.LVL635:
 5302 0172 0646     		mov	r6, r0
 5303 0174 214B     		ldr	r3, .L378+16
 5304 0176 1860     		str	r0, [r3]
 651:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(B_Voltage);
 5305              		.loc 1 651 0
 5306 0178 FFF7FEFF 		bl	GetLowByte
 5307              	.LVL636:
 5308 017c A073     		strb	r0, [r4, #14]
 652:../user/source/DLT645.c ****                 }
 5309              		.loc 1 652 0
 5310 017e 3046     		mov	r0, r6
 5311 0180 FFF7FEFF 		bl	GetHighByte
 5312              	.LVL637:
 5313 0184 E073     		strb	r0, [r4, #15]
 5314              	.L371:
 656:../user/source/DLT645.c ****         {
 5315              		.loc 1 656 0
 5316 0186 362D     		cmp	r5, #54
 5317 0188 20D1     		bne	.L373
 658:../user/source/DLT645.c ****             {
 5318              		.loc 1 658 0
 5319 018a A57B     		ldrb	r5, [r4, #14]	@ zero_extendqisi2
 5320 018c E67B     		ldrb	r6, [r4, #15]	@ zero_extendqisi2
 5321 018e 3146     		mov	r1, r6
 5322 0190 2846     		mov	r0, r5
 5323 0192 FFF7FEFF 		bl	BCD_Verity
 5324              	.LVL638:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 156


 5325 0196 C8B1     		cbz	r0, .L373
 660:../user/source/DLT645.c ****                 if ((C_Voltage > Voltage_MAX) || (C_Voltage < Voltage_MIN)) //ĞŞ¸ÄCÏàµçÑ¹
 5326              		.loc 1 660 0
 5327 0198 3146     		mov	r1, r6
 5328 019a 2846     		mov	r0, r5
 5329 019c FFF7FEFF 		bl	Get_Voltage
 5330              	.LVL639:
 5331 01a0 174B     		ldr	r3, .L378+20
 5332 01a2 1860     		str	r0, [r3]
 661:../user/source/DLT645.c ****                 {
 5333              		.loc 1 661 0
 5334 01a4 134B     		ldr	r3, .L378+8
 5335 01a6 1B68     		ldr	r3, [r3]
 5336 01a8 9842     		cmp	r0, r3
 5337 01aa 03DC     		bgt	.L374
 661:../user/source/DLT645.c ****                 {
 5338              		.loc 1 661 0 is_stmt 0 discriminator 1
 5339 01ac 124B     		ldr	r3, .L378+12
 5340 01ae 1B68     		ldr	r3, [r3]
 5341 01b0 9842     		cmp	r0, r3
 5342 01b2 0BDA     		bge	.L373
 5343              	.L374:
 663:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(C_Voltage);
 5344              		.loc 1 663 0 is_stmt 1
 5345 01b4 FFF7FEFF 		bl	Voltage_Modifier_Method
 5346              	.LVL640:
 5347 01b8 0546     		mov	r5, r0
 5348 01ba 114B     		ldr	r3, .L378+20
 5349 01bc 1860     		str	r0, [r3]
 664:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(C_Voltage);
 5350              		.loc 1 664 0
 5351 01be FFF7FEFF 		bl	GetLowByte
 5352              	.LVL641:
 5353 01c2 A073     		strb	r0, [r4, #14]
 665:../user/source/DLT645.c ****                 }
 5354              		.loc 1 665 0
 5355 01c4 2846     		mov	r0, r5
 5356 01c6 FFF7FEFF 		bl	GetHighByte
 5357              	.LVL642:
 5358 01ca E073     		strb	r0, [r4, #15]
 5359              	.L373:
 670:../user/source/DLT645.c ****         {
 5360              		.loc 1 670 0
 5361 01cc 0023     		movs	r3, #0
 590:../user/source/DLT645.c ****     uint8_t i = 0;
 5362              		.loc 1 590 0
 5363 01ce 1A46     		mov	r2, r3
 670:../user/source/DLT645.c ****         {
 5364              		.loc 1 670 0
 5365 01d0 04E0     		b	.L375
 5366              	.LVL643:
 5367              	.L376:
 672:../user/source/DLT645.c ****         }
 5368              		.loc 1 672 0 discriminator 3
 5369 01d2 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 5370 01d4 0A44     		add	r2, r2, r1
 5371              	.LVL644:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 157


 5372 01d6 D2B2     		uxtb	r2, r2
 5373              	.LVL645:
 670:../user/source/DLT645.c ****         {
 5374              		.loc 1 670 0 discriminator 3
 5375 01d8 0133     		adds	r3, r3, #1
 5376              	.LVL646:
 5377 01da DBB2     		uxtb	r3, r3
 5378              	.LVL647:
 5379              	.L375:
 670:../user/source/DLT645.c ****         {
 5380              		.loc 1 670 0 is_stmt 0 discriminator 1
 5381 01dc 0949     		ldr	r1, .L378+24
 5382 01de 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 5383 01e0 01F10A00 		add	r0, r1, #10
 5384 01e4 8342     		cmp	r3, r0
 5385 01e6 F4DB     		blt	.L376
 674:../user/source/DLT645.c ****     }
 5386              		.loc 1 674 0 is_stmt 1
 5387 01e8 2254     		strb	r2, [r4, r0]
 5388              	.LVL648:
 5389              	.L361:
 5390 01ea F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5391              	.L379:
 5392              		.align	2
 5393              	.L378:
 5394 01ec 00000000 		.word	.LANCHOR5
 5395 01f0 00000000 		.word	.LANCHOR4
 5396 01f4 00000000 		.word	Voltage_MAX
 5397 01f8 00000000 		.word	Voltage_MIN
 5398 01fc 00000000 		.word	.LANCHOR6
 5399 0200 00000000 		.word	.LANCHOR7
 5400 0204 00000000 		.word	.LANCHOR0
 5401              		.cfi_endproc
 5402              	.LFE120:
 5404              		.section	.text.vVoltageHandle,"ax",%progbits
 5405              		.align	2
 5406              		.global	vVoltageHandle
 5407              		.thumb
 5408              		.thumb_func
 5410              	vVoltageHandle:
 5411              	.LFB119:
 570:../user/source/DLT645.c ****     /*µÈ´ıµçÑ¹»ØÖ¡×´Ì¬ÇåÎ»*/
 5412              		.loc 1 570 0
 5413              		.cfi_startproc
 5414              		@ args = 0, pretend = 0, frame = 0
 5415              		@ frame_needed = 0, uses_anonymous_args = 0
 5416              	.LVL649:
 5417 0000 08B5     		push	{r3, lr}
 5418              	.LCFI49:
 5419              		.cfi_def_cfa_offset 8
 5420              		.cfi_offset 3, -8
 5421              		.cfi_offset 14, -4
 572:../user/source/DLT645.c ****     /*¼ÆÊ±Æ÷¸´Î»*/
 5422              		.loc 1 572 0
 5423 0002 0122     		movs	r2, #1
 5424 0004 044B     		ldr	r3, .L382
 5425 0006 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 158


 574:../user/source/DLT645.c ****     uwTime2FramesCounter = 0;
 5426              		.loc 1 574 0
 5427 0008 0023     		movs	r3, #0
 5428 000a 044A     		ldr	r2, .L382+4
 5429 000c 1370     		strb	r3, [r2]
 575:../user/source/DLT645.c ****     /*µçÑ¹Ö¡ÅĞ¶Ï´¦Àí*/
 5430              		.loc 1 575 0
 5431 000e 044A     		ldr	r2, .L382+8
 5432 0010 1380     		strh	r3, [r2]	@ movhi
 577:../user/source/DLT645.c **** }
 5433              		.loc 1 577 0
 5434 0012 FFF7FEFF 		bl	Voltage_Modifier
 5435              	.LVL650:
 5436 0016 08BD     		pop	{r3, pc}
 5437              	.L383:
 5438              		.align	2
 5439              	.L382:
 5440 0018 00000000 		.word	Voltage_Frame_Status
 5441 001c 00000000 		.word	blFramesCounterStatus
 5442 0020 00000000 		.word	uwTime2FramesCounter
 5443              		.cfi_endproc
 5444              	.LFE119:
 5446              		.section	.text.vCurrent_Limit_DefaultSet,"ax",%progbits
 5447              		.align	2
 5448              		.global	vCurrent_Limit_DefaultSet
 5449              		.thumb
 5450              		.thumb_func
 5452              	vCurrent_Limit_DefaultSet:
 5453              	.LFB132:
1253:../user/source/DLT645.c ****     uint32_t uwLimit;
 5454              		.loc 1 1253 0
 5455              		.cfi_startproc
 5456              		@ args = 0, pretend = 0, frame = 0
 5457              		@ frame_needed = 0, uses_anonymous_args = 0
 5458 0000 08B5     		push	{r3, lr}
 5459              	.LCFI50:
 5460              		.cfi_def_cfa_offset 8
 5461              		.cfi_offset 3, -8
 5462              		.cfi_offset 14, -4
1268:../user/source/DLT645.c ****     TransFormer.rated_current = 288000;
 5463              		.loc 1 1268 0
 5464 0002 174B     		ldr	r3, .L390
 5465 0004 C822     		movs	r2, #200
 5466 0006 1A60     		str	r2, [r3]
1269:../user/source/DLT645.c **** #endif
 5467              		.loc 1 1269 0
 5468 0008 164A     		ldr	r2, .L390+4
 5469 000a 5A60     		str	r2, [r3, #4]
1277:../user/source/DLT645.c ****     /*±ä±ÈÎŞĞ§ £¬ÔòÎª³õ´ÎÉÏµç*/
 5470              		.loc 1 1277 0
 5471 000c 1648     		ldr	r0, .L390+8
 5472 000e FFF7FEFF 		bl	Flash_Read_Word
 5473              	.LVL651:
1279:../user/source/DLT645.c ****     {
 5474              		.loc 1 1279 0
 5475 0012 B0F1FF3F 		cmp	r0, #-1
 5476 0016 06D1     		bne	.L385
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 159


1282:../user/source/DLT645.c ****         /*´æ´¢CTÖµ*/
 5477              		.loc 1 1282 0
 5478 0018 5021     		movs	r1, #80
 5479 001a 114B     		ldr	r3, .L390
 5480 001c 9960     		str	r1, [r3, #8]
1284:../user/source/DLT645.c ****     }
 5481              		.loc 1 1284 0
 5482 001e 1248     		ldr	r0, .L390+8
 5483              	.LVL652:
 5484 0020 FFF7FEFF 		bl	Flash_Write_Word
 5485              	.LVL653:
 5486 0024 01E0     		b	.L386
 5487              	.LVL654:
 5488              	.L385:
1289:../user/source/DLT645.c ****     }
 5489              		.loc 1 1289 0
 5490 0026 0E4B     		ldr	r3, .L390
 5491 0028 9860     		str	r0, [r3, #8]
 5492              	.LVL655:
 5493              	.L386:
1292:../user/source/DLT645.c ****     /*²ÎÊıÎŞĞ§£¬³õ´ÎÉÏµç*/
 5494              		.loc 1 1292 0
 5495 002a 1048     		ldr	r0, .L390+12
 5496 002c FFF7FEFF 		bl	Flash_Read_Word
 5497              	.LVL656:
1294:../user/source/DLT645.c ****     {
 5498              		.loc 1 1294 0
 5499 0030 B0F1FF3F 		cmp	r0, #-1
 5500 0034 10D1     		bne	.L387
1297:../user/source/DLT645.c ****         /*´æ´¢µçÁ÷ÉÏÏŞÖµ*/
 5501              		.loc 1 1297 0
 5502 0036 0A48     		ldr	r0, .L390
 5503              	.LVL657:
 5504 0038 4368     		ldr	r3, [r0, #4]
 5505 003a 8268     		ldr	r2, [r0, #8]
 5506 003c B3FBF2F2 		udiv	r2, r3, r2
 5507 0040 02EB4202 		add	r2, r2, r2, lsl #1
 5508 0044 D300     		lsls	r3, r2, #3
 5509 0046 0A49     		ldr	r1, .L390+16
 5510 0048 A1FB0331 		umull	r3, r1, r1, r3
 5511 004c C908     		lsrs	r1, r1, #3
 5512 004e C160     		str	r1, [r0, #12]
1299:../user/source/DLT645.c ****     }
 5513              		.loc 1 1299 0
 5514 0050 0648     		ldr	r0, .L390+12
 5515 0052 FFF7FEFF 		bl	Flash_Write_Word
 5516              	.LVL658:
 5517 0056 08BD     		pop	{r3, pc}
 5518              	.LVL659:
 5519              	.L387:
1304:../user/source/DLT645.c ****     }
 5520              		.loc 1 1304 0
 5521 0058 014B     		ldr	r3, .L390
 5522 005a D860     		str	r0, [r3, #12]
 5523 005c 08BD     		pop	{r3, pc}
 5524              	.L391:
 5525 005e 00BF     		.align	2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 160


 5526              	.L390:
 5527 0060 00000000 		.word	TransFormer
 5528 0064 00650400 		.word	288000
 5529 0068 201F0308 		.word	134422304
 5530 006c 1C1F0308 		.word	134422300
 5531 0070 CDCCCCCC 		.word	-858993459
 5532              		.cfi_endproc
 5533              	.LFE132:
 5535              		.section	.text.vCurrentDirect_Modify,"ax",%progbits
 5536              		.align	2
 5537              		.global	vCurrentDirect_Modify
 5538              		.thumb
 5539              		.thumb_func
 5541              	vCurrentDirect_Modify:
 5542              	.LFB134:
1410:../user/source/DLT645.c ****     uint8_t i = 0;
 5543              		.loc 1 1410 0
 5544              		.cfi_startproc
 5545              		@ args = 0, pretend = 0, frame = 0
 5546              		@ frame_needed = 0, uses_anonymous_args = 0
 5547              		@ link register save eliminated.
 5548              	.LVL660:
1413:../user/source/DLT645.c ****     {
 5549              		.loc 1 1413 0
 5550 0000 C27A     		ldrb	r2, [r0, #11]	@ zero_extendqisi2
 5551 0002 323A     		subs	r2, r2, #50
 5552 0004 042A     		cmp	r2, #4
 5553 0006 55D8     		bhi	.L392
 5554 0008 DFE802F0 		tbb	[pc, r2]
 5555              	.L395:
 5556 000c 03       		.byte	(.L394-.L395)/2
 5557 000d 54       		.byte	(.L392-.L395)/2
 5558 000e 1F       		.byte	(.L396-.L395)/2
 5559 000f 31       		.byte	(.L397-.L395)/2
 5560 0010 43       		.byte	(.L398-.L395)/2
 5561 0011 00       		.p2align 1
 5562              	.L394:
1417:../user/source/DLT645.c ****         pucBuffer[19] = (pucBuffer[19] - 0x33) & 0xEF + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ»Æ
 5563              		.loc 1 1417 0
 5564 0012 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 5565 0014 333A     		subs	r2, r2, #51
 5566 0016 02F02202 		and	r2, r2, #34
 5567 001a 0274     		strb	r2, [r0, #16]
1418:../user/source/DLT645.c ****         pucBuffer[22] = (pucBuffer[22] - 0x33) & 0xEF + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ»Æ
 5568              		.loc 1 1418 0
 5569 001c C27C     		ldrb	r2, [r0, #19]	@ zero_extendqisi2
 5570 001e 333A     		subs	r2, r2, #51
 5571 0020 02F02202 		and	r2, r2, #34
 5572 0024 C274     		strb	r2, [r0, #19]
1419:../user/source/DLT645.c ****         for (i = 0; i < 23; i++)                              //Êı¾İÓò³¤¶È23
 5573              		.loc 1 1419 0
 5574 0026 827D     		ldrb	r2, [r0, #22]	@ zero_extendqisi2
 5575 0028 333A     		subs	r2, r2, #51
 5576 002a 02F02202 		and	r2, r2, #34
 5577 002e 8275     		strb	r2, [r0, #22]
1420:../user/source/DLT645.c ****         {
 5578              		.loc 1 1420 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 161


 5579 0030 0022     		movs	r2, #0
 5580 0032 04E0     		b	.L399
 5581              	.LVL661:
 5582              	.L400:
1422:../user/source/DLT645.c ****         }
 5583              		.loc 1 1422 0 discriminator 3
 5584 0034 815C     		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 5585 0036 0B44     		add	r3, r3, r1
 5586              	.LVL662:
 5587 0038 DBB2     		uxtb	r3, r3
 5588              	.LVL663:
1420:../user/source/DLT645.c ****         {
 5589              		.loc 1 1420 0 discriminator 3
 5590 003a 0132     		adds	r2, r2, #1
 5591              	.LVL664:
 5592 003c D2B2     		uxtb	r2, r2
 5593              	.LVL665:
 5594              	.L399:
1420:../user/source/DLT645.c ****         {
 5595              		.loc 1 1420 0 is_stmt 0 discriminator 1
 5596 003e 162A     		cmp	r2, #22
 5597 0040 F8D9     		bls	.L400
1424:../user/source/DLT645.c ****         pucBuffer[24] = 0x16;
 5598              		.loc 1 1424 0 is_stmt 1
 5599 0042 C375     		strb	r3, [r0, #23]
1425:../user/source/DLT645.c ****         break;
 5600              		.loc 1 1425 0
 5601 0044 1623     		movs	r3, #22
 5602              	.LVL666:
 5603 0046 0376     		strb	r3, [r0, #24]
1426:../user/source/DLT645.c ****     }
 5604              		.loc 1 1426 0
 5605 0048 7047     		bx	lr
 5606              	.LVL667:
 5607              	.L396:
1430:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                              //Êı¾İÓò³¤¶È17
 5608              		.loc 1 1430 0
 5609 004a 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 5610 004c 333A     		subs	r2, r2, #51
 5611 004e 02F02202 		and	r2, r2, #34
 5612 0052 0274     		strb	r2, [r0, #16]
1431:../user/source/DLT645.c ****         {
 5613              		.loc 1 1431 0
 5614 0054 0022     		movs	r2, #0
 5615 0056 04E0     		b	.L401
 5616              	.LVL668:
 5617              	.L402:
1433:../user/source/DLT645.c ****         }
 5618              		.loc 1 1433 0 discriminator 3
 5619 0058 815C     		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 5620 005a 0B44     		add	r3, r3, r1
 5621              	.LVL669:
 5622 005c DBB2     		uxtb	r3, r3
 5623              	.LVL670:
1431:../user/source/DLT645.c ****         {
 5624              		.loc 1 1431 0 discriminator 3
 5625 005e 0132     		adds	r2, r2, #1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 162


 5626              	.LVL671:
 5627 0060 D2B2     		uxtb	r2, r2
 5628              	.LVL672:
 5629              	.L401:
1431:../user/source/DLT645.c ****         {
 5630              		.loc 1 1431 0 is_stmt 0 discriminator 1
 5631 0062 102A     		cmp	r2, #16
 5632 0064 F8D9     		bls	.L402
1435:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
 5633              		.loc 1 1435 0 is_stmt 1
 5634 0066 4374     		strb	r3, [r0, #17]
1436:../user/source/DLT645.c ****         break;
 5635              		.loc 1 1436 0
 5636 0068 1623     		movs	r3, #22
 5637              	.LVL673:
 5638 006a 8374     		strb	r3, [r0, #18]
1437:../user/source/DLT645.c ****     }
 5639              		.loc 1 1437 0
 5640 006c 7047     		bx	lr
 5641              	.LVL674:
 5642              	.L397:
1441:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                              //Êı¾İÓò³¤¶È17
 5643              		.loc 1 1441 0
 5644 006e 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 5645 0070 333A     		subs	r2, r2, #51
 5646 0072 02F02202 		and	r2, r2, #34
 5647 0076 0274     		strb	r2, [r0, #16]
1442:../user/source/DLT645.c ****         {
 5648              		.loc 1 1442 0
 5649 0078 0022     		movs	r2, #0
 5650 007a 04E0     		b	.L403
 5651              	.LVL675:
 5652              	.L404:
1444:../user/source/DLT645.c ****         }
 5653              		.loc 1 1444 0 discriminator 3
 5654 007c 815C     		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 5655 007e 0B44     		add	r3, r3, r1
 5656              	.LVL676:
 5657 0080 DBB2     		uxtb	r3, r3
 5658              	.LVL677:
1442:../user/source/DLT645.c ****         {
 5659              		.loc 1 1442 0 discriminator 3
 5660 0082 0132     		adds	r2, r2, #1
 5661              	.LVL678:
 5662 0084 D2B2     		uxtb	r2, r2
 5663              	.LVL679:
 5664              	.L403:
1442:../user/source/DLT645.c ****         {
 5665              		.loc 1 1442 0 is_stmt 0 discriminator 1
 5666 0086 102A     		cmp	r2, #16
 5667 0088 F8D9     		bls	.L404
1446:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
 5668              		.loc 1 1446 0 is_stmt 1
 5669 008a 4374     		strb	r3, [r0, #17]
1447:../user/source/DLT645.c ****         break;
 5670              		.loc 1 1447 0
 5671 008c 1623     		movs	r3, #22
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 163


 5672              	.LVL680:
 5673 008e 8374     		strb	r3, [r0, #18]
1448:../user/source/DLT645.c ****     }
 5674              		.loc 1 1448 0
 5675 0090 7047     		bx	lr
 5676              	.LVL681:
 5677              	.L398:
1452:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                              //Êı¾İÓò³¤¶È16
 5678              		.loc 1 1452 0
 5679 0092 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 5680 0094 333A     		subs	r2, r2, #51
 5681 0096 02F02202 		and	r2, r2, #34
 5682 009a 0274     		strb	r2, [r0, #16]
1453:../user/source/DLT645.c ****         {
 5683              		.loc 1 1453 0
 5684 009c 0022     		movs	r2, #0
 5685 009e 04E0     		b	.L405
 5686              	.LVL682:
 5687              	.L406:
1455:../user/source/DLT645.c ****         }
 5688              		.loc 1 1455 0 discriminator 3
 5689 00a0 815C     		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 5690 00a2 0B44     		add	r3, r3, r1
 5691              	.LVL683:
 5692 00a4 DBB2     		uxtb	r3, r3
 5693              	.LVL684:
1453:../user/source/DLT645.c ****         {
 5694              		.loc 1 1453 0 discriminator 3
 5695 00a6 0132     		adds	r2, r2, #1
 5696              	.LVL685:
 5697 00a8 D2B2     		uxtb	r2, r2
 5698              	.LVL686:
 5699              	.L405:
1453:../user/source/DLT645.c ****         {
 5700              		.loc 1 1453 0 is_stmt 0 discriminator 1
 5701 00aa 102A     		cmp	r2, #16
 5702 00ac F8D9     		bls	.L406
1457:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
 5703              		.loc 1 1457 0 is_stmt 1
 5704 00ae 4374     		strb	r3, [r0, #17]
1458:../user/source/DLT645.c ****         break;
 5705              		.loc 1 1458 0
 5706 00b0 1623     		movs	r3, #22
 5707              	.LVL687:
 5708 00b2 8374     		strb	r3, [r0, #18]
 5709              	.LVL688:
 5710              	.L392:
 5711 00b4 7047     		bx	lr
 5712              		.cfi_endproc
 5713              	.LFE134:
 5715 00b6 00BF     		.section	.text.vCurrent_Count_Clear,"ax",%progbits
 5716              		.align	2
 5717              		.global	vCurrent_Count_Clear
 5718              		.thumb
 5719              		.thumb_func
 5721              	vCurrent_Count_Clear:
 5722              	.LFB140:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 164


1720:../user/source/DLT645.c ****     Acurrent.count = 0;
 5723              		.loc 1 1720 0
 5724              		.cfi_startproc
 5725              		@ args = 0, pretend = 0, frame = 0
 5726              		@ frame_needed = 0, uses_anonymous_args = 0
 5727              		@ link register save eliminated.
1721:../user/source/DLT645.c ****     Bcurrent.count = 0;
 5728              		.loc 1 1721 0
 5729 0000 0023     		movs	r3, #0
 5730 0002 034A     		ldr	r2, .L408
 5731 0004 1371     		strb	r3, [r2, #4]
1722:../user/source/DLT645.c ****     Ccurrent.count = 0;
 5732              		.loc 1 1722 0
 5733 0006 034A     		ldr	r2, .L408+4
 5734 0008 1371     		strb	r3, [r2, #4]
1723:../user/source/DLT645.c **** }
 5735              		.loc 1 1723 0
 5736 000a 034A     		ldr	r2, .L408+8
 5737 000c 1371     		strb	r3, [r2, #4]
 5738 000e 7047     		bx	lr
 5739              	.L409:
 5740              		.align	2
 5741              	.L408:
 5742 0010 00000000 		.word	.LANCHOR1
 5743 0014 00000000 		.word	.LANCHOR2
 5744 0018 00000000 		.word	.LANCHOR3
 5745              		.cfi_endproc
 5746              	.LFE140:
 5748              		.section	.text.vEnergy_Modify_Init,"ax",%progbits
 5749              		.align	2
 5750              		.global	vEnergy_Modify_Init
 5751              		.thumb
 5752              		.thumb_func
 5754              	vEnergy_Modify_Init:
 5755              	.LFB144:
1780:../user/source/DLT645.c ****     uint8_t tmp;
 5756              		.loc 1 1780 0
 5757              		.cfi_startproc
 5758              		@ args = 0, pretend = 0, frame = 0
 5759              		@ frame_needed = 0, uses_anonymous_args = 0
 5760 0000 08B5     		push	{r3, lr}
 5761              	.LCFI51:
 5762              		.cfi_def_cfa_offset 8
 5763              		.cfi_offset 3, -8
 5764              		.cfi_offset 14, -4
1783:../user/source/DLT645.c ****     tmp = EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR);
 5765              		.loc 1 1783 0
 5766 0002 0848     		ldr	r0, .L414
 5767 0004 FFF7FEFF 		bl	EEProm_Read
 5768              	.LVL689:
 5769 0008 074B     		ldr	r3, .L414+4
 5770 000a 1870     		strb	r0, [r3]
1784:../user/source/DLT645.c ****     /*ÅĞ¶ÏflashÖĞÊÇ·ñÒÑ´æ´¢µçÑ¹ĞŞ¸Ä±ÈÀı*/
 5771              		.loc 1 1784 0
 5772 000c 0748     		ldr	r0, .L414+8
 5773 000e FFF7FEFF 		bl	EEProm_Read
 5774              	.LVL690:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 165


1786:../user/source/DLT645.c ****     {
 5775              		.loc 1 1786 0
 5776 0012 FF28     		cmp	r0, #255
 5777 0014 03D1     		bne	.L411
1789:../user/source/DLT645.c ****     }
 5778              		.loc 1 1789 0
 5779 0016 5A22     		movs	r2, #90
 5780 0018 054B     		ldr	r3, .L414+12
 5781 001a 1A70     		strb	r2, [r3]
 5782 001c 08BD     		pop	{r3, pc}
 5783              	.L411:
1793:../user/source/DLT645.c ****     }
 5784              		.loc 1 1793 0
 5785 001e 044B     		ldr	r3, .L414+12
 5786 0020 1870     		strb	r0, [r3]
 5787 0022 08BD     		pop	{r3, pc}
 5788              	.L415:
 5789              		.align	2
 5790              	.L414:
 5791 0024 181F0308 		.word	134422296
 5792 0028 00000000 		.word	.LANCHOR8
 5793 002c 101F0308 		.word	134422288
 5794 0030 00000000 		.word	ucDayfrozen_Modify_Ratio
 5795              		.cfi_endproc
 5796              	.LFE144:
 5798              		.global	__aeabi_uldivmod
 5799              		.section	.text.vNow_Frozen_Modify_Mothod,"ax",%progbits
 5800              		.align	2
 5801              		.global	vNow_Frozen_Modify_Mothod
 5802              		.thumb
 5803              		.thumb_func
 5805              	vNow_Frozen_Modify_Mothod:
 5806              	.LFB147:
1840:../user/source/DLT645.c ****     uint32_t RealValue;
 5807              		.loc 1 1840 0
 5808              		.cfi_startproc
 5809              		@ args = 0, pretend = 0, frame = 0
 5810              		@ frame_needed = 0, uses_anonymous_args = 0
 5811              	.LVL691:
 5812 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5813              	.LCFI52:
 5814              		.cfi_def_cfa_offset 24
 5815              		.cfi_offset 4, -24
 5816              		.cfi_offset 5, -20
 5817              		.cfi_offset 6, -16
 5818              		.cfi_offset 7, -12
 5819              		.cfi_offset 8, -8
 5820              		.cfi_offset 14, -4
 5821 0004 0646     		mov	r6, r0
 5822 0006 8846     		mov	r8, r1
 5823 0008 1746     		mov	r7, r2
1845:../user/source/DLT645.c ****     Modified_Value = Flash_Read_Word(ModifiedValueAddr);
 5824              		.loc 1 1845 0
 5825 000a 0846     		mov	r0, r1
 5826              	.LVL692:
 5827 000c FFF7FEFF 		bl	Flash_Read_Word
 5828              	.LVL693:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 166


 5829 0010 0546     		mov	r5, r0
 5830              	.LVL694:
1846:../user/source/DLT645.c ****     /*ÖÕ¶ËµÚÒ»´ÎÊ¹ÓÃ*/
 5831              		.loc 1 1846 0
 5832 0012 3846     		mov	r0, r7
 5833              	.LVL695:
 5834 0014 FFF7FEFF 		bl	Flash_Read_Word
 5835              	.LVL696:
1848:../user/source/DLT645.c ****     {
 5836              		.loc 1 1848 0
 5837 0018 B5F1FF3F 		cmp	r5, #-1
 5838 001c 03D0     		beq	.L417
 5839 001e 0446     		mov	r4, r0
1848:../user/source/DLT645.c ****     {
 5840              		.loc 1 1848 0 is_stmt 0 discriminator 1
 5841 0020 B0F1FF3F 		cmp	r0, #-1
 5842 0024 0AD1     		bne	.L418
 5843              	.L417:
1851:../user/source/DLT645.c ****         Flash_Write_Word(ModifiedValueAddr, nowenergy);
 5844              		.loc 1 1851 0 is_stmt 1
 5845 0026 3146     		mov	r1, r6
 5846 0028 4046     		mov	r0, r8
 5847              	.LVL697:
 5848 002a FFF7FEFF 		bl	Flash_Write_Word
 5849              	.LVL698:
1852:../user/source/DLT645.c ****         /*²»ĞŞ¸Ä*/
 5850              		.loc 1 1852 0
 5851 002e 3146     		mov	r1, r6
 5852 0030 3846     		mov	r0, r7
 5853 0032 FFF7FEFF 		bl	Flash_Write_Word
 5854              	.LVL699:
1854:../user/source/DLT645.c ****     }
 5855              		.loc 1 1854 0
 5856 0036 3046     		mov	r0, r6
 5857 0038 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5858              	.LVL700:
 5859              	.L418:
1860:../user/source/DLT645.c ****         {
 5860              		.loc 1 1860 0
 5861 003c B542     		cmp	r5, r6
 5862 003e 0ED9     		bls	.L420
1864:../user/source/DLT645.c ****         }
 5863              		.loc 1 1864 0
 5864 0040 751B     		subs	r5, r6, r5
 5865              	.LVL701:
 5866 0042 1748     		ldr	r0, .L424
 5867              	.LVL702:
 5868 0044 2844     		add	r0, r0, r5
 5869 0046 174B     		ldr	r3, .L424+4
 5870 0048 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5871 004a A2FB0001 		umull	r0, r1, r2, r0
 5872 004e 6422     		movs	r2, #100
 5873 0050 0023     		movs	r3, #0
 5874 0052 3230     		adds	r0, r0, #50
 5875 0054 41F10001 		adc	r1, r1, #0
 5876 0058 FFF7FEFF 		bl	__aeabi_uldivmod
 5877              	.LVL703:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 167


 5878 005c 0BE0     		b	.L421
 5879              	.LVL704:
 5880              	.L420:
1868:../user/source/DLT645.c ****         }
 5881              		.loc 1 1868 0
 5882 005e 751B     		subs	r5, r6, r5
 5883              	.LVL705:
 5884 0060 104B     		ldr	r3, .L424+4
 5885 0062 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5886              	.LVL706:
 5887 0064 A0FB0501 		umull	r0, r1, r0, r5
 5888 0068 6422     		movs	r2, #100
 5889 006a 0023     		movs	r3, #0
 5890 006c 3230     		adds	r0, r0, #50
 5891 006e 41F10001 		adc	r1, r1, #0
 5892 0072 FFF7FEFF 		bl	__aeabi_uldivmod
 5893              	.LVL707:
 5894              	.L421:
1870:../user/source/DLT645.c ****         /*ÀÛ¼ÆÖµÒç³öºó¹éÁã*/
 5895              		.loc 1 1870 0
 5896 0076 0444     		add	r4, r4, r0
 5897              	.LVL708:
1872:../user/source/DLT645.c ****         /*½«ÉÏËÍÖµ´æ´¢ÎªÕæÊµÖµ*/
 5898              		.loc 1 1872 0
 5899 0078 094B     		ldr	r3, .L424
 5900 007a 9C42     		cmp	r4, r3
 5901 007c 05D9     		bls	.L422
1872:../user/source/DLT645.c ****         /*½«ÉÏËÍÖµ´æ´¢ÎªÕæÊµÖµ*/
 5902              		.loc 1 1872 0 is_stmt 0 discriminator 1
 5903 007e 04F17A44 		add	r4, r4, #-100663296
 5904              	.LVL709:
 5905 0082 04F52124 		add	r4, r4, #659456
 5906              	.LVL710:
 5907 0086 04F60174 		addw	r4, r4, #3841
 5908              	.LVL711:
 5909              	.L422:
1874:../user/source/DLT645.c ****         /*ĞÂµÄĞŞ¸ÄÖµ¸²¸Ç¾ÉÖµ´æ´¢*/
 5910              		.loc 1 1874 0 is_stmt 1 discriminator 4
 5911 008a 3146     		mov	r1, r6
 5912 008c 4046     		mov	r0, r8
 5913 008e FFF7FEFF 		bl	Flash_Write_Word
 5914              	.LVL712:
1876:../user/source/DLT645.c ****         /*·µ»ØĞŞ¸ÄÖµ*/
 5915              		.loc 1 1876 0 discriminator 4
 5916 0092 2146     		mov	r1, r4
 5917 0094 3846     		mov	r0, r7
 5918 0096 FFF7FEFF 		bl	Flash_Write_Word
 5919              	.LVL713:
1878:../user/source/DLT645.c ****     }
 5920              		.loc 1 1878 0 discriminator 4
 5921 009a 2046     		mov	r0, r4
1880:../user/source/DLT645.c **** 
 5922              		.loc 1 1880 0 discriminator 4
 5923 009c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5924              	.LVL714:
 5925              	.L425:
 5926              		.align	2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 168


 5927              	.L424:
 5928 00a0 FFE0F505 		.word	99999999
 5929 00a4 00000000 		.word	ucDayfrozen_Modify_Ratio
 5930              		.cfi_endproc
 5931              	.LFE147:
 5933              		.section	.text.vNowEnergy_Modifier,"ax",%progbits
 5934              		.align	2
 5935              		.global	vNowEnergy_Modifier
 5936              		.thumb
 5937              		.thumb_func
 5939              	vNowEnergy_Modifier:
 5940              	.LFB148:
1899:../user/source/DLT645.c ****     uint16_t i;
 5941              		.loc 1 1899 0
 5942              		.cfi_startproc
 5943              		@ args = 0, pretend = 0, frame = 0
 5944              		@ frame_needed = 0, uses_anonymous_args = 0
 5945              	.LVL715:
1906:../user/source/DLT645.c ****         return;
 5946              		.loc 1 1906 0
 5947 0000 834B     		ldr	r3, .L449
 5948 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5949 0004 002B     		cmp	r3, #0
 5950 0006 00F00181 		beq	.L448
1899:../user/source/DLT645.c ****     uint16_t i;
 5951              		.loc 1 1899 0
 5952 000a 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 5953              	.LCFI53:
 5954              		.cfi_def_cfa_offset 28
 5955              		.cfi_offset 4, -28
 5956              		.cfi_offset 5, -24
 5957              		.cfi_offset 6, -20
 5958              		.cfi_offset 7, -16
 5959              		.cfi_offset 8, -12
 5960              		.cfi_offset 9, -8
 5961              		.cfi_offset 14, -4
 5962 000e 83B0     		sub	sp, sp, #12
 5963              	.LCFI54:
 5964              		.cfi_def_cfa_offset 40
 5965 0010 0446     		mov	r4, r0
1908:../user/source/DLT645.c ****     switch (pucBuffer[11])
 5966              		.loc 1 1908 0
 5967 0012 437C     		ldrb	r3, [r0, #17]	@ zero_extendqisi2
 5968 0014 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 5969 0016 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 5970 0018 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 5971              	.LVL716:
 5972 001a FFF7FEFF 		bl	Get_Energy
 5973              	.LVL717:
 5974 001e 0546     		mov	r5, r0
 5975              	.LVL718:
1909:../user/source/DLT645.c ****     {
 5976              		.loc 1 1909 0
 5977 0020 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 5978 0022 323B     		subs	r3, r3, #50
 5979 0024 052B     		cmp	r3, #5
 5980 0026 00F28180 		bhi	.L428
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 169


 5981 002a DFE803F0 		tbb	[pc, r3]
 5982              	.L430:
 5983 002e 3F       		.byte	(.L429-.L430)/2
 5984 002f 03       		.byte	(.L431-.L430)/2
 5985 0030 27       		.byte	(.L432-.L430)/2
 5986 0031 2D       		.byte	(.L433-.L430)/2
 5987 0032 33       		.byte	(.L434-.L430)/2
 5988 0033 39       		.byte	(.L435-.L430)/2
 5989              		.p2align 1
 5990              	.L431:
1913:../user/source/DLT645.c ****         {
 5991              		.loc 1 1913 0
 5992 0034 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 5993 0036 482B     		cmp	r3, #72
 5994 0038 0ED0     		beq	.L436
 5995 003a 02D8     		bhi	.L437
 5996 003c 342B     		cmp	r3, #52
 5997 003e 05D0     		beq	.L438
 5998 0040 74E0     		b	.L428
 5999              	.L437:
 6000 0042 5C2B     		cmp	r3, #92
 6001 0044 0ED0     		beq	.L439
 6002 0046 702B     		cmp	r3, #112
 6003 0048 12D0     		beq	.L440
 6004 004a 6FE0     		b	.L428
 6005              	.L438:
1918:../user/source/DLT645.c ****                                                FLASH_MODIFIED_ALL_NOWENERGY_ADDR);
 6006              		.loc 1 1918 0
 6007 004c 714A     		ldr	r2, .L449+4
 6008 004e 7249     		ldr	r1, .L449+8
 6009 0050 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6010              	.LVL719:
 6011 0054 0546     		mov	r5, r0
 6012              	.LVL720:
1920:../user/source/DLT645.c ****         }
 6013              		.loc 1 1920 0
 6014 0056 69E0     		b	.L428
 6015              	.L436:
1925:../user/source/DLT645.c ****                                                FLASH_MODIFIED_A_NOWENERGY_ADDR);
 6016              		.loc 1 1925 0
 6017 0058 704A     		ldr	r2, .L449+12
 6018 005a 7149     		ldr	r1, .L449+16
 6019 005c FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6020              	.LVL721:
 6021 0060 0546     		mov	r5, r0
 6022              	.LVL722:
1927:../user/source/DLT645.c ****         }
 6023              		.loc 1 1927 0
 6024 0062 63E0     		b	.L428
 6025              	.L439:
1932:../user/source/DLT645.c ****                                                FLASH_MODIFIED_B_NOWENERGY_ADDR);
 6026              		.loc 1 1932 0
 6027 0064 6F4A     		ldr	r2, .L449+20
 6028 0066 7049     		ldr	r1, .L449+24
 6029 0068 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6030              	.LVL723:
 6031 006c 0546     		mov	r5, r0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 170


 6032              	.LVL724:
1934:../user/source/DLT645.c ****         }
 6033              		.loc 1 1934 0
 6034 006e 5DE0     		b	.L428
 6035              	.L440:
1939:../user/source/DLT645.c ****                                                FLASH_MODIFIED_C_NOWENERGY_ADDR);
 6036              		.loc 1 1939 0
 6037 0070 6E4A     		ldr	r2, .L449+28
 6038 0072 6F49     		ldr	r1, .L449+32
 6039 0074 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6040              	.LVL725:
 6041 0078 0546     		mov	r5, r0
 6042              	.LVL726:
1941:../user/source/DLT645.c ****         }
 6043              		.loc 1 1941 0
 6044 007a 57E0     		b	.L428
 6045              	.L432:
1951:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F1_NOWENERGY_ADDR);
 6046              		.loc 1 1951 0
 6047 007c 6D4A     		ldr	r2, .L449+36
 6048 007e 6E49     		ldr	r1, .L449+40
 6049 0080 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6050              	.LVL727:
 6051 0084 0546     		mov	r5, r0
 6052              	.LVL728:
1953:../user/source/DLT645.c ****     }
 6053              		.loc 1 1953 0
 6054 0086 51E0     		b	.L428
 6055              	.L433:
1958:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F2_NOWENERGY_ADDR);
 6056              		.loc 1 1958 0
 6057 0088 6C4A     		ldr	r2, .L449+44
 6058 008a 6D49     		ldr	r1, .L449+48
 6059 008c FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6060              	.LVL729:
 6061 0090 0546     		mov	r5, r0
 6062              	.LVL730:
1960:../user/source/DLT645.c ****     }
 6063              		.loc 1 1960 0
 6064 0092 4BE0     		b	.L428
 6065              	.L434:
1965:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F3_NOWENERGY_ADDR);
 6066              		.loc 1 1965 0
 6067 0094 6B4A     		ldr	r2, .L449+52
 6068 0096 6C49     		ldr	r1, .L449+56
 6069 0098 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6070              	.LVL731:
 6071 009c 0546     		mov	r5, r0
 6072              	.LVL732:
1967:../user/source/DLT645.c ****     }
 6073              		.loc 1 1967 0
 6074 009e 45E0     		b	.L428
 6075              	.L435:
1972:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F4_NOWENERGY_ADDR);
 6076              		.loc 1 1972 0
 6077 00a0 6A4A     		ldr	r2, .L449+60
 6078 00a2 6B49     		ldr	r1, .L449+64
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 171


 6079 00a4 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6080              	.LVL733:
 6081 00a8 0546     		mov	r5, r0
 6082              	.LVL734:
1974:../user/source/DLT645.c ****     }
 6083              		.loc 1 1974 0
 6084 00aa 3FE0     		b	.L428
 6085              	.L429:
1984:../user/source/DLT645.c ****         energy_F1 = vNow_Frozen_Modify_Mothod(energy_F1, FLASH_REAL_F1_NOWENERGY_ADDR,
 6086              		.loc 1 1984 0
 6087 00ac 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 6088 00ae 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 6089 00b0 E17C     		ldrb	r1, [r4, #19]	@ zero_extendqisi2
 6090 00b2 A07C     		ldrb	r0, [r4, #18]	@ zero_extendqisi2
 6091              	.LVL735:
 6092 00b4 FFF7FEFF 		bl	Get_Energy
 6093              	.LVL736:
1985:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F1_NOWENERGY_ADDR);
 6094              		.loc 1 1985 0
 6095 00b8 5E4A     		ldr	r2, .L449+36
 6096 00ba 5F49     		ldr	r1, .L449+40
 6097 00bc FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6098              	.LVL737:
 6099 00c0 8146     		mov	r9, r0
 6100              	.LVL738:
1987:../user/source/DLT645.c ****         energy_F2 = vNow_Frozen_Modify_Mothod(energy_F2, FLASH_REAL_F2_NOWENERGY_ADDR,
 6101              		.loc 1 1987 0
 6102 00c2 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 6103 00c4 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 6104 00c6 E17D     		ldrb	r1, [r4, #23]	@ zero_extendqisi2
 6105 00c8 A07D     		ldrb	r0, [r4, #22]	@ zero_extendqisi2
 6106              	.LVL739:
 6107 00ca FFF7FEFF 		bl	Get_Energy
 6108              	.LVL740:
1988:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F2_NOWENERGY_ADDR);
 6109              		.loc 1 1988 0
 6110 00ce 5B4A     		ldr	r2, .L449+44
 6111 00d0 5B49     		ldr	r1, .L449+48
 6112 00d2 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6113              	.LVL741:
 6114 00d6 8046     		mov	r8, r0
 6115              	.LVL742:
1990:../user/source/DLT645.c ****         energy_F3 = vNow_Frozen_Modify_Mothod(energy_F3, FLASH_REAL_F3_NOWENERGY_ADDR,
 6116              		.loc 1 1990 0
 6117 00d8 637F     		ldrb	r3, [r4, #29]	@ zero_extendqisi2
 6118 00da 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 6119 00dc E17E     		ldrb	r1, [r4, #27]	@ zero_extendqisi2
 6120 00de A07E     		ldrb	r0, [r4, #26]	@ zero_extendqisi2
 6121              	.LVL743:
 6122 00e0 FFF7FEFF 		bl	Get_Energy
 6123              	.LVL744:
1991:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F3_NOWENERGY_ADDR);
 6124              		.loc 1 1991 0
 6125 00e4 574A     		ldr	r2, .L449+52
 6126 00e6 5849     		ldr	r1, .L449+56
 6127 00e8 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6128              	.LVL745:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 172


 6129 00ec 0746     		mov	r7, r0
 6130              	.LVL746:
1994:../user/source/DLT645.c ****         energy_F4 = vNow_Frozen_Modify_Mothod(energy_F4, FLASH_REAL_F4_NOWENERGY_ADDR,
 6131              		.loc 1 1994 0
 6132 00ee 94F82130 		ldrb	r3, [r4, #33]	@ zero_extendqisi2
 6133 00f2 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 6134 00f6 E17F     		ldrb	r1, [r4, #31]	@ zero_extendqisi2
 6135 00f8 A07F     		ldrb	r0, [r4, #30]	@ zero_extendqisi2
 6136              	.LVL747:
 6137 00fa FFF7FEFF 		bl	Get_Energy
 6138              	.LVL748:
1995:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F4_NOWENERGY_ADDR);
 6139              		.loc 1 1995 0
 6140 00fe 534A     		ldr	r2, .L449+60
 6141 0100 5349     		ldr	r1, .L449+64
 6142 0102 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6143              	.LVL749:
 6144 0106 0646     		mov	r6, r0
 6145              	.LVL750:
1998:../user/source/DLT645.c ****         /*±£´æ×ÜµçÁ¿ÕæÊµÖµ£¬µ¥³­×ÜµçÁ¿Ê±Ê¹ÓÃ*/
 6146              		.loc 1 1998 0
 6147 0108 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 6148 010a 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 6149 010c E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
 6150 010e A07B     		ldrb	r0, [r4, #14]	@ zero_extendqisi2
 6151              	.LVL751:
 6152 0110 FFF7FEFF 		bl	Get_Energy
 6153              	.LVL752:
2000:../user/source/DLT645.c ****         /*¸ù¾İ·Ö·ÑÂÊµçÁ¿¼ÆËãĞŞ¸ÄºóµÄ×ÜµçÁ¿*/
 6154              		.loc 1 2000 0
 6155 0114 0146     		mov	r1, r0
 6156 0116 4048     		ldr	r0, .L449+8
 6157              	.LVL753:
 6158 0118 FFF7FEFF 		bl	Flash_Write_Word
 6159              	.LVL754:
2002:../user/source/DLT645.c ****         /*±£´æĞŞ¸ÄÖµ£¬µ¥³­×ÜµçÁ¿Ê±Ê¹ÓÃ*/
 6160              		.loc 1 2002 0
 6161 011c 09EB0805 		add	r5, r9, r8
 6162 0120 3D44     		add	r5, r5, r7
 6163 0122 3544     		add	r5, r5, r6
 6164              	.LVL755:
2004:../user/source/DLT645.c ****         break;
 6165              		.loc 1 2004 0
 6166 0124 2946     		mov	r1, r5
 6167 0126 3B48     		ldr	r0, .L449+4
 6168 0128 FFF7FEFF 		bl	Flash_Write_Word
 6169              	.LVL756:
 6170              	.L428:
2010:../user/source/DLT645.c ****     {
 6171              		.loc 1 2010 0
 6172 012c E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 6173 012e 322B     		cmp	r3, #50
 6174 0130 1CD0     		beq	.L441
 6175 0132 68D3     		bcc	.L426
 6176 0134 372B     		cmp	r3, #55
 6177 0136 66D8     		bhi	.L426
2019:../user/source/DLT645.c ****         pucBuffer[18] = 0;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 173


 6178              		.loc 1 2019 0
 6179 0138 04F11103 		add	r3, r4, #17
 6180 013c 0093     		str	r3, [sp]
 6181 013e 04F11003 		add	r3, r4, #16
 6182 0142 04F10F02 		add	r2, r4, #15
 6183 0146 04F10E01 		add	r1, r4, #14
 6184 014a 2846     		mov	r0, r5
 6185 014c FFF7FEFF 		bl	Fill_Energy
 6186              	.LVL757:
2020:../user/source/DLT645.c ****         for (i = 0; i < 18; i++)
 6187              		.loc 1 2020 0
 6188 0150 0023     		movs	r3, #0
 6189 0152 A374     		strb	r3, [r4, #18]
 6190              	.LVL758:
2021:../user/source/DLT645.c ****         {
 6191              		.loc 1 2021 0
 6192 0154 05E0     		b	.L443
 6193              	.LVL759:
 6194              	.L444:
2023:../user/source/DLT645.c ****         }
 6195              		.loc 1 2023 0 discriminator 3
 6196 0156 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 6197 0158 A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 6198 015a 0A44     		add	r2, r2, r1
 6199 015c A274     		strb	r2, [r4, #18]
2021:../user/source/DLT645.c ****         {
 6200              		.loc 1 2021 0 discriminator 3
 6201 015e 0133     		adds	r3, r3, #1
 6202              	.LVL760:
 6203 0160 9BB2     		uxth	r3, r3
 6204              	.LVL761:
 6205              	.L443:
2021:../user/source/DLT645.c ****         {
 6206              		.loc 1 2021 0 is_stmt 0 discriminator 1
 6207 0162 112B     		cmp	r3, #17
 6208 0164 F7D9     		bls	.L444
2025:../user/source/DLT645.c ****         break;
 6209              		.loc 1 2025 0 is_stmt 1
 6210 0166 1623     		movs	r3, #22
 6211              	.LVL762:
 6212 0168 E374     		strb	r3, [r4, #19]
2026:../user/source/DLT645.c ****     }
 6213              		.loc 1 2026 0
 6214 016a 4CE0     		b	.L426
 6215              	.L441:
2032:../user/source/DLT645.c ****         /*¼â*/
 6216              		.loc 1 2032 0
 6217 016c 04F11103 		add	r3, r4, #17
 6218 0170 0093     		str	r3, [sp]
 6219 0172 04F11003 		add	r3, r4, #16
 6220 0176 04F10F02 		add	r2, r4, #15
 6221 017a 04F10E01 		add	r1, r4, #14
 6222 017e 2846     		mov	r0, r5
 6223 0180 FFF7FEFF 		bl	Fill_Energy
 6224              	.LVL763:
2034:../user/source/DLT645.c ****         /*·å*/
 6225              		.loc 1 2034 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 174


 6226 0184 04F11503 		add	r3, r4, #21
 6227 0188 0093     		str	r3, [sp]
 6228 018a 04F11403 		add	r3, r4, #20
 6229 018e 04F11302 		add	r2, r4, #19
 6230 0192 04F11201 		add	r1, r4, #18
 6231 0196 4846     		mov	r0, r9
 6232 0198 FFF7FEFF 		bl	Fill_Energy
 6233              	.LVL764:
2036:../user/source/DLT645.c ****         /*Æ½*/
 6234              		.loc 1 2036 0
 6235 019c 04F11903 		add	r3, r4, #25
 6236 01a0 0093     		str	r3, [sp]
 6237 01a2 04F11803 		add	r3, r4, #24
 6238 01a6 04F11702 		add	r2, r4, #23
 6239 01aa 04F11601 		add	r1, r4, #22
 6240 01ae 4046     		mov	r0, r8
 6241 01b0 FFF7FEFF 		bl	Fill_Energy
 6242              	.LVL765:
2038:../user/source/DLT645.c ****         /*¹È*/
 6243              		.loc 1 2038 0
 6244 01b4 04F11D03 		add	r3, r4, #29
 6245 01b8 0093     		str	r3, [sp]
 6246 01ba 04F11C03 		add	r3, r4, #28
 6247 01be 04F11B02 		add	r2, r4, #27
 6248 01c2 04F11A01 		add	r1, r4, #26
 6249 01c6 3846     		mov	r0, r7
 6250 01c8 FFF7FEFF 		bl	Fill_Energy
 6251              	.LVL766:
2040:../user/source/DLT645.c ****         pucBuffer[34] = 0;
 6252              		.loc 1 2040 0
 6253 01cc 04F12103 		add	r3, r4, #33
 6254 01d0 0093     		str	r3, [sp]
 6255 01d2 04F12003 		add	r3, r4, #32
 6256 01d6 04F11F02 		add	r2, r4, #31
 6257 01da 04F11E01 		add	r1, r4, #30
 6258 01de 3046     		mov	r0, r6
 6259 01e0 FFF7FEFF 		bl	Fill_Energy
 6260              	.LVL767:
2041:../user/source/DLT645.c ****         for (i = 0; i < 34; i++)
 6261              		.loc 1 2041 0
 6262 01e4 0023     		movs	r3, #0
 6263 01e6 84F82230 		strb	r3, [r4, #34]
 6264              	.LVL768:
2042:../user/source/DLT645.c ****         {
 6265              		.loc 1 2042 0
 6266 01ea 07E0     		b	.L445
 6267              	.LVL769:
 6268              	.L446:
2044:../user/source/DLT645.c ****         }
 6269              		.loc 1 2044 0 discriminator 3
 6270 01ec E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 6271 01ee 94F82220 		ldrb	r2, [r4, #34]	@ zero_extendqisi2
 6272 01f2 0A44     		add	r2, r2, r1
 6273 01f4 84F82220 		strb	r2, [r4, #34]
2042:../user/source/DLT645.c ****         {
 6274              		.loc 1 2042 0 discriminator 3
 6275 01f8 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 175


 6276              	.LVL770:
 6277 01fa 9BB2     		uxth	r3, r3
 6278              	.LVL771:
 6279              	.L445:
2042:../user/source/DLT645.c ****         {
 6280              		.loc 1 2042 0 is_stmt 0 discriminator 1
 6281 01fc 212B     		cmp	r3, #33
 6282 01fe F5D9     		bls	.L446
2046:../user/source/DLT645.c ****         break;
 6283              		.loc 1 2046 0 is_stmt 1
 6284 0200 1623     		movs	r3, #22
 6285              	.LVL772:
 6286 0202 84F82330 		strb	r3, [r4, #35]
 6287              	.L426:
2052:../user/source/DLT645.c **** 
 6288              		.loc 1 2052 0
 6289 0206 03B0     		add	sp, sp, #12
 6290              	.LCFI55:
 6291              		.cfi_def_cfa_offset 28
 6292              		@ sp needed
 6293 0208 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 6294              	.LVL773:
 6295              	.L448:
 6296              	.LCFI56:
 6297              		.cfi_def_cfa_offset 0
 6298              		.cfi_restore 4
 6299              		.cfi_restore 5
 6300              		.cfi_restore 6
 6301              		.cfi_restore 7
 6302              		.cfi_restore 8
 6303              		.cfi_restore 9
 6304              		.cfi_restore 14
 6305 020c 7047     		bx	lr
 6306              	.L450:
 6307 020e 00BF     		.align	2
 6308              	.L449:
 6309 0210 00000000 		.word	.LANCHOR8
 6310 0214 74200308 		.word	134422644
 6311 0218 70200308 		.word	134422640
 6312 021c 9C200308 		.word	134422684
 6313 0220 98200308 		.word	134422680
 6314 0224 A4200308 		.word	134422692
 6315 0228 A0200308 		.word	134422688
 6316 022c AC200308 		.word	134422700
 6317 0230 A8200308 		.word	134422696
 6318 0234 7C200308 		.word	134422652
 6319 0238 78200308 		.word	134422648
 6320 023c 84200308 		.word	134422660
 6321 0240 80200308 		.word	134422656
 6322 0244 8C200308 		.word	134422668
 6323 0248 88200308 		.word	134422664
 6324 024c 94200308 		.word	134422676
 6325 0250 90200308 		.word	134422672
 6326              		.cfi_endproc
 6327              	.LFE148:
 6329              		.section	.text.vDayfrozen_Modifier,"ax",%progbits
 6330              		.align	2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 176


 6331              		.global	vDayfrozen_Modifier
 6332              		.thumb
 6333              		.thumb_func
 6335              	vDayfrozen_Modifier:
 6336              	.LFB149:
2071:../user/source/DLT645.c ****     uint32_t energy, energy_F1, energy_F2, energy_F3, energy_F4;
 6337              		.loc 1 2071 0
 6338              		.cfi_startproc
 6339              		@ args = 0, pretend = 0, frame = 0
 6340              		@ frame_needed = 0, uses_anonymous_args = 0
 6341              	.LVL774:
2075:../user/source/DLT645.c ****         return;
 6342              		.loc 1 2075 0
 6343 0000 4A4B     		ldr	r3, .L457
 6344 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6345 0004 002B     		cmp	r3, #0
 6346 0006 00F08F80 		beq	.L456
2071:../user/source/DLT645.c ****     uint32_t energy, energy_F1, energy_F2, energy_F3, energy_F4;
 6347              		.loc 1 2071 0
 6348 000a 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 6349              	.LCFI57:
 6350              		.cfi_def_cfa_offset 24
 6351              		.cfi_offset 4, -24
 6352              		.cfi_offset 5, -20
 6353              		.cfi_offset 6, -16
 6354              		.cfi_offset 7, -12
 6355              		.cfi_offset 8, -8
 6356              		.cfi_offset 14, -4
 6357 000e 82B0     		sub	sp, sp, #8
 6358              	.LCFI58:
 6359              		.cfi_def_cfa_offset 32
 6360 0010 0446     		mov	r4, r0
2087:../user/source/DLT645.c ****     energy_F1 = vNow_Frozen_Modify_Mothod(energy_F1, FLASH_REAL_1DAYFROZEN_ADDR + 4, FLASH_MODIFIED
 6361              		.loc 1 2087 0
 6362 0012 437D     		ldrb	r3, [r0, #21]	@ zero_extendqisi2
 6363 0014 027D     		ldrb	r2, [r0, #20]	@ zero_extendqisi2
 6364 0016 C17C     		ldrb	r1, [r0, #19]	@ zero_extendqisi2
 6365 0018 807C     		ldrb	r0, [r0, #18]	@ zero_extendqisi2
 6366              	.LVL775:
 6367 001a FFF7FEFF 		bl	Get_Energy
 6368              	.LVL776:
2088:../user/source/DLT645.c ****     Fill_Energy(energy_F1, &pucBuffer[18], &pucBuffer[19], &pucBuffer[20], &pucBuffer[21]);
 6369              		.loc 1 2088 0
 6370 001e 444A     		ldr	r2, .L457+4
 6371 0020 4449     		ldr	r1, .L457+8
 6372 0022 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6373              	.LVL777:
 6374 0026 8046     		mov	r8, r0
 6375              	.LVL778:
2089:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦·å·ÑÂÊµçÁ¿*/
 6376              		.loc 1 2089 0
 6377 0028 04F11503 		add	r3, r4, #21
 6378 002c 0093     		str	r3, [sp]
 6379 002e 04F11403 		add	r3, r4, #20
 6380 0032 04F11302 		add	r2, r4, #19
 6381 0036 04F11201 		add	r1, r4, #18
 6382 003a FFF7FEFF 		bl	Fill_Energy
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 177


 6383              	.LVL779:
2091:../user/source/DLT645.c ****     energy_F2 = vNow_Frozen_Modify_Mothod(energy_F2, FLASH_REAL_1DAYFROZEN_ADDR + 8, FLASH_MODIFIED
 6384              		.loc 1 2091 0
 6385 003e 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 6386 0040 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 6387 0042 E17D     		ldrb	r1, [r4, #23]	@ zero_extendqisi2
 6388 0044 A07D     		ldrb	r0, [r4, #22]	@ zero_extendqisi2
 6389 0046 FFF7FEFF 		bl	Get_Energy
 6390              	.LVL780:
2092:../user/source/DLT645.c ****     Fill_Energy(energy_F2, &pucBuffer[22], &pucBuffer[23], &pucBuffer[24], &pucBuffer[25]);
 6391              		.loc 1 2092 0
 6392 004a 3B4A     		ldr	r2, .L457+12
 6393 004c 3B49     		ldr	r1, .L457+16
 6394 004e FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6395              	.LVL781:
 6396 0052 0646     		mov	r6, r0
 6397              	.LVL782:
2093:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦Æ½·ÑÂÊµçÁ¿*/
 6398              		.loc 1 2093 0
 6399 0054 04F11903 		add	r3, r4, #25
 6400 0058 0093     		str	r3, [sp]
 6401 005a 04F11803 		add	r3, r4, #24
 6402 005e 04F11702 		add	r2, r4, #23
 6403 0062 04F11601 		add	r1, r4, #22
 6404 0066 FFF7FEFF 		bl	Fill_Energy
 6405              	.LVL783:
2095:../user/source/DLT645.c ****     energy_F3 = vNow_Frozen_Modify_Mothod(energy_F3, FLASH_REAL_1DAYFROZEN_ADDR + 12, FLASH_MODIFIE
 6406              		.loc 1 2095 0
 6407 006a 637F     		ldrb	r3, [r4, #29]	@ zero_extendqisi2
 6408 006c 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 6409 006e E17E     		ldrb	r1, [r4, #27]	@ zero_extendqisi2
 6410 0070 A07E     		ldrb	r0, [r4, #26]	@ zero_extendqisi2
 6411 0072 FFF7FEFF 		bl	Get_Energy
 6412              	.LVL784:
2096:../user/source/DLT645.c ****     Fill_Energy(energy_F3, &pucBuffer[26], &pucBuffer[27], &pucBuffer[28], &pucBuffer[29]);
 6413              		.loc 1 2096 0
 6414 0076 324A     		ldr	r2, .L457+20
 6415 0078 3249     		ldr	r1, .L457+24
 6416 007a FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6417              	.LVL785:
 6418 007e 0546     		mov	r5, r0
 6419              	.LVL786:
2097:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦¹È·ÑÂÊµçÁ¿*/
 6420              		.loc 1 2097 0
 6421 0080 04F11D03 		add	r3, r4, #29
 6422 0084 0093     		str	r3, [sp]
 6423 0086 04F11C03 		add	r3, r4, #28
 6424 008a 04F11B02 		add	r2, r4, #27
 6425 008e 04F11A01 		add	r1, r4, #26
 6426 0092 FFF7FEFF 		bl	Fill_Energy
 6427              	.LVL787:
2099:../user/source/DLT645.c ****     energy_F4 = vNow_Frozen_Modify_Mothod(energy_F4, FLASH_REAL_1DAYFROZEN_ADDR + 16, FLASH_MODIFIE
 6428              		.loc 1 2099 0
 6429 0096 94F82130 		ldrb	r3, [r4, #33]	@ zero_extendqisi2
 6430 009a 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 6431 009e E17F     		ldrb	r1, [r4, #31]	@ zero_extendqisi2
 6432 00a0 A07F     		ldrb	r0, [r4, #30]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 178


 6433 00a2 FFF7FEFF 		bl	Get_Energy
 6434              	.LVL788:
2100:../user/source/DLT645.c ****     Fill_Energy(energy_F4, &pucBuffer[30], &pucBuffer[31], &pucBuffer[32], &pucBuffer[33]);
 6435              		.loc 1 2100 0
 6436 00a6 284A     		ldr	r2, .L457+28
 6437 00a8 2849     		ldr	r1, .L457+32
 6438 00aa FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6439              	.LVL789:
 6440 00ae 0746     		mov	r7, r0
 6441              	.LVL790:
2101:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×ÜµçÁ¿*/
 6442              		.loc 1 2101 0
 6443 00b0 04F12103 		add	r3, r4, #33
 6444 00b4 0093     		str	r3, [sp]
 6445 00b6 04F12003 		add	r3, r4, #32
 6446 00ba 04F11F02 		add	r2, r4, #31
 6447 00be 04F11E01 		add	r1, r4, #30
 6448 00c2 FFF7FEFF 		bl	Fill_Energy
 6449              	.LVL791:
2104:../user/source/DLT645.c ****     /*´æ´¢ÕæÊµÖµ*/
 6450              		.loc 1 2104 0
 6451 00c6 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 6452 00c8 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 6453 00ca E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
 6454 00cc A07B     		ldrb	r0, [r4, #14]	@ zero_extendqisi2
 6455 00ce FFF7FEFF 		bl	Get_Energy
 6456              	.LVL792:
2106:../user/source/DLT645.c ****     /*¼ÆËãĞŞ¸ÄºóµÄÖµ*/
 6457              		.loc 1 2106 0
 6458 00d2 0146     		mov	r1, r0
 6459 00d4 1E48     		ldr	r0, .L457+36
 6460              	.LVL793:
 6461 00d6 FFF7FEFF 		bl	Flash_Write_Word
 6462              	.LVL794:
2108:../user/source/DLT645.c ****     /*´æ´¢ĞŞ¸ÄºóµÄÖµ*/
 6463              		.loc 1 2108 0
 6464 00da 4644     		add	r6, r6, r8
 6465              	.LVL795:
 6466 00dc 2E44     		add	r6, r6, r5
 6467 00de BD19     		adds	r5, r7, r6
 6468              	.LVL796:
2110:../user/source/DLT645.c ****     /*×éÖ¡*/
 6469              		.loc 1 2110 0
 6470 00e0 2946     		mov	r1, r5
 6471 00e2 1C48     		ldr	r0, .L457+40
 6472 00e4 FFF7FEFF 		bl	Flash_Write_Word
 6473              	.LVL797:
2112:../user/source/DLT645.c **** 
 6474              		.loc 1 2112 0
 6475 00e8 04F11103 		add	r3, r4, #17
 6476 00ec 0093     		str	r3, [sp]
 6477 00ee 04F11003 		add	r3, r4, #16
 6478 00f2 04F10F02 		add	r2, r4, #15
 6479 00f6 04F10E01 		add	r1, r4, #14
 6480 00fa 2846     		mov	r0, r5
 6481 00fc FFF7FEFF 		bl	Fill_Energy
 6482              	.LVL798:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 179


2114:../user/source/DLT645.c ****     for (i = 0; i < 34; i++)
 6483              		.loc 1 2114 0
 6484 0100 0023     		movs	r3, #0
 6485 0102 84F82230 		strb	r3, [r4, #34]
 6486              	.LVL799:
2115:../user/source/DLT645.c ****     {
 6487              		.loc 1 2115 0
 6488 0106 07E0     		b	.L453
 6489              	.LVL800:
 6490              	.L454:
2117:../user/source/DLT645.c ****     }
 6491              		.loc 1 2117 0 discriminator 3
 6492 0108 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 6493 010a 94F82220 		ldrb	r2, [r4, #34]	@ zero_extendqisi2
 6494 010e 0A44     		add	r2, r2, r1
 6495 0110 84F82220 		strb	r2, [r4, #34]
2115:../user/source/DLT645.c ****     {
 6496              		.loc 1 2115 0 discriminator 3
 6497 0114 0133     		adds	r3, r3, #1
 6498              	.LVL801:
 6499 0116 9BB2     		uxth	r3, r3
 6500              	.LVL802:
 6501              	.L453:
2115:../user/source/DLT645.c ****     {
 6502              		.loc 1 2115 0 is_stmt 0 discriminator 1
 6503 0118 212B     		cmp	r3, #33
 6504 011a F5D9     		bls	.L454
2119:../user/source/DLT645.c **** }
 6505              		.loc 1 2119 0 is_stmt 1
 6506 011c 1623     		movs	r3, #22
 6507              	.LVL803:
 6508 011e 84F82330 		strb	r3, [r4, #35]
2120:../user/source/DLT645.c **** 
 6509              		.loc 1 2120 0
 6510 0122 02B0     		add	sp, sp, #8
 6511              	.LCFI59:
 6512              		.cfi_def_cfa_offset 24
 6513              		@ sp needed
 6514 0124 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6515              	.LVL804:
 6516              	.L456:
 6517              	.LCFI60:
 6518              		.cfi_def_cfa_offset 0
 6519              		.cfi_restore 4
 6520              		.cfi_restore 5
 6521              		.cfi_restore 6
 6522              		.cfi_restore 7
 6523              		.cfi_restore 8
 6524              		.cfi_restore 14
 6525 0128 7047     		bx	lr
 6526              	.L458:
 6527 012a 00BF     		.align	2
 6528              	.L457:
 6529 012c 00000000 		.word	.LANCHOR8
 6530 0130 40200308 		.word	134422592
 6531 0134 04200308 		.word	134422532
 6532 0138 44200308 		.word	134422596
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 180


 6533 013c 08200308 		.word	134422536
 6534 0140 48200308 		.word	134422600
 6535 0144 0C200308 		.word	134422540
 6536 0148 4C200308 		.word	134422604
 6537 014c 10200308 		.word	134422544
 6538 0150 00200308 		.word	134422528
 6539 0154 3C200308 		.word	134422588
 6540              		.cfi_endproc
 6541              	.LFE149:
 6543              		.section	.text.vAccountEnergy_Modify_Mothod,"ax",%progbits
 6544              		.align	2
 6545              		.global	vAccountEnergy_Modify_Mothod
 6546              		.thumb
 6547              		.thumb_func
 6549              	vAccountEnergy_Modify_Mothod:
 6550              	.LFB150:
2131:../user/source/DLT645.c ****     uint64_t i;
 6551              		.loc 1 2131 0
 6552              		.cfi_startproc
 6553              		@ args = 0, pretend = 0, frame = 0
 6554              		@ frame_needed = 0, uses_anonymous_args = 0
 6555              	.LVL805:
 6556 0000 08B5     		push	{r3, lr}
 6557              	.LCFI61:
 6558              		.cfi_def_cfa_offset 8
 6559              		.cfi_offset 3, -8
 6560              		.cfi_offset 14, -4
2133:../user/source/DLT645.c ****     return (uint32_t)(i / 100);
 6561              		.loc 1 2133 0
 6562 0002 044B     		ldr	r3, .L461
 6563 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6564 0006 A0FB0201 		umull	r0, r1, r0, r2
 6565              	.LVL806:
2134:../user/source/DLT645.c **** }
 6566              		.loc 1 2134 0
 6567 000a 6422     		movs	r2, #100
 6568 000c 0023     		movs	r3, #0
 6569 000e FFF7FEFF 		bl	__aeabi_uldivmod
 6570              	.LVL807:
2135:../user/source/DLT645.c **** 
 6571              		.loc 1 2135 0
 6572 0012 08BD     		pop	{r3, pc}
 6573              	.L462:
 6574              		.align	2
 6575              	.L461:
 6576 0014 00000000 		.word	ucDayfrozen_Modify_Ratio
 6577              		.cfi_endproc
 6578              	.LFE150:
 6580              		.section	.text.vAccountEnergy_Modify,"ax",%progbits
 6581              		.align	2
 6582              		.global	vAccountEnergy_Modify
 6583              		.thumb
 6584              		.thumb_func
 6586              	vAccountEnergy_Modify:
 6587              	.LFB151:
2155:../user/source/DLT645.c ****     int energy;
 6588              		.loc 1 2155 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 181


 6589              		.cfi_startproc
 6590              		@ args = 0, pretend = 0, frame = 0
 6591              		@ frame_needed = 0, uses_anonymous_args = 0
 6592              	.LVL808:
2158:../user/source/DLT645.c ****         return;
 6593              		.loc 1 2158 0
 6594 0000 504B     		ldr	r3, .L472
 6595 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6596 0004 002B     		cmp	r3, #0
 6597 0006 00F09B80 		beq	.L471
2155:../user/source/DLT645.c ****     int energy;
 6598              		.loc 1 2155 0
 6599 000a 10B5     		push	{r4, lr}
 6600              	.LCFI62:
 6601              		.cfi_def_cfa_offset 8
 6602              		.cfi_offset 4, -8
 6603              		.cfi_offset 14, -4
 6604 000c 82B0     		sub	sp, sp, #8
 6605              	.LCFI63:
 6606              		.cfi_def_cfa_offset 16
 6607 000e 0446     		mov	r4, r0
2160:../user/source/DLT645.c ****     {
 6608              		.loc 1 2160 0
 6609 0010 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 6610 0012 322B     		cmp	r3, #50
 6611 0014 72D1     		bne	.L465
2163:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 6612              		.loc 1 2163 0
 6613 0016 437C     		ldrb	r3, [r0, #17]	@ zero_extendqisi2
 6614 0018 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 6615 001a C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 6616 001c 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 6617              	.LVL809:
 6618 001e FFF7FEFF 		bl	Get_Energy
 6619              	.LVL810:
2164:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
 6620              		.loc 1 2164 0
 6621 0022 FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 6622              	.LVL811:
2165:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦¼â·ÑÂÊµçÁ¿*/
 6623              		.loc 1 2165 0
 6624 0026 04F11103 		add	r3, r4, #17
 6625 002a 0093     		str	r3, [sp]
 6626 002c 04F11003 		add	r3, r4, #16
 6627 0030 04F10F02 		add	r2, r4, #15
 6628 0034 04F10E01 		add	r1, r4, #14
 6629 0038 FFF7FEFF 		bl	Fill_Energy
 6630              	.LVL812:
2167:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 6631              		.loc 1 2167 0
 6632 003c 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 6633 003e 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 6634 0040 E17C     		ldrb	r1, [r4, #19]	@ zero_extendqisi2
 6635 0042 A07C     		ldrb	r0, [r4, #18]	@ zero_extendqisi2
 6636 0044 FFF7FEFF 		bl	Get_Energy
 6637              	.LVL813:
2168:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[18], &pucBuffer[19], &pucBuffer[20], &pucBuffer[21]);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 182


 6638              		.loc 1 2168 0
 6639 0048 FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 6640              	.LVL814:
2169:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦·å·ÑÂÊµçÁ¿*/
 6641              		.loc 1 2169 0
 6642 004c 04F11503 		add	r3, r4, #21
 6643 0050 0093     		str	r3, [sp]
 6644 0052 04F11403 		add	r3, r4, #20
 6645 0056 04F11302 		add	r2, r4, #19
 6646 005a 04F11201 		add	r1, r4, #18
 6647 005e FFF7FEFF 		bl	Fill_Energy
 6648              	.LVL815:
2171:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 6649              		.loc 1 2171 0
 6650 0062 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 6651 0064 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 6652 0066 E17D     		ldrb	r1, [r4, #23]	@ zero_extendqisi2
 6653 0068 A07D     		ldrb	r0, [r4, #22]	@ zero_extendqisi2
 6654 006a FFF7FEFF 		bl	Get_Energy
 6655              	.LVL816:
2172:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[22], &pucBuffer[23], &pucBuffer[24], &pucBuffer[25]);
 6656              		.loc 1 2172 0
 6657 006e FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 6658              	.LVL817:
2173:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦Æ½·ÑÂÊµçÁ¿*/
 6659              		.loc 1 2173 0
 6660 0072 04F11903 		add	r3, r4, #25
 6661 0076 0093     		str	r3, [sp]
 6662 0078 04F11803 		add	r3, r4, #24
 6663 007c 04F11702 		add	r2, r4, #23
 6664 0080 04F11601 		add	r1, r4, #22
 6665 0084 FFF7FEFF 		bl	Fill_Energy
 6666              	.LVL818:
2175:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 6667              		.loc 1 2175 0
 6668 0088 637F     		ldrb	r3, [r4, #29]	@ zero_extendqisi2
 6669 008a 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 6670 008c E17E     		ldrb	r1, [r4, #27]	@ zero_extendqisi2
 6671 008e A07E     		ldrb	r0, [r4, #26]	@ zero_extendqisi2
 6672 0090 FFF7FEFF 		bl	Get_Energy
 6673              	.LVL819:
2176:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[26], &pucBuffer[27], &pucBuffer[28], &pucBuffer[29]);
 6674              		.loc 1 2176 0
 6675 0094 FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 6676              	.LVL820:
2177:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦¹È·ÑÂÊµçÁ¿*/
 6677              		.loc 1 2177 0
 6678 0098 04F11D03 		add	r3, r4, #29
 6679 009c 0093     		str	r3, [sp]
 6680 009e 04F11C03 		add	r3, r4, #28
 6681 00a2 04F11B02 		add	r2, r4, #27
 6682 00a6 04F11A01 		add	r1, r4, #26
 6683 00aa FFF7FEFF 		bl	Fill_Energy
 6684              	.LVL821:
2179:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 6685              		.loc 1 2179 0
 6686 00ae 94F82130 		ldrb	r3, [r4, #33]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 183


 6687 00b2 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 6688 00b6 E17F     		ldrb	r1, [r4, #31]	@ zero_extendqisi2
 6689 00b8 A07F     		ldrb	r0, [r4, #30]	@ zero_extendqisi2
 6690 00ba FFF7FEFF 		bl	Get_Energy
 6691              	.LVL822:
2180:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[30], &pucBuffer[31], &pucBuffer[32], &pucBuffer[33]);
 6692              		.loc 1 2180 0
 6693 00be FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 6694              	.LVL823:
2181:../user/source/DLT645.c **** 
 6695              		.loc 1 2181 0
 6696 00c2 04F12103 		add	r3, r4, #33
 6697 00c6 0093     		str	r3, [sp]
 6698 00c8 04F12003 		add	r3, r4, #32
 6699 00cc 04F11F02 		add	r2, r4, #31
 6700 00d0 04F11E01 		add	r1, r4, #30
 6701 00d4 FFF7FEFF 		bl	Fill_Energy
 6702              	.LVL824:
2183:../user/source/DLT645.c ****         for (i = 0; i < 34; i++)
 6703              		.loc 1 2183 0
 6704 00d8 0023     		movs	r3, #0
 6705 00da 84F82230 		strb	r3, [r4, #34]
 6706              	.LVL825:
2184:../user/source/DLT645.c ****         {
 6707              		.loc 1 2184 0
 6708 00de 07E0     		b	.L466
 6709              	.LVL826:
 6710              	.L467:
2186:../user/source/DLT645.c ****         }
 6711              		.loc 1 2186 0 discriminator 3
 6712 00e0 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 6713 00e2 94F82220 		ldrb	r2, [r4, #34]	@ zero_extendqisi2
 6714 00e6 0A44     		add	r2, r2, r1
 6715 00e8 84F82220 		strb	r2, [r4, #34]
2184:../user/source/DLT645.c ****         {
 6716              		.loc 1 2184 0 discriminator 3
 6717 00ec 0133     		adds	r3, r3, #1
 6718              	.LVL827:
 6719 00ee 9BB2     		uxth	r3, r3
 6720              	.LVL828:
 6721              	.L466:
2184:../user/source/DLT645.c ****         {
 6722              		.loc 1 2184 0 is_stmt 0 discriminator 1
 6723 00f0 212B     		cmp	r3, #33
 6724 00f2 F5D9     		bls	.L467
2188:../user/source/DLT645.c ****     }
 6725              		.loc 1 2188 0 is_stmt 1
 6726 00f4 1623     		movs	r3, #22
 6727              	.LVL829:
 6728 00f6 84F82330 		strb	r3, [r4, #35]
 6729 00fa 1FE0     		b	.L463
 6730              	.LVL830:
 6731              	.L465:
2192:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 6732              		.loc 1 2192 0
 6733 00fc 437C     		ldrb	r3, [r0, #17]	@ zero_extendqisi2
 6734 00fe 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 184


 6735 0100 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 6736 0102 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 6737              	.LVL831:
 6738 0104 FFF7FEFF 		bl	Get_Energy
 6739              	.LVL832:
2193:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
 6740              		.loc 1 2193 0
 6741 0108 FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 6742              	.LVL833:
2194:../user/source/DLT645.c **** 
 6743              		.loc 1 2194 0
 6744 010c 04F11103 		add	r3, r4, #17
 6745 0110 0093     		str	r3, [sp]
 6746 0112 04F11003 		add	r3, r4, #16
 6747 0116 04F10F02 		add	r2, r4, #15
 6748 011a 04F10E01 		add	r1, r4, #14
 6749 011e FFF7FEFF 		bl	Fill_Energy
 6750              	.LVL834:
2196:../user/source/DLT645.c ****         for (i = 0; i < 18; i++)
 6751              		.loc 1 2196 0
 6752 0122 0023     		movs	r3, #0
 6753 0124 A374     		strb	r3, [r4, #18]
 6754              	.LVL835:
2197:../user/source/DLT645.c ****         {
 6755              		.loc 1 2197 0
 6756 0126 05E0     		b	.L468
 6757              	.LVL836:
 6758              	.L469:
2199:../user/source/DLT645.c ****         }
 6759              		.loc 1 2199 0 discriminator 3
 6760 0128 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 6761 012a A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 6762 012c 0A44     		add	r2, r2, r1
 6763 012e A274     		strb	r2, [r4, #18]
2197:../user/source/DLT645.c ****         {
 6764              		.loc 1 2197 0 discriminator 3
 6765 0130 0133     		adds	r3, r3, #1
 6766              	.LVL837:
 6767 0132 9BB2     		uxth	r3, r3
 6768              	.LVL838:
 6769              	.L468:
2197:../user/source/DLT645.c ****         {
 6770              		.loc 1 2197 0 is_stmt 0 discriminator 1
 6771 0134 112B     		cmp	r3, #17
 6772 0136 F7D9     		bls	.L469
2201:../user/source/DLT645.c ****     }
 6773              		.loc 1 2201 0 is_stmt 1
 6774 0138 1623     		movs	r3, #22
 6775              	.LVL839:
 6776 013a E374     		strb	r3, [r4, #19]
 6777              	.L463:
2203:../user/source/DLT645.c **** 
 6778              		.loc 1 2203 0
 6779 013c 02B0     		add	sp, sp, #8
 6780              	.LCFI64:
 6781              		.cfi_def_cfa_offset 8
 6782              		@ sp needed
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 185


 6783 013e 10BD     		pop	{r4, pc}
 6784              	.LVL840:
 6785              	.L471:
 6786              	.LCFI65:
 6787              		.cfi_def_cfa_offset 0
 6788              		.cfi_restore 4
 6789              		.cfi_restore 14
 6790 0140 7047     		bx	lr
 6791              	.L473:
 6792 0142 00BF     		.align	2
 6793              	.L472:
 6794 0144 00000000 		.word	.LANCHOR8
 6795              		.cfi_endproc
 6796              	.LFE151:
 6798              		.comm	TransFormer,16,4
 6799              		.global	Ccurrent
 6800              		.global	Bcurrent
 6801              		.global	Acurrent
 6802              		.global	C_Voltage
 6803              		.global	B_Voltage
 6804              		.global	A_Voltage
 6805              		.comm	Voltage_MIN,4,4
 6806              		.comm	Voltage_MAX,4,4
 6807              		.comm	ucDayfrozen_Modify_Ratio,1,1
 6808              		.global	Dayfrozen_Change_State
 6809              		.global	Voltage_Change_State
 6810              		.global	uc645DataDomainLength
 6811              		.comm	ucApp_Buf_INFR,300,4
 6812              		.comm	ucApp_Buf_ZD2DB,300,4
 6813              		.comm	ucApp_Buf_DB2ZD,300,4
 6814              		.global	ucRcvStatus
 6815              		.comm	Voltage_Frame_Status,1,1
 6816              		.global	DBDataID_Handle_List
 6817              		.global	INFRDataID_Handle_List
 6818              		.section	.rodata.DBDataID_Handle_List,"a",%progbits
 6819              		.align	2
 6820              		.set	.LANCHOR10,. + 0
 6823              	DBDataID_Handle_List:
 6824 0000 33       		.byte	51
 6825 0001 34       		.byte	52
 6826 0002 34       		.byte	52
 6827 0003 35       		.byte	53
 6828 0004 00000000 		.word	vVoltageHandle
 6829 0008 33       		.byte	51
 6830 0009 35       		.byte	53
 6831 000a 34       		.byte	52
 6832 000b 35       		.byte	53
 6833 000c 00000000 		.word	vVoltageHandle
 6834 0010 33       		.byte	51
 6835 0011 36       		.byte	54
 6836 0012 34       		.byte	52
 6837 0013 35       		.byte	53
 6838 0014 00000000 		.word	vVoltageHandle
 6839 0018 33       		.byte	51
 6840 0019 32       		.byte	50
 6841 001a 34       		.byte	52
 6842 001b 35       		.byte	53
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 186


 6843 001c 00000000 		.word	vVoltageHandle
 6844 0020 37       		.byte	55
 6845 0021 38       		.byte	56
 6846 0022 33       		.byte	51
 6847 0023 38       		.byte	56
 6848 0024 00000000 		.word	Estatus_Modify_CurrentEvent
 6849 0028 38       		.byte	56
 6850 0029 38       		.byte	56
 6851 002a 33       		.byte	51
 6852 002b 38       		.byte	56
 6853 002c 00000000 		.word	Estatus_Modify_CurrentEvent
 6854 0030 39       		.byte	57
 6855 0031 38       		.byte	56
 6856 0032 33       		.byte	51
 6857 0033 38       		.byte	56
 6858 0034 00000000 		.word	Estatus_Modify_CurrentEvent
 6859 0038 3A       		.byte	58
 6860 0039 38       		.byte	56
 6861 003a 33       		.byte	51
 6862 003b 38       		.byte	56
 6863 003c 00000000 		.word	Estatus_Modify_CurrentEvent
 6864 0040 32       		.byte	50
 6865 0041 38       		.byte	56
 6866 0042 33       		.byte	51
 6867 0043 38       		.byte	56
 6868 0044 00000000 		.word	Estatus_Modify_CurrentEvent
 6869 0048 33       		.byte	51
 6870 0049 33       		.byte	51
 6871 004a 34       		.byte	52
 6872 004b 33       		.byte	51
 6873 004c 00000000 		.word	vNowEnergy_Modifier
 6874 0050 33       		.byte	51
 6875 0051 34       		.byte	52
 6876 0052 34       		.byte	52
 6877 0053 33       		.byte	51
 6878 0054 00000000 		.word	vNowEnergy_Modifier
 6879 0058 33       		.byte	51
 6880 0059 35       		.byte	53
 6881 005a 34       		.byte	52
 6882 005b 33       		.byte	51
 6883 005c 00000000 		.word	vNowEnergy_Modifier
 6884 0060 33       		.byte	51
 6885 0061 36       		.byte	54
 6886 0062 34       		.byte	52
 6887 0063 33       		.byte	51
 6888 0064 00000000 		.word	vNowEnergy_Modifier
 6889 0068 33       		.byte	51
 6890 0069 37       		.byte	55
 6891 006a 34       		.byte	52
 6892 006b 33       		.byte	51
 6893 006c 00000000 		.word	vNowEnergy_Modifier
 6894 0070 33       		.byte	51
 6895 0071 32       		.byte	50
 6896 0072 34       		.byte	52
 6897 0073 33       		.byte	51
 6898 0074 00000000 		.word	vNowEnergy_Modifier
 6899 0078 33       		.byte	51
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 187


 6900 0079 33       		.byte	51
 6901 007a 48       		.byte	72
 6902 007b 33       		.byte	51
 6903 007c 00000000 		.word	vNowEnergy_Modifier
 6904 0080 33       		.byte	51
 6905 0081 33       		.byte	51
 6906 0082 5C       		.byte	92
 6907 0083 33       		.byte	51
 6908 0084 00000000 		.word	vNowEnergy_Modifier
 6909 0088 33       		.byte	51
 6910 0089 33       		.byte	51
 6911 008a 70       		.byte	112
 6912 008b 33       		.byte	51
 6913 008c 00000000 		.word	vNowEnergy_Modifier
 6914 0090 34       		.byte	52
 6915 0091 34       		.byte	52
 6916 0092 39       		.byte	57
 6917 0093 38       		.byte	56
 6918 0094 00000000 		.word	vDayfrozen_Modifier
 6919 0098 35       		.byte	53
 6920 0099 34       		.byte	52
 6921 009a 39       		.byte	57
 6922 009b 38       		.byte	56
 6923 009c 00000000 		.word	vDayfrozen_Modifier
 6924 00a0 36       		.byte	54
 6925 00a1 34       		.byte	52
 6926 00a2 39       		.byte	57
 6927 00a3 38       		.byte	56
 6928 00a4 00000000 		.word	vDayfrozen_Modifier
 6929 00a8 34       		.byte	52
 6930 00a9 33       		.byte	51
 6931 00aa 34       		.byte	52
 6932 00ab 33       		.byte	51
 6933 00ac 00000000 		.word	vAccountEnergy_Modify
 6934 00b0 34       		.byte	52
 6935 00b1 34       		.byte	52
 6936 00b2 34       		.byte	52
 6937 00b3 33       		.byte	51
 6938 00b4 00000000 		.word	vAccountEnergy_Modify
 6939 00b8 34       		.byte	52
 6940 00b9 35       		.byte	53
 6941 00ba 34       		.byte	52
 6942 00bb 33       		.byte	51
 6943 00bc 00000000 		.word	vAccountEnergy_Modify
 6944 00c0 34       		.byte	52
 6945 00c1 36       		.byte	54
 6946 00c2 34       		.byte	52
 6947 00c3 33       		.byte	51
 6948 00c4 00000000 		.word	vAccountEnergy_Modify
 6949 00c8 34       		.byte	52
 6950 00c9 37       		.byte	55
 6951 00ca 34       		.byte	52
 6952 00cb 33       		.byte	51
 6953 00cc 00000000 		.word	vAccountEnergy_Modify
 6954 00d0 34       		.byte	52
 6955 00d1 32       		.byte	50
 6956 00d2 34       		.byte	52
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 188


 6957 00d3 33       		.byte	51
 6958 00d4 00000000 		.word	vAccountEnergy_Modify
 6959 00d8 34       		.byte	52
 6960 00d9 33       		.byte	51
 6961 00da 48       		.byte	72
 6962 00db 33       		.byte	51
 6963 00dc 00000000 		.word	vAccountEnergy_Modify
 6964 00e0 34       		.byte	52
 6965 00e1 33       		.byte	51
 6966 00e2 5C       		.byte	92
 6967 00e3 33       		.byte	51
 6968 00e4 00000000 		.word	vAccountEnergy_Modify
 6969 00e8 34       		.byte	52
 6970 00e9 33       		.byte	51
 6971 00ea 70       		.byte	112
 6972 00eb 33       		.byte	51
 6973 00ec 00000000 		.word	vAccountEnergy_Modify
 6974 00f0 33       		.byte	51
 6975 00f1 37       		.byte	55
 6976 00f2 34       		.byte	52
 6977 00f3 35       		.byte	53
 6978 00f4 00000000 		.word	Get_VChange_State
 6979 00f8 33       		.byte	51
 6980 00f9 38       		.byte	56
 6981 00fa 34       		.byte	52
 6982 00fb 35       		.byte	53
 6983 00fc 00000000 		.word	Set_Voltage_Limit
 6984 0100 33       		.byte	51
 6985 0101 39       		.byte	57
 6986 0102 34       		.byte	52
 6987 0103 35       		.byte	53
 6988 0104 00000000 		.word	Query_Voltage_Limit
 6989 0108 33       		.byte	51
 6990 0109 3A       		.byte	58
 6991 010a 34       		.byte	52
 6992 010b 35       		.byte	53
 6993 010c 00000000 		.word	Default_Reset
 6994 0110 33       		.byte	51
 6995 0111 37       		.byte	55
 6996 0112 35       		.byte	53
 6997 0113 35       		.byte	53
 6998 0114 00000000 		.word	vCurrent_Limit_Set
 6999 0118 33       		.byte	51
 7000 0119 38       		.byte	56
 7001 011a 35       		.byte	53
 7002 011b 35       		.byte	53
 7003 011c 00000000 		.word	vCurrent_Limit_ReadSet
 7004 0120 33       		.byte	51
 7005 0121 39       		.byte	57
 7006 0122 35       		.byte	53
 7007 0123 35       		.byte	53
 7008 0124 00000000 		.word	vCurrent_CTRatio_Set
 7009 0128 33       		.byte	51
 7010 0129 3A       		.byte	58
 7011 012a 35       		.byte	53
 7012 012b 35       		.byte	53
 7013 012c 00000000 		.word	vCurrent_CTRatio_ReadSet
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 189


 7014 0130 33       		.byte	51
 7015 0131 3B       		.byte	59
 7016 0132 35       		.byte	53
 7017 0133 35       		.byte	53
 7018 0134 00000000 		.word	vCurrent_TransFormer_Capacity_ReadSet
 7019 0138 33       		.byte	51
 7020 0139 73       		.byte	115
 7021 013a 34       		.byte	52
 7022 013b 33       		.byte	51
 7023 013c 00000000 		.word	vEnergy_Modify_AbleSet
 7024 0140 33       		.byte	51
 7025 0141 74       		.byte	116
 7026 0142 34       		.byte	52
 7027 0143 33       		.byte	51
 7028 0144 00000000 		.word	vEnergy_Modify_RaitoSet
 7029 0148 33       		.byte	51
 7030 0149 75       		.byte	117
 7031 014a 34       		.byte	52
 7032 014b 33       		.byte	51
 7033 014c 00000000 		.word	vEnergy_Modify_Reset
 7034 0150 33       		.byte	51
 7035 0151 76       		.byte	118
 7036 0152 34       		.byte	52
 7037 0153 33       		.byte	51
 7038 0154 00000000 		.word	vEnergy_Modify_ReadSet
 7039 0158 33       		.byte	51
 7040 0159 77       		.byte	119
 7041 015a 34       		.byte	52
 7042 015b 33       		.byte	51
 7043 015c 00000000 		.word	vEnergy_Modify_ReadValue
 7044 0160 33       		.byte	51
 7045 0161 34       		.byte	52
 7046 0162 43       		.byte	67
 7047 0163 39       		.byte	57
 7048 0164 00000000 		.word	vLoadProfile_Voltage_Modify
 7049 0168 34       		.byte	52
 7050 0169 34       		.byte	52
 7051 016a 43       		.byte	67
 7052 016b 39       		.byte	57
 7053 016c 00000000 		.word	vLoadProfile_Voltage_Modify
 7054 0170 35       		.byte	53
 7055 0171 34       		.byte	52
 7056 0172 43       		.byte	67
 7057 0173 39       		.byte	57
 7058 0174 00000000 		.word	vLoadProfile_Voltage_Modify
 7059 0178 32       		.byte	50
 7060 0179 34       		.byte	52
 7061 017a 43       		.byte	67
 7062 017b 39       		.byte	57
 7063 017c 00000000 		.word	vLoadProfile_Voltage_Modify
 7064 0180 33       		.byte	51
 7065 0181 35       		.byte	53
 7066 0182 43       		.byte	67
 7067 0183 39       		.byte	57
 7068 0184 00000000 		.word	vLoadProfile_Current_Modify
 7069 0188 34       		.byte	52
 7070 0189 35       		.byte	53
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 190


 7071 018a 43       		.byte	67
 7072 018b 39       		.byte	57
 7073 018c 00000000 		.word	vLoadProfile_Current_Modify
 7074 0190 35       		.byte	53
 7075 0191 35       		.byte	53
 7076 0192 43       		.byte	67
 7077 0193 39       		.byte	57
 7078 0194 00000000 		.word	vLoadProfile_Current_Modify
 7079 0198 32       		.byte	50
 7080 0199 35       		.byte	53
 7081 019a 43       		.byte	67
 7082 019b 39       		.byte	57
 7083 019c 00000000 		.word	vLoadProfile_Current_Modify
 7084 01a0 32       		.byte	50
 7085 01a1 32       		.byte	50
 7086 01a2 32       		.byte	50
 7087 01a3 32       		.byte	50
 7088 01a4 00000000 		.word	vRead_Version
 7089              		.section	.bss.Voltage_Change_State,"aw",%nobits
 7090              		.set	.LANCHOR5,. + 0
 7093              	Voltage_Change_State:
 7094 0000 00       		.space	1
 7095              		.section	.data.B_Voltage,"aw",%progbits
 7096              		.align	2
 7097              		.set	.LANCHOR6,. + 0
 7100              	B_Voltage:
 7101 0000 98080000 		.word	2200
 7102              		.section	.bss.uc645DataDomainLength,"aw",%nobits
 7103              		.set	.LANCHOR0,. + 0
 7106              	uc645DataDomainLength:
 7107 0000 00       		.space	1
 7108              		.section	.bss.Bcurrent,"aw",%nobits
 7109              		.align	2
 7110              		.set	.LANCHOR2,. + 0
 7113              	Bcurrent:
 7114 0000 00000000 		.space	8
 7114      00000000 
 7115              		.section	.bss.Ccurrent,"aw",%nobits
 7116              		.align	2
 7117              		.set	.LANCHOR3,. + 0
 7120              	Ccurrent:
 7121 0000 00000000 		.space	8
 7121      00000000 
 7122              		.section	.data.Dayfrozen_Change_State,"aw",%progbits
 7123              		.set	.LANCHOR8,. + 0
 7126              	Dayfrozen_Change_State:
 7127 0000 FF       		.byte	-1
 7128              		.section	.bss.ucRcvStatus,"aw",%nobits
 7129              		.set	.LANCHOR9,. + 0
 7132              	ucRcvStatus:
 7133 0000 00       		.space	1
 7134              		.section	.bss.Acurrent,"aw",%nobits
 7135              		.align	2
 7136              		.set	.LANCHOR1,. + 0
 7139              	Acurrent:
 7140 0000 00000000 		.space	8
 7140      00000000 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 191


 7141              		.section	.data.C_Voltage,"aw",%progbits
 7142              		.align	2
 7143              		.set	.LANCHOR7,. + 0
 7146              	C_Voltage:
 7147 0000 98080000 		.word	2200
 7148              		.section	.rodata.INFRDataID_Handle_List,"a",%progbits
 7149              		.align	2
 7150              		.set	.LANCHOR11,. + 0
 7153              	INFRDataID_Handle_List:
 7154 0000 33       		.byte	51
 7155 0001 37       		.byte	55
 7156 0002 34       		.byte	52
 7157 0003 35       		.byte	53
 7158 0004 00000000 		.word	Get_VChange_State
 7159 0008 33       		.byte	51
 7160 0009 39       		.byte	57
 7161 000a 34       		.byte	52
 7162 000b 35       		.byte	53
 7163 000c 00000000 		.word	Query_Voltage_Limit
 7164 0010 33       		.byte	51
 7165 0011 3A       		.byte	58
 7166 0012 34       		.byte	52
 7167 0013 35       		.byte	53
 7168 0014 00000000 		.word	Default_Reset
 7169 0018 33       		.byte	51
 7170 0019 3B       		.byte	59
 7171 001a 34       		.byte	52
 7172 001b 35       		.byte	53
 7173 001c 00000000 		.word	vVoltage_SetMaxValue
 7174 0020 33       		.byte	51
 7175 0021 3C       		.byte	60
 7176 0022 34       		.byte	52
 7177 0023 35       		.byte	53
 7178 0024 00000000 		.word	vVoltage_SetMinValue
 7179 0028 33       		.byte	51
 7180 0029 3D       		.byte	61
 7181 002a 34       		.byte	52
 7182 002b 35       		.byte	53
 7183 002c 00000000 		.word	vVoltage_SetMaxMaxValue
 7184 0030 33       		.byte	51
 7185 0031 3E       		.byte	62
 7186 0032 34       		.byte	52
 7187 0033 35       		.byte	53
 7188 0034 00000000 		.word	vVoltage_SetMinMinValue
 7189 0038 33       		.byte	51
 7190 0039 73       		.byte	115
 7191 003a 34       		.byte	52
 7192 003b 33       		.byte	51
 7193 003c 00000000 		.word	vEnergy_Modify_AbleSet
 7194 0040 33       		.byte	51
 7195 0041 74       		.byte	116
 7196 0042 34       		.byte	52
 7197 0043 33       		.byte	51
 7198 0044 00000000 		.word	vEnergy_Modify_RaitoSet
 7199 0048 33       		.byte	51
 7200 0049 75       		.byte	117
 7201 004a 34       		.byte	52
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 192


 7202 004b 33       		.byte	51
 7203 004c 00000000 		.word	vEnergy_Modify_Reset
 7204 0050 33       		.byte	51
 7205 0051 76       		.byte	118
 7206 0052 34       		.byte	52
 7207 0053 33       		.byte	51
 7208 0054 00000000 		.word	vEnergy_Modify_ReadSet
 7209 0058 33       		.byte	51
 7210 0059 37       		.byte	55
 7211 005a 35       		.byte	53
 7212 005b 35       		.byte	53
 7213 005c 00000000 		.word	vCurrent_Limit_Set
 7214 0060 33       		.byte	51
 7215 0061 38       		.byte	56
 7216 0062 35       		.byte	53
 7217 0063 35       		.byte	53
 7218 0064 00000000 		.word	vCurrent_Limit_ReadSet
 7219 0068 33       		.byte	51
 7220 0069 39       		.byte	57
 7221 006a 35       		.byte	53
 7222 006b 35       		.byte	53
 7223 006c 00000000 		.word	vCurrent_CTRatio_Set
 7224 0070 33       		.byte	51
 7225 0071 3A       		.byte	58
 7226 0072 35       		.byte	53
 7227 0073 35       		.byte	53
 7228 0074 00000000 		.word	vCurrent_CTRatio_ReadSet
 7229 0078 33       		.byte	51
 7230 0079 3B       		.byte	59
 7231 007a 35       		.byte	53
 7232 007b 35       		.byte	53
 7233 007c 00000000 		.word	vCurrent_TransFormer_Capacity_ReadSet
 7234 0080 32       		.byte	50
 7235 0081 32       		.byte	50
 7236 0082 32       		.byte	50
 7237 0083 32       		.byte	50
 7238 0084 00000000 		.word	vRead_Version
 7239              		.section	.data.A_Voltage,"aw",%progbits
 7240              		.align	2
 7241              		.set	.LANCHOR4,. + 0
 7244              	A_Voltage:
 7245 0000 98080000 		.word	2200
 7246              		.text
 7247              	.Letext0:
 7248              		.file 2 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\machine\\_defaul
 7249              		.file 3 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\sys\\_stdint.h"
 7250              		.file 4 "../cmsis/include/stm32f37x.h"
 7251              		.file 5 "../user/include/BaseDef.h"
 7252              		.file 6 "../user/include/Uart.h"
 7253              		.file 7 "../user/include/DLT645.h"
 7254              		.file 8 "../cmsis/include/core_cm4.h"
 7255              		.file 9 "../user/include/Time.h"
 7256              		.file 10 "../user/include/Flash.h"
 7257              		.file 11 "../stdperiph/include/stm32f37x_flash.h"
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 193


DEFINED SYMBOLS
                            *ABS*:00000000 DLT645.c
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:22     .text.dwCheckFrame:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:26     .text.dwCheckFrame:00000000 dwCheckFrame
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:101    .text.dwCheckFrame:00000044 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:106    .text.BCD_Verity:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:110    .text.BCD_Verity:00000000 BCD_Verity
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:200    .text.Get_Voltage:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:204    .text.Get_Voltage:00000000 Get_Voltage
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:257    .text.vGet_Current:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:261    .text.vGet_Current:00000000 vGet_Current
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:330    .text.vGet_Current:00000058 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:335    .text.vPut_Current:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:339    .text.vPut_Current:00000000 vPut_Current
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:448    .text.vPut_Current:000000b0 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:457    .text.blCurrentSingle_Modify_Method:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:461    .text.blCurrentSingle_Modify_Method:00000000 blCurrentSingle_Modify_Method
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:783    .text.blCurrentSingle_Modify_Method:000001ac $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:789    .text.vCurrentTriple_Modify_Method:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:793    .text.vCurrentTriple_Modify_Method:00000000 vCurrentTriple_Modify_Method
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:840    .text.vCurrent_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:845    .text.vCurrent_Modify:00000000 vCurrent_Modify
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:870    .text.vCurrent_Modify:00000014 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:875    .text.vCurrent_Modify:0000001e $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1268   .text.vCurrent_Modify:0000026c $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1276   .text.vCurrent_Limit_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1281   .text.vCurrent_Limit_Modify:00000000 vCurrent_Limit_Modify
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1294   .text.Get_Estatus:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1298   .text.Get_Estatus:00000000 Get_Estatus
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1322   .text.Estatus_Modify_CurrentEvent:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1327   .text.Estatus_Modify_CurrentEvent:00000000 Estatus_Modify_CurrentEvent
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1348   .text.Estatus_Modify_CurrentEvent:00000010 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1551   .text.Estatus_Modify_CurrentEvent:00000110 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1556   .text.GetLowByte:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1560   .text.GetLowByte:00000000 GetLowByte
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1599   .text.GetLowByte:00000048 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1606   .text.GetHighByte:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1610   .text.GetHighByte:00000000 GetHighByte
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1642   .text.GetHighByte:00000034 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1648   .text.Get_Energy:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1652   .text.Get_Energy:00000000 Get_Energy
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1719   .text.Get_Energy:00000064 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1724   .text.Fill_Energy:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1728   .text.Fill_Energy:00000000 Fill_Energy
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1814   .text.Fill_Energy:000000b8 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1822   .text.vVoltage_SetMaxMaxValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1827   .text.vVoltage_SetMaxMaxValue:00000000 vVoltage_SetMaxMaxValue
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1840   .text.vVoltage_SetMinMinValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1845   .text.vVoltage_SetMinMinValue:00000000 vVoltage_SetMinMinValue
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1858   .text.vLoadProfile_Voltage_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1863   .text.vLoadProfile_Voltage_Modify:00000000 vLoadProfile_Voltage_Modify
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1996   .text.vLoadProfile_Voltage_Modify:000000a0 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2001   .text.vLoadProfile_Current_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2006   .text.vLoadProfile_Current_Modify:00000000 vLoadProfile_Current_Modify
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2019   .text.Get_VChange_State:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2024   .text.Get_VChange_State:00000000 Get_VChange_State
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2128   .text.Get_VChange_State:00000070 $d
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 194


C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2137   .text.Set_Voltage_Limit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2142   .text.Set_Voltage_Limit:00000000 Set_Voltage_Limit
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2272   .text.Set_Voltage_Limit:00000098 $d
                            *COM*:00000004 Voltage_MAX
                            *COM*:00000004 Voltage_MIN
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2285   .text.Query_Voltage_Limit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2290   .text.Query_Voltage_Limit:00000000 Query_Voltage_Limit
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2405   .text.Query_Voltage_Limit:00000094 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2414   .text.Default_Reset:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2419   .text.Default_Reset:00000000 Default_Reset
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2547   .text.Default_Reset:000000a8 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2565   .text.vCurrent_Limit_Set:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2570   .text.vCurrent_Limit_Set:00000000 vCurrent_Limit_Set
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2638   .text.vCurrent_Limit_Set:00000044 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2645   .text.vCurrent_CTRatio_Set:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2650   .text.vCurrent_CTRatio_Set:00000000 vCurrent_CTRatio_Set
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2718   .text.vCurrent_CTRatio_Set:00000044 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2725   .text.vCurrent_Limit_ReadSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2730   .text.vCurrent_Limit_ReadSet:00000000 vCurrent_Limit_ReadSet
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2827   .text.vCurrent_Limit_ReadSet:00000070 $d
                            *COM*:00000010 TransFormer
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2835   .text.vCurrent_CTRatio_ReadSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2840   .text.vCurrent_CTRatio_ReadSet:00000000 vCurrent_CTRatio_ReadSet
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2926   .text.vCurrent_CTRatio_ReadSet:0000005c $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2934   .text.vCurrent_TransFormer_Capacity_ReadSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:2939   .text.vCurrent_TransFormer_Capacity_ReadSet:00000000 vCurrent_TransFormer_Capacity_ReadSet
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:3025   .text.vCurrent_TransFormer_Capacity_ReadSet:0000005c $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:3033   .text.vEnergy_Modify_ReadSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:3038   .text.vEnergy_Modify_ReadSet:00000000 vEnergy_Modify_ReadSet
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:3129   .text.vEnergy_Modify_ReadSet:00000070 $d
                            *COM*:00000001 ucDayfrozen_Modify_Ratio
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:3139   .text.vRead_Version:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:3144   .text.vRead_Version:00000000 vRead_Version
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:3225   .text.vRead_Version:00000054 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:3232   .text.vEnergy_Modify_RaitoSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:3237   .text.vEnergy_Modify_RaitoSet:00000000 vEnergy_Modify_RaitoSet
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:3360   .text.vEnergy_Modify_RaitoSet:0000009c $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:3369   .text.vVoltage_SetMinValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:3374   .text.vVoltage_SetMinValue:00000000 vVoltage_SetMinValue
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:3479   .text.vVoltage_SetMinValue:00000074 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:3486   .text.vEnergy_Modify_ReadValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:3491   .text.vEnergy_Modify_ReadValue:00000000 vEnergy_Modify_ReadValue
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:3620   .text.vEnergy_Modify_ReadValue:0000009c $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:3629   .text.vVoltage_SetMaxValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:3634   .text.vVoltage_SetMaxValue:00000000 vVoltage_SetMaxValue
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:3741   .text.vVoltage_SetMaxValue:00000078 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:3748   .text.vEnergy_Modify_AbleSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:3753   .text.vEnergy_Modify_AbleSet:00000000 vEnergy_Modify_AbleSet
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:3895   .text.vEnergy_Modify_AbleSet:000000a4 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:3905   .text.vEnergy_Modify_Reset:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:3910   .text.vEnergy_Modify_Reset:00000000 vEnergy_Modify_Reset
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:4029   .text.vEnergy_Modify_Reset:00000080 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:4039   .text.blRecvFrame:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:4044   .text.blRecvFrame:00000000 blRecvFrame
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:4227   .text.blRecvFrame:000000f0 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:4235   .text.vDBDataID_Handle:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:4240   .text.vDBDataID_Handle:00000000 vDBDataID_Handle
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 195


C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:4326   .text.vDBDataID_Handle:00000068 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:4334   .text.vINFRDataID_Handle:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:4339   .text.vINFRDataID_Handle:00000000 vINFRDataID_Handle
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:4413   .text.vINFRDataID_Handle:00000054 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:4418   .text.blVoltage_Create:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:4423   .text.blVoltage_Create:00000000 blVoltage_Create
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:4446   .text.blVoltage_Create:00000012 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:4451   .text.blVoltage_Create:0000001c $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:4808   .text.blVoltage_Create:000001dc $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:4817   .text.Voltage_Change_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:4822   .text.Voltage_Change_Init:00000000 Voltage_Change_Init
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:4910   .text.Voltage_Change_Init:00000068 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:4922   .text.Voltage_Modifier_Method:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:4927   .text.Voltage_Modifier_Method:00000000 Voltage_Modifier_Method
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5044   .text.Voltage_Modifier_Method:00000080 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5050   .text.Voltage_Modifier:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5055   .text.Voltage_Modifier:00000000 Voltage_Modifier
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5394   .text.Voltage_Modifier:000001ec $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5405   .text.vVoltageHandle:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5410   .text.vVoltageHandle:00000000 vVoltageHandle
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5440   .text.vVoltageHandle:00000018 $d
                            *COM*:00000001 Voltage_Frame_Status
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5447   .text.vCurrent_Limit_DefaultSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5452   .text.vCurrent_Limit_DefaultSet:00000000 vCurrent_Limit_DefaultSet
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5527   .text.vCurrent_Limit_DefaultSet:00000060 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5536   .text.vCurrentDirect_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5541   .text.vCurrentDirect_Modify:00000000 vCurrentDirect_Modify
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5556   .text.vCurrentDirect_Modify:0000000c $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5716   .text.vCurrent_Count_Clear:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5721   .text.vCurrent_Count_Clear:00000000 vCurrent_Count_Clear
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5742   .text.vCurrent_Count_Clear:00000010 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5749   .text.vEnergy_Modify_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5754   .text.vEnergy_Modify_Init:00000000 vEnergy_Modify_Init
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5791   .text.vEnergy_Modify_Init:00000024 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5800   .text.vNow_Frozen_Modify_Mothod:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5805   .text.vNow_Frozen_Modify_Mothod:00000000 vNow_Frozen_Modify_Mothod
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5928   .text.vNow_Frozen_Modify_Mothod:000000a0 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5934   .text.vNowEnergy_Modifier:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5939   .text.vNowEnergy_Modifier:00000000 vNowEnergy_Modifier
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5983   .text.vNowEnergy_Modifier:0000002e $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5989   .text.vNowEnergy_Modifier:00000034 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:6309   .text.vNowEnergy_Modifier:00000210 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:6330   .text.vDayfrozen_Modifier:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:6335   .text.vDayfrozen_Modifier:00000000 vDayfrozen_Modifier
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:6529   .text.vDayfrozen_Modifier:0000012c $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:6544   .text.vAccountEnergy_Modify_Mothod:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:6549   .text.vAccountEnergy_Modify_Mothod:00000000 vAccountEnergy_Modify_Mothod
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:6576   .text.vAccountEnergy_Modify_Mothod:00000014 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:6581   .text.vAccountEnergy_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:6586   .text.vAccountEnergy_Modify:00000000 vAccountEnergy_Modify
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:6794   .text.vAccountEnergy_Modify:00000144 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:7120   .bss.Ccurrent:00000000 Ccurrent
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:7113   .bss.Bcurrent:00000000 Bcurrent
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:7139   .bss.Acurrent:00000000 Acurrent
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:7146   .data.C_Voltage:00000000 C_Voltage
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:7100   .data.B_Voltage:00000000 B_Voltage
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:7244   .data.A_Voltage:00000000 A_Voltage
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s 			page 196


C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:7126   .data.Dayfrozen_Change_State:00000000 Dayfrozen_Change_State
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:7093   .bss.Voltage_Change_State:00000000 Voltage_Change_State
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:7106   .bss.uc645DataDomainLength:00000000 uc645DataDomainLength
                            *COM*:0000012c ucApp_Buf_INFR
                            *COM*:0000012c ucApp_Buf_ZD2DB
                            *COM*:0000012c ucApp_Buf_DB2ZD
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:7132   .bss.ucRcvStatus:00000000 ucRcvStatus
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:6823   .rodata.DBDataID_Handle_List:00000000 DBDataID_Handle_List
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:7153   .rodata.INFRDataID_Handle_List:00000000 INFRDataID_Handle_List
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:6819   .rodata.DBDataID_Handle_List:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:7094   .bss.Voltage_Change_State:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:7096   .data.B_Voltage:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:7107   .bss.uc645DataDomainLength:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:7109   .bss.Bcurrent:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:7116   .bss.Ccurrent:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:7133   .bss.ucRcvStatus:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:7135   .bss.Acurrent:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:7142   .data.C_Voltage:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:7149   .rodata.INFRDataID_Handle_List:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:7240   .data.A_Voltage:00000000 $d
                     .debug_frame:00000010 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1357   .text.Estatus_Modify_CurrentEvent:00000019 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:1357   .text.Estatus_Modify_CurrentEvent:0000001a $t
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5561   .text.vCurrentDirect_Modify:00000011 $d
C:\Users\strag\AppData\Local\Temp\ccrR0Oqi.s:5561   .text.vCurrentDirect_Modify:00000012 $t

UNDEFINED SYMBOLS
Flash_Write_Word
ucDrv_Buf_PutBytes
blDrv_Buf_IsEmpty
Uart_DataPut
ucDrv_Buf_Uart3_Snd
EEProm_Read
Flash_Read_Word
FLASH_Unlock
FLASH_ErasePage
FLASH_Lock
ucDrv_Buf_GetBytes
blTime2_Update
blWordsCounterStatus
uwTime2WordsCounter
blFramesCounterStatus
uwTime2FramesCounter
__aeabi_uldivmod
