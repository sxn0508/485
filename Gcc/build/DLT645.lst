ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"DLT645.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.dwCheckFrame,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	dwCheckFrame:
  27              	.LFB112:
  28              		.file 1 "../user/source/DLT645.c"
   1:../user/source/DLT645.c **** #include "DLT645.h"
   2:../user/source/DLT645.c **** #include "Time.h"
   3:../user/source/DLT645.c **** #include "Flash.h"
   4:../user/source/DLT645.c **** 
   5:../user/source/DLT645.c **** /*´®¿ÚÇı¶¯»º´æ*/
   6:../user/source/DLT645.c **** static struct ucbuf Uart1_Rsvbuf, Uart1_Sndbuf, Uart3_Rsvbuf, Uart3_Sndbuf, Uart2_Rsvbuf, Uart2_Snd
   7:../user/source/DLT645.c **** /*Ó¦ÓÃ²ã´®¿Ú½á¹¹Ìå*/
   8:../user/source/DLT645.c **** static UartDef UartZD = {USART1, &Uart1_Rsvbuf, &Uart1_Sndbuf};
   9:../user/source/DLT645.c **** static UartDef UartDB = {USART3, &Uart3_Rsvbuf, &Uart3_Sndbuf};
  10:../user/source/DLT645.c **** static UartDef UartIR = {USART2, &Uart2_Rsvbuf, &Uart2_Sndbuf};
  11:../user/source/DLT645.c **** /*Ó¦ÓÃ²ã´®¿Ú½á¹¹ÌåÖ¸Õë*/
  12:../user/source/DLT645.c **** UartDef *pUartZD = &UartZD;
  13:../user/source/DLT645.c **** UartDef *pUartDB = &UartDB;
  14:../user/source/DLT645.c **** UartDef *pUartIR = &UartIR;
  15:../user/source/DLT645.c **** /*¹æÔ¼Ö¡»º´æ*/
  16:../user/source/DLT645.c **** uint8_t ucApp_Buf_DB2ZD[DATA_BUF_SIZE]; //µç±íÉÏĞĞÖ¡Ó¦ÓÃ»º´æ
  17:../user/source/DLT645.c **** uint8_t ucApp_Buf_ZD2DB[DATA_BUF_SIZE]; //ÖÕ¶ËÏÂĞĞÖ¡Ó¦ÓÃ»º´æ
  18:../user/source/DLT645.c **** uint8_t ucApp_Buf_INFR[DATA_BUF_SIZE];  //ºìÍâ¿ÚÓ¦ÓÃ»º´æ
  19:../user/source/DLT645.c **** /*
  20:../user/source/DLT645.c **** #define ENABLE_ESTATUS						//µç±í×´Ì¬×ÖĞŞ¸Ä¹¦ÄÜ 
  21:../user/source/DLT645.c **** #define ENABLE_CURRENT_DEVIATION			//µçÁ÷¸÷Ïà²îÖµĞŞ¸Ä¹¦ÄÜ
  22:../user/source/DLT645.c **** #define ENABLE_CURRENT_LIMIT				//µçÁ÷×î´óÖµĞŞ¸Ä¹¦ÄÜ
  23:../user/source/DLT645.c **** #define ENABLE_ENERGY_MODIFY				//ĞŞ¸ÄÕıÏòÓĞ¹¦
  24:../user/source/DLT645.c **** #define ENABLE_INFR							//ĞŞ¸ÄÕıÏòÓĞ¹¦
  25:../user/source/DLT645.c **** */
  26:../user/source/DLT645.c **** const DefDataIDHandle INFRDataID_Handle_List[] = {
  27:../user/source/DLT645.c ****     {{0X33, 0X37, 0X34, 0X35}, Get_VChange_State},       //À©³ä£ºµçÑ¹ĞŞ¸ÄÊ¹ÄÜ/½ûÄÜID_02010400,
  28:../user/source/DLT645.c ****     {{0X33, 0X39, 0X34, 0X35}, Query_Voltage_Limit},     //À©³ä£ºµçÑ¹ÏŞÖµ²éÑ¯ID_02010600,
  29:../user/source/DLT645.c ****     {{0X33, 0X3A, 0X34, 0X35}, Default_Reset},           //À©³ä£ºµçÑ¹ĞŞ¸Ä¹¦ÄÜ»Ö¸´³ö³§ÉèÖÃID_0201070
  30:../user/source/DLT645.c ****     {{0X33, 0X3B, 0X34, 0X35}, vVoltage_SetMaxValue},    //À©³ä£ºµçÑ¹ÉèÖÃºÏ¸ñÉÏÏŞ
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 2


  31:../user/source/DLT645.c ****     {{0X33, 0X3C, 0X34, 0X35}, vVoltage_SetMinValue},    //À©³ä£ºµçÑ¹ÉèÖÃºÏ¸ñÏÂÏŞ
  32:../user/source/DLT645.c ****     {{0X33, 0X3D, 0X34, 0X35}, vVoltage_SetMaxMaxValue}, //À©³ä£ºµçÑ¹ÉèÖÃĞŞ¸ÄÉÏÏŞ
  33:../user/source/DLT645.c ****     {{0X33, 0X3E, 0X34, 0X35}, vVoltage_SetMinMinValue}, //À©³ä£ºµçÑ¹ÉèÖÃĞŞ¸ÄÏÂÏŞ
  34:../user/source/DLT645.c ****     {{0X33, 0X73, 0X34, 0X33}, vEnergy_Modify_AbleSet},  //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸ÄÊ¹ÄÜ/½ûÄÜID_0001
  35:../user/source/DLT645.c ****     {{0X33, 0X74, 0X34, 0X33}, vEnergy_Modify_RaitoSet}, //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä±ÈÀıÉèÖÃID_00014
  36:../user/source/DLT645.c ****     {{0X33, 0X75, 0X34, 0X33}, vEnergy_Modify_Reset},    //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä»Ö¸´³ö³§ÉèÖÃID_0
  37:../user/source/DLT645.c ****     {{0X33, 0X76, 0X34, 0X33}, vEnergy_Modify_ReadSet},  //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä¶ÁÈ¡Éè£ºÖÃ
  38:../user/source/DLT645.c ****     /*µçÁ÷ÖØ¹ıÔØ*/
  39:../user/source/DLT645.c ****     {{0X33, 0X37, 0X35, 0X35}, vCurrent_Limit_Set},                    //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:µ
  40:../user/source/DLT645.c ****     {{0X33, 0X38, 0X35, 0X35}, vCurrent_Limit_ReadSet},                //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:µ
  41:../user/source/DLT645.c ****     {{0X33, 0X39, 0X35, 0X35}, vCurrent_CTRatio_Set},                  //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:¶
  42:../user/source/DLT645.c ****     {{0X33, 0X3A, 0X35, 0X35}, vCurrent_CTRatio_ReadSet},              //À©³ä£º¶ÁÈ¡µçÁ÷ÖØ¹ıÔØ²ÎÊı:¶
  43:../user/source/DLT645.c ****     {{0X33, 0X3B, 0X35, 0X35}, vCurrent_TransFormer_Capacity_ReadSet}, //À©³ä£º¶ÁÈ¡µçÁ÷ÖØ¹ıÔØ²ÎÊı:±
  44:../user/source/DLT645.c ****     {{0X32, 0X32, 0X32, 0X32}, vRead_Version},                         //À©³ä£º¶ÁÈ¡³ÌĞò°æ±¾
  45:../user/source/DLT645.c **** };
  46:../user/source/DLT645.c **** const DefDataIDHandle DBDataID_Handle_List[] = {
  47:../user/source/DLT645.c ****     {{0X33, 0X34, 0X34, 0X35}, vVoltageHandle}, //AÏàµçÑ¹ID_02010100,
  48:../user/source/DLT645.c ****     {{0X33, 0X35, 0X34, 0X35}, vVoltageHandle}, //BÏàµçÑ¹ID_02010200,
  49:../user/source/DLT645.c ****     {{0X33, 0X36, 0X34, 0X35}, vVoltageHandle}, //CÏàµçÑ¹ID_02010300,
  50:../user/source/DLT645.c ****     {{0X33, 0X32, 0X34, 0X35}, vVoltageHandle}, //µçÑ¹Êı¾İ¿éID_0201FF00,
  51:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_DEVIATION
  52:../user/source/DLT645.c ****     {{0X33, 0X34, 0X35, 0X35}, vCurrent_Modify}, //AÏàµçÁ÷ID_02020100,
  53:../user/source/DLT645.c ****     {{0X33, 0X35, 0X35, 0X35}, vCurrent_Modify}, //BÏàµçÁ÷ID_02020200,
  54:../user/source/DLT645.c ****     {{0X33, 0X36, 0X35, 0X35}, vCurrent_Modify}, //CÏàµçÁ÷ID_02020300,
  55:../user/source/DLT645.c ****     {{0X33, 0X32, 0X35, 0X35}, vCurrent_Modify}, //µçÁ÷Êı¾İ¿éID_0202FF00,
  56:../user/source/DLT645.c **** #else
  57:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
  58:../user/source/DLT645.c ****     {{0X33, 0X34, 0X35, 0X35}, vCurrent_Limit_Modify}, //AÏàµçÁ÷ID_02020100,
  59:../user/source/DLT645.c ****     {{0X33, 0X35, 0X35, 0X35}, vCurrent_Limit_Modify}, //BÏàµçÁ÷ID_02020200,
  60:../user/source/DLT645.c ****     {{0X33, 0X36, 0X35, 0X35}, vCurrent_Limit_Modify}, //CÏàµçÁ÷ID_02020300,
  61:../user/source/DLT645.c ****     {{0X33, 0X32, 0X35, 0X35}, vCurrent_Limit_Modify}, //µçÁ÷Êı¾İ¿éID_0202FF00,
  62:../user/source/DLT645.c **** #endif
  63:../user/source/DLT645.c **** #endif
  64:../user/source/DLT645.c ****     {{0X37, 0X38, 0X33, 0X38}, Estatus_Modify_CurrentEvent}, //µç±íÔËĞĞ×´Ì¬×Ö4ID_04000504,
  65:../user/source/DLT645.c ****     {{0X38, 0X38, 0X33, 0X38}, Estatus_Modify_CurrentEvent}, //µç±íÔËĞĞ×´Ì¬×Ö5ID_04000505,
  66:../user/source/DLT645.c ****     {{0X39, 0X38, 0X33, 0X38}, Estatus_Modify_CurrentEvent}, //µç±íÔËĞĞ×´Ì¬×Ö6ID_04000506,
  67:../user/source/DLT645.c ****     {{0X3A, 0X38, 0X33, 0X38}, Estatus_Modify_CurrentEvent}, //µç±íÔËĞĞ×´Ì¬×Ö7ID_04000507,
  68:../user/source/DLT645.c ****     {{0X32, 0X38, 0X33, 0X38}, Estatus_Modify_CurrentEvent}, //µç±íÔËĞĞ×´Ì¬×ÖÊı¾İ¿éID_040005FF,
  69:../user/source/DLT645.c ****     {{0X33, 0X33, 0X34, 0X33}, vNowEnergy_Modifier},         //µ±Ç°ÕıÏòÓĞ¹¦×ÜµçÄÜID_00010000,
  70:../user/source/DLT645.c ****     {{0X33, 0X34, 0X34, 0X33}, vNowEnergy_Modifier},         //µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜID_00010100,
  71:../user/source/DLT645.c ****     {{0X33, 0X35, 0X34, 0X33}, vNowEnergy_Modifier},         //µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ2µçÄÜID_00010200,
  72:../user/source/DLT645.c ****     {{0X33, 0X36, 0X34, 0X33}, vNowEnergy_Modifier},         //µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ3µçÄÜID_00010300,
  73:../user/source/DLT645.c ****     {{0X33, 0X37, 0X34, 0X33}, vNowEnergy_Modifier},         //µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ4µçÄÜID_00010400,
  74:../user/source/DLT645.c ****     {{0X33, 0X32, 0X34, 0X33}, vNowEnergy_Modifier},         //µ±Ç°ÕıÏòÓĞ¹¦µçÄÜÊı¾İ¿éID_0001FF00,
  75:../user/source/DLT645.c ****     {{0X33, 0X33, 0X48, 0X33}, vNowEnergy_Modifier},         //µ±Ç°AÏàÕıÏòÓĞ¹¦ID_00150000,
  76:../user/source/DLT645.c ****     {{0X33, 0X33, 0X5C, 0X33}, vNowEnergy_Modifier},         //µ±Ç°BÏàÕıÏòÓĞ¹¦ID_00290000,
  77:../user/source/DLT645.c ****     {{0X33, 0X33, 0X70, 0X33}, vNowEnergy_Modifier},         //µ±Ç°CÏàÕıÏòÓĞ¹¦ID_003D0000,
  78:../user/source/DLT645.c ****     {{0X34, 0X34, 0X39, 0X38}, vDayfrozen_Modifier},         //ÉÏ1ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£©
  79:../user/source/DLT645.c ****     {{0X35, 0X34, 0X39, 0X38}, vDayfrozen_Modifier},         //ÉÏ2ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£©
  80:../user/source/DLT645.c ****     {{0X36, 0X34, 0X39, 0X38}, vDayfrozen_Modifier},         //ÉÏ3ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£©
  81:../user/source/DLT645.c ****     {{0X34, 0X33, 0X34, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦×ÜµçÄÜID_00010001,
  82:../user/source/DLT645.c ****     {{0X34, 0X34, 0X34, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜID_0001010
  83:../user/source/DLT645.c ****     {{0X34, 0X35, 0X34, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜ ID_000102
  84:../user/source/DLT645.c ****     {{0X34, 0X36, 0X34, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜID_0001030
  85:../user/source/DLT645.c ****     {{0X34, 0X37, 0X34, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜID_0001040
  86:../user/source/DLT645.c ****     {{0X34, 0X32, 0X34, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦µçÄÜÊı¾İ¿éID_0001FF
  87:../user/source/DLT645.c ****     {{0X34, 0X33, 0X48, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕAÏàÕıÏòÓĞ¹¦µçÄÜID_00150001,
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 3


  88:../user/source/DLT645.c ****     {{0X34, 0X33, 0X5C, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕBÏàÕıÏòÓĞ¹¦µçÄÜID_00290001,
  89:../user/source/DLT645.c ****     {{0X34, 0X33, 0X70, 0X33}, vAccountEnergy_Modify},       //ÉÏ1½áËãÈÕCÏàÕıÏòÓĞ¹¦µçÄÜID_003D0001,
  90:../user/source/DLT645.c ****     {{0X33, 0X37, 0X34, 0X35}, Get_VChange_State},           //À©³ä£ºµçÑ¹ĞŞ¸ÄÊ¹ÄÜ/½ûÄÜID_02010400,
  91:../user/source/DLT645.c ****     {{0X33, 0X38, 0X34, 0X35}, Set_Voltage_Limit},           //À©³ä£ºµçÑ¹ÏŞÖµÉèÖÃID_02010500,
  92:../user/source/DLT645.c ****     {{0X33, 0X39, 0X34, 0X35}, Query_Voltage_Limit},         //À©³ä£ºµçÑ¹ÏŞÖµ²éÑ¯ID_02010600,
  93:../user/source/DLT645.c ****     {{0X33, 0X3A, 0X34, 0X35}, Default_Reset},               //À©³ä£ºµçÑ¹ĞŞ¸Ä¹¦ÄÜ»Ö¸´³ö³§ÉèÖÃID_020
  94:../user/source/DLT645.c **** 
  95:../user/source/DLT645.c ****     /*µçÁ÷ÖØ¹ıÔØ*/
  96:../user/source/DLT645.c ****     {{0X33, 0X37, 0X35, 0X35}, vCurrent_Limit_Set},                    //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:µ
  97:../user/source/DLT645.c ****     {{0X33, 0X38, 0X35, 0X35}, vCurrent_Limit_ReadSet},                //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:µ
  98:../user/source/DLT645.c ****     {{0X33, 0X39, 0X35, 0X35}, vCurrent_CTRatio_Set},                  //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:¶
  99:../user/source/DLT645.c ****     {{0X33, 0X3A, 0X35, 0X35}, vCurrent_CTRatio_ReadSet},              //À©³ä£º¶ÁÈ¡µçÁ÷ÖØ¹ıÔØ²ÎÊı:¶
 100:../user/source/DLT645.c ****     {{0X33, 0X3B, 0X35, 0X35}, vCurrent_TransFormer_Capacity_ReadSet}, //À©³ä£º¶ÁÈ¡µçÁ÷ÖØ¹ıÔØ²ÎÊı:±
 101:../user/source/DLT645.c **** 
 102:../user/source/DLT645.c ****     {{0X33, 0X73, 0X34, 0X33}, vEnergy_Modify_AbleSet},   //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸ÄÊ¹ÄÜ/½ûÄÜID_000
 103:../user/source/DLT645.c ****     {{0X33, 0X74, 0X34, 0X33}, vEnergy_Modify_RaitoSet},  //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä±ÈÀıÉèÖÃID_0001
 104:../user/source/DLT645.c ****     {{0X33, 0X75, 0X34, 0X33}, vEnergy_Modify_Reset},     //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿»Ø¸´³ö³§ÉèÖÃID_0001
 105:../user/source/DLT645.c ****     {{0X33, 0X76, 0X34, 0X33}, vEnergy_Modify_ReadSet},   //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä¶ÁÈ¡ÉèÖÃ
 106:../user/source/DLT645.c ****     {{0X33, 0X77, 0X34, 0X33}, vEnergy_Modify_ReadValue}, //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿¶ÁÈ¡´æ´¢µÄÕæÊµÖµºÍĞ
 107:../user/source/DLT645.c ****     /*4ºÅ²¹ÒÅ¸ººÉÇúÏßÁ¬Ğø³­¶Á²¿·ÖÖĞµÄµçÑ¹ÇúÏß¡¢µçÁ÷ÇúÏßĞŞ¸Ä,2018Äê8ÔÂ7ÈÕ20:53:4£º0*/
 108:../user/source/DLT645.c ****     {{0X33, 0X34, 0X43, 0X39}, vLoadProfile_Voltage_Modify}, //AÏàµçÑ¹ÇúÏßÁ¬Ğø³­¶ÁID_06100101,
 109:../user/source/DLT645.c ****     {{0X34, 0X34, 0X43, 0X39}, vLoadProfile_Voltage_Modify}, //BµçÑ¹Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_06100102,
 110:../user/source/DLT645.c ****     {{0X35, 0X34, 0X43, 0X39}, vLoadProfile_Voltage_Modify}, //CµçÑ¹Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_06100103,
 111:../user/source/DLT645.c ****     {{0X32, 0X34, 0X43, 0X39}, vLoadProfile_Voltage_Modify}, //µçÑ¹Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_061001FF,
 112:../user/source/DLT645.c ****     {{0X33, 0X35, 0X43, 0X39}, vLoadProfile_Current_Modify}, //AÏàµçÁ÷ÇúÏßÁ¬Ğø³­¶ÁID_06100201,
 113:../user/source/DLT645.c ****     {{0X34, 0X35, 0X43, 0X39}, vLoadProfile_Current_Modify}, //BµçÁ÷Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_06100202,
 114:../user/source/DLT645.c ****     {{0X35, 0X35, 0X43, 0X39}, vLoadProfile_Current_Modify}, //CµçÁ÷Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_06100203,
 115:../user/source/DLT645.c ****     {{0X32, 0X35, 0X43, 0X39}, vLoadProfile_Current_Modify}, //µçÁ÷Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_061002FF,
 116:../user/source/DLT645.c ****     {{0X32, 0X32, 0X32, 0X32}, vRead_Version},               //À©³ä£º¶ÁÈ¡³ÌĞò°æ±¾
 117:../user/source/DLT645.c **** };
 118:../user/source/DLT645.c **** 
 119:../user/source/DLT645.c **** FrameHandleStatus Voltage_Frame_Status;
 120:../user/source/DLT645.c **** uint8_t ucRcvStatus = 0;
 121:../user/source/DLT645.c **** uint8_t uc645DataDomainLength = 0;                 //645Ö¡Êı¾İÓò³¤¶È
 122:../user/source/DLT645.c **** uint8_t Voltage_Change_State = Voltage_NOChange;   //µçÑ¹ÊÇ·ñĞŞ¸Ä±êÖ¾Î»£¬Ä¬ÈÏĞŞ¸Ä×´Ì¬
 123:../user/source/DLT645.c **** uint8_t Dayfrozen_Change_State = DAYFROZEN_CHANGE; //µçÁ¿ÊÇ·ñĞŞ¸Ä£¬Ä¬ÈÏĞŞ¸Ä
 124:../user/source/DLT645.c **** uint8_t ucDayfrozen_Modify_Ratio;                  //µçÁ¿µ÷Õû±ÈÀı
 125:../user/source/DLT645.c **** int Voltage_MAX;                                   //µçÑ¹ºÏ¸ñÉÏÏŞ
 126:../user/source/DLT645.c **** int Voltage_MIN;                                   //µçÑ¹ºÏ¸ñÏÂÏŞ
 127:../user/source/DLT645.c **** int A_Voltage = WORK_VOLTAGE;                      //×îºóÒ»´ÎĞŞ¸ÄºóµÄAÏàµçÑ¹Öµ
 128:../user/source/DLT645.c **** int B_Voltage = WORK_VOLTAGE;                      //×îºóÒ»´ÎĞŞ¸ÄºóµÄBÏàµçÑ¹Öµ
 129:../user/source/DLT645.c **** int C_Voltage = WORK_VOLTAGE;                      //×îºóÒ»´ÎĞŞ¸ÄºóµÄCÏàµçÑ¹Öµ
 130:../user/source/DLT645.c **** CURRENT Acurrent = {0, 0, false};
 131:../user/source/DLT645.c **** CURRENT Bcurrent = {0, 0, false};
 132:../user/source/DLT645.c **** CURRENT Ccurrent = {0, 0, false};
 133:../user/source/DLT645.c **** 
 134:../user/source/DLT645.c **** /*±äÑ¹Æ÷½á¹¹Ìå¶¨Òå*/
 135:../user/source/DLT645.c **** TransFormer_TypeDef TransFormer;
 136:../user/source/DLT645.c **** 
 137:../user/source/DLT645.c **** /*µçÁ÷ÖØÔØ¡¢¹ıÔØµ÷ÕûÏà¹Ø²ÎÊı
 138:../user/source/DLT645.c **** #ifdef	  TRANSFORMER_CAPACITY_50KVA
 139:../user/source/DLT645.c **** 	#define TransFormer.CT2_CurrentLimit					2700						//50KVA±äÑ¹Æ÷µÄCT¶ş´Î²àÈıÏàµçÁ÷ºÍµÄ×î´óÖµ£¬À©´ó
 140:../user/source/DLT645.c **** #endif
 141:../user/source/DLT645.c **** #ifdef	  TRANSFORMER_CAPACITY_100KVA
 142:../user/source/DLT645.c **** 	#define TransFormer.CT2_CurrentLimit					5400						//100KVA±äÑ¹Æ÷µÄCT¶ş´Î²àÈıÏàµçÁ÷ºÍµÄ×î´óÖµ£¬À©´
 143:../user/source/DLT645.c **** #endif
 144:../user/source/DLT645.c **** #ifdef	  TRANSFORMER_CAPACITY_200KVA
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 4


 145:../user/source/DLT645.c **** 	#define TransFormer.CT2_CurrentLimit					10800						//200KVA±äÑ¹Æ÷µÄCT¶ş´Î²àÈıÏàµçÁ÷ºÍµÄ×î´óÖµ£¬À©
 146:../user/source/DLT645.c **** #endif
 147:../user/source/DLT645.c **** #ifdef	  TRANSFORMER_CAPACITY_400KVA
 148:../user/source/DLT645.c **** 	#define TransFormer.CT2_CurrentLimit					21600						//400KVA±äÑ¹Æ÷µÄCT¶ş´Î²àÈıÏàµçÁ÷ºÍµÄ×î´óÖµ£¬À©
 149:../user/source/DLT645.c **** #endif
 150:../user/source/DLT645.c **** */
 151:../user/source/DLT645.c **** 
 152:../user/source/DLT645.c **** /********************************************************************
 153:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½«±¨ÎÄ´æµ½Ó¦ÓÃ²ã»º´æ£¬²¢ÅĞ¶ÏÊÇ·ñÎª645Ö¡
 154:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë£¬Çı¶¯²ã»º´æÖ¸Õë
 155:../user/source/DLT645.c ****  * Êä    ³ö£ºÈç¹û¶¼ºÏ·¨·µ»Øtrue
 156:../user/source/DLT645.c ****  ·ñÔò·µ»Øfalse
 157:../user/source/DLT645.c ****  *           
 158:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 159:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 160:../user/source/DLT645.c ****  **********************************************************************/
 161:../user/source/DLT645.c **** 
 162:../user/source/DLT645.c **** bool blRecvFrame(struct ucbuf *ucDrv_Buf, uint8_t *ucdata_buf)
 163:../user/source/DLT645.c **** {
 164:../user/source/DLT645.c ****     /*ÊÕÖ¡×´Ì¬*/
 165:../user/source/DLT645.c ****     switch (ucRcvStatus)
 166:../user/source/DLT645.c ****     {
 167:../user/source/DLT645.c ****     /*Ö¡Í·68*/
 168:../user/source/DLT645.c ****     case SEARCH_SOH:
 169:../user/source/DLT645.c ****     {
 170:../user/source/DLT645.c ****         /*Î´¶Áµ½Ö¸¶¨×Ö½ÚÊı£¬Ìø³ö·ÖÖ§£¬·µ»Øfalse*/
 171:../user/source/DLT645.c ****         if (ucDrv_Buf_GetBytes(ucDrv_Buf, ucdata_buf, 1) == false)
 172:../user/source/DLT645.c ****         {
 173:../user/source/DLT645.c ****             break;
 174:../user/source/DLT645.c ****         }
 175:../user/source/DLT645.c ****         /*¶Áµ½Ò»¸ö×Ö½Ú*/
 176:../user/source/DLT645.c ****         else
 177:../user/source/DLT645.c ****         {
 178:../user/source/DLT645.c ****             /*Ö¡Í·²»ºÏ·¨£¬·µ»Øfalse*/
 179:../user/source/DLT645.c ****             if (*(ucdata_buf + 0) != 0X68)
 180:../user/source/DLT645.c ****             {
 181:../user/source/DLT645.c ****                 break;
 182:../user/source/DLT645.c ****             }
 183:../user/source/DLT645.c ****             else
 184:../user/source/DLT645.c ****             {
 185:../user/source/DLT645.c ****                 /*Ö¡Í·ºÏ·¨£¬ÊÕÖ¡×´¸ÄÎªRCV_DATA1*/
 186:../user/source/DLT645.c ****                 ucRcvStatus = RCV_DATA1;
 187:../user/source/DLT645.c ****                 blWordsCounterStatus = true;
 188:../user/source/DLT645.c ****             }
 189:../user/source/DLT645.c ****         }
 190:../user/source/DLT645.c ****     }
 191:../user/source/DLT645.c ****     case RCV_DATA1:
 192:../user/source/DLT645.c ****     {
 193:../user/source/DLT645.c ****         /*¶Á9¸ö×Ö½ÚÊ§°Ü£¬Ìø³ö·ÖÖ§£¬·µ»Øfalse*/
 194:../user/source/DLT645.c ****         if (ucDrv_Buf_GetBytes(ucDrv_Buf, ucdata_buf + 1, 9) == false)
 195:../user/source/DLT645.c ****         {
 196:../user/source/DLT645.c ****             /*DLT645_WORDS_DELAY_MAX£¬×Ö½Ú½ÓÊÕ³¬Ê±*/
 197:../user/source/DLT645.c ****             if (blTime2_Update(uwTime2WordsCounter, DLT645_WORDS_DELAY_MAX))
 198:../user/source/DLT645.c ****             {
 199:../user/source/DLT645.c ****                 /*³¬Ê±ÔòÖØĞÂÅĞ¶ÏÖ¡Í·68£¬²»³¬Ê±Ôò¼ÌĞøÕÒ³¤¶È£»*/
 200:../user/source/DLT645.c ****                 ucRcvStatus = SEARCH_SOH;
 201:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 5


 202:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 203:../user/source/DLT645.c ****             }
 204:../user/source/DLT645.c ****             break;
 205:../user/source/DLT645.c ****         }
 206:../user/source/DLT645.c ****         else //¶Á68Ö®ºó9¸ö×Ö½Ú³É¹¦
 207:../user/source/DLT645.c ****         {
 208:../user/source/DLT645.c ****             if ((*(ucdata_buf + 7) != 0X68) || ((*(ucdata_buf + 9) + 12) >= 255))
 209:../user/source/DLT645.c ****             {
 210:../user/source/DLT645.c ****                 ucRcvStatus = SEARCH_SOH; //µÚÆß¸ö×Ö½Ú²»Îª68 ,Ìø³ö£¬·µ»Øfalse£¬ÖØĞÂÕÒ68
 211:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 212:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 213:../user/source/DLT645.c ****                 break;
 214:../user/source/DLT645.c ****             }
 215:../user/source/DLT645.c ****             else
 216:../user/source/DLT645.c ****             {                                              //µÚÆß¸ö×Ö½ÚÊÇ68
 217:../user/source/DLT645.c ****                 uc645DataDomainLength = *(ucdata_buf + 9); //¶Á³ö645Ö¡³¤¶ÈL
 218:../user/source/DLT645.c ****                 ucRcvStatus = RCV_DATA2;                   //Ö¸ÏòÏÂÒ»²¿·Ö
 219:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 220:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 221:../user/source/DLT645.c ****                 blWordsCounterStatus = true;
 222:../user/source/DLT645.c ****             }
 223:../user/source/DLT645.c ****         }
 224:../user/source/DLT645.c ****     }
 225:../user/source/DLT645.c ****     case RCV_DATA2:
 226:../user/source/DLT645.c ****     {
 227:../user/source/DLT645.c ****         if (ucDrv_Buf_GetBytes(ucDrv_Buf, ucdata_buf + 10, uc645DataDomainLength + 2) == false)
 228:../user/source/DLT645.c ****         {                                                                    //¶ÁºóĞø×Ö½ÚÊ§°Ü£¬Ìø³ö
 229:../user/source/DLT645.c ****             if (blTime2_Update(uwTime2WordsCounter, DLT645_WORDS_DELAY_MAX)) //DLT645_WORDS_DELAY_M
 230:../user/source/DLT645.c ****             {                                                                //Èç¹û³¬Ê±£¬ÔòÖØĞÂÕÒ68
 231:../user/source/DLT645.c ****                 ucRcvStatus = SEARCH_SOH;
 232:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 233:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 234:../user/source/DLT645.c ****             }
 235:../user/source/DLT645.c ****             break;
 236:../user/source/DLT645.c ****         }
 237:../user/source/DLT645.c ****         else //¶Á³öÖ¸¶¨×Ö½ÚÊıµÄÒ»Ö¡
 238:../user/source/DLT645.c ****         {
 239:../user/source/DLT645.c ****             ucRcvStatus = SEARCH_SOH; //×´Ì¬¸ÄÎª²éÕÒ68£»
 240:../user/source/DLT645.c ****             blWordsCounterStatus = false;
 241:../user/source/DLT645.c ****             uwTime2WordsCounter = 0;
 242:../user/source/DLT645.c ****             if (dwCheckFrame(ucdata_buf) != OK_1)
 243:../user/source/DLT645.c ****             {
 244:../user/source/DLT645.c ****                 //	if (blTime2_Update(uwTime2WordsCounter,DLT645_WORDS_DELAY_MAX)) //DLT645_WORDS_D
 245:../user/source/DLT645.c ****                 //{ //Èç¹û³¬Ê±£¬ÔòÖØĞÂÕÒ68£¬·ñÔòÖØĞÂ½ÓÊÕºóĞø×Ö½Ú£»Ìø³ö·ÖÖ§
 246:../user/source/DLT645.c ****                 //ucRcvStatus = SEARCH_SOH;
 247:../user/source/DLT645.c ****                 //}//Ö¡Ğ£Ñé´íÎó
 248:../user/source/DLT645.c ****                 return false;
 249:../user/source/DLT645.c ****             }
 250:../user/source/DLT645.c ****             else
 251:../user/source/DLT645.c ****             {
 252:../user/source/DLT645.c ****                 //ucRcvStatus = SEARCH_SOH;//×´Ì¬¸ÄÎª²éÕÒ68£»
 253:../user/source/DLT645.c ****                 //blWordsCounterStatus = false;
 254:../user/source/DLT645.c ****                 return true; //ÅĞ¶ÏÊÕÖ¡ÊÇ·ñºÏ¸ñ£¬ºÏ¸ñ·µ»Øtrue£¬·ñÔò·µ»Øfalse
 255:../user/source/DLT645.c ****             }
 256:../user/source/DLT645.c ****         }
 257:../user/source/DLT645.c ****     }
 258:../user/source/DLT645.c ****     break;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 6


 259:../user/source/DLT645.c ****     default:
 260:../user/source/DLT645.c ****         break;
 261:../user/source/DLT645.c ****     }
 262:../user/source/DLT645.c ****     return false;
 263:../user/source/DLT645.c **** }
 264:../user/source/DLT645.c **** 
 265:../user/source/DLT645.c **** /********************************************************************
 266:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÅĞ¶ÏÖ¡µÄĞ£ÑéºÍ¡¢½áÊø×Ö½ÚÊÇ·ñºÏ·¨
 267:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 268:../user/source/DLT645.c ****  * Êä    ³ö£ºÈç¹û¶¼ºÏ·¨·µ»Øtrue
 269:../user/source/DLT645.c ****  ·ñÔò·µ»Øfalse
 270:../user/source/DLT645.c ****  *           
 271:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 272:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 273:../user/source/DLT645.c ****  **********************************************************************/
 274:../user/source/DLT645.c **** STATUS dwCheckFrame(uint8_t *pucBuffer)
 275:../user/source/DLT645.c **** {
  29              		.loc 1 275 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35 0000 10B4     		push	{r4}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 4, -4
  39              	.LVL1:
 276:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
 277:../user/source/DLT645.c ****     uint8_t i;
 278:../user/source/DLT645.c ****     //ÇóÈ¡Ğ£ÑéºÍ
 279:../user/source/DLT645.c ****     for (i = 0; i < uc645DataDomainLength + 10; i++)
  40              		.loc 1 279 0
  41 0002 0023     		movs	r3, #0
 276:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
  42              		.loc 1 276 0
  43 0004 1A46     		mov	r2, r3
  44              		.loc 1 279 0
  45 0006 04E0     		b	.L2
  46              	.LVL2:
  47              	.L3:
 280:../user/source/DLT645.c ****     {
 281:../user/source/DLT645.c ****         ucCheckData += pucBuffer[i];
  48              		.loc 1 281 0 discriminator 3
  49 0008 C45C     		ldrb	r4, [r0, r3]	@ zero_extendqisi2
  50 000a 2244     		add	r2, r2, r4
  51              	.LVL3:
  52 000c D2B2     		uxtb	r2, r2
  53              	.LVL4:
 279:../user/source/DLT645.c ****     {
  54              		.loc 1 279 0 discriminator 3
  55 000e 0133     		adds	r3, r3, #1
  56              	.LVL5:
  57 0010 DBB2     		uxtb	r3, r3
  58              	.LVL6:
  59              	.L2:
 279:../user/source/DLT645.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 7


  60              		.loc 1 279 0 is_stmt 0 discriminator 1
  61 0012 0C4C     		ldr	r4, .L8
  62 0014 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
  63 0016 01F10A04 		add	r4, r1, #10
  64 001a A342     		cmp	r3, r4
  65 001c F4DB     		blt	.L3
 282:../user/source/DLT645.c ****     }
 283:../user/source/DLT645.c ****     //ÅĞ¶ÏĞ£ÑéºÍºÍ½áÊø·û
 284:../user/source/DLT645.c ****     if ((ucCheckData == pucBuffer[uc645DataDomainLength + 10]) && (pucBuffer[uc645DataDomainLength 
  66              		.loc 1 284 0 is_stmt 1
  67 001e 4318     		adds	r3, r0, r1
  68              	.LVL7:
  69 0020 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
  70 0022 9A42     		cmp	r2, r3
  71 0024 06D1     		bne	.L5
  72              		.loc 1 284 0 is_stmt 0 discriminator 1
  73 0026 0144     		add	r1, r1, r0
  74 0028 CB7A     		ldrb	r3, [r1, #11]	@ zero_extendqisi2
  75 002a 162B     		cmp	r3, #22
  76 002c 05D0     		beq	.L6
 285:../user/source/DLT645.c ****     {
 286:../user/source/DLT645.c ****         return OK_1;
 287:../user/source/DLT645.c ****     }
 288:../user/source/DLT645.c ****     else
 289:../user/source/DLT645.c ****     {
 290:../user/source/DLT645.c ****         return ERROR_1;
  77              		.loc 1 290 0 is_stmt 1
  78 002e 4FF0FF30 		mov	r0, #-1
  79              	.LVL8:
  80 0032 03E0     		b	.L4
  81              	.LVL9:
  82              	.L5:
  83 0034 4FF0FF30 		mov	r0, #-1
  84              	.LVL10:
  85 0038 00E0     		b	.L4
  86              	.LVL11:
  87              	.L6:
 286:../user/source/DLT645.c ****     }
  88              		.loc 1 286 0
  89 003a 0020     		movs	r0, #0
  90              	.LVL12:
  91              	.L4:
 291:../user/source/DLT645.c ****     }
 292:../user/source/DLT645.c **** }
  92              		.loc 1 292 0
  93 003c 5DF8044B 		ldr	r4, [sp], #4
  94              	.LCFI1:
  95              		.cfi_restore 4
  96              		.cfi_def_cfa_offset 0
  97 0040 7047     		bx	lr
  98              	.L9:
  99 0042 00BF     		.align	2
 100              	.L8:
 101 0044 00000000 		.word	.LANCHOR0
 102              		.cfi_endproc
 103              	.LFE112:
 105              		.section	.text.BCD_Verity,"ax",%progbits
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 8


 106              		.align	2
 107              		.thumb
 108              		.thumb_func
 110              	BCD_Verity:
 111              	.LFB122:
 293:../user/source/DLT645.c **** 
 294:../user/source/DLT645.c **** /********************************************************************
 295:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµç±í£º²àÊÕÖ¡Êı¾İ±êÊ¶·ÖÎö´¦Àí
 296:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 297:../user/source/DLT645.c ****  * Êä    ³ö£ºÊı¾İ±êÊ¶
 298:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 299:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.8
 300:../user/source/DLT645.c ****  **********************************************************************/
 301:../user/source/DLT645.c **** void vDBDataID_Handle(uint8_t *pucBuffer)
 302:../user/source/DLT645.c **** {
 303:../user/source/DLT645.c ****     uint8_t i;
 304:../user/source/DLT645.c ****     uint16_t idcount;
 305:../user/source/DLT645.c ****     idcount = sizeof(DBDataID_Handle_List) / sizeof(DBDataID_Handle_List[0]);
 306:../user/source/DLT645.c ****     for (i = 0; i < idcount; i++)
 307:../user/source/DLT645.c ****     {
 308:../user/source/DLT645.c ****         if ((DBDataID_Handle_List[i].Data_ID[0] == pucBuffer[10]) &&
 309:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 310:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 311:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 312:../user/source/DLT645.c ****             break;
 313:../user/source/DLT645.c ****     }
 314:../user/source/DLT645.c ****     if (i < idcount)
 315:../user/source/DLT645.c ****     {
 316:../user/source/DLT645.c **** #ifndef ENABLE_CURRENT_DEVIATION
 317:../user/source/DLT645.c ****         if (DBDataID_Handle_List[i].Handle == vCurrent_Modify)
 318:../user/source/DLT645.c ****             return;
 319:../user/source/DLT645.c **** #endif
 320:../user/source/DLT645.c **** #ifndef ENABLE_CURRENT_LIMIT
 321:../user/source/DLT645.c ****         if (DBDataID_Handle_List[i].Handle == vCurrent_Limit_Modify)
 322:../user/source/DLT645.c ****             return;
 323:../user/source/DLT645.c **** #endif
 324:../user/source/DLT645.c **** #ifndef ENABLE_ESTATUS
 325:../user/source/DLT645.c ****         if (DBDataID_Handle_List[i].Handle == Estatus_Modify_CurrentEvent)
 326:../user/source/DLT645.c ****             return;
 327:../user/source/DLT645.c **** #endif
 328:../user/source/DLT645.c **** #ifndef ENABLE_ENERGY_MODIFY
 329:../user/source/DLT645.c ****         if ((DBDataID_Handle_List[i].Handle == vNowEnergy_Modifier) ||
 330:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vDayfrozen_Modifier)) ||
 331:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vAccountEnergy_Modify)) ||
 332:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_AbleSet)) ||
 333:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_RaitoSet)) ||
 334:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_Reset)))
 335:../user/source/DLT645.c ****             return;
 336:../user/source/DLT645.c **** #endif
 337:../user/source/DLT645.c ****         DBDataID_Handle_List[i].Handle(pucBuffer);
 338:../user/source/DLT645.c ****     }
 339:../user/source/DLT645.c ****     else
 340:../user/source/DLT645.c ****         return;
 341:../user/source/DLT645.c **** }
 342:../user/source/DLT645.c **** 
 343:../user/source/DLT645.c **** /********************************************************************
 344:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ººìÍâ²àÊÕÖ¡Êı¾İ±êÊ¶·ÖÎö´¦Àí
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 9


 345:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 346:../user/source/DLT645.c ****  * Êä    ³ö£ºÊı¾İ±êÊ¶
 347:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 348:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.8
 349:../user/source/DLT645.c ****  **********************************************************************/
 350:../user/source/DLT645.c **** void vINFRDataID_Handle(uint8_t *pucBuffer)
 351:../user/source/DLT645.c **** {
 352:../user/source/DLT645.c ****     uint8_t i;
 353:../user/source/DLT645.c ****     uint16_t idcount;
 354:../user/source/DLT645.c ****     idcount = sizeof(INFRDataID_Handle_List) / sizeof(INFRDataID_Handle_List[0]);
 355:../user/source/DLT645.c ****     for (i = 0; i < idcount; i++)
 356:../user/source/DLT645.c ****     {
 357:../user/source/DLT645.c ****         if ((INFRDataID_Handle_List[i].Data_ID[0] == pucBuffer[10]) &&
 358:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 359:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 360:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 361:../user/source/DLT645.c ****             break;
 362:../user/source/DLT645.c ****     }
 363:../user/source/DLT645.c ****     if (i < idcount)
 364:../user/source/DLT645.c ****     {
 365:../user/source/DLT645.c **** #ifndef ENABLE_ENERGY_MODIFY
 366:../user/source/DLT645.c ****         if (((DBDataID_Handle_List[i].Handle == vEnergy_Modify_AbleSet)) ||
 367:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_RaitoSet)) ||
 368:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_Reset)) ||
 369:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_ReadSet)) ||
 370:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_ReadValue)))
 371:../user/source/DLT645.c ****             return;
 372:../user/source/DLT645.c **** #endif
 373:../user/source/DLT645.c ****         INFRDataID_Handle_List[i].Handle(pucBuffer);
 374:../user/source/DLT645.c ****     }
 375:../user/source/DLT645.c ****     else
 376:../user/source/DLT645.c ****         return;
 377:../user/source/DLT645.c **** }
 378:../user/source/DLT645.c **** 
 379:../user/source/DLT645.c **** /********************************************************************
 380:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÀ©³äÖ¡£º¸ü¸ÄµçÑ¹ĞŞ¸Ä±êÖ¾Î»
 381:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 382:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
 383:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 384:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 385:../user/source/DLT645.c ****  **********************************************************************/
 386:../user/source/DLT645.c **** void Get_VChange_State(uint8_t *pucBuffer)
 387:../user/source/DLT645.c **** {
 388:../user/source/DLT645.c ****     uint8_t i;
 389:../user/source/DLT645.c ****     if (pucBuffer[14] == 0x34)
 390:../user/source/DLT645.c ****     {
 391:../user/source/DLT645.c ****         Voltage_Change_State = Voltage_NOChange;
 392:../user/source/DLT645.c ****     }
 393:../user/source/DLT645.c ****     if (pucBuffer[14] == 0x33)
 394:../user/source/DLT645.c ****     {
 395:../user/source/DLT645.c ****         Voltage_Change_State = Voltage_Change;
 396:../user/source/DLT645.c ****     }
 397:../user/source/DLT645.c ****     if (ERROR == Flash_Write_Word(FLASH_VChangeState_Addr, Voltage_Change_State))
 398:../user/source/DLT645.c ****     {
 399:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
 400:../user/source/DLT645.c ****     }
 401:../user/source/DLT645.c ****     else
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 10


 402:../user/source/DLT645.c ****         pucBuffer[8] = 0x94;
 403:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
 404:../user/source/DLT645.c ****     pucBuffer[10] = 0x00;
 405:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 406:../user/source/DLT645.c ****     {
 407:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
 408:../user/source/DLT645.c ****     }
 409:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
 410:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 411:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
 412:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 413:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 414:../user/source/DLT645.c ****     {
 415:../user/source/DLT645.c ****         Uart_DataPut(USART3);
 416:../user/source/DLT645.c ****     }
 417:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
 418:../user/source/DLT645.c **** #ifdef ENABLE_INFR
 419:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
 420:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 421:../user/source/DLT645.c ****     {
 422:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
 423:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 424:../user/source/DLT645.c ****     }
 425:../user/source/DLT645.c **** #endif
 426:../user/source/DLT645.c **** }
 427:../user/source/DLT645.c **** /********************************************************************
 428:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÀ©³äÖ¡£ºµçÑ¹ÏŞÖµÉèÖÃ
 429:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 430:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
 431:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 432:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 433:../user/source/DLT645.c ****  **********************************************************************/
 434:../user/source/DLT645.c **** void Set_Voltage_Limit(uint8_t *pucBuffer)
 435:../user/source/DLT645.c **** {
 436:../user/source/DLT645.c ****     int VMAX = 0;
 437:../user/source/DLT645.c ****     int VMIN = 0;
 438:../user/source/DLT645.c ****     int i = 0;
 439:../user/source/DLT645.c ****     VMAX = Get_Voltage(pucBuffer[14], pucBuffer[15]);
 440:../user/source/DLT645.c ****     VMIN = Get_Voltage(pucBuffer[16], pucBuffer[17]);
 441:../user/source/DLT645.c ****     if ((VMAX > VMIN) && (VMAX < Voltage_MAX_MAX) //µçÑ¹ÏŞÖµÉèÖÃÌõ¼ş£¬ÉÏÏŞ´óÓÚÏÂÏŞÇÒĞ¡ÓÚÉÏÉÏÏŞ
 442:../user/source/DLT645.c ****         && (VMIN > Voltage_MIN_MIN))              //µçÑ¹ÏÂÏŞ´óÓÚÏÂÏÂÏŞ
 443:../user/source/DLT645.c ****     {
 444:../user/source/DLT645.c ****         Voltage_MAX = VMAX;
 445:../user/source/DLT645.c ****         Voltage_MIN = VMIN;
 446:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX1_Addr, pucBuffer[14]);
 447:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX2_Addr, pucBuffer[15]);
 448:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN1_Addr, pucBuffer[16]);
 449:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN2_Addr, pucBuffer[17]);
 450:../user/source/DLT645.c ****         pucBuffer[8] = 0x94; //ÉèÖÃ³É¹¦±êÖ¾
 451:../user/source/DLT645.c ****     }
 452:../user/source/DLT645.c ****     else
 453:../user/source/DLT645.c ****     {
 454:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4; //ÉèÖÃÒì³£±êÖ¾
 455:../user/source/DLT645.c ****     }
 456:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
 457:../user/source/DLT645.c ****     pucBuffer[10] = 0x00; //ÇóÈ¡Ğ£ÑéºÍ
 458:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 11


 459:../user/source/DLT645.c ****     {
 460:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
 461:../user/source/DLT645.c ****     }
 462:../user/source/DLT645.c ****     pucBuffer[11] = 0x16; //½áÊø·û
 463:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 464:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
 465:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 466:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 467:../user/source/DLT645.c ****     {
 468:../user/source/DLT645.c ****         Uart_DataPut(USART3);
 469:../user/source/DLT645.c ****     }
 470:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
 471:../user/source/DLT645.c **** #ifdef ENABLE_INFR
 472:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
 473:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 474:../user/source/DLT645.c ****     {
 475:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
 476:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 477:../user/source/DLT645.c ****     }
 478:../user/source/DLT645.c **** #endif
 479:../user/source/DLT645.c **** }
 480:../user/source/DLT645.c **** 
 481:../user/source/DLT645.c **** /********************************************************************
 482:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÀ©³äÖ¡£ºµçÑ¹ÏŞÖµ²éÑ¯
 483:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 484:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
 485:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 486:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 487:../user/source/DLT645.c ****  **********************************************************************/
 488:../user/source/DLT645.c **** void Query_Voltage_Limit(uint8_t *pucBuffer)
 489:../user/source/DLT645.c **** {
 490:../user/source/DLT645.c ****     int i = 0;
 491:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
 492:../user/source/DLT645.c ****     pucBuffer[9] = 0x0C;
 493:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(Voltage_MAX_MAX);
 494:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(Voltage_MAX_MAX); //µçÑ¹ÉÏÉÏÏŞ
 495:../user/source/DLT645.c ****     pucBuffer[16] = GetLowByte(Voltage_MIN_MIN);
 496:../user/source/DLT645.c ****     pucBuffer[17] = GetHighByte(Voltage_MIN_MIN); //µçÑ¹ÏÂÏÂÏŞ
 497:../user/source/DLT645.c ****     pucBuffer[18] = GetLowByte(Voltage_MAX);
 498:../user/source/DLT645.c ****     pucBuffer[19] = GetHighByte(Voltage_MAX); //µçÑ¹ÉÏÏŞÖµ
 499:../user/source/DLT645.c ****     pucBuffer[20] = GetLowByte(Voltage_MIN);
 500:../user/source/DLT645.c ****     pucBuffer[21] = GetHighByte(Voltage_MIN); //µçÑ¹ÏÂÏŞÖµ
 501:../user/source/DLT645.c ****     pucBuffer[22] = 0x00;                     //ÇóÈ¡Ğ£ÑéºÍ
 502:../user/source/DLT645.c ****     for (i = 0; i < 24 - 2; i++)              //±¨ÎÄ³¤¶È24
 503:../user/source/DLT645.c ****     {
 504:../user/source/DLT645.c ****         pucBuffer[22] += pucBuffer[i];
 505:../user/source/DLT645.c ****     }
 506:../user/source/DLT645.c ****     pucBuffer[23] = 0x16; //½áÊø·û
 507:../user/source/DLT645.c ****     uc645DataDomainLength = 12;
 508:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 509:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 510:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 511:../user/source/DLT645.c ****     {
 512:../user/source/DLT645.c ****         Uart_DataPut(USART3);
 513:../user/source/DLT645.c ****     }
 514:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
 515:../user/source/DLT645.c **** #ifdef ENABLE_INFR
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 12


 516:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 24);
 517:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 518:../user/source/DLT645.c ****     {
 519:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
 520:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 521:../user/source/DLT645.c ****     }
 522:../user/source/DLT645.c **** #endif
 523:../user/source/DLT645.c **** }
 524:../user/source/DLT645.c **** 
 525:../user/source/DLT645.c **** /********************************************************************
 526:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ÏŞÖµ»Ö¸´³ö³§
 527:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 528:../user/source/DLT645.c ****  * Êä    ³ö£º	none
 529:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 530:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 531:../user/source/DLT645.c ****  **********************************************************************/
 532:../user/source/DLT645.c **** void Default_Reset(uint8_t *pucBuffer)
 533:../user/source/DLT645.c **** {
 534:../user/source/DLT645.c ****     int i = 0;
 535:../user/source/DLT645.c ****     A_Voltage = WORK_VOLTAGE;                                        //AÏàµçÑ¹Öµ¸ÄÎª±ê×¼Öµ
 536:../user/source/DLT645.c ****     B_Voltage = WORK_VOLTAGE;                                        //BÏàµçÑ¹Öµ¸ÄÎª±ê×¼Öµ
 537:../user/source/DLT645.c ****     C_Voltage = WORK_VOLTAGE;                                        //CÏàµçÑ¹Öµ¸ÄÎª±ê×¼Öµ
 538:../user/source/DLT645.c ****     Voltage_Change_State = Voltage_Change;                           //µçÑ¹ĞŞ¸Ä×´Ì¬¸ÄÎª¡°ÓĞĞ§¡±
 539:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VChangeState_Addr, Voltage_Change_State); //´æ´¢µ½FLASHÖĞ
 540:../user/source/DLT645.c ****     Voltage_MAX = Voltage_MAX_Default;                               //µçÑ¹ºÏ¸ñÏŞÖµ»Ö¸´Ä¬ÈÏ²¢ÇÒ´æµµ
 541:../user/source/DLT645.c ****     Voltage_MIN = Voltage_MIN_Default;
 542:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMAX1_Addr, GetLowByte(Voltage_MAX));
 543:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMAX2_Addr, GetHighByte(Voltage_MAX));
 544:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMIN1_Addr, GetLowByte(Voltage_MIN));
 545:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMIN2_Addr, GetHighByte(Voltage_MIN));
 546:../user/source/DLT645.c ****     pucBuffer[8] = 0x94;  //ÇóÈ¡Ğ£ÑéºÍ
 547:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;  //ÇóÈ¡Ğ£ÑéºÍ
 548:../user/source/DLT645.c ****     pucBuffer[10] = 0x00; //ÇóÈ¡Ğ£ÑéºÍ
 549:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 550:../user/source/DLT645.c ****     {
 551:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
 552:../user/source/DLT645.c ****     }
 553:../user/source/DLT645.c ****     pucBuffer[11] = 0x16; //½áÊø·û
 554:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
 555:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 556:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 557:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 558:../user/source/DLT645.c ****     {
 559:../user/source/DLT645.c ****         Uart_DataPut(USART3);
 560:../user/source/DLT645.c ****     }
 561:../user/source/DLT645.c **** /*ºìÍâ¿Ú·¢ËÍ*/
 562:../user/source/DLT645.c **** #ifdef ENABLE_INFR
 563:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
 564:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 565:../user/source/DLT645.c ****     {
 566:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
 567:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 568:../user/source/DLT645.c ****     }
 569:../user/source/DLT645.c **** #endif
 570:../user/source/DLT645.c **** }
 571:../user/source/DLT645.c **** 
 572:../user/source/DLT645.c **** /********************************************************************
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 13


 573:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹Ö¡´¦Àíº¯Êı
 574:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë£¬Çı¶¯²ã»º´æÖ¸Õë
 575:../user/source/DLT645.c ****  * Êä    ³ö£º
 576:../user/source/DLT645.c ****  *           
 577:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 578:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.10
 579:../user/source/DLT645.c ****  **********************************************************************/
 580:../user/source/DLT645.c **** void vVoltageHandle(uint8_t *pucBuffer)
 581:../user/source/DLT645.c **** {
 582:../user/source/DLT645.c ****     /*µÈ´ıµçÑ¹»ØÖ¡×´Ì¬ÇåÎ»*/
 583:../user/source/DLT645.c ****     Voltage_Frame_Status = FrameReplied;
 584:../user/source/DLT645.c ****     /*¼ÆÊ±Æ÷¸´Î»*/
 585:../user/source/DLT645.c ****     blFramesCounterStatus = false;
 586:../user/source/DLT645.c ****     uwTime2FramesCounter = 0;
 587:../user/source/DLT645.c ****     /*µçÑ¹Ö¡ÅĞ¶Ï´¦Àí*/
 588:../user/source/DLT645.c ****     Voltage_Modifier(pucBuffer);
 589:../user/source/DLT645.c **** }
 590:../user/source/DLT645.c **** 
 591:../user/source/DLT645.c **** /********************************************************************
 592:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ºÏ¸ñÂÊÅĞ¶Ïµ÷Õû
 593:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 594:../user/source/DLT645.c ****  * Êä    ³ö£º	none
 595:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 596:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 597:../user/source/DLT645.c ****  **********************************************************************/
 598:../user/source/DLT645.c **** void Voltage_Modifier(uint8_t *pucBuffer)
 599:../user/source/DLT645.c **** {
 600:../user/source/DLT645.c **** 
 601:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
 602:../user/source/DLT645.c ****     uint8_t i = 0;
 603:../user/source/DLT645.c ****     //IWDG_ReloadCounter();
 604:../user/source/DLT645.c ****     if (Voltage_Change_State == Voltage_NOChange)
 605:../user/source/DLT645.c ****         return;
 606:../user/source/DLT645.c ****     if ((pucBuffer[8] == 0X91) && (pucBuffer[10] == 0x33) && (pucBuffer[12] == 0x34) && (pucBuffer[
 607:../user/source/DLT645.c ****     {
 608:../user/source/DLT645.c ****         if (pucBuffer[11] == 0x32) //ÈıÏàµçÑ¹Êı¾İ¿é
 609:../user/source/DLT645.c ****         {
 610:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[14], pucBuffer[15])) //BCDĞ£Ñé
 611:../user/source/DLT645.c ****             {
 612:../user/source/DLT645.c ****                 A_Voltage = Get_Voltage(pucBuffer[14], pucBuffer[15]);
 613:../user/source/DLT645.c ****                 if ((A_Voltage > Voltage_MAX) || (A_Voltage < Voltage_MIN)) //ĞŞ¸ÄAÏàµçÑ¹
 614:../user/source/DLT645.c ****                 {
 615:../user/source/DLT645.c ****                     A_Voltage = Voltage_Modifier_Method(A_Voltage);
 616:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(A_Voltage);
 617:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(A_Voltage);
 618:../user/source/DLT645.c ****                 }
 619:../user/source/DLT645.c ****             }
 620:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[16], pucBuffer[17])) //BCDĞ£Ñé
 621:../user/source/DLT645.c ****             {
 622:../user/source/DLT645.c ****                 B_Voltage = Get_Voltage(pucBuffer[16], pucBuffer[17]);
 623:../user/source/DLT645.c ****                 if ((B_Voltage > Voltage_MAX) || (B_Voltage < Voltage_MIN)) //ĞŞ¸ÄBÏàµçÑ¹
 624:../user/source/DLT645.c ****                 {
 625:../user/source/DLT645.c ****                     B_Voltage = Voltage_Modifier_Method(B_Voltage);
 626:../user/source/DLT645.c ****                     pucBuffer[16] = GetLowByte(B_Voltage);
 627:../user/source/DLT645.c ****                     pucBuffer[17] = GetHighByte(B_Voltage);
 628:../user/source/DLT645.c ****                 }
 629:../user/source/DLT645.c ****             }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 14


 630:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[18], pucBuffer[19])) //BCDĞ£Ñé
 631:../user/source/DLT645.c ****             {
 632:../user/source/DLT645.c ****                 C_Voltage = Get_Voltage(pucBuffer[18], pucBuffer[19]);
 633:../user/source/DLT645.c ****                 if ((C_Voltage > Voltage_MAX) || (C_Voltage < Voltage_MIN)) //ĞŞ¸ÄCÏàµçÑ¹
 634:../user/source/DLT645.c ****                 {
 635:../user/source/DLT645.c ****                     C_Voltage = Voltage_Modifier_Method(C_Voltage);
 636:../user/source/DLT645.c ****                     pucBuffer[18] = GetLowByte(C_Voltage);
 637:../user/source/DLT645.c ****                     pucBuffer[19] = GetHighByte(C_Voltage);
 638:../user/source/DLT645.c ****                 }
 639:../user/source/DLT645.c ****             }
 640:../user/source/DLT645.c ****         }
 641:../user/source/DLT645.c ****         if (pucBuffer[11] == 0x34) //AÏàµçÑ¹Êı¾İ
 642:../user/source/DLT645.c ****         {
 643:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[14], pucBuffer[15])) //BCDĞ£Ñé
 644:../user/source/DLT645.c ****             {
 645:../user/source/DLT645.c ****                 A_Voltage = Get_Voltage(pucBuffer[14], pucBuffer[15]);
 646:../user/source/DLT645.c ****                 if ((A_Voltage > Voltage_MAX) || (A_Voltage < Voltage_MIN)) //ĞŞ¸ÄAÏàµçÑ¹
 647:../user/source/DLT645.c ****                 {
 648:../user/source/DLT645.c ****                     A_Voltage = Voltage_Modifier_Method(A_Voltage);
 649:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(A_Voltage);
 650:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(A_Voltage);
 651:../user/source/DLT645.c ****                 }
 652:../user/source/DLT645.c ****             }
 653:../user/source/DLT645.c ****         }
 654:../user/source/DLT645.c ****         if (pucBuffer[11] == 0x35) //BÏàµçÑ¹Êı¾İ
 655:../user/source/DLT645.c ****         {
 656:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[14], pucBuffer[15])) //BCDĞ£Ñé
 657:../user/source/DLT645.c ****             {
 658:../user/source/DLT645.c ****                 B_Voltage = Get_Voltage(pucBuffer[14], pucBuffer[15]);
 659:../user/source/DLT645.c ****                 if ((B_Voltage > Voltage_MAX) || (B_Voltage < Voltage_MIN)) //ĞŞ¸ÄBÏàµçÑ¹
 660:../user/source/DLT645.c ****                 {
 661:../user/source/DLT645.c ****                     B_Voltage = Voltage_Modifier_Method(B_Voltage);
 662:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(B_Voltage);
 663:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(B_Voltage);
 664:../user/source/DLT645.c ****                 }
 665:../user/source/DLT645.c ****             }
 666:../user/source/DLT645.c ****         }
 667:../user/source/DLT645.c ****         if (pucBuffer[11] == 0x36) //CÏàµçÑ¹Êı¾İ
 668:../user/source/DLT645.c ****         {
 669:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[14], pucBuffer[15])) //BCDĞ£Ñé
 670:../user/source/DLT645.c ****             {
 671:../user/source/DLT645.c ****                 C_Voltage = Get_Voltage(pucBuffer[14], pucBuffer[15]);
 672:../user/source/DLT645.c ****                 if ((C_Voltage > Voltage_MAX) || (C_Voltage < Voltage_MIN)) //ĞŞ¸ÄCÏàµçÑ¹
 673:../user/source/DLT645.c ****                 {
 674:../user/source/DLT645.c ****                     C_Voltage = Voltage_Modifier_Method(C_Voltage);
 675:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(C_Voltage);
 676:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(C_Voltage);
 677:../user/source/DLT645.c ****                 }
 678:../user/source/DLT645.c ****             }
 679:../user/source/DLT645.c ****         }
 680:../user/source/DLT645.c ****         //ÇóÈ¡Ğ£ÑéºÍ
 681:../user/source/DLT645.c ****         for (i = 0; i < uc645DataDomainLength + 10; i++)
 682:../user/source/DLT645.c ****         {
 683:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
 684:../user/source/DLT645.c ****         }
 685:../user/source/DLT645.c ****         pucBuffer[uc645DataDomainLength + 10] = ucCheckData;
 686:../user/source/DLT645.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 15


 687:../user/source/DLT645.c ****     return;
 688:../user/source/DLT645.c **** }
 689:../user/source/DLT645.c **** /********************************************************************
 690:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º»Ø¸´µçÑ¹Ö¡×éÖ¡º¯Êı
 691:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 692:../user/source/DLT645.c ****  * Êä    ³ö£º	true/false
 693:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 694:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 695:../user/source/DLT645.c ****  **********************************************************************/
 696:../user/source/DLT645.c **** bool blVoltage_Create(uint8_t *pucBuffer)
 697:../user/source/DLT645.c **** {
 698:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
 699:../user/source/DLT645.c ****     uint8_t i = 0;
 700:../user/source/DLT645.c ****     switch (pucBuffer[11])
 701:../user/source/DLT645.c ****     {
 702:../user/source/DLT645.c ****     case 0x32: //ÈıÏàµçÑ¹Êı¾İ¿é
 703:../user/source/DLT645.c ****     {
 704:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 705:../user/source/DLT645.c ****         pucBuffer[9] = 0x0A;
 706:../user/source/DLT645.c ****         //Ê¹ÓÃÉÏ´ÎĞŞ¸ÄµÄºÏ·¨µçÑ¹Öµ»ò1000 2017-10-25:
 707:../user/source/DLT645.c ****         A_Voltage = ((A_Voltage <= Voltage_MAX) && (A_Voltage >= Voltage_MIN) ? A_Voltage : WORK_VO
 708:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 709:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(A_Voltage);
 710:../user/source/DLT645.c ****         B_Voltage = ((B_Voltage <= Voltage_MAX) && (B_Voltage >= Voltage_MIN) ? B_Voltage : WORK_VO
 711:../user/source/DLT645.c ****         pucBuffer[16] = GetLowByte(B_Voltage);
 712:../user/source/DLT645.c ****         pucBuffer[17] = GetHighByte(B_Voltage);
 713:../user/source/DLT645.c ****         C_Voltage = ((C_Voltage <= Voltage_MAX) && (C_Voltage >= Voltage_MIN) ? C_Voltage : WORK_VO
 714:../user/source/DLT645.c ****         pucBuffer[18] = GetLowByte(C_Voltage);
 715:../user/source/DLT645.c ****         pucBuffer[19] = GetHighByte(C_Voltage);
 716:../user/source/DLT645.c ****         for (i = 0; i < 20; i++) //¹Ì¶¨Ö¡³¤22
 717:../user/source/DLT645.c ****         {
 718:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
 719:../user/source/DLT645.c ****         }
 720:../user/source/DLT645.c ****         pucBuffer[20] = ucCheckData;
 721:../user/source/DLT645.c ****         pucBuffer[21] = 0x16;
 722:../user/source/DLT645.c ****         return true;
 723:../user/source/DLT645.c ****     }
 724:../user/source/DLT645.c ****     case 0x34: //AÏàµçÑ¹Êı¾İ
 725:../user/source/DLT645.c ****     {
 726:../user/source/DLT645.c ****         A_Voltage = ((A_Voltage <= Voltage_MAX) && (A_Voltage >= Voltage_MIN) ? A_Voltage : WORK_VO
 727:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 728:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 729:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 730:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(A_Voltage);
 731:../user/source/DLT645.c ****         for (i = 0; i < 16; i++) //¹Ì¶¨Ö¡³¤18
 732:../user/source/DLT645.c ****         {
 733:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
 734:../user/source/DLT645.c ****         }
 735:../user/source/DLT645.c ****         pucBuffer[16] = ucCheckData;
 736:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 737:../user/source/DLT645.c ****         return true;
 738:../user/source/DLT645.c ****     }
 739:../user/source/DLT645.c ****     case 0x35: //BÏàµçÑ¹Êı¾İ
 740:../user/source/DLT645.c ****     {
 741:../user/source/DLT645.c ****         B_Voltage = ((B_Voltage <= Voltage_MAX) && (B_Voltage >= Voltage_MIN) ? B_Voltage : WORK_VO
 742:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 743:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 16


 744:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(B_Voltage);
 745:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(B_Voltage);
 746:../user/source/DLT645.c ****         for (i = 0; i < 16; i++) //¹Ì¶¨Ö¡³¤18
 747:../user/source/DLT645.c ****         {
 748:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
 749:../user/source/DLT645.c ****         }
 750:../user/source/DLT645.c ****         pucBuffer[16] = ucCheckData;
 751:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 752:../user/source/DLT645.c ****         return true;
 753:../user/source/DLT645.c ****     }
 754:../user/source/DLT645.c ****     case 0x36: //CÏàµçÑ¹Êı¾İ
 755:../user/source/DLT645.c ****     {
 756:../user/source/DLT645.c ****         C_Voltage = ((C_Voltage <= Voltage_MAX) && (C_Voltage >= Voltage_MIN) ? C_Voltage : WORK_VO
 757:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 758:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 759:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(C_Voltage);
 760:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(C_Voltage);
 761:../user/source/DLT645.c ****         for (i = 0; i < 16; i++)
 762:../user/source/DLT645.c ****         {
 763:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
 764:../user/source/DLT645.c ****         }
 765:../user/source/DLT645.c ****         pucBuffer[16] = ucCheckData;
 766:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 767:../user/source/DLT645.c ****         return true;
 768:../user/source/DLT645.c ****     }
 769:../user/source/DLT645.c ****     default:
 770:../user/source/DLT645.c ****         return false; //Èç¹ûÊÕµ½µÄµçÑ¹Ö¡²»ÊÇÕÙ²âA/B/CÏà£¬ÔòÊÕÖ¡´íÎó£¬¼´Ê¹µç±í»Ø¸´³¬Ê±£¬Ò²²»ÄÜÌæ´ú»Ø
 771:../user/source/DLT645.c ****     }
 772:../user/source/DLT645.c **** }
 773:../user/source/DLT645.c **** /********************************************************************
 774:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºBCDÂëĞ£Ñé
 775:../user/source/DLT645.c ****  * Êä    Èë£ºµçÑ¹Êı¾İµÄµÍ×Ö½ÚºÍ¸ß×Ö½Ú
 776:../user/source/DLT645.c ****  * Êä    ³ö£ºtrue»òfalse
 777:../user/source/DLT645.c ****  *           
 778:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 779:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 780:../user/source/DLT645.c ****  **********************************************************************/
 781:../user/source/DLT645.c **** bool BCD_Verity(uint8_t LowByte, uint8_t HighByte)
 782:../user/source/DLT645.c **** {
 112              		.loc 1 782 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117              	.LVL13:
 783:../user/source/DLT645.c ****     uint8_t hundreds; //µçÑ¹°ÙÎ»
 784:../user/source/DLT645.c ****     uint8_t tens;     //µçÑ¹Ê®Î»
 785:../user/source/DLT645.c ****     uint8_t ones;     //µçÑ¹¸öÎ»
 786:../user/source/DLT645.c ****     uint8_t decimals; //µçÑ¹Ğ¡ÊıÎ»
 787:../user/source/DLT645.c ****     hundreds = (HighByte & 0xF0) >> 4;
 118              		.loc 1 787 0
 119 0000 0B09     		lsrs	r3, r1, #4
 120              	.LVL14:
 788:../user/source/DLT645.c ****     tens = HighByte & 0x0F;
 121              		.loc 1 788 0
 122 0002 01F00F01 		and	r1, r1, #15
 123              	.LVL15:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 17


 789:../user/source/DLT645.c ****     ones = (LowByte & 0xF0) >> 4;
 124              		.loc 1 789 0
 125 0006 0209     		lsrs	r2, r0, #4
 126              	.LVL16:
 790:../user/source/DLT645.c ****     decimals = LowByte & 0x0F;
 127              		.loc 1 790 0
 128 0008 00F00F00 		and	r0, r0, #15
 129              	.LVL17:
 791:../user/source/DLT645.c ****     if ((hundreds >= 0x03) && (hundreds <= 0x0C) && (tens >= 0x03) && (tens <= 0x0C) && (ones >= 0x
 130              		.loc 1 791 0
 131 000c 033B     		subs	r3, r3, #3
 132              	.LVL18:
 133 000e DBB2     		uxtb	r3, r3
 134              	.LVL19:
 135 0010 092B     		cmp	r3, #9
 136 0012 0DD8     		bhi	.L12
 137              		.loc 1 791 0 is_stmt 0 discriminator 1
 138 0014 0229     		cmp	r1, #2
 139 0016 0DD9     		bls	.L13
 140              		.loc 1 791 0 discriminator 2
 141 0018 0C29     		cmp	r1, #12
 142 001a 0DD8     		bhi	.L14
 143              		.loc 1 791 0 discriminator 3
 144 001c 022A     		cmp	r2, #2
 145 001e 0DD9     		bls	.L15
 146              		.loc 1 791 0 discriminator 4
 147 0020 0C2A     		cmp	r2, #12
 148 0022 0DD8     		bhi	.L16
 149              		.loc 1 791 0 discriminator 5
 150 0024 0228     		cmp	r0, #2
 151 0026 0DD9     		bls	.L17
 152              		.loc 1 791 0 discriminator 6
 153 0028 0C28     		cmp	r0, #12
 154 002a 0DD9     		bls	.L18
 792:../user/source/DLT645.c ****     {
 793:../user/source/DLT645.c ****         return true;
 794:../user/source/DLT645.c ****     }
 795:../user/source/DLT645.c ****     else
 796:../user/source/DLT645.c ****     {
 797:../user/source/DLT645.c ****         return false;
 155              		.loc 1 797 0 is_stmt 1
 156 002c 0020     		movs	r0, #0
 157              	.LVL20:
 158 002e 7047     		bx	lr
 159              	.LVL21:
 160              	.L12:
 161 0030 0020     		movs	r0, #0
 162              	.LVL22:
 163 0032 7047     		bx	lr
 164              	.LVL23:
 165              	.L13:
 166 0034 0020     		movs	r0, #0
 167              	.LVL24:
 168 0036 7047     		bx	lr
 169              	.LVL25:
 170              	.L14:
 171 0038 0020     		movs	r0, #0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 18


 172              	.LVL26:
 173 003a 7047     		bx	lr
 174              	.LVL27:
 175              	.L15:
 176 003c 0020     		movs	r0, #0
 177              	.LVL28:
 178 003e 7047     		bx	lr
 179              	.LVL29:
 180              	.L16:
 181 0040 0020     		movs	r0, #0
 182              	.LVL30:
 183 0042 7047     		bx	lr
 184              	.LVL31:
 185              	.L17:
 186 0044 0020     		movs	r0, #0
 187              	.LVL32:
 188 0046 7047     		bx	lr
 189              	.LVL33:
 190              	.L18:
 793:../user/source/DLT645.c ****     }
 191              		.loc 1 793 0
 192 0048 0120     		movs	r0, #1
 193              	.LVL34:
 798:../user/source/DLT645.c ****     }
 799:../user/source/DLT645.c **** }
 194              		.loc 1 799 0
 195 004a 7047     		bx	lr
 196              		.cfi_endproc
 197              	.LFE122:
 199              		.section	.text.Get_Voltage,"ax",%progbits
 200              		.align	2
 201              		.thumb
 202              		.thumb_func
 204              	Get_Voltage:
 205              	.LFB123:
 800:../user/source/DLT645.c **** 
 801:../user/source/DLT645.c **** /********************************************************************
 802:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º´ÓÊı¾İÖ¡ÖĞ¶ÁÈ¡µçÑ¹Öµ
 803:../user/source/DLT645.c ****  * Êä    Èë£ºµçÑ¹ÖµµÍ×Ö½Ú¡¢¸ß×Ö½Ú
 804:../user/source/DLT645.c ****  * Êä    ³ö£ºÊ®½øÖÆµÄµçÑ¹Öµ
 805:../user/source/DLT645.c ****  *           
 806:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 807:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 808:../user/source/DLT645.c ****  **********************************************************************/
 809:../user/source/DLT645.c **** int Get_Voltage(uint8_t LowByte, uint8_t HighByte)
 810:../user/source/DLT645.c **** {
 206              		.loc 1 810 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              		@ link register save eliminated.
 211              	.LVL35:
 212 0000 10B4     		push	{r4}
 213              	.LCFI2:
 214              		.cfi_def_cfa_offset 4
 215              		.cfi_offset 4, -4
 216              	.LVL36:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 19


 811:../user/source/DLT645.c ****     int Voltage = 0;
 812:../user/source/DLT645.c ****     uint8_t hundreds; //µçÑ¹°ÙÎ»
 813:../user/source/DLT645.c ****     uint8_t tens;     //µçÑ¹Ê®Î»
 814:../user/source/DLT645.c ****     uint8_t ones;     //µçÑ¹¸öÎ»
 815:../user/source/DLT645.c ****     uint8_t decimals; //µçÑ¹Ğ¡ÊıÎ»
 816:../user/source/DLT645.c ****     hundreds = ((HighByte - 0x33) & 0xF0) >> 4;
 217              		.loc 1 816 0
 218 0002 3339     		subs	r1, r1, #51
 219              	.LVL37:
 220 0004 C1F30314 		ubfx	r4, r1, #4, #4
 221              	.LVL38:
 817:../user/source/DLT645.c ****     tens = (HighByte - 0x33) & 0x0F;
 222              		.loc 1 817 0
 223 0008 01F00F01 		and	r1, r1, #15
 224              	.LVL39:
 818:../user/source/DLT645.c ****     ones = ((LowByte - 0x33) & 0xF0) >> 4;
 225              		.loc 1 818 0
 226 000c 3338     		subs	r0, r0, #51
 227              	.LVL40:
 228 000e C0F30313 		ubfx	r3, r0, #4, #4
 229              	.LVL41:
 819:../user/source/DLT645.c ****     decimals = (LowByte - 0x33) & 0x0F;
 230              		.loc 1 819 0
 231 0012 00F00F00 		and	r0, r0, #15
 232              	.LVL42:
 820:../user/source/DLT645.c ****     Voltage = hundreds * 1000 + tens * 100 + ones * 10 + decimals; //Îª±íÊ¾Ğ¡ÊıÎ»£¬½«ÊıÕûÌåÔö´ó10±¶
 233              		.loc 1 820 0
 234 0016 6422     		movs	r2, #100
 235 0018 02FB01F1 		mul	r1, r2, r1
 236              	.LVL43:
 237 001c 4FF47A72 		mov	r2, #1000
 238 0020 02FB0414 		mla	r4, r2, r4, r1
 239              	.LVL44:
 240 0024 03EB8303 		add	r3, r3, r3, lsl #2
 241              	.LVL45:
 242 0028 5A00     		lsls	r2, r3, #1
 243 002a 2244     		add	r2, r2, r4
 244              	.LVL46:
 821:../user/source/DLT645.c ****     return Voltage;
 822:../user/source/DLT645.c **** }
 245              		.loc 1 822 0
 246 002c 1044     		add	r0, r0, r2
 247              	.LVL47:
 248 002e 5DF8044B 		ldr	r4, [sp], #4
 249              	.LCFI3:
 250              		.cfi_restore 4
 251              		.cfi_def_cfa_offset 0
 252 0032 7047     		bx	lr
 253              		.cfi_endproc
 254              	.LFE123:
 256              		.section	.text.vGet_Current,"ax",%progbits
 257              		.align	2
 258              		.thumb
 259              		.thumb_func
 261              	vGet_Current:
 262              	.LFB124:
 823:../user/source/DLT645.c **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 20


 824:../user/source/DLT645.c **** /********************************************************************
 825:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º´ÓÊı¾İÖ¡ÖĞ¶ÁÈ¡µçÁ÷Öµ
 826:../user/source/DLT645.c ****  * Êä    Èë£ºµçÁ÷ÖµµÍ×Ö½Ú¡¢ÖĞ×Ö½Ú¡¢¸ß×Ö½Ú
 827:../user/source/DLT645.c ****  * Êä    ³ö£ºÊ®½øÖÆµÄµçÁ÷Öµ
 828:../user/source/DLT645.c ****  * Òª    Çó£º
 829:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 830:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 831:../user/source/DLT645.c ****  **********************************************************************/
 832:../user/source/DLT645.c **** void vGet_Current(uint8_t LowByte, uint8_t MidByte, uint8_t HighByte, CURRENT *pcurrent)
 833:../user/source/DLT645.c **** {
 263              		.loc 1 833 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              	.LVL48:
 268 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 269              	.LCFI4:
 270              		.cfi_def_cfa_offset 20
 271              		.cfi_offset 4, -20
 272              		.cfi_offset 5, -16
 273              		.cfi_offset 6, -12
 274              		.cfi_offset 7, -8
 275              		.cfi_offset 14, -4
 834:../user/source/DLT645.c ****     uint8_t million;
 835:../user/source/DLT645.c ****     uint8_t tenkillo;
 836:../user/source/DLT645.c ****     uint8_t killo;
 837:../user/source/DLT645.c ****     uint8_t hundreds;
 838:../user/source/DLT645.c ****     uint8_t tens;
 839:../user/source/DLT645.c ****     uint8_t ones;
 840:../user/source/DLT645.c ****     million = ((HighByte - 0x33) & 0x70) >> 4; //È¡bit7~bit5£¬×î¸ßÎ»ÊÇ·ûºÅÎ»,ºöÂÔ
 276              		.loc 1 840 0
 277 0002 333A     		subs	r2, r2, #51
 278              	.LVL49:
 279 0004 C2F30217 		ubfx	r7, r2, #4, #3
 280              	.LVL50:
 841:../user/source/DLT645.c ****     tenkillo = (HighByte - 0x33) & 0x0F;
 281              		.loc 1 841 0
 282 0008 02F00F04 		and	r4, r2, #15
 283              	.LVL51:
 842:../user/source/DLT645.c ****     killo = ((MidByte - 0x33) & 0xF0) >> 4;
 284              		.loc 1 842 0
 285 000c 3339     		subs	r1, r1, #51
 286              	.LVL52:
 287 000e C1F30316 		ubfx	r6, r1, #4, #4
 288              	.LVL53:
 843:../user/source/DLT645.c ****     hundreds = (MidByte - 0x33) & 0x0F;
 289              		.loc 1 843 0
 290 0012 01F00F0C 		and	ip, r1, #15
 291              	.LVL54:
 844:../user/source/DLT645.c ****     tens = ((LowByte - 0x33) & 0xF0) >> 4;
 292              		.loc 1 844 0
 293 0016 3338     		subs	r0, r0, #51
 294              	.LVL55:
 295 0018 C0F30315 		ubfx	r5, r0, #4, #4
 296              	.LVL56:
 845:../user/source/DLT645.c ****     ones = (LowByte - 0x33) & 0x0F;
 297              		.loc 1 845 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 21


 298 001c 00F00F00 		and	r0, r0, #15
 299              	.LVL57:
 846:../user/source/DLT645.c ****     pcurrent->value = million * 100000 + tenkillo * 10000 + killo * 1000 + hundreds * 100 + tens * 
 300              		.loc 1 846 0
 301 0020 42F2107E 		movw	lr, #10000
 302 0024 0EFB04FE 		mul	lr, lr, r4
 303 0028 0B49     		ldr	r1, .L23
 304 002a 01FB07E7 		mla	r7, r1, r7, lr
 305              	.LVL58:
 306 002e 4FF47A71 		mov	r1, #1000
 307 0032 01FB0676 		mla	r6, r1, r6, r7
 308              	.LVL59:
 309 0036 6424     		movs	r4, #100
 310              	.LVL60:
 311 0038 04FB0C61 		mla	r1, r4, ip, r6
 312 003c 05EB8505 		add	r5, r5, r5, lsl #2
 313              	.LVL61:
 314 0040 6C00     		lsls	r4, r5, #1
 315 0042 0C44     		add	r4, r4, r1
 316 0044 0444     		add	r4, r4, r0
 317 0046 1C60     		str	r4, [r3]
 847:../user/source/DLT645.c ****     pcurrent->count++;
 318              		.loc 1 847 0
 319 0048 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 320 004a 0131     		adds	r1, r1, #1
 321 004c 1971     		strb	r1, [r3, #4]
 848:../user/source/DLT645.c ****     pcurrent->isminus = ((((HighByte - 0x33) & 0x80) != 0) ? true : false);
 322              		.loc 1 848 0
 323 004e C2F3C012 		ubfx	r2, r2, #7, #1
 324              	.LVL62:
 325 0052 5A71     		strb	r2, [r3, #5]
 326 0054 F0BD     		pop	{r4, r5, r6, r7, pc}
 327              	.L24:
 328 0056 00BF     		.align	2
 329              	.L23:
 330 0058 A0860100 		.word	100000
 331              		.cfi_endproc
 332              	.LFE124:
 334              		.section	.text.vPut_Current,"ax",%progbits
 335              		.align	2
 336              		.thumb
 337              		.thumb_func
 339              	vPut_Current:
 340              	.LFB125:
 849:../user/source/DLT645.c **** }
 850:../user/source/DLT645.c **** /********************************************************************
 851:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½«µçÁ÷ÖµĞ´ÈëÖ¡×Ö½Ú
 852:../user/source/DLT645.c ****  * Êä    Èë£ºµçÁ÷ÖµµÍ×Ö½Ú¡¢ÖĞ×Ö½Ú¡¢¸ß×Ö½Ú£¬µçÁ÷Öµ
 853:../user/source/DLT645.c ****  * Êä    ³ö£º
 854:../user/source/DLT645.c ****  * Òª    Çó£ºµçÁ÷Öµ²»Îª¸ºÖµ
 855:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 856:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 857:../user/source/DLT645.c ****  **********************************************************************/
 858:../user/source/DLT645.c **** void vPut_Current(CURRENT pcurrent, uint8_t *pLowByte, uint8_t *pMidByte, uint8_t *pHighByte)
 859:../user/source/DLT645.c **** {
 341              		.loc 1 859 0
 342              		.cfi_startproc
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 22


 343              		@ args = 4, pretend = 0, frame = 8
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 346              	.LVL63:
 347 0000 F0B4     		push	{r4, r5, r6, r7}
 348              	.LCFI5:
 349              		.cfi_def_cfa_offset 16
 350              		.cfi_offset 4, -16
 351              		.cfi_offset 5, -12
 352              		.cfi_offset 6, -8
 353              		.cfi_offset 7, -4
 354 0002 82B0     		sub	sp, sp, #8
 355              	.LCFI6:
 356              		.cfi_def_cfa_offset 24
 357 0004 02AC     		add	r4, sp, #8
 358 0006 04E90300 		stmdb	r4, {r0, r1}
 359 000a 0698     		ldr	r0, [sp, #24]
 860:../user/source/DLT645.c ****     *pLowByte = 0x33 + ((uint8_t)(((pcurrent.value / 10) % 10) << 4) | (uint8_t)(pcurrent.value % 1
 360              		.loc 1 860 0
 361 000c 009E     		ldr	r6, [sp]
 362 000e 2849     		ldr	r1, .L28
 363 0010 A1FB0647 		umull	r4, r7, r1, r6
 364 0014 FF08     		lsrs	r7, r7, #3
 365 0016 A1FB0754 		umull	r5, r4, r1, r7
 366 001a E408     		lsrs	r4, r4, #3
 367 001c 04EB8404 		add	r4, r4, r4, lsl #2
 368 0020 6500     		lsls	r5, r4, #1
 369 0022 7C1B     		subs	r4, r7, r5
 370 0024 2401     		lsls	r4, r4, #4
 371 0026 E4B2     		uxtb	r4, r4
 372 0028 07EB8707 		add	r7, r7, r7, lsl #2
 373 002c 7D00     		lsls	r5, r7, #1
 374 002e 751B     		subs	r5, r6, r5
 375 0030 EDB2     		uxtb	r5, r5
 376 0032 2C43     		orrs	r4, r4, r5
 377 0034 3334     		adds	r4, r4, #51
 378 0036 1470     		strb	r4, [r2]
 861:../user/source/DLT645.c ****     *pMidByte = 0x33 + ((uint8_t)(((pcurrent.value / 1000) % 10) << 4) | (uint8_t)((pcurrent.value 
 379              		.loc 1 861 0
 380 0038 1E4C     		ldr	r4, .L28+4
 381 003a A4FB0624 		umull	r2, r4, r4, r6
 382              	.LVL64:
 383 003e A409     		lsrs	r4, r4, #6
 384 0040 A1FB0452 		umull	r5, r2, r1, r4
 385 0044 D208     		lsrs	r2, r2, #3
 386 0046 02EB8202 		add	r2, r2, r2, lsl #2
 387 004a 5500     		lsls	r5, r2, #1
 388 004c 621B     		subs	r2, r4, r5
 389 004e 1201     		lsls	r2, r2, #4
 390 0050 D5B2     		uxtb	r5, r2
 391 0052 194F     		ldr	r7, .L28+8
 392 0054 A7FB0627 		umull	r2, r7, r7, r6
 393 0058 7F09     		lsrs	r7, r7, #5
 394 005a A1FB0724 		umull	r2, r4, r1, r7
 395 005e E208     		lsrs	r2, r4, #3
 396 0060 02EB8202 		add	r2, r2, r2, lsl #2
 397 0064 5400     		lsls	r4, r2, #1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 23


 398 0066 3A1B     		subs	r2, r7, r4
 399 0068 D2B2     		uxtb	r2, r2
 400 006a 2A43     		orrs	r2, r2, r5
 401 006c 3332     		adds	r2, r2, #51
 402 006e 1A70     		strb	r2, [r3]
 862:../user/source/DLT645.c ****     *pHighByte = 0x33 + ((uint8_t)((pcurrent.value / 100000) << 4) | (uint8_t)((pcurrent.value / 10
 403              		.loc 1 862 0
 404 0070 7309     		lsrs	r3, r6, #5
 405              	.LVL65:
 406 0072 124A     		ldr	r2, .L28+12
 407 0074 A2FB0332 		umull	r3, r2, r2, r3
 408 0078 D209     		lsrs	r2, r2, #7
 409 007a 1201     		lsls	r2, r2, #4
 410 007c D2B2     		uxtb	r2, r2
 411 007e 104B     		ldr	r3, .L28+16
 412 0080 A3FB0636 		umull	r3, r6, r3, r6
 413 0084 760B     		lsrs	r6, r6, #13
 414 0086 A1FB0613 		umull	r1, r3, r1, r6
 415 008a D908     		lsrs	r1, r3, #3
 416 008c 01EB8101 		add	r1, r1, r1, lsl #2
 417 0090 4B00     		lsls	r3, r1, #1
 418 0092 F11A     		subs	r1, r6, r3
 419 0094 C9B2     		uxtb	r1, r1
 420 0096 1143     		orrs	r1, r1, r2
 421 0098 3331     		adds	r1, r1, #51
 422 009a C9B2     		uxtb	r1, r1
 423 009c 0170     		strb	r1, [r0]
 863:../user/source/DLT645.c ****     if (pcurrent.isminus == true)
 424              		.loc 1 863 0
 425 009e 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 426 00a2 13B1     		cbz	r3, .L25
 864:../user/source/DLT645.c ****     {
 865:../user/source/DLT645.c ****         *pHighByte = *pHighByte | 0x80;
 427              		.loc 1 865 0
 428 00a4 61F07F01 		orn	r1, r1, #127
 429 00a8 0170     		strb	r1, [r0]
 430              	.L25:
 866:../user/source/DLT645.c ****     }
 867:../user/source/DLT645.c **** }
 431              		.loc 1 867 0
 432 00aa 02B0     		add	sp, sp, #8
 433              	.LCFI7:
 434              		.cfi_def_cfa_offset 16
 435              		@ sp needed
 436 00ac F0BC     		pop	{r4, r5, r6, r7}
 437              	.LCFI8:
 438              		.cfi_restore 7
 439              		.cfi_restore 6
 440              		.cfi_restore 5
 441              		.cfi_restore 4
 442              		.cfi_def_cfa_offset 0
 443              	.LVL66:
 444 00ae 7047     		bx	lr
 445              	.L29:
 446              		.align	2
 447              	.L28:
 448 00b0 CDCCCCCC 		.word	-858993459
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 24


 449 00b4 D34D6210 		.word	274877907
 450 00b8 1F85EB51 		.word	1374389535
 451 00bc C55A7C0A 		.word	175921861
 452 00c0 5917B7D1 		.word	-776530087
 453              		.cfi_endproc
 454              	.LFE125:
 456              		.section	.text.blCurrentSingle_Modify_Method,"ax",%progbits
 457              		.align	2
 458              		.thumb
 459              		.thumb_func
 461              	blCurrentSingle_Modify_Method:
 462              	.LFB129:
 868:../user/source/DLT645.c **** 
 869:../user/source/DLT645.c **** /********************************************************************
 870:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ĞŞ¸Ä³õÊ¼»¯£º
 871:../user/source/DLT645.c ****  * Êä    Èë£º	none
 872:../user/source/DLT645.c ****  * Êä    ³ö£º	none
 873:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 874:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.10.25
 875:../user/source/DLT645.c ****  **********************************************************************/
 876:../user/source/DLT645.c **** void Voltage_Change_Init(void)
 877:../user/source/DLT645.c **** {
 878:../user/source/DLT645.c ****     uint8_t Vmax1;
 879:../user/source/DLT645.c ****     uint8_t Vmax2;
 880:../user/source/DLT645.c ****     uint8_t Vmin1;
 881:../user/source/DLT645.c ****     uint8_t Vmin2;
 882:../user/source/DLT645.c ****     /*µçÑ¹ĞŞ¸ÄÊ¹ÄÜÎ»³õÊ¼»¯*/
 883:../user/source/DLT645.c ****     Voltage_Change_State = EEProm_Read(FLASH_VChangeState_Addr); //´ÓflashÖĞ¶ÁÈ¡µçÑ¹ĞŞ¸ÄÊ¹ÄÜ×Ö½Ú
 884:../user/source/DLT645.c ****     /*µçÑ¹ĞŞ¸ÄÉÏÏÂÏŞ³õÊ¼»¯*/
 885:../user/source/DLT645.c ****     Vmax1 = EEProm_Read(FLASH_VMAX1_Addr);
 886:../user/source/DLT645.c ****     Vmax2 = EEProm_Read(FLASH_VMAX2_Addr);
 887:../user/source/DLT645.c ****     Vmin1 = EEProm_Read(FLASH_VMIN1_Addr);
 888:../user/source/DLT645.c ****     Vmin2 = EEProm_Read(FLASH_VMIN2_Addr);
 889:../user/source/DLT645.c **** 
 890:../user/source/DLT645.c ****     if ((Vmax1 == 0xff) && (Vmax2 == 0xff) && (Vmin1 == 0xff) && (Vmin2 == 0xff))
 891:../user/source/DLT645.c ****     {
 892:../user/source/DLT645.c ****         Voltage_MAX = Voltage_MAX_Default; //ÉèÖÃµçÑ¹ºÏ¸ñÉÏÏÂÏŞÄ¬ÈÏÖµ
 893:../user/source/DLT645.c ****         Voltage_MIN = Voltage_MIN_Default;
 894:../user/source/DLT645.c ****     }
 895:../user/source/DLT645.c ****     else
 896:../user/source/DLT645.c ****     {
 897:../user/source/DLT645.c ****         Voltage_MAX = Get_Voltage(Vmax1, Vmax2); //flashÖĞ´æ´¢µÄÊÇ654¶ÔÓ¦Ö¡×Ö½Ú£¬Á½¸ö×Ö½Ú
 898:../user/source/DLT645.c ****         Voltage_MIN = Get_Voltage(Vmin1, Vmin2);
 899:../user/source/DLT645.c ****     }
 900:../user/source/DLT645.c **** }
 901:../user/source/DLT645.c **** 
 902:../user/source/DLT645.c **** /*****************************************************
 903:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ºÏ¸ñÂÊµ÷Õû²ßÂÔ
 904:../user/source/DLT645.c ****  * Êä    Èë£º
 905:../user/source/DLT645.c ****  * Êä    ³ö£º
 906:../user/source/DLT645.c ****  * Ëµ    Ã÷£ºµçÑ¹Æ«Ğ¡Ğèµ÷½ÚÊ±£¬ÒÔMINÎª»ù×¼£¬½«Voltage¾µÏñ£¬Èô¾µÏñµã³¬¹ıMAX£¬ÒÀ´Î¼õĞ¡ÓĞĞ§Çø¼äÖµ£¨MAX
 907:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 908:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 909:../user/source/DLT645.c ****  *******************************************************/
 910:../user/source/DLT645.c **** int Voltage_Modifier_Method(int Voltage)
 911:../user/source/DLT645.c **** {
 912:../user/source/DLT645.c ****     int n = 0;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 25


 913:../user/source/DLT645.c ****     int m = 0;
 914:../user/source/DLT645.c ****     int i = 0;
 915:../user/source/DLT645.c ****     n = (Voltage_MIN - Voltage_MIN_MIN) / (Voltage_MAX - Voltage_MIN) + 1; //(198-120)/(235-198)+1»
 916:../user/source/DLT645.c ****     m = (Voltage_MAX_MAX - Voltage_MAX) / (Voltage_MAX - Voltage_MIN) + 1; //(260-235)/(235-198)+1»
 917:../user/source/DLT645.c ****     if ((Voltage > Voltage_MAX) && (Voltage <= Voltage_MAX_MAX))
 918:../user/source/DLT645.c ****     {
 919:../user/source/DLT645.c ****         if (Voltage <= (Voltage_MAX + (Voltage_MAX - Voltage_MIN)))
 920:../user/source/DLT645.c ****         {
 921:../user/source/DLT645.c ****             Voltage = Voltage - (Voltage - Voltage_MAX) * 2;
 922:../user/source/DLT645.c ****             return Voltage;
 923:../user/source/DLT645.c ****         }
 924:../user/source/DLT645.c ****         else
 925:../user/source/DLT645.c ****         {
 926:../user/source/DLT645.c ****             for (i = 1; i < m; i++)
 927:../user/source/DLT645.c ****             {
 928:../user/source/DLT645.c ****                 if (Voltage <= (Voltage_MAX + (Voltage_MAX - Voltage_MIN) * (i + 1)))
 929:../user/source/DLT645.c ****                 {
 930:../user/source/DLT645.c ****                     Voltage = Voltage - (Voltage_MAX - Voltage_MIN) * (i + 1);
 931:../user/source/DLT645.c ****                     return Voltage;
 932:../user/source/DLT645.c ****                 }
 933:../user/source/DLT645.c ****             }
 934:../user/source/DLT645.c ****         }
 935:../user/source/DLT645.c ****     }
 936:../user/source/DLT645.c ****     if ((Voltage < Voltage_MIN) && (Voltage >= Voltage_MIN_MIN))
 937:../user/source/DLT645.c ****     {
 938:../user/source/DLT645.c ****         if (Voltage >= (Voltage_MIN - (Voltage_MAX - Voltage_MIN)))
 939:../user/source/DLT645.c ****         {
 940:../user/source/DLT645.c ****             Voltage = Voltage + (Voltage_MIN - Voltage) * 2;
 941:../user/source/DLT645.c ****             return Voltage;
 942:../user/source/DLT645.c ****         }
 943:../user/source/DLT645.c ****         else
 944:../user/source/DLT645.c ****         {
 945:../user/source/DLT645.c ****             for (i = 1; i < n; i++)
 946:../user/source/DLT645.c ****             {
 947:../user/source/DLT645.c ****                 if (Voltage >= (Voltage_MIN - (Voltage_MAX - Voltage_MIN) * (i + 1)))
 948:../user/source/DLT645.c ****                 {
 949:../user/source/DLT645.c ****                     Voltage = Voltage + (Voltage_MAX - Voltage_MIN) * (i + 1);
 950:../user/source/DLT645.c ****                     return Voltage;
 951:../user/source/DLT645.c ****                 }
 952:../user/source/DLT645.c ****             }
 953:../user/source/DLT645.c ****         }
 954:../user/source/DLT645.c ****     }
 955:../user/source/DLT645.c ****     return Voltage;
 956:../user/source/DLT645.c **** }
 957:../user/source/DLT645.c **** /*****************************************************
 958:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºĞŞ¸Äµç±í×´Ì¬×ÖÖĞµÄµçÁ÷·´Ïò¡¢µçÁ÷¶ÌÂ·¡¢µçÁ÷¶ÏÂ·×´Ì¬×Ö
 959:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 960:../user/source/DLT645.c ****  * Êä    ³ö£º
 961:../user/source/DLT645.c ****  *           
 962:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 963:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.5.23
 964:../user/source/DLT645.c ****  *******************************************************/
 965:../user/source/DLT645.c **** void Estatus_Modify_CurrentEvent(uint8_t *pucBuffer)
 966:../user/source/DLT645.c **** {
 967:../user/source/DLT645.c ****     uint16_t estatus = 0x0000;
 968:../user/source/DLT645.c ****     int i = 0;
 969:../user/source/DLT645.c ****     uint8_t ucCheckData = 0x0;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 26


 970:../user/source/DLT645.c ****     switch (pucBuffer[10])
 971:../user/source/DLT645.c ****     {
 972:../user/source/DLT645.c ****     case 0x37: //×´Ì¬×Ö4,AÏà×´Ì¬×Ö
 973:../user/source/DLT645.c ****     {
 974:../user/source/DLT645.c ****         //BIT4,BIT6,bit8 ÖÃ0->11111110 10101111:
 975:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[14], pucBuffer[15]);
 976:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
 977:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
 978:../user/source/DLT645.c ****         break;
 979:../user/source/DLT645.c ****     }
 980:../user/source/DLT645.c ****     case 0x38: //×´Ì¬×Ö5,BÏà×´Ì¬×Ö
 981:../user/source/DLT645.c ****     {
 982:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[14], pucBuffer[15]); //[14][15]×ª»»Îª¶ş½øÖÆ
 983:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 984:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 985:../user/source/DLT645.c ****         break;
 986:../user/source/DLT645.c ****     }
 987:../user/source/DLT645.c ****     case 0x39: //×´Ì¬×Ö6,CÏà×´Ì¬×Ö
 988:../user/source/DLT645.c ****     {
 989:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[14], pucBuffer[15]); //[14][15]×ª»»Îª¶ş½øÖÆ
 990:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 991:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 992:../user/source/DLT645.c ****         break;
 993:../user/source/DLT645.c ****     }
 994:../user/source/DLT645.c ****     case 0x3A: //×´Ì¬×Ö7£¬ºÏÏà×´Ì¬×Ö
 995:../user/source/DLT645.c ****     {
 996:../user/source/DLT645.c ****         estatus = 0xFFF7 & Get_Estatus(pucBuffer[14], pucBuffer[15]); //BIT3=0   11111111 11110111
 997:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 998:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 999:../user/source/DLT645.c ****         break;
1000:../user/source/DLT645.c ****     }
1001:../user/source/DLT645.c ****     case 0x32: //×´Ì¬×ÖÊı¾İ¿é
1002:../user/source/DLT645.c ****     {
1003:../user/source/DLT645.c ****         //1:[14][15] 2:[16][17] 3:[18][19] 4:[20][21] 5:[22][23] 6:[24][25] 7:[26][27]
1004:../user/source/DLT645.c ****         //×´Ì¬×Ö4,AÏà×´Ì¬×Ö
1005:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[20], pucBuffer[21]); //BIT4,BIT6,bit8 =0->11111110
1006:../user/source/DLT645.c ****         pucBuffer[20] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
1007:../user/source/DLT645.c ****         pucBuffer[21] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
1008:../user/source/DLT645.c ****         //×´Ì¬×Ö5,BÏà×´Ì¬×Ö
1009:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[22], pucBuffer[23]);
1010:../user/source/DLT645.c ****         pucBuffer[22] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
1011:../user/source/DLT645.c ****         pucBuffer[23] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
1012:../user/source/DLT645.c ****         //×´Ì¬×Ö6,CÏà×´Ì¬×Ö
1013:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[24], pucBuffer[25]);
1014:../user/source/DLT645.c ****         pucBuffer[24] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
1015:../user/source/DLT645.c ****         pucBuffer[25] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
1016:../user/source/DLT645.c ****         //×´Ì¬×Ö7£¬ºÏÏà×´Ì¬×Ö
1017:../user/source/DLT645.c ****         estatus = 0xFFF7 & Get_Estatus(pucBuffer[26], pucBuffer[27]);
1018:../user/source/DLT645.c ****         pucBuffer[26] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
1019:../user/source/DLT645.c ****         pucBuffer[27] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
1020:../user/source/DLT645.c ****         break;
1021:../user/source/DLT645.c ****     }
1022:../user/source/DLT645.c ****     default:
1023:../user/source/DLT645.c ****         break;
1024:../user/source/DLT645.c ****     }
1025:../user/source/DLT645.c ****     for (i = 0; i < uc645DataDomainLength + 10; i++)
1026:../user/source/DLT645.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 27


1027:../user/source/DLT645.c ****         ucCheckData += pucBuffer[i];
1028:../user/source/DLT645.c ****     }
1029:../user/source/DLT645.c ****     pucBuffer[uc645DataDomainLength + 10] = ucCheckData;
1030:../user/source/DLT645.c **** }
1031:../user/source/DLT645.c **** 
1032:../user/source/DLT645.c **** /*****************************************************
1033:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµ¥ÏàµçÁ÷ĞŞ¸Ä·½·¨
1034:../user/source/DLT645.c ****  * Êä    Èë£ºÁ½Ïà²Î¿¼µçÁ÷£¬Ò»ÏàĞèĞŞ¸ÄµçÁ÷
1035:../user/source/DLT645.c ****  * Êä    ³ö£ºµçÁ÷²»ĞèÒªĞŞ¸Ä£¬Êä³öfalse
1036:../user/source/DLT645.c ****  *           µçÁ÷ÒÑĞŞ¸Ä£¬Êä³ötrue
1037:../user/source/DLT645.c ****  * Ëµ	  Ã÷£º
1038:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1039:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.12.13
1040:../user/source/DLT645.c ****  *******************************************************/
1041:../user/source/DLT645.c **** bool blCurrentSingle_Modify_Method(CURRENT *ref1, CURRENT *ref2, CURRENT *result) //×¢ÊÍÖĞ¸ù¾İBÏàºÍ
1042:../user/source/DLT645.c **** {
 463              		.loc 1 1042 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 468              	.LVL67:
 469 0000 30B4     		push	{r4, r5}
 470              	.LCFI9:
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 4, -8
 473              		.cfi_offset 5, -4
1043:../user/source/DLT645.c ****     //if Acurrent->count>Bcurrent->count && Acurrent->count>Ccurrent->count,ÏÈA£¬²»ĞŞ¸Ä
1044:../user/source/DLT645.c ****     //if Bcurrent->count=Acurrent->count && Acurrent->count>Ccurrent->count,ÏÈB£¬ºóA£¬¸ù¾İBĞŞ¸ÄA
1045:../user/source/DLT645.c ****     //if Ccurrent->count=Acurrent->count && Acurrent->count>Bcurrent->count,ÏÈC£¬ºóA£¬¸ù¾İCĞŞ¸ÄA
1046:../user/source/DLT645.c ****     //if Bcurrent->count=Ccurrent->count && Acurrent->count<Ccurrent->count,ÏÈBC£¬ºóA£¬¸ù¾İBCĞŞ¸ÄA
1047:../user/source/DLT645.c ****     if ((result->count > ref1->count) &&
 474              		.loc 1 1047 0
 475 0002 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 476 0004 0479     		ldrb	r4, [r0, #4]	@ zero_extendqisi2
 477 0006 A342     		cmp	r3, r4
 478 0008 03D9     		bls	.L31
1048:../user/source/DLT645.c ****         (result->count > ref2->count)) //ÏÈresultÏà£¬²»ĞŞ¸Ä
 479              		.loc 1 1048 0 discriminator 1
 480 000a 0D79     		ldrb	r5, [r1, #4]	@ zero_extendqisi2
1047:../user/source/DLT645.c ****         (result->count > ref2->count)) //ÏÈresultÏà£¬²»ĞŞ¸Ä
 481              		.loc 1 1047 0 discriminator 1
 482 000c AB42     		cmp	r3, r5
 483 000e 00F2AF80 		bhi	.L41
 484              	.L31:
1049:../user/source/DLT645.c ****         return false;
1050:../user/source/DLT645.c ****     else if ((result->count == ref1->count) &&
 485              		.loc 1 1050 0
 486 0012 A342     		cmp	r3, r4
 487 0014 34D1     		bne	.L33
1051:../user/source/DLT645.c ****              (result->count > ref2->count)) //ÏÈref1Ïà£¬ºóresultÏà,¸ù¾İref1ĞŞ¸Äresult
 488              		.loc 1 1051 0 discriminator 1
 489 0016 0D79     		ldrb	r5, [r1, #4]	@ zero_extendqisi2
1050:../user/source/DLT645.c ****              (result->count > ref2->count)) //ÏÈref1Ïà£¬ºóresultÏà,¸ù¾İref1ĞŞ¸Äresult
 490              		.loc 1 1050 0 discriminator 1
 491 0018 AB42     		cmp	r3, r5
 492 001a 31D9     		bls	.L33
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 28


1052:../user/source/DLT645.c ****     {
1053:../user/source/DLT645.c ****         if (ref1->value == 0 || result->value == 0 || ref1->isminus || result->isminus)
 493              		.loc 1 1053 0
 494 001c 0368     		ldr	r3, [r0]
 495 001e 002B     		cmp	r3, #0
 496 0020 00F0A880 		beq	.L42
 497              		.loc 1 1053 0 is_stmt 0 discriminator 1
 498 0024 1168     		ldr	r1, [r2]
 499              	.LVL68:
 500 0026 0029     		cmp	r1, #0
 501 0028 00F0A680 		beq	.L43
 502              		.loc 1 1053 0 discriminator 2
 503 002c 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2
 504              	.LVL69:
 505 002e 0028     		cmp	r0, #0
 506 0030 40F0A480 		bne	.L44
 507              		.loc 1 1053 0 discriminator 3
 508 0034 5479     		ldrb	r4, [r2, #5]	@ zero_extendqisi2
 509 0036 002C     		cmp	r4, #0
 510 0038 40F0B580 		bne	.L32
1054:../user/source/DLT645.c ****             return false; //ÒÑ¾­ÊÕµ½µÄÁ½ÏàµçÁ÷ÖĞ£¬ÓĞ0Öµ£¬»òÕßÓĞ¸ºÖµ£¬²»×öĞŞ¸Ä
1055:../user/source/DLT645.c ****         if (result->value < ref1->value)
 511              		.loc 1 1055 0 is_stmt 1
 512 003c 8B42     		cmp	r3, r1
 513 003e 0CD9     		bls	.L34
1056:../user/source/DLT645.c ****         {
1057:../user/source/DLT645.c ****             //ÈôresultĞ¡£¬resultĞŞ¸ÄÎªref1µÄ¹Ì¶¨±ÈÀı£ºCURRENT_MAX_DVALUE/100
1058:../user/source/DLT645.c ****             result->value = ((result->value < (CURRENT_MAX_DVALUE * ref1->value / 100))
1059:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * ref1->value / 100
 514              		.loc 1 1059 0
 515 0040 03EB8303 		add	r3, r3, r3, lsl #2
 516 0044 1801     		lsls	r0, r3, #4
 517 0046 594B     		ldr	r3, .L56
 518 0048 A3FB0003 		umull	r0, r3, r3, r0
 519 004c 5B09     		lsrs	r3, r3, #5
1060:../user/source/DLT645.c ****                                  : result->value);
 520              		.loc 1 1060 0
 521 004e 9942     		cmp	r1, r3
 522 0050 38BF     		it	cc
 523 0052 1946     		movcc	r1, r3
1058:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * ref1->value / 100
 524              		.loc 1 1058 0
 525 0054 1160     		str	r1, [r2]
1061:../user/source/DLT645.c ****         }
1062:../user/source/DLT645.c ****         else
1063:../user/source/DLT645.c ****         {
1064:../user/source/DLT645.c ****             //Èôresult´ó£¬resultĞŞ¸ÄÎªref1µÄ¹Ì¶¨±ÈÀı£º100/CURRENT_MAX_DVALUE£»²»³¬¹ı·¶Î§»òÕßref1µÈÓ
1065:../user/source/DLT645.c ****             result->value = ((CURRENT_MAX_DVALUE * result->value / 100 > ref1->value)
1066:../user/source/DLT645.c ****                                  ? 100 * ref1->value / CURRENT_MAX_DVALUE
1067:../user/source/DLT645.c ****                                  : result->value);
1068:../user/source/DLT645.c ****         }
1069:../user/source/DLT645.c ****         return true;
 526              		.loc 1 1069 0
 527 0056 0120     		movs	r0, #1
 528 0058 A5E0     		b	.L32
 529              	.L34:
1065:../user/source/DLT645.c ****                                  ? 100 * ref1->value / CURRENT_MAX_DVALUE
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 29


 530              		.loc 1 1065 0
 531 005a 01EB8104 		add	r4, r1, r1, lsl #2
 532 005e 2001     		lsls	r0, r4, #4
 533 0060 524C     		ldr	r4, .L56
 534 0062 A4FB0040 		umull	r4, r0, r4, r0
1067:../user/source/DLT645.c ****         }
 535              		.loc 1 1067 0
 536 0066 B3EB501F 		cmp	r3, r0, lsr #5
 537 006a 06D2     		bcs	.L35
1066:../user/source/DLT645.c ****                                  : result->value);
 538              		.loc 1 1066 0 discriminator 1
 539 006c 6421     		movs	r1, #100
 540 006e 01FB03F3 		mul	r3, r1, r3
1067:../user/source/DLT645.c ****         }
 541              		.loc 1 1067 0 discriminator 1
 542 0072 4F49     		ldr	r1, .L56+4
 543 0074 A1FB0331 		umull	r3, r1, r1, r3
 544 0078 8909     		lsrs	r1, r1, #6
 545              	.L35:
1065:../user/source/DLT645.c ****                                  ? 100 * ref1->value / CURRENT_MAX_DVALUE
 546              		.loc 1 1065 0
 547 007a 1160     		str	r1, [r2]
 548              		.loc 1 1069 0
 549 007c 0120     		movs	r0, #1
 550 007e 92E0     		b	.L32
 551              	.LVL70:
 552              	.L33:
1070:../user/source/DLT645.c ****     }
1071:../user/source/DLT645.c ****     else if ((result->count == ref2->count) && (result->count > ref1->count)) //ÏÈref2Ïà£¬ºóresultÏ
 553              		.loc 1 1071 0
 554 0080 0D79     		ldrb	r5, [r1, #4]	@ zero_extendqisi2
 555 0082 AB42     		cmp	r3, r5
 556 0084 30D1     		bne	.L36
 557              		.loc 1 1071 0 is_stmt 0 discriminator 1
 558 0086 A342     		cmp	r3, r4
 559 0088 2ED9     		bls	.L36
1072:../user/source/DLT645.c ****     {
1073:../user/source/DLT645.c ****         if (ref2->value == 0 || result->value == 0 || ref2->isminus || result->isminus)
 560              		.loc 1 1073 0 is_stmt 1
 561 008a 0B68     		ldr	r3, [r1]
 562 008c 002B     		cmp	r3, #0
 563 008e 77D0     		beq	.L45
 564              		.loc 1 1073 0 is_stmt 0 discriminator 1
 565 0090 1468     		ldr	r4, [r2]
 566 0092 002C     		cmp	r4, #0
 567 0094 76D0     		beq	.L46
 568              		.loc 1 1073 0 discriminator 2
 569 0096 4879     		ldrb	r0, [r1, #5]	@ zero_extendqisi2
 570              	.LVL71:
 571 0098 0028     		cmp	r0, #0
 572 009a 75D1     		bne	.L47
 573              		.loc 1 1073 0 discriminator 3
 574 009c 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 575              	.LVL72:
 576 009e 0029     		cmp	r1, #0
 577 00a0 40F08180 		bne	.L32
1074:../user/source/DLT645.c ****             return false;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 30


1075:../user/source/DLT645.c ****         if (result->value < ref2->value)
 578              		.loc 1 1075 0 is_stmt 1
 579 00a4 A342     		cmp	r3, r4
 580 00a6 0CD9     		bls	.L37
1076:../user/source/DLT645.c ****         {
1077:../user/source/DLT645.c ****             result->value = ((result->value < (CURRENT_MAX_DVALUE * ref2->value / 100))
1078:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * ref2->value / 100
 581              		.loc 1 1078 0
 582 00a8 03EB8303 		add	r3, r3, r3, lsl #2
 583 00ac 1901     		lsls	r1, r3, #4
 584 00ae 3F4B     		ldr	r3, .L56
 585 00b0 A3FB0113 		umull	r1, r3, r3, r1
 586 00b4 5B09     		lsrs	r3, r3, #5
1079:../user/source/DLT645.c ****                                  : result->value);
 587              		.loc 1 1079 0
 588 00b6 9C42     		cmp	r4, r3
 589 00b8 38BF     		it	cc
 590 00ba 1C46     		movcc	r4, r3
1077:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * ref2->value / 100
 591              		.loc 1 1077 0
 592 00bc 1460     		str	r4, [r2]
1080:../user/source/DLT645.c ****         }
1081:../user/source/DLT645.c ****         else
1082:../user/source/DLT645.c ****         {
1083:../user/source/DLT645.c ****             result->value = ((CURRENT_MAX_DVALUE * result->value / 100 > ref2->value)
1084:../user/source/DLT645.c ****                                  ? 100 * ref2->value / CURRENT_MAX_DVALUE
1085:../user/source/DLT645.c ****                                  : result->value);
1086:../user/source/DLT645.c ****         }
1087:../user/source/DLT645.c ****         return true;
 593              		.loc 1 1087 0
 594 00be 0120     		movs	r0, #1
 595 00c0 71E0     		b	.L32
 596              	.L37:
1083:../user/source/DLT645.c ****                                  ? 100 * ref2->value / CURRENT_MAX_DVALUE
 597              		.loc 1 1083 0
 598 00c2 04EB8400 		add	r0, r4, r4, lsl #2
 599 00c6 0101     		lsls	r1, r0, #4
 600 00c8 3848     		ldr	r0, .L56
 601 00ca A0FB0101 		umull	r0, r1, r0, r1
1085:../user/source/DLT645.c ****         }
 602              		.loc 1 1085 0
 603 00ce B3EB511F 		cmp	r3, r1, lsr #5
 604 00d2 06D2     		bcs	.L38
1084:../user/source/DLT645.c ****                                  : result->value);
 605              		.loc 1 1084 0 discriminator 1
 606 00d4 6424     		movs	r4, #100
 607 00d6 04FB03F3 		mul	r3, r4, r3
1085:../user/source/DLT645.c ****         }
 608              		.loc 1 1085 0 discriminator 1
 609 00da 354C     		ldr	r4, .L56+4
 610 00dc A4FB0334 		umull	r3, r4, r4, r3
 611 00e0 A409     		lsrs	r4, r4, #6
 612              	.L38:
1083:../user/source/DLT645.c ****                                  ? 100 * ref2->value / CURRENT_MAX_DVALUE
 613              		.loc 1 1083 0
 614 00e2 1460     		str	r4, [r2]
 615              		.loc 1 1087 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 31


 616 00e4 0120     		movs	r0, #1
 617 00e6 5EE0     		b	.L32
 618              	.LVL73:
 619              	.L36:
1088:../user/source/DLT645.c ****     }
1089:../user/source/DLT645.c ****     else if ((result->count == ref1->count) && (result->count == ref2->count)) //Ç°Á½ÏàÊÇref1ºÍref2
 620              		.loc 1 1089 0
 621 00e8 A342     		cmp	r3, r4
 622 00ea 4FD1     		bne	.L48
 623              		.loc 1 1089 0 is_stmt 0 discriminator 1
 624 00ec AB42     		cmp	r3, r5
 625 00ee 4FD1     		bne	.L49
1090:../user/source/DLT645.c ****     {
1091:../user/source/DLT645.c ****         if ((ref1->value == 0) || (ref2->value == 0) || (result->value == 0) || ref1->isminus || re
 626              		.loc 1 1091 0 is_stmt 1
 627 00f0 0368     		ldr	r3, [r0]
 628 00f2 002B     		cmp	r3, #0
 629 00f4 4ED0     		beq	.L50
 630              		.loc 1 1091 0 is_stmt 0 discriminator 1
 631 00f6 0C68     		ldr	r4, [r1]
 632 00f8 002C     		cmp	r4, #0
 633 00fa 4DD0     		beq	.L51
 634              		.loc 1 1091 0 discriminator 2
 635 00fc 1568     		ldr	r5, [r2]
 636 00fe 002D     		cmp	r5, #0
 637 0100 4CD0     		beq	.L52
 638              		.loc 1 1091 0 discriminator 3
 639 0102 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2
 640              	.LVL74:
 641 0104 0028     		cmp	r0, #0
 642 0106 4BD1     		bne	.L53
 643              		.loc 1 1091 0 discriminator 4
 644 0108 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 645              	.LVL75:
 646 010a 0029     		cmp	r1, #0
 647 010c 4BD1     		bne	.L32
 648              		.loc 1 1091 0 discriminator 5
 649 010e 5079     		ldrb	r0, [r2, #5]	@ zero_extendqisi2
 650 0110 0028     		cmp	r0, #0
 651 0112 47D1     		bne	.L54
1092:../user/source/DLT645.c ****             return false;
1093:../user/source/DLT645.c ****         if (result->value > MAX(ref1->value, ref2->value)) //result±ÈÇ°Á½Ïà¶¼´ó£¬resultĞŞ¸ÄÎª½ÏĞ¡Öµ
 652              		.loc 1 1093 0 is_stmt 1
 653 0114 1946     		mov	r1, r3
 654 0116 A342     		cmp	r3, r4
 655 0118 38BF     		it	cc
 656 011a 2146     		movcc	r1, r4
 657 011c 8D42     		cmp	r5, r1
 658 011e 15D9     		bls	.L39
1094:../user/source/DLT645.c ****         {
1095:../user/source/DLT645.c ****             result->value = (CURRENT_MAX_DVALUE * result->value / 100 >= MIN(ref1->value, ref2->val
 659              		.loc 1 1095 0
 660 0120 05EB8500 		add	r0, r5, r5, lsl #2
 661 0124 0101     		lsls	r1, r0, #4
 662 0126 2148     		ldr	r0, .L56
 663 0128 A0FB0101 		umull	r0, r1, r0, r1
 664 012c A342     		cmp	r3, r4
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 32


 665 012e 28BF     		it	cs
 666 0130 2346     		movcs	r3, r4
1096:../user/source/DLT645.c ****                                  ? 100 * MIN(ref1->value, ref2->value) / CURRENT_MAX_DVALUE
1097:../user/source/DLT645.c ****                                  : result->value);
 667              		.loc 1 1097 0
 668 0132 B3EB511F 		cmp	r3, r1, lsr #5
 669 0136 06D8     		bhi	.L40
1096:../user/source/DLT645.c ****                                  ? 100 * MIN(ref1->value, ref2->value) / CURRENT_MAX_DVALUE
 670              		.loc 1 1096 0 discriminator 1
 671 0138 6425     		movs	r5, #100
 672 013a 05FB03F3 		mul	r3, r5, r3
 673              		.loc 1 1097 0 discriminator 1
 674 013e 1C4D     		ldr	r5, .L56+4
 675 0140 A5FB0335 		umull	r3, r5, r5, r3
 676 0144 AD09     		lsrs	r5, r5, #6
 677              	.L40:
1095:../user/source/DLT645.c ****                                  ? 100 * MIN(ref1->value, ref2->value) / CURRENT_MAX_DVALUE
 678              		.loc 1 1095 0
 679 0146 1560     		str	r5, [r2]
1098:../user/source/DLT645.c ****         }
1099:../user/source/DLT645.c ****         else if (result->value < MIN(ref1->value, ref2->value)) //result±ÈÇ°Á½Ïà¶¼Ğ¡£¬resultĞŞ¸ÄÎª½
1100:../user/source/DLT645.c ****         {
1101:../user/source/DLT645.c ****             result->value = ((result->value < CURRENT_MAX_DVALUE * MAX(ref1->value, ref2->value) / 
1102:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * MAX(ref1->value, ref2->value) / 100
1103:../user/source/DLT645.c ****                                  : result->value);
1104:../user/source/DLT645.c ****         }
1105:../user/source/DLT645.c ****         else //resultÔÚref1ºÍref2Ö®¼ä£¬ÒòÎªÇ°Á½Ö¡²îÖµÒÑ±£Ö¤²»³¬³ö·¶Î§£¬ËùÒÔresult²»ĞèÒªĞŞ¸Ä
1106:../user/source/DLT645.c ****         {
1107:../user/source/DLT645.c ****             return false;
1108:../user/source/DLT645.c ****         }
1109:../user/source/DLT645.c ****         return true;
 680              		.loc 1 1109 0
 681 0148 0120     		movs	r0, #1
 682 014a 2CE0     		b	.L32
 683              	.L39:
1099:../user/source/DLT645.c ****         {
 684              		.loc 1 1099 0
 685 014c A342     		cmp	r3, r4
 686 014e 28BF     		it	cs
 687 0150 2346     		movcs	r3, r4
 688 0152 9D42     		cmp	r5, r3
 689 0154 27D2     		bcs	.L32
1102:../user/source/DLT645.c ****                                  : result->value);
 690              		.loc 1 1102 0
 691 0156 01EB8101 		add	r1, r1, r1, lsl #2
 692 015a 0B01     		lsls	r3, r1, #4
 693 015c 1349     		ldr	r1, .L56
 694 015e A1FB0313 		umull	r1, r3, r1, r3
 695 0162 5B09     		lsrs	r3, r3, #5
1103:../user/source/DLT645.c ****         }
 696              		.loc 1 1103 0
 697 0164 9D42     		cmp	r5, r3
 698 0166 38BF     		it	cc
 699 0168 1D46     		movcc	r5, r3
1101:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * MAX(ref1->value, ref2->value) / 100
 700              		.loc 1 1101 0
 701 016a 1560     		str	r5, [r2]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 33


 702              		.loc 1 1109 0
 703 016c 0120     		movs	r0, #1
 704 016e 1AE0     		b	.L32
 705              	.LVL76:
 706              	.L41:
1049:../user/source/DLT645.c ****     else if ((result->count == ref1->count) &&
 707              		.loc 1 1049 0
 708 0170 0020     		movs	r0, #0
 709              	.LVL77:
 710 0172 18E0     		b	.L32
 711              	.LVL78:
 712              	.L42:
1054:../user/source/DLT645.c ****         if (result->value < ref1->value)
 713              		.loc 1 1054 0
 714 0174 0020     		movs	r0, #0
 715              	.LVL79:
 716 0176 16E0     		b	.L32
 717              	.LVL80:
 718              	.L43:
 719 0178 0020     		movs	r0, #0
 720              	.LVL81:
 721 017a 14E0     		b	.L32
 722              	.L44:
 723 017c 0020     		movs	r0, #0
 724 017e 12E0     		b	.L32
 725              	.LVL82:
 726              	.L45:
1074:../user/source/DLT645.c ****         if (result->value < ref2->value)
 727              		.loc 1 1074 0
 728 0180 0020     		movs	r0, #0
 729              	.LVL83:
 730 0182 10E0     		b	.L32
 731              	.LVL84:
 732              	.L46:
 733 0184 0020     		movs	r0, #0
 734              	.LVL85:
 735 0186 0EE0     		b	.L32
 736              	.L47:
 737 0188 0020     		movs	r0, #0
 738 018a 0CE0     		b	.L32
 739              	.LVL86:
 740              	.L48:
1110:../user/source/DLT645.c ****     }
1111:../user/source/DLT645.c ****     return true;
 741              		.loc 1 1111 0
 742 018c 0120     		movs	r0, #1
 743              	.LVL87:
 744 018e 0AE0     		b	.L32
 745              	.LVL88:
 746              	.L49:
 747 0190 0120     		movs	r0, #1
 748              	.LVL89:
 749 0192 08E0     		b	.L32
 750              	.LVL90:
 751              	.L50:
1092:../user/source/DLT645.c ****         if (result->value > MAX(ref1->value, ref2->value)) //result±ÈÇ°Á½Ïà¶¼´ó£¬resultĞŞ¸ÄÎª½ÏĞ¡Öµ
 752              		.loc 1 1092 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 34


 753 0194 0020     		movs	r0, #0
 754              	.LVL91:
 755 0196 06E0     		b	.L32
 756              	.LVL92:
 757              	.L51:
 758 0198 0020     		movs	r0, #0
 759              	.LVL93:
 760 019a 04E0     		b	.L32
 761              	.LVL94:
 762              	.L52:
 763 019c 0020     		movs	r0, #0
 764              	.LVL95:
 765 019e 02E0     		b	.L32
 766              	.L53:
 767 01a0 0020     		movs	r0, #0
 768 01a2 00E0     		b	.L32
 769              	.LVL96:
 770              	.L54:
 771 01a4 0846     		mov	r0, r1
 772              	.L32:
1112:../user/source/DLT645.c **** }
 773              		.loc 1 1112 0
 774 01a6 30BC     		pop	{r4, r5}
 775              	.LCFI10:
 776              		.cfi_restore 5
 777              		.cfi_restore 4
 778              		.cfi_def_cfa_offset 0
 779 01a8 7047     		bx	lr
 780              	.L57:
 781 01aa 00BF     		.align	2
 782              	.L56:
 783 01ac 1F85EB51 		.word	1374389535
 784 01b0 CDCCCCCC 		.word	-858993459
 785              		.cfi_endproc
 786              	.LFE129:
 788              		.section	.text.vCurrentTriple_Modify_Method,"ax",%progbits
 789              		.align	2
 790              		.thumb
 791              		.thumb_func
 793              	vCurrentTriple_Modify_Method:
 794              	.LFB130:
1113:../user/source/DLT645.c **** 
1114:../user/source/DLT645.c **** /*****************************************************
1115:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÈıÏàµçÁ÷ĞŞ¸Ä·½·¨
1116:../user/source/DLT645.c ****  * Êä    Èë£ºÈıÏà²Î¿¼µçÁ÷
1117:../user/source/DLT645.c ****  * Êä    ³ö£ºÎŞ
1118:../user/source/DLT645.c ****  * Ëµ	  Ã÷£º×î´óµçÁ÷Öµ¸ÄÎªÆ½¾ùÖµµÄ1.1±¶£¬ÖĞ¼äÖµ¸ÄÎªÆ½¾ùÖµ£¬×îĞ¡Öµ¸ÄÎªÆ½¾ùÖµµÄ90%£¬
1119:../user/source/DLT645.c ****  *				´ËÊ±×î´óµçÁ÷ÖµºÍ×îµçÁ÷ÖµµÄ²îÖµÊÇ×î´óÖµµÄ18.18%
1120:../user/source/DLT645.c ****  *				
1121:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1122:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.12.13
1123:../user/source/DLT645.c ****  *******************************************************/
1124:../user/source/DLT645.c **** void vCurrentTriple_Modify_Method(CURRENT *current_max, CURRENT *current_mid, CURRENT *current_min)
1125:../user/source/DLT645.c **** {
 795              		.loc 1 1125 0
 796              		.cfi_startproc
 797              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 35


 798              		@ frame_needed = 0, uses_anonymous_args = 0
 799              		@ link register save eliminated.
 800              	.LVL97:
 801 0000 30B4     		push	{r4, r5}
 802              	.LCFI11:
 803              		.cfi_def_cfa_offset 8
 804              		.cfi_offset 4, -8
 805              		.cfi_offset 5, -4
1126:../user/source/DLT645.c ****     uint32_t current_average;
1127:../user/source/DLT645.c ****     current_average = (current_max->value + current_mid->value + current_min->value) / 3;
 806              		.loc 1 1127 0
 807 0002 0468     		ldr	r4, [r0]
 808 0004 0B68     		ldr	r3, [r1]
 809 0006 1C44     		add	r4, r4, r3
 810 0008 1368     		ldr	r3, [r2]
 811 000a 2344     		add	r3, r3, r4
 812 000c 0324     		movs	r4, #3
 813 000e B3FBF4F3 		udiv	r3, r3, r4
 814              	.LVL98:
1128:../user/source/DLT645.c ****     current_max->value = current_average * 11 / 10; //×î´óÖµ¸ÄÎªÆ½¾ùÖµµÄ110%
 815              		.loc 1 1128 0
 816 0012 0B24     		movs	r4, #11
 817 0014 04FB03F4 		mul	r4, r4, r3
 818 0018 0A25     		movs	r5, #10
 819 001a B4FBF5F4 		udiv	r4, r4, r5
 820 001e 0460     		str	r4, [r0]
1129:../user/source/DLT645.c ****     current_mid->value = current_average;           //ÖĞ¼äÖµ¸ÄÎªÆ½¾ùÖµ
 821              		.loc 1 1129 0
 822 0020 0B60     		str	r3, [r1]
1130:../user/source/DLT645.c ****     current_min->value = current_average * 9 / 10;  //×îĞ¡Öµ¸ÄÎªÆ½¾ùÖµµÄ90%£»
 823              		.loc 1 1130 0
 824 0022 03EBC303 		add	r3, r3, r3, lsl #3
 825              	.LVL99:
 826 0026 B3FBF5F3 		udiv	r3, r3, r5
 827 002a 1360     		str	r3, [r2]
 828              	.LVL100:
1131:../user/source/DLT645.c **** }
 829              		.loc 1 1131 0
 830 002c 30BC     		pop	{r4, r5}
 831              	.LCFI12:
 832              		.cfi_restore 5
 833              		.cfi_restore 4
 834              		.cfi_def_cfa_offset 0
 835 002e 7047     		bx	lr
 836              		.cfi_endproc
 837              	.LFE130:
 839              		.section	.text.vCurrent_Modify,"ax",%progbits
 840              		.align	2
 841              		.global	vCurrent_Modify
 842              		.thumb
 843              		.thumb_func
 845              	vCurrent_Modify:
 846              	.LFB131:
1132:../user/source/DLT645.c **** 
1133:../user/source/DLT645.c **** /*****************************************************
1134:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºĞŞ¸ÄµçÁ÷¸÷Ïà²îÖµ
1135:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 36


1136:../user/source/DLT645.c ****  * Êä    ³ö£ºÎŞ
1137:../user/source/DLT645.c ****  * Ëµ	  Ã÷£ºµ¥ÏàµçÁ÷£ºÈôÈÎÒâÁ½Ïà²îÖµ´óÓÚ20%µÄ½Ï´óÖµ£¬Ôò½«½ÏĞ¡Öµ¸ÄÎª½Ï´óÖµµÄ80%          
1138:../user/source/DLT645.c ****  *				ÈıÏàµçÁ÷£º°´ÕÕ×ÜºÍ²»±äÀ´ĞŞ¸Ä
1139:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1140:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.12.13
1141:../user/source/DLT645.c ****  *******************************************************/
1142:../user/source/DLT645.c **** void vCurrent_Modify(uint8_t *pucBuffer)
1143:../user/source/DLT645.c **** {
 847              		.loc 1 1143 0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 851              	.LVL101:
 852 0000 30B5     		push	{r4, r5, lr}
 853              	.LCFI13:
 854              		.cfi_def_cfa_offset 12
 855              		.cfi_offset 4, -12
 856              		.cfi_offset 5, -8
 857              		.cfi_offset 14, -4
 858 0002 83B0     		sub	sp, sp, #12
 859              	.LCFI14:
 860              		.cfi_def_cfa_offset 24
 861 0004 0446     		mov	r4, r0
 862              	.LVL102:
1144:../user/source/DLT645.c ****     uint8_t i;
1145:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
1146:../user/source/DLT645.c ****     switch (pucBuffer[11])
 863              		.loc 1 1146 0
 864 0006 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 865 0008 323B     		subs	r3, r3, #50
 866 000a 042B     		cmp	r3, #4
 867 000c 00F22C81 		bhi	.L60
 868 0010 DFE813F0 		tbh	[pc, r3, lsl #1]
 869              	.L63:
 870 0014 0500     		.2byte	(.L62-.L63)/2
 871 0016 2A01     		.2byte	(.L60-.L63)/2
 872 0018 AB00     		.2byte	(.L64-.L63)/2
 873 001a D600     		.2byte	(.L65-.L63)/2
 874 001c 0101     		.2byte	(.L66-.L63)/2
 875              		.p2align 1
 876              	.L62:
1147:../user/source/DLT645.c ****     {
1148:../user/source/DLT645.c ****     case 0x32: //ÈıÏàµçÁ÷Êı¾İ¿é
1149:../user/source/DLT645.c ****     {
1150:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Acurrent);
 877              		.loc 1 1150 0
 878 001e 934D     		ldr	r5, .L82
 879 0020 2B46     		mov	r3, r5
 880 0022 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 881 0024 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 882 0026 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 883              	.LVL103:
 884 0028 FFF7FEFF 		bl	vGet_Current
 885              	.LVL104:
1151:../user/source/DLT645.c ****         /*µçÁ÷Îª¸ºÖµ,²»ĞŞ¸ÄµçÁ÷*/
1152:../user/source/DLT645.c ****         if (Acurrent.isminus || Bcurrent.isminus || Ccurrent.isminus)
 886              		.loc 1 1152 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 37


 887 002c 6B79     		ldrb	r3, [r5, #5]	@ zero_extendqisi2
 888 002e 002B     		cmp	r3, #0
 889 0030 40F01A81 		bne	.L60
 890              		.loc 1 1152 0 is_stmt 0 discriminator 1
 891 0034 8E4B     		ldr	r3, .L82+4
 892 0036 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 893 0038 002B     		cmp	r3, #0
 894 003a 40F01581 		bne	.L60
 895              		.loc 1 1152 0 discriminator 2
 896 003e 8D4B     		ldr	r3, .L82+8
 897 0040 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 898 0042 002B     		cmp	r3, #0
 899 0044 40F01081 		bne	.L60
1153:../user/source/DLT645.c ****             return;
1154:../user/source/DLT645.c ****         /*µçÁ÷Îª0£¬²»ĞŞ¸ÄµçÁ÷*/
1155:../user/source/DLT645.c ****         if ((Acurrent.value == 0) || (Bcurrent.value == 0) || (Ccurrent.value == 0))
 900              		.loc 1 1155 0 is_stmt 1
 901 0048 2B68     		ldr	r3, [r5]
 902 004a 002B     		cmp	r3, #0
 903 004c 00F00C81 		beq	.L60
 904              		.loc 1 1155 0 is_stmt 0 discriminator 1
 905 0050 874A     		ldr	r2, .L82+4
 906 0052 1268     		ldr	r2, [r2]
 907 0054 002A     		cmp	r2, #0
 908 0056 00F00781 		beq	.L60
 909              		.loc 1 1155 0 discriminator 2
 910 005a 8649     		ldr	r1, .L82+8
 911 005c 0868     		ldr	r0, [r1]
 912 005e 0028     		cmp	r0, #0
 913 0060 00F00281 		beq	.L60
1156:../user/source/DLT645.c ****             return;
1157:../user/source/DLT645.c ****         /*µçÁ÷Ïà»¥Ö®¼ä²»³¬²î£¬²»ĞŞ¸ÄµçÁ÷*/
1158:../user/source/DLT645.c ****         if (CURRENT_MAX_DVALUE * MAX(Acurrent.value, MAX(Bcurrent.value, Ccurrent.value)) / 100 <=
 914              		.loc 1 1158 0 is_stmt 1
 915 0064 1146     		mov	r1, r2
 916 0066 8242     		cmp	r2, r0
 917 0068 38BF     		it	cc
 918 006a 0146     		movcc	r1, r0
 919 006c 9942     		cmp	r1, r3
 920 006e 38BF     		it	cc
 921 0070 1946     		movcc	r1, r3
 922 0072 01EB8101 		add	r1, r1, r1, lsl #2
 923 0076 0D01     		lsls	r5, r1, #4
 924 0078 7F49     		ldr	r1, .L82+12
 925 007a A1FB0515 		umull	r1, r5, r1, r5
1159:../user/source/DLT645.c ****             MIN(Acurrent.value, MIN(Bcurrent.value, Ccurrent.value)))
 926              		.loc 1 1159 0
 927 007e 1146     		mov	r1, r2
 928 0080 8242     		cmp	r2, r0
 929 0082 28BF     		it	cs
 930 0084 0146     		movcs	r1, r0
 931 0086 9942     		cmp	r1, r3
 932 0088 28BF     		it	cs
 933 008a 1946     		movcs	r1, r3
1158:../user/source/DLT645.c ****             MIN(Acurrent.value, MIN(Bcurrent.value, Ccurrent.value)))
 934              		.loc 1 1158 0
 935 008c B1EB551F 		cmp	r1, r5, lsr #5
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 38


 936 0090 80F0EA80 		bcs	.L60
1160:../user/source/DLT645.c ****             return;
1161:../user/source/DLT645.c ****         else //ĞèÒªĞŞ¸Ä£¬×î´óÖµ¼õĞ¡£¬×îĞ¡ÖµÔö´ó£¬Ê£ÏÂµÄÊÇÖĞ¼äÖµ
1162:../user/source/DLT645.c ****         {
1163:../user/source/DLT645.c ****             if ((Acurrent.value >= Bcurrent.value) && (Bcurrent.value >= Ccurrent.value))
 937              		.loc 1 1163 0
 938 0094 9342     		cmp	r3, r2
 939 0096 07D3     		bcc	.L67
 940              		.loc 1 1163 0 is_stmt 0 discriminator 1
 941 0098 8242     		cmp	r2, r0
 942 009a 05D3     		bcc	.L67
1164:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Acurrent, &Bcurrent, &Ccurrent);
 943              		.loc 1 1164 0 is_stmt 1
 944 009c 754A     		ldr	r2, .L82+8
 945 009e 7449     		ldr	r1, .L82+4
 946 00a0 7248     		ldr	r0, .L82
 947 00a2 FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 948              	.LVL105:
 949 00a6 30E0     		b	.L68
 950              	.L67:
1165:../user/source/DLT645.c ****             else if ((Acurrent.value >= Ccurrent.value) && (Ccurrent.value >= Bcurrent.value))
 951              		.loc 1 1165 0
 952 00a8 8342     		cmp	r3, r0
 953 00aa 07D3     		bcc	.L69
 954              		.loc 1 1165 0 is_stmt 0 discriminator 1
 955 00ac 8242     		cmp	r2, r0
 956 00ae 05D8     		bhi	.L69
1166:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Acurrent, &Ccurrent, &Bcurrent);
 957              		.loc 1 1166 0 is_stmt 1
 958 00b0 6F4A     		ldr	r2, .L82+4
 959 00b2 7049     		ldr	r1, .L82+8
 960 00b4 6D48     		ldr	r0, .L82
 961 00b6 FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 962              	.LVL106:
 963 00ba 26E0     		b	.L68
 964              	.L69:
1167:../user/source/DLT645.c ****             else if ((Bcurrent.value >= Acurrent.value) && (Acurrent.value >= Ccurrent.value))
 965              		.loc 1 1167 0
 966 00bc 9342     		cmp	r3, r2
 967 00be 07D8     		bhi	.L70
 968              		.loc 1 1167 0 is_stmt 0 discriminator 1
 969 00c0 8342     		cmp	r3, r0
 970 00c2 05D3     		bcc	.L70
1168:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Bcurrent, &Acurrent, &Ccurrent);
 971              		.loc 1 1168 0 is_stmt 1
 972 00c4 6B4A     		ldr	r2, .L82+8
 973 00c6 6949     		ldr	r1, .L82
 974 00c8 6948     		ldr	r0, .L82+4
 975 00ca FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 976              	.LVL107:
 977 00ce 1CE0     		b	.L68
 978              	.L70:
1169:../user/source/DLT645.c ****             else if ((Bcurrent.value >= Ccurrent.value) && (Ccurrent.value >= Acurrent.value))
 979              		.loc 1 1169 0
 980 00d0 8242     		cmp	r2, r0
 981 00d2 07D3     		bcc	.L71
 982              		.loc 1 1169 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 39


 983 00d4 8342     		cmp	r3, r0
 984 00d6 05D8     		bhi	.L71
1170:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Bcurrent, &Ccurrent, &Acurrent);
 985              		.loc 1 1170 0 is_stmt 1
 986 00d8 644A     		ldr	r2, .L82
 987 00da 6649     		ldr	r1, .L82+8
 988 00dc 6448     		ldr	r0, .L82+4
 989 00de FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 990              	.LVL108:
 991 00e2 12E0     		b	.L68
 992              	.L71:
1171:../user/source/DLT645.c ****             else if ((Ccurrent.value >= Acurrent.value) && (Acurrent.value >= Bcurrent.value))
 993              		.loc 1 1171 0
 994 00e4 8342     		cmp	r3, r0
 995 00e6 07D8     		bhi	.L72
 996              		.loc 1 1171 0 is_stmt 0 discriminator 1
 997 00e8 9342     		cmp	r3, r2
 998 00ea 05D3     		bcc	.L72
1172:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Ccurrent, &Acurrent, &Bcurrent);
 999              		.loc 1 1172 0 is_stmt 1
 1000 00ec 604A     		ldr	r2, .L82+4
 1001 00ee 5F49     		ldr	r1, .L82
 1002 00f0 6048     		ldr	r0, .L82+8
 1003 00f2 FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 1004              	.LVL109:
 1005 00f6 08E0     		b	.L68
 1006              	.L72:
1173:../user/source/DLT645.c ****             else if ((Ccurrent.value >= Bcurrent.value) && (Bcurrent.value >= Acurrent.value))
 1007              		.loc 1 1173 0
 1008 00f8 8242     		cmp	r2, r0
 1009 00fa 06D8     		bhi	.L68
 1010              		.loc 1 1173 0 is_stmt 0 discriminator 1
 1011 00fc 9342     		cmp	r3, r2
 1012 00fe 04D8     		bhi	.L68
1174:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Ccurrent, &Bcurrent, &Acurrent);
 1013              		.loc 1 1174 0 is_stmt 1
 1014 0100 5A4A     		ldr	r2, .L82
 1015 0102 5B49     		ldr	r1, .L82+4
 1016 0104 5B48     		ldr	r0, .L82+8
 1017 0106 FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 1018              	.LVL110:
 1019              	.L68:
1175:../user/source/DLT645.c ****             //AÏàµçÁ÷,Ê®½øÖÆÊı×ªBCDÂë
1176:../user/source/DLT645.c ****             vPut_Current(Acurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
 1020              		.loc 1 1176 0
 1021 010a 584D     		ldr	r5, .L82
 1022 010c 04F11003 		add	r3, r4, #16
 1023 0110 0093     		str	r3, [sp]
 1024 0112 04F10F03 		add	r3, r4, #15
 1025 0116 04F10E02 		add	r2, r4, #14
 1026 011a 95E80300 		ldmia	r5, {r0, r1}
 1027 011e FFF7FEFF 		bl	vPut_Current
 1028              	.LVL111:
1177:../user/source/DLT645.c ****             //BÏàµçÁ÷
1178:../user/source/DLT645.c ****             vPut_Current(Acurrent, &pucBuffer[17], &pucBuffer[18], &pucBuffer[19]);
 1029              		.loc 1 1178 0
 1030 0122 04F11303 		add	r3, r4, #19
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 40


 1031 0126 0093     		str	r3, [sp]
 1032 0128 04F11203 		add	r3, r4, #18
 1033 012c 04F11102 		add	r2, r4, #17
 1034 0130 95E80300 		ldmia	r5, {r0, r1}
 1035 0134 FFF7FEFF 		bl	vPut_Current
 1036              	.LVL112:
1179:../user/source/DLT645.c ****             //CÏàµçÁ÷
1180:../user/source/DLT645.c ****             vPut_Current(Acurrent, &pucBuffer[20], &pucBuffer[21], &pucBuffer[22]);
 1037              		.loc 1 1180 0
 1038 0138 04F11603 		add	r3, r4, #22
 1039 013c 0093     		str	r3, [sp]
 1040 013e 04F11503 		add	r3, r4, #21
 1041 0142 04F11402 		add	r2, r4, #20
 1042 0146 95E80300 		ldmia	r5, {r0, r1}
 1043 014a FFF7FEFF 		bl	vPut_Current
 1044              	.LVL113:
1145:../user/source/DLT645.c ****     switch (pucBuffer[11])
 1045              		.loc 1 1145 0
 1046 014e 0022     		movs	r2, #0
1181:../user/source/DLT645.c ****             for (i = 0; i < 23; i++) //Êı¾İÓò³¤¶È23
 1047              		.loc 1 1181 0
 1048 0150 1346     		mov	r3, r2
 1049 0152 04E0     		b	.L73
 1050              	.LVL114:
 1051              	.L74:
1182:../user/source/DLT645.c ****             {
1183:../user/source/DLT645.c ****                 ucCheckData += pucBuffer[i];
 1052              		.loc 1 1183 0 discriminator 3
 1053 0154 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 1054 0156 0A44     		add	r2, r2, r1
 1055              	.LVL115:
 1056 0158 D2B2     		uxtb	r2, r2
 1057              	.LVL116:
1181:../user/source/DLT645.c ****             for (i = 0; i < 23; i++) //Êı¾İÓò³¤¶È23
 1058              		.loc 1 1181 0 discriminator 3
 1059 015a 0133     		adds	r3, r3, #1
 1060              	.LVL117:
 1061 015c DBB2     		uxtb	r3, r3
 1062              	.LVL118:
 1063              	.L73:
1181:../user/source/DLT645.c ****             for (i = 0; i < 23; i++) //Êı¾İÓò³¤¶È23
 1064              		.loc 1 1181 0 is_stmt 0 discriminator 1
 1065 015e 162B     		cmp	r3, #22
 1066 0160 F8D9     		bls	.L74
1184:../user/source/DLT645.c ****             }
1185:../user/source/DLT645.c ****             pucBuffer[23] = ucCheckData;
 1067              		.loc 1 1185 0 is_stmt 1
 1068 0162 E275     		strb	r2, [r4, #23]
1186:../user/source/DLT645.c ****             pucBuffer[24] = 0x16;
 1069              		.loc 1 1186 0
 1070 0164 1623     		movs	r3, #22
 1071              	.LVL119:
 1072 0166 2376     		strb	r3, [r4, #24]
1187:../user/source/DLT645.c ****         }
1188:../user/source/DLT645.c ****         break;
 1073              		.loc 1 1188 0
 1074 0168 7EE0     		b	.L60
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 41


 1075              	.LVL120:
 1076              	.L64:
1189:../user/source/DLT645.c ****     }
1190:../user/source/DLT645.c ****     case 0x34: //AÏàµçÁ÷
1191:../user/source/DLT645.c ****     {
1192:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Acurrent);
 1077              		.loc 1 1192 0
 1078 016a 404B     		ldr	r3, .L82
 1079 016c 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 1080 016e C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1081 0170 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1082              	.LVL121:
 1083 0172 FFF7FEFF 		bl	vGet_Current
 1084              	.LVL122:
1193:../user/source/DLT645.c ****         if (((pucBuffer[16] - 0x33) & 0x80) != 0)
 1085              		.loc 1 1193 0
 1086 0176 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1087 0178 333B     		subs	r3, r3, #51
 1088 017a 13F0800F 		tst	r3, #128
 1089 017e 73D1     		bne	.L60
1194:../user/source/DLT645.c ****         {
1195:../user/source/DLT645.c ****             return;
1196:../user/source/DLT645.c ****         }
1197:../user/source/DLT645.c ****         if (blCurrentSingle_Modify_Method(&Bcurrent, &Ccurrent, &Acurrent)) //¸ù¾İBÏàºÍCÏàµçÁ÷ĞŞ¸ÄA
 1090              		.loc 1 1197 0
 1091 0180 3A4A     		ldr	r2, .L82
 1092 0182 3C49     		ldr	r1, .L82+8
 1093 0184 3A48     		ldr	r0, .L82+4
 1094 0186 FFF7FEFF 		bl	blCurrentSingle_Modify_Method
 1095              	.LVL123:
 1096 018a 0028     		cmp	r0, #0
 1097 018c 6CD0     		beq	.L60
1198:../user/source/DLT645.c ****         {
1199:../user/source/DLT645.c ****             //AÏàµçÁ÷,Ê®½øÖÆÊı×ªBCDÂë
1200:../user/source/DLT645.c ****             vPut_Current(Acurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
 1098              		.loc 1 1200 0
 1099 018e 3749     		ldr	r1, .L82
 1100 0190 04F11003 		add	r3, r4, #16
 1101 0194 0093     		str	r3, [sp]
 1102 0196 04F10F03 		add	r3, r4, #15
 1103 019a 04F10E02 		add	r2, r4, #14
 1104 019e 03C9     		ldmia	r1, {r0, r1}
 1105 01a0 FFF7FEFF 		bl	vPut_Current
 1106              	.LVL124:
1145:../user/source/DLT645.c ****     switch (pucBuffer[11])
 1107              		.loc 1 1145 0
 1108 01a4 0022     		movs	r2, #0
1201:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1109              		.loc 1 1201 0
 1110 01a6 1346     		mov	r3, r2
 1111 01a8 04E0     		b	.L75
 1112              	.LVL125:
 1113              	.L76:
1202:../user/source/DLT645.c ****             {
1203:../user/source/DLT645.c ****                 ucCheckData += pucBuffer[i];
 1114              		.loc 1 1203 0 discriminator 3
 1115 01aa E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 42


 1116 01ac 0A44     		add	r2, r2, r1
 1117              	.LVL126:
 1118 01ae D2B2     		uxtb	r2, r2
 1119              	.LVL127:
1201:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1120              		.loc 1 1201 0 discriminator 3
 1121 01b0 0133     		adds	r3, r3, #1
 1122              	.LVL128:
 1123 01b2 DBB2     		uxtb	r3, r3
 1124              	.LVL129:
 1125              	.L75:
1201:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1126              		.loc 1 1201 0 is_stmt 0 discriminator 1
 1127 01b4 102B     		cmp	r3, #16
 1128 01b6 F8D9     		bls	.L76
1204:../user/source/DLT645.c ****             }
1205:../user/source/DLT645.c ****             pucBuffer[17] = ucCheckData;
 1129              		.loc 1 1205 0 is_stmt 1
 1130 01b8 6274     		strb	r2, [r4, #17]
1206:../user/source/DLT645.c ****             pucBuffer[18] = 0x16;
 1131              		.loc 1 1206 0
 1132 01ba 1623     		movs	r3, #22
 1133              	.LVL130:
 1134 01bc A374     		strb	r3, [r4, #18]
 1135 01be 53E0     		b	.L60
 1136              	.LVL131:
 1137              	.L65:
1207:../user/source/DLT645.c ****         }
1208:../user/source/DLT645.c ****         break;
1209:../user/source/DLT645.c ****     }
1210:../user/source/DLT645.c ****     case 0x35: //BÏàµçÁ÷
1211:../user/source/DLT645.c ****     {
1212:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Bcurrent);
 1138              		.loc 1 1212 0
 1139 01c0 2B4B     		ldr	r3, .L82+4
 1140 01c2 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 1141 01c4 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1142 01c6 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1143              	.LVL132:
 1144 01c8 FFF7FEFF 		bl	vGet_Current
 1145              	.LVL133:
1213:../user/source/DLT645.c **** 
1214:../user/source/DLT645.c ****         if (((pucBuffer[16] - 0x33) & 0x80) != 0) //µçÁ÷ÊÇ¸ºÖµ
 1146              		.loc 1 1214 0
 1147 01cc 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1148 01ce 333B     		subs	r3, r3, #51
 1149 01d0 13F0800F 		tst	r3, #128
 1150 01d4 48D1     		bne	.L60
1215:../user/source/DLT645.c ****         {
1216:../user/source/DLT645.c ****             return;
1217:../user/source/DLT645.c ****         }
1218:../user/source/DLT645.c ****         if (blCurrentSingle_Modify_Method(&Acurrent, &Ccurrent, &Bcurrent)) //¸ù¾İAÏàºÍCÏàĞŞ¸ÄBÏàµç
 1151              		.loc 1 1218 0
 1152 01d6 264A     		ldr	r2, .L82+4
 1153 01d8 2649     		ldr	r1, .L82+8
 1154 01da 2448     		ldr	r0, .L82
 1155 01dc FFF7FEFF 		bl	blCurrentSingle_Modify_Method
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 43


 1156              	.LVL134:
 1157 01e0 0028     		cmp	r0, #0
 1158 01e2 41D0     		beq	.L60
1219:../user/source/DLT645.c ****         {
1220:../user/source/DLT645.c ****             //BÏàµçÁ÷,Ê®½øÖÆÊı×ªBCDÂë
1221:../user/source/DLT645.c ****             vPut_Current(Bcurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
 1159              		.loc 1 1221 0
 1160 01e4 2249     		ldr	r1, .L82+4
 1161 01e6 04F11003 		add	r3, r4, #16
 1162 01ea 0093     		str	r3, [sp]
 1163 01ec 04F10F03 		add	r3, r4, #15
 1164 01f0 04F10E02 		add	r2, r4, #14
 1165 01f4 03C9     		ldmia	r1, {r0, r1}
 1166 01f6 FFF7FEFF 		bl	vPut_Current
 1167              	.LVL135:
1145:../user/source/DLT645.c ****     switch (pucBuffer[11])
 1168              		.loc 1 1145 0
 1169 01fa 0022     		movs	r2, #0
1222:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1170              		.loc 1 1222 0
 1171 01fc 1346     		mov	r3, r2
 1172 01fe 04E0     		b	.L77
 1173              	.LVL136:
 1174              	.L78:
1223:../user/source/DLT645.c ****             {
1224:../user/source/DLT645.c ****                 ucCheckData += pucBuffer[i];
 1175              		.loc 1 1224 0 discriminator 3
 1176 0200 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 1177 0202 0A44     		add	r2, r2, r1
 1178              	.LVL137:
 1179 0204 D2B2     		uxtb	r2, r2
 1180              	.LVL138:
1222:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1181              		.loc 1 1222 0 discriminator 3
 1182 0206 0133     		adds	r3, r3, #1
 1183              	.LVL139:
 1184 0208 DBB2     		uxtb	r3, r3
 1185              	.LVL140:
 1186              	.L77:
1222:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1187              		.loc 1 1222 0 is_stmt 0 discriminator 1
 1188 020a 102B     		cmp	r3, #16
 1189 020c F8D9     		bls	.L78
1225:../user/source/DLT645.c ****             }
1226:../user/source/DLT645.c ****             pucBuffer[17] = ucCheckData;
 1190              		.loc 1 1226 0 is_stmt 1
 1191 020e 6274     		strb	r2, [r4, #17]
1227:../user/source/DLT645.c ****             pucBuffer[18] = 0x16;
 1192              		.loc 1 1227 0
 1193 0210 1623     		movs	r3, #22
 1194              	.LVL141:
 1195 0212 A374     		strb	r3, [r4, #18]
 1196 0214 28E0     		b	.L60
 1197              	.LVL142:
 1198              	.L66:
1228:../user/source/DLT645.c ****         }
1229:../user/source/DLT645.c ****         break;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 44


1230:../user/source/DLT645.c ****     }
1231:../user/source/DLT645.c ****     case 0x36: //CÏàµçÁ÷
1232:../user/source/DLT645.c ****     {
1233:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Ccurrent);
 1199              		.loc 1 1233 0
 1200 0216 174B     		ldr	r3, .L82+8
 1201 0218 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 1202 021a C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1203 021c 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1204              	.LVL143:
 1205 021e FFF7FEFF 		bl	vGet_Current
 1206              	.LVL144:
1234:../user/source/DLT645.c **** 
1235:../user/source/DLT645.c ****         if (((pucBuffer[16] - 0x33) & 0x80) != 0)
 1207              		.loc 1 1235 0
 1208 0222 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1209 0224 333B     		subs	r3, r3, #51
 1210 0226 13F0800F 		tst	r3, #128
 1211 022a 1DD1     		bne	.L60
1236:../user/source/DLT645.c ****         {
1237:../user/source/DLT645.c ****             return;
1238:../user/source/DLT645.c ****         }
1239:../user/source/DLT645.c ****         if (blCurrentSingle_Modify_Method(&Acurrent, &Bcurrent, &Ccurrent)) //¸ù¾İAÏàºÍBÏàĞŞ¸ÄCÏàµç
 1212              		.loc 1 1239 0
 1213 022c 114A     		ldr	r2, .L82+8
 1214 022e 1049     		ldr	r1, .L82+4
 1215 0230 0E48     		ldr	r0, .L82
 1216 0232 FFF7FEFF 		bl	blCurrentSingle_Modify_Method
 1217              	.LVL145:
 1218 0236 B8B1     		cbz	r0, .L60
1240:../user/source/DLT645.c ****         {
1241:../user/source/DLT645.c ****             //BÏàµçÁ÷,Ê®½øÖÆÊı×ªBCDÂë
1242:../user/source/DLT645.c ****             vPut_Current(Ccurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
 1219              		.loc 1 1242 0
 1220 0238 0E49     		ldr	r1, .L82+8
 1221 023a 04F11003 		add	r3, r4, #16
 1222 023e 0093     		str	r3, [sp]
 1223 0240 04F10F03 		add	r3, r4, #15
 1224 0244 04F10E02 		add	r2, r4, #14
 1225 0248 03C9     		ldmia	r1, {r0, r1}
 1226 024a FFF7FEFF 		bl	vPut_Current
 1227              	.LVL146:
1145:../user/source/DLT645.c ****     switch (pucBuffer[11])
 1228              		.loc 1 1145 0
 1229 024e 0022     		movs	r2, #0
1243:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È16
 1230              		.loc 1 1243 0
 1231 0250 1346     		mov	r3, r2
 1232 0252 04E0     		b	.L79
 1233              	.LVL147:
 1234              	.L80:
1244:../user/source/DLT645.c ****             {
1245:../user/source/DLT645.c ****                 ucCheckData += pucBuffer[i];
 1235              		.loc 1 1245 0 discriminator 3
 1236 0254 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 1237 0256 0A44     		add	r2, r2, r1
 1238              	.LVL148:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 45


 1239 0258 D2B2     		uxtb	r2, r2
 1240              	.LVL149:
1243:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È16
 1241              		.loc 1 1243 0 discriminator 3
 1242 025a 0133     		adds	r3, r3, #1
 1243              	.LVL150:
 1244 025c DBB2     		uxtb	r3, r3
 1245              	.LVL151:
 1246              	.L79:
1243:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È16
 1247              		.loc 1 1243 0 is_stmt 0 discriminator 1
 1248 025e 102B     		cmp	r3, #16
 1249 0260 F8D9     		bls	.L80
1246:../user/source/DLT645.c ****             }
1247:../user/source/DLT645.c ****             pucBuffer[17] = ucCheckData;
 1250              		.loc 1 1247 0 is_stmt 1
 1251 0262 6274     		strb	r2, [r4, #17]
1248:../user/source/DLT645.c ****             pucBuffer[18] = 0x16;
 1252              		.loc 1 1248 0
 1253 0264 1623     		movs	r3, #22
 1254              	.LVL152:
 1255 0266 A374     		strb	r3, [r4, #18]
 1256              	.LVL153:
 1257              	.L60:
1249:../user/source/DLT645.c ****         }
1250:../user/source/DLT645.c ****         break;
1251:../user/source/DLT645.c ****     }
1252:../user/source/DLT645.c ****     }
1253:../user/source/DLT645.c **** }
 1258              		.loc 1 1253 0
 1259 0268 03B0     		add	sp, sp, #12
 1260              	.LCFI15:
 1261              		.cfi_def_cfa_offset 12
 1262              		@ sp needed
 1263 026a 30BD     		pop	{r4, r5, pc}
 1264              	.LVL154:
 1265              	.L83:
 1266              		.align	2
 1267              	.L82:
 1268 026c 00000000 		.word	.LANCHOR1
 1269 0270 00000000 		.word	.LANCHOR2
 1270 0274 00000000 		.word	.LANCHOR3
 1271 0278 1F85EB51 		.word	1374389535
 1272              		.cfi_endproc
 1273              	.LFE131:
 1275              		.section	.text.vCurrent_Limit_Modify,"ax",%progbits
 1276              		.align	2
 1277              		.global	vCurrent_Limit_Modify
 1278              		.thumb
 1279              		.thumb_func
 1281              	vCurrent_Limit_Modify:
 1282              	.LFB133:
1254:../user/source/DLT645.c **** 
1255:../user/source/DLT645.c **** /********************************************************************
1256:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı³õÊ¼»¯
1257:../user/source/DLT645.c ****  * Êä    Èë£ºµçÁ÷Ö¡Êı×éÖ¸Õë
1258:../user/source/DLT645.c ****  * Êä    ³ö£º
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 46


1259:../user/source/DLT645.c ****  *           
1260:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1261:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ16:13:30
1262:../user/source/DLT645.c ****  **********************************************************************/
1263:../user/source/DLT645.c **** void vCurrent_Limit_DefaultSet(void)
1264:../user/source/DLT645.c **** {
1265:../user/source/DLT645.c ****     uint32_t uwLimit;
1266:../user/source/DLT645.c ****     uint32_t uwCTratio;
1267:../user/source/DLT645.c **** /*±äÑ¹Æ÷ÈİÁ¿ºÍ¶î¶¨µçÁ÷³ö³§¹Ì»¯£¬²»ÔÊĞíĞŞ¸Ä*/
1268:../user/source/DLT645.c **** #ifdef TRANSFORMER_CAPACITY_50KVA
1269:../user/source/DLT645.c ****     TransFormer.capacity = 50;
1270:../user/source/DLT645.c ****     TransFormer.rated_current = 72000;
1271:../user/source/DLT645.c **** #endif
1272:../user/source/DLT645.c **** 
1273:../user/source/DLT645.c **** #ifdef TRANSFORMER_CAPACITY_100KVA
1274:../user/source/DLT645.c ****     TransFormer.capacity = 100;
1275:../user/source/DLT645.c ****     TransFormer.rated_current = 144000;
1276:../user/source/DLT645.c **** #endif
1277:../user/source/DLT645.c **** 
1278:../user/source/DLT645.c **** #ifdef TRANSFORMER_CAPACITY_200KVA
1279:../user/source/DLT645.c ****     TransFormer.capacity = 200;
1280:../user/source/DLT645.c ****     TransFormer.rated_current = 288000;
1281:../user/source/DLT645.c **** #endif
1282:../user/source/DLT645.c **** 
1283:../user/source/DLT645.c **** #ifdef TRANSFORMER_CAPACITY_400KVA
1284:../user/source/DLT645.c ****     TransFormer.capacity = 400;
1285:../user/source/DLT645.c ****     TransFormer.rated_current = 577000;
1286:../user/source/DLT645.c **** #endif
1287:../user/source/DLT645.c ****     /*´ÓFLASH¶ÁÈ¡±äÑ¹Æ÷¶ş´Î²àCT±ä±È*/
1288:../user/source/DLT645.c ****     uwCTratio = Flash_Read_Word(FLASH_CURRENT_LIMIT_RATIO_ADDR);
1289:../user/source/DLT645.c ****     /*±ä±ÈÎŞĞ§ £¬ÔòÎª³õ´ÎÉÏµç*/
1290:../user/source/DLT645.c ****     if (uwCTratio == 0xFFFFFFFF)
1291:../user/source/DLT645.c ****     {
1292:../user/source/DLT645.c ****         /*CTÉèÖÃÎª80*/
1293:../user/source/DLT645.c ****         TransFormer.CTratio = 80;
1294:../user/source/DLT645.c ****         /*´æ´¢CTÖµ*/
1295:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_CURRENT_LIMIT_RATIO_ADDR, TransFormer.CTratio);
1296:../user/source/DLT645.c ****     }
1297:../user/source/DLT645.c ****     else
1298:../user/source/DLT645.c ****     {
1299:../user/source/DLT645.c ****         /*Êı¾İÓĞĞ§£¬³õÊ¼»¯È«¾Ö±äÁ¿*/
1300:../user/source/DLT645.c ****         TransFormer.CTratio = uwCTratio;
1301:../user/source/DLT645.c ****     }
1302:../user/source/DLT645.c ****     /*¶ÁÈ¡µçÁ÷ÉÏÏŞ²ÎÊı*/
1303:../user/source/DLT645.c ****     uwLimit = Flash_Read_Word(FLASH_CURRENT_LIMIT_VALUE_ADDR);
1304:../user/source/DLT645.c ****     /*²ÎÊıÎŞĞ§£¬³õ´ÎÉÏµç*/
1305:../user/source/DLT645.c ****     if (uwLimit == 0xFFFFFFFF)
1306:../user/source/DLT645.c ****     {
1307:../user/source/DLT645.c ****         /*¸ù¾İ¶î¶¨µçÁ÷ºÍCT±ä±È¼ÆËãµçÁ÷ÉÏÏŞÖµ*/
1308:../user/source/DLT645.c ****         TransFormer.CT2_CurrentLimit = (TransFormer.rated_current / TransFormer.CTratio) * 3 * 8 / 
1309:../user/source/DLT645.c ****         /*´æ´¢µçÁ÷ÉÏÏŞÖµ*/
1310:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_CURRENT_LIMIT_VALUE_ADDR, TransFormer.CT2_CurrentLimit);
1311:../user/source/DLT645.c ****     }
1312:../user/source/DLT645.c ****     else
1313:../user/source/DLT645.c ****     {
1314:../user/source/DLT645.c ****         /*²ÎÊıÓĞĞ§£¬³õÊ¼»¯È«¾Ö±äÁ¿*/
1315:../user/source/DLT645.c ****         TransFormer.CT2_CurrentLimit = uwLimit;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 47


1316:../user/source/DLT645.c ****     }
1317:../user/source/DLT645.c **** }
1318:../user/source/DLT645.c **** 
1319:../user/source/DLT645.c **** /********************************************************************
1320:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º¸÷ÏàµçÁ÷ÖµÉÏÏŞĞŞ¸Äº¯Êı
1321:../user/source/DLT645.c ****  * Êä    Èë£ºµçÁ÷Ö¡Êı×éÖ¸Õë
1322:../user/source/DLT645.c ****  * Êä    ³ö£º
1323:../user/source/DLT645.c ****  *           
1324:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1325:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.1.30
1326:../user/source/DLT645.c ****  **********************************************************************/
1327:../user/source/DLT645.c **** void vCurrent_Limit_Modify(uint8_t *pucBuffer)
1328:../user/source/DLT645.c **** {
 1283              		.loc 1 1328 0
 1284              		.cfi_startproc
 1285              		@ args = 0, pretend = 0, frame = 0
 1286              		@ frame_needed = 0, uses_anonymous_args = 0
 1287              		@ link register save eliminated.
 1288              	.LVL155:
 1289 0000 7047     		bx	lr
 1290              		.cfi_endproc
 1291              	.LFE133:
 1293 0002 00BF     		.section	.text.Get_Estatus,"ax",%progbits
 1294              		.align	2
 1295              		.thumb
 1296              		.thumb_func
 1298              	Get_Estatus:
 1299              	.LFB141:
1329:../user/source/DLT645.c ****     uint32_t ABCcurrent;
1330:../user/source/DLT645.c ****     uint8_t i;
1331:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
1332:../user/source/DLT645.c **** #ifndef ENABLE_CURRENT_LIMIT
1333:../user/source/DLT645.c ****     return;
1334:../user/source/DLT645.c **** #endif
1335:../user/source/DLT645.c **** 
1336:../user/source/DLT645.c ****     switch (pucBuffer[11])
1337:../user/source/DLT645.c ****     {
1338:../user/source/DLT645.c ****     case 0x32: //ÈıÏàµçÁ÷Êı¾İ¿é
1339:../user/source/DLT645.c ****     {
1340:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Acurrent);
1341:../user/source/DLT645.c ****         vGet_Current(pucBuffer[17], pucBuffer[18], pucBuffer[19], &Bcurrent);
1342:../user/source/DLT645.c ****         vGet_Current(pucBuffer[20], pucBuffer[21], pucBuffer[22], &Ccurrent);
1343:../user/source/DLT645.c ****         if (Acurrent.isminus || Bcurrent.isminus || Ccurrent.isminus)
1344:../user/source/DLT645.c ****             return;
1345:../user/source/DLT645.c ****         ABCcurrent = Acurrent.value + Bcurrent.value + Ccurrent.value;
1346:../user/source/DLT645.c ****         if (ABCcurrent > TransFormer.CT2_CurrentLimit)
1347:../user/source/DLT645.c ****         {
1348:../user/source/DLT645.c ****             Acurrent.value = TransFormer.CT2_CurrentLimit * Acurrent.value / ABCcurrent;
1349:../user/source/DLT645.c ****             Bcurrent.value = TransFormer.CT2_CurrentLimit * Bcurrent.value / ABCcurrent;
1350:../user/source/DLT645.c ****             Ccurrent.value = TransFormer.CT2_CurrentLimit * Ccurrent.value / ABCcurrent;
1351:../user/source/DLT645.c ****         }
1352:../user/source/DLT645.c ****         Acurrent.value = (Acurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT2_Cu
1353:../user/source/DLT645.c ****         Bcurrent.value = (Bcurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT2_Cu
1354:../user/source/DLT645.c ****         Ccurrent.value = (Ccurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT2_Cu
1355:../user/source/DLT645.c ****         //AÏàµçÁ÷,Ê®½øÖÆÊı×ªBCDÂë
1356:../user/source/DLT645.c ****         vPut_Current(Acurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
1357:../user/source/DLT645.c ****         //BÏàµçÁ÷
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 48


1358:../user/source/DLT645.c ****         vPut_Current(Bcurrent, &pucBuffer[17], &pucBuffer[18], &pucBuffer[19]);
1359:../user/source/DLT645.c ****         //CÏàµçÁ÷
1360:../user/source/DLT645.c ****         vPut_Current(Ccurrent, &pucBuffer[20], &pucBuffer[21], &pucBuffer[22]);
1361:../user/source/DLT645.c ****         for (i = 0; i < 23; i++) //Êı¾İÓò³¤¶È23
1362:../user/source/DLT645.c ****         {
1363:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1364:../user/source/DLT645.c ****         }
1365:../user/source/DLT645.c ****         pucBuffer[23] = ucCheckData;
1366:../user/source/DLT645.c ****         pucBuffer[24] = 0x16;
1367:../user/source/DLT645.c ****         break;
1368:../user/source/DLT645.c ****     }
1369:../user/source/DLT645.c ****     case 0x34: //AÏàµçÁ÷
1370:../user/source/DLT645.c ****     {
1371:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Acurrent);
1372:../user/source/DLT645.c ****         Acurrent.value = (Acurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT2_Cu
1373:../user/source/DLT645.c ****         vPut_Current(Acurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
1374:../user/source/DLT645.c ****         for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
1375:../user/source/DLT645.c ****         {
1376:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1377:../user/source/DLT645.c ****         }
1378:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1379:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1380:../user/source/DLT645.c ****         break;
1381:../user/source/DLT645.c ****     }
1382:../user/source/DLT645.c ****     case 0x35: //BÏàµçÁ÷
1383:../user/source/DLT645.c ****     {
1384:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Bcurrent);
1385:../user/source/DLT645.c ****         Bcurrent.value = (Bcurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT2_Cu
1386:../user/source/DLT645.c ****         vPut_Current(Bcurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
1387:../user/source/DLT645.c ****         for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
1388:../user/source/DLT645.c ****         {
1389:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1390:../user/source/DLT645.c ****         }
1391:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1392:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1393:../user/source/DLT645.c **** 
1394:../user/source/DLT645.c ****         break;
1395:../user/source/DLT645.c ****     }
1396:../user/source/DLT645.c ****     case 0x36: //CÏàµçÁ÷
1397:../user/source/DLT645.c ****     {
1398:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Ccurrent);
1399:../user/source/DLT645.c ****         Ccurrent.value = (Ccurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT2_Cu
1400:../user/source/DLT645.c ****         vPut_Current(Bcurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
1401:../user/source/DLT645.c ****         for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
1402:../user/source/DLT645.c ****         {
1403:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1404:../user/source/DLT645.c ****         }
1405:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1406:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1407:../user/source/DLT645.c ****         break;
1408:../user/source/DLT645.c ****     }
1409:../user/source/DLT645.c ****     }
1410:../user/source/DLT645.c **** }
1411:../user/source/DLT645.c **** 
1412:../user/source/DLT645.c **** /*****************************************************
1413:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºĞŞ¸ÄµçÁ÷·½ÏòÖ¡
1414:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 49


1415:../user/source/DLT645.c ****  * Êä    ³ö£º
1416:../user/source/DLT645.c ****  *           
1417:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1418:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.12.13
1419:../user/source/DLT645.c ****  *******************************************************/
1420:../user/source/DLT645.c **** void vCurrentDirect_Modify(uint8_t *pucBuffer)
1421:../user/source/DLT645.c **** {
1422:../user/source/DLT645.c ****     uint8_t i = 0;
1423:../user/source/DLT645.c ****     uint8_t ucCheckData;
1424:../user/source/DLT645.c ****     switch (pucBuffer[11])
1425:../user/source/DLT645.c ****     {
1426:../user/source/DLT645.c ****     case 0x32: //ÈıÏàµçÁ÷Êı¾İ¿é
1427:../user/source/DLT645.c ****     {
1428:../user/source/DLT645.c ****         pucBuffer[16] = (pucBuffer[16] - 0x33) & 0xEF + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ»Æ
1429:../user/source/DLT645.c ****         pucBuffer[19] = (pucBuffer[19] - 0x33) & 0xEF + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ»Æ
1430:../user/source/DLT645.c ****         pucBuffer[22] = (pucBuffer[22] - 0x33) & 0xEF + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ»Æ
1431:../user/source/DLT645.c ****         for (i = 0; i < 23; i++)                              //Êı¾İÓò³¤¶È23
1432:../user/source/DLT645.c ****         {
1433:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1434:../user/source/DLT645.c ****         }
1435:../user/source/DLT645.c ****         pucBuffer[23] = ucCheckData;
1436:../user/source/DLT645.c ****         pucBuffer[24] = 0x16;
1437:../user/source/DLT645.c ****         break;
1438:../user/source/DLT645.c ****     }
1439:../user/source/DLT645.c ****     case 0x34: //AÏàµçÁ÷
1440:../user/source/DLT645.c ****     {
1441:../user/source/DLT645.c ****         pucBuffer[16] = (pucBuffer[16] - 0x33) & 0xEF + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ»Æ
1442:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                              //Êı¾İÓò³¤¶È17
1443:../user/source/DLT645.c ****         {
1444:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1445:../user/source/DLT645.c ****         }
1446:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1447:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1448:../user/source/DLT645.c ****         break;
1449:../user/source/DLT645.c ****     }
1450:../user/source/DLT645.c ****     case 0x35: //BÏàµçÁ÷
1451:../user/source/DLT645.c ****     {
1452:../user/source/DLT645.c ****         pucBuffer[16] = (pucBuffer[16] - 0x33) & 0xEF + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ»Æ
1453:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                              //Êı¾İÓò³¤¶È17
1454:../user/source/DLT645.c ****         {
1455:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1456:../user/source/DLT645.c ****         }
1457:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1458:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1459:../user/source/DLT645.c ****         break;
1460:../user/source/DLT645.c ****     }
1461:../user/source/DLT645.c ****     case 0x36: //CÏàµçÁ÷
1462:../user/source/DLT645.c ****     {
1463:../user/source/DLT645.c ****         pucBuffer[16] = (pucBuffer[16] - 0x33) & 0xEF + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ»Æ
1464:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                              //Êı¾İÓò³¤¶È16
1465:../user/source/DLT645.c ****         {
1466:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1467:../user/source/DLT645.c ****         }
1468:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1469:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1470:../user/source/DLT645.c ****         break;
1471:../user/source/DLT645.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 50


1472:../user/source/DLT645.c ****     }
1473:../user/source/DLT645.c **** }
1474:../user/source/DLT645.c **** 
1475:../user/source/DLT645.c **** /********************************************************************
1476:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı£ºµçÁ÷ÉÏÏŞÖµÉèÖÃ
1477:../user/source/DLT645.c ****  * Êä    Èë£ºÎ¬»¤Ö¡Êı×éÖ¸Õë
1478:../user/source/DLT645.c ****  * Êä    ³ö£º
1479:../user/source/DLT645.c ****  *           
1480:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1481:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ09:39:18
1482:../user/source/DLT645.c ****  * ½ÓÊÜ£º   68 AA AA AA AA AA AA 68 14 07 33 37 35 35 56 34 12 XX 16(123.456A)
1483:../user/source/DLT645.c ****  *³É¹¦»Ø¸´£º68 AA AA AA AA AA AA 68 94 00 XX 16
1484:../user/source/DLT645.c ****  *Ê§°Ü»Ø¸´£º68 AA AA AA AA AA AA 68 D4 00 XX 16
1485:../user/source/DLT645.c ****  **********************************************************************/
1486:../user/source/DLT645.c **** void vCurrent_Limit_Set(uint8_t *pucBuffer)
1487:../user/source/DLT645.c **** {
1488:../user/source/DLT645.c ****     uint8_t i;
1489:../user/source/DLT645.c ****     CURRENT limit;
1490:../user/source/DLT645.c ****     pucBuffer[8] = 0xD4;
1491:../user/source/DLT645.c ****     /*·ÇÖØ¹ıÔØµ÷Õû°æ±¾Ê±£¬»Ø¸´·ñÈÏÖ¡*/
1492:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
1493:../user/source/DLT645.c ****     /*ÊäÈëµÄ×Ö½Ú¼õÈ¥33ºó²»ÊÇBCDÂëÔõÃ´°ì£¿*/
1494:../user/source/DLT645.c ****     vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &limit);
1495:../user/source/DLT645.c ****     if (!limit.isminus && (limit.value > 0) && (limit.value <= 999999))
1496:../user/source/DLT645.c ****     {
1497:../user/source/DLT645.c ****         if (SUCCESS == Flash_Write_Word(FLASH_CURRENT_LIMIT_VALUE_ADDR, limit.value))
1498:../user/source/DLT645.c ****         {
1499:../user/source/DLT645.c ****             TransFormer.CT2_CurrentLimit = limit.value;
1500:../user/source/DLT645.c ****             //limit.value = TransFormer.rated_current / TransFormer.CTratio;
1501:../user/source/DLT645.c ****             //limit.value = limit.value * 8 / 10;
1502:../user/source/DLT645.c ****             //limit.value = limit.value * 3;
1503:../user/source/DLT645.c ****             TransFormer.CTratio = TransFormer.rated_current /
1504:../user/source/DLT645.c ****                                   (TransFormer.CT2_CurrentLimit / 3 * 10 / 8);
1505:../user/source/DLT645.c ****             if (SUCCESS == Flash_Write_Word(FLASH_CURRENT_LIMIT_RATIO_ADDR, TransFormer.CTratio))
1506:../user/source/DLT645.c ****             {
1507:../user/source/DLT645.c ****                 pucBuffer[8] = 0x94;
1508:../user/source/DLT645.c ****             }
1509:../user/source/DLT645.c ****         }
1510:../user/source/DLT645.c ****     }
1511:../user/source/DLT645.c **** #endif
1512:../user/source/DLT645.c **** 
1513:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
1514:../user/source/DLT645.c ****     pucBuffer[10] = 0;
1515:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
1516:../user/source/DLT645.c ****     {
1517:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
1518:../user/source/DLT645.c ****     }
1519:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
1520:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
1521:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
1522:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
1523:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
1524:../user/source/DLT645.c ****     {
1525:../user/source/DLT645.c ****         Uart_DataPut(USART3);
1526:../user/source/DLT645.c ****     }
1527:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
1528:../user/source/DLT645.c **** #ifdef ENABLE_INFR
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 51


1529:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
1530:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
1531:../user/source/DLT645.c ****     {
1532:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
1533:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
1534:../user/source/DLT645.c ****     }
1535:../user/source/DLT645.c **** #endif
1536:../user/source/DLT645.c **** }
1537:../user/source/DLT645.c **** 
1538:../user/source/DLT645.c **** /********************************************************************
1539:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı£ºCT±ä±ÈÉèÖÃ
1540:../user/source/DLT645.c ****  * Êä    Èë£ºÎ¬»¤Ö¡Êı×éÖ¸Õë
1541:../user/source/DLT645.c ****  * Êä    ³ö£º
1542:../user/source/DLT645.c ****  *           
1543:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1544:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ09:39:18
1545:../user/source/DLT645.c ****  * ½ÓÊÜ£º   68 AA AA AA AA AA AA 68 14 06 33 39 35 35 00 01 XX 16(±ä±È100)
1546:../user/source/DLT645.c ****  *³É¹¦»Ø¸´£º68 AA AA AA AA AA AA 68 94 00 XX 16
1547:../user/source/DLT645.c ****  *Ê§°Ü»Ø¸´£º68 AA AA AA AA AA AA 68 D4 00 XX 16
1548:../user/source/DLT645.c ****  **********************************************************************/
1549:../user/source/DLT645.c **** void vCurrent_CTRatio_Set(uint8_t *pucBuffer)
1550:../user/source/DLT645.c **** {
1551:../user/source/DLT645.c ****     uint8_t i;
1552:../user/source/DLT645.c ****     uint32_t uwdata = 0;
1553:../user/source/DLT645.c ****     pucBuffer[8] = 0xD4;
1554:../user/source/DLT645.c **** /*ÊäÈëµÄ×Ö½Ú¼õÈ¥33ºó²»ÊÇBCDÂëÔõÃ´°ì£¿*/
1555:../user/source/DLT645.c **** /*²»Ö§³ÖÖØ¹ıÔØĞŞ¸Ä¹¦ÄÜÊ±£¬»Ø¸´·ñÈÏÖ¡*/
1556:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
1557:../user/source/DLT645.c ****     uwdata = Get_Voltage(pucBuffer[14], pucBuffer[15]);
1558:../user/source/DLT645.c ****     if ((uwdata > 0) && (uwdata <= 9999))
1559:../user/source/DLT645.c ****     {
1560:../user/source/DLT645.c ****         if (SUCCESS == Flash_Write_Word(FLASH_CURRENT_LIMIT_RATIO_ADDR, uwdata))
1561:../user/source/DLT645.c ****         {
1562:../user/source/DLT645.c ****             TransFormer.CTratio = uwdata;
1563:../user/source/DLT645.c ****             TransFormer.CT2_CurrentLimit = (TransFormer.rated_current / TransFormer.CTratio) * 24 /
1564:../user/source/DLT645.c ****             if (SUCCESS == Flash_Write_Word(FLASH_CURRENT_LIMIT_VALUE_ADDR, TransFormer.CT2_Current
1565:../user/source/DLT645.c ****             {
1566:../user/source/DLT645.c ****                 pucBuffer[8] = 0x94;
1567:../user/source/DLT645.c ****             }
1568:../user/source/DLT645.c ****         }
1569:../user/source/DLT645.c ****     }
1570:../user/source/DLT645.c **** #endif
1571:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
1572:../user/source/DLT645.c ****     pucBuffer[10] = 0;
1573:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
1574:../user/source/DLT645.c ****     {
1575:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
1576:../user/source/DLT645.c ****     }
1577:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
1578:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
1579:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
1580:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
1581:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
1582:../user/source/DLT645.c ****     {
1583:../user/source/DLT645.c ****         Uart_DataPut(USART3);
1584:../user/source/DLT645.c ****     }
1585:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 52


1586:../user/source/DLT645.c **** #ifdef ENABLE_INFR
1587:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
1588:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
1589:../user/source/DLT645.c ****     {
1590:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
1591:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
1592:../user/source/DLT645.c ****     }
1593:../user/source/DLT645.c **** #endif
1594:../user/source/DLT645.c **** }
1595:../user/source/DLT645.c **** 
1596:../user/source/DLT645.c **** /********************************************************************
1597:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı²éÑ¯£ºµçÁ÷ÉÏÏŞÖµ
1598:../user/source/DLT645.c ****  * Êä    Èë£ºÎ¬»¤Ö¡Êı×éÖ¸Õë
1599:../user/source/DLT645.c ****  * Êä    ³ö£º
1600:../user/source/DLT645.c ****  *           
1601:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1602:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ09:39:18
1603:../user/source/DLT645.c ****  * ½ÓÊÕ£º   68 AA AA AA AA AA AA 68 11 04 33 38 35 35 XX 16
1604:../user/source/DLT645.c ****  *³É¹¦»Ø¸´£º68 AA AA AA AA AA AA 68 91 07 33 38 35 35 56 34 12 XX 16(123.456)
1605:../user/source/DLT645.c ****  **********************************************************************/
1606:../user/source/DLT645.c **** void vCurrent_Limit_ReadSet(uint8_t *pucBuffer)
1607:../user/source/DLT645.c **** {
1608:../user/source/DLT645.c ****     uint8_t i;
1609:../user/source/DLT645.c ****     CURRENT limit;
1610:../user/source/DLT645.c ****     limit.value = TransFormer.CT2_CurrentLimit;
1611:../user/source/DLT645.c ****     limit.isminus = false;
1612:../user/source/DLT645.c ****     vPut_Current(limit, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
1613:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
1614:../user/source/DLT645.c ****     pucBuffer[9] = 0x07;
1615:../user/source/DLT645.c ****     pucBuffer[17] = 0;
1616:../user/source/DLT645.c ****     for (i = 0; i < 17; i++)
1617:../user/source/DLT645.c ****     {
1618:../user/source/DLT645.c ****         pucBuffer[17] += pucBuffer[i];
1619:../user/source/DLT645.c ****     }
1620:../user/source/DLT645.c ****     pucBuffer[18] = 0x16;
1621:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
1622:../user/source/DLT645.c ****     uc645DataDomainLength = 7;
1623:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 19);
1624:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
1625:../user/source/DLT645.c ****     {
1626:../user/source/DLT645.c ****         Uart_DataPut(USART3);
1627:../user/source/DLT645.c ****     }
1628:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
1629:../user/source/DLT645.c **** #ifdef ENABLE_INFR
1630:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 19);
1631:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
1632:../user/source/DLT645.c ****     {
1633:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
1634:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
1635:../user/source/DLT645.c ****     }
1636:../user/source/DLT645.c **** #endif
1637:../user/source/DLT645.c **** }
1638:../user/source/DLT645.c **** 
1639:../user/source/DLT645.c **** /********************************************************************
1640:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı²éÑ¯£ºCT±ä±È
1641:../user/source/DLT645.c ****  * Êä    Èë£ºÎ¬»¤Ö¡Êı×éÖ¸Õë
1642:../user/source/DLT645.c ****  * Êä    ³ö£º
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 53


1643:../user/source/DLT645.c ****  *           
1644:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1645:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ09:39:18
1646:../user/source/DLT645.c ****  * ½ÓÊÕ£º   68 AA AA AA AA AA AA 68 11 04 33 3A 35 35 XX 16
1647:../user/source/DLT645.c ****  *³É¹¦»Ø¸´£º68 AA AA AA AA AA AA 68 91 06 33 3A 35 35 00 01 XX 16(±ä±È100)
1648:../user/source/DLT645.c ****  **********************************************************************/
1649:../user/source/DLT645.c **** void vCurrent_CTRatio_ReadSet(uint8_t *pucBuffer)
1650:../user/source/DLT645.c **** {
1651:../user/source/DLT645.c **** 
1652:../user/source/DLT645.c ****     uint8_t i;
1653:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
1654:../user/source/DLT645.c ****     pucBuffer[9] = 0x06;
1655:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(TransFormer.CTratio);
1656:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(TransFormer.CTratio);
1657:../user/source/DLT645.c ****     pucBuffer[16] = 0;
1658:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
1659:../user/source/DLT645.c ****     {
1660:../user/source/DLT645.c ****         pucBuffer[16] += pucBuffer[i];
1661:../user/source/DLT645.c ****     }
1662:../user/source/DLT645.c ****     pucBuffer[17] = 0x16;
1663:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
1664:../user/source/DLT645.c ****     uc645DataDomainLength = 6;
1665:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 18);
1666:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
1667:../user/source/DLT645.c ****     {
1668:../user/source/DLT645.c ****         Uart_DataPut(USART3);
1669:../user/source/DLT645.c ****     }
1670:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
1671:../user/source/DLT645.c **** #ifdef ENABLE_INFR
1672:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 18);
1673:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
1674:../user/source/DLT645.c ****     {
1675:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
1676:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
1677:../user/source/DLT645.c ****     }
1678:../user/source/DLT645.c **** #endif
1679:../user/source/DLT645.c **** }
1680:../user/source/DLT645.c **** 
1681:../user/source/DLT645.c **** /********************************************************************
1682:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı²éÑ¯£º±äÑ¹Æ÷ÈİÁ¿
1683:../user/source/DLT645.c ****  * Êä    Èë£ºÎ¬»¤Ö¡Êı×éÖ¸Õë
1684:../user/source/DLT645.c ****  * Êä    ³ö£º
1685:../user/source/DLT645.c ****  *           
1686:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1687:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ09:39:18
1688:../user/source/DLT645.c ****  * ½ÓÊÕ£º   68 AA AA AA AA AA AA 68 11 04 33 3B 35 35 XX 16
1689:../user/source/DLT645.c ****  *³É¹¦»Ø¸´£º68 AA AA AA AA AA AA 68 91 06 33 3B 35 35 00 01 XX 16(±ä±È100)
1690:../user/source/DLT645.c ****  **********************************************************************/
1691:../user/source/DLT645.c **** void vCurrent_TransFormer_Capacity_ReadSet(uint8_t *pucBuffer)
1692:../user/source/DLT645.c **** {
1693:../user/source/DLT645.c ****     uint8_t i;
1694:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
1695:../user/source/DLT645.c ****     pucBuffer[9] = 0x06;
1696:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(TransFormer.capacity);
1697:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(TransFormer.capacity);
1698:../user/source/DLT645.c ****     pucBuffer[16] = 0;
1699:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 54


1700:../user/source/DLT645.c ****     {
1701:../user/source/DLT645.c ****         pucBuffer[16] += pucBuffer[i];
1702:../user/source/DLT645.c ****     }
1703:../user/source/DLT645.c ****     pucBuffer[17] = 0x16;
1704:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
1705:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
1706:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 18);
1707:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
1708:../user/source/DLT645.c ****     {
1709:../user/source/DLT645.c ****         Uart_DataPut(USART3);
1710:../user/source/DLT645.c ****     }
1711:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
1712:../user/source/DLT645.c **** #ifdef ENABLE_INFR
1713:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 18);
1714:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
1715:../user/source/DLT645.c ****     {
1716:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
1717:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
1718:../user/source/DLT645.c ****     }
1719:../user/source/DLT645.c **** #endif
1720:../user/source/DLT645.c **** }
1721:../user/source/DLT645.c **** 
1722:../user/source/DLT645.c **** /*****************************************************
1723:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷Ö¡¼ÆÊıÇåÁã
1724:../user/source/DLT645.c ****  * Êä    Èë£º
1725:../user/source/DLT645.c ****  * Êä    ³ö£ºÎŞ
1726:../user/source/DLT645.c ****  * Ëµ	  Ã÷£ºÊÕµ½µçÑ¹»Ø¸´Ö¡ºó£¬½«µçÁ÷Ö¡¼ÆÊıÇåÁã
1727:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1728:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.12.13
1729:../user/source/DLT645.c ****  *******************************************************/
1730:../user/source/DLT645.c **** void vCurrent_Count_Clear(void)
1731:../user/source/DLT645.c **** {
1732:../user/source/DLT645.c ****     Acurrent.count = 0;
1733:../user/source/DLT645.c ****     Bcurrent.count = 0;
1734:../user/source/DLT645.c ****     Ccurrent.count = 0;
1735:../user/source/DLT645.c **** }
1736:../user/source/DLT645.c **** /********************************************************************
1737:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º´ÓÊı¾İÖ¡ÖĞ¶ÁÈ¡×´Ì¬×Ö
1738:../user/source/DLT645.c ****  * Êä    Èë£º×´Ì¬×ÖµÍ×Ö½Ú¡¢¸ß×Ö½Ú
1739:../user/source/DLT645.c ****  * Êä    ³ö£º¶ş½øÖÆµÄ×´Ì¬×Ö
1740:../user/source/DLT645.c ****  *           
1741:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1742:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.5.23
1743:../user/source/DLT645.c ****  **********************************************************************/
1744:../user/source/DLT645.c **** uint16_t Get_Estatus(uint8_t LowByte, uint8_t HighByte)
1745:../user/source/DLT645.c **** {
 1300              		.loc 1 1745 0
 1301              		.cfi_startproc
 1302              		@ args = 0, pretend = 0, frame = 0
 1303              		@ frame_needed = 0, uses_anonymous_args = 0
 1304              		@ link register save eliminated.
 1305              	.LVL156:
1746:../user/source/DLT645.c ****     uint16_t estatus;
1747:../user/source/DLT645.c ****     estatus = ((HighByte - 0x33) & 0x00FF) << 8; //00010000 00000000
 1306              		.loc 1 1747 0
 1307 0000 3339     		subs	r1, r1, #51
 1308              	.LVL157:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 55


1748:../user/source/DLT645.c ****     estatus |= (LowByte - 0X33) & 0X00FF;
 1309              		.loc 1 1748 0
 1310 0002 3338     		subs	r0, r0, #51
 1311              	.LVL158:
 1312 0004 C0B2     		uxtb	r0, r0
 1313 0006 40EA0120 		orr	r0, r0, r1, lsl #8
 1314              	.LVL159:
1749:../user/source/DLT645.c ****     return estatus;
1750:../user/source/DLT645.c **** }
 1315              		.loc 1 1750 0
 1316 000a 80B2     		uxth	r0, r0
 1317 000c 7047     		bx	lr
 1318              		.cfi_endproc
 1319              	.LFE141:
 1321 000e 00BF     		.section	.text.Estatus_Modify_CurrentEvent,"ax",%progbits
 1322              		.align	2
 1323              		.global	Estatus_Modify_CurrentEvent
 1324              		.thumb
 1325              		.thumb_func
 1327              	Estatus_Modify_CurrentEvent:
 1328              	.LFB128:
 966:../user/source/DLT645.c ****     uint16_t estatus = 0x0000;
 1329              		.loc 1 966 0
 1330              		.cfi_startproc
 1331              		@ args = 0, pretend = 0, frame = 0
 1332              		@ frame_needed = 0, uses_anonymous_args = 0
 1333              	.LVL160:
 1334 0000 10B5     		push	{r4, lr}
 1335              	.LCFI16:
 1336              		.cfi_def_cfa_offset 8
 1337              		.cfi_offset 4, -8
 1338              		.cfi_offset 14, -4
 1339 0002 0446     		mov	r4, r0
 1340              	.LVL161:
 970:../user/source/DLT645.c ****     {
 1341              		.loc 1 970 0
 1342 0004 837A     		ldrb	r3, [r0, #10]	@ zero_extendqisi2
 1343 0006 323B     		subs	r3, r3, #50
 1344 0008 082B     		cmp	r3, #8
 1345 000a 72D8     		bhi	.L87
 1346 000c DFE803F0 		tbb	[pc, r3]
 1347              	.L89:
 1348 0010 3D       		.byte	(.L88-.L89)/2
 1349 0011 71       		.byte	(.L87-.L89)/2
 1350 0012 71       		.byte	(.L87-.L89)/2
 1351 0013 71       		.byte	(.L87-.L89)/2
 1352 0014 71       		.byte	(.L87-.L89)/2
 1353 0015 05       		.byte	(.L90-.L89)/2
 1354 0016 13       		.byte	(.L91-.L89)/2
 1355 0017 21       		.byte	(.L92-.L89)/2
 1356 0018 2F       		.byte	(.L93-.L89)/2
 1357 0019 00       		.p2align 1
 1358              	.L90:
 975:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
 1359              		.loc 1 975 0
 1360 001a C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1361 001c 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 56


 1362              	.LVL162:
 1363 001e FFF7FEFF 		bl	Get_Estatus
 1364              	.LVL163:
 1365 0022 20F4A870 		bic	r0, r0, #336
 1366 0026 83B2     		uxth	r3, r0
 1367              	.LVL164:
 976:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
 1368              		.loc 1 976 0
 1369 0028 DAB2     		uxtb	r2, r3
 1370 002a 3332     		adds	r2, r2, #51
 1371 002c A273     		strb	r2, [r4, #14]
 977:../user/source/DLT645.c ****         break;
 1372              		.loc 1 977 0
 1373 002e 1B0A     		lsrs	r3, r3, #8
 1374              	.LVL165:
 1375 0030 3333     		adds	r3, r3, #51
 1376 0032 E373     		strb	r3, [r4, #15]
 978:../user/source/DLT645.c ****     }
 1377              		.loc 1 978 0
 1378 0034 5DE0     		b	.L87
 1379              	.LVL166:
 1380              	.L91:
 982:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 1381              		.loc 1 982 0
 1382 0036 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1383 0038 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1384              	.LVL167:
 1385 003a FFF7FEFF 		bl	Get_Estatus
 1386              	.LVL168:
 1387 003e 20F4A870 		bic	r0, r0, #336
 1388 0042 83B2     		uxth	r3, r0
 1389              	.LVL169:
 983:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 1390              		.loc 1 983 0
 1391 0044 DAB2     		uxtb	r2, r3
 1392 0046 3332     		adds	r2, r2, #51
 1393 0048 A273     		strb	r2, [r4, #14]
 984:../user/source/DLT645.c ****         break;
 1394              		.loc 1 984 0
 1395 004a 1B0A     		lsrs	r3, r3, #8
 1396              	.LVL170:
 1397 004c 3333     		adds	r3, r3, #51
 1398 004e E373     		strb	r3, [r4, #15]
 985:../user/source/DLT645.c ****     }
 1399              		.loc 1 985 0
 1400 0050 4FE0     		b	.L87
 1401              	.LVL171:
 1402              	.L92:
 989:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 1403              		.loc 1 989 0
 1404 0052 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1405 0054 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1406              	.LVL172:
 1407 0056 FFF7FEFF 		bl	Get_Estatus
 1408              	.LVL173:
 1409 005a 20F4A870 		bic	r0, r0, #336
 1410 005e 83B2     		uxth	r3, r0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 57


 1411              	.LVL174:
 990:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 1412              		.loc 1 990 0
 1413 0060 DAB2     		uxtb	r2, r3
 1414 0062 3332     		adds	r2, r2, #51
 1415 0064 A273     		strb	r2, [r4, #14]
 991:../user/source/DLT645.c ****         break;
 1416              		.loc 1 991 0
 1417 0066 1B0A     		lsrs	r3, r3, #8
 1418              	.LVL175:
 1419 0068 3333     		adds	r3, r3, #51
 1420 006a E373     		strb	r3, [r4, #15]
 992:../user/source/DLT645.c ****     }
 1421              		.loc 1 992 0
 1422 006c 41E0     		b	.L87
 1423              	.LVL176:
 1424              	.L93:
 996:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 1425              		.loc 1 996 0
 1426 006e C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1427 0070 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1428              	.LVL177:
 1429 0072 FFF7FEFF 		bl	Get_Estatus
 1430              	.LVL178:
 1431 0076 20F00800 		bic	r0, r0, #8
 1432 007a 83B2     		uxth	r3, r0
 1433              	.LVL179:
 997:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 1434              		.loc 1 997 0
 1435 007c DAB2     		uxtb	r2, r3
 1436 007e 3332     		adds	r2, r2, #51
 1437 0080 A273     		strb	r2, [r4, #14]
 998:../user/source/DLT645.c ****         break;
 1438              		.loc 1 998 0
 1439 0082 1B0A     		lsrs	r3, r3, #8
 1440              	.LVL180:
 1441 0084 3333     		adds	r3, r3, #51
 1442 0086 E373     		strb	r3, [r4, #15]
 999:../user/source/DLT645.c ****     }
 1443              		.loc 1 999 0
 1444 0088 33E0     		b	.L87
 1445              	.LVL181:
 1446              	.L88:
1005:../user/source/DLT645.c ****         pucBuffer[20] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 1447              		.loc 1 1005 0
 1448 008a 417D     		ldrb	r1, [r0, #21]	@ zero_extendqisi2
 1449 008c 007D     		ldrb	r0, [r0, #20]	@ zero_extendqisi2
 1450              	.LVL182:
 1451 008e FFF7FEFF 		bl	Get_Estatus
 1452              	.LVL183:
 1453 0092 20F4A870 		bic	r0, r0, #336
 1454 0096 83B2     		uxth	r3, r0
 1455              	.LVL184:
1006:../user/source/DLT645.c ****         pucBuffer[21] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 1456              		.loc 1 1006 0
 1457 0098 DAB2     		uxtb	r2, r3
 1458 009a 3332     		adds	r2, r2, #51
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 58


 1459 009c 2275     		strb	r2, [r4, #20]
1007:../user/source/DLT645.c ****         //×´Ì¬×Ö5,BÏà×´Ì¬×Ö
 1460              		.loc 1 1007 0
 1461 009e 1B0A     		lsrs	r3, r3, #8
 1462              	.LVL185:
 1463 00a0 3333     		adds	r3, r3, #51
 1464 00a2 6375     		strb	r3, [r4, #21]
1009:../user/source/DLT645.c ****         pucBuffer[22] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
 1465              		.loc 1 1009 0
 1466 00a4 E17D     		ldrb	r1, [r4, #23]	@ zero_extendqisi2
 1467 00a6 A07D     		ldrb	r0, [r4, #22]	@ zero_extendqisi2
 1468              	.LVL186:
 1469 00a8 FFF7FEFF 		bl	Get_Estatus
 1470              	.LVL187:
 1471 00ac 20F4A870 		bic	r0, r0, #336
 1472 00b0 83B2     		uxth	r3, r0
 1473              	.LVL188:
1010:../user/source/DLT645.c ****         pucBuffer[23] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
 1474              		.loc 1 1010 0
 1475 00b2 DAB2     		uxtb	r2, r3
 1476 00b4 3332     		adds	r2, r2, #51
 1477 00b6 A275     		strb	r2, [r4, #22]
1011:../user/source/DLT645.c ****         //×´Ì¬×Ö6,CÏà×´Ì¬×Ö
 1478              		.loc 1 1011 0
 1479 00b8 1B0A     		lsrs	r3, r3, #8
 1480              	.LVL189:
 1481 00ba 3333     		adds	r3, r3, #51
 1482 00bc E375     		strb	r3, [r4, #23]
1013:../user/source/DLT645.c ****         pucBuffer[24] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
 1483              		.loc 1 1013 0
 1484 00be 617E     		ldrb	r1, [r4, #25]	@ zero_extendqisi2
 1485 00c0 207E     		ldrb	r0, [r4, #24]	@ zero_extendqisi2
 1486              	.LVL190:
 1487 00c2 FFF7FEFF 		bl	Get_Estatus
 1488              	.LVL191:
 1489 00c6 20F4A870 		bic	r0, r0, #336
 1490 00ca 83B2     		uxth	r3, r0
 1491              	.LVL192:
1014:../user/source/DLT645.c ****         pucBuffer[25] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
 1492              		.loc 1 1014 0
 1493 00cc DAB2     		uxtb	r2, r3
 1494 00ce 3332     		adds	r2, r2, #51
 1495 00d0 2276     		strb	r2, [r4, #24]
1015:../user/source/DLT645.c ****         //×´Ì¬×Ö7£¬ºÏÏà×´Ì¬×Ö
 1496              		.loc 1 1015 0
 1497 00d2 1B0A     		lsrs	r3, r3, #8
 1498              	.LVL193:
 1499 00d4 3333     		adds	r3, r3, #51
 1500 00d6 6376     		strb	r3, [r4, #25]
1017:../user/source/DLT645.c ****         pucBuffer[26] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
 1501              		.loc 1 1017 0
 1502 00d8 E17E     		ldrb	r1, [r4, #27]	@ zero_extendqisi2
 1503 00da A07E     		ldrb	r0, [r4, #26]	@ zero_extendqisi2
 1504              	.LVL194:
 1505 00dc FFF7FEFF 		bl	Get_Estatus
 1506              	.LVL195:
 1507 00e0 20F00800 		bic	r0, r0, #8
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 59


 1508 00e4 83B2     		uxth	r3, r0
 1509              	.LVL196:
1018:../user/source/DLT645.c ****         pucBuffer[27] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
 1510              		.loc 1 1018 0
 1511 00e6 DAB2     		uxtb	r2, r3
 1512 00e8 3332     		adds	r2, r2, #51
 1513 00ea A276     		strb	r2, [r4, #26]
1019:../user/source/DLT645.c ****         break;
 1514              		.loc 1 1019 0
 1515 00ec 1B0A     		lsrs	r3, r3, #8
 1516              	.LVL197:
 1517 00ee 3333     		adds	r3, r3, #51
 1518 00f0 E376     		strb	r3, [r4, #27]
 1519              	.LVL198:
 1520              	.L87:
 969:../user/source/DLT645.c ****     switch (pucBuffer[10])
 1521              		.loc 1 969 0
 1522 00f2 0023     		movs	r3, #0
1025:../user/source/DLT645.c ****     {
 1523              		.loc 1 1025 0
 1524 00f4 1A46     		mov	r2, r3
 1525 00f6 03E0     		b	.L94
 1526              	.LVL199:
 1527              	.L95:
1027:../user/source/DLT645.c ****     }
 1528              		.loc 1 1027 0 discriminator 3
 1529 00f8 A15C     		ldrb	r1, [r4, r2]	@ zero_extendqisi2
 1530 00fa 0B44     		add	r3, r3, r1
 1531              	.LVL200:
 1532 00fc DBB2     		uxtb	r3, r3
 1533              	.LVL201:
1025:../user/source/DLT645.c ****     {
 1534              		.loc 1 1025 0 discriminator 3
 1535 00fe 0132     		adds	r2, r2, #1
 1536              	.LVL202:
 1537              	.L94:
1025:../user/source/DLT645.c ****     {
 1538              		.loc 1 1025 0 is_stmt 0 discriminator 1
 1539 0100 0349     		ldr	r1, .L97
 1540 0102 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1541 0104 01F10A00 		add	r0, r1, #10
 1542 0108 8242     		cmp	r2, r0
 1543 010a F5DB     		blt	.L95
1029:../user/source/DLT645.c **** }
 1544              		.loc 1 1029 0 is_stmt 1
 1545 010c 2354     		strb	r3, [r4, r0]
 1546 010e 10BD     		pop	{r4, pc}
 1547              	.LVL203:
 1548              	.L98:
 1549              		.align	2
 1550              	.L97:
 1551 0110 00000000 		.word	.LANCHOR0
 1552              		.cfi_endproc
 1553              	.LFE128:
 1555              		.section	.text.GetLowByte,"ax",%progbits
 1556              		.align	2
 1557              		.thumb
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 60


 1558              		.thumb_func
 1560              	GetLowByte:
 1561              	.LFB142:
1751:../user/source/DLT645.c **** /********************************************************************
1752:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½«µçÑ¹¸öÎ»×ª»»ÎªµÍ×Ö½Ú
1753:../user/source/DLT645.c ****  * Êä    Èë£ºÊ®½øÖÆµçÑ¹Öµ
1754:../user/source/DLT645.c ****  * Êä    ³ö£º	BCDÂë
1755:../user/source/DLT645.c ****  *           
1756:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1757:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
1758:../user/source/DLT645.c ****  **********************************************************************/
1759:../user/source/DLT645.c **** uint8_t GetLowByte(int Voltage)
1760:../user/source/DLT645.c **** {
 1562              		.loc 1 1760 0
 1563              		.cfi_startproc
 1564              		@ args = 0, pretend = 0, frame = 0
 1565              		@ frame_needed = 0, uses_anonymous_args = 0
 1566              		@ link register save eliminated.
 1567              	.LVL204:
1761:../user/source/DLT645.c ****     uint8_t LowByte = 0x00;
1762:../user/source/DLT645.c ****     LowByte = (((((Voltage % 1000) % 100) / 10) << 4) & 0xF0) + ((((Voltage % 1000) % 100) % 10) & 
 1568              		.loc 1 1762 0
 1569 0000 1149     		ldr	r1, .L100
 1570 0002 81FB0031 		smull	r3, r1, r1, r0
 1571 0006 C317     		asrs	r3, r0, #31
 1572 0008 C3EBA111 		rsb	r1, r3, r1, asr #6
 1573 000c 4FF47A73 		mov	r3, #1000
 1574 0010 03FB1101 		mls	r1, r3, r1, r0
 1575 0014 0D4A     		ldr	r2, .L100+4
 1576 0016 82FB0132 		smull	r3, r2, r2, r1
 1577 001a CB17     		asrs	r3, r1, #31
 1578 001c C3EB6212 		rsb	r2, r3, r2, asr #5
 1579 0020 6423     		movs	r3, #100
 1580 0022 03FB1212 		mls	r2, r3, r2, r1
 1581 0026 0A48     		ldr	r0, .L100+8
 1582              	.LVL205:
 1583 0028 80FB0230 		smull	r3, r0, r0, r2
 1584 002c D317     		asrs	r3, r2, #31
 1585 002e C3EBA000 		rsb	r0, r3, r0, asr #2
 1586 0032 00EB8001 		add	r1, r0, r0, lsl #2
 1587 0036 4B00     		lsls	r3, r1, #1
 1588 0038 D31A     		subs	r3, r2, r3
 1589 003a 03F00F03 		and	r3, r3, #15
 1590 003e 03EB0010 		add	r0, r3, r0, lsl #4
 1591 0042 3330     		adds	r0, r0, #51
 1592              	.LVL206:
1763:../user/source/DLT645.c ****     return LowByte;
1764:../user/source/DLT645.c **** }
 1593              		.loc 1 1764 0
 1594 0044 C0B2     		uxtb	r0, r0
 1595 0046 7047     		bx	lr
 1596              	.L101:
 1597              		.align	2
 1598              	.L100:
 1599 0048 D34D6210 		.word	274877907
 1600 004c 1F85EB51 		.word	1374389535
 1601 0050 67666666 		.word	1717986919
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 61


 1602              		.cfi_endproc
 1603              	.LFE142:
 1605              		.section	.text.GetHighByte,"ax",%progbits
 1606              		.align	2
 1607              		.thumb
 1608              		.thumb_func
 1610              	GetHighByte:
 1611              	.LFB143:
1765:../user/source/DLT645.c **** 
1766:../user/source/DLT645.c **** /********************************************************************
1767:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½«µçÑ¹°ÙÎ»¡¢Ê®Î»×ª»»ÎªµÍ×Ö½Ú
1768:../user/source/DLT645.c ****  * Êä    Èë£ºÊ®½øÖÆµçÑ¹Öµ
1769:../user/source/DLT645.c ****  * Êä    ³ö£º	BCDÂë
1770:../user/source/DLT645.c ****  *           
1771:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1772:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
1773:../user/source/DLT645.c ****  **********************************************************************/
1774:../user/source/DLT645.c **** uint8_t GetHighByte(int Voltage)
1775:../user/source/DLT645.c **** {
 1612              		.loc 1 1775 0
 1613              		.cfi_startproc
 1614              		@ args = 0, pretend = 0, frame = 0
 1615              		@ frame_needed = 0, uses_anonymous_args = 0
 1616              		@ link register save eliminated.
 1617              	.LVL207:
1776:../user/source/DLT645.c ****     uint8_t HighByte = 0x00;
1777:../user/source/DLT645.c ****     HighByte = (((uint8_t)(Voltage / 1000) << 4) & 0xF0) + ((uint8_t)((Voltage % 1000) / 100) & 0x0
 1618              		.loc 1 1777 0
 1619 0000 0C49     		ldr	r1, .L103
 1620 0002 81FB0031 		smull	r3, r1, r1, r0
 1621 0006 C317     		asrs	r3, r0, #31
 1622 0008 C3EBA111 		rsb	r1, r3, r1, asr #6
 1623 000c 0B01     		lsls	r3, r1, #4
 1624 000e 03F47F62 		and	r2, r3, #4080
 1625 0012 4FF47A73 		mov	r3, #1000
 1626 0016 03FB1103 		mls	r3, r3, r1, r0
 1627 001a 0748     		ldr	r0, .L103+4
 1628              	.LVL208:
 1629 001c 80FB0310 		smull	r1, r0, r0, r3
 1630 0020 DB17     		asrs	r3, r3, #31
 1631 0022 C3EB6013 		rsb	r3, r3, r0, asr #5
 1632 0026 03F00F03 		and	r3, r3, #15
 1633 002a 1344     		add	r3, r3, r2
 1634 002c 03F13300 		add	r0, r3, #51
 1635              	.LVL209:
1778:../user/source/DLT645.c ****     return HighByte;
1779:../user/source/DLT645.c **** }
 1636              		.loc 1 1779 0
 1637 0030 C0B2     		uxtb	r0, r0
 1638 0032 7047     		bx	lr
 1639              	.L104:
 1640              		.align	2
 1641              	.L103:
 1642 0034 D34D6210 		.word	274877907
 1643 0038 1F85EB51 		.word	1374389535
 1644              		.cfi_endproc
 1645              	.LFE143:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 62


 1647              		.section	.text.Get_Energy,"ax",%progbits
 1648              		.align	2
 1649              		.thumb
 1650              		.thumb_func
 1652              	Get_Energy:
 1653              	.LFB145:
1780:../user/source/DLT645.c **** 
1781:../user/source/DLT645.c **** /********************************************************************
1782:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÈÕ¶³½áÊı¾İĞŞ¸Ä¹¦ÄÜ³õÊ¼»¯£ºÄ¬ÈÏĞŞ¸Ä£»
1783:../user/source/DLT645.c ****  * Êä    Èë£º
1784:../user/source/DLT645.c ****  * Êä    ³ö£º
1785:../user/source/DLT645.c ****  *
1786:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1787:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.9.6
1788:../user/source/DLT645.c ****  **********************************************************************/
1789:../user/source/DLT645.c **** //void vDayfrozen_Change_Init(void)
1790:../user/source/DLT645.c **** void vEnergy_Modify_Init(void)
1791:../user/source/DLT645.c **** {
1792:../user/source/DLT645.c ****     uint8_t tmp;
1793:../user/source/DLT645.c ****     /*ÈÕ¶³½áĞŞ¸ÄÊ¹ÄÜÎ»³õÊ¼»¯*/
1794:../user/source/DLT645.c ****     Dayfrozen_Change_State = EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR);
1795:../user/source/DLT645.c ****     tmp = EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR);
1796:../user/source/DLT645.c ****     /*ÅĞ¶ÏflashÖĞÊÇ·ñÒÑ´æ´¢µçÑ¹ĞŞ¸Ä±ÈÀı*/
1797:../user/source/DLT645.c ****     if (tmp == 0xFF)
1798:../user/source/DLT645.c ****     {
1799:../user/source/DLT645.c ****         /*Ê¹ÓÃÄ¬ÈÏĞŞ¸Ä±ÈÀı*/
1800:../user/source/DLT645.c ****         ucDayfrozen_Modify_Ratio = UCDAYFROZEN_CHANGE_DEFAULE_RATIO;
1801:../user/source/DLT645.c ****     }
1802:../user/source/DLT645.c ****     else
1803:../user/source/DLT645.c ****     {
1804:../user/source/DLT645.c ****         ucDayfrozen_Modify_Ratio = tmp;
1805:../user/source/DLT645.c ****     }
1806:../user/source/DLT645.c **** }
1807:../user/source/DLT645.c **** 
1808:../user/source/DLT645.c **** /********************************************************************
1809:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º´ÓÊı¾İÖ¡ÖĞ¶ÁÈ¡µçÄÜÁ¿Öµ
1810:../user/source/DLT645.c ****  * Êä    Èë£ºµçÄÜÁ¿Öµ´ÓµÍµ½¸ßËÄ¸ö×Ö½Ú
1811:../user/source/DLT645.c ****  * Êä    ³ö£ºÊ®½øÖÆµÄµçÄÜÁ¿Öµ
1812:../user/source/DLT645.c ****  * Òª    Çó£ºÊä³öÖµÀ©´ó100±¶
1813:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1814:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
1815:../user/source/DLT645.c ****  **********************************************************************/
1816:../user/source/DLT645.c **** uint32_t Get_Energy(uint8_t FstByte, uint8_t ScdByte, uint8_t TirdByte, uint8_t ForthByte)
1817:../user/source/DLT645.c **** {
 1654              		.loc 1 1817 0
 1655              		.cfi_startproc
 1656              		@ args = 0, pretend = 0, frame = 0
 1657              		@ frame_needed = 0, uses_anonymous_args = 0
 1658              		@ link register save eliminated.
 1659              	.LVL210:
 1660 0000 30B4     		push	{r4, r5}
 1661              	.LCFI17:
 1662              		.cfi_def_cfa_offset 8
 1663              		.cfi_offset 4, -8
 1664              		.cfi_offset 5, -4
 1665              	.LVL211:
1818:../user/source/DLT645.c ****     uint32_t Energy = 0;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 63


1819:../user/source/DLT645.c ****     Energy = BCD2DEC(ForthByte - 0x33) * 1000000 +
 1666              		.loc 1 1819 0
 1667 0002 333B     		subs	r3, r3, #51
 1668              	.LVL212:
 1669 0004 C3F30314 		ubfx	r4, r3, #4, #4
 1670 0008 04EB8404 		add	r4, r4, r4, lsl #2
 1671 000c 6500     		lsls	r5, r4, #1
 1672 000e 03F00F03 		and	r3, r3, #15
 1673 0012 2B44     		add	r3, r3, r5
1820:../user/source/DLT645.c ****              BCD2DEC(TirdByte - 0x33) * 10000 +
 1674              		.loc 1 1820 0
 1675 0014 333A     		subs	r2, r2, #51
 1676              	.LVL213:
 1677 0016 C2F30314 		ubfx	r4, r2, #4, #4
 1678 001a 04EB8404 		add	r4, r4, r4, lsl #2
 1679 001e 6500     		lsls	r5, r4, #1
 1680 0020 02F00F02 		and	r2, r2, #15
 1681 0024 2A44     		add	r2, r2, r5
 1682 0026 42F21074 		movw	r4, #10000
 1683 002a 04FB02F2 		mul	r2, r4, r2
1819:../user/source/DLT645.c ****              BCD2DEC(TirdByte - 0x33) * 10000 +
 1684              		.loc 1 1819 0
 1685 002e 0D4C     		ldr	r4, .L107
 1686 0030 04FB0323 		mla	r3, r4, r3, r2
1821:../user/source/DLT645.c ****              BCD2DEC(ScdByte - 0x33) * 100 +
 1687              		.loc 1 1821 0
 1688 0034 3339     		subs	r1, r1, #51
 1689              	.LVL214:
 1690 0036 C1F30312 		ubfx	r2, r1, #4, #4
 1691 003a 02EB8202 		add	r2, r2, r2, lsl #2
 1692 003e 5400     		lsls	r4, r2, #1
 1693 0040 01F00F01 		and	r1, r1, #15
 1694 0044 2144     		add	r1, r1, r4
1820:../user/source/DLT645.c ****              BCD2DEC(TirdByte - 0x33) * 10000 +
 1695              		.loc 1 1820 0
 1696 0046 6422     		movs	r2, #100
 1697 0048 02FB0131 		mla	r1, r2, r1, r3
1822:../user/source/DLT645.c ****              BCD2DEC(FstByte - 0x33);
 1698              		.loc 1 1822 0
 1699 004c 3338     		subs	r0, r0, #51
 1700              	.LVL215:
 1701 004e C0F30313 		ubfx	r3, r0, #4, #4
 1702 0052 03EB8303 		add	r3, r3, r3, lsl #2
 1703 0056 5A00     		lsls	r2, r3, #1
 1704 0058 00F00F00 		and	r0, r0, #15
 1705 005c 1044     		add	r0, r0, r2
 1706              	.LVL216:
1823:../user/source/DLT645.c ****     return Energy;
1824:../user/source/DLT645.c **** }
 1707              		.loc 1 1824 0
 1708 005e 0844     		add	r0, r0, r1
 1709              	.LVL217:
 1710 0060 30BC     		pop	{r4, r5}
 1711              	.LCFI18:
 1712              		.cfi_restore 5
 1713              		.cfi_restore 4
 1714              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 64


 1715 0062 7047     		bx	lr
 1716              	.L108:
 1717              		.align	2
 1718              	.L107:
 1719 0064 40420F00 		.word	1000000
 1720              		.cfi_endproc
 1721              	.LFE145:
 1723              		.section	.text.Fill_Energy,"ax",%progbits
 1724              		.align	2
 1725              		.thumb
 1726              		.thumb_func
 1728              	Fill_Energy:
 1729              	.LFB146:
1825:../user/source/DLT645.c **** 
1826:../user/source/DLT645.c **** /********************************************************************
1827:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½«µçÄÜÁ¿Öµ×ª»¯Îª645Ö¡×Ö½Ú
1828:../user/source/DLT645.c ****  * Êä    Èë£ºµçÄÜÁ¿Öµ£¬ËÄ×Ö½Ú°´´«ÊäË³ĞòÊäÈë
1829:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
1830:../user/source/DLT645.c ****  * Òª    Çó£ºÊä³öÖµÀ©´ó100±¶
1831:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1832:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.10
1833:../user/source/DLT645.c ****  **********************************************************************/
1834:../user/source/DLT645.c **** void Fill_Energy(uint32_t energy, uint8_t *pFstByte, uint8_t *pScdByte, uint8_t *pTirdByte, uint8_t
1835:../user/source/DLT645.c **** {
 1730              		.loc 1 1835 0
 1731              		.cfi_startproc
 1732              		@ args = 4, pretend = 0, frame = 0
 1733              		@ frame_needed = 0, uses_anonymous_args = 0
 1734              	.LVL218:
 1735 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1736              	.LCFI19:
 1737              		.cfi_def_cfa_offset 28
 1738              		.cfi_offset 4, -28
 1739              		.cfi_offset 5, -24
 1740              		.cfi_offset 6, -20
 1741              		.cfi_offset 7, -16
 1742              		.cfi_offset 8, -12
 1743              		.cfi_offset 9, -8
 1744              		.cfi_offset 14, -4
1836:../user/source/DLT645.c ****     *pFstByte = DEC2BCD(energy % 100) + 0x33;
 1745              		.loc 1 1836 0
 1746 0004 2C4D     		ldr	r5, .L111
 1747 0006 A5FB004C 		umull	r4, ip, r5, r0
 1748 000a 4FEA5C18 		lsr	r8, ip, #5
 1749 000e 6426     		movs	r6, #100
 1750 0010 06FB1808 		mls	r8, r6, r8, r0
 1751 0014 294C     		ldr	r4, .L111+4
 1752 0016 A4FB08E7 		umull	lr, r7, r4, r8
 1753 001a 4FEAD70E 		lsr	lr, r7, #3
 1754 001e 0EEB8E09 		add	r9, lr, lr, lsl #2
 1755 0022 4FEA4907 		lsl	r7, r9, #1
 1756 0026 C7EB0807 		rsb	r7, r7, r8
 1757 002a 47EA0E17 		orr	r7, r7, lr, lsl #4
 1758 002e 3337     		adds	r7, r7, #51
 1759 0030 0F70     		strb	r7, [r1]
1837:../user/source/DLT645.c ****     *pScdByte = DEC2BCD(energy / 100 % 100) + 0x33;
 1760              		.loc 1 1837 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 65


 1761 0032 4FEA5C1C 		lsr	ip, ip, #5
 1762 0036 A5FB0C1E 		umull	r1, lr, r5, ip
 1763              	.LVL219:
 1764 003a 4FEA5E1E 		lsr	lr, lr, #5
 1765 003e 06FB1ECE 		mls	lr, r6, lr, ip
 1766 0042 A4FB0E71 		umull	r7, r1, r4, lr
 1767 0046 CF08     		lsrs	r7, r1, #3
 1768 0048 07EB870C 		add	ip, r7, r7, lsl #2
 1769 004c 4FEA4C01 		lsl	r1, ip, #1
 1770 0050 C1EB0E01 		rsb	r1, r1, lr
 1771 0054 41EA0711 		orr	r1, r1, r7, lsl #4
 1772 0058 3331     		adds	r1, r1, #51
 1773 005a 1170     		strb	r1, [r2]
1838:../user/source/DLT645.c ****     *pTirdByte = DEC2BCD(energy / 10000 % 100) + 0x33;
 1774              		.loc 1 1838 0
 1775 005c 184A     		ldr	r2, .L111+8
 1776              	.LVL220:
 1777 005e A2FB0012 		umull	r1, r2, r2, r0
 1778 0062 520B     		lsrs	r2, r2, #13
 1779 0064 A5FB0217 		umull	r1, r7, r5, r2
 1780 0068 7F09     		lsrs	r7, r7, #5
 1781 006a 06FB1727 		mls	r7, r6, r7, r2
 1782 006e A4FB0712 		umull	r1, r2, r4, r7
 1783 0072 D108     		lsrs	r1, r2, #3
 1784 0074 01EB810E 		add	lr, r1, r1, lsl #2
 1785 0078 4FEA4E02 		lsl	r2, lr, #1
 1786 007c 9646     		mov	lr, r2
 1787 007e BA1A     		subs	r2, r7, r2
 1788 0080 42EA0112 		orr	r2, r2, r1, lsl #4
 1789 0084 3332     		adds	r2, r2, #51
 1790 0086 1A70     		strb	r2, [r3]
1839:../user/source/DLT645.c ****     *pForthByte = DEC2BCD(energy / 1000000 % 100) + 0x33;
 1791              		.loc 1 1839 0
 1792 0088 0E4B     		ldr	r3, .L111+12
 1793              	.LVL221:
 1794 008a A3FB0030 		umull	r3, r0, r3, r0
 1795              	.LVL222:
 1796 008e 800C     		lsrs	r0, r0, #18
 1797 0090 A5FB0035 		umull	r3, r5, r5, r0
 1798 0094 6D09     		lsrs	r5, r5, #5
 1799 0096 06FB1505 		mls	r5, r6, r5, r0
 1800 009a A4FB0534 		umull	r3, r4, r4, r5
 1801 009e E408     		lsrs	r4, r4, #3
 1802 00a0 04EB8402 		add	r2, r4, r4, lsl #2
 1803 00a4 5300     		lsls	r3, r2, #1
 1804 00a6 EB1A     		subs	r3, r5, r3
 1805 00a8 43EA0414 		orr	r4, r3, r4, lsl #4
 1806 00ac 3334     		adds	r4, r4, #51
 1807 00ae 079B     		ldr	r3, [sp, #28]
 1808 00b0 1C70     		strb	r4, [r3]
 1809 00b2 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1810              	.LVL223:
 1811              	.L112:
 1812 00b6 00BF     		.align	2
 1813              	.L111:
 1814 00b8 1F85EB51 		.word	1374389535
 1815 00bc CDCCCCCC 		.word	-858993459
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 66


 1816 00c0 5917B7D1 		.word	-776530087
 1817 00c4 83DE1B43 		.word	1125899907
 1818              		.cfi_endproc
 1819              	.LFE146:
 1821              		.section	.text.vVoltage_SetMaxMaxValue,"ax",%progbits
 1822              		.align	2
 1823              		.global	vVoltage_SetMaxMaxValue
 1824              		.thumb
 1825              		.thumb_func
 1827              	vVoltage_SetMaxMaxValue:
 1828              	.LFB159:
1840:../user/source/DLT645.c **** }
1841:../user/source/DLT645.c **** 
1842:../user/source/DLT645.c **** /********************************************************************
1843:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµ±Ç°/ÈÕ¶³½áµçÄÜÁ¿µ÷Õû²ßÂÔ
1844:../user/source/DLT645.c ****  * Êä    Èë£º
1845:../user/source/DLT645.c ****  * Êä    ³ö£º
1846:../user/source/DLT645.c ****  *           
1847:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1848:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.8
1849:../user/source/DLT645.c ****  **********************************************************************/
1850:../user/source/DLT645.c **** uint32_t vNow_Frozen_Modify_Mothod(uint32_t nowenergy, uint32_t RealValueAddr, uint32_t ModifiedVal
1851:../user/source/DLT645.c **** {
1852:../user/source/DLT645.c ****     uint32_t RealValue;
1853:../user/source/DLT645.c ****     uint32_t Modified_Value;
1854:../user/source/DLT645.c ****     uint64_t i;
1855:../user/source/DLT645.c ****     /*¶ÁÈ¡´æ´¢µÄÉÏ´ÎÕæÊµÖµºÍĞŞ¸ÄÖµ*/
1856:../user/source/DLT645.c ****     RealValue = Flash_Read_Word(RealValueAddr);
1857:../user/source/DLT645.c ****     Modified_Value = Flash_Read_Word(ModifiedValueAddr);
1858:../user/source/DLT645.c ****     /*ÖÕ¶ËµÚÒ»´ÎÊ¹ÓÃ*/
1859:../user/source/DLT645.c ****     if ((RealValue == 0XFFFFFFFF) || (Modified_Value == 0XFFFFFFFF))
1860:../user/source/DLT645.c ****     {
1861:../user/source/DLT645.c ****         /*ÉÏËÍÖµ´æ´¢ÎªÕæÊµÖµºÍĞŞ¸ÄÖµ*/
1862:../user/source/DLT645.c ****         Flash_Write_Word(RealValueAddr, nowenergy);
1863:../user/source/DLT645.c ****         Flash_Write_Word(ModifiedValueAddr, nowenergy);
1864:../user/source/DLT645.c ****         /*²»ĞŞ¸Ä*/
1865:../user/source/DLT645.c ****         return nowenergy;
1866:../user/source/DLT645.c ****     }
1867:../user/source/DLT645.c ****     else
1868:../user/source/DLT645.c ****     {
1869:../user/source/DLT645.c ****         /*¼ÆËãÕæÊµµÄÔöÁ¿£¬´òÕÛºóÀÛ¼Óµ½ÉÏ´ÎµÄĞŞ¸ÄÖµ*/
1870:../user/source/DLT645.c ****         /*µç±íÖµÒç³öºó¹éÁã*/
1871:../user/source/DLT645.c ****         if (nowenergy < RealValue)
1872:../user/source/DLT645.c ****         {
1873:../user/source/DLT645.c ****             //i= ((uint64_t)(nowenergy+ 99999999- RealValue)* ucDayfrozen_Modify_Ratio)/100;
1874:../user/source/DLT645.c ****             /*2018-6-27 11:04:38£ºÔö¼ÓËÄÉáÎåÈë£¬µ¥´ÎÔö¼Ó0.05kwhÒÔÏÂÊ±£¬²»ĞŞ¸Ä*/
1875:../user/source/DLT645.c ****             i = ((uint64_t)(nowenergy + 99999999 - RealValue) * ucDayfrozen_Modify_Ratio + 50) / 10
1876:../user/source/DLT645.c ****         }
1877:../user/source/DLT645.c ****         else
1878:../user/source/DLT645.c ****         {
1879:../user/source/DLT645.c ****             i = ((uint64_t)(nowenergy - RealValue) * ucDayfrozen_Modify_Ratio + 50) / 100;
1880:../user/source/DLT645.c ****         }
1881:../user/source/DLT645.c ****         Modified_Value += (uint32_t)i;
1882:../user/source/DLT645.c ****         /*ÀÛ¼ÆÖµÒç³öºó¹éÁã*/
1883:../user/source/DLT645.c ****         Modified_Value = (Modified_Value > 99999999 ? Modified_Value - 99999999 : Modified_Value);
1884:../user/source/DLT645.c ****         /*½«ÉÏËÍÖµ´æ´¢ÎªÕæÊµÖµ*/
1885:../user/source/DLT645.c ****         Flash_Write_Word(RealValueAddr, nowenergy);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 67


1886:../user/source/DLT645.c ****         /*ĞÂµÄĞŞ¸ÄÖµ¸²¸Ç¾ÉÖµ´æ´¢*/
1887:../user/source/DLT645.c ****         Flash_Write_Word(ModifiedValueAddr, Modified_Value);
1888:../user/source/DLT645.c ****         /*·µ»ØĞŞ¸ÄÖµ*/
1889:../user/source/DLT645.c ****         return Modified_Value;
1890:../user/source/DLT645.c ****     }
1891:../user/source/DLT645.c **** }
1892:../user/source/DLT645.c **** 
1893:../user/source/DLT645.c **** /********************************************************************
1894:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµ±Ç°µçÁ¿Êı¾İĞŞ¸Äº¯Êı
1895:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
1896:../user/source/DLT645.c ****  * Êä    ³ö£º	none
1897:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1898:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.9
1899:../user/source/DLT645.c ****  case ID_00010000:	//µ±Ç°ÕıÏòÓĞ¹¦×ÜµçÄÜ
1900:../user/source/DLT645.c ****  case ID_00010100:	//µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜ
1901:../user/source/DLT645.c ****  case ID_00010200:	//µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ2µçÄÜ
1902:../user/source/DLT645.c ****  case ID_00010300:	//µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ3µçÄÜ
1903:../user/source/DLT645.c ****  case ID_00010400:	//µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ4µçÄÜ
1904:../user/source/DLT645.c ****  case ID_0001FF00:	//µ±Ç°ÕıÏòÓĞ¹¦µçÄÜÊı¾İ¿é
1905:../user/source/DLT645.c ****  case ID_00150000:	//µ±Ç°AÏàÕıÏòÓĞ¹¦
1906:../user/source/DLT645.c ****  case ID_00290000:	//µ±Ç°BÏàÕıÏòÓĞ¹¦
1907:../user/source/DLT645.c ****  case ID_003D0000:	//µ±Ç°CÏàÕıÏòÓĞ¹¦
1908:../user/source/DLT645.c ****  **********************************************************************/
1909:../user/source/DLT645.c **** void vNowEnergy_Modifier(uint8_t *pucBuffer)
1910:../user/source/DLT645.c **** {
1911:../user/source/DLT645.c ****     uint16_t i;
1912:../user/source/DLT645.c ****     uint32_t energy;    //Êı¾İÓòµÄµÚÒ»¸öµçÁ¿Öµ
1913:../user/source/DLT645.c ****     uint32_t energy_F1; //·ÑÂÊ1µçÁ¿×¨ÓÃ±äÁ¿
1914:../user/source/DLT645.c ****     uint32_t energy_F2; //·ÑÂÊ2µçÁ¿×¨ÓÃ±äÁ¿
1915:../user/source/DLT645.c ****     uint32_t energy_F3; //·ÑÂÊ3µçÁ¿×¨ÓÃ±äÁ¿
1916:../user/source/DLT645.c ****     uint32_t energy_F4; //·ÑÂÊ4µçÁ¿×¨ÓÃ±äÁ¿
1917:../user/source/DLT645.c ****     if (Dayfrozen_Change_State == 0x00)
1918:../user/source/DLT645.c ****         return;
1919:../user/source/DLT645.c ****     energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);
1920:../user/source/DLT645.c ****     switch (pucBuffer[11])
1921:../user/source/DLT645.c ****     {
1922:../user/source/DLT645.c ****     case 0x33:
1923:../user/source/DLT645.c ****     {
1924:../user/source/DLT645.c ****         switch (pucBuffer[12])
1925:../user/source/DLT645.c ****         {
1926:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦×Ü*/
1927:../user/source/DLT645.c ****         case 0x34:
1928:../user/source/DLT645.c ****         {
1929:../user/source/DLT645.c ****             energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_ALL_NOWENERGY_ADDR,
1930:../user/source/DLT645.c ****                                                FLASH_MODIFIED_ALL_NOWENERGY_ADDR);
1931:../user/source/DLT645.c ****             break;
1932:../user/source/DLT645.c ****         }
1933:../user/source/DLT645.c ****         /*AÏàÕıÏòÓĞ¹¦*/
1934:../user/source/DLT645.c ****         case 0x48:
1935:../user/source/DLT645.c ****         {
1936:../user/source/DLT645.c ****             energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_A_NOWENERGY_ADDR,
1937:../user/source/DLT645.c ****                                                FLASH_MODIFIED_A_NOWENERGY_ADDR);
1938:../user/source/DLT645.c ****             break;
1939:../user/source/DLT645.c ****         }
1940:../user/source/DLT645.c ****         /*BÏàÕıÏòÓĞ¹¦*/
1941:../user/source/DLT645.c ****         case 0x5c:
1942:../user/source/DLT645.c ****         {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 68


1943:../user/source/DLT645.c ****             energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_B_NOWENERGY_ADDR,
1944:../user/source/DLT645.c ****                                                FLASH_MODIFIED_B_NOWENERGY_ADDR);
1945:../user/source/DLT645.c ****             break;
1946:../user/source/DLT645.c ****         }
1947:../user/source/DLT645.c ****         /*CÏàÕıÏòÓĞ¹¦*/
1948:../user/source/DLT645.c ****         case 0x70:
1949:../user/source/DLT645.c ****         {
1950:../user/source/DLT645.c ****             energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_C_NOWENERGY_ADDR,
1951:../user/source/DLT645.c ****                                                FLASH_MODIFIED_C_NOWENERGY_ADDR);
1952:../user/source/DLT645.c ****             break;
1953:../user/source/DLT645.c ****         }
1954:../user/source/DLT645.c ****         default:
1955:../user/source/DLT645.c ****             break;
1956:../user/source/DLT645.c ****         }
1957:../user/source/DLT645.c ****         break;
1958:../user/source/DLT645.c ****     }
1959:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×Ü·ÑÂÊ1*/
1960:../user/source/DLT645.c ****     case 0x34:
1961:../user/source/DLT645.c ****     {
1962:../user/source/DLT645.c ****         energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_F1_NOWENERGY_ADDR,
1963:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F1_NOWENERGY_ADDR);
1964:../user/source/DLT645.c ****         break;
1965:../user/source/DLT645.c ****     }
1966:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×Ü·ÑÂÊ2*/
1967:../user/source/DLT645.c ****     case 0x35:
1968:../user/source/DLT645.c ****     {
1969:../user/source/DLT645.c ****         energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_F2_NOWENERGY_ADDR,
1970:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F2_NOWENERGY_ADDR);
1971:../user/source/DLT645.c ****         break;
1972:../user/source/DLT645.c ****     }
1973:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×Ü·ÑÂÊ3*/
1974:../user/source/DLT645.c ****     case 0x36:
1975:../user/source/DLT645.c ****     {
1976:../user/source/DLT645.c ****         energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_F3_NOWENERGY_ADDR,
1977:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F3_NOWENERGY_ADDR);
1978:../user/source/DLT645.c ****         break;
1979:../user/source/DLT645.c ****     }
1980:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×Ü·ÑÂÊ4*/
1981:../user/source/DLT645.c ****     case 0x37:
1982:../user/source/DLT645.c ****     {
1983:../user/source/DLT645.c ****         energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_F4_NOWENERGY_ADDR,
1984:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F4_NOWENERGY_ADDR);
1985:../user/source/DLT645.c ****         break;
1986:../user/source/DLT645.c ****     }
1987:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×ÜÊı¾İ¿é*/
1988:../user/source/DLT645.c ****     case 0x32:
1989:../user/source/DLT645.c ****     {
1990:../user/source/DLT645.c ****         /*			2018-6-27 09:07:02£ºÖØÇìÕÙ²âÈÕ¶³½áÊı¾İ¿é·¢ÏÖ×ÜºÍËÄ·ÑÂÊÖ®ºÍÓĞ²îÒì£¬
1991:../user/source/DLT645.c **** 	 *			Ô­ÒòÎª³ËÒÔ0.9ºóĞ¡ÊıµãºóµÚÈıÎ»±»ºöÂÔ£¬×ÜµçÁ¿´óÓÚ·Ö·ÑÂÊµçÁ¿Ö®ºÍ£¬
1992:../user/source/DLT645.c **** 	 *			½«×ÜµçÁ¿¼ÆËã·½·¨¸ÄÎª½«ËÄ·ÑÂÊ·ÖµçÁ¿Ïà¼Ó
1993:../user/source/DLT645.c **** 	 *			energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_ALL_NOWENERGY_ADDR,FLASH_MODIFIED_ALL_N
1994:../user/source/DLT645.c **** 	 *			*/
1995:../user/source/DLT645.c ****         energy_F1 = Get_Energy(pucBuffer[18], pucBuffer[19], pucBuffer[20], pucBuffer[21]);
1996:../user/source/DLT645.c ****         energy_F1 = vNow_Frozen_Modify_Mothod(energy_F1, FLASH_REAL_F1_NOWENERGY_ADDR,
1997:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F1_NOWENERGY_ADDR);
1998:../user/source/DLT645.c ****         energy_F2 = Get_Energy(pucBuffer[22], pucBuffer[23], pucBuffer[24], pucBuffer[25]);
1999:../user/source/DLT645.c ****         energy_F2 = vNow_Frozen_Modify_Mothod(energy_F2, FLASH_REAL_F2_NOWENERGY_ADDR,
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 69


2000:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F2_NOWENERGY_ADDR);
2001:../user/source/DLT645.c ****         energy_F3 = Get_Energy(pucBuffer[26], pucBuffer[27], pucBuffer[28], pucBuffer[29]);
2002:../user/source/DLT645.c ****         energy_F3 = vNow_Frozen_Modify_Mothod(energy_F3, FLASH_REAL_F3_NOWENERGY_ADDR,
2003:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F3_NOWENERGY_ADDR);
2004:../user/source/DLT645.c **** 
2005:../user/source/DLT645.c ****         energy_F4 = Get_Energy(pucBuffer[30], pucBuffer[31], pucBuffer[32], pucBuffer[33]);
2006:../user/source/DLT645.c ****         energy_F4 = vNow_Frozen_Modify_Mothod(energy_F4, FLASH_REAL_F4_NOWENERGY_ADDR,
2007:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F4_NOWENERGY_ADDR);
2008:../user/source/DLT645.c ****         /*¶ÁÈ¡×ÜµçÁ¿ÕæÊµÖµ*/
2009:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);
2010:../user/source/DLT645.c ****         /*±£´æ×ÜµçÁ¿ÕæÊµÖµ£¬µ¥³­×ÜµçÁ¿Ê±Ê¹ÓÃ*/
2011:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_REAL_ALL_NOWENERGY_ADDR, energy);
2012:../user/source/DLT645.c ****         /*¸ù¾İ·Ö·ÑÂÊµçÁ¿¼ÆËãĞŞ¸ÄºóµÄ×ÜµçÁ¿*/
2013:../user/source/DLT645.c ****         energy = energy_F1 + energy_F2 + energy_F3 + energy_F4;
2014:../user/source/DLT645.c ****         /*±£´æĞŞ¸ÄÖµ£¬µ¥³­×ÜµçÁ¿Ê±Ê¹ÓÃ*/
2015:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_MODIFIED_ALL_NOWENERGY_ADDR, energy);
2016:../user/source/DLT645.c ****         break;
2017:../user/source/DLT645.c ****     }
2018:../user/source/DLT645.c ****     default:
2019:../user/source/DLT645.c ****         break;
2020:../user/source/DLT645.c ****     }
2021:../user/source/DLT645.c ****     switch (pucBuffer[11])
2022:../user/source/DLT645.c ****     {
2023:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×Ü£¬»òA/B/CÏàÕıÏòÓĞ¹¦*/
2024:../user/source/DLT645.c ****     case 0x33:
2025:../user/source/DLT645.c ****     case 0x34:
2026:../user/source/DLT645.c ****     case 0x35:
2027:../user/source/DLT645.c ****     case 0x36:
2028:../user/source/DLT645.c ****     case 0x37:
2029:../user/source/DLT645.c ****     {
2030:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2031:../user/source/DLT645.c ****         pucBuffer[18] = 0;
2032:../user/source/DLT645.c ****         for (i = 0; i < 18; i++)
2033:../user/source/DLT645.c ****         {
2034:../user/source/DLT645.c ****             pucBuffer[18] += pucBuffer[i];
2035:../user/source/DLT645.c ****         }
2036:../user/source/DLT645.c ****         pucBuffer[19] = 0x16;
2037:../user/source/DLT645.c ****         break;
2038:../user/source/DLT645.c ****     }
2039:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×ÜÊı¾İ¿é*/
2040:../user/source/DLT645.c ****     case 0x32:
2041:../user/source/DLT645.c ****     {
2042:../user/source/DLT645.c ****         /*×Ü*/
2043:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2044:../user/source/DLT645.c ****         /*¼â*/
2045:../user/source/DLT645.c ****         Fill_Energy(energy_F1, &pucBuffer[18], &pucBuffer[19], &pucBuffer[20], &pucBuffer[21]);
2046:../user/source/DLT645.c ****         /*·å*/
2047:../user/source/DLT645.c ****         Fill_Energy(energy_F2, &pucBuffer[22], &pucBuffer[23], &pucBuffer[24], &pucBuffer[25]);
2048:../user/source/DLT645.c ****         /*Æ½*/
2049:../user/source/DLT645.c ****         Fill_Energy(energy_F3, &pucBuffer[26], &pucBuffer[27], &pucBuffer[28], &pucBuffer[29]);
2050:../user/source/DLT645.c ****         /*¹È*/
2051:../user/source/DLT645.c ****         Fill_Energy(energy_F4, &pucBuffer[30], &pucBuffer[31], &pucBuffer[32], &pucBuffer[33]);
2052:../user/source/DLT645.c ****         pucBuffer[34] = 0;
2053:../user/source/DLT645.c ****         for (i = 0; i < 34; i++)
2054:../user/source/DLT645.c ****         {
2055:../user/source/DLT645.c ****             pucBuffer[34] += pucBuffer[i];
2056:../user/source/DLT645.c ****         }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 70


2057:../user/source/DLT645.c ****         pucBuffer[35] = 0x16;
2058:../user/source/DLT645.c ****         break;
2059:../user/source/DLT645.c ****     }
2060:../user/source/DLT645.c ****     default:
2061:../user/source/DLT645.c ****         break;
2062:../user/source/DLT645.c ****     }
2063:../user/source/DLT645.c **** }
2064:../user/source/DLT645.c **** 
2065:../user/source/DLT645.c **** /********************************************************************
2066:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÈÕ¶³½áÊı¾İĞŞ¸Äº¯Êı
2067:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2068:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2069:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2070:../user/source/DLT645.c ****  * Ç°1ÈÕ¶³½áµÚ¶şÌìÕÙ²â¿ªÊ¼¸Ä£¬
2071:../user/source/DLT645.c ****  * Ç°2ÈÕ¶³½áµÚÈıÌìÕÙ²â¿ªÊ¼¸Ä£¬
2072:../user/source/DLT645.c ****  * Ç°3ÈÕ¶«½áµÚËÄÌìÕÙ²â¿ªÊ¼¸Ä
2073:../user/source/DLT645.c ****  * ÈôÉÏµç3ÈÕÄÚ£¬Ç°1ÈÕ¡¢Ç°2ÈÕ¡¢Ç°3ÈÕ¶³½áÃ¿ÌìÕÙ²âµÄ´ÎÊı²»È«ÊÇÒ»´Î£¬ÔòÎŞ·¨
2074:../user/source/DLT645.c ****  * ÊµÏÖ£¬¹Ê²»ĞŞ¸ÄÇ°2ÈÕºÍÇ°3ÈÕ¶³½á
2075:../user/source/DLT645.c ****  *
2076:../user/source/DLT645.c **** 	case ID_05060101:	//ÉÏ1ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£©
2077:../user/source/DLT645.c **** 	case ID_05060102:	//ÉÏ2ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£©
2078:../user/source/DLT645.c **** 	case ID_05060103:	//ÉÏ3ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£© 
2079:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.9
2080:../user/source/DLT645.c ****  **********************************************************************/
2081:../user/source/DLT645.c **** void vDayfrozen_Modifier(uint8_t *pucBuffer) //ĞŞ¸ÄÈÕ¶³½áÊı¾İº¯Êı
2082:../user/source/DLT645.c **** {
2083:../user/source/DLT645.c ****     uint32_t energy, energy_F1, energy_F2, energy_F3, energy_F4;
2084:../user/source/DLT645.c ****     uint16_t i;
2085:../user/source/DLT645.c ****     /*ÉÏ1´Î¡¢ÉÏ2´Î¡¢ÉÏ3´ÎÈÕ¶³½áµçÄÜÊı£º¾İ*/
2086:../user/source/DLT645.c ****     if (Dayfrozen_Change_State == 0x00)
2087:../user/source/DLT645.c ****         return;
2088:../user/source/DLT645.c ****     /*2018-6-27 13:27:07£º
2089:../user/source/DLT645.c **** 	 *ÖØÇì·´À¡ÉÏ1ÈÕ¶³½áÕıÏòÓĞ¹¦×ÜÓëËÄ·ÑÂÊÖ®ºÍ²»Ò»ÖÂ£¬
2090:../user/source/DLT645.c **** 	 *Ô­ÒòÎª³ËÒÔ0.9Ê±Ğ¡ÊıµãºóµÚÈıÎ»±»ºöÂÔ£¬
2091:../user/source/DLT645.c **** 	 *ÕıÏòÓĞ¹¦×Ü²»ÔÙ³ËÒÔ0.9£¬Ö±½ÓÀÛ¼ÓËÄ·ÑÂÊĞŞ¸ÄºóµÄÖµ
2092:../user/source/DLT645.c **** 	 *energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);	
2093:../user/source/DLT645.c **** 	 *energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_1DAYFROZEN_ADDR, FLASH_MODIFIED_1DAYFROZEN
2094:../user/source/DLT645.c **** 	 *Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2095:../user/source/DLT645.c **** 	*/
2096:../user/source/DLT645.c **** 
2097:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦¼â·ÑÂÊµçÁ¿*/
2098:../user/source/DLT645.c ****     energy_F1 = Get_Energy(pucBuffer[18], pucBuffer[19], pucBuffer[20], pucBuffer[21]);
2099:../user/source/DLT645.c ****     energy_F1 = vNow_Frozen_Modify_Mothod(energy_F1, FLASH_REAL_1DAYFROZEN_ADDR + 4, FLASH_MODIFIED
2100:../user/source/DLT645.c ****     Fill_Energy(energy_F1, &pucBuffer[18], &pucBuffer[19], &pucBuffer[20], &pucBuffer[21]);
2101:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦·å·ÑÂÊµçÁ¿*/
2102:../user/source/DLT645.c ****     energy_F2 = Get_Energy(pucBuffer[22], pucBuffer[23], pucBuffer[24], pucBuffer[25]);
2103:../user/source/DLT645.c ****     energy_F2 = vNow_Frozen_Modify_Mothod(energy_F2, FLASH_REAL_1DAYFROZEN_ADDR + 8, FLASH_MODIFIED
2104:../user/source/DLT645.c ****     Fill_Energy(energy_F2, &pucBuffer[22], &pucBuffer[23], &pucBuffer[24], &pucBuffer[25]);
2105:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦Æ½·ÑÂÊµçÁ¿*/
2106:../user/source/DLT645.c ****     energy_F3 = Get_Energy(pucBuffer[26], pucBuffer[27], pucBuffer[28], pucBuffer[29]);
2107:../user/source/DLT645.c ****     energy_F3 = vNow_Frozen_Modify_Mothod(energy_F3, FLASH_REAL_1DAYFROZEN_ADDR + 12, FLASH_MODIFIE
2108:../user/source/DLT645.c ****     Fill_Energy(energy_F3, &pucBuffer[26], &pucBuffer[27], &pucBuffer[28], &pucBuffer[29]);
2109:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦¹È·ÑÂÊµçÁ¿*/
2110:../user/source/DLT645.c ****     energy_F4 = Get_Energy(pucBuffer[30], pucBuffer[31], pucBuffer[32], pucBuffer[33]);
2111:../user/source/DLT645.c ****     energy_F4 = vNow_Frozen_Modify_Mothod(energy_F4, FLASH_REAL_1DAYFROZEN_ADDR + 16, FLASH_MODIFIE
2112:../user/source/DLT645.c ****     Fill_Energy(energy_F4, &pucBuffer[30], &pucBuffer[31], &pucBuffer[32], &pucBuffer[33]);
2113:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×ÜµçÁ¿*/
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 71


2114:../user/source/DLT645.c ****     /*»ñÈ¡ÉÏÒ»ÈÕÕæÊµÖµ*/
2115:../user/source/DLT645.c ****     energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);
2116:../user/source/DLT645.c ****     /*´æ´¢ÕæÊµÖµ*/
2117:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_REAL_1DAYFROZEN_ADDR, energy);
2118:../user/source/DLT645.c ****     /*¼ÆËãĞŞ¸ÄºóµÄÖµ*/
2119:../user/source/DLT645.c ****     energy = energy_F1 + energy_F2 + energy_F3 + energy_F4;
2120:../user/source/DLT645.c ****     /*´æ´¢ĞŞ¸ÄºóµÄÖµ*/
2121:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_MODIFIED_1DAYFROZEN_ADDR, energy);
2122:../user/source/DLT645.c ****     /*×éÖ¡*/
2123:../user/source/DLT645.c ****     Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2124:../user/source/DLT645.c **** 
2125:../user/source/DLT645.c ****     pucBuffer[34] = 0;
2126:../user/source/DLT645.c ****     for (i = 0; i < 34; i++)
2127:../user/source/DLT645.c ****     {
2128:../user/source/DLT645.c ****         pucBuffer[34] += pucBuffer[i];
2129:../user/source/DLT645.c ****     }
2130:../user/source/DLT645.c ****     pucBuffer[35] = 0x16;
2131:../user/source/DLT645.c **** }
2132:../user/source/DLT645.c **** 
2133:../user/source/DLT645.c **** /********************************************************************
2134:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½áËãÈÕÕıÏòÓĞ¹¦µçÁ¿Êı¾İµ÷Õû²ßÂÔ
2135:../user/source/DLT645.c ****  * Êä    Èë£º
2136:../user/source/DLT645.c ****  * Êä    ³ö£º
2137:../user/source/DLT645.c ****  * Ëµ    Ã÷£º½áËãÈÕµçÁ¿ÎªÔö¼ÓÖµ£¬¿ÉÒÔÖ±½Ó°´±ÈÀıËõĞ¡
2138:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2139:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.9.6
2140:../user/source/DLT645.c ****  **********************************************************************/
2141:../user/source/DLT645.c **** uint32_t vAccountEnergy_Modify_Mothod(uint32_t dayfrozen)
2142:../user/source/DLT645.c **** {
2143:../user/source/DLT645.c ****     uint64_t i;
2144:../user/source/DLT645.c ****     i = (uint64_t)dayfrozen * ucDayfrozen_Modify_Ratio;
2145:../user/source/DLT645.c ****     return (uint32_t)(i / 100);
2146:../user/source/DLT645.c **** }
2147:../user/source/DLT645.c **** 
2148:../user/source/DLT645.c **** /********************************************************************
2149:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½áËãÈÕÕıÏòÓĞ¹¦µçÁ¿Êı¾İĞŞ¸Äº¯Êı
2150:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2151:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
2152:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2153:../user/source/DLT645.c ****  *
2154:../user/source/DLT645.c **** 		case ID_00010001:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦×ÜµçÄÜ
2155:../user/source/DLT645.c **** 		case ID_00010101:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜ
2156:../user/source/DLT645.c **** 		case ID_00010201:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ2µçÄÜ 
2157:../user/source/DLT645.c **** 		case ID_00010301:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ3µçÄÜ
2158:../user/source/DLT645.c **** 		case ID_00010401:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ4µçÄÜ
2159:../user/source/DLT645.c **** 		case ID_0001FF01:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦µçÄÜÊı¾İ¿é
2160:../user/source/DLT645.c **** 		case ID_00150001:	//ÉÏ1½áËãÈÕAÏàÕıÏòÓĞ¹¦µçÄÜ
2161:../user/source/DLT645.c **** 		case ID_00290001:	//ÉÏ1½áËãÈÕBÏàÕıÏòÓĞ¹¦µçÄÜ
2162:../user/source/DLT645.c **** 		case ID_003D0001:	//ÉÏ1½áËãÈÕCÏàÕıÏòÓĞ¹¦µçÄÜ
2163:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.9.6
2164:../user/source/DLT645.c ****  **********************************************************************/
2165:../user/source/DLT645.c **** void vAccountEnergy_Modify(uint8_t *pucBuffer)
2166:../user/source/DLT645.c **** {
2167:../user/source/DLT645.c ****     int energy;
2168:../user/source/DLT645.c ****     uint16_t i;
2169:../user/source/DLT645.c ****     if (Dayfrozen_Change_State == 0x00)
2170:../user/source/DLT645.c ****         return;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 72


2171:../user/source/DLT645.c ****     if (pucBuffer[11] == 0x32)
2172:../user/source/DLT645.c ****     {
2173:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦×ÜµçÁ¿*/
2174:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);
2175:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2176:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2177:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦¼â·ÑÂÊµçÁ¿*/
2178:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[18], pucBuffer[19], pucBuffer[20], pucBuffer[21]);
2179:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2180:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[18], &pucBuffer[19], &pucBuffer[20], &pucBuffer[21]);
2181:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦·å·ÑÂÊµçÁ¿*/
2182:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[22], pucBuffer[23], pucBuffer[24], pucBuffer[25]);
2183:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2184:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[22], &pucBuffer[23], &pucBuffer[24], &pucBuffer[25]);
2185:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦Æ½·ÑÂÊµçÁ¿*/
2186:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[26], pucBuffer[27], pucBuffer[28], pucBuffer[29]);
2187:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2188:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[26], &pucBuffer[27], &pucBuffer[28], &pucBuffer[29]);
2189:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦¹È·ÑÂÊµçÁ¿*/
2190:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[30], pucBuffer[31], pucBuffer[32], pucBuffer[33]);
2191:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2192:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[30], &pucBuffer[31], &pucBuffer[32], &pucBuffer[33]);
2193:../user/source/DLT645.c **** 
2194:../user/source/DLT645.c ****         pucBuffer[34] = 0;
2195:../user/source/DLT645.c ****         for (i = 0; i < 34; i++)
2196:../user/source/DLT645.c ****         {
2197:../user/source/DLT645.c ****             pucBuffer[34] += pucBuffer[i];
2198:../user/source/DLT645.c ****         }
2199:../user/source/DLT645.c ****         pucBuffer[35] = 0x16;
2200:../user/source/DLT645.c ****     }
2201:../user/source/DLT645.c ****     else
2202:../user/source/DLT645.c ****     {
2203:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);
2204:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2205:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2206:../user/source/DLT645.c **** 
2207:../user/source/DLT645.c ****         pucBuffer[18] = 0;
2208:../user/source/DLT645.c ****         for (i = 0; i < 18; i++)
2209:../user/source/DLT645.c ****         {
2210:../user/source/DLT645.c ****             pucBuffer[18] += pucBuffer[i];
2211:../user/source/DLT645.c ****         }
2212:../user/source/DLT645.c ****         pucBuffer[19] = 0x16;
2213:../user/source/DLT645.c ****     }
2214:../user/source/DLT645.c **** }
2215:../user/source/DLT645.c **** 
2216:../user/source/DLT645.c **** /********************************************************************
2217:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä½ûÄÜ/Ê¹ÄÜ
2218:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2219:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
2220:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2221:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2222:../user/source/DLT645.c ****  **********************************************************************/
2223:../user/source/DLT645.c **** void vEnergy_Modify_AbleSet(uint8_t *pucBuffer)
2224:../user/source/DLT645.c **** {
2225:../user/source/DLT645.c ****     uint16_t i;
2226:../user/source/DLT645.c ****     if (pucBuffer[14] == 0xFF) //Ê¹ÄÜ
2227:../user/source/DLT645.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 73


2228:../user/source/DLT645.c ****         Dayfrozen_Change_State = pucBuffer[14];
2229:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZENCHANGESTATE_ADDR, Dayfrozen_Change_State);
2230:../user/source/DLT645.c ****         pucBuffer[8] = (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == Dayfrozen_Change_State
2231:../user/source/DLT645.c ****                             ? 0x94
2232:../user/source/DLT645.c ****                             : 0xD4);
2233:../user/source/DLT645.c ****     }
2234:../user/source/DLT645.c ****     else if (pucBuffer[14] == 0x00) //½û£ºÄÜ
2235:../user/source/DLT645.c ****     {
2236:../user/source/DLT645.c ****         /*Çå¿Õ´æ´¢µÄµçÁ¿Öµ*/
2237:../user/source/DLT645.c ****         FLASH_Unlock();
2238:../user/source/DLT645.c ****         FLASH_ErasePage(FLASH_ENERGY_PAGE);
2239:../user/source/DLT645.c ****         FLASH_Lock();
2240:../user/source/DLT645.c ****         Dayfrozen_Change_State = pucBuffer[14];
2241:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZENCHANGESTATE_ADDR, Dayfrozen_Change_State);
2242:../user/source/DLT645.c ****         pucBuffer[8] = (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == Dayfrozen_Change_State
2243:../user/source/DLT645.c ****                             ? 0x94
2244:../user/source/DLT645.c ****                             : 0xD4);
2245:../user/source/DLT645.c ****     }
2246:../user/source/DLT645.c ****     else
2247:../user/source/DLT645.c ****     {
2248:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
2249:../user/source/DLT645.c ****     }
2250:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
2251:../user/source/DLT645.c ****     pucBuffer[10] = 0;
2252:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
2253:../user/source/DLT645.c ****     {
2254:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
2255:../user/source/DLT645.c ****     }
2256:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
2257:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2258:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
2259:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
2260:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
2261:../user/source/DLT645.c ****     {
2262:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2263:../user/source/DLT645.c ****     }
2264:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
2265:../user/source/DLT645.c **** #ifdef ENABLE_INFR
2266:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
2267:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
2268:../user/source/DLT645.c ****     {
2269:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2270:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2271:../user/source/DLT645.c ****     }
2272:../user/source/DLT645.c **** #endif
2273:../user/source/DLT645.c **** }
2274:../user/source/DLT645.c **** 
2275:../user/source/DLT645.c **** /********************************************************************
2276:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä±ÈÀıÉèÖÃ
2277:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2278:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2279:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2280:../user/source/DLT645.c ****  * ĞŞ¸Ä¼ÇÂ¼£ºĞŞ¸Ä±ÈÀı¸ÄÎªÓÃÁ½¸ö×Ö½Ú±íÊ¾£¬BCDÂë£¬µÍ×Ö½ÚÔÚÇ°£¬¸ß×Ö½ÚÔÚºó
2281:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2282:../user/source/DLT645.c ****  **********************************************************************/
2283:../user/source/DLT645.c **** void vEnergy_Modify_RaitoSet(uint8_t *pucBuffer)
2284:../user/source/DLT645.c **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 74


2285:../user/source/DLT645.c ****     uint8_t ratio;
2286:../user/source/DLT645.c ****     bool ratioValid;
2287:../user/source/DLT645.c ****     uint16_t i;
2288:../user/source/DLT645.c **** 
2289:../user/source/DLT645.c ****     /*ratio = BCD2DEC(pucBuffer[14]);*/
2290:../user/source/DLT645.c ****     //68 AA AA AA AA AA AA 68 91 05 33 74 34 33 20 01 00 16  120%
2291:../user/source/DLT645.c ****     ratio = BCD2DEC(pucBuffer[14]) + BCD2DEC(pucBuffer[15]) * 100;
2292:../user/source/DLT645.c ****     ratioValid = (ratio > 0 && ratio <= 255);
2293:../user/source/DLT645.c ****     if (ratioValid)
2294:../user/source/DLT645.c ****     {
2295:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR, ratio);
2296:../user/source/DLT645.c ****         ucDayfrozen_Modify_Ratio = ratio;
2297:../user/source/DLT645.c ****         if (EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR) == ratio)
2298:../user/source/DLT645.c ****         {
2299:../user/source/DLT645.c ****             pucBuffer[8] = 0x94;
2300:../user/source/DLT645.c ****         }
2301:../user/source/DLT645.c ****         else
2302:../user/source/DLT645.c ****         {
2303:../user/source/DLT645.c ****             pucBuffer[8] = 0xD4;
2304:../user/source/DLT645.c ****         }
2305:../user/source/DLT645.c ****     }
2306:../user/source/DLT645.c ****     else
2307:../user/source/DLT645.c ****     {
2308:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
2309:../user/source/DLT645.c ****     }
2310:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
2311:../user/source/DLT645.c ****     pucBuffer[10] = 0;
2312:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
2313:../user/source/DLT645.c ****     {
2314:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
2315:../user/source/DLT645.c ****     }
2316:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
2317:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2318:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
2319:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
2320:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
2321:../user/source/DLT645.c ****     {
2322:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2323:../user/source/DLT645.c ****     }
2324:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
2325:../user/source/DLT645.c **** #ifdef ENABLE_INFR
2326:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
2327:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
2328:../user/source/DLT645.c ****     {
2329:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2330:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2331:../user/source/DLT645.c ****     }
2332:../user/source/DLT645.c **** #endif
2333:../user/source/DLT645.c **** }
2334:../user/source/DLT645.c **** 
2335:../user/source/DLT645.c **** /********************************************************************
2336:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÕıÏòÓĞ¹¦µçÄÜÁ¿»Ö¸´³ö³§ÉèÖÃ
2337:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2338:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2339:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2340:../user/source/DLT645.c ****  * ĞŞ¸Ä¼ÇÂ¼£º³ÌĞòĞèÖ§³ÖµçÄÜÁ¿µ÷¸ß£¬ËùÒÔ¸´Î»Ê±ÈÕ¶³½áĞŞ¸Ä±ÈÀı£¬²»ÔÙ¸´Î»:2018Äê11ÔÂ5ÈÕ16:11:34
2341:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 75


2342:../user/source/DLT645.c ****  **********************************************************************/
2343:../user/source/DLT645.c **** void vEnergy_Modify_Reset(uint8_t *pucBuffer)
2344:../user/source/DLT645.c **** {
2345:../user/source/DLT645.c ****     bool cmdValid;
2346:../user/source/DLT645.c ****     uint16_t i;
2347:../user/source/DLT645.c **** 
2348:../user/source/DLT645.c ****     cmdValid = (pucBuffer[14] == 0x00);
2349:../user/source/DLT645.c ****     if (cmdValid)
2350:../user/source/DLT645.c ****     {
2351:../user/source/DLT645.c ****         /*µçÄÜĞŞ¸ÄÊ¹ÄÜ*/
2352:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZENCHANGESTATE_ADDR, 0xff);
2353:../user/source/DLT645.c ****         Dayfrozen_Change_State = 0xff;
2354:../user/source/DLT645.c ****         /*ÈÕ¶³½áĞŞ¸Ä±ÈÀıÉèÖÃÎª90*/
2355:../user/source/DLT645.c ****         /*Flash_Write_Word(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR, 90);*/
2356:../user/source/DLT645.c ****         /*ucDayfrozen_Modify_Ratio = 90;*/
2357:../user/source/DLT645.c ****         /*É¾³ı´æ´¢µÄÔ­Ê¼ºÍĞŞ¸ÄºóµÄµçÁ¿Öµ£¨²Á³ı´æ´¢Ò³£©*/
2358:../user/source/DLT645.c ****         FLASH_Unlock();
2359:../user/source/DLT645.c ****         FLASH_ErasePage(FLASH_ENERGY_PAGE);
2360:../user/source/DLT645.c ****         FLASH_Lock();
2361:../user/source/DLT645.c ****         if ( //(EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR) == 90) &&
2362:../user/source/DLT645.c ****             (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == 0xff))
2363:../user/source/DLT645.c ****         {
2364:../user/source/DLT645.c ****             pucBuffer[8] = 0x94;
2365:../user/source/DLT645.c ****         }
2366:../user/source/DLT645.c ****         else
2367:../user/source/DLT645.c ****         {
2368:../user/source/DLT645.c ****             pucBuffer[8] = 0xD4;
2369:../user/source/DLT645.c ****         }
2370:../user/source/DLT645.c ****     }
2371:../user/source/DLT645.c ****     else
2372:../user/source/DLT645.c ****     {
2373:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
2374:../user/source/DLT645.c ****     }
2375:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
2376:../user/source/DLT645.c ****     pucBuffer[10] = 0;
2377:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
2378:../user/source/DLT645.c ****     {
2379:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
2380:../user/source/DLT645.c ****     }
2381:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
2382:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2383:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
2384:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
2385:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
2386:../user/source/DLT645.c ****     {
2387:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2388:../user/source/DLT645.c ****     }
2389:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
2390:../user/source/DLT645.c **** #ifdef ENABLE_INFR
2391:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
2392:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
2393:../user/source/DLT645.c ****     {
2394:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2395:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2396:../user/source/DLT645.c ****     }
2397:../user/source/DLT645.c **** #endif
2398:../user/source/DLT645.c **** }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 76


2399:../user/source/DLT645.c **** #if 1
2400:../user/source/DLT645.c **** /********************************************************************
2401:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÕıÏòÓĞ¹¦µçÄÜÁ¿²éÑ¯ĞŞ¸Ä±ÈÀı
2402:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2403:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2404:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2405:../user/source/DLT645.c ****  * ĞŞ¸Ä¼ÇÂ¼£º
2406:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018-11-5 16:12:03
2407:../user/source/DLT645.c ****  **********************************************************************/
2408:../user/source/DLT645.c **** void vEnergy_Modify_ReadSet(uint8_t *pucbuffer)
2409:../user/source/DLT645.c **** {
2410:../user/source/DLT645.c ****     //68 AA AA AA AA AA AA 68 91 04 33 76 34 33 71 16
2411:../user/source/DLT645.c ****     uint8_t ratio;
2412:../user/source/DLT645.c ****     uint32_t i;
2413:../user/source/DLT645.c ****     if (pucbuffer[8] != 0x91)
2414:../user/source/DLT645.c ****         return;
2415:../user/source/DLT645.c ****     //pucbuffer[8] = 0x11;
2416:../user/source/DLT645.c ****     pucbuffer[9] = 0x06;
2417:../user/source/DLT645.c ****     //ratio = EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR);
2418:../user/source/DLT645.c ****     ratio = ucDayfrozen_Modify_Ratio;
2419:../user/source/DLT645.c **** 
2420:../user/source/DLT645.c ****     pucbuffer[14] = DEC2BCD(ratio % 100); //µÍÎ»ÔÚÇ°
2421:../user/source/DLT645.c ****     pucbuffer[15] = DEC2BCD(ratio / 100); //¸ßÎ»ÔÚºó
2422:../user/source/DLT645.c ****     pucbuffer[16] = 0;
2423:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
2424:../user/source/DLT645.c ****     {
2425:../user/source/DLT645.c ****         pucbuffer[16] += pucbuffer[i];
2426:../user/source/DLT645.c ****     }
2427:../user/source/DLT645.c ****     pucbuffer[17] = 0x16;
2428:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2429:../user/source/DLT645.c ****     uc645DataDomainLength = 4;
2430:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, pUartDB->pSndbuf, 18);
2431:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
2432:../user/source/DLT645.c ****     {
2433:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2434:../user/source/DLT645.c ****     }
2435:../user/source/DLT645.c **** #ifdef ENABLE_INFR
2436:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
2437:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, pUartIR->pSndbuf, 18);
2438:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
2439:../user/source/DLT645.c ****     {
2440:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2441:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2442:../user/source/DLT645.c ****     }
2443:../user/source/DLT645.c **** #endif
2444:../user/source/DLT645.c **** }
2445:../user/source/DLT645.c **** #endif
2446:../user/source/DLT645.c **** /********************************************************************
2447:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º²éÑ¯ÈÕ¶³½áÕıÏòÓĞ¹¦×Üµ±Ç°ÕæÊµÖµºÍĞŞ¸ÄÖµ
2448:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2449:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2450:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2451:../user/source/DLT645.c ****  * ĞŞ¸Ä¼ÇÂ¼£º
2452:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018-11-5 16:12:03
2453:../user/source/DLT645.c ****  **********************************************************************/
2454:../user/source/DLT645.c **** void vEnergy_Modify_ReadValue(uint8_t *pucbuffer)
2455:../user/source/DLT645.c **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 77


2456:../user/source/DLT645.c ****     uint8_t i;
2457:../user/source/DLT645.c ****     int dayFrozen;
2458:../user/source/DLT645.c ****     uint32_t realValue;
2459:../user/source/DLT645.c ****     uint32_t modifiedValue;
2460:../user/source/DLT645.c **** 
2461:../user/source/DLT645.c ****     pucbuffer[8] = 0x91;
2462:../user/source/DLT645.c ****     pucbuffer[9] = 0x0C;
2463:../user/source/DLT645.c **** 
2464:../user/source/DLT645.c ****     /*¶ÁÈ¡´æ´¢µÄÉÏ´ÎÕæÊµÖµºÍĞŞ¸ÄÖµ*/
2465:../user/source/DLT645.c ****     realValue = Flash_Read_Word(FLASH_REAL_1DAYFROZEN_ADDR + 4);
2466:../user/source/DLT645.c ****     modifiedValue = Flash_Read_Word(FLASH_MODIFIED_1DAYFROZEN_ADDR + 4);
2467:../user/source/DLT645.c ****     /*ÖÕ¶ËµÚÒ»´ÎÊ¹ÓÃ*/
2468:../user/source/DLT645.c ****     if (realValue == 0XFFFFFFFF)
2469:../user/source/DLT645.c ****     {
2470:../user/source/DLT645.c ****         realValue = 0;
2471:../user/source/DLT645.c ****     }
2472:../user/source/DLT645.c ****     Fill_Energy(realValue, &pucbuffer[14], &pucbuffer[15], &pucbuffer[16], &pucbuffer[17]);
2473:../user/source/DLT645.c ****     if (modifiedValue == 0XFFFFFFFF)
2474:../user/source/DLT645.c ****     {
2475:../user/source/DLT645.c ****         modifiedValue = 0;
2476:../user/source/DLT645.c ****     }
2477:../user/source/DLT645.c ****     Fill_Energy(modifiedValue, &pucbuffer[18], &pucbuffer[19], &pucbuffer[20], &pucbuffer[21]);
2478:../user/source/DLT645.c ****     pucbuffer[22] = 0;
2479:../user/source/DLT645.c ****     for (i = 0; i < 22; i++)
2480:../user/source/DLT645.c ****     {
2481:../user/source/DLT645.c ****         pucbuffer[22] += pucbuffer[i];
2482:../user/source/DLT645.c ****     }
2483:../user/source/DLT645.c ****     pucbuffer[23] = 0x16;
2484:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2485:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
2486:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, pUartDB->pSndbuf, 24);
2487:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
2488:../user/source/DLT645.c ****     {
2489:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2490:../user/source/DLT645.c ****     }
2491:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
2492:../user/source/DLT645.c **** #ifdef ENABLE_INFR
2493:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, pUartIR->pSndbuf, 24);
2494:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
2495:../user/source/DLT645.c ****     {
2496:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2497:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2498:../user/source/DLT645.c ****     }
2499:../user/source/DLT645.c **** #endif
2500:../user/source/DLT645.c **** }
2501:../user/source/DLT645.c **** 
2502:../user/source/DLT645.c **** /********************************************************************
2503:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ºÏ¸ñÉÏÏŞĞŞ¸Äº¯Êı£¨ºìÍâ¿ÚÊÕÖ¡´¦Àí£©
2504:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2505:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2506:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2507:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2508:../user/source/DLT645.c ****  **********************************************************************/
2509:../user/source/DLT645.c **** void vVoltage_SetMaxValue(uint8_t *pucBuffer)
2510:../user/source/DLT645.c **** {
2511:../user/source/DLT645.c ****     int VMAX = 0;
2512:../user/source/DLT645.c ****     uint16_t i = 0;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 78


2513:../user/source/DLT645.c ****     VMAX = Get_Voltage(pucBuffer[14], pucBuffer[15]);
2514:../user/source/DLT645.c ****     if (VMAX > 2200)
2515:../user/source/DLT645.c ****     {
2516:../user/source/DLT645.c ****         Voltage_MAX = VMAX;
2517:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX1_Addr, pucBuffer[14]);
2518:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX2_Addr, pucBuffer[15]);
2519:../user/source/DLT645.c ****         if (((uint8_t)Flash_Read_Word(FLASH_VMAX1_Addr) == pucBuffer[14]) &&
2520:../user/source/DLT645.c ****             ((uint8_t)Flash_Read_Word(FLASH_VMAX2_Addr) == pucBuffer[15]))
2521:../user/source/DLT645.c ****         {
2522:../user/source/DLT645.c ****             pucBuffer[8] = 0x94; //ÉèÖÃ³É¹¦±êÖ¾
2523:../user/source/DLT645.c ****         }
2524:../user/source/DLT645.c ****         else
2525:../user/source/DLT645.c ****         {
2526:../user/source/DLT645.c ****             pucBuffer[8] = 0xD4;
2527:../user/source/DLT645.c ****         }
2528:../user/source/DLT645.c ****     }
2529:../user/source/DLT645.c ****     else
2530:../user/source/DLT645.c ****     {
2531:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
2532:../user/source/DLT645.c ****     }
2533:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
2534:../user/source/DLT645.c ****     pucBuffer[10] = 0;
2535:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
2536:../user/source/DLT645.c ****     {
2537:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
2538:../user/source/DLT645.c ****     }
2539:../user/source/DLT645.c ****     pucBuffer[11] = 0x16; //½áÊø·û
2540:../user/source/DLT645.c **** #ifdef ENABLE_INFR
2541:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
2542:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
2543:../user/source/DLT645.c ****     {
2544:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2545:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2546:../user/source/DLT645.c ****     }
2547:../user/source/DLT645.c **** #endif
2548:../user/source/DLT645.c **** }
2549:../user/source/DLT645.c **** /********************************************************************
2550:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ºÏ¸ñÏÂÏŞĞŞ¸Äº¯Êı£¨ºìÍâ¿ÚÊÕÖ¡´¦Àí£º£©
2551:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2552:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2553:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2554:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2555:../user/source/DLT645.c ****  **********************************************************************/
2556:../user/source/DLT645.c **** void vVoltage_SetMinValue(uint8_t *pucBuffer)
2557:../user/source/DLT645.c **** {
2558:../user/source/DLT645.c ****     int VMIN = 0;
2559:../user/source/DLT645.c ****     uint16_t i = 0;
2560:../user/source/DLT645.c ****     VMIN = Get_Voltage(pucBuffer[14], pucBuffer[15]);
2561:../user/source/DLT645.c ****     if (VMIN < 2200)
2562:../user/source/DLT645.c ****     {
2563:../user/source/DLT645.c ****         Voltage_MIN = VMIN;
2564:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN1_Addr, pucBuffer[14]);
2565:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN2_Addr, pucBuffer[15]);
2566:../user/source/DLT645.c ****         if ((EEProm_Read(FLASH_VMIN1_Addr) == pucBuffer[14]) &&
2567:../user/source/DLT645.c ****             (EEProm_Read(FLASH_VMIN2_Addr) == pucBuffer[15]))
2568:../user/source/DLT645.c ****         {
2569:../user/source/DLT645.c ****             pucBuffer[8] = 0x94; //ÉèÖÃ³É¹¦±êÖ¾
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 79


2570:../user/source/DLT645.c ****         }
2571:../user/source/DLT645.c ****         else
2572:../user/source/DLT645.c ****         {
2573:../user/source/DLT645.c ****             pucBuffer[8] = 0xD4;
2574:../user/source/DLT645.c ****         }
2575:../user/source/DLT645.c ****     }
2576:../user/source/DLT645.c ****     else
2577:../user/source/DLT645.c ****     {
2578:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
2579:../user/source/DLT645.c ****     }
2580:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
2581:../user/source/DLT645.c ****     pucBuffer[10] = 0;
2582:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
2583:../user/source/DLT645.c ****     {
2584:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
2585:../user/source/DLT645.c ****     }
2586:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
2587:../user/source/DLT645.c **** #ifdef ENABLE_INFR
2588:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
2589:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
2590:../user/source/DLT645.c ****     {
2591:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2592:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2593:../user/source/DLT645.c ****     }
2594:../user/source/DLT645.c **** #endif
2595:../user/source/DLT645.c **** }
2596:../user/source/DLT645.c **** 
2597:../user/source/DLT645.c **** /********************************************************************
2598:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ĞŞ¸ÄÉÏÏŞĞŞ¸Äº¯Êı£¨ºìÍâ¿ÚÊÕÖ¡´¦Àí£º£©
2599:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2600:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2601:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2602:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2603:../user/source/DLT645.c ****  **********************************************************************/
2604:../user/source/DLT645.c **** void vVoltage_SetMaxMaxValue(uint8_t *pucBuffer)
2605:../user/source/DLT645.c **** {
 1829              		.loc 1 2605 0
 1830              		.cfi_startproc
 1831              		@ args = 0, pretend = 0, frame = 0
 1832              		@ frame_needed = 0, uses_anonymous_args = 0
 1833              		@ link register save eliminated.
 1834              	.LVL224:
 1835 0000 7047     		bx	lr
 1836              		.cfi_endproc
 1837              	.LFE159:
 1839 0002 00BF     		.section	.text.vVoltage_SetMinMinValue,"ax",%progbits
 1840              		.align	2
 1841              		.global	vVoltage_SetMinMinValue
 1842              		.thumb
 1843              		.thumb_func
 1845              	vVoltage_SetMinMinValue:
 1846              	.LFB160:
2606:../user/source/DLT645.c **** }
2607:../user/source/DLT645.c **** /********************************************************************
2608:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ĞŞ¸ÄÏÂÏŞĞŞ¸Äº¯Êı£¨ºìÍâ¿ÚÊÕÖ¡´¦Àí£º£©
2609:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2610:../user/source/DLT645.c ****  * Êä    ³ö£º	none
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 80


2611:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2612:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2613:../user/source/DLT645.c ****  **********************************************************************/
2614:../user/source/DLT645.c **** void vVoltage_SetMinMinValue(uint8_t *pucBuffer)
2615:../user/source/DLT645.c **** {
 1847              		.loc 1 2615 0
 1848              		.cfi_startproc
 1849              		@ args = 0, pretend = 0, frame = 0
 1850              		@ frame_needed = 0, uses_anonymous_args = 0
 1851              		@ link register save eliminated.
 1852              	.LVL225:
 1853 0000 7047     		bx	lr
 1854              		.cfi_endproc
 1855              	.LFE160:
 1857 0002 00BF     		.section	.text.vLoadProfile_Voltage_Modify,"ax",%progbits
 1858              		.align	2
 1859              		.global	vLoadProfile_Voltage_Modify
 1860              		.thumb
 1861              		.thumb_func
 1863              	vLoadProfile_Voltage_Modify:
 1864              	.LFB161:
2616:../user/source/DLT645.c **** }
2617:../user/source/DLT645.c **** #if 0
2618:../user/source/DLT645.c **** /********************************************************************
2619:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º¶ÁÈ¡µçÁ¿ĞŞ¸Ä²ÎÊı£ºÊÇ·ñĞŞ¸Ä/ĞŞ¸Ä±ÈÀı
2620:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2621:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2622:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2623:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2624:../user/source/DLT645.c ****  **********************************************************************/
2625:../user/source/DLT645.c **** void vEnergy_Modify_ReadSet(uint8_t *pucBuffer)
2626:../user/source/DLT645.c **** {
2627:../user/source/DLT645.c ****     uint16_t i;
2628:../user/source/DLT645.c ****     uint8_t tRatio;
2629:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
2630:../user/source/DLT645.c ****     pucBuffer[9] = 0x06;
2631:../user/source/DLT645.c ****     pucBuffer[14] = (uint8_t)Flash_Read_Word(FLASH_DAYFROZENCHANGESTATE_ADDR);
2632:../user/source/DLT645.c ****     tRatio = (uint8_t)Flash_Read_Word(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR);
2633:../user/source/DLT645.c ****     pucBuffer[15] = DEC2BCD(tRatio);
2634:../user/source/DLT645.c ****     pucBuffer[16] = 0;
2635:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
2636:../user/source/DLT645.c ****     {
2637:../user/source/DLT645.c ****         pucBuffer[16] += pucBuffer[i];
2638:../user/source/DLT645.c ****     }
2639:../user/source/DLT645.c ****     pucBuffer[17] = 0x16;
2640:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2641:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
2642:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 18);
2643:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
2644:../user/source/DLT645.c ****     {
2645:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2646:../user/source/DLT645.c ****     }
2647:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
2648:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 18);
2649:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
2650:../user/source/DLT645.c ****     {
2651:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 81


2652:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2653:../user/source/DLT645.c ****     }
2654:../user/source/DLT645.c **** }
2655:../user/source/DLT645.c **** #endif
2656:../user/source/DLT645.c **** 
2657:../user/source/DLT645.c **** /********************************************************************
2658:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º¸ººÉ¼ÇÂ¼Á¬Ğø³­¶ÁµçÑ¹Êı¾İĞŞ¸Äº¯Êı
2659:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2660:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
2661:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2662:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ7ÈÕ21:08:05
2663:../user/source/DLT645.c ****  * µÚÒ»Ö¡£º68 AA AA AA AA AA AA 68 91 0X 32 34 43 39 mm hh DD MM YY 11 11 11 11 11 11 22 22 22 22 2
2664:../user/source/DLT645.c ****  *                                 B1
2665:../user/source/DLT645.c ****  * ºóĞøÖ¡£º68 AA AA AA AA AA AA 68 92 0X 32 34 43 39 11 11 11 11 22 22 22 22 33 33 33 33 44 44 44 4
2666:../user/source/DLT645.c ****  *                                 B2 04             cs 16
2667:../user/source/DLT645.c ****  **********************************************************************/
2668:../user/source/DLT645.c **** void vLoadProfile_Voltage_Modify(uint8_t *pucbuffer)
2669:../user/source/DLT645.c **** {
 1865              		.loc 1 2669 0
 1866              		.cfi_startproc
 1867              		@ args = 0, pretend = 0, frame = 0
 1868              		@ frame_needed = 0, uses_anonymous_args = 0
 1869              	.LVL226:
 1870              		.loc 1 2669 0
 1871 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1872              	.LCFI20:
 1873              		.cfi_def_cfa_offset 40
 1874              		.cfi_offset 3, -40
 1875              		.cfi_offset 4, -36
 1876              		.cfi_offset 5, -32
 1877              		.cfi_offset 6, -28
 1878              		.cfi_offset 7, -24
 1879              		.cfi_offset 8, -20
 1880              		.cfi_offset 9, -16
 1881              		.cfi_offset 10, -12
 1882              		.cfi_offset 11, -8
 1883              		.cfi_offset 14, -4
 1884 0004 0646     		mov	r6, r0
 1885              	.LVL227:
2670:../user/source/DLT645.c ****     uint16_t n = 0; //Êı¾İ¿é¸öÊı
2671:../user/source/DLT645.c ****     uint16_t length = pucbuffer[9];
 1886              		.loc 1 2671 0
 1887 0006 90F80980 		ldrb	r8, [r0, #9]	@ zero_extendqisi2
 1888              	.LVL228:
2672:../user/source/DLT645.c ****     uint16_t ID_length = 0; //Êı¾İÓòÖĞÊı¾İ±êÊ¶³¤¶È
2673:../user/source/DLT645.c ****     uint32_t voltage = 0;
2674:../user/source/DLT645.c ****     uint16_t i = 0;
2675:../user/source/DLT645.c **** 
2676:../user/source/DLT645.c ****     if (pucbuffer[8] == 0x91 || pucbuffer[8] == 0xB1) //ÎŞºóĞøÖ¡£¬»ò·ÖÖ¡µÄµÚÒ»Ö¡
 1889              		.loc 1 2676 0
 1890 000a 027A     		ldrb	r2, [r0, #8]	@ zero_extendqisi2
 1891 000c 912A     		cmp	r2, #145
 1892 000e 03D0     		beq	.L122
 1893              		.loc 1 2676 0 is_stmt 0 discriminator 1
 1894 0010 B12A     		cmp	r2, #177
 1895 0012 03D0     		beq	.L123
2672:../user/source/DLT645.c ****     uint16_t ID_length = 0; //Êı¾İÓòÖĞÊı¾İ±êÊ¶³¤¶È
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 82


 1896              		.loc 1 2672 0 is_stmt 1
 1897 0014 0023     		movs	r3, #0
 1898 0016 02E0     		b	.L116
 1899              	.L122:
2677:../user/source/DLT645.c ****     {
2678:../user/source/DLT645.c ****         ID_length = 9; //Êı¾İ±êÊ¶*4 + Ê±±ê*5
 1900              		.loc 1 2678 0
 1901 0018 0923     		movs	r3, #9
 1902 001a 00E0     		b	.L116
 1903              	.L123:
 1904 001c 0923     		movs	r3, #9
 1905              	.L116:
 1906              	.LVL229:
2679:../user/source/DLT645.c ****     }
2680:../user/source/DLT645.c ****     if (pucbuffer[8] == 0x92 || pucbuffer[8] == 0xB2)
 1907              		.loc 1 2680 0
 1908 001e 922A     		cmp	r2, #146
 1909 0020 02D0     		beq	.L124
 1910              		.loc 1 2680 0 is_stmt 0 discriminator 1
 1911 0022 B22A     		cmp	r2, #178
 1912 0024 03D1     		bne	.L117
 1913 0026 01E0     		b	.L125
 1914              	.L124:
2681:../user/source/DLT645.c ****     {
2682:../user/source/DLT645.c ****         ID_length = 4; //Êı¾İ±êÊ¶*4 £¬ºöÂÔºóÃæµÄSEQ*1£¬Ô­ÒòÎªÕû³ı2ºó½á¹ûÒ»Ñù
 1915              		.loc 1 2682 0 is_stmt 1
 1916 0028 0423     		movs	r3, #4
 1917              	.LVL230:
 1918 002a 00E0     		b	.L117
 1919              	.LVL231:
 1920              	.L125:
 1921 002c 0423     		movs	r3, #4
 1922              	.LVL232:
 1923              	.L117:
2683:../user/source/DLT645.c ****     }
2684:../user/source/DLT645.c ****     n = (length - ID_length) / 2; //µçÑ¹Êı¾İµÄ¸öÊı£¬·ÖÏàºÍ¿éÊı¾İ¶¼ÊÊÓÃ
 1924              		.loc 1 2684 0
 1925 002e 4746     		mov	r7, r8
 1926 0030 9946     		mov	r9, r3
 1927 0032 C3EB0803 		rsb	r3, r3, r8
 1928              	.LVL233:
 1929 0036 03EBD373 		add	r3, r3, r3, lsr #31
 1930 003a C3F34F03 		ubfx	r3, r3, #1, #16
 1931              	.LVL234:
2685:../user/source/DLT645.c ****     while (n--)
 1932              		.loc 1 2685 0
 1933 003e 15E0     		b	.L118
 1934              	.LVL235:
 1935              	.L119:
2686:../user/source/DLT645.c ****     {
2687:../user/source/DLT645.c ****         voltage = Get_Voltage(pucbuffer[10 + ID_length + 2 * n], pucbuffer[11 + ID_length + 2 * n])
 1936              		.loc 1 2687 0
 1937 0040 09F10A04 		add	r4, r9, #10
 1938 0044 4FEA450A 		lsl	r10, r5, #1
 1939 0048 5444     		add	r4, r4, r10
 1940 004a 09F10B03 		add	r3, r9, #11
 1941 004e 9A44     		add	r10, r10, r3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 83


2688:../user/source/DLT645.c ****         voltage = Voltage_Modifier_Method(voltage);
2689:../user/source/DLT645.c ****         pucbuffer[10 + ID_length + 2 * n] = GetLowByte(A_Voltage);
 1942              		.loc 1 2689 0
 1943 0050 DFF84CB0 		ldr	fp, .L127
 1944 0054 DBF80000 		ldr	r0, [fp]
 1945 0058 FFF7FEFF 		bl	GetLowByte
 1946              	.LVL236:
 1947 005c 3055     		strb	r0, [r6, r4]
2690:../user/source/DLT645.c ****         pucbuffer[11 + ID_length + 2 * n] = GetHighByte(A_Voltage);
 1948              		.loc 1 2690 0
 1949 005e DBF80000 		ldr	r0, [fp]
 1950 0062 FFF7FEFF 		bl	GetHighByte
 1951              	.LVL237:
 1952 0066 06F80A00 		strb	r0, [r6, r10]
2685:../user/source/DLT645.c ****     {
 1953              		.loc 1 2685 0
 1954 006a 2B46     		mov	r3, r5
 1955              	.LVL238:
 1956              	.L118:
 1957 006c 5D1E     		subs	r5, r3, #1
 1958 006e ADB2     		uxth	r5, r5
 1959              	.LVL239:
 1960 0070 002B     		cmp	r3, #0
 1961 0072 E5D1     		bne	.L119
2691:../user/source/DLT645.c ****     }
2692:../user/source/DLT645.c ****     pucbuffer[length + 10] = 0;
 1962              		.loc 1 2692 0
 1963 0074 08F10A02 		add	r2, r8, #10
 1964 0078 B118     		adds	r1, r6, r2
 1965 007a B354     		strb	r3, [r6, r2]
2693:../user/source/DLT645.c ****     for (i = 0; i < (length + 10); i++)
 1966              		.loc 1 2693 0
 1967 007c 05E0     		b	.L120
 1968              	.LVL240:
 1969              	.L121:
2694:../user/source/DLT645.c ****     {
2695:../user/source/DLT645.c ****         pucbuffer[length + 10] += pucbuffer[i];
 1970              		.loc 1 2695 0 discriminator 3
 1971 007e F05C     		ldrb	r0, [r6, r3]	@ zero_extendqisi2
 1972 0080 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1973 0082 0244     		add	r2, r2, r0
 1974 0084 0A70     		strb	r2, [r1]
2693:../user/source/DLT645.c ****     for (i = 0; i < (length + 10); i++)
 1975              		.loc 1 2693 0 discriminator 3
 1976 0086 0133     		adds	r3, r3, #1
 1977              	.LVL241:
 1978 0088 9BB2     		uxth	r3, r3
 1979              	.LVL242:
 1980              	.L120:
2693:../user/source/DLT645.c ****     for (i = 0; i < (length + 10); i++)
 1981              		.loc 1 2693 0 is_stmt 0 discriminator 1
 1982 008a 07F10A02 		add	r2, r7, #10
 1983 008e 9342     		cmp	r3, r2
 1984 0090 F5DB     		blt	.L121
2696:../user/source/DLT645.c ****     }
2697:../user/source/DLT645.c ****     pucbuffer[length + 11] = 16;
 1985              		.loc 1 2697 0 is_stmt 1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 84


 1986 0092 08F10B08 		add	r8, r8, #11
 1987              	.LVL243:
 1988 0096 1023     		movs	r3, #16
 1989              	.LVL244:
 1990 0098 06F80830 		strb	r3, [r6, r8]
 1991 009c BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1992              	.LVL245:
 1993              	.L128:
 1994              		.align	2
 1995              	.L127:
 1996 00a0 00000000 		.word	.LANCHOR4
 1997              		.cfi_endproc
 1998              	.LFE161:
 2000              		.section	.text.vLoadProfile_Current_Modify,"ax",%progbits
 2001              		.align	2
 2002              		.global	vLoadProfile_Current_Modify
 2003              		.thumb
 2004              		.thumb_func
 2006              	vLoadProfile_Current_Modify:
 2007              	.LFB162:
2698:../user/source/DLT645.c **** }
2699:../user/source/DLT645.c **** 
2700:../user/source/DLT645.c **** /********************************************************************
2701:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º¸ººÉ¼ÇÂ¼Á¬Ğø³­¶ÁµçÁ÷Êı¾İĞŞ¸Äº¯Êı
2702:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2703:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2704:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2705:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ7ÈÕ21:08:05
2706:../user/source/DLT645.c ****  **********************************************************************/
2707:../user/source/DLT645.c **** void vLoadProfile_Current_Modify(uint8_t *pucbuffer)
2708:../user/source/DLT645.c **** {
 2008              		.loc 1 2708 0
 2009              		.cfi_startproc
 2010              		@ args = 0, pretend = 0, frame = 0
 2011              		@ frame_needed = 0, uses_anonymous_args = 0
 2012              		@ link register save eliminated.
 2013              	.LVL246:
 2014 0000 7047     		bx	lr
 2015              		.cfi_endproc
 2016              	.LFE162:
 2018 0002 00BF     		.section	.text.Get_VChange_State,"ax",%progbits
 2019              		.align	2
 2020              		.global	Get_VChange_State
 2021              		.thumb
 2022              		.thumb_func
 2024              	Get_VChange_State:
 2025              	.LFB115:
 387:../user/source/DLT645.c ****     uint8_t i;
 2026              		.loc 1 387 0
 2027              		.cfi_startproc
 2028              		@ args = 0, pretend = 0, frame = 0
 2029              		@ frame_needed = 0, uses_anonymous_args = 0
 2030              	.LVL247:
 387:../user/source/DLT645.c ****     uint8_t i;
 2031              		.loc 1 387 0
 2032 0000 38B5     		push	{r3, r4, r5, lr}
 2033              	.LCFI21:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 85


 2034              		.cfi_def_cfa_offset 16
 2035              		.cfi_offset 3, -16
 2036              		.cfi_offset 4, -12
 2037              		.cfi_offset 5, -8
 2038              		.cfi_offset 14, -4
 2039 0002 0446     		mov	r4, r0
 389:../user/source/DLT645.c ****     {
 2040              		.loc 1 389 0
 2041 0004 837B     		ldrb	r3, [r0, #14]	@ zero_extendqisi2
 2042 0006 342B     		cmp	r3, #52
 2043 0008 02D1     		bne	.L131
 391:../user/source/DLT645.c ****     }
 2044              		.loc 1 391 0
 2045 000a 0021     		movs	r1, #0
 2046 000c 244A     		ldr	r2, .L140
 2047 000e 1170     		strb	r1, [r2]
 2048              	.L131:
 393:../user/source/DLT645.c ****     {
 2049              		.loc 1 393 0
 2050 0010 332B     		cmp	r3, #51
 2051 0012 02D1     		bne	.L132
 395:../user/source/DLT645.c ****     }
 2052              		.loc 1 395 0
 2053 0014 FF22     		movs	r2, #255
 2054 0016 224B     		ldr	r3, .L140
 2055 0018 1A70     		strb	r2, [r3]
 2056              	.L132:
 397:../user/source/DLT645.c ****     {
 2057              		.loc 1 397 0
 2058 001a 214B     		ldr	r3, .L140
 2059 001c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2060 001e 2148     		ldr	r0, .L140+4
 2061              	.LVL248:
 2062 0020 FFF7FEFF 		bl	Flash_Write_Word
 2063              	.LVL249:
 2064 0024 10B9     		cbnz	r0, .L133
 399:../user/source/DLT645.c ****     }
 2065              		.loc 1 399 0
 2066 0026 D423     		movs	r3, #212
 2067 0028 2372     		strb	r3, [r4, #8]
 2068 002a 01E0     		b	.L134
 2069              	.L133:
 402:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
 2070              		.loc 1 402 0
 2071 002c 9423     		movs	r3, #148
 2072 002e 2372     		strb	r3, [r4, #8]
 2073              	.L134:
 403:../user/source/DLT645.c ****     pucBuffer[10] = 0x00;
 2074              		.loc 1 403 0
 2075 0030 0023     		movs	r3, #0
 2076 0032 6372     		strb	r3, [r4, #9]
 404:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 2077              		.loc 1 404 0
 2078 0034 A372     		strb	r3, [r4, #10]
 2079              	.LVL250:
 405:../user/source/DLT645.c ****     {
 2080              		.loc 1 405 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 86


 2081 0036 05E0     		b	.L135
 2082              	.LVL251:
 2083              	.L136:
 407:../user/source/DLT645.c ****     }
 2084              		.loc 1 407 0 discriminator 3
 2085 0038 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2086 003a A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 2087 003c 0A44     		add	r2, r2, r1
 2088 003e A272     		strb	r2, [r4, #10]
 405:../user/source/DLT645.c ****     {
 2089              		.loc 1 405 0 discriminator 3
 2090 0040 0133     		adds	r3, r3, #1
 2091              	.LVL252:
 2092 0042 DBB2     		uxtb	r3, r3
 2093              	.LVL253:
 2094              	.L135:
 405:../user/source/DLT645.c ****     {
 2095              		.loc 1 405 0 is_stmt 0 discriminator 1
 2096 0044 092B     		cmp	r3, #9
 2097 0046 F7D9     		bls	.L136
 409:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2098              		.loc 1 409 0 is_stmt 1
 2099 0048 1623     		movs	r3, #22
 2100              	.LVL254:
 2101 004a E372     		strb	r3, [r4, #11]
 411:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 2102              		.loc 1 411 0
 2103 004c 0022     		movs	r2, #0
 2104 004e 164B     		ldr	r3, .L140+8
 2105 0050 1A70     		strb	r2, [r3]
 412:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 2106              		.loc 1 412 0
 2107 0052 164D     		ldr	r5, .L140+12
 2108 0054 2B68     		ldr	r3, [r5]
 2109 0056 0C22     		movs	r2, #12
 2110 0058 9968     		ldr	r1, [r3, #8]
 2111 005a 2046     		mov	r0, r4
 2112 005c FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2113              	.LVL255:
 413:../user/source/DLT645.c ****     {
 2114              		.loc 1 413 0
 2115 0060 2B68     		ldr	r3, [r5]
 2116 0062 9868     		ldr	r0, [r3, #8]
 2117 0064 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2118              	.LVL256:
 2119 0068 10B9     		cbnz	r0, .L137
 415:../user/source/DLT645.c ****     }
 2120              		.loc 1 415 0
 2121 006a 1148     		ldr	r0, .L140+16
 2122 006c FFF7FEFF 		bl	Uart_DataPut
 2123              	.LVL257:
 2124              	.L137:
 419:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 2125              		.loc 1 419 0
 2126 0070 104D     		ldr	r5, .L140+20
 2127 0072 2B68     		ldr	r3, [r5]
 2128 0074 0C22     		movs	r2, #12
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 87


 2129 0076 9968     		ldr	r1, [r3, #8]
 2130 0078 2046     		mov	r0, r4
 2131 007a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2132              	.LVL258:
 420:../user/source/DLT645.c ****     {
 2133              		.loc 1 420 0
 2134 007e 2B68     		ldr	r3, [r5]
 2135 0080 9868     		ldr	r0, [r3, #8]
 2136 0082 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2137              	.LVL259:
 2138 0086 50B9     		cbnz	r0, .L130
 422:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 2139              		.loc 1 422 0
 2140 0088 0B4C     		ldr	r4, .L140+24
 2141              	.LVL260:
 2142 008a 0022     		movs	r2, #0
 2143 008c 0B49     		ldr	r1, .L140+28
 2144 008e 2046     		mov	r0, r4
 2145 0090 FFF7FEFF 		bl	USART_ITConfig
 2146              	.LVL261:
 423:../user/source/DLT645.c ****     }
 2147              		.loc 1 423 0
 2148 0094 0122     		movs	r2, #1
 2149 0096 0A49     		ldr	r1, .L140+32
 2150 0098 2046     		mov	r0, r4
 2151 009a FFF7FEFF 		bl	USART_ITConfig
 2152              	.LVL262:
 2153              	.L130:
 2154 009e 38BD     		pop	{r3, r4, r5, pc}
 2155              	.L141:
 2156              		.align	2
 2157              	.L140:
 2158 00a0 00000000 		.word	.LANCHOR5
 2159 00a4 141F0308 		.word	134422292
 2160 00a8 00000000 		.word	.LANCHOR0
 2161 00ac 00000000 		.word	.LANCHOR6
 2162 00b0 00480040 		.word	1073760256
 2163 00b4 00000000 		.word	.LANCHOR7
 2164 00b8 00440040 		.word	1073759232
 2165 00bc 05010500 		.word	327941
 2166 00c0 07010700 		.word	459015
 2167              		.cfi_endproc
 2168              	.LFE115:
 2170              		.section	.text.Set_Voltage_Limit,"ax",%progbits
 2171              		.align	2
 2172              		.global	Set_Voltage_Limit
 2173              		.thumb
 2174              		.thumb_func
 2176              	Set_Voltage_Limit:
 2177              	.LFB116:
 435:../user/source/DLT645.c ****     int VMAX = 0;
 2178              		.loc 1 435 0
 2179              		.cfi_startproc
 2180              		@ args = 0, pretend = 0, frame = 0
 2181              		@ frame_needed = 0, uses_anonymous_args = 0
 2182              	.LVL263:
 2183 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 88


 2184              	.LCFI22:
 2185              		.cfi_def_cfa_offset 16
 2186              		.cfi_offset 4, -16
 2187              		.cfi_offset 5, -12
 2188              		.cfi_offset 6, -8
 2189              		.cfi_offset 14, -4
 2190 0002 0446     		mov	r4, r0
 2191              	.LVL264:
 439:../user/source/DLT645.c ****     VMIN = Get_Voltage(pucBuffer[16], pucBuffer[17]);
 2192              		.loc 1 439 0
 2193 0004 867B     		ldrb	r6, [r0, #14]	@ zero_extendqisi2
 2194 0006 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 2195 0008 3046     		mov	r0, r6
 2196              	.LVL265:
 2197 000a FFF7FEFF 		bl	Get_Voltage
 2198              	.LVL266:
 2199 000e 0546     		mov	r5, r0
 2200              	.LVL267:
 440:../user/source/DLT645.c ****     if ((VMAX > VMIN) && (VMAX < Voltage_MAX_MAX) //µçÑ¹ÏŞÖµÉèÖÃÌõ¼ş£¬ÉÏÏŞ´óÓÚÏÂÏŞÇÒĞ¡ÓÚÉÏÉÏÏŞ
 2201              		.loc 1 440 0
 2202 0010 617C     		ldrb	r1, [r4, #17]	@ zero_extendqisi2
 2203 0012 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 2204              	.LVL268:
 2205 0014 FFF7FEFF 		bl	Get_Voltage
 2206              	.LVL269:
 441:../user/source/DLT645.c ****         && (VMIN > Voltage_MIN_MIN))              //µçÑ¹ÏÂÏŞ´óÓÚÏÂÏÂÏŞ
 2207              		.loc 1 441 0
 2208 0018 8542     		cmp	r5, r0
 2209 001a 1CDD     		ble	.L143
 441:../user/source/DLT645.c ****         && (VMIN > Voltage_MIN_MIN))              //µçÑ¹ÏÂÏŞ´óÓÚÏÂÏÂÏŞ
 2210              		.loc 1 441 0 is_stmt 0 discriminator 1
 2211 001c B5F52F6F 		cmp	r5, #2800
 2212 0020 19DA     		bge	.L143
 442:../user/source/DLT645.c ****     {
 2213              		.loc 1 442 0 is_stmt 1
 2214 0022 B0F5966F 		cmp	r0, #1200
 2215 0026 16DD     		ble	.L143
 444:../user/source/DLT645.c ****         Voltage_MIN = VMIN;
 2216              		.loc 1 444 0
 2217 0028 274B     		ldr	r3, .L150
 2218 002a 1D60     		str	r5, [r3]
 445:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX1_Addr, pucBuffer[14]);
 2219              		.loc 1 445 0
 2220 002c 274B     		ldr	r3, .L150+4
 2221 002e 1860     		str	r0, [r3]
 446:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX2_Addr, pucBuffer[15]);
 2222              		.loc 1 446 0
 2223 0030 3146     		mov	r1, r6
 2224 0032 2748     		ldr	r0, .L150+8
 2225              	.LVL270:
 2226 0034 FFF7FEFF 		bl	Flash_Write_Word
 2227              	.LVL271:
 447:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN1_Addr, pucBuffer[16]);
 2228              		.loc 1 447 0
 2229 0038 E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
 2230 003a 2648     		ldr	r0, .L150+12
 2231 003c FFF7FEFF 		bl	Flash_Write_Word
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 89


 2232              	.LVL272:
 448:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN2_Addr, pucBuffer[17]);
 2233              		.loc 1 448 0
 2234 0040 217C     		ldrb	r1, [r4, #16]	@ zero_extendqisi2
 2235 0042 2548     		ldr	r0, .L150+16
 2236 0044 FFF7FEFF 		bl	Flash_Write_Word
 2237              	.LVL273:
 449:../user/source/DLT645.c ****         pucBuffer[8] = 0x94; //ÉèÖÃ³É¹¦±êÖ¾
 2238              		.loc 1 449 0
 2239 0048 617C     		ldrb	r1, [r4, #17]	@ zero_extendqisi2
 2240 004a 2448     		ldr	r0, .L150+20
 2241 004c FFF7FEFF 		bl	Flash_Write_Word
 2242              	.LVL274:
 450:../user/source/DLT645.c ****     }
 2243              		.loc 1 450 0
 2244 0050 9423     		movs	r3, #148
 2245 0052 2372     		strb	r3, [r4, #8]
 2246 0054 01E0     		b	.L144
 2247              	.LVL275:
 2248              	.L143:
 454:../user/source/DLT645.c ****     }
 2249              		.loc 1 454 0
 2250 0056 D423     		movs	r3, #212
 2251 0058 2372     		strb	r3, [r4, #8]
 2252              	.LVL276:
 2253              	.L144:
 456:../user/source/DLT645.c ****     pucBuffer[10] = 0x00; //ÇóÈ¡Ğ£ÑéºÍ
 2254              		.loc 1 456 0
 2255 005a 0023     		movs	r3, #0
 2256 005c 6372     		strb	r3, [r4, #9]
 457:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 2257              		.loc 1 457 0
 2258 005e A372     		strb	r3, [r4, #10]
 458:../user/source/DLT645.c ****     {
 2259              		.loc 1 458 0
 2260 0060 04E0     		b	.L145
 2261              	.LVL277:
 2262              	.L146:
 460:../user/source/DLT645.c ****     }
 2263              		.loc 1 460 0 discriminator 3
 2264 0062 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2265 0064 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 2266 0066 0A44     		add	r2, r2, r1
 2267 0068 A272     		strb	r2, [r4, #10]
 458:../user/source/DLT645.c ****     {
 2268              		.loc 1 458 0 discriminator 3
 2269 006a 0133     		adds	r3, r3, #1
 2270              	.LVL278:
 2271              	.L145:
 458:../user/source/DLT645.c ****     {
 2272              		.loc 1 458 0 is_stmt 0 discriminator 1
 2273 006c 092B     		cmp	r3, #9
 2274 006e F8DD     		ble	.L146
 462:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2275              		.loc 1 462 0 is_stmt 1
 2276 0070 1623     		movs	r3, #22
 2277              	.LVL279:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 90


 2278 0072 E372     		strb	r3, [r4, #11]
 464:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 2279              		.loc 1 464 0
 2280 0074 0022     		movs	r2, #0
 2281 0076 1A4B     		ldr	r3, .L150+24
 2282 0078 1A70     		strb	r2, [r3]
 465:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 2283              		.loc 1 465 0
 2284 007a 1A4D     		ldr	r5, .L150+28
 2285              	.LVL280:
 2286 007c 2B68     		ldr	r3, [r5]
 2287 007e 0C22     		movs	r2, #12
 2288 0080 9968     		ldr	r1, [r3, #8]
 2289 0082 2046     		mov	r0, r4
 2290 0084 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2291              	.LVL281:
 466:../user/source/DLT645.c ****     {
 2292              		.loc 1 466 0
 2293 0088 2B68     		ldr	r3, [r5]
 2294 008a 9868     		ldr	r0, [r3, #8]
 2295 008c FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2296              	.LVL282:
 2297 0090 10B9     		cbnz	r0, .L147
 468:../user/source/DLT645.c ****     }
 2298              		.loc 1 468 0
 2299 0092 1548     		ldr	r0, .L150+32
 2300 0094 FFF7FEFF 		bl	Uart_DataPut
 2301              	.LVL283:
 2302              	.L147:
 472:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 2303              		.loc 1 472 0
 2304 0098 144D     		ldr	r5, .L150+36
 2305 009a 2B68     		ldr	r3, [r5]
 2306 009c 0C22     		movs	r2, #12
 2307 009e 9968     		ldr	r1, [r3, #8]
 2308 00a0 2046     		mov	r0, r4
 2309 00a2 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2310              	.LVL284:
 473:../user/source/DLT645.c ****     {
 2311              		.loc 1 473 0
 2312 00a6 2B68     		ldr	r3, [r5]
 2313 00a8 9868     		ldr	r0, [r3, #8]
 2314 00aa FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2315              	.LVL285:
 2316 00ae 50B9     		cbnz	r0, .L142
 475:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 2317              		.loc 1 475 0
 2318 00b0 0F4C     		ldr	r4, .L150+40
 2319              	.LVL286:
 2320 00b2 0022     		movs	r2, #0
 2321 00b4 0F49     		ldr	r1, .L150+44
 2322 00b6 2046     		mov	r0, r4
 2323 00b8 FFF7FEFF 		bl	USART_ITConfig
 2324              	.LVL287:
 476:../user/source/DLT645.c ****     }
 2325              		.loc 1 476 0
 2326 00bc 0122     		movs	r2, #1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 91


 2327 00be 0E49     		ldr	r1, .L150+48
 2328 00c0 2046     		mov	r0, r4
 2329 00c2 FFF7FEFF 		bl	USART_ITConfig
 2330              	.LVL288:
 2331              	.L142:
 2332 00c6 70BD     		pop	{r4, r5, r6, pc}
 2333              	.L151:
 2334              		.align	2
 2335              	.L150:
 2336 00c8 00000000 		.word	Voltage_MAX
 2337 00cc 00000000 		.word	Voltage_MIN
 2338 00d0 001F0308 		.word	134422272
 2339 00d4 041F0308 		.word	134422276
 2340 00d8 081F0308 		.word	134422280
 2341 00dc 0C1F0308 		.word	134422284
 2342 00e0 00000000 		.word	.LANCHOR0
 2343 00e4 00000000 		.word	.LANCHOR6
 2344 00e8 00480040 		.word	1073760256
 2345 00ec 00000000 		.word	.LANCHOR7
 2346 00f0 00440040 		.word	1073759232
 2347 00f4 05010500 		.word	327941
 2348 00f8 07010700 		.word	459015
 2349              		.cfi_endproc
 2350              	.LFE116:
 2352              		.section	.text.Query_Voltage_Limit,"ax",%progbits
 2353              		.align	2
 2354              		.global	Query_Voltage_Limit
 2355              		.thumb
 2356              		.thumb_func
 2358              	Query_Voltage_Limit:
 2359              	.LFB117:
 489:../user/source/DLT645.c ****     int i = 0;
 2360              		.loc 1 489 0
 2361              		.cfi_startproc
 2362              		@ args = 0, pretend = 0, frame = 0
 2363              		@ frame_needed = 0, uses_anonymous_args = 0
 2364              	.LVL289:
 2365 0000 38B5     		push	{r3, r4, r5, lr}
 2366              	.LCFI23:
 2367              		.cfi_def_cfa_offset 16
 2368              		.cfi_offset 3, -16
 2369              		.cfi_offset 4, -12
 2370              		.cfi_offset 5, -8
 2371              		.cfi_offset 14, -4
 2372 0002 0446     		mov	r4, r0
 2373              	.LVL290:
 491:../user/source/DLT645.c ****     pucBuffer[9] = 0x0C;
 2374              		.loc 1 491 0
 2375 0004 9123     		movs	r3, #145
 2376 0006 0372     		strb	r3, [r0, #8]
 492:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(Voltage_MAX_MAX);
 2377              		.loc 1 492 0
 2378 0008 0C23     		movs	r3, #12
 2379 000a 4372     		strb	r3, [r0, #9]
 493:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(Voltage_MAX_MAX); //µçÑ¹ÉÏÉÏÏŞ
 2380              		.loc 1 493 0
 2381 000c 4FF42F60 		mov	r0, #2800
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 92


 2382              	.LVL291:
 2383 0010 FFF7FEFF 		bl	GetLowByte
 2384              	.LVL292:
 2385 0014 A073     		strb	r0, [r4, #14]
 494:../user/source/DLT645.c ****     pucBuffer[16] = GetLowByte(Voltage_MIN_MIN);
 2386              		.loc 1 494 0
 2387 0016 4FF42F60 		mov	r0, #2800
 2388 001a FFF7FEFF 		bl	GetHighByte
 2389              	.LVL293:
 2390 001e E073     		strb	r0, [r4, #15]
 495:../user/source/DLT645.c ****     pucBuffer[17] = GetHighByte(Voltage_MIN_MIN); //µçÑ¹ÏÂÏÂÏŞ
 2391              		.loc 1 495 0
 2392 0020 4FF49660 		mov	r0, #1200
 2393 0024 FFF7FEFF 		bl	GetLowByte
 2394              	.LVL294:
 2395 0028 2074     		strb	r0, [r4, #16]
 496:../user/source/DLT645.c ****     pucBuffer[18] = GetLowByte(Voltage_MAX);
 2396              		.loc 1 496 0
 2397 002a 4FF49660 		mov	r0, #1200
 2398 002e FFF7FEFF 		bl	GetHighByte
 2399              	.LVL295:
 2400 0032 6074     		strb	r0, [r4, #17]
 497:../user/source/DLT645.c ****     pucBuffer[19] = GetHighByte(Voltage_MAX); //µçÑ¹ÉÏÏŞÖµ
 2401              		.loc 1 497 0
 2402 0034 244B     		ldr	r3, .L158
 2403 0036 1D68     		ldr	r5, [r3]
 2404 0038 2846     		mov	r0, r5
 2405 003a FFF7FEFF 		bl	GetLowByte
 2406              	.LVL296:
 2407 003e A074     		strb	r0, [r4, #18]
 498:../user/source/DLT645.c ****     pucBuffer[20] = GetLowByte(Voltage_MIN);
 2408              		.loc 1 498 0
 2409 0040 2846     		mov	r0, r5
 2410 0042 FFF7FEFF 		bl	GetHighByte
 2411              	.LVL297:
 2412 0046 E074     		strb	r0, [r4, #19]
 499:../user/source/DLT645.c ****     pucBuffer[21] = GetHighByte(Voltage_MIN); //µçÑ¹ÏÂÏŞÖµ
 2413              		.loc 1 499 0
 2414 0048 204B     		ldr	r3, .L158+4
 2415 004a 1D68     		ldr	r5, [r3]
 2416 004c 2846     		mov	r0, r5
 2417 004e FFF7FEFF 		bl	GetLowByte
 2418              	.LVL298:
 2419 0052 2075     		strb	r0, [r4, #20]
 500:../user/source/DLT645.c ****     pucBuffer[22] = 0x00;                     //ÇóÈ¡Ğ£ÑéºÍ
 2420              		.loc 1 500 0
 2421 0054 2846     		mov	r0, r5
 2422 0056 FFF7FEFF 		bl	GetHighByte
 2423              	.LVL299:
 2424 005a 6075     		strb	r0, [r4, #21]
 501:../user/source/DLT645.c ****     for (i = 0; i < 24 - 2; i++)              //±¨ÎÄ³¤¶È24
 2425              		.loc 1 501 0
 2426 005c 0023     		movs	r3, #0
 2427 005e A375     		strb	r3, [r4, #22]
 502:../user/source/DLT645.c ****     {
 2428              		.loc 1 502 0
 2429 0060 04E0     		b	.L153
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 93


 2430              	.LVL300:
 2431              	.L154:
 504:../user/source/DLT645.c ****     }
 2432              		.loc 1 504 0 discriminator 3
 2433 0062 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2434 0064 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
 2435 0066 0A44     		add	r2, r2, r1
 2436 0068 A275     		strb	r2, [r4, #22]
 502:../user/source/DLT645.c ****     {
 2437              		.loc 1 502 0 discriminator 3
 2438 006a 0133     		adds	r3, r3, #1
 2439              	.LVL301:
 2440              	.L153:
 502:../user/source/DLT645.c ****     {
 2441              		.loc 1 502 0 is_stmt 0 discriminator 1
 2442 006c 152B     		cmp	r3, #21
 2443 006e F8DD     		ble	.L154
 506:../user/source/DLT645.c ****     uc645DataDomainLength = 12;
 2444              		.loc 1 506 0 is_stmt 1
 2445 0070 1623     		movs	r3, #22
 2446              	.LVL302:
 2447 0072 E375     		strb	r3, [r4, #23]
 507:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2448              		.loc 1 507 0
 2449 0074 0C22     		movs	r2, #12
 2450 0076 164B     		ldr	r3, .L158+8
 2451 0078 1A70     		strb	r2, [r3]
 509:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 2452              		.loc 1 509 0
 2453 007a 164D     		ldr	r5, .L158+12
 2454 007c 2B68     		ldr	r3, [r5]
 2455 007e 9968     		ldr	r1, [r3, #8]
 2456 0080 2046     		mov	r0, r4
 2457 0082 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2458              	.LVL303:
 510:../user/source/DLT645.c ****     {
 2459              		.loc 1 510 0
 2460 0086 2B68     		ldr	r3, [r5]
 2461 0088 9868     		ldr	r0, [r3, #8]
 2462 008a FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2463              	.LVL304:
 2464 008e 10B9     		cbnz	r0, .L155
 512:../user/source/DLT645.c ****     }
 2465              		.loc 1 512 0
 2466 0090 1148     		ldr	r0, .L158+16
 2467 0092 FFF7FEFF 		bl	Uart_DataPut
 2468              	.LVL305:
 2469              	.L155:
 516:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 2470              		.loc 1 516 0
 2471 0096 114D     		ldr	r5, .L158+20
 2472 0098 2B68     		ldr	r3, [r5]
 2473 009a 1822     		movs	r2, #24
 2474 009c 9968     		ldr	r1, [r3, #8]
 2475 009e 2046     		mov	r0, r4
 2476 00a0 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2477              	.LVL306:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 94


 517:../user/source/DLT645.c ****     {
 2478              		.loc 1 517 0
 2479 00a4 2B68     		ldr	r3, [r5]
 2480 00a6 9868     		ldr	r0, [r3, #8]
 2481 00a8 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2482              	.LVL307:
 2483 00ac 50B9     		cbnz	r0, .L152
 519:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 2484              		.loc 1 519 0
 2485 00ae 0C4C     		ldr	r4, .L158+24
 2486              	.LVL308:
 2487 00b0 0022     		movs	r2, #0
 2488 00b2 0C49     		ldr	r1, .L158+28
 2489 00b4 2046     		mov	r0, r4
 2490 00b6 FFF7FEFF 		bl	USART_ITConfig
 2491              	.LVL309:
 520:../user/source/DLT645.c ****     }
 2492              		.loc 1 520 0
 2493 00ba 0122     		movs	r2, #1
 2494 00bc 0A49     		ldr	r1, .L158+32
 2495 00be 2046     		mov	r0, r4
 2496 00c0 FFF7FEFF 		bl	USART_ITConfig
 2497              	.LVL310:
 2498              	.L152:
 2499 00c4 38BD     		pop	{r3, r4, r5, pc}
 2500              	.L159:
 2501 00c6 00BF     		.align	2
 2502              	.L158:
 2503 00c8 00000000 		.word	Voltage_MAX
 2504 00cc 00000000 		.word	Voltage_MIN
 2505 00d0 00000000 		.word	.LANCHOR0
 2506 00d4 00000000 		.word	.LANCHOR6
 2507 00d8 00480040 		.word	1073760256
 2508 00dc 00000000 		.word	.LANCHOR7
 2509 00e0 00440040 		.word	1073759232
 2510 00e4 05010500 		.word	327941
 2511 00e8 07010700 		.word	459015
 2512              		.cfi_endproc
 2513              	.LFE117:
 2515              		.section	.text.Default_Reset,"ax",%progbits
 2516              		.align	2
 2517              		.global	Default_Reset
 2518              		.thumb
 2519              		.thumb_func
 2521              	Default_Reset:
 2522              	.LFB118:
 533:../user/source/DLT645.c ****     int i = 0;
 2523              		.loc 1 533 0
 2524              		.cfi_startproc
 2525              		@ args = 0, pretend = 0, frame = 0
 2526              		@ frame_needed = 0, uses_anonymous_args = 0
 2527              	.LVL311:
 2528 0000 70B5     		push	{r4, r5, r6, lr}
 2529              	.LCFI24:
 2530              		.cfi_def_cfa_offset 16
 2531              		.cfi_offset 4, -16
 2532              		.cfi_offset 5, -12
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 95


 2533              		.cfi_offset 6, -8
 2534              		.cfi_offset 14, -4
 2535 0002 0446     		mov	r4, r0
 2536              	.LVL312:
 535:../user/source/DLT645.c ****     B_Voltage = WORK_VOLTAGE;                                        //BÏàµçÑ¹Öµ¸ÄÎª±ê×¼Öµ
 2537              		.loc 1 535 0
 2538 0004 40F69803 		movw	r3, #2200
 2539 0008 334A     		ldr	r2, .L166
 2540 000a 1360     		str	r3, [r2]
 536:../user/source/DLT645.c ****     C_Voltage = WORK_VOLTAGE;                                        //CÏàµçÑ¹Öµ¸ÄÎª±ê×¼Öµ
 2541              		.loc 1 536 0
 2542 000c 334A     		ldr	r2, .L166+4
 2543 000e 1360     		str	r3, [r2]
 537:../user/source/DLT645.c ****     Voltage_Change_State = Voltage_Change;                           //µçÑ¹ĞŞ¸Ä×´Ì¬¸ÄÎª¡°ÓĞĞ§¡±
 2544              		.loc 1 537 0
 2545 0010 334A     		ldr	r2, .L166+8
 2546 0012 1360     		str	r3, [r2]
 538:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VChangeState_Addr, Voltage_Change_State); //´æ´¢µ½FLASHÖĞ
 2547              		.loc 1 538 0
 2548 0014 FF21     		movs	r1, #255
 2549 0016 334B     		ldr	r3, .L166+12
 2550 0018 1970     		strb	r1, [r3]
 539:../user/source/DLT645.c ****     Voltage_MAX = Voltage_MAX_Default;                               //µçÑ¹ºÏ¸ñÏŞÖµ»Ö¸´Ä¬ÈÏ²¢ÇÒ´æµµ
 2551              		.loc 1 539 0
 2552 001a 3348     		ldr	r0, .L166+16
 2553              	.LVL313:
 2554 001c FFF7FEFF 		bl	Flash_Write_Word
 2555              	.LVL314:
 540:../user/source/DLT645.c ****     Voltage_MIN = Voltage_MIN_Default;
 2556              		.loc 1 540 0
 2557 0020 324E     		ldr	r6, .L166+20
 2558 0022 40F62E10 		movw	r0, #2350
 2559 0026 3060     		str	r0, [r6]
 541:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMAX1_Addr, GetLowByte(Voltage_MAX));
 2560              		.loc 1 541 0
 2561 0028 314D     		ldr	r5, .L166+24
 2562 002a 40F2BC73 		movw	r3, #1980
 2563 002e 2B60     		str	r3, [r5]
 542:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMAX2_Addr, GetHighByte(Voltage_MAX));
 2564              		.loc 1 542 0
 2565 0030 FFF7FEFF 		bl	GetLowByte
 2566              	.LVL315:
 2567 0034 0146     		mov	r1, r0
 2568 0036 2F48     		ldr	r0, .L166+28
 2569 0038 FFF7FEFF 		bl	Flash_Write_Word
 2570              	.LVL316:
 543:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMIN1_Addr, GetLowByte(Voltage_MIN));
 2571              		.loc 1 543 0
 2572 003c 3068     		ldr	r0, [r6]
 2573 003e FFF7FEFF 		bl	GetHighByte
 2574              	.LVL317:
 2575 0042 0146     		mov	r1, r0
 2576 0044 2C48     		ldr	r0, .L166+32
 2577 0046 FFF7FEFF 		bl	Flash_Write_Word
 2578              	.LVL318:
 544:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMIN2_Addr, GetHighByte(Voltage_MIN));
 2579              		.loc 1 544 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 96


 2580 004a 2868     		ldr	r0, [r5]
 2581 004c FFF7FEFF 		bl	GetLowByte
 2582              	.LVL319:
 2583 0050 0146     		mov	r1, r0
 2584 0052 2A48     		ldr	r0, .L166+36
 2585 0054 FFF7FEFF 		bl	Flash_Write_Word
 2586              	.LVL320:
 545:../user/source/DLT645.c ****     pucBuffer[8] = 0x94;  //ÇóÈ¡Ğ£ÑéºÍ
 2587              		.loc 1 545 0
 2588 0058 2868     		ldr	r0, [r5]
 2589 005a FFF7FEFF 		bl	GetHighByte
 2590              	.LVL321:
 2591 005e 0146     		mov	r1, r0
 2592 0060 2748     		ldr	r0, .L166+40
 2593 0062 FFF7FEFF 		bl	Flash_Write_Word
 2594              	.LVL322:
 546:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;  //ÇóÈ¡Ğ£ÑéºÍ
 2595              		.loc 1 546 0
 2596 0066 9423     		movs	r3, #148
 2597 0068 2372     		strb	r3, [r4, #8]
 547:../user/source/DLT645.c ****     pucBuffer[10] = 0x00; //ÇóÈ¡Ğ£ÑéºÍ
 2598              		.loc 1 547 0
 2599 006a 0023     		movs	r3, #0
 2600 006c 6372     		strb	r3, [r4, #9]
 548:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 2601              		.loc 1 548 0
 2602 006e A372     		strb	r3, [r4, #10]
 549:../user/source/DLT645.c ****     {
 2603              		.loc 1 549 0
 2604 0070 04E0     		b	.L161
 2605              	.LVL323:
 2606              	.L162:
 551:../user/source/DLT645.c ****     }
 2607              		.loc 1 551 0 discriminator 3
 2608 0072 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2609 0074 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 2610 0076 0A44     		add	r2, r2, r1
 2611 0078 A272     		strb	r2, [r4, #10]
 549:../user/source/DLT645.c ****     {
 2612              		.loc 1 549 0 discriminator 3
 2613 007a 0133     		adds	r3, r3, #1
 2614              	.LVL324:
 2615              	.L161:
 549:../user/source/DLT645.c ****     {
 2616              		.loc 1 549 0 is_stmt 0 discriminator 1
 2617 007c 092B     		cmp	r3, #9
 2618 007e F8DD     		ble	.L162
 553:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
 2619              		.loc 1 553 0 is_stmt 1
 2620 0080 1623     		movs	r3, #22
 2621              	.LVL325:
 2622 0082 E372     		strb	r3, [r4, #11]
 554:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2623              		.loc 1 554 0
 2624 0084 0022     		movs	r2, #0
 2625 0086 1F4B     		ldr	r3, .L166+44
 2626 0088 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 97


 556:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 2627              		.loc 1 556 0
 2628 008a 1F4D     		ldr	r5, .L166+48
 2629 008c 2B68     		ldr	r3, [r5]
 2630 008e 0C22     		movs	r2, #12
 2631 0090 9968     		ldr	r1, [r3, #8]
 2632 0092 2046     		mov	r0, r4
 2633 0094 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2634              	.LVL326:
 557:../user/source/DLT645.c ****     {
 2635              		.loc 1 557 0
 2636 0098 2B68     		ldr	r3, [r5]
 2637 009a 9868     		ldr	r0, [r3, #8]
 2638 009c FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2639              	.LVL327:
 2640 00a0 10B9     		cbnz	r0, .L163
 559:../user/source/DLT645.c ****     }
 2641              		.loc 1 559 0
 2642 00a2 1A48     		ldr	r0, .L166+52
 2643 00a4 FFF7FEFF 		bl	Uart_DataPut
 2644              	.LVL328:
 2645              	.L163:
 563:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 2646              		.loc 1 563 0
 2647 00a8 194D     		ldr	r5, .L166+56
 2648 00aa 2B68     		ldr	r3, [r5]
 2649 00ac 0C22     		movs	r2, #12
 2650 00ae 9968     		ldr	r1, [r3, #8]
 2651 00b0 2046     		mov	r0, r4
 2652 00b2 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2653              	.LVL329:
 564:../user/source/DLT645.c ****     {
 2654              		.loc 1 564 0
 2655 00b6 2B68     		ldr	r3, [r5]
 2656 00b8 9868     		ldr	r0, [r3, #8]
 2657 00ba FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2658              	.LVL330:
 2659 00be 50B9     		cbnz	r0, .L160
 566:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 2660              		.loc 1 566 0
 2661 00c0 144C     		ldr	r4, .L166+60
 2662              	.LVL331:
 2663 00c2 0022     		movs	r2, #0
 2664 00c4 1449     		ldr	r1, .L166+64
 2665 00c6 2046     		mov	r0, r4
 2666 00c8 FFF7FEFF 		bl	USART_ITConfig
 2667              	.LVL332:
 567:../user/source/DLT645.c ****     }
 2668              		.loc 1 567 0
 2669 00cc 0122     		movs	r2, #1
 2670 00ce 1349     		ldr	r1, .L166+68
 2671 00d0 2046     		mov	r0, r4
 2672 00d2 FFF7FEFF 		bl	USART_ITConfig
 2673              	.LVL333:
 2674              	.L160:
 2675 00d6 70BD     		pop	{r4, r5, r6, pc}
 2676              	.L167:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 98


 2677              		.align	2
 2678              	.L166:
 2679 00d8 00000000 		.word	.LANCHOR4
 2680 00dc 00000000 		.word	.LANCHOR8
 2681 00e0 00000000 		.word	.LANCHOR9
 2682 00e4 00000000 		.word	.LANCHOR5
 2683 00e8 141F0308 		.word	134422292
 2684 00ec 00000000 		.word	Voltage_MAX
 2685 00f0 00000000 		.word	Voltage_MIN
 2686 00f4 001F0308 		.word	134422272
 2687 00f8 041F0308 		.word	134422276
 2688 00fc 081F0308 		.word	134422280
 2689 0100 0C1F0308 		.word	134422284
 2690 0104 00000000 		.word	.LANCHOR0
 2691 0108 00000000 		.word	.LANCHOR6
 2692 010c 00480040 		.word	1073760256
 2693 0110 00000000 		.word	.LANCHOR7
 2694 0114 00440040 		.word	1073759232
 2695 0118 05010500 		.word	327941
 2696 011c 07010700 		.word	459015
 2697              		.cfi_endproc
 2698              	.LFE118:
 2700              		.section	.text.vCurrent_Limit_Set,"ax",%progbits
 2701              		.align	2
 2702              		.global	vCurrent_Limit_Set
 2703              		.thumb
 2704              		.thumb_func
 2706              	vCurrent_Limit_Set:
 2707              	.LFB135:
1487:../user/source/DLT645.c ****     uint8_t i;
 2708              		.loc 1 1487 0
 2709              		.cfi_startproc
 2710              		@ args = 0, pretend = 0, frame = 0
 2711              		@ frame_needed = 0, uses_anonymous_args = 0
 2712              	.LVL334:
 2713 0000 38B5     		push	{r3, r4, r5, lr}
 2714              	.LCFI25:
 2715              		.cfi_def_cfa_offset 16
 2716              		.cfi_offset 3, -16
 2717              		.cfi_offset 4, -12
 2718              		.cfi_offset 5, -8
 2719              		.cfi_offset 14, -4
 2720 0002 0446     		mov	r4, r0
1490:../user/source/DLT645.c ****     /*·ÇÖØ¹ıÔØµ÷Õû°æ±¾Ê±£¬»Ø¸´·ñÈÏÖ¡*/
 2721              		.loc 1 1490 0
 2722 0004 D423     		movs	r3, #212
 2723 0006 0372     		strb	r3, [r0, #8]
1513:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 2724              		.loc 1 1513 0
 2725 0008 0023     		movs	r3, #0
 2726 000a 4372     		strb	r3, [r0, #9]
1514:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 2727              		.loc 1 1514 0
 2728 000c 8372     		strb	r3, [r0, #10]
 2729              	.LVL335:
1515:../user/source/DLT645.c ****     {
 2730              		.loc 1 1515 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 99


 2731 000e 05E0     		b	.L169
 2732              	.LVL336:
 2733              	.L170:
1517:../user/source/DLT645.c ****     }
 2734              		.loc 1 1517 0 discriminator 3
 2735 0010 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2736 0012 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 2737 0014 0A44     		add	r2, r2, r1
 2738 0016 A272     		strb	r2, [r4, #10]
1515:../user/source/DLT645.c ****     {
 2739              		.loc 1 1515 0 discriminator 3
 2740 0018 0133     		adds	r3, r3, #1
 2741              	.LVL337:
 2742 001a DBB2     		uxtb	r3, r3
 2743              	.LVL338:
 2744              	.L169:
1515:../user/source/DLT645.c ****     {
 2745              		.loc 1 1515 0 is_stmt 0 discriminator 1
 2746 001c 092B     		cmp	r3, #9
 2747 001e F7D9     		bls	.L170
1519:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2748              		.loc 1 1519 0 is_stmt 1
 2749 0020 1623     		movs	r3, #22
 2750              	.LVL339:
 2751 0022 E372     		strb	r3, [r4, #11]
1521:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 2752              		.loc 1 1521 0
 2753 0024 0022     		movs	r2, #0
 2754 0026 144B     		ldr	r3, .L174
 2755 0028 1A70     		strb	r2, [r3]
1522:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 2756              		.loc 1 1522 0
 2757 002a 144D     		ldr	r5, .L174+4
 2758 002c 2B68     		ldr	r3, [r5]
 2759 002e 0C22     		movs	r2, #12
 2760 0030 9968     		ldr	r1, [r3, #8]
 2761 0032 2046     		mov	r0, r4
 2762              	.LVL340:
 2763 0034 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2764              	.LVL341:
1523:../user/source/DLT645.c ****     {
 2765              		.loc 1 1523 0
 2766 0038 2B68     		ldr	r3, [r5]
 2767 003a 9868     		ldr	r0, [r3, #8]
 2768 003c FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2769              	.LVL342:
 2770 0040 10B9     		cbnz	r0, .L171
1525:../user/source/DLT645.c ****     }
 2771              		.loc 1 1525 0
 2772 0042 0F48     		ldr	r0, .L174+8
 2773 0044 FFF7FEFF 		bl	Uart_DataPut
 2774              	.LVL343:
 2775              	.L171:
1529:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 2776              		.loc 1 1529 0
 2777 0048 0E4D     		ldr	r5, .L174+12
 2778 004a 2B68     		ldr	r3, [r5]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 100


 2779 004c 0C22     		movs	r2, #12
 2780 004e 9968     		ldr	r1, [r3, #8]
 2781 0050 2046     		mov	r0, r4
 2782 0052 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2783              	.LVL344:
1530:../user/source/DLT645.c ****     {
 2784              		.loc 1 1530 0
 2785 0056 2B68     		ldr	r3, [r5]
 2786 0058 9868     		ldr	r0, [r3, #8]
 2787 005a FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2788              	.LVL345:
 2789 005e 50B9     		cbnz	r0, .L168
1532:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 2790              		.loc 1 1532 0
 2791 0060 094C     		ldr	r4, .L174+16
 2792              	.LVL346:
 2793 0062 0022     		movs	r2, #0
 2794 0064 0949     		ldr	r1, .L174+20
 2795 0066 2046     		mov	r0, r4
 2796 0068 FFF7FEFF 		bl	USART_ITConfig
 2797              	.LVL347:
1533:../user/source/DLT645.c ****     }
 2798              		.loc 1 1533 0
 2799 006c 0122     		movs	r2, #1
 2800 006e 0849     		ldr	r1, .L174+24
 2801 0070 2046     		mov	r0, r4
 2802 0072 FFF7FEFF 		bl	USART_ITConfig
 2803              	.LVL348:
 2804              	.L168:
 2805 0076 38BD     		pop	{r3, r4, r5, pc}
 2806              	.L175:
 2807              		.align	2
 2808              	.L174:
 2809 0078 00000000 		.word	.LANCHOR0
 2810 007c 00000000 		.word	.LANCHOR6
 2811 0080 00480040 		.word	1073760256
 2812 0084 00000000 		.word	.LANCHOR7
 2813 0088 00440040 		.word	1073759232
 2814 008c 05010500 		.word	327941
 2815 0090 07010700 		.word	459015
 2816              		.cfi_endproc
 2817              	.LFE135:
 2819              		.section	.text.vCurrent_CTRatio_Set,"ax",%progbits
 2820              		.align	2
 2821              		.global	vCurrent_CTRatio_Set
 2822              		.thumb
 2823              		.thumb_func
 2825              	vCurrent_CTRatio_Set:
 2826              	.LFB136:
1550:../user/source/DLT645.c ****     uint8_t i;
 2827              		.loc 1 1550 0
 2828              		.cfi_startproc
 2829              		@ args = 0, pretend = 0, frame = 0
 2830              		@ frame_needed = 0, uses_anonymous_args = 0
 2831              	.LVL349:
 2832 0000 38B5     		push	{r3, r4, r5, lr}
 2833              	.LCFI26:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 101


 2834              		.cfi_def_cfa_offset 16
 2835              		.cfi_offset 3, -16
 2836              		.cfi_offset 4, -12
 2837              		.cfi_offset 5, -8
 2838              		.cfi_offset 14, -4
 2839 0002 0446     		mov	r4, r0
 2840              	.LVL350:
1553:../user/source/DLT645.c **** /*ÊäÈëµÄ×Ö½Ú¼õÈ¥33ºó²»ÊÇBCDÂëÔõÃ´°ì£¿*/
 2841              		.loc 1 1553 0
 2842 0004 D423     		movs	r3, #212
 2843 0006 0372     		strb	r3, [r0, #8]
1571:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 2844              		.loc 1 1571 0
 2845 0008 0023     		movs	r3, #0
 2846 000a 4372     		strb	r3, [r0, #9]
1572:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 2847              		.loc 1 1572 0
 2848 000c 8372     		strb	r3, [r0, #10]
 2849              	.LVL351:
1573:../user/source/DLT645.c ****     {
 2850              		.loc 1 1573 0
 2851 000e 05E0     		b	.L177
 2852              	.LVL352:
 2853              	.L178:
1575:../user/source/DLT645.c ****     }
 2854              		.loc 1 1575 0 discriminator 3
 2855 0010 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2856 0012 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 2857 0014 0A44     		add	r2, r2, r1
 2858 0016 A272     		strb	r2, [r4, #10]
1573:../user/source/DLT645.c ****     {
 2859              		.loc 1 1573 0 discriminator 3
 2860 0018 0133     		adds	r3, r3, #1
 2861              	.LVL353:
 2862 001a DBB2     		uxtb	r3, r3
 2863              	.LVL354:
 2864              	.L177:
1573:../user/source/DLT645.c ****     {
 2865              		.loc 1 1573 0 is_stmt 0 discriminator 1
 2866 001c 092B     		cmp	r3, #9
 2867 001e F7D9     		bls	.L178
1577:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2868              		.loc 1 1577 0 is_stmt 1
 2869 0020 1623     		movs	r3, #22
 2870              	.LVL355:
 2871 0022 E372     		strb	r3, [r4, #11]
1579:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 2872              		.loc 1 1579 0
 2873 0024 0022     		movs	r2, #0
 2874 0026 144B     		ldr	r3, .L182
 2875 0028 1A70     		strb	r2, [r3]
1580:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 2876              		.loc 1 1580 0
 2877 002a 144D     		ldr	r5, .L182+4
 2878 002c 2B68     		ldr	r3, [r5]
 2879 002e 0C22     		movs	r2, #12
 2880 0030 9968     		ldr	r1, [r3, #8]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 102


 2881 0032 2046     		mov	r0, r4
 2882              	.LVL356:
 2883 0034 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2884              	.LVL357:
1581:../user/source/DLT645.c ****     {
 2885              		.loc 1 1581 0
 2886 0038 2B68     		ldr	r3, [r5]
 2887 003a 9868     		ldr	r0, [r3, #8]
 2888 003c FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2889              	.LVL358:
 2890 0040 10B9     		cbnz	r0, .L179
1583:../user/source/DLT645.c ****     }
 2891              		.loc 1 1583 0
 2892 0042 0F48     		ldr	r0, .L182+8
 2893 0044 FFF7FEFF 		bl	Uart_DataPut
 2894              	.LVL359:
 2895              	.L179:
1587:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 2896              		.loc 1 1587 0
 2897 0048 0E4D     		ldr	r5, .L182+12
 2898 004a 2B68     		ldr	r3, [r5]
 2899 004c 0C22     		movs	r2, #12
 2900 004e 9968     		ldr	r1, [r3, #8]
 2901 0050 2046     		mov	r0, r4
 2902 0052 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2903              	.LVL360:
1588:../user/source/DLT645.c ****     {
 2904              		.loc 1 1588 0
 2905 0056 2B68     		ldr	r3, [r5]
 2906 0058 9868     		ldr	r0, [r3, #8]
 2907 005a FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2908              	.LVL361:
 2909 005e 50B9     		cbnz	r0, .L176
1590:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 2910              		.loc 1 1590 0
 2911 0060 094C     		ldr	r4, .L182+16
 2912              	.LVL362:
 2913 0062 0022     		movs	r2, #0
 2914 0064 0949     		ldr	r1, .L182+20
 2915 0066 2046     		mov	r0, r4
 2916 0068 FFF7FEFF 		bl	USART_ITConfig
 2917              	.LVL363:
1591:../user/source/DLT645.c ****     }
 2918              		.loc 1 1591 0
 2919 006c 0122     		movs	r2, #1
 2920 006e 0849     		ldr	r1, .L182+24
 2921 0070 2046     		mov	r0, r4
 2922 0072 FFF7FEFF 		bl	USART_ITConfig
 2923              	.LVL364:
 2924              	.L176:
 2925 0076 38BD     		pop	{r3, r4, r5, pc}
 2926              	.L183:
 2927              		.align	2
 2928              	.L182:
 2929 0078 00000000 		.word	.LANCHOR0
 2930 007c 00000000 		.word	.LANCHOR6
 2931 0080 00480040 		.word	1073760256
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 103


 2932 0084 00000000 		.word	.LANCHOR7
 2933 0088 00440040 		.word	1073759232
 2934 008c 05010500 		.word	327941
 2935 0090 07010700 		.word	459015
 2936              		.cfi_endproc
 2937              	.LFE136:
 2939              		.section	.text.vCurrent_Limit_ReadSet,"ax",%progbits
 2940              		.align	2
 2941              		.global	vCurrent_Limit_ReadSet
 2942              		.thumb
 2943              		.thumb_func
 2945              	vCurrent_Limit_ReadSet:
 2946              	.LFB137:
1607:../user/source/DLT645.c ****     uint8_t i;
 2947              		.loc 1 1607 0
 2948              		.cfi_startproc
 2949              		@ args = 0, pretend = 0, frame = 8
 2950              		@ frame_needed = 0, uses_anonymous_args = 0
 2951              	.LVL365:
 2952 0000 30B5     		push	{r4, r5, lr}
 2953              	.LCFI27:
 2954              		.cfi_def_cfa_offset 12
 2955              		.cfi_offset 4, -12
 2956              		.cfi_offset 5, -8
 2957              		.cfi_offset 14, -4
 2958 0002 85B0     		sub	sp, sp, #20
 2959              	.LCFI28:
 2960              		.cfi_def_cfa_offset 32
 2961 0004 0546     		mov	r5, r0
1610:../user/source/DLT645.c ****     limit.isminus = false;
 2962              		.loc 1 1610 0
 2963 0006 274B     		ldr	r3, .L190
 2964 0008 DB68     		ldr	r3, [r3, #12]
 2965 000a 0293     		str	r3, [sp, #8]
1611:../user/source/DLT645.c ****     vPut_Current(limit, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
 2966              		.loc 1 1611 0
 2967 000c 0024     		movs	r4, #0
 2968 000e 8DF80D40 		strb	r4, [sp, #13]
1612:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
 2969              		.loc 1 1612 0
 2970 0012 00F11003 		add	r3, r0, #16
 2971 0016 0093     		str	r3, [sp]
 2972 0018 00F10F03 		add	r3, r0, #15
 2973 001c 00F10E02 		add	r2, r0, #14
 2974 0020 04A9     		add	r1, sp, #16
 2975 0022 11E90300 		ldmdb	r1, {r0, r1}
 2976              	.LVL366:
 2977 0026 FFF7FEFF 		bl	vPut_Current
 2978              	.LVL367:
1613:../user/source/DLT645.c ****     pucBuffer[9] = 0x07;
 2979              		.loc 1 1613 0
 2980 002a 9123     		movs	r3, #145
 2981 002c 2B72     		strb	r3, [r5, #8]
1614:../user/source/DLT645.c ****     pucBuffer[17] = 0;
 2982              		.loc 1 1614 0
 2983 002e 0723     		movs	r3, #7
 2984 0030 6B72     		strb	r3, [r5, #9]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 104


1615:../user/source/DLT645.c ****     for (i = 0; i < 17; i++)
 2985              		.loc 1 1615 0
 2986 0032 6C74     		strb	r4, [r5, #17]
 2987              	.LVL368:
1616:../user/source/DLT645.c ****     {
 2988              		.loc 1 1616 0
 2989 0034 2346     		mov	r3, r4
 2990 0036 05E0     		b	.L185
 2991              	.LVL369:
 2992              	.L186:
1618:../user/source/DLT645.c ****     }
 2993              		.loc 1 1618 0 discriminator 3
 2994 0038 E95C     		ldrb	r1, [r5, r3]	@ zero_extendqisi2
 2995 003a 6A7C     		ldrb	r2, [r5, #17]	@ zero_extendqisi2
 2996 003c 0A44     		add	r2, r2, r1
 2997 003e 6A74     		strb	r2, [r5, #17]
1616:../user/source/DLT645.c ****     {
 2998              		.loc 1 1616 0 discriminator 3
 2999 0040 0133     		adds	r3, r3, #1
 3000              	.LVL370:
 3001 0042 DBB2     		uxtb	r3, r3
 3002              	.LVL371:
 3003              	.L185:
1616:../user/source/DLT645.c ****     {
 3004              		.loc 1 1616 0 is_stmt 0 discriminator 1
 3005 0044 102B     		cmp	r3, #16
 3006 0046 F7D9     		bls	.L186
1620:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 3007              		.loc 1 1620 0 is_stmt 1
 3008 0048 1623     		movs	r3, #22
 3009              	.LVL372:
 3010 004a AB74     		strb	r3, [r5, #18]
1622:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 19);
 3011              		.loc 1 1622 0
 3012 004c 0722     		movs	r2, #7
 3013 004e 164B     		ldr	r3, .L190+4
 3014 0050 1A70     		strb	r2, [r3]
1623:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 3015              		.loc 1 1623 0
 3016 0052 164C     		ldr	r4, .L190+8
 3017 0054 2368     		ldr	r3, [r4]
 3018 0056 1322     		movs	r2, #19
 3019 0058 9968     		ldr	r1, [r3, #8]
 3020 005a 2846     		mov	r0, r5
 3021 005c FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3022              	.LVL373:
1624:../user/source/DLT645.c ****     {
 3023              		.loc 1 1624 0
 3024 0060 2368     		ldr	r3, [r4]
 3025 0062 9868     		ldr	r0, [r3, #8]
 3026 0064 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3027              	.LVL374:
 3028 0068 10B9     		cbnz	r0, .L187
1626:../user/source/DLT645.c ****     }
 3029              		.loc 1 1626 0
 3030 006a 1148     		ldr	r0, .L190+12
 3031 006c FFF7FEFF 		bl	Uart_DataPut
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 105


 3032              	.LVL375:
 3033              	.L187:
1630:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 3034              		.loc 1 1630 0
 3035 0070 104C     		ldr	r4, .L190+16
 3036 0072 2368     		ldr	r3, [r4]
 3037 0074 1322     		movs	r2, #19
 3038 0076 9968     		ldr	r1, [r3, #8]
 3039 0078 2846     		mov	r0, r5
 3040 007a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3041              	.LVL376:
1631:../user/source/DLT645.c ****     {
 3042              		.loc 1 1631 0
 3043 007e 2368     		ldr	r3, [r4]
 3044 0080 9868     		ldr	r0, [r3, #8]
 3045 0082 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3046              	.LVL377:
 3047 0086 50B9     		cbnz	r0, .L184
1633:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3048              		.loc 1 1633 0
 3049 0088 0B4C     		ldr	r4, .L190+20
 3050 008a 0022     		movs	r2, #0
 3051 008c 0B49     		ldr	r1, .L190+24
 3052 008e 2046     		mov	r0, r4
 3053 0090 FFF7FEFF 		bl	USART_ITConfig
 3054              	.LVL378:
1634:../user/source/DLT645.c ****     }
 3055              		.loc 1 1634 0
 3056 0094 0122     		movs	r2, #1
 3057 0096 0A49     		ldr	r1, .L190+28
 3058 0098 2046     		mov	r0, r4
 3059 009a FFF7FEFF 		bl	USART_ITConfig
 3060              	.LVL379:
 3061              	.L184:
1637:../user/source/DLT645.c **** 
 3062              		.loc 1 1637 0
 3063 009e 05B0     		add	sp, sp, #20
 3064              	.LCFI29:
 3065              		.cfi_def_cfa_offset 12
 3066              		@ sp needed
 3067 00a0 30BD     		pop	{r4, r5, pc}
 3068              	.LVL380:
 3069              	.L191:
 3070 00a2 00BF     		.align	2
 3071              	.L190:
 3072 00a4 00000000 		.word	TransFormer
 3073 00a8 00000000 		.word	.LANCHOR0
 3074 00ac 00000000 		.word	.LANCHOR6
 3075 00b0 00480040 		.word	1073760256
 3076 00b4 00000000 		.word	.LANCHOR7
 3077 00b8 00440040 		.word	1073759232
 3078 00bc 05010500 		.word	327941
 3079 00c0 07010700 		.word	459015
 3080              		.cfi_endproc
 3081              	.LFE137:
 3083              		.section	.text.vCurrent_CTRatio_ReadSet,"ax",%progbits
 3084              		.align	2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 106


 3085              		.global	vCurrent_CTRatio_ReadSet
 3086              		.thumb
 3087              		.thumb_func
 3089              	vCurrent_CTRatio_ReadSet:
 3090              	.LFB138:
1650:../user/source/DLT645.c **** 
 3091              		.loc 1 1650 0
 3092              		.cfi_startproc
 3093              		@ args = 0, pretend = 0, frame = 0
 3094              		@ frame_needed = 0, uses_anonymous_args = 0
 3095              	.LVL381:
 3096 0000 38B5     		push	{r3, r4, r5, lr}
 3097              	.LCFI30:
 3098              		.cfi_def_cfa_offset 16
 3099              		.cfi_offset 3, -16
 3100              		.cfi_offset 4, -12
 3101              		.cfi_offset 5, -8
 3102              		.cfi_offset 14, -4
 3103 0002 0446     		mov	r4, r0
1653:../user/source/DLT645.c ****     pucBuffer[9] = 0x06;
 3104              		.loc 1 1653 0
 3105 0004 9123     		movs	r3, #145
 3106 0006 0372     		strb	r3, [r0, #8]
1654:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(TransFormer.CTratio);
 3107              		.loc 1 1654 0
 3108 0008 0623     		movs	r3, #6
 3109 000a 4372     		strb	r3, [r0, #9]
1655:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(TransFormer.CTratio);
 3110              		.loc 1 1655 0
 3111 000c 204B     		ldr	r3, .L198
 3112 000e 9D68     		ldr	r5, [r3, #8]
 3113 0010 2846     		mov	r0, r5
 3114              	.LVL382:
 3115 0012 FFF7FEFF 		bl	GetLowByte
 3116              	.LVL383:
 3117 0016 A073     		strb	r0, [r4, #14]
1656:../user/source/DLT645.c ****     pucBuffer[16] = 0;
 3118              		.loc 1 1656 0
 3119 0018 2846     		mov	r0, r5
 3120 001a FFF7FEFF 		bl	GetHighByte
 3121              	.LVL384:
 3122 001e E073     		strb	r0, [r4, #15]
1657:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
 3123              		.loc 1 1657 0
 3124 0020 0023     		movs	r3, #0
 3125 0022 2374     		strb	r3, [r4, #16]
 3126              	.LVL385:
1658:../user/source/DLT645.c ****     {
 3127              		.loc 1 1658 0
 3128 0024 05E0     		b	.L193
 3129              	.LVL386:
 3130              	.L194:
1660:../user/source/DLT645.c ****     }
 3131              		.loc 1 1660 0 discriminator 3
 3132 0026 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3133 0028 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 3134 002a 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 107


 3135 002c 2274     		strb	r2, [r4, #16]
1658:../user/source/DLT645.c ****     {
 3136              		.loc 1 1658 0 discriminator 3
 3137 002e 0133     		adds	r3, r3, #1
 3138              	.LVL387:
 3139 0030 DBB2     		uxtb	r3, r3
 3140              	.LVL388:
 3141              	.L193:
1658:../user/source/DLT645.c ****     {
 3142              		.loc 1 1658 0 is_stmt 0 discriminator 1
 3143 0032 0F2B     		cmp	r3, #15
 3144 0034 F7D9     		bls	.L194
1662:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 3145              		.loc 1 1662 0 is_stmt 1
 3146 0036 1623     		movs	r3, #22
 3147              	.LVL389:
 3148 0038 6374     		strb	r3, [r4, #17]
1664:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 18);
 3149              		.loc 1 1664 0
 3150 003a 0622     		movs	r2, #6
 3151 003c 154B     		ldr	r3, .L198+4
 3152 003e 1A70     		strb	r2, [r3]
1665:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 3153              		.loc 1 1665 0
 3154 0040 154D     		ldr	r5, .L198+8
 3155 0042 2B68     		ldr	r3, [r5]
 3156 0044 1222     		movs	r2, #18
 3157 0046 9968     		ldr	r1, [r3, #8]
 3158 0048 2046     		mov	r0, r4
 3159 004a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3160              	.LVL390:
1666:../user/source/DLT645.c ****     {
 3161              		.loc 1 1666 0
 3162 004e 2B68     		ldr	r3, [r5]
 3163 0050 9868     		ldr	r0, [r3, #8]
 3164 0052 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3165              	.LVL391:
 3166 0056 10B9     		cbnz	r0, .L195
1668:../user/source/DLT645.c ****     }
 3167              		.loc 1 1668 0
 3168 0058 1048     		ldr	r0, .L198+12
 3169 005a FFF7FEFF 		bl	Uart_DataPut
 3170              	.LVL392:
 3171              	.L195:
1672:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 3172              		.loc 1 1672 0
 3173 005e 104D     		ldr	r5, .L198+16
 3174 0060 2B68     		ldr	r3, [r5]
 3175 0062 1222     		movs	r2, #18
 3176 0064 9968     		ldr	r1, [r3, #8]
 3177 0066 2046     		mov	r0, r4
 3178 0068 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3179              	.LVL393:
1673:../user/source/DLT645.c ****     {
 3180              		.loc 1 1673 0
 3181 006c 2B68     		ldr	r3, [r5]
 3182 006e 9868     		ldr	r0, [r3, #8]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 108


 3183 0070 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3184              	.LVL394:
 3185 0074 50B9     		cbnz	r0, .L192
1675:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3186              		.loc 1 1675 0
 3187 0076 0B4C     		ldr	r4, .L198+20
 3188              	.LVL395:
 3189 0078 0022     		movs	r2, #0
 3190 007a 0B49     		ldr	r1, .L198+24
 3191 007c 2046     		mov	r0, r4
 3192 007e FFF7FEFF 		bl	USART_ITConfig
 3193              	.LVL396:
1676:../user/source/DLT645.c ****     }
 3194              		.loc 1 1676 0
 3195 0082 0122     		movs	r2, #1
 3196 0084 0949     		ldr	r1, .L198+28
 3197 0086 2046     		mov	r0, r4
 3198 0088 FFF7FEFF 		bl	USART_ITConfig
 3199              	.LVL397:
 3200              	.L192:
 3201 008c 38BD     		pop	{r3, r4, r5, pc}
 3202              	.L199:
 3203 008e 00BF     		.align	2
 3204              	.L198:
 3205 0090 00000000 		.word	TransFormer
 3206 0094 00000000 		.word	.LANCHOR0
 3207 0098 00000000 		.word	.LANCHOR6
 3208 009c 00480040 		.word	1073760256
 3209 00a0 00000000 		.word	.LANCHOR7
 3210 00a4 00440040 		.word	1073759232
 3211 00a8 05010500 		.word	327941
 3212 00ac 07010700 		.word	459015
 3213              		.cfi_endproc
 3214              	.LFE138:
 3216              		.section	.text.vCurrent_TransFormer_Capacity_ReadSet,"ax",%progbits
 3217              		.align	2
 3218              		.global	vCurrent_TransFormer_Capacity_ReadSet
 3219              		.thumb
 3220              		.thumb_func
 3222              	vCurrent_TransFormer_Capacity_ReadSet:
 3223              	.LFB139:
1692:../user/source/DLT645.c ****     uint8_t i;
 3224              		.loc 1 1692 0
 3225              		.cfi_startproc
 3226              		@ args = 0, pretend = 0, frame = 0
 3227              		@ frame_needed = 0, uses_anonymous_args = 0
 3228              	.LVL398:
 3229 0000 38B5     		push	{r3, r4, r5, lr}
 3230              	.LCFI31:
 3231              		.cfi_def_cfa_offset 16
 3232              		.cfi_offset 3, -16
 3233              		.cfi_offset 4, -12
 3234              		.cfi_offset 5, -8
 3235              		.cfi_offset 14, -4
 3236 0002 0446     		mov	r4, r0
1694:../user/source/DLT645.c ****     pucBuffer[9] = 0x06;
 3237              		.loc 1 1694 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 109


 3238 0004 9123     		movs	r3, #145
 3239 0006 0372     		strb	r3, [r0, #8]
1695:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(TransFormer.capacity);
 3240              		.loc 1 1695 0
 3241 0008 0623     		movs	r3, #6
 3242 000a 4372     		strb	r3, [r0, #9]
1696:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(TransFormer.capacity);
 3243              		.loc 1 1696 0
 3244 000c 204B     		ldr	r3, .L206
 3245 000e 1D68     		ldr	r5, [r3]
 3246 0010 2846     		mov	r0, r5
 3247              	.LVL399:
 3248 0012 FFF7FEFF 		bl	GetLowByte
 3249              	.LVL400:
 3250 0016 A073     		strb	r0, [r4, #14]
1697:../user/source/DLT645.c ****     pucBuffer[16] = 0;
 3251              		.loc 1 1697 0
 3252 0018 2846     		mov	r0, r5
 3253 001a FFF7FEFF 		bl	GetHighByte
 3254              	.LVL401:
 3255 001e E073     		strb	r0, [r4, #15]
1698:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
 3256              		.loc 1 1698 0
 3257 0020 0023     		movs	r3, #0
 3258 0022 2374     		strb	r3, [r4, #16]
 3259              	.LVL402:
1699:../user/source/DLT645.c ****     {
 3260              		.loc 1 1699 0
 3261 0024 05E0     		b	.L201
 3262              	.LVL403:
 3263              	.L202:
1701:../user/source/DLT645.c ****     }
 3264              		.loc 1 1701 0 discriminator 3
 3265 0026 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3266 0028 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 3267 002a 0A44     		add	r2, r2, r1
 3268 002c 2274     		strb	r2, [r4, #16]
1699:../user/source/DLT645.c ****     {
 3269              		.loc 1 1699 0 discriminator 3
 3270 002e 0133     		adds	r3, r3, #1
 3271              	.LVL404:
 3272 0030 DBB2     		uxtb	r3, r3
 3273              	.LVL405:
 3274              	.L201:
1699:../user/source/DLT645.c ****     {
 3275              		.loc 1 1699 0 is_stmt 0 discriminator 1
 3276 0032 0F2B     		cmp	r3, #15
 3277 0034 F7D9     		bls	.L202
1703:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 3278              		.loc 1 1703 0 is_stmt 1
 3279 0036 1623     		movs	r3, #22
 3280              	.LVL406:
 3281 0038 6374     		strb	r3, [r4, #17]
1705:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 18);
 3282              		.loc 1 1705 0
 3283 003a 0022     		movs	r2, #0
 3284 003c 154B     		ldr	r3, .L206+4
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 110


 3285 003e 1A70     		strb	r2, [r3]
1706:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 3286              		.loc 1 1706 0
 3287 0040 154D     		ldr	r5, .L206+8
 3288 0042 2B68     		ldr	r3, [r5]
 3289 0044 1222     		movs	r2, #18
 3290 0046 9968     		ldr	r1, [r3, #8]
 3291 0048 2046     		mov	r0, r4
 3292 004a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3293              	.LVL407:
1707:../user/source/DLT645.c ****     {
 3294              		.loc 1 1707 0
 3295 004e 2B68     		ldr	r3, [r5]
 3296 0050 9868     		ldr	r0, [r3, #8]
 3297 0052 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3298              	.LVL408:
 3299 0056 10B9     		cbnz	r0, .L203
1709:../user/source/DLT645.c ****     }
 3300              		.loc 1 1709 0
 3301 0058 1048     		ldr	r0, .L206+12
 3302 005a FFF7FEFF 		bl	Uart_DataPut
 3303              	.LVL409:
 3304              	.L203:
1713:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 3305              		.loc 1 1713 0
 3306 005e 104D     		ldr	r5, .L206+16
 3307 0060 2B68     		ldr	r3, [r5]
 3308 0062 1222     		movs	r2, #18
 3309 0064 9968     		ldr	r1, [r3, #8]
 3310 0066 2046     		mov	r0, r4
 3311 0068 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3312              	.LVL410:
1714:../user/source/DLT645.c ****     {
 3313              		.loc 1 1714 0
 3314 006c 2B68     		ldr	r3, [r5]
 3315 006e 9868     		ldr	r0, [r3, #8]
 3316 0070 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3317              	.LVL411:
 3318 0074 50B9     		cbnz	r0, .L200
1716:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3319              		.loc 1 1716 0
 3320 0076 0B4C     		ldr	r4, .L206+20
 3321              	.LVL412:
 3322 0078 0022     		movs	r2, #0
 3323 007a 0B49     		ldr	r1, .L206+24
 3324 007c 2046     		mov	r0, r4
 3325 007e FFF7FEFF 		bl	USART_ITConfig
 3326              	.LVL413:
1717:../user/source/DLT645.c ****     }
 3327              		.loc 1 1717 0
 3328 0082 0122     		movs	r2, #1
 3329 0084 0949     		ldr	r1, .L206+28
 3330 0086 2046     		mov	r0, r4
 3331 0088 FFF7FEFF 		bl	USART_ITConfig
 3332              	.LVL414:
 3333              	.L200:
 3334 008c 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 111


 3335              	.L207:
 3336 008e 00BF     		.align	2
 3337              	.L206:
 3338 0090 00000000 		.word	TransFormer
 3339 0094 00000000 		.word	.LANCHOR0
 3340 0098 00000000 		.word	.LANCHOR6
 3341 009c 00480040 		.word	1073760256
 3342 00a0 00000000 		.word	.LANCHOR7
 3343 00a4 00440040 		.word	1073759232
 3344 00a8 05010500 		.word	327941
 3345 00ac 07010700 		.word	459015
 3346              		.cfi_endproc
 3347              	.LFE139:
 3349              		.section	.text.vEnergy_Modify_ReadSet,"ax",%progbits
 3350              		.align	2
 3351              		.global	vEnergy_Modify_ReadSet
 3352              		.thumb
 3353              		.thumb_func
 3355              	vEnergy_Modify_ReadSet:
 3356              	.LFB155:
2409:../user/source/DLT645.c ****     //68 AA AA AA AA AA AA 68 91 04 33 76 34 33 71 16
 3357              		.loc 1 2409 0
 3358              		.cfi_startproc
 3359              		@ args = 0, pretend = 0, frame = 0
 3360              		@ frame_needed = 0, uses_anonymous_args = 0
 3361              	.LVL415:
 3362 0000 38B5     		push	{r3, r4, r5, lr}
 3363              	.LCFI32:
 3364              		.cfi_def_cfa_offset 16
 3365              		.cfi_offset 3, -16
 3366              		.cfi_offset 4, -12
 3367              		.cfi_offset 5, -8
 3368              		.cfi_offset 14, -4
2413:../user/source/DLT645.c ****         return;
 3369              		.loc 1 2413 0
 3370 0002 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 3371 0004 912B     		cmp	r3, #145
 3372 0006 4CD1     		bne	.L208
2416:../user/source/DLT645.c ****     //ratio = EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR);
 3373              		.loc 1 2416 0
 3374 0008 0623     		movs	r3, #6
 3375 000a 4372     		strb	r3, [r0, #9]
2418:../user/source/DLT645.c **** 
 3376              		.loc 1 2418 0
 3377 000c 254B     		ldr	r3, .L214
 3378 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3379              	.LVL416:
2420:../user/source/DLT645.c ****     pucbuffer[15] = DEC2BCD(ratio / 100); //¸ßÎ»ÔÚºó
 3380              		.loc 1 2420 0
 3381 0010 2549     		ldr	r1, .L214+4
 3382 0012 A1FB0231 		umull	r3, r1, r1, r2
 3383 0016 4909     		lsrs	r1, r1, #5
 3384 0018 6423     		movs	r3, #100
 3385 001a 03FB1123 		mls	r3, r3, r1, r2
 3386 001e DBB2     		uxtb	r3, r3
 3387 0020 224A     		ldr	r2, .L214+8
 3388              	.LVL417:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 112


 3389 0022 A2FB0342 		umull	r4, r2, r2, r3
 3390 0026 D208     		lsrs	r2, r2, #3
 3391 0028 02EB8205 		add	r5, r2, r2, lsl #2
 3392 002c 6C00     		lsls	r4, r5, #1
 3393 002e 1B1B     		subs	r3, r3, r4
 3394 0030 43EA0213 		orr	r3, r3, r2, lsl #4
 3395 0034 8373     		strb	r3, [r0, #14]
2421:../user/source/DLT645.c ****     pucbuffer[16] = 0;
 3396              		.loc 1 2421 0
 3397 0036 C173     		strb	r1, [r0, #15]
2422:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
 3398              		.loc 1 2422 0
 3399 0038 0023     		movs	r3, #0
 3400 003a 0374     		strb	r3, [r0, #16]
 3401              	.LVL418:
2423:../user/source/DLT645.c ****     {
 3402              		.loc 1 2423 0
 3403 003c 04E0     		b	.L210
 3404              	.LVL419:
 3405              	.L211:
2425:../user/source/DLT645.c ****     }
 3406              		.loc 1 2425 0 discriminator 3
 3407 003e C15C     		ldrb	r1, [r0, r3]	@ zero_extendqisi2
 3408 0040 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 3409 0042 0A44     		add	r2, r2, r1
 3410 0044 0274     		strb	r2, [r0, #16]
2423:../user/source/DLT645.c ****     {
 3411              		.loc 1 2423 0 discriminator 3
 3412 0046 0133     		adds	r3, r3, #1
 3413              	.LVL420:
 3414              	.L210:
2423:../user/source/DLT645.c ****     {
 3415              		.loc 1 2423 0 is_stmt 0 discriminator 1
 3416 0048 0F2B     		cmp	r3, #15
 3417 004a F8D9     		bls	.L211
 3418 004c 0446     		mov	r4, r0
2427:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 3419              		.loc 1 2427 0 is_stmt 1
 3420 004e 1623     		movs	r3, #22
 3421              	.LVL421:
 3422 0050 4374     		strb	r3, [r0, #17]
2429:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, pUartDB->pSndbuf, 18);
 3423              		.loc 1 2429 0
 3424 0052 0422     		movs	r2, #4
 3425 0054 164B     		ldr	r3, .L214+12
 3426 0056 1A70     		strb	r2, [r3]
2430:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 3427              		.loc 1 2430 0
 3428 0058 164D     		ldr	r5, .L214+16
 3429 005a 2B68     		ldr	r3, [r5]
 3430 005c 1222     		movs	r2, #18
 3431 005e 9968     		ldr	r1, [r3, #8]
 3432 0060 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3433              	.LVL422:
2431:../user/source/DLT645.c ****     {
 3434              		.loc 1 2431 0
 3435 0064 2B68     		ldr	r3, [r5]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 113


 3436 0066 9868     		ldr	r0, [r3, #8]
 3437 0068 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3438              	.LVL423:
 3439 006c 10B9     		cbnz	r0, .L212
2433:../user/source/DLT645.c ****     }
 3440              		.loc 1 2433 0
 3441 006e 1248     		ldr	r0, .L214+20
 3442 0070 FFF7FEFF 		bl	Uart_DataPut
 3443              	.LVL424:
 3444              	.L212:
2437:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 3445              		.loc 1 2437 0
 3446 0074 114D     		ldr	r5, .L214+24
 3447 0076 2B68     		ldr	r3, [r5]
 3448 0078 1222     		movs	r2, #18
 3449 007a 9968     		ldr	r1, [r3, #8]
 3450 007c 2046     		mov	r0, r4
 3451 007e FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3452              	.LVL425:
2438:../user/source/DLT645.c ****     {
 3453              		.loc 1 2438 0
 3454 0082 2B68     		ldr	r3, [r5]
 3455 0084 9868     		ldr	r0, [r3, #8]
 3456 0086 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3457              	.LVL426:
 3458 008a 50B9     		cbnz	r0, .L208
2440:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3459              		.loc 1 2440 0
 3460 008c 0C4C     		ldr	r4, .L214+28
 3461              	.LVL427:
 3462 008e 0022     		movs	r2, #0
 3463 0090 0C49     		ldr	r1, .L214+32
 3464 0092 2046     		mov	r0, r4
 3465 0094 FFF7FEFF 		bl	USART_ITConfig
 3466              	.LVL428:
2441:../user/source/DLT645.c ****     }
 3467              		.loc 1 2441 0
 3468 0098 0122     		movs	r2, #1
 3469 009a 0B49     		ldr	r1, .L214+36
 3470 009c 2046     		mov	r0, r4
 3471 009e FFF7FEFF 		bl	USART_ITConfig
 3472              	.LVL429:
 3473              	.L208:
 3474 00a2 38BD     		pop	{r3, r4, r5, pc}
 3475              	.L215:
 3476              		.align	2
 3477              	.L214:
 3478 00a4 00000000 		.word	ucDayfrozen_Modify_Ratio
 3479 00a8 1F85EB51 		.word	1374389535
 3480 00ac CDCCCCCC 		.word	-858993459
 3481 00b0 00000000 		.word	.LANCHOR0
 3482 00b4 00000000 		.word	.LANCHOR6
 3483 00b8 00480040 		.word	1073760256
 3484 00bc 00000000 		.word	.LANCHOR7
 3485 00c0 00440040 		.word	1073759232
 3486 00c4 05010500 		.word	327941
 3487 00c8 07010700 		.word	459015
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 114


 3488              		.cfi_endproc
 3489              	.LFE155:
 3491              		.section	.text.vRead_Version,"ax",%progbits
 3492              		.align	2
 3493              		.global	vRead_Version
 3494              		.thumb
 3495              		.thumb_func
 3497              	vRead_Version:
 3498              	.LFB163:
2709:../user/source/DLT645.c ****     uint16_t n = 0; //Êı¾İ¿é¸öÊı
2710:../user/source/DLT645.c ****     uint16_t length = pucbuffer[9];
2711:../user/source/DLT645.c ****     uint16_t ID_length = 0;
2712:../user/source/DLT645.c ****     uint32_t current = 0;
2713:../user/source/DLT645.c ****     uint16_t i = 0;
2714:../user/source/DLT645.c ****     uint32_t ABCcurrent = 0;
2715:../user/source/DLT645.c **** 
2716:../user/source/DLT645.c ****     if (pucbuffer[8] == 0x91 || pucbuffer[8] == 0xB1) //ÎŞºóĞøÖ¡£¬»ò·ÖÖ¡µÄµÚÒ»Ö¡
2717:../user/source/DLT645.c ****     {
2718:../user/source/DLT645.c ****         ID_length = 9; //Êı¾İ±êÊ¶*4 + Ê±±ê*5
2719:../user/source/DLT645.c ****     }
2720:../user/source/DLT645.c ****     if (pucbuffer[8] == 0x92 || pucbuffer[8] == 0xB2)
2721:../user/source/DLT645.c ****     {
2722:../user/source/DLT645.c ****         ID_length = 4; //Êı¾İ±êÊ¶*4 £¬ºöÂÔºóÃæµÄSEQ*1£¬Ô­ÒòÎªÕû³ı2ºó½á¹ûÒ»Ñù
2723:../user/source/DLT645.c ****     }
2724:../user/source/DLT645.c **** 
2725:../user/source/DLT645.c ****     switch (pucbuffer[10])
2726:../user/source/DLT645.c ****     {
2727:../user/source/DLT645.c ****     /*AÏàµçÁ÷*/
2728:../user/source/DLT645.c ****     case 0x34:
2729:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
2730:../user/source/DLT645.c ****         n = (length - ID_length) / 3;
2731:../user/source/DLT645.c ****         while (n--)
2732:../user/source/DLT645.c ****         {
2733:../user/source/DLT645.c ****             if (pucbuffer[10 + ID_length + 3 * n] == 0x32 || //ÊÇ3²»ÊÇ9
2734:../user/source/DLT645.c ****                 pucbuffer[11 + ID_length + 3 * n] == 0x32 ||
2735:../user/source/DLT645.c ****                 pucbuffer[12 + ID_length + 3 * n] == 0x32)
2736:../user/source/DLT645.c ****                 continue;
2737:../user/source/DLT645.c ****             /*¶ÁÈ¡µçÁ÷*/
2738:../user/source/DLT645.c ****             vGet_Current(pucbuffer[10 + ID_length + 3 * n],
2739:../user/source/DLT645.c ****                          pucbuffer[11 + ID_length + 3 * n],
2740:../user/source/DLT645.c ****                          pucbuffer[12 + ID_length + 3 * n],
2741:../user/source/DLT645.c ****                          &Acurrent);
2742:../user/source/DLT645.c ****             /*ĞŞ¸ÄµçÁ÷*/
2743:../user/source/DLT645.c ****             Acurrent.value = (Acurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT
2744:../user/source/DLT645.c ****             /*»ØĞ´µçÁ÷*/
2745:../user/source/DLT645.c ****             vPut_Current(Acurrent,
2746:../user/source/DLT645.c ****                          &pucbuffer[10 + ID_length + 3 * n],
2747:../user/source/DLT645.c ****                          &pucbuffer[11 + ID_length + 3 * n],
2748:../user/source/DLT645.c ****                          &pucbuffer[12 + ID_length + 3 * n]);
2749:../user/source/DLT645.c ****         }
2750:../user/source/DLT645.c ****         pucbuffer[length + 10] = 0;
2751:../user/source/DLT645.c ****         for (i = 0; i < (length + 10); i++)
2752:../user/source/DLT645.c ****         {
2753:../user/source/DLT645.c ****             pucbuffer[length + 10] += pucbuffer[i];
2754:../user/source/DLT645.c ****         }
2755:../user/source/DLT645.c ****         pucbuffer[length + 11] = 16;
2756:../user/source/DLT645.c **** #endif
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 115


2757:../user/source/DLT645.c ****         break;
2758:../user/source/DLT645.c ****         /*BÏàµçÁ÷*/
2759:../user/source/DLT645.c ****     case 0x35:
2760:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
2761:../user/source/DLT645.c ****         n = (length - ID_length) / 3;
2762:../user/source/DLT645.c ****         while (n--)
2763:../user/source/DLT645.c ****         {
2764:../user/source/DLT645.c ****             if (pucbuffer[10 + ID_length + 3 * n] == 0x32 ||
2765:../user/source/DLT645.c ****                 pucbuffer[11 + ID_length + 3 * n] == 0x32 ||
2766:../user/source/DLT645.c ****                 pucbuffer[12 + ID_length + 3 * n] == 0x32)
2767:../user/source/DLT645.c ****                 continue;
2768:../user/source/DLT645.c ****             /*¶ÁÈ¡µçÁ÷*/
2769:../user/source/DLT645.c ****             vGet_Current(pucbuffer[10 + ID_length + 3 * n],
2770:../user/source/DLT645.c ****                          pucbuffer[11 + ID_length + 3 * n],
2771:../user/source/DLT645.c ****                          pucbuffer[12 + ID_length + 3 * n],
2772:../user/source/DLT645.c ****                          &Bcurrent);
2773:../user/source/DLT645.c ****             /*ĞŞ¸ÄµçÁ÷*/
2774:../user/source/DLT645.c ****             Bcurrent.value = (Bcurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT
2775:../user/source/DLT645.c ****                                                                                   : Bcurrent.value)
2776:../user/source/DLT645.c ****             /*»ØĞ´µçÁ÷*/
2777:../user/source/DLT645.c ****             vPut_Current(Bcurrent,
2778:../user/source/DLT645.c ****                          &pucbuffer[10 + ID_length + 3 * n],
2779:../user/source/DLT645.c ****                          &pucbuffer[11 + ID_length + 3 * n],
2780:../user/source/DLT645.c ****                          &pucbuffer[12 + ID_length + 3 * n]);
2781:../user/source/DLT645.c ****         }
2782:../user/source/DLT645.c ****         pucbuffer[length + 10] = 0;
2783:../user/source/DLT645.c ****         for (i = 0; i < (length + 10); i++)
2784:../user/source/DLT645.c ****         {
2785:../user/source/DLT645.c ****             pucbuffer[length + 10] += pucbuffer[i];
2786:../user/source/DLT645.c ****         }
2787:../user/source/DLT645.c ****         pucbuffer[length + 11] = 16;
2788:../user/source/DLT645.c **** #endif
2789:../user/source/DLT645.c ****         break;
2790:../user/source/DLT645.c ****     case 0x36: //CÏàµçÁ÷
2791:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
2792:../user/source/DLT645.c ****         n = (length - ID_length) / 3;
2793:../user/source/DLT645.c ****         while (n--)
2794:../user/source/DLT645.c ****         {
2795:../user/source/DLT645.c ****             if (pucbuffer[10 + ID_length + 9 * n] == 0x32 ||
2796:../user/source/DLT645.c ****                 pucbuffer[11 + ID_length + 9 * n] == 0x32 ||
2797:../user/source/DLT645.c ****                 pucbuffer[12 + ID_length + 9 * n] == 0x32)
2798:../user/source/DLT645.c ****                 continue;
2799:../user/source/DLT645.c ****             /*¶ÁÈ¡µçÁ÷*/
2800:../user/source/DLT645.c ****             vGet_Current(pucbuffer[10 + ID_length + 3 * n],
2801:../user/source/DLT645.c ****                          pucbuffer[11 + ID_length + 3 * n],
2802:../user/source/DLT645.c ****                          pucbuffer[12 + ID_length + 3 * n],
2803:../user/source/DLT645.c ****                          &Ccurrent);
2804:../user/source/DLT645.c ****             /*ĞŞ¸ÄµçÁ÷*/
2805:../user/source/DLT645.c ****             Ccurrent.value = (Ccurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT
2806:../user/source/DLT645.c ****             /*»ØĞ´µçÁ÷*/
2807:../user/source/DLT645.c ****             vPut_Current(Ccurrent,
2808:../user/source/DLT645.c ****                          &pucbuffer[10 + ID_length + 3 * n],
2809:../user/source/DLT645.c ****                          &pucbuffer[11 + ID_length + 3 * n],
2810:../user/source/DLT645.c ****                          &pucbuffer[12 + ID_length + 3 * n]);
2811:../user/source/DLT645.c ****         }
2812:../user/source/DLT645.c ****         pucbuffer[length + 10] = 0;
2813:../user/source/DLT645.c ****         for (i = 0; i < (length + 10); i++)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 116


2814:../user/source/DLT645.c ****         {
2815:../user/source/DLT645.c ****             pucbuffer[length + 10] += pucbuffer[i];
2816:../user/source/DLT645.c ****         }
2817:../user/source/DLT645.c ****         pucbuffer[length + 11] = 16;
2818:../user/source/DLT645.c **** #endif
2819:../user/source/DLT645.c ****         break;
2820:../user/source/DLT645.c ****     case 0x32: //¿éµçÁ÷
2821:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_DEVIATION
2822:../user/source/DLT645.c ****         n = (length - ID_length) / 9; //Êı¾İµã¸öÊı
2823:../user/source/DLT645.c ****         while (n--)
2824:../user/source/DLT645.c ****         {
2825:../user/source/DLT645.c ****             vGet_Current(pucbuffer[10 + ID_length + 9 * n],
2826:../user/source/DLT645.c ****                          pucbuffer[11 + ID_length + 9 * n],
2827:../user/source/DLT645.c ****                          pucbuffer[12 + ID_length + 9 * n],
2828:../user/source/DLT645.c ****                          &Acurrent);
2829:../user/source/DLT645.c **** 
2830:../user/source/DLT645.c ****             vGet_Current(pucbuffer[13 + ID_length + 9 * n],
2831:../user/source/DLT645.c ****                          pucbuffer[14 + ID_length + 9 * n],
2832:../user/source/DLT645.c ****                          pucbuffer[15 + ID_length + 9 * n],
2833:../user/source/DLT645.c ****                          &Bcurrent);
2834:../user/source/DLT645.c **** 
2835:../user/source/DLT645.c ****             vGet_Current(pucbuffer[16 + ID_length + 9 * n],
2836:../user/source/DLT645.c ****                          pucbuffer[17 + ID_length + 9 * n],
2837:../user/source/DLT645.c ****                          pucbuffer[18 + ID_length + 9 * n],
2838:../user/source/DLT645.c ****                          &Ccurrent);
2839:../user/source/DLT645.c **** 
2840:../user/source/DLT645.c ****             //µçÁ÷Îª¸ºÖµ,²»ĞŞ¸ÄµçÁ÷
2841:../user/source/DLT645.c ****             if (Acurrent.isminus || Bcurrent.isminus || Ccurrent.isminus)
2842:../user/source/DLT645.c ****                 continue;
2843:../user/source/DLT645.c ****             //µçÁ÷Îª0£¬²»ĞŞ¸ÄµçÁ÷
2844:../user/source/DLT645.c ****             if ((Acurrent.value == 0) || (Bcurrent.value == 0) || (Ccurrent.value == 0))
2845:../user/source/DLT645.c ****                 continue;
2846:../user/source/DLT645.c ****             //µçÁ÷Ïà»¥Ö®¼ä²»³¬²î£¬²»ĞŞ¸ÄµçÁ÷
2847:../user/source/DLT645.c ****             if (CURRENT_MAX_DVALUE * MAX(Acurrent.value, MAX(Bcurrent.value, Ccurrent.value)) / 100
2848:../user/source/DLT645.c ****                 MIN(Acurrent.value, MIN(Bcurrent.value, Ccurrent.value)))
2849:../user/source/DLT645.c ****                 continue;
2850:../user/source/DLT645.c ****             else //ĞèÒªĞŞ¸Ä£¬×î´óÖµ¼õĞ¡£¬×îĞ¡ÖµÔö´ó£¬Ê£ÏÂµÄÊÇÖĞ¼äÖµ
2851:../user/source/DLT645.c ****             {
2852:../user/source/DLT645.c ****                 if ((Acurrent.value >= Bcurrent.value) && (Bcurrent.value >= Ccurrent.value))
2853:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Acurrent, &Bcurrent, &Ccurrent);
2854:../user/source/DLT645.c ****                 else if ((Acurrent.value >= Ccurrent.value) && (Ccurrent.value >= Bcurrent.value))
2855:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Acurrent, &Ccurrent, &Bcurrent);
2856:../user/source/DLT645.c ****                 else if ((Bcurrent.value >= Acurrent.value) && (Acurrent.value >= Ccurrent.value))
2857:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Bcurrent, &Acurrent, &Ccurrent);
2858:../user/source/DLT645.c ****                 else if ((Bcurrent.value >= Ccurrent.value) && (Ccurrent.value >= Acurrent.value))
2859:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Bcurrent, &Ccurrent, &Acurrent);
2860:../user/source/DLT645.c ****                 else if ((Ccurrent.value >= Acurrent.value) && (Acurrent.value >= Bcurrent.value))
2861:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Ccurrent, &Acurrent, &Bcurrent);
2862:../user/source/DLT645.c ****                 else if ((Ccurrent.value >= Bcurrent.value) && (Bcurrent.value >= Acurrent.value))
2863:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Ccurrent, &Bcurrent, &Acurrent);
2864:../user/source/DLT645.c ****                 /*»ØĞ´µçÁ÷*/
2865:../user/source/DLT645.c ****                 vPut_Current(Acurrent,
2866:../user/source/DLT645.c ****                              &pucbuffer[10 + ID_length + 9 * n],
2867:../user/source/DLT645.c ****                              &pucbuffer[11 + ID_length + 9 * n],
2868:../user/source/DLT645.c ****                              &pucbuffer[12 + ID_length + 9 * n]);
2869:../user/source/DLT645.c **** 
2870:../user/source/DLT645.c ****                 vPut_Current(Bcurrent,
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 117


2871:../user/source/DLT645.c ****                              &pucbuffer[14 + ID_length + 9 * n],
2872:../user/source/DLT645.c ****                              &pucbuffer[15 + ID_length + 9 * n],
2873:../user/source/DLT645.c ****                              &pucbuffer[16 + ID_length + 9 * n]);
2874:../user/source/DLT645.c **** 
2875:../user/source/DLT645.c ****                 vPut_Current(Ccurrent,
2876:../user/source/DLT645.c ****                              &pucbuffer[17 + ID_length + 9 * n],
2877:../user/source/DLT645.c ****                              &pucbuffer[18 + ID_length + 9 * n],
2878:../user/source/DLT645.c ****                              &pucbuffer[19 + ID_length + 9 * n]);
2879:../user/source/DLT645.c ****             }
2880:../user/source/DLT645.c ****         }
2881:../user/source/DLT645.c ****         pucbuffer[length + 10] = 0;
2882:../user/source/DLT645.c ****         for (i = 0; i < length + 10; i++)
2883:../user/source/DLT645.c ****         {
2884:../user/source/DLT645.c ****             pucbuffer[length + 10] += pucbuffer[i];
2885:../user/source/DLT645.c ****         }
2886:../user/source/DLT645.c ****         pucbuffer[length + 11] = 0x16;
2887:../user/source/DLT645.c **** #endif
2888:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
2889:../user/source/DLT645.c ****         n = (length - ID_length) / 9; //Êı¾İµã¸öÊı
2890:../user/source/DLT645.c ****         while (n--)
2891:../user/source/DLT645.c ****         {
2892:../user/source/DLT645.c ****             /*FFÎŞĞ§Êı¾İ*/
2893:../user/source/DLT645.c ****             if (pucbuffer[10 + ID_length + 9 * n] == 0x32 ||
2894:../user/source/DLT645.c ****                 pucbuffer[11 + ID_length + 9 * n] == 0x32 ||
2895:../user/source/DLT645.c ****                 pucbuffer[12 + ID_length + 9 * n] == 0x32 ||
2896:../user/source/DLT645.c ****                 pucbuffer[13 + ID_length + 9 * n] == 0x32 ||
2897:../user/source/DLT645.c ****                 pucbuffer[14 + ID_length + 9 * n] == 0x32 ||
2898:../user/source/DLT645.c ****                 pucbuffer[15 + ID_length + 9 * n] == 0x32 ||
2899:../user/source/DLT645.c ****                 pucbuffer[16 + ID_length + 9 * n] == 0x32 ||
2900:../user/source/DLT645.c ****                 pucbuffer[17 + ID_length + 9 * n] == 0x32 ||
2901:../user/source/DLT645.c ****                 pucbuffer[18 + ID_length + 9 * n] == 0x32)
2902:../user/source/DLT645.c ****                 continue;
2903:../user/source/DLT645.c **** 
2904:../user/source/DLT645.c ****             /*¶ÁÈ¡µçÁ÷*/
2905:../user/source/DLT645.c ****             vGet_Current(pucbuffer[10 + ID_length + 9 * n],
2906:../user/source/DLT645.c ****                          pucbuffer[11 + ID_length + 9 * n],
2907:../user/source/DLT645.c ****                          pucbuffer[12 + ID_length + 9 * n],
2908:../user/source/DLT645.c ****                          &Acurrent);
2909:../user/source/DLT645.c ****             vGet_Current(pucbuffer[13 + ID_length + 9 * n],
2910:../user/source/DLT645.c ****                          pucbuffer[14 + ID_length + 9 * n],
2911:../user/source/DLT645.c ****                          pucbuffer[15 + ID_length + 9 * n],
2912:../user/source/DLT645.c ****                          &Bcurrent);
2913:../user/source/DLT645.c ****             vGet_Current(pucbuffer[16 + ID_length + 9 * n],
2914:../user/source/DLT645.c ****                          pucbuffer[17 + ID_length + 9 * n],
2915:../user/source/DLT645.c ****                          pucbuffer[18 + ID_length + 9 * n],
2916:../user/source/DLT645.c ****                          &Ccurrent);
2917:../user/source/DLT645.c **** 
2918:../user/source/DLT645.c ****             ABCcurrent = Acurrent.value + Bcurrent.value + Ccurrent.value;
2919:../user/source/DLT645.c ****             if (ABCcurrent > TransFormer.CT2_CurrentLimit)
2920:../user/source/DLT645.c ****             {
2921:../user/source/DLT645.c ****                 Acurrent.value = TransFormer.CT2_CurrentLimit * Acurrent.value / ABCcurrent;
2922:../user/source/DLT645.c ****                 Bcurrent.value = TransFormer.CT2_CurrentLimit * Bcurrent.value / ABCcurrent;
2923:../user/source/DLT645.c ****                 Ccurrent.value = TransFormer.CT2_CurrentLimit * Ccurrent.value / ABCcurrent;
2924:../user/source/DLT645.c ****             }
2925:../user/source/DLT645.c ****             /*±£Ö¤Ã¿µ¥ÏàµçÁ÷²»ÖØÔØ*/
2926:../user/source/DLT645.c ****             Acurrent.value = (Acurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT
2927:../user/source/DLT645.c ****             Bcurrent.value = (Bcurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 118


2928:../user/source/DLT645.c ****             Ccurrent.value = (Ccurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT
2929:../user/source/DLT645.c ****             /*»ØĞ´µçÁ÷*/
2930:../user/source/DLT645.c ****             vPut_Current(Acurrent,
2931:../user/source/DLT645.c ****                          &pucbuffer[10 + ID_length + 9 * n],
2932:../user/source/DLT645.c ****                          &pucbuffer[11 + ID_length + 9 * n],
2933:../user/source/DLT645.c ****                          &pucbuffer[12 + ID_length + 9 * n]);
2934:../user/source/DLT645.c ****             vPut_Current(Bcurrent,
2935:../user/source/DLT645.c ****                          &pucbuffer[13 + ID_length + 9 * n],
2936:../user/source/DLT645.c ****                          &pucbuffer[14 + ID_length + 9 * n],
2937:../user/source/DLT645.c ****                          &pucbuffer[15 + ID_length + 9 * n]);
2938:../user/source/DLT645.c ****             vPut_Current(Ccurrent,
2939:../user/source/DLT645.c ****                          &pucbuffer[16 + ID_length + 9 * n],
2940:../user/source/DLT645.c ****                          &pucbuffer[17 + ID_length + 9 * n],
2941:../user/source/DLT645.c ****                          &pucbuffer[18 + ID_length + 9 * n]);
2942:../user/source/DLT645.c ****         }
2943:../user/source/DLT645.c ****         pucbuffer[length + 10] = 0;
2944:../user/source/DLT645.c ****         for (i = 0; i < length + 10; i++)
2945:../user/source/DLT645.c ****         {
2946:../user/source/DLT645.c ****             pucbuffer[length + 10] += pucbuffer[i];
2947:../user/source/DLT645.c ****         }
2948:../user/source/DLT645.c ****         pucbuffer[length + 11] = 0x16;
2949:../user/source/DLT645.c **** #endif
2950:../user/source/DLT645.c ****         break;
2951:../user/source/DLT645.c ****     default:
2952:../user/source/DLT645.c ****         break;
2953:../user/source/DLT645.c ****     }
2954:../user/source/DLT645.c **** }
2955:../user/source/DLT645.c **** 
2956:../user/source/DLT645.c **** /*
2957:../user/source/DLT645.c **** ½­Î÷£º01
2958:../user/source/DLT645.c **** É½¶«£º02
2959:../user/source/DLT645.c **** ÖØÇì£º03
2960:../user/source/DLT645.c **** */
2961:../user/source/DLT645.c **** void vRead_Version(uint8_t *pucbuffer)
2962:../user/source/DLT645.c **** {
 3499              		.loc 1 2962 0
 3500              		.cfi_startproc
 3501              		@ args = 0, pretend = 0, frame = 0
 3502              		@ frame_needed = 0, uses_anonymous_args = 0
 3503              	.LVL430:
 3504 0000 38B5     		push	{r3, r4, r5, lr}
 3505              	.LCFI33:
 3506              		.cfi_def_cfa_offset 16
 3507              		.cfi_offset 3, -16
 3508              		.cfi_offset 4, -12
 3509              		.cfi_offset 5, -8
 3510              		.cfi_offset 14, -4
 3511 0002 0446     		mov	r4, r0
2963:../user/source/DLT645.c ****     uint8_t i;
2964:../user/source/DLT645.c ****     pucbuffer[8] = 0x91;
 3512              		.loc 1 2964 0
 3513 0004 9123     		movs	r3, #145
 3514 0006 0372     		strb	r3, [r0, #8]
2965:../user/source/DLT645.c ****     pucbuffer[9] = 0x08;
 3515              		.loc 1 2965 0
 3516 0008 0823     		movs	r3, #8
 3517 000a 4372     		strb	r3, [r0, #9]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 119


2966:../user/source/DLT645.c ****     pucbuffer[14] = 0x03; //µØÇø
 3518              		.loc 1 2966 0
 3519 000c 0323     		movs	r3, #3
 3520 000e 8373     		strb	r3, [r0, #14]
2967:../user/source/DLT645.c ****     pucbuffer[15] = 0x05; //ÈÕÔÂÄê
 3521              		.loc 1 2967 0
 3522 0010 0523     		movs	r3, #5
 3523 0012 C373     		strb	r3, [r0, #15]
2968:../user/source/DLT645.c ****     pucbuffer[16] = 0x11;
 3524              		.loc 1 2968 0
 3525 0014 1123     		movs	r3, #17
 3526 0016 0374     		strb	r3, [r0, #16]
2969:../user/source/DLT645.c ****     pucbuffer[17] = 0x18;
 3527              		.loc 1 2969 0
 3528 0018 1823     		movs	r3, #24
 3529 001a 4374     		strb	r3, [r0, #17]
2970:../user/source/DLT645.c ****     pucbuffer[18] = 0;
 3530              		.loc 1 2970 0
 3531 001c 0023     		movs	r3, #0
 3532 001e 8374     		strb	r3, [r0, #18]
 3533              	.LVL431:
2971:../user/source/DLT645.c ****     for (i = 0; i < 18; i++)
 3534              		.loc 1 2971 0
 3535 0020 05E0     		b	.L217
 3536              	.LVL432:
 3537              	.L218:
2972:../user/source/DLT645.c ****     {
2973:../user/source/DLT645.c ****         pucbuffer[18] += pucbuffer[i];
 3538              		.loc 1 2973 0 discriminator 3
 3539 0022 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3540 0024 A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 3541 0026 0A44     		add	r2, r2, r1
 3542 0028 A274     		strb	r2, [r4, #18]
2971:../user/source/DLT645.c ****     for (i = 0; i < 18; i++)
 3543              		.loc 1 2971 0 discriminator 3
 3544 002a 0133     		adds	r3, r3, #1
 3545              	.LVL433:
 3546 002c DBB2     		uxtb	r3, r3
 3547              	.LVL434:
 3548              	.L217:
2971:../user/source/DLT645.c ****     for (i = 0; i < 18; i++)
 3549              		.loc 1 2971 0 is_stmt 0 discriminator 1
 3550 002e 112B     		cmp	r3, #17
 3551 0030 F7D9     		bls	.L218
2974:../user/source/DLT645.c ****     }
2975:../user/source/DLT645.c ****     pucbuffer[19] = 0x16;
 3552              		.loc 1 2975 0 is_stmt 1
 3553 0032 1623     		movs	r3, #22
 3554              	.LVL435:
 3555 0034 E374     		strb	r3, [r4, #19]
2976:../user/source/DLT645.c ****     uc645DataDomainLength = 8;
 3556              		.loc 1 2976 0
 3557 0036 0822     		movs	r2, #8
 3558 0038 144B     		ldr	r3, .L222
 3559 003a 1A70     		strb	r2, [r3]
2977:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, pUartDB->pSndbuf, 20);
 3560              		.loc 1 2977 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 120


 3561 003c 144D     		ldr	r5, .L222+4
 3562 003e 2B68     		ldr	r3, [r5]
 3563 0040 1422     		movs	r2, #20
 3564 0042 9968     		ldr	r1, [r3, #8]
 3565 0044 2046     		mov	r0, r4
 3566              	.LVL436:
 3567 0046 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3568              	.LVL437:
2978:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 3569              		.loc 1 2978 0
 3570 004a 2B68     		ldr	r3, [r5]
 3571 004c 9868     		ldr	r0, [r3, #8]
 3572 004e FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3573              	.LVL438:
 3574 0052 10B9     		cbnz	r0, .L219
2979:../user/source/DLT645.c ****     {
2980:../user/source/DLT645.c ****         Uart_DataPut(USART3);
 3575              		.loc 1 2980 0
 3576 0054 0F48     		ldr	r0, .L222+8
 3577 0056 FFF7FEFF 		bl	Uart_DataPut
 3578              	.LVL439:
 3579              	.L219:
2981:../user/source/DLT645.c ****     }
2982:../user/source/DLT645.c **** /*ºìÍâ¿Ú»Ø¸´*/
2983:../user/source/DLT645.c **** #ifdef ENABLE_INFR
2984:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, pUartIR->pSndbuf, 20);
 3580              		.loc 1 2984 0
 3581 005a 0F4D     		ldr	r5, .L222+12
 3582 005c 2B68     		ldr	r3, [r5]
 3583 005e 1422     		movs	r2, #20
 3584 0060 9968     		ldr	r1, [r3, #8]
 3585 0062 2046     		mov	r0, r4
 3586 0064 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3587              	.LVL440:
2985:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 3588              		.loc 1 2985 0
 3589 0068 2B68     		ldr	r3, [r5]
 3590 006a 9868     		ldr	r0, [r3, #8]
 3591 006c FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3592              	.LVL441:
 3593 0070 50B9     		cbnz	r0, .L216
2986:../user/source/DLT645.c ****     {
2987:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
 3594              		.loc 1 2987 0
 3595 0072 0A4C     		ldr	r4, .L222+16
 3596              	.LVL442:
 3597 0074 0022     		movs	r2, #0
 3598 0076 0A49     		ldr	r1, .L222+20
 3599 0078 2046     		mov	r0, r4
 3600 007a FFF7FEFF 		bl	USART_ITConfig
 3601              	.LVL443:
2988:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3602              		.loc 1 2988 0
 3603 007e 0122     		movs	r2, #1
 3604 0080 0849     		ldr	r1, .L222+24
 3605 0082 2046     		mov	r0, r4
 3606 0084 FFF7FEFF 		bl	USART_ITConfig
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 121


 3607              	.LVL444:
 3608              	.L216:
 3609 0088 38BD     		pop	{r3, r4, r5, pc}
 3610              	.L223:
 3611 008a 00BF     		.align	2
 3612              	.L222:
 3613 008c 00000000 		.word	.LANCHOR0
 3614 0090 00000000 		.word	.LANCHOR6
 3615 0094 00480040 		.word	1073760256
 3616 0098 00000000 		.word	.LANCHOR7
 3617 009c 00440040 		.word	1073759232
 3618 00a0 05010500 		.word	327941
 3619 00a4 07010700 		.word	459015
 3620              		.cfi_endproc
 3621              	.LFE163:
 3623              		.section	.text.vEnergy_Modify_RaitoSet,"ax",%progbits
 3624              		.align	2
 3625              		.global	vEnergy_Modify_RaitoSet
 3626              		.thumb
 3627              		.thumb_func
 3629              	vEnergy_Modify_RaitoSet:
 3630              	.LFB153:
2284:../user/source/DLT645.c ****     uint8_t ratio;
 3631              		.loc 1 2284 0
 3632              		.cfi_startproc
 3633              		@ args = 0, pretend = 0, frame = 0
 3634              		@ frame_needed = 0, uses_anonymous_args = 0
 3635              	.LVL445:
 3636 0000 70B5     		push	{r4, r5, r6, lr}
 3637              	.LCFI34:
 3638              		.cfi_def_cfa_offset 16
 3639              		.cfi_offset 4, -16
 3640              		.cfi_offset 5, -12
 3641              		.cfi_offset 6, -8
 3642              		.cfi_offset 14, -4
 3643 0002 0446     		mov	r4, r0
2291:../user/source/DLT645.c ****     ratioValid = (ratio > 0 && ratio <= 255);
 3644              		.loc 1 2291 0
 3645 0004 817B     		ldrb	r1, [r0, #14]	@ zero_extendqisi2
 3646 0006 0809     		lsrs	r0, r1, #4
 3647              	.LVL446:
 3648 0008 E27B     		ldrb	r2, [r4, #15]	@ zero_extendqisi2
 3649 000a 1509     		lsrs	r5, r2, #4
 3650 000c 05EB8505 		add	r5, r5, r5, lsl #2
 3651 0010 6B00     		lsls	r3, r5, #1
 3652 0012 02F00F02 		and	r2, r2, #15
 3653 0016 1344     		add	r3, r3, r2
 3654 0018 00EB8002 		add	r2, r0, r0, lsl #2
 3655 001c 5000     		lsls	r0, r2, #1
 3656 001e 03EB8303 		add	r3, r3, r3, lsl #2
 3657 0022 03EB8303 		add	r3, r3, r3, lsl #2
 3658 0026 9A00     		lsls	r2, r3, #2
 3659 0028 8318     		adds	r3, r0, r2
 3660 002a 01F00F01 		and	r1, r1, #15
 3661 002e 0B44     		add	r3, r3, r1
 3662              	.LVL447:
2293:../user/source/DLT645.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 122


 3663              		.loc 1 2293 0
 3664 0030 13F0FF05 		ands	r5, r3, #255
 3665 0034 11D0     		beq	.L225
2295:../user/source/DLT645.c ****         ucDayfrozen_Modify_Ratio = ratio;
 3666              		.loc 1 2295 0
 3667 0036 264E     		ldr	r6, .L233
 3668 0038 2946     		mov	r1, r5
 3669 003a 3046     		mov	r0, r6
 3670 003c FFF7FEFF 		bl	Flash_Write_Word
 3671              	.LVL448:
2296:../user/source/DLT645.c ****         if (EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR) == ratio)
 3672              		.loc 1 2296 0
 3673 0040 244B     		ldr	r3, .L233+4
 3674 0042 1D70     		strb	r5, [r3]
2297:../user/source/DLT645.c ****         {
 3675              		.loc 1 2297 0
 3676 0044 3046     		mov	r0, r6
 3677 0046 FFF7FEFF 		bl	EEProm_Read
 3678              	.LVL449:
 3679 004a 8542     		cmp	r5, r0
 3680 004c 02D1     		bne	.L226
2299:../user/source/DLT645.c ****         }
 3681              		.loc 1 2299 0
 3682 004e 9423     		movs	r3, #148
 3683 0050 2372     		strb	r3, [r4, #8]
 3684 0052 04E0     		b	.L227
 3685              	.L226:
2303:../user/source/DLT645.c ****         }
 3686              		.loc 1 2303 0
 3687 0054 D423     		movs	r3, #212
 3688 0056 2372     		strb	r3, [r4, #8]
 3689 0058 01E0     		b	.L227
 3690              	.LVL450:
 3691              	.L225:
2308:../user/source/DLT645.c ****     }
 3692              		.loc 1 2308 0
 3693 005a D423     		movs	r3, #212
 3694              	.LVL451:
 3695 005c 2372     		strb	r3, [r4, #8]
 3696              	.LVL452:
 3697              	.L227:
2310:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 3698              		.loc 1 2310 0
 3699 005e 0023     		movs	r3, #0
 3700 0060 6372     		strb	r3, [r4, #9]
2311:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 3701              		.loc 1 2311 0
 3702 0062 A372     		strb	r3, [r4, #10]
 3703              	.LVL453:
2312:../user/source/DLT645.c ****     {
 3704              		.loc 1 2312 0
 3705 0064 05E0     		b	.L228
 3706              	.LVL454:
 3707              	.L229:
2314:../user/source/DLT645.c ****     }
 3708              		.loc 1 2314 0 discriminator 3
 3709 0066 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 123


 3710 0068 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 3711 006a 0A44     		add	r2, r2, r1
 3712 006c A272     		strb	r2, [r4, #10]
2312:../user/source/DLT645.c ****     {
 3713              		.loc 1 2312 0 discriminator 3
 3714 006e 0133     		adds	r3, r3, #1
 3715              	.LVL455:
 3716 0070 9BB2     		uxth	r3, r3
 3717              	.LVL456:
 3718              	.L228:
2312:../user/source/DLT645.c ****     {
 3719              		.loc 1 2312 0 is_stmt 0 discriminator 1
 3720 0072 092B     		cmp	r3, #9
 3721 0074 F7D9     		bls	.L229
2316:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 3722              		.loc 1 2316 0 is_stmt 1
 3723 0076 1623     		movs	r3, #22
 3724              	.LVL457:
 3725 0078 E372     		strb	r3, [r4, #11]
2318:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 3726              		.loc 1 2318 0
 3727 007a 0022     		movs	r2, #0
 3728 007c 164B     		ldr	r3, .L233+8
 3729 007e 1A70     		strb	r2, [r3]
2319:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 3730              		.loc 1 2319 0
 3731 0080 164D     		ldr	r5, .L233+12
 3732 0082 2B68     		ldr	r3, [r5]
 3733 0084 0C22     		movs	r2, #12
 3734 0086 9968     		ldr	r1, [r3, #8]
 3735 0088 2046     		mov	r0, r4
 3736 008a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3737              	.LVL458:
2320:../user/source/DLT645.c ****     {
 3738              		.loc 1 2320 0
 3739 008e 2B68     		ldr	r3, [r5]
 3740 0090 9868     		ldr	r0, [r3, #8]
 3741 0092 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3742              	.LVL459:
 3743 0096 10B9     		cbnz	r0, .L230
2322:../user/source/DLT645.c ****     }
 3744              		.loc 1 2322 0
 3745 0098 1148     		ldr	r0, .L233+16
 3746 009a FFF7FEFF 		bl	Uart_DataPut
 3747              	.LVL460:
 3748              	.L230:
2326:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 3749              		.loc 1 2326 0
 3750 009e 114D     		ldr	r5, .L233+20
 3751 00a0 2B68     		ldr	r3, [r5]
 3752 00a2 0C22     		movs	r2, #12
 3753 00a4 9968     		ldr	r1, [r3, #8]
 3754 00a6 2046     		mov	r0, r4
 3755 00a8 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3756              	.LVL461:
2327:../user/source/DLT645.c ****     {
 3757              		.loc 1 2327 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 124


 3758 00ac 2B68     		ldr	r3, [r5]
 3759 00ae 9868     		ldr	r0, [r3, #8]
 3760 00b0 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3761              	.LVL462:
 3762 00b4 50B9     		cbnz	r0, .L224
2329:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3763              		.loc 1 2329 0
 3764 00b6 0C4C     		ldr	r4, .L233+24
 3765              	.LVL463:
 3766 00b8 0022     		movs	r2, #0
 3767 00ba 0C49     		ldr	r1, .L233+28
 3768 00bc 2046     		mov	r0, r4
 3769 00be FFF7FEFF 		bl	USART_ITConfig
 3770              	.LVL464:
2330:../user/source/DLT645.c ****     }
 3771              		.loc 1 2330 0
 3772 00c2 0122     		movs	r2, #1
 3773 00c4 0A49     		ldr	r1, .L233+32
 3774 00c6 2046     		mov	r0, r4
 3775 00c8 FFF7FEFF 		bl	USART_ITConfig
 3776              	.LVL465:
 3777              	.L224:
 3778 00cc 70BD     		pop	{r4, r5, r6, pc}
 3779              	.L234:
 3780 00ce 00BF     		.align	2
 3781              	.L233:
 3782 00d0 101F0308 		.word	134422288
 3783 00d4 00000000 		.word	ucDayfrozen_Modify_Ratio
 3784 00d8 00000000 		.word	.LANCHOR0
 3785 00dc 00000000 		.word	.LANCHOR6
 3786 00e0 00480040 		.word	1073760256
 3787 00e4 00000000 		.word	.LANCHOR7
 3788 00e8 00440040 		.word	1073759232
 3789 00ec 05010500 		.word	327941
 3790 00f0 07010700 		.word	459015
 3791              		.cfi_endproc
 3792              	.LFE153:
 3794              		.section	.text.vVoltage_SetMinValue,"ax",%progbits
 3795              		.align	2
 3796              		.global	vVoltage_SetMinValue
 3797              		.thumb
 3798              		.thumb_func
 3800              	vVoltage_SetMinValue:
 3801              	.LFB158:
2557:../user/source/DLT645.c ****     int VMIN = 0;
 3802              		.loc 1 2557 0
 3803              		.cfi_startproc
 3804              		@ args = 0, pretend = 0, frame = 0
 3805              		@ frame_needed = 0, uses_anonymous_args = 0
 3806              	.LVL466:
 3807 0000 70B5     		push	{r4, r5, r6, lr}
 3808              	.LCFI35:
 3809              		.cfi_def_cfa_offset 16
 3810              		.cfi_offset 4, -16
 3811              		.cfi_offset 5, -12
 3812              		.cfi_offset 6, -8
 3813              		.cfi_offset 14, -4
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 125


 3814 0002 0446     		mov	r4, r0
 3815              	.LVL467:
2560:../user/source/DLT645.c ****     if (VMIN < 2200)
 3816              		.loc 1 2560 0
 3817 0004 857B     		ldrb	r5, [r0, #14]	@ zero_extendqisi2
 3818 0006 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 3819 0008 2846     		mov	r0, r5
 3820              	.LVL468:
 3821 000a FFF7FEFF 		bl	Get_Voltage
 3822              	.LVL469:
2561:../user/source/DLT645.c ****     {
 3823              		.loc 1 2561 0
 3824 000e 40F69703 		movw	r3, #2199
 3825 0012 9842     		cmp	r0, r3
 3826 0014 1CDC     		bgt	.L236
2563:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN1_Addr, pucBuffer[14]);
 3827              		.loc 1 2563 0
 3828 0016 224B     		ldr	r3, .L243
 3829 0018 1860     		str	r0, [r3]
2564:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN2_Addr, pucBuffer[15]);
 3830              		.loc 1 2564 0
 3831 001a 224E     		ldr	r6, .L243+4
 3832 001c 2946     		mov	r1, r5
 3833 001e 3046     		mov	r0, r6
 3834              	.LVL470:
 3835 0020 FFF7FEFF 		bl	Flash_Write_Word
 3836              	.LVL471:
2565:../user/source/DLT645.c ****         if ((EEProm_Read(FLASH_VMIN1_Addr) == pucBuffer[14]) &&
 3837              		.loc 1 2565 0
 3838 0024 E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
 3839 0026 2048     		ldr	r0, .L243+8
 3840 0028 FFF7FEFF 		bl	Flash_Write_Word
 3841              	.LVL472:
2566:../user/source/DLT645.c ****             (EEProm_Read(FLASH_VMIN2_Addr) == pucBuffer[15]))
 3842              		.loc 1 2566 0
 3843 002c 3046     		mov	r0, r6
 3844 002e FFF7FEFF 		bl	EEProm_Read
 3845              	.LVL473:
 3846 0032 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 3847 0034 9842     		cmp	r0, r3
 3848 0036 08D1     		bne	.L237
2567:../user/source/DLT645.c ****         {
 3849              		.loc 1 2567 0 discriminator 1
 3850 0038 1B48     		ldr	r0, .L243+8
 3851 003a FFF7FEFF 		bl	EEProm_Read
 3852              	.LVL474:
 3853 003e E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
2566:../user/source/DLT645.c ****             (EEProm_Read(FLASH_VMIN2_Addr) == pucBuffer[15]))
 3854              		.loc 1 2566 0 discriminator 1
 3855 0040 9842     		cmp	r0, r3
 3856 0042 02D1     		bne	.L237
2569:../user/source/DLT645.c ****         }
 3857              		.loc 1 2569 0
 3858 0044 9423     		movs	r3, #148
 3859 0046 2372     		strb	r3, [r4, #8]
 3860 0048 04E0     		b	.L238
 3861              	.L237:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 126


2573:../user/source/DLT645.c ****         }
 3862              		.loc 1 2573 0
 3863 004a D423     		movs	r3, #212
 3864 004c 2372     		strb	r3, [r4, #8]
 3865 004e 01E0     		b	.L238
 3866              	.LVL475:
 3867              	.L236:
2578:../user/source/DLT645.c ****     }
 3868              		.loc 1 2578 0
 3869 0050 D423     		movs	r3, #212
 3870 0052 2372     		strb	r3, [r4, #8]
 3871              	.LVL476:
 3872              	.L238:
2580:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 3873              		.loc 1 2580 0
 3874 0054 0023     		movs	r3, #0
 3875 0056 6372     		strb	r3, [r4, #9]
2581:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 3876              		.loc 1 2581 0
 3877 0058 A372     		strb	r3, [r4, #10]
2582:../user/source/DLT645.c ****     {
 3878              		.loc 1 2582 0
 3879 005a 05E0     		b	.L239
 3880              	.LVL477:
 3881              	.L240:
2584:../user/source/DLT645.c ****     }
 3882              		.loc 1 2584 0 discriminator 3
 3883 005c E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3884 005e A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 3885 0060 0A44     		add	r2, r2, r1
 3886 0062 A272     		strb	r2, [r4, #10]
2582:../user/source/DLT645.c ****     {
 3887              		.loc 1 2582 0 discriminator 3
 3888 0064 0133     		adds	r3, r3, #1
 3889              	.LVL478:
 3890 0066 9BB2     		uxth	r3, r3
 3891              	.LVL479:
 3892              	.L239:
2582:../user/source/DLT645.c ****     {
 3893              		.loc 1 2582 0 is_stmt 0 discriminator 1
 3894 0068 092B     		cmp	r3, #9
 3895 006a F7D9     		bls	.L240
2586:../user/source/DLT645.c **** #ifdef ENABLE_INFR
 3896              		.loc 1 2586 0 is_stmt 1
 3897 006c 1623     		movs	r3, #22
 3898              	.LVL480:
 3899 006e E372     		strb	r3, [r4, #11]
2588:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 3900              		.loc 1 2588 0
 3901 0070 0E4D     		ldr	r5, .L243+12
 3902 0072 2B68     		ldr	r3, [r5]
 3903 0074 0C22     		movs	r2, #12
 3904 0076 9968     		ldr	r1, [r3, #8]
 3905 0078 2046     		mov	r0, r4
 3906 007a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3907              	.LVL481:
2589:../user/source/DLT645.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 127


 3908              		.loc 1 2589 0
 3909 007e 2B68     		ldr	r3, [r5]
 3910 0080 9868     		ldr	r0, [r3, #8]
 3911 0082 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3912              	.LVL482:
 3913 0086 50B9     		cbnz	r0, .L235
2591:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3914              		.loc 1 2591 0
 3915 0088 094C     		ldr	r4, .L243+16
 3916              	.LVL483:
 3917 008a 0022     		movs	r2, #0
 3918 008c 0949     		ldr	r1, .L243+20
 3919 008e 2046     		mov	r0, r4
 3920 0090 FFF7FEFF 		bl	USART_ITConfig
 3921              	.LVL484:
2592:../user/source/DLT645.c ****     }
 3922              		.loc 1 2592 0
 3923 0094 0122     		movs	r2, #1
 3924 0096 0849     		ldr	r1, .L243+24
 3925 0098 2046     		mov	r0, r4
 3926 009a FFF7FEFF 		bl	USART_ITConfig
 3927              	.LVL485:
 3928              	.L235:
 3929 009e 70BD     		pop	{r4, r5, r6, pc}
 3930              	.L244:
 3931              		.align	2
 3932              	.L243:
 3933 00a0 00000000 		.word	Voltage_MIN
 3934 00a4 081F0308 		.word	134422280
 3935 00a8 0C1F0308 		.word	134422284
 3936 00ac 00000000 		.word	.LANCHOR7
 3937 00b0 00440040 		.word	1073759232
 3938 00b4 05010500 		.word	327941
 3939 00b8 07010700 		.word	459015
 3940              		.cfi_endproc
 3941              	.LFE158:
 3943              		.section	.text.vEnergy_Modify_ReadValue,"ax",%progbits
 3944              		.align	2
 3945              		.global	vEnergy_Modify_ReadValue
 3946              		.thumb
 3947              		.thumb_func
 3949              	vEnergy_Modify_ReadValue:
 3950              	.LFB156:
2455:../user/source/DLT645.c ****     uint8_t i;
 3951              		.loc 1 2455 0
 3952              		.cfi_startproc
 3953              		@ args = 0, pretend = 0, frame = 0
 3954              		@ frame_needed = 0, uses_anonymous_args = 0
 3955              	.LVL486:
 3956 0000 70B5     		push	{r4, r5, r6, lr}
 3957              	.LCFI36:
 3958              		.cfi_def_cfa_offset 16
 3959              		.cfi_offset 4, -16
 3960              		.cfi_offset 5, -12
 3961              		.cfi_offset 6, -8
 3962              		.cfi_offset 14, -4
 3963 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 128


 3964              	.LCFI37:
 3965              		.cfi_def_cfa_offset 24
 3966 0004 0446     		mov	r4, r0
2461:../user/source/DLT645.c ****     pucbuffer[9] = 0x0C;
 3967              		.loc 1 2461 0
 3968 0006 9123     		movs	r3, #145
 3969 0008 0372     		strb	r3, [r0, #8]
2462:../user/source/DLT645.c **** 
 3970              		.loc 1 2462 0
 3971 000a 0C23     		movs	r3, #12
 3972 000c 4372     		strb	r3, [r0, #9]
2465:../user/source/DLT645.c ****     modifiedValue = Flash_Read_Word(FLASH_MODIFIED_1DAYFROZEN_ADDR + 4);
 3973              		.loc 1 2465 0
 3974 000e 3048     		ldr	r0, .L255
 3975              	.LVL487:
 3976 0010 FFF7FEFF 		bl	Flash_Read_Word
 3977              	.LVL488:
 3978 0014 0646     		mov	r6, r0
 3979              	.LVL489:
2466:../user/source/DLT645.c ****     /*ÖÕ¶ËµÚÒ»´ÎÊ¹ÓÃ*/
 3980              		.loc 1 2466 0
 3981 0016 2F48     		ldr	r0, .L255+4
 3982              	.LVL490:
 3983 0018 FFF7FEFF 		bl	Flash_Read_Word
 3984              	.LVL491:
 3985 001c 0546     		mov	r5, r0
 3986              	.LVL492:
2468:../user/source/DLT645.c ****     {
 3987              		.loc 1 2468 0
 3988 001e B6F1FF3F 		cmp	r6, #-1
 3989 0022 00D1     		bne	.L246
2470:../user/source/DLT645.c ****     }
 3990              		.loc 1 2470 0
 3991 0024 0026     		movs	r6, #0
 3992              	.LVL493:
 3993              	.L246:
2472:../user/source/DLT645.c ****     if (modifiedValue == 0XFFFFFFFF)
 3994              		.loc 1 2472 0
 3995 0026 04F11103 		add	r3, r4, #17
 3996 002a 0093     		str	r3, [sp]
 3997 002c 04F11003 		add	r3, r4, #16
 3998 0030 04F10F02 		add	r2, r4, #15
 3999 0034 04F10E01 		add	r1, r4, #14
 4000 0038 3046     		mov	r0, r6
 4001              	.LVL494:
 4002 003a FFF7FEFF 		bl	Fill_Energy
 4003              	.LVL495:
2473:../user/source/DLT645.c ****     {
 4004              		.loc 1 2473 0
 4005 003e B5F1FF3F 		cmp	r5, #-1
 4006 0042 00D1     		bne	.L247
2475:../user/source/DLT645.c ****     }
 4007              		.loc 1 2475 0
 4008 0044 0025     		movs	r5, #0
 4009              	.LVL496:
 4010              	.L247:
2477:../user/source/DLT645.c ****     pucbuffer[22] = 0;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 129


 4011              		.loc 1 2477 0
 4012 0046 04F11503 		add	r3, r4, #21
 4013 004a 0093     		str	r3, [sp]
 4014 004c 04F11403 		add	r3, r4, #20
 4015 0050 04F11302 		add	r2, r4, #19
 4016 0054 04F11201 		add	r1, r4, #18
 4017 0058 2846     		mov	r0, r5
 4018 005a FFF7FEFF 		bl	Fill_Energy
 4019              	.LVL497:
2478:../user/source/DLT645.c ****     for (i = 0; i < 22; i++)
 4020              		.loc 1 2478 0
 4021 005e 0023     		movs	r3, #0
 4022 0060 A375     		strb	r3, [r4, #22]
 4023              	.LVL498:
2479:../user/source/DLT645.c ****     {
 4024              		.loc 1 2479 0
 4025 0062 05E0     		b	.L248
 4026              	.LVL499:
 4027              	.L249:
2481:../user/source/DLT645.c ****     }
 4028              		.loc 1 2481 0 discriminator 3
 4029 0064 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 4030 0066 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
 4031 0068 0A44     		add	r2, r2, r1
 4032 006a A275     		strb	r2, [r4, #22]
2479:../user/source/DLT645.c ****     {
 4033              		.loc 1 2479 0 discriminator 3
 4034 006c 0133     		adds	r3, r3, #1
 4035              	.LVL500:
 4036 006e DBB2     		uxtb	r3, r3
 4037              	.LVL501:
 4038              	.L248:
2479:../user/source/DLT645.c ****     {
 4039              		.loc 1 2479 0 is_stmt 0 discriminator 1
 4040 0070 152B     		cmp	r3, #21
 4041 0072 F7D9     		bls	.L249
2483:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 4042              		.loc 1 2483 0 is_stmt 1
 4043 0074 1623     		movs	r3, #22
 4044              	.LVL502:
 4045 0076 E375     		strb	r3, [r4, #23]
2485:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, pUartDB->pSndbuf, 24);
 4046              		.loc 1 2485 0
 4047 0078 0022     		movs	r2, #0
 4048 007a 174B     		ldr	r3, .L255+8
 4049 007c 1A70     		strb	r2, [r3]
2486:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 4050              		.loc 1 2486 0
 4051 007e 174D     		ldr	r5, .L255+12
 4052              	.LVL503:
 4053 0080 2B68     		ldr	r3, [r5]
 4054 0082 1822     		movs	r2, #24
 4055 0084 9968     		ldr	r1, [r3, #8]
 4056 0086 2046     		mov	r0, r4
 4057 0088 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4058              	.LVL504:
2487:../user/source/DLT645.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 130


 4059              		.loc 1 2487 0
 4060 008c 2B68     		ldr	r3, [r5]
 4061 008e 9868     		ldr	r0, [r3, #8]
 4062 0090 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4063              	.LVL505:
 4064 0094 10B9     		cbnz	r0, .L250
2489:../user/source/DLT645.c ****     }
 4065              		.loc 1 2489 0
 4066 0096 1248     		ldr	r0, .L255+16
 4067 0098 FFF7FEFF 		bl	Uart_DataPut
 4068              	.LVL506:
 4069              	.L250:
2493:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 4070              		.loc 1 2493 0
 4071 009c 114D     		ldr	r5, .L255+20
 4072 009e 2B68     		ldr	r3, [r5]
 4073 00a0 1822     		movs	r2, #24
 4074 00a2 9968     		ldr	r1, [r3, #8]
 4075 00a4 2046     		mov	r0, r4
 4076 00a6 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4077              	.LVL507:
2494:../user/source/DLT645.c ****     {
 4078              		.loc 1 2494 0
 4079 00aa 2B68     		ldr	r3, [r5]
 4080 00ac 9868     		ldr	r0, [r3, #8]
 4081 00ae FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4082              	.LVL508:
 4083 00b2 50B9     		cbnz	r0, .L245
2496:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 4084              		.loc 1 2496 0
 4085 00b4 0C4C     		ldr	r4, .L255+24
 4086              	.LVL509:
 4087 00b6 0022     		movs	r2, #0
 4088 00b8 0C49     		ldr	r1, .L255+28
 4089 00ba 2046     		mov	r0, r4
 4090 00bc FFF7FEFF 		bl	USART_ITConfig
 4091              	.LVL510:
2497:../user/source/DLT645.c ****     }
 4092              		.loc 1 2497 0
 4093 00c0 0122     		movs	r2, #1
 4094 00c2 0B49     		ldr	r1, .L255+32
 4095 00c4 2046     		mov	r0, r4
 4096 00c6 FFF7FEFF 		bl	USART_ITConfig
 4097              	.LVL511:
 4098              	.L245:
2500:../user/source/DLT645.c **** 
 4099              		.loc 1 2500 0
 4100 00ca 02B0     		add	sp, sp, #8
 4101              	.LCFI38:
 4102              		.cfi_def_cfa_offset 16
 4103              		@ sp needed
 4104 00cc 70BD     		pop	{r4, r5, r6, pc}
 4105              	.LVL512:
 4106              	.L256:
 4107 00ce 00BF     		.align	2
 4108              	.L255:
 4109 00d0 04200308 		.word	134422532
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 131


 4110 00d4 40200308 		.word	134422592
 4111 00d8 00000000 		.word	.LANCHOR0
 4112 00dc 00000000 		.word	.LANCHOR6
 4113 00e0 00480040 		.word	1073760256
 4114 00e4 00000000 		.word	.LANCHOR7
 4115 00e8 00440040 		.word	1073759232
 4116 00ec 05010500 		.word	327941
 4117 00f0 07010700 		.word	459015
 4118              		.cfi_endproc
 4119              	.LFE156:
 4121              		.section	.text.vVoltage_SetMaxValue,"ax",%progbits
 4122              		.align	2
 4123              		.global	vVoltage_SetMaxValue
 4124              		.thumb
 4125              		.thumb_func
 4127              	vVoltage_SetMaxValue:
 4128              	.LFB157:
2510:../user/source/DLT645.c ****     int VMAX = 0;
 4129              		.loc 1 2510 0
 4130              		.cfi_startproc
 4131              		@ args = 0, pretend = 0, frame = 0
 4132              		@ frame_needed = 0, uses_anonymous_args = 0
 4133              	.LVL513:
 4134 0000 70B5     		push	{r4, r5, r6, lr}
 4135              	.LCFI39:
 4136              		.cfi_def_cfa_offset 16
 4137              		.cfi_offset 4, -16
 4138              		.cfi_offset 5, -12
 4139              		.cfi_offset 6, -8
 4140              		.cfi_offset 14, -4
 4141 0002 0446     		mov	r4, r0
 4142              	.LVL514:
2513:../user/source/DLT645.c ****     if (VMAX > 2200)
 4143              		.loc 1 2513 0
 4144 0004 857B     		ldrb	r5, [r0, #14]	@ zero_extendqisi2
 4145 0006 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 4146 0008 2846     		mov	r0, r5
 4147              	.LVL515:
 4148 000a FFF7FEFF 		bl	Get_Voltage
 4149              	.LVL516:
2514:../user/source/DLT645.c ****     {
 4150              		.loc 1 2514 0
 4151 000e 40F69803 		movw	r3, #2200
 4152 0012 9842     		cmp	r0, r3
 4153 0014 1EDD     		ble	.L258
2516:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX1_Addr, pucBuffer[14]);
 4154              		.loc 1 2516 0
 4155 0016 234B     		ldr	r3, .L265
 4156 0018 1860     		str	r0, [r3]
2517:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX2_Addr, pucBuffer[15]);
 4157              		.loc 1 2517 0
 4158 001a 234E     		ldr	r6, .L265+4
 4159 001c 2946     		mov	r1, r5
 4160 001e 3046     		mov	r0, r6
 4161              	.LVL517:
 4162 0020 FFF7FEFF 		bl	Flash_Write_Word
 4163              	.LVL518:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 132


2518:../user/source/DLT645.c ****         if (((uint8_t)Flash_Read_Word(FLASH_VMAX1_Addr) == pucBuffer[14]) &&
 4164              		.loc 1 2518 0
 4165 0024 E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
 4166 0026 2148     		ldr	r0, .L265+8
 4167 0028 FFF7FEFF 		bl	Flash_Write_Word
 4168              	.LVL519:
2519:../user/source/DLT645.c ****             ((uint8_t)Flash_Read_Word(FLASH_VMAX2_Addr) == pucBuffer[15]))
 4169              		.loc 1 2519 0
 4170 002c 3046     		mov	r0, r6
 4171 002e FFF7FEFF 		bl	Flash_Read_Word
 4172              	.LVL520:
 4173 0032 C0B2     		uxtb	r0, r0
 4174 0034 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 4175 0036 9842     		cmp	r0, r3
 4176 0038 09D1     		bne	.L259
2520:../user/source/DLT645.c ****         {
 4177              		.loc 1 2520 0 discriminator 1
 4178 003a 1C48     		ldr	r0, .L265+8
 4179 003c FFF7FEFF 		bl	Flash_Read_Word
 4180              	.LVL521:
 4181 0040 C0B2     		uxtb	r0, r0
 4182 0042 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
2519:../user/source/DLT645.c ****             ((uint8_t)Flash_Read_Word(FLASH_VMAX2_Addr) == pucBuffer[15]))
 4183              		.loc 1 2519 0 discriminator 1
 4184 0044 9842     		cmp	r0, r3
 4185 0046 02D1     		bne	.L259
2522:../user/source/DLT645.c ****         }
 4186              		.loc 1 2522 0
 4187 0048 9423     		movs	r3, #148
 4188 004a 2372     		strb	r3, [r4, #8]
 4189 004c 04E0     		b	.L260
 4190              	.L259:
2526:../user/source/DLT645.c ****         }
 4191              		.loc 1 2526 0
 4192 004e D423     		movs	r3, #212
 4193 0050 2372     		strb	r3, [r4, #8]
 4194 0052 01E0     		b	.L260
 4195              	.LVL522:
 4196              	.L258:
2531:../user/source/DLT645.c ****     }
 4197              		.loc 1 2531 0
 4198 0054 D423     		movs	r3, #212
 4199 0056 2372     		strb	r3, [r4, #8]
 4200              	.LVL523:
 4201              	.L260:
2533:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 4202              		.loc 1 2533 0
 4203 0058 0023     		movs	r3, #0
 4204 005a 6372     		strb	r3, [r4, #9]
2534:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 4205              		.loc 1 2534 0
 4206 005c A372     		strb	r3, [r4, #10]
2535:../user/source/DLT645.c ****     {
 4207              		.loc 1 2535 0
 4208 005e 05E0     		b	.L261
 4209              	.LVL524:
 4210              	.L262:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 133


2537:../user/source/DLT645.c ****     }
 4211              		.loc 1 2537 0 discriminator 3
 4212 0060 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 4213 0062 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 4214 0064 0A44     		add	r2, r2, r1
 4215 0066 A272     		strb	r2, [r4, #10]
2535:../user/source/DLT645.c ****     {
 4216              		.loc 1 2535 0 discriminator 3
 4217 0068 0133     		adds	r3, r3, #1
 4218              	.LVL525:
 4219 006a 9BB2     		uxth	r3, r3
 4220              	.LVL526:
 4221              	.L261:
2535:../user/source/DLT645.c ****     {
 4222              		.loc 1 2535 0 is_stmt 0 discriminator 1
 4223 006c 092B     		cmp	r3, #9
 4224 006e F7D9     		bls	.L262
2539:../user/source/DLT645.c **** #ifdef ENABLE_INFR
 4225              		.loc 1 2539 0 is_stmt 1
 4226 0070 1623     		movs	r3, #22
 4227              	.LVL527:
 4228 0072 E372     		strb	r3, [r4, #11]
2541:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 4229              		.loc 1 2541 0
 4230 0074 0E4D     		ldr	r5, .L265+12
 4231 0076 2B68     		ldr	r3, [r5]
 4232 0078 0C22     		movs	r2, #12
 4233 007a 9968     		ldr	r1, [r3, #8]
 4234 007c 2046     		mov	r0, r4
 4235 007e FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4236              	.LVL528:
2542:../user/source/DLT645.c ****     {
 4237              		.loc 1 2542 0
 4238 0082 2B68     		ldr	r3, [r5]
 4239 0084 9868     		ldr	r0, [r3, #8]
 4240 0086 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4241              	.LVL529:
 4242 008a 50B9     		cbnz	r0, .L257
2544:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 4243              		.loc 1 2544 0
 4244 008c 094C     		ldr	r4, .L265+16
 4245              	.LVL530:
 4246 008e 0022     		movs	r2, #0
 4247 0090 0949     		ldr	r1, .L265+20
 4248 0092 2046     		mov	r0, r4
 4249 0094 FFF7FEFF 		bl	USART_ITConfig
 4250              	.LVL531:
2545:../user/source/DLT645.c ****     }
 4251              		.loc 1 2545 0
 4252 0098 0122     		movs	r2, #1
 4253 009a 0849     		ldr	r1, .L265+24
 4254 009c 2046     		mov	r0, r4
 4255 009e FFF7FEFF 		bl	USART_ITConfig
 4256              	.LVL532:
 4257              	.L257:
 4258 00a2 70BD     		pop	{r4, r5, r6, pc}
 4259              	.L266:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 134


 4260              		.align	2
 4261              	.L265:
 4262 00a4 00000000 		.word	Voltage_MAX
 4263 00a8 001F0308 		.word	134422272
 4264 00ac 041F0308 		.word	134422276
 4265 00b0 00000000 		.word	.LANCHOR7
 4266 00b4 00440040 		.word	1073759232
 4267 00b8 05010500 		.word	327941
 4268 00bc 07010700 		.word	459015
 4269              		.cfi_endproc
 4270              	.LFE157:
 4272              		.section	.text.vEnergy_Modify_AbleSet,"ax",%progbits
 4273              		.align	2
 4274              		.global	vEnergy_Modify_AbleSet
 4275              		.thumb
 4276              		.thumb_func
 4278              	vEnergy_Modify_AbleSet:
 4279              	.LFB152:
2224:../user/source/DLT645.c ****     uint16_t i;
 4280              		.loc 1 2224 0
 4281              		.cfi_startproc
 4282              		@ args = 0, pretend = 0, frame = 0
 4283              		@ frame_needed = 0, uses_anonymous_args = 0
 4284              	.LVL533:
 4285 0000 70B5     		push	{r4, r5, r6, lr}
 4286              	.LCFI40:
 4287              		.cfi_def_cfa_offset 16
 4288              		.cfi_offset 4, -16
 4289              		.cfi_offset 5, -12
 4290              		.cfi_offset 6, -8
 4291              		.cfi_offset 14, -4
 4292 0002 0446     		mov	r4, r0
2226:../user/source/DLT645.c ****     {
 4293              		.loc 1 2226 0
 4294 0004 817B     		ldrb	r1, [r0, #14]	@ zero_extendqisi2
 4295 0006 FF29     		cmp	r1, #255
 4296 0008 10D1     		bne	.L268
2228:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZENCHANGESTATE_ADDR, Dayfrozen_Change_State);
 4297              		.loc 1 2228 0
 4298 000a 324D     		ldr	r5, .L280
 4299 000c 2970     		strb	r1, [r5]
2229:../user/source/DLT645.c ****         pucBuffer[8] = (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == Dayfrozen_Change_State
 4300              		.loc 1 2229 0
 4301 000e 324E     		ldr	r6, .L280+4
 4302 0010 3046     		mov	r0, r6
 4303              	.LVL534:
 4304 0012 FFF7FEFF 		bl	Flash_Write_Word
 4305              	.LVL535:
2230:../user/source/DLT645.c ****                             ? 0x94
 4306              		.loc 1 2230 0
 4307 0016 3046     		mov	r0, r6
 4308 0018 FFF7FEFF 		bl	EEProm_Read
 4309              	.LVL536:
 4310 001c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4311 001e 9842     		cmp	r0, r3
 4312 0020 01D1     		bne	.L277
 4313 0022 9423     		movs	r3, #148
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 135


 4314 0024 00E0     		b	.L269
 4315              	.L277:
 4316 0026 D423     		movs	r3, #212
 4317              	.L269:
2230:../user/source/DLT645.c ****                             ? 0x94
 4318              		.loc 1 2230 0 is_stmt 0 discriminator 4
 4319 0028 2372     		strb	r3, [r4, #8]
 4320 002a 1BE0     		b	.L270
 4321              	.LVL537:
 4322              	.L268:
2234:../user/source/DLT645.c ****     {
 4323              		.loc 1 2234 0 is_stmt 1
 4324 002c C1B9     		cbnz	r1, .L271
2237:../user/source/DLT645.c ****         FLASH_ErasePage(FLASH_ENERGY_PAGE);
 4325              		.loc 1 2237 0
 4326 002e FFF7FEFF 		bl	FLASH_Unlock
 4327              	.LVL538:
2238:../user/source/DLT645.c ****         FLASH_Lock();
 4328              		.loc 1 2238 0
 4329 0032 2A48     		ldr	r0, .L280+8
 4330 0034 FFF7FEFF 		bl	FLASH_ErasePage
 4331              	.LVL539:
2239:../user/source/DLT645.c ****         Dayfrozen_Change_State = pucBuffer[14];
 4332              		.loc 1 2239 0
 4333 0038 FFF7FEFF 		bl	FLASH_Lock
 4334              	.LVL540:
2240:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZENCHANGESTATE_ADDR, Dayfrozen_Change_State);
 4335              		.loc 1 2240 0
 4336 003c A17B     		ldrb	r1, [r4, #14]	@ zero_extendqisi2
 4337 003e 254D     		ldr	r5, .L280
 4338 0040 2970     		strb	r1, [r5]
2241:../user/source/DLT645.c ****         pucBuffer[8] = (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == Dayfrozen_Change_State
 4339              		.loc 1 2241 0
 4340 0042 254E     		ldr	r6, .L280+4
 4341 0044 3046     		mov	r0, r6
 4342 0046 FFF7FEFF 		bl	Flash_Write_Word
 4343              	.LVL541:
2242:../user/source/DLT645.c ****                             ? 0x94
 4344              		.loc 1 2242 0
 4345 004a 3046     		mov	r0, r6
 4346 004c FFF7FEFF 		bl	EEProm_Read
 4347              	.LVL542:
 4348 0050 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4349 0052 9842     		cmp	r0, r3
 4350 0054 01D1     		bne	.L278
 4351 0056 9423     		movs	r3, #148
 4352 0058 00E0     		b	.L272
 4353              	.L278:
 4354 005a D423     		movs	r3, #212
 4355              	.L272:
2242:../user/source/DLT645.c ****                             ? 0x94
 4356              		.loc 1 2242 0 is_stmt 0 discriminator 4
 4357 005c 2372     		strb	r3, [r4, #8]
 4358 005e 01E0     		b	.L270
 4359              	.LVL543:
 4360              	.L271:
2248:../user/source/DLT645.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 136


 4361              		.loc 1 2248 0 is_stmt 1
 4362 0060 D423     		movs	r3, #212
 4363 0062 0372     		strb	r3, [r0, #8]
 4364              	.LVL544:
 4365              	.L270:
2250:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 4366              		.loc 1 2250 0
 4367 0064 0023     		movs	r3, #0
 4368 0066 6372     		strb	r3, [r4, #9]
2251:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 4369              		.loc 1 2251 0
 4370 0068 A372     		strb	r3, [r4, #10]
 4371              	.LVL545:
2252:../user/source/DLT645.c ****     {
 4372              		.loc 1 2252 0
 4373 006a 05E0     		b	.L273
 4374              	.LVL546:
 4375              	.L274:
2254:../user/source/DLT645.c ****     }
 4376              		.loc 1 2254 0 discriminator 3
 4377 006c E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 4378 006e A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 4379 0070 0A44     		add	r2, r2, r1
 4380 0072 A272     		strb	r2, [r4, #10]
2252:../user/source/DLT645.c ****     {
 4381              		.loc 1 2252 0 discriminator 3
 4382 0074 0133     		adds	r3, r3, #1
 4383              	.LVL547:
 4384 0076 9BB2     		uxth	r3, r3
 4385              	.LVL548:
 4386              	.L273:
2252:../user/source/DLT645.c ****     {
 4387              		.loc 1 2252 0 is_stmt 0 discriminator 1
 4388 0078 092B     		cmp	r3, #9
 4389 007a F7D9     		bls	.L274
2256:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 4390              		.loc 1 2256 0 is_stmt 1
 4391 007c 1623     		movs	r3, #22
 4392              	.LVL549:
 4393 007e E372     		strb	r3, [r4, #11]
2258:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 4394              		.loc 1 2258 0
 4395 0080 0022     		movs	r2, #0
 4396 0082 174B     		ldr	r3, .L280+12
 4397 0084 1A70     		strb	r2, [r3]
2259:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 4398              		.loc 1 2259 0
 4399 0086 174D     		ldr	r5, .L280+16
 4400 0088 2B68     		ldr	r3, [r5]
 4401 008a 0C22     		movs	r2, #12
 4402 008c 9968     		ldr	r1, [r3, #8]
 4403 008e 2046     		mov	r0, r4
 4404 0090 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4405              	.LVL550:
2260:../user/source/DLT645.c ****     {
 4406              		.loc 1 2260 0
 4407 0094 2B68     		ldr	r3, [r5]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 137


 4408 0096 9868     		ldr	r0, [r3, #8]
 4409 0098 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4410              	.LVL551:
 4411 009c 10B9     		cbnz	r0, .L275
2262:../user/source/DLT645.c ****     }
 4412              		.loc 1 2262 0
 4413 009e 1248     		ldr	r0, .L280+20
 4414 00a0 FFF7FEFF 		bl	Uart_DataPut
 4415              	.LVL552:
 4416              	.L275:
2266:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 4417              		.loc 1 2266 0
 4418 00a4 114D     		ldr	r5, .L280+24
 4419 00a6 2B68     		ldr	r3, [r5]
 4420 00a8 0C22     		movs	r2, #12
 4421 00aa 9968     		ldr	r1, [r3, #8]
 4422 00ac 2046     		mov	r0, r4
 4423 00ae FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4424              	.LVL553:
2267:../user/source/DLT645.c ****     {
 4425              		.loc 1 2267 0
 4426 00b2 2B68     		ldr	r3, [r5]
 4427 00b4 9868     		ldr	r0, [r3, #8]
 4428 00b6 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4429              	.LVL554:
 4430 00ba 50B9     		cbnz	r0, .L267
2269:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 4431              		.loc 1 2269 0
 4432 00bc 0C4C     		ldr	r4, .L280+28
 4433              	.LVL555:
 4434 00be 0022     		movs	r2, #0
 4435 00c0 0C49     		ldr	r1, .L280+32
 4436 00c2 2046     		mov	r0, r4
 4437 00c4 FFF7FEFF 		bl	USART_ITConfig
 4438              	.LVL556:
2270:../user/source/DLT645.c ****     }
 4439              		.loc 1 2270 0
 4440 00c8 0122     		movs	r2, #1
 4441 00ca 0B49     		ldr	r1, .L280+36
 4442 00cc 2046     		mov	r0, r4
 4443 00ce FFF7FEFF 		bl	USART_ITConfig
 4444              	.LVL557:
 4445              	.L267:
 4446 00d2 70BD     		pop	{r4, r5, r6, pc}
 4447              	.L281:
 4448              		.align	2
 4449              	.L280:
 4450 00d4 00000000 		.word	.LANCHOR10
 4451 00d8 181F0308 		.word	134422296
 4452 00dc 00200308 		.word	134422528
 4453 00e0 00000000 		.word	.LANCHOR0
 4454 00e4 00000000 		.word	.LANCHOR6
 4455 00e8 00480040 		.word	1073760256
 4456 00ec 00000000 		.word	.LANCHOR7
 4457 00f0 00440040 		.word	1073759232
 4458 00f4 05010500 		.word	327941
 4459 00f8 07010700 		.word	459015
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 138


 4460              		.cfi_endproc
 4461              	.LFE152:
 4463              		.section	.text.vEnergy_Modify_Reset,"ax",%progbits
 4464              		.align	2
 4465              		.global	vEnergy_Modify_Reset
 4466              		.thumb
 4467              		.thumb_func
 4469              	vEnergy_Modify_Reset:
 4470              	.LFB154:
2344:../user/source/DLT645.c ****     bool cmdValid;
 4471              		.loc 1 2344 0
 4472              		.cfi_startproc
 4473              		@ args = 0, pretend = 0, frame = 0
 4474              		@ frame_needed = 0, uses_anonymous_args = 0
 4475              	.LVL558:
 4476 0000 38B5     		push	{r3, r4, r5, lr}
 4477              	.LCFI41:
 4478              		.cfi_def_cfa_offset 16
 4479              		.cfi_offset 3, -16
 4480              		.cfi_offset 4, -12
 4481              		.cfi_offset 5, -8
 4482              		.cfi_offset 14, -4
 4483 0002 0446     		mov	r4, r0
2348:../user/source/DLT645.c ****     if (cmdValid)
 4484              		.loc 1 2348 0
 4485 0004 837B     		ldrb	r3, [r0, #14]	@ zero_extendqisi2
 4486              	.LVL559:
2349:../user/source/DLT645.c ****     {
 4487              		.loc 1 2349 0
 4488 0006 CBB9     		cbnz	r3, .L283
2352:../user/source/DLT645.c ****         Dayfrozen_Change_State = 0xff;
 4489              		.loc 1 2352 0
 4490 0008 294D     		ldr	r5, .L291
 4491 000a FF21     		movs	r1, #255
 4492 000c 2846     		mov	r0, r5
 4493              	.LVL560:
 4494 000e FFF7FEFF 		bl	Flash_Write_Word
 4495              	.LVL561:
2353:../user/source/DLT645.c ****         /*ÈÕ¶³½áĞŞ¸Ä±ÈÀıÉèÖÃÎª90*/
 4496              		.loc 1 2353 0
 4497 0012 FF22     		movs	r2, #255
 4498 0014 274B     		ldr	r3, .L291+4
 4499 0016 1A70     		strb	r2, [r3]
2358:../user/source/DLT645.c ****         FLASH_ErasePage(FLASH_ENERGY_PAGE);
 4500              		.loc 1 2358 0
 4501 0018 FFF7FEFF 		bl	FLASH_Unlock
 4502              	.LVL562:
2359:../user/source/DLT645.c ****         FLASH_Lock();
 4503              		.loc 1 2359 0
 4504 001c 2648     		ldr	r0, .L291+8
 4505 001e FFF7FEFF 		bl	FLASH_ErasePage
 4506              	.LVL563:
2360:../user/source/DLT645.c ****         if ( //(EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR) == 90) &&
 4507              		.loc 1 2360 0
 4508 0022 FFF7FEFF 		bl	FLASH_Lock
 4509              	.LVL564:
2362:../user/source/DLT645.c ****         {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 139


 4510              		.loc 1 2362 0
 4511 0026 2846     		mov	r0, r5
 4512 0028 FFF7FEFF 		bl	EEProm_Read
 4513              	.LVL565:
2361:../user/source/DLT645.c ****             (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == 0xff))
 4514              		.loc 1 2361 0
 4515 002c FF28     		cmp	r0, #255
 4516 002e 02D1     		bne	.L284
2364:../user/source/DLT645.c ****         }
 4517              		.loc 1 2364 0
 4518 0030 9423     		movs	r3, #148
 4519 0032 2372     		strb	r3, [r4, #8]
 4520 0034 04E0     		b	.L285
 4521              	.L284:
2368:../user/source/DLT645.c ****         }
 4522              		.loc 1 2368 0
 4523 0036 D423     		movs	r3, #212
 4524 0038 2372     		strb	r3, [r4, #8]
 4525 003a 01E0     		b	.L285
 4526              	.LVL566:
 4527              	.L283:
2373:../user/source/DLT645.c ****     }
 4528              		.loc 1 2373 0
 4529 003c D423     		movs	r3, #212
 4530              	.LVL567:
 4531 003e 0372     		strb	r3, [r0, #8]
 4532              	.LVL568:
 4533              	.L285:
2375:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 4534              		.loc 1 2375 0
 4535 0040 0023     		movs	r3, #0
 4536 0042 6372     		strb	r3, [r4, #9]
2376:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 4537              		.loc 1 2376 0
 4538 0044 A372     		strb	r3, [r4, #10]
 4539              	.LVL569:
2377:../user/source/DLT645.c ****     {
 4540              		.loc 1 2377 0
 4541 0046 05E0     		b	.L286
 4542              	.LVL570:
 4543              	.L287:
2379:../user/source/DLT645.c ****     }
 4544              		.loc 1 2379 0 discriminator 3
 4545 0048 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 4546 004a A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 4547 004c 0A44     		add	r2, r2, r1
 4548 004e A272     		strb	r2, [r4, #10]
2377:../user/source/DLT645.c ****     {
 4549              		.loc 1 2377 0 discriminator 3
 4550 0050 0133     		adds	r3, r3, #1
 4551              	.LVL571:
 4552 0052 9BB2     		uxth	r3, r3
 4553              	.LVL572:
 4554              	.L286:
2377:../user/source/DLT645.c ****     {
 4555              		.loc 1 2377 0 is_stmt 0 discriminator 1
 4556 0054 092B     		cmp	r3, #9
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 140


 4557 0056 F7D9     		bls	.L287
2381:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 4558              		.loc 1 2381 0 is_stmt 1
 4559 0058 1623     		movs	r3, #22
 4560              	.LVL573:
 4561 005a E372     		strb	r3, [r4, #11]
2383:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 4562              		.loc 1 2383 0
 4563 005c 0022     		movs	r2, #0
 4564 005e 174B     		ldr	r3, .L291+12
 4565 0060 1A70     		strb	r2, [r3]
2384:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 4566              		.loc 1 2384 0
 4567 0062 174D     		ldr	r5, .L291+16
 4568 0064 2B68     		ldr	r3, [r5]
 4569 0066 0C22     		movs	r2, #12
 4570 0068 9968     		ldr	r1, [r3, #8]
 4571 006a 2046     		mov	r0, r4
 4572 006c FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4573              	.LVL574:
2385:../user/source/DLT645.c ****     {
 4574              		.loc 1 2385 0
 4575 0070 2B68     		ldr	r3, [r5]
 4576 0072 9868     		ldr	r0, [r3, #8]
 4577 0074 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4578              	.LVL575:
 4579 0078 10B9     		cbnz	r0, .L288
2387:../user/source/DLT645.c ****     }
 4580              		.loc 1 2387 0
 4581 007a 1248     		ldr	r0, .L291+20
 4582 007c FFF7FEFF 		bl	Uart_DataPut
 4583              	.LVL576:
 4584              	.L288:
2391:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 4585              		.loc 1 2391 0
 4586 0080 114D     		ldr	r5, .L291+24
 4587 0082 2B68     		ldr	r3, [r5]
 4588 0084 0C22     		movs	r2, #12
 4589 0086 9968     		ldr	r1, [r3, #8]
 4590 0088 2046     		mov	r0, r4
 4591 008a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4592              	.LVL577:
2392:../user/source/DLT645.c ****     {
 4593              		.loc 1 2392 0
 4594 008e 2B68     		ldr	r3, [r5]
 4595 0090 9868     		ldr	r0, [r3, #8]
 4596 0092 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4597              	.LVL578:
 4598 0096 50B9     		cbnz	r0, .L282
2394:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 4599              		.loc 1 2394 0
 4600 0098 0C4C     		ldr	r4, .L291+28
 4601              	.LVL579:
 4602 009a 0022     		movs	r2, #0
 4603 009c 0C49     		ldr	r1, .L291+32
 4604 009e 2046     		mov	r0, r4
 4605 00a0 FFF7FEFF 		bl	USART_ITConfig
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 141


 4606              	.LVL580:
2395:../user/source/DLT645.c ****     }
 4607              		.loc 1 2395 0
 4608 00a4 0122     		movs	r2, #1
 4609 00a6 0B49     		ldr	r1, .L291+36
 4610 00a8 2046     		mov	r0, r4
 4611 00aa FFF7FEFF 		bl	USART_ITConfig
 4612              	.LVL581:
 4613              	.L282:
 4614 00ae 38BD     		pop	{r3, r4, r5, pc}
 4615              	.L292:
 4616              		.align	2
 4617              	.L291:
 4618 00b0 181F0308 		.word	134422296
 4619 00b4 00000000 		.word	.LANCHOR10
 4620 00b8 00200308 		.word	134422528
 4621 00bc 00000000 		.word	.LANCHOR0
 4622 00c0 00000000 		.word	.LANCHOR6
 4623 00c4 00480040 		.word	1073760256
 4624 00c8 00000000 		.word	.LANCHOR7
 4625 00cc 00440040 		.word	1073759232
 4626 00d0 05010500 		.word	327941
 4627 00d4 07010700 		.word	459015
 4628              		.cfi_endproc
 4629              	.LFE154:
 4631              		.section	.text.blRecvFrame,"ax",%progbits
 4632              		.align	2
 4633              		.global	blRecvFrame
 4634              		.thumb
 4635              		.thumb_func
 4637              	blRecvFrame:
 4638              	.LFB111:
 163:../user/source/DLT645.c ****     /*ÊÕÖ¡×´Ì¬*/
 4639              		.loc 1 163 0
 4640              		.cfi_startproc
 4641              		@ args = 0, pretend = 0, frame = 0
 4642              		@ frame_needed = 0, uses_anonymous_args = 0
 4643              	.LVL582:
 4644 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4645              	.LCFI42:
 4646              		.cfi_def_cfa_offset 24
 4647              		.cfi_offset 3, -24
 4648              		.cfi_offset 4, -20
 4649              		.cfi_offset 5, -16
 4650              		.cfi_offset 6, -12
 4651              		.cfi_offset 7, -8
 4652              		.cfi_offset 14, -4
 4653 0002 0646     		mov	r6, r0
 4654 0004 0D46     		mov	r5, r1
 165:../user/source/DLT645.c ****     {
 4655              		.loc 1 165 0
 4656 0006 3A4B     		ldr	r3, .L307
 4657 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4658 000a 012B     		cmp	r3, #1
 4659 000c 11D0     		beq	.L295
 4660 000e 13B1     		cbz	r3, .L296
 4661 0010 022B     		cmp	r3, #2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 142


 4662 0012 41D0     		beq	.L297
 4663 0014 65E0     		b	.L305
 4664              	.L296:
 171:../user/source/DLT645.c ****         {
 4665              		.loc 1 171 0
 4666 0016 0122     		movs	r2, #1
 4667 0018 FFF7FEFF 		bl	ucDrv_Buf_GetBytes
 4668              	.LVL583:
 4669 001c 0446     		mov	r4, r0
 4670 001e 0028     		cmp	r0, #0
 4671 0020 64D0     		beq	.L294
 179:../user/source/DLT645.c ****             {
 4672              		.loc 1 179 0
 4673 0022 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4674 0024 682B     		cmp	r3, #104
 4675 0026 5ED1     		bne	.L303
 186:../user/source/DLT645.c ****                 blWordsCounterStatus = true;
 4676              		.loc 1 186 0
 4677 0028 0123     		movs	r3, #1
 4678 002a 314A     		ldr	r2, .L307
 4679 002c 1370     		strb	r3, [r2]
 187:../user/source/DLT645.c ****             }
 4680              		.loc 1 187 0
 4681 002e 314A     		ldr	r2, .L307+4
 4682 0030 1370     		strb	r3, [r2]
 4683              	.L295:
 194:../user/source/DLT645.c ****         {
 4684              		.loc 1 194 0
 4685 0032 0922     		movs	r2, #9
 4686 0034 691C     		adds	r1, r5, #1
 4687 0036 3046     		mov	r0, r6
 4688 0038 FFF7FEFF 		bl	ucDrv_Buf_GetBytes
 4689              	.LVL584:
 4690 003c 0746     		mov	r7, r0
 4691 003e 80B9     		cbnz	r0, .L298
 197:../user/source/DLT645.c ****             {
 4692              		.loc 1 197 0
 4693 0040 1421     		movs	r1, #20
 4694 0042 2D4B     		ldr	r3, .L307+8
 4695 0044 1888     		ldrh	r0, [r3]
 4696 0046 FFF7FEFF 		bl	blTime2_Update
 4697              	.LVL585:
 4698 004a 0446     		mov	r4, r0
 4699 004c 0028     		cmp	r0, #0
 4700 004e 4DD0     		beq	.L294
 200:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 4701              		.loc 1 200 0
 4702 0050 0023     		movs	r3, #0
 4703 0052 274A     		ldr	r2, .L307
 4704 0054 1370     		strb	r3, [r2]
 201:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 4705              		.loc 1 201 0
 4706 0056 274A     		ldr	r2, .L307+4
 4707 0058 1370     		strb	r3, [r2]
 202:../user/source/DLT645.c ****             }
 4708              		.loc 1 202 0
 4709 005a 274A     		ldr	r2, .L307+8
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 143


 4710 005c 1380     		strh	r3, [r2]	@ movhi
 262:../user/source/DLT645.c **** }
 4711              		.loc 1 262 0
 4712 005e 3C46     		mov	r4, r7
 4713 0060 44E0     		b	.L294
 4714              	.L298:
 208:../user/source/DLT645.c ****             {
 4715              		.loc 1 208 0
 4716 0062 EB79     		ldrb	r3, [r5, #7]	@ zero_extendqisi2
 4717 0064 682B     		cmp	r3, #104
 4718 0066 04D1     		bne	.L299
 208:../user/source/DLT645.c ****             {
 4719              		.loc 1 208 0 is_stmt 0 discriminator 1
 4720 0068 6B7A     		ldrb	r3, [r5, #9]	@ zero_extendqisi2
 4721 006a 03F10C02 		add	r2, r3, #12
 4722 006e FE2A     		cmp	r2, #254
 4723 0070 07DD     		ble	.L300
 4724              	.L299:
 210:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 4725              		.loc 1 210 0 is_stmt 1
 4726 0072 0024     		movs	r4, #0
 4727 0074 1E4B     		ldr	r3, .L307
 4728 0076 1C70     		strb	r4, [r3]
 211:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 4729              		.loc 1 211 0
 4730 0078 1E4B     		ldr	r3, .L307+4
 4731 007a 1C70     		strb	r4, [r3]
 212:../user/source/DLT645.c ****                 break;
 4732              		.loc 1 212 0
 4733 007c 1E4B     		ldr	r3, .L307+8
 4734 007e 1C80     		strh	r4, [r3]	@ movhi
 213:../user/source/DLT645.c ****             }
 4735              		.loc 1 213 0
 4736 0080 34E0     		b	.L294
 4737              	.L300:
 217:../user/source/DLT645.c ****                 ucRcvStatus = RCV_DATA2;                   //Ö¸ÏòÏÂÒ»²¿·Ö
 4738              		.loc 1 217 0
 4739 0082 1E4A     		ldr	r2, .L307+12
 4740 0084 1370     		strb	r3, [r2]
 218:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 4741              		.loc 1 218 0
 4742 0086 0222     		movs	r2, #2
 4743 0088 194B     		ldr	r3, .L307
 4744 008a 1A70     		strb	r2, [r3]
 220:../user/source/DLT645.c ****                 blWordsCounterStatus = true;
 4745              		.loc 1 220 0
 4746 008c 1A4B     		ldr	r3, .L307+8
 4747 008e 0022     		movs	r2, #0
 4748 0090 1A80     		strh	r2, [r3]	@ movhi
 221:../user/source/DLT645.c ****             }
 4749              		.loc 1 221 0
 4750 0092 0122     		movs	r2, #1
 4751 0094 174B     		ldr	r3, .L307+4
 4752 0096 1A70     		strb	r2, [r3]
 4753              	.L297:
 227:../user/source/DLT645.c ****         {                                                                    //¶ÁºóĞø×Ö½ÚÊ§°Ü£¬Ìø³ö
 4754              		.loc 1 227 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 144


 4755 0098 184B     		ldr	r3, .L307+12
 4756 009a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4757 009c 0232     		adds	r2, r2, #2
 4758 009e 05F10A01 		add	r1, r5, #10
 4759 00a2 3046     		mov	r0, r6
 4760 00a4 FFF7FEFF 		bl	ucDrv_Buf_GetBytes
 4761              	.LVL586:
 4762 00a8 0446     		mov	r4, r0
 4763 00aa 68B9     		cbnz	r0, .L301
 229:../user/source/DLT645.c ****             {                                                                //Èç¹û³¬Ê±£¬ÔòÖØĞÂÕÒ68
 4764              		.loc 1 229 0
 4765 00ac 1421     		movs	r1, #20
 4766 00ae 124B     		ldr	r3, .L307+8
 4767 00b0 1888     		ldrh	r0, [r3]
 4768 00b2 FFF7FEFF 		bl	blTime2_Update
 4769              	.LVL587:
 4770 00b6 C0B1     		cbz	r0, .L304
 231:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 4771              		.loc 1 231 0
 4772 00b8 0023     		movs	r3, #0
 4773 00ba 0D4A     		ldr	r2, .L307
 4774 00bc 1370     		strb	r3, [r2]
 232:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 4775              		.loc 1 232 0
 4776 00be 0D4A     		ldr	r2, .L307+4
 4777 00c0 1370     		strb	r3, [r2]
 233:../user/source/DLT645.c ****             }
 4778              		.loc 1 233 0
 4779 00c2 0D4A     		ldr	r2, .L307+8
 4780 00c4 1380     		strh	r3, [r2]	@ movhi
 4781 00c6 11E0     		b	.L294
 4782              	.L301:
 239:../user/source/DLT645.c ****             blWordsCounterStatus = false;
 4783              		.loc 1 239 0
 4784 00c8 0023     		movs	r3, #0
 4785 00ca 094A     		ldr	r2, .L307
 4786 00cc 1370     		strb	r3, [r2]
 240:../user/source/DLT645.c ****             uwTime2WordsCounter = 0;
 4787              		.loc 1 240 0
 4788 00ce 094A     		ldr	r2, .L307+4
 4789 00d0 1370     		strb	r3, [r2]
 241:../user/source/DLT645.c ****             if (dwCheckFrame(ucdata_buf) != OK_1)
 4790              		.loc 1 241 0
 4791 00d2 094A     		ldr	r2, .L307+8
 4792 00d4 1380     		strh	r3, [r2]	@ movhi
 242:../user/source/DLT645.c ****             {
 4793              		.loc 1 242 0
 4794 00d6 2846     		mov	r0, r5
 4795 00d8 FFF7FEFF 		bl	dwCheckFrame
 4796              	.LVL588:
 4797 00dc 30B1     		cbz	r0, .L294
 248:../user/source/DLT645.c ****             }
 4798              		.loc 1 248 0
 4799 00de 0024     		movs	r4, #0
 4800 00e0 04E0     		b	.L294
 4801              	.LVL589:
 4802              	.L305:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 145


 262:../user/source/DLT645.c **** }
 4803              		.loc 1 262 0
 4804 00e2 0024     		movs	r4, #0
 4805 00e4 02E0     		b	.L294
 4806              	.LVL590:
 4807              	.L303:
 4808 00e6 0024     		movs	r4, #0
 4809 00e8 00E0     		b	.L294
 4810              	.L304:
 4811 00ea 0446     		mov	r4, r0
 4812              	.L294:
 263:../user/source/DLT645.c **** 
 4813              		.loc 1 263 0
 4814 00ec 2046     		mov	r0, r4
 4815 00ee F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4816              	.LVL591:
 4817              	.L308:
 4818              		.align	2
 4819              	.L307:
 4820 00f0 00000000 		.word	.LANCHOR11
 4821 00f4 00000000 		.word	blWordsCounterStatus
 4822 00f8 00000000 		.word	uwTime2WordsCounter
 4823 00fc 00000000 		.word	.LANCHOR0
 4824              		.cfi_endproc
 4825              	.LFE111:
 4827              		.section	.text.vDBDataID_Handle,"ax",%progbits
 4828              		.align	2
 4829              		.global	vDBDataID_Handle
 4830              		.thumb
 4831              		.thumb_func
 4833              	vDBDataID_Handle:
 4834              	.LFB113:
 302:../user/source/DLT645.c ****     uint8_t i;
 4835              		.loc 1 302 0
 4836              		.cfi_startproc
 4837              		@ args = 0, pretend = 0, frame = 0
 4838              		@ frame_needed = 0, uses_anonymous_args = 0
 4839              	.LVL592:
 4840 0000 10B5     		push	{r4, lr}
 4841              	.LCFI43:
 4842              		.cfi_def_cfa_offset 8
 4843              		.cfi_offset 4, -8
 4844              		.cfi_offset 14, -4
 4845              	.LVL593:
 306:../user/source/DLT645.c ****     {
 4846              		.loc 1 306 0
 4847 0002 0023     		movs	r3, #0
 4848 0004 1CE0     		b	.L310
 4849              	.LVL594:
 4850              	.L313:
 308:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 4851              		.loc 1 308 0
 4852 0006 184A     		ldr	r2, .L316
 4853 0008 12F83310 		ldrb	r1, [r2, r3, lsl #3]	@ zero_extendqisi2
 4854 000c 827A     		ldrb	r2, [r0, #10]	@ zero_extendqisi2
 4855 000e 9142     		cmp	r1, r2
 4856 0010 14D1     		bne	.L311
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 146


 309:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 4857              		.loc 1 309 0 discriminator 1
 4858 0012 154A     		ldr	r2, .L316
 4859 0014 02EBC302 		add	r2, r2, r3, lsl #3
 4860 0018 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 4861 001a C27A     		ldrb	r2, [r0, #11]	@ zero_extendqisi2
 308:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 4862              		.loc 1 308 0 discriminator 1
 4863 001c 9142     		cmp	r1, r2
 4864 001e 0DD1     		bne	.L311
 310:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 4865              		.loc 1 310 0
 4866 0020 114A     		ldr	r2, .L316
 4867 0022 02EBC302 		add	r2, r2, r3, lsl #3
 4868 0026 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 4869 0028 027B     		ldrb	r2, [r0, #12]	@ zero_extendqisi2
 309:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 4870              		.loc 1 309 0
 4871 002a 9142     		cmp	r1, r2
 4872 002c 06D1     		bne	.L311
 311:../user/source/DLT645.c ****             break;
 4873              		.loc 1 311 0
 4874 002e 0E4A     		ldr	r2, .L316
 4875 0030 02EBC304 		add	r4, r2, r3, lsl #3
 4876 0034 E178     		ldrb	r1, [r4, #3]	@ zero_extendqisi2
 4877 0036 427B     		ldrb	r2, [r0, #13]	@ zero_extendqisi2
 310:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 4878              		.loc 1 310 0
 4879 0038 9142     		cmp	r1, r2
 4880 003a 03D0     		beq	.L312
 4881              	.L311:
 306:../user/source/DLT645.c ****     {
 4882              		.loc 1 306 0 discriminator 2
 4883 003c 0133     		adds	r3, r3, #1
 4884              	.LVL595:
 4885 003e DBB2     		uxtb	r3, r3
 4886              	.LVL596:
 4887              	.L310:
 306:../user/source/DLT645.c ****     {
 4888              		.loc 1 306 0 is_stmt 0 discriminator 1
 4889 0040 342B     		cmp	r3, #52
 4890 0042 E0D9     		bls	.L313
 4891              	.L312:
 314:../user/source/DLT645.c ****     {
 4892              		.loc 1 314 0 is_stmt 1
 4893 0044 342B     		cmp	r3, #52
 4894 0046 0DD8     		bhi	.L309
 317:../user/source/DLT645.c ****             return;
 4895              		.loc 1 317 0
 4896 0048 074A     		ldr	r2, .L316
 4897 004a 02EBC303 		add	r3, r2, r3, lsl #3
 4898              	.LVL597:
 4899 004e 5B68     		ldr	r3, [r3, #4]
 4900 0050 064A     		ldr	r2, .L316+4
 4901 0052 9342     		cmp	r3, r2
 4902 0054 06D0     		beq	.L309
 321:../user/source/DLT645.c ****             return;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 147


 4903              		.loc 1 321 0
 4904 0056 064A     		ldr	r2, .L316+8
 4905 0058 9342     		cmp	r3, r2
 4906 005a 03D0     		beq	.L309
 325:../user/source/DLT645.c ****             return;
 4907              		.loc 1 325 0
 4908 005c 054A     		ldr	r2, .L316+12
 4909 005e 9342     		cmp	r3, r2
 4910 0060 00D0     		beq	.L309
 337:../user/source/DLT645.c ****     }
 4911              		.loc 1 337 0
 4912 0062 9847     		blx	r3
 4913              	.LVL598:
 4914              	.L309:
 4915 0064 10BD     		pop	{r4, pc}
 4916              	.L317:
 4917 0066 00BF     		.align	2
 4918              	.L316:
 4919 0068 00000000 		.word	.LANCHOR12
 4920 006c 00000000 		.word	vCurrent_Modify
 4921 0070 00000000 		.word	vCurrent_Limit_Modify
 4922 0074 00000000 		.word	Estatus_Modify_CurrentEvent
 4923              		.cfi_endproc
 4924              	.LFE113:
 4926              		.section	.text.vINFRDataID_Handle,"ax",%progbits
 4927              		.align	2
 4928              		.global	vINFRDataID_Handle
 4929              		.thumb
 4930              		.thumb_func
 4932              	vINFRDataID_Handle:
 4933              	.LFB114:
 351:../user/source/DLT645.c ****     uint8_t i;
 4934              		.loc 1 351 0
 4935              		.cfi_startproc
 4936              		@ args = 0, pretend = 0, frame = 0
 4937              		@ frame_needed = 0, uses_anonymous_args = 0
 4938              	.LVL599:
 4939 0000 10B5     		push	{r4, lr}
 4940              	.LCFI44:
 4941              		.cfi_def_cfa_offset 8
 4942              		.cfi_offset 4, -8
 4943              		.cfi_offset 14, -4
 4944              	.LVL600:
 355:../user/source/DLT645.c ****     {
 4945              		.loc 1 355 0
 4946 0002 0023     		movs	r3, #0
 4947 0004 1CE0     		b	.L319
 4948              	.LVL601:
 4949              	.L322:
 357:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 4950              		.loc 1 357 0
 4951 0006 134A     		ldr	r2, .L325
 4952 0008 12F83310 		ldrb	r1, [r2, r3, lsl #3]	@ zero_extendqisi2
 4953 000c 827A     		ldrb	r2, [r0, #10]	@ zero_extendqisi2
 4954 000e 9142     		cmp	r1, r2
 4955 0010 14D1     		bne	.L320
 358:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 148


 4956              		.loc 1 358 0 discriminator 1
 4957 0012 104A     		ldr	r2, .L325
 4958 0014 02EBC302 		add	r2, r2, r3, lsl #3
 4959 0018 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 4960 001a C27A     		ldrb	r2, [r0, #11]	@ zero_extendqisi2
 357:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 4961              		.loc 1 357 0 discriminator 1
 4962 001c 9142     		cmp	r1, r2
 4963 001e 0DD1     		bne	.L320
 359:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 4964              		.loc 1 359 0
 4965 0020 0C4A     		ldr	r2, .L325
 4966 0022 02EBC302 		add	r2, r2, r3, lsl #3
 4967 0026 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 4968 0028 027B     		ldrb	r2, [r0, #12]	@ zero_extendqisi2
 358:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 4969              		.loc 1 358 0
 4970 002a 9142     		cmp	r1, r2
 4971 002c 06D1     		bne	.L320
 360:../user/source/DLT645.c ****             break;
 4972              		.loc 1 360 0
 4973 002e 094A     		ldr	r2, .L325
 4974 0030 02EBC304 		add	r4, r2, r3, lsl #3
 4975 0034 E178     		ldrb	r1, [r4, #3]	@ zero_extendqisi2
 4976 0036 427B     		ldrb	r2, [r0, #13]	@ zero_extendqisi2
 359:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 4977              		.loc 1 359 0
 4978 0038 9142     		cmp	r1, r2
 4979 003a 03D0     		beq	.L321
 4980              	.L320:
 355:../user/source/DLT645.c ****     {
 4981              		.loc 1 355 0 discriminator 2
 4982 003c 0133     		adds	r3, r3, #1
 4983              	.LVL602:
 4984 003e DBB2     		uxtb	r3, r3
 4985              	.LVL603:
 4986              	.L319:
 355:../user/source/DLT645.c ****     {
 4987              		.loc 1 355 0 is_stmt 0 discriminator 1
 4988 0040 102B     		cmp	r3, #16
 4989 0042 E0D9     		bls	.L322
 4990              	.L321:
 363:../user/source/DLT645.c ****     {
 4991              		.loc 1 363 0 is_stmt 1
 4992 0044 102B     		cmp	r3, #16
 4993 0046 04D8     		bhi	.L318
 373:../user/source/DLT645.c ****     }
 4994              		.loc 1 373 0
 4995 0048 024A     		ldr	r2, .L325
 4996 004a 02EBC303 		add	r3, r2, r3, lsl #3
 4997              	.LVL604:
 4998 004e 5B68     		ldr	r3, [r3, #4]
 4999 0050 9847     		blx	r3
 5000              	.LVL605:
 5001              	.L318:
 5002 0052 10BD     		pop	{r4, pc}
 5003              	.L326:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 149


 5004              		.align	2
 5005              	.L325:
 5006 0054 00000000 		.word	.LANCHOR13
 5007              		.cfi_endproc
 5008              	.LFE114:
 5010              		.section	.text.blVoltage_Create,"ax",%progbits
 5011              		.align	2
 5012              		.global	blVoltage_Create
 5013              		.thumb
 5014              		.thumb_func
 5016              	blVoltage_Create:
 5017              	.LFB121:
 697:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
 5018              		.loc 1 697 0
 5019              		.cfi_startproc
 5020              		@ args = 0, pretend = 0, frame = 0
 5021              		@ frame_needed = 0, uses_anonymous_args = 0
 5022              	.LVL606:
 5023 0000 70B5     		push	{r4, r5, r6, lr}
 5024              	.LCFI45:
 5025              		.cfi_def_cfa_offset 16
 5026              		.cfi_offset 4, -16
 5027              		.cfi_offset 5, -12
 5028              		.cfi_offset 6, -8
 5029              		.cfi_offset 14, -4
 5030 0002 0446     		mov	r4, r0
 5031              	.LVL607:
 700:../user/source/DLT645.c ****     {
 5032              		.loc 1 700 0
 5033 0004 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 5034 0006 323B     		subs	r3, r3, #50
 5035 0008 042B     		cmp	r3, #4
 5036 000a 00F2E580 		bhi	.L348
 5037 000e DFE813F0 		tbh	[pc, r3, lsl #1]
 5038              	.L330:
 5039 0012 0500     		.2byte	(.L329-.L330)/2
 5040 0014 E300     		.2byte	(.L348-.L330)/2
 5041 0016 5F00     		.2byte	(.L331-.L330)/2
 5042 0018 8B00     		.2byte	(.L332-.L330)/2
 5043 001a B700     		.2byte	(.L333-.L330)/2
 5044              		.p2align 1
 5045              	.L329:
 704:../user/source/DLT645.c ****         pucBuffer[9] = 0x0A;
 5046              		.loc 1 704 0
 5047 001c 9123     		movs	r3, #145
 5048 001e 0372     		strb	r3, [r0, #8]
 705:../user/source/DLT645.c ****         //Ê¹ÓÃÉÏ´ÎĞŞ¸ÄµÄºÏ·¨µçÑ¹Öµ»ò1000 2017-10-25:
 5049              		.loc 1 705 0
 5050 0020 0A23     		movs	r3, #10
 5051 0022 4372     		strb	r3, [r0, #9]
 707:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 5052              		.loc 1 707 0
 5053 0024 6D4B     		ldr	r3, .L356
 5054 0026 1D68     		ldr	r5, [r3]
 5055 0028 6D4B     		ldr	r3, .L356+4
 5056 002a 1E68     		ldr	r6, [r3]
 5057 002c B542     		cmp	r5, r6
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 150


 5058 002e 06DC     		bgt	.L349
 707:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 5059              		.loc 1 707 0 is_stmt 0 discriminator 1
 5060 0030 6C4B     		ldr	r3, .L356+8
 5061 0032 1B68     		ldr	r3, [r3]
 5062 0034 9D42     		cmp	r5, r3
 5063 0036 04DA     		bge	.L334
 707:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 5064              		.loc 1 707 0
 5065 0038 40F69805 		movw	r5, #2200
 5066 003c 01E0     		b	.L334
 5067              	.L349:
 5068 003e 40F69805 		movw	r5, #2200
 5069              	.L334:
 707:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 5070              		.loc 1 707 0 discriminator 6
 5071 0042 664B     		ldr	r3, .L356
 5072 0044 1D60     		str	r5, [r3]
 708:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(A_Voltage);
 5073              		.loc 1 708 0 is_stmt 1 discriminator 6
 5074 0046 2846     		mov	r0, r5
 5075              	.LVL608:
 5076 0048 FFF7FEFF 		bl	GetLowByte
 5077              	.LVL609:
 5078 004c A073     		strb	r0, [r4, #14]
 709:../user/source/DLT645.c ****         B_Voltage = ((B_Voltage <= Voltage_MAX) && (B_Voltage >= Voltage_MIN) ? B_Voltage : WORK_VO
 5079              		.loc 1 709 0 discriminator 6
 5080 004e 2846     		mov	r0, r5
 5081 0050 FFF7FEFF 		bl	GetHighByte
 5082              	.LVL610:
 5083 0054 E073     		strb	r0, [r4, #15]
 710:../user/source/DLT645.c ****         pucBuffer[16] = GetLowByte(B_Voltage);
 5084              		.loc 1 710 0 discriminator 6
 5085 0056 644B     		ldr	r3, .L356+12
 5086 0058 1D68     		ldr	r5, [r3]
 5087 005a AE42     		cmp	r6, r5
 5088 005c 06DB     		blt	.L350
 710:../user/source/DLT645.c ****         pucBuffer[16] = GetLowByte(B_Voltage);
 5089              		.loc 1 710 0 is_stmt 0 discriminator 1
 5090 005e 614B     		ldr	r3, .L356+8
 5091 0060 1B68     		ldr	r3, [r3]
 5092 0062 9D42     		cmp	r5, r3
 5093 0064 04DA     		bge	.L335
 710:../user/source/DLT645.c ****         pucBuffer[16] = GetLowByte(B_Voltage);
 5094              		.loc 1 710 0
 5095 0066 40F69805 		movw	r5, #2200
 5096 006a 01E0     		b	.L335
 5097              	.L350:
 5098 006c 40F69805 		movw	r5, #2200
 5099              	.L335:
 710:../user/source/DLT645.c ****         pucBuffer[16] = GetLowByte(B_Voltage);
 5100              		.loc 1 710 0 discriminator 6
 5101 0070 5D4B     		ldr	r3, .L356+12
 5102 0072 1D60     		str	r5, [r3]
 711:../user/source/DLT645.c ****         pucBuffer[17] = GetHighByte(B_Voltage);
 5103              		.loc 1 711 0 is_stmt 1 discriminator 6
 5104 0074 2846     		mov	r0, r5
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 151


 5105 0076 FFF7FEFF 		bl	GetLowByte
 5106              	.LVL611:
 5107 007a 2074     		strb	r0, [r4, #16]
 712:../user/source/DLT645.c ****         C_Voltage = ((C_Voltage <= Voltage_MAX) && (C_Voltage >= Voltage_MIN) ? C_Voltage : WORK_VO
 5108              		.loc 1 712 0 discriminator 6
 5109 007c 2846     		mov	r0, r5
 5110 007e FFF7FEFF 		bl	GetHighByte
 5111              	.LVL612:
 5112 0082 6074     		strb	r0, [r4, #17]
 713:../user/source/DLT645.c ****         pucBuffer[18] = GetLowByte(C_Voltage);
 5113              		.loc 1 713 0 discriminator 6
 5114 0084 594B     		ldr	r3, .L356+16
 5115 0086 1D68     		ldr	r5, [r3]
 5116 0088 AE42     		cmp	r6, r5
 5117 008a 06DB     		blt	.L351
 713:../user/source/DLT645.c ****         pucBuffer[18] = GetLowByte(C_Voltage);
 5118              		.loc 1 713 0 is_stmt 0 discriminator 1
 5119 008c 554B     		ldr	r3, .L356+8
 5120 008e 1B68     		ldr	r3, [r3]
 5121 0090 9D42     		cmp	r5, r3
 5122 0092 04DA     		bge	.L336
 713:../user/source/DLT645.c ****         pucBuffer[18] = GetLowByte(C_Voltage);
 5123              		.loc 1 713 0
 5124 0094 40F69805 		movw	r5, #2200
 5125 0098 01E0     		b	.L336
 5126              	.L351:
 5127 009a 40F69805 		movw	r5, #2200
 5128              	.L336:
 713:../user/source/DLT645.c ****         pucBuffer[18] = GetLowByte(C_Voltage);
 5129              		.loc 1 713 0 discriminator 6
 5130 009e 534B     		ldr	r3, .L356+16
 5131 00a0 1D60     		str	r5, [r3]
 714:../user/source/DLT645.c ****         pucBuffer[19] = GetHighByte(C_Voltage);
 5132              		.loc 1 714 0 is_stmt 1 discriminator 6
 5133 00a2 2846     		mov	r0, r5
 5134 00a4 FFF7FEFF 		bl	GetLowByte
 5135              	.LVL613:
 5136 00a8 A074     		strb	r0, [r4, #18]
 715:../user/source/DLT645.c ****         for (i = 0; i < 20; i++) //¹Ì¶¨Ö¡³¤22
 5137              		.loc 1 715 0 discriminator 6
 5138 00aa 2846     		mov	r0, r5
 5139 00ac FFF7FEFF 		bl	GetHighByte
 5140              	.LVL614:
 5141 00b0 E074     		strb	r0, [r4, #19]
 716:../user/source/DLT645.c ****         {
 5142              		.loc 1 716 0 discriminator 6
 5143 00b2 0023     		movs	r3, #0
 698:../user/source/DLT645.c ****     uint8_t i = 0;
 5144              		.loc 1 698 0 discriminator 6
 5145 00b4 1A46     		mov	r2, r3
 716:../user/source/DLT645.c ****         {
 5146              		.loc 1 716 0 discriminator 6
 5147 00b6 04E0     		b	.L337
 5148              	.LVL615:
 5149              	.L338:
 718:../user/source/DLT645.c ****         }
 5150              		.loc 1 718 0 discriminator 3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 152


 5151 00b8 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 5152 00ba 0A44     		add	r2, r2, r1
 5153              	.LVL616:
 5154 00bc D2B2     		uxtb	r2, r2
 5155              	.LVL617:
 716:../user/source/DLT645.c ****         {
 5156              		.loc 1 716 0 discriminator 3
 5157 00be 0133     		adds	r3, r3, #1
 5158              	.LVL618:
 5159 00c0 DBB2     		uxtb	r3, r3
 5160              	.LVL619:
 5161              	.L337:
 716:../user/source/DLT645.c ****         {
 5162              		.loc 1 716 0 is_stmt 0 discriminator 1
 5163 00c2 132B     		cmp	r3, #19
 5164 00c4 F8D9     		bls	.L338
 720:../user/source/DLT645.c ****         pucBuffer[21] = 0x16;
 5165              		.loc 1 720 0 is_stmt 1
 5166 00c6 2275     		strb	r2, [r4, #20]
 721:../user/source/DLT645.c ****         return true;
 5167              		.loc 1 721 0
 5168 00c8 1623     		movs	r3, #22
 5169              	.LVL620:
 5170 00ca 6375     		strb	r3, [r4, #21]
 722:../user/source/DLT645.c ****     }
 5171              		.loc 1 722 0
 5172 00cc 0120     		movs	r0, #1
 5173 00ce 70BD     		pop	{r4, r5, r6, pc}
 5174              	.LVL621:
 5175              	.L331:
 726:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5176              		.loc 1 726 0
 5177 00d0 424B     		ldr	r3, .L356
 5178 00d2 1D68     		ldr	r5, [r3]
 5179 00d4 424B     		ldr	r3, .L356+4
 5180 00d6 1B68     		ldr	r3, [r3]
 5181 00d8 9D42     		cmp	r5, r3
 5182 00da 06DC     		bgt	.L352
 726:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5183              		.loc 1 726 0 is_stmt 0 discriminator 1
 5184 00dc 414B     		ldr	r3, .L356+8
 5185 00de 1B68     		ldr	r3, [r3]
 5186 00e0 9D42     		cmp	r5, r3
 5187 00e2 04DA     		bge	.L339
 726:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5188              		.loc 1 726 0
 5189 00e4 40F69805 		movw	r5, #2200
 5190 00e8 01E0     		b	.L339
 5191              	.L352:
 5192 00ea 40F69805 		movw	r5, #2200
 5193              	.L339:
 726:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5194              		.loc 1 726 0 discriminator 6
 5195 00ee 3B4B     		ldr	r3, .L356
 5196 00f0 1D60     		str	r5, [r3]
 727:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 5197              		.loc 1 727 0 is_stmt 1 discriminator 6
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 153


 5198 00f2 9123     		movs	r3, #145
 5199 00f4 2372     		strb	r3, [r4, #8]
 728:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 5200              		.loc 1 728 0 discriminator 6
 5201 00f6 0623     		movs	r3, #6
 5202 00f8 6372     		strb	r3, [r4, #9]
 729:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(A_Voltage);
 5203              		.loc 1 729 0 discriminator 6
 5204 00fa 2846     		mov	r0, r5
 5205              	.LVL622:
 5206 00fc FFF7FEFF 		bl	GetLowByte
 5207              	.LVL623:
 5208 0100 A073     		strb	r0, [r4, #14]
 730:../user/source/DLT645.c ****         for (i = 0; i < 16; i++) //¹Ì¶¨Ö¡³¤18
 5209              		.loc 1 730 0 discriminator 6
 5210 0102 2846     		mov	r0, r5
 5211 0104 FFF7FEFF 		bl	GetHighByte
 5212              	.LVL624:
 5213 0108 E073     		strb	r0, [r4, #15]
 731:../user/source/DLT645.c ****         {
 5214              		.loc 1 731 0 discriminator 6
 5215 010a 0023     		movs	r3, #0
 698:../user/source/DLT645.c ****     uint8_t i = 0;
 5216              		.loc 1 698 0 discriminator 6
 5217 010c 1A46     		mov	r2, r3
 731:../user/source/DLT645.c ****         {
 5218              		.loc 1 731 0 discriminator 6
 5219 010e 04E0     		b	.L340
 5220              	.LVL625:
 5221              	.L341:
 733:../user/source/DLT645.c ****         }
 5222              		.loc 1 733 0 discriminator 3
 5223 0110 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 5224 0112 0A44     		add	r2, r2, r1
 5225              	.LVL626:
 5226 0114 D2B2     		uxtb	r2, r2
 5227              	.LVL627:
 731:../user/source/DLT645.c ****         {
 5228              		.loc 1 731 0 discriminator 3
 5229 0116 0133     		adds	r3, r3, #1
 5230              	.LVL628:
 5231 0118 DBB2     		uxtb	r3, r3
 5232              	.LVL629:
 5233              	.L340:
 731:../user/source/DLT645.c ****         {
 5234              		.loc 1 731 0 is_stmt 0 discriminator 1
 5235 011a 0F2B     		cmp	r3, #15
 5236 011c F8D9     		bls	.L341
 735:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 5237              		.loc 1 735 0 is_stmt 1
 5238 011e 2274     		strb	r2, [r4, #16]
 736:../user/source/DLT645.c ****         return true;
 5239              		.loc 1 736 0
 5240 0120 1623     		movs	r3, #22
 5241              	.LVL630:
 5242 0122 6374     		strb	r3, [r4, #17]
 737:../user/source/DLT645.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 154


 5243              		.loc 1 737 0
 5244 0124 0120     		movs	r0, #1
 5245 0126 70BD     		pop	{r4, r5, r6, pc}
 5246              	.LVL631:
 5247              	.L332:
 741:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5248              		.loc 1 741 0
 5249 0128 2F4B     		ldr	r3, .L356+12
 5250 012a 1D68     		ldr	r5, [r3]
 5251 012c 2C4B     		ldr	r3, .L356+4
 5252 012e 1B68     		ldr	r3, [r3]
 5253 0130 9D42     		cmp	r5, r3
 5254 0132 06DC     		bgt	.L353
 741:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5255              		.loc 1 741 0 is_stmt 0 discriminator 1
 5256 0134 2B4B     		ldr	r3, .L356+8
 5257 0136 1B68     		ldr	r3, [r3]
 5258 0138 9D42     		cmp	r5, r3
 5259 013a 04DA     		bge	.L342
 741:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5260              		.loc 1 741 0
 5261 013c 40F69805 		movw	r5, #2200
 5262 0140 01E0     		b	.L342
 5263              	.L353:
 5264 0142 40F69805 		movw	r5, #2200
 5265              	.L342:
 741:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5266              		.loc 1 741 0 discriminator 6
 5267 0146 284B     		ldr	r3, .L356+12
 5268 0148 1D60     		str	r5, [r3]
 742:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 5269              		.loc 1 742 0 is_stmt 1 discriminator 6
 5270 014a 9123     		movs	r3, #145
 5271 014c 2372     		strb	r3, [r4, #8]
 743:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(B_Voltage);
 5272              		.loc 1 743 0 discriminator 6
 5273 014e 0623     		movs	r3, #6
 5274 0150 6372     		strb	r3, [r4, #9]
 744:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(B_Voltage);
 5275              		.loc 1 744 0 discriminator 6
 5276 0152 2846     		mov	r0, r5
 5277              	.LVL632:
 5278 0154 FFF7FEFF 		bl	GetLowByte
 5279              	.LVL633:
 5280 0158 A073     		strb	r0, [r4, #14]
 745:../user/source/DLT645.c ****         for (i = 0; i < 16; i++) //¹Ì¶¨Ö¡³¤18
 5281              		.loc 1 745 0 discriminator 6
 5282 015a 2846     		mov	r0, r5
 5283 015c FFF7FEFF 		bl	GetHighByte
 5284              	.LVL634:
 5285 0160 E073     		strb	r0, [r4, #15]
 746:../user/source/DLT645.c ****         {
 5286              		.loc 1 746 0 discriminator 6
 5287 0162 0023     		movs	r3, #0
 698:../user/source/DLT645.c ****     uint8_t i = 0;
 5288              		.loc 1 698 0 discriminator 6
 5289 0164 1A46     		mov	r2, r3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 155


 746:../user/source/DLT645.c ****         {
 5290              		.loc 1 746 0 discriminator 6
 5291 0166 04E0     		b	.L343
 5292              	.LVL635:
 5293              	.L344:
 748:../user/source/DLT645.c ****         }
 5294              		.loc 1 748 0 discriminator 3
 5295 0168 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 5296 016a 0A44     		add	r2, r2, r1
 5297              	.LVL636:
 5298 016c D2B2     		uxtb	r2, r2
 5299              	.LVL637:
 746:../user/source/DLT645.c ****         {
 5300              		.loc 1 746 0 discriminator 3
 5301 016e 0133     		adds	r3, r3, #1
 5302              	.LVL638:
 5303 0170 DBB2     		uxtb	r3, r3
 5304              	.LVL639:
 5305              	.L343:
 746:../user/source/DLT645.c ****         {
 5306              		.loc 1 746 0 is_stmt 0 discriminator 1
 5307 0172 0F2B     		cmp	r3, #15
 5308 0174 F8D9     		bls	.L344
 750:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 5309              		.loc 1 750 0 is_stmt 1
 5310 0176 2274     		strb	r2, [r4, #16]
 751:../user/source/DLT645.c ****         return true;
 5311              		.loc 1 751 0
 5312 0178 1623     		movs	r3, #22
 5313              	.LVL640:
 5314 017a 6374     		strb	r3, [r4, #17]
 752:../user/source/DLT645.c ****     }
 5315              		.loc 1 752 0
 5316 017c 0120     		movs	r0, #1
 5317 017e 70BD     		pop	{r4, r5, r6, pc}
 5318              	.LVL641:
 5319              	.L333:
 756:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5320              		.loc 1 756 0
 5321 0180 1A4B     		ldr	r3, .L356+16
 5322 0182 1D68     		ldr	r5, [r3]
 5323 0184 164B     		ldr	r3, .L356+4
 5324 0186 1B68     		ldr	r3, [r3]
 5325 0188 9D42     		cmp	r5, r3
 5326 018a 06DC     		bgt	.L354
 756:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5327              		.loc 1 756 0 is_stmt 0 discriminator 1
 5328 018c 154B     		ldr	r3, .L356+8
 5329 018e 1B68     		ldr	r3, [r3]
 5330 0190 9D42     		cmp	r5, r3
 5331 0192 04DA     		bge	.L345
 756:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5332              		.loc 1 756 0
 5333 0194 40F69805 		movw	r5, #2200
 5334 0198 01E0     		b	.L345
 5335              	.L354:
 5336 019a 40F69805 		movw	r5, #2200
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 156


 5337              	.L345:
 756:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5338              		.loc 1 756 0 discriminator 6
 5339 019e 134B     		ldr	r3, .L356+16
 5340 01a0 1D60     		str	r5, [r3]
 757:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 5341              		.loc 1 757 0 is_stmt 1 discriminator 6
 5342 01a2 9123     		movs	r3, #145
 5343 01a4 2372     		strb	r3, [r4, #8]
 758:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(C_Voltage);
 5344              		.loc 1 758 0 discriminator 6
 5345 01a6 0623     		movs	r3, #6
 5346 01a8 6372     		strb	r3, [r4, #9]
 759:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(C_Voltage);
 5347              		.loc 1 759 0 discriminator 6
 5348 01aa 2846     		mov	r0, r5
 5349              	.LVL642:
 5350 01ac FFF7FEFF 		bl	GetLowByte
 5351              	.LVL643:
 5352 01b0 A073     		strb	r0, [r4, #14]
 760:../user/source/DLT645.c ****         for (i = 0; i < 16; i++)
 5353              		.loc 1 760 0 discriminator 6
 5354 01b2 2846     		mov	r0, r5
 5355 01b4 FFF7FEFF 		bl	GetHighByte
 5356              	.LVL644:
 5357 01b8 E073     		strb	r0, [r4, #15]
 761:../user/source/DLT645.c ****         {
 5358              		.loc 1 761 0 discriminator 6
 5359 01ba 0023     		movs	r3, #0
 698:../user/source/DLT645.c ****     uint8_t i = 0;
 5360              		.loc 1 698 0 discriminator 6
 5361 01bc 1A46     		mov	r2, r3
 761:../user/source/DLT645.c ****         {
 5362              		.loc 1 761 0 discriminator 6
 5363 01be 04E0     		b	.L346
 5364              	.LVL645:
 5365              	.L347:
 763:../user/source/DLT645.c ****         }
 5366              		.loc 1 763 0 discriminator 3
 5367 01c0 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 5368 01c2 0A44     		add	r2, r2, r1
 5369              	.LVL646:
 5370 01c4 D2B2     		uxtb	r2, r2
 5371              	.LVL647:
 761:../user/source/DLT645.c ****         {
 5372              		.loc 1 761 0 discriminator 3
 5373 01c6 0133     		adds	r3, r3, #1
 5374              	.LVL648:
 5375 01c8 DBB2     		uxtb	r3, r3
 5376              	.LVL649:
 5377              	.L346:
 761:../user/source/DLT645.c ****         {
 5378              		.loc 1 761 0 is_stmt 0 discriminator 1
 5379 01ca 0F2B     		cmp	r3, #15
 5380 01cc F8D9     		bls	.L347
 765:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 5381              		.loc 1 765 0 is_stmt 1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 157


 5382 01ce 2274     		strb	r2, [r4, #16]
 766:../user/source/DLT645.c ****         return true;
 5383              		.loc 1 766 0
 5384 01d0 1623     		movs	r3, #22
 5385              	.LVL650:
 5386 01d2 6374     		strb	r3, [r4, #17]
 767:../user/source/DLT645.c ****     }
 5387              		.loc 1 767 0
 5388 01d4 0120     		movs	r0, #1
 5389 01d6 70BD     		pop	{r4, r5, r6, pc}
 5390              	.LVL651:
 5391              	.L348:
 770:../user/source/DLT645.c ****     }
 5392              		.loc 1 770 0
 5393 01d8 0020     		movs	r0, #0
 5394              	.LVL652:
 772:../user/source/DLT645.c **** /********************************************************************
 5395              		.loc 1 772 0
 5396 01da 70BD     		pop	{r4, r5, r6, pc}
 5397              	.LVL653:
 5398              	.L357:
 5399              		.align	2
 5400              	.L356:
 5401 01dc 00000000 		.word	.LANCHOR4
 5402 01e0 00000000 		.word	Voltage_MAX
 5403 01e4 00000000 		.word	Voltage_MIN
 5404 01e8 00000000 		.word	.LANCHOR8
 5405 01ec 00000000 		.word	.LANCHOR9
 5406              		.cfi_endproc
 5407              	.LFE121:
 5409              		.section	.text.Voltage_Change_Init,"ax",%progbits
 5410              		.align	2
 5411              		.global	Voltage_Change_Init
 5412              		.thumb
 5413              		.thumb_func
 5415              	Voltage_Change_Init:
 5416              	.LFB126:
 877:../user/source/DLT645.c ****     uint8_t Vmax1;
 5417              		.loc 1 877 0
 5418              		.cfi_startproc
 5419              		@ args = 0, pretend = 0, frame = 0
 5420              		@ frame_needed = 0, uses_anonymous_args = 0
 5421 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5422              	.LCFI46:
 5423              		.cfi_def_cfa_offset 24
 5424              		.cfi_offset 3, -24
 5425              		.cfi_offset 4, -20
 5426              		.cfi_offset 5, -16
 5427              		.cfi_offset 6, -12
 5428              		.cfi_offset 7, -8
 5429              		.cfi_offset 14, -4
 883:../user/source/DLT645.c ****     /*µçÑ¹ĞŞ¸ÄÉÏÏÂÏŞ³õÊ¼»¯*/
 5430              		.loc 1 883 0
 5431 0002 1948     		ldr	r0, .L362
 5432 0004 FFF7FEFF 		bl	EEProm_Read
 5433              	.LVL654:
 5434 0008 184B     		ldr	r3, .L362+4
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 158


 5435 000a 1870     		strb	r0, [r3]
 885:../user/source/DLT645.c ****     Vmax2 = EEProm_Read(FLASH_VMAX2_Addr);
 5436              		.loc 1 885 0
 5437 000c 1848     		ldr	r0, .L362+8
 5438 000e FFF7FEFF 		bl	EEProm_Read
 5439              	.LVL655:
 5440 0012 0446     		mov	r4, r0
 5441              	.LVL656:
 886:../user/source/DLT645.c ****     Vmin1 = EEProm_Read(FLASH_VMIN1_Addr);
 5442              		.loc 1 886 0
 5443 0014 1748     		ldr	r0, .L362+12
 5444 0016 FFF7FEFF 		bl	EEProm_Read
 5445              	.LVL657:
 5446 001a 0546     		mov	r5, r0
 5447              	.LVL658:
 887:../user/source/DLT645.c ****     Vmin2 = EEProm_Read(FLASH_VMIN2_Addr);
 5448              		.loc 1 887 0
 5449 001c 1648     		ldr	r0, .L362+16
 5450 001e FFF7FEFF 		bl	EEProm_Read
 5451              	.LVL659:
 5452 0022 0646     		mov	r6, r0
 5453              	.LVL660:
 888:../user/source/DLT645.c **** 
 5454              		.loc 1 888 0
 5455 0024 1548     		ldr	r0, .L362+20
 5456 0026 FFF7FEFF 		bl	EEProm_Read
 5457              	.LVL661:
 5458 002a 0746     		mov	r7, r0
 5459              	.LVL662:
 890:../user/source/DLT645.c ****     {
 5460              		.loc 1 890 0
 5461 002c FF2C     		cmp	r4, #255
 5462 002e 0ED1     		bne	.L359
 890:../user/source/DLT645.c ****     {
 5463              		.loc 1 890 0 is_stmt 0 discriminator 1
 5464 0030 FF2D     		cmp	r5, #255
 5465 0032 0CD1     		bne	.L359
 890:../user/source/DLT645.c ****     {
 5466              		.loc 1 890 0 discriminator 2
 5467 0034 FF2E     		cmp	r6, #255
 5468 0036 0AD1     		bne	.L359
 890:../user/source/DLT645.c ****     {
 5469              		.loc 1 890 0 discriminator 3
 5470 0038 FF28     		cmp	r0, #255
 5471 003a 08D1     		bne	.L359
 892:../user/source/DLT645.c ****         Voltage_MIN = Voltage_MIN_Default;
 5472              		.loc 1 892 0 is_stmt 1
 5473 003c 40F62E12 		movw	r2, #2350
 5474 0040 0F4B     		ldr	r3, .L362+24
 5475 0042 1A60     		str	r2, [r3]
 893:../user/source/DLT645.c ****     }
 5476              		.loc 1 893 0
 5477 0044 40F2BC72 		movw	r2, #1980
 5478 0048 0E4B     		ldr	r3, .L362+28
 5479 004a 1A60     		str	r2, [r3]
 5480 004c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5481              	.LVL663:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 159


 5482              	.L359:
 897:../user/source/DLT645.c ****         Voltage_MIN = Get_Voltage(Vmin1, Vmin2);
 5483              		.loc 1 897 0
 5484 004e 2946     		mov	r1, r5
 5485 0050 2046     		mov	r0, r4
 5486              	.LVL664:
 5487 0052 FFF7FEFF 		bl	Get_Voltage
 5488              	.LVL665:
 5489 0056 0A4B     		ldr	r3, .L362+24
 5490 0058 1860     		str	r0, [r3]
 898:../user/source/DLT645.c ****     }
 5491              		.loc 1 898 0
 5492 005a 3946     		mov	r1, r7
 5493 005c 3046     		mov	r0, r6
 5494 005e FFF7FEFF 		bl	Get_Voltage
 5495              	.LVL666:
 5496 0062 084B     		ldr	r3, .L362+28
 5497 0064 1860     		str	r0, [r3]
 5498 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5499              	.LVL667:
 5500              	.L363:
 5501              		.align	2
 5502              	.L362:
 5503 0068 141F0308 		.word	134422292
 5504 006c 00000000 		.word	.LANCHOR5
 5505 0070 001F0308 		.word	134422272
 5506 0074 041F0308 		.word	134422276
 5507 0078 081F0308 		.word	134422280
 5508 007c 0C1F0308 		.word	134422284
 5509 0080 00000000 		.word	Voltage_MAX
 5510 0084 00000000 		.word	Voltage_MIN
 5511              		.cfi_endproc
 5512              	.LFE126:
 5514              		.section	.text.Voltage_Modifier_Method,"ax",%progbits
 5515              		.align	2
 5516              		.global	Voltage_Modifier_Method
 5517              		.thumb
 5518              		.thumb_func
 5520              	Voltage_Modifier_Method:
 5521              	.LFB127:
 911:../user/source/DLT645.c ****     int n = 0;
 5522              		.loc 1 911 0
 5523              		.cfi_startproc
 5524              		@ args = 0, pretend = 0, frame = 0
 5525              		@ frame_needed = 0, uses_anonymous_args = 0
 5526              	.LVL668:
 5527 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5528              	.LCFI47:
 5529              		.cfi_def_cfa_offset 20
 5530              		.cfi_offset 4, -20
 5531              		.cfi_offset 5, -16
 5532              		.cfi_offset 6, -12
 5533              		.cfi_offset 7, -8
 5534              		.cfi_offset 14, -4
 5535              	.LVL669:
 915:../user/source/DLT645.c ****     m = (Voltage_MAX_MAX - Voltage_MAX) / (Voltage_MAX - Voltage_MIN) + 1; //(260-235)/(235-198)+1»
 5536              		.loc 1 915 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 160


 5537 0002 1F4B     		ldr	r3, .L376
 5538 0004 1E68     		ldr	r6, [r3]
 5539 0006 A6F59661 		sub	r1, r6, #1200
 5540 000a 1E4B     		ldr	r3, .L376+4
 5541 000c 1D68     		ldr	r5, [r3]
 5542 000e AA1B     		subs	r2, r5, r6
 5543 0010 91FBF2F1 		sdiv	r1, r1, r2
 5544 0014 0131     		adds	r1, r1, #1
 5545              	.LVL670:
 916:../user/source/DLT645.c ****     if ((Voltage > Voltage_MAX) && (Voltage <= Voltage_MAX_MAX))
 5546              		.loc 1 916 0
 5547 0016 C5F52F64 		rsb	r4, r5, #2800
 5548 001a 94FBF2F4 		sdiv	r4, r4, r2
 5549              	.LVL671:
 917:../user/source/DLT645.c ****     {
 5550              		.loc 1 917 0
 5551 001e 8542     		cmp	r5, r0
 5552 0020 16DA     		bge	.L365
 5553 0022 0134     		adds	r4, r4, #1
 5554              	.LVL672:
 917:../user/source/DLT645.c ****     {
 5555              		.loc 1 917 0 is_stmt 0 discriminator 1
 5556 0024 B0F52F6F 		cmp	r0, #2800
 5557 0028 12DC     		bgt	.L365
 919:../user/source/DLT645.c ****         {
 5558              		.loc 1 919 0 is_stmt 1
 5559 002a AB18     		adds	r3, r5, r2
 5560 002c 9842     		cmp	r0, r3
 5561 002e 0CDC     		bgt	.L371
 921:../user/source/DLT645.c ****             return Voltage;
 5562              		.loc 1 921 0
 5563 0030 451B     		subs	r5, r0, r5
 5564 0032 A0EB4500 		sub	r0, r0, r5, lsl #1
 5565              	.LVL673:
 922:../user/source/DLT645.c ****         }
 5566              		.loc 1 922 0
 5567 0036 F0BD     		pop	{r4, r5, r6, r7, pc}
 5568              	.LVL674:
 5569              	.L368:
 928:../user/source/DLT645.c ****                 {
 5570              		.loc 1 928 0
 5571 0038 0133     		adds	r3, r3, #1
 5572              	.LVL675:
 5573 003a 03FB02F7 		mul	r7, r3, r2
 5574 003e 05EB070E 		add	lr, r5, r7
 5575 0042 7045     		cmp	r0, lr
 5576 0044 02DC     		bgt	.L366
 930:../user/source/DLT645.c ****                     return Voltage;
 5577              		.loc 1 930 0
 5578 0046 C01B     		subs	r0, r0, r7
 5579              	.LVL676:
 931:../user/source/DLT645.c ****                 }
 5580              		.loc 1 931 0
 5581 0048 F0BD     		pop	{r4, r5, r6, r7, pc}
 5582              	.LVL677:
 5583              	.L371:
 5584 004a 0123     		movs	r3, #1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 161


 5585              	.LVL678:
 5586              	.L366:
 926:../user/source/DLT645.c ****             {
 5587              		.loc 1 926 0 discriminator 1
 5588 004c A342     		cmp	r3, r4
 5589 004e F3DB     		blt	.L368
 5590              	.LVL679:
 5591              	.L365:
 936:../user/source/DLT645.c ****     {
 5592              		.loc 1 936 0
 5593 0050 8642     		cmp	r6, r0
 5594 0052 14DD     		ble	.L367
 936:../user/source/DLT645.c ****     {
 5595              		.loc 1 936 0 is_stmt 0 discriminator 1
 5596 0054 B0F5966F 		cmp	r0, #1200
 5597 0058 11DB     		blt	.L367
 938:../user/source/DLT645.c ****         {
 5598              		.loc 1 938 0 is_stmt 1
 5599 005a B31A     		subs	r3, r6, r2
 5600 005c 9842     		cmp	r0, r3
 5601 005e 0BDB     		blt	.L374
 940:../user/source/DLT645.c ****             return Voltage;
 5602              		.loc 1 940 0
 5603 0060 361A     		subs	r6, r6, r0
 5604 0062 00EB4600 		add	r0, r0, r6, lsl #1
 5605              	.LVL680:
 941:../user/source/DLT645.c ****         }
 5606              		.loc 1 941 0
 5607 0066 F0BD     		pop	{r4, r5, r6, r7, pc}
 5608              	.LVL681:
 5609              	.L370:
 947:../user/source/DLT645.c ****                 {
 5610              		.loc 1 947 0
 5611 0068 0133     		adds	r3, r3, #1
 5612              	.LVL682:
 5613 006a 03FB02F4 		mul	r4, r3, r2
 5614 006e 351B     		subs	r5, r6, r4
 5615 0070 A842     		cmp	r0, r5
 5616 0072 02DB     		blt	.L369
 949:../user/source/DLT645.c ****                     return Voltage;
 5617              		.loc 1 949 0
 5618 0074 2044     		add	r0, r0, r4
 5619              	.LVL683:
 950:../user/source/DLT645.c ****                 }
 5620              		.loc 1 950 0
 5621 0076 F0BD     		pop	{r4, r5, r6, r7, pc}
 5622              	.LVL684:
 5623              	.L374:
 5624 0078 0123     		movs	r3, #1
 5625              	.LVL685:
 5626              	.L369:
 945:../user/source/DLT645.c ****             {
 5627              		.loc 1 945 0 discriminator 1
 5628 007a 8B42     		cmp	r3, r1
 5629 007c F4DB     		blt	.L370
 5630              	.LVL686:
 5631              	.L367:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 162


 956:../user/source/DLT645.c **** /*****************************************************
 5632              		.loc 1 956 0
 5633 007e F0BD     		pop	{r4, r5, r6, r7, pc}
 5634              	.L377:
 5635              		.align	2
 5636              	.L376:
 5637 0080 00000000 		.word	Voltage_MIN
 5638 0084 00000000 		.word	Voltage_MAX
 5639              		.cfi_endproc
 5640              	.LFE127:
 5642              		.section	.text.Voltage_Modifier,"ax",%progbits
 5643              		.align	2
 5644              		.global	Voltage_Modifier
 5645              		.thumb
 5646              		.thumb_func
 5648              	Voltage_Modifier:
 5649              	.LFB120:
 599:../user/source/DLT645.c **** 
 5650              		.loc 1 599 0
 5651              		.cfi_startproc
 5652              		@ args = 0, pretend = 0, frame = 0
 5653              		@ frame_needed = 0, uses_anonymous_args = 0
 5654              	.LVL687:
 5655 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5656              	.LCFI48:
 5657              		.cfi_def_cfa_offset 24
 5658              		.cfi_offset 3, -24
 5659              		.cfi_offset 4, -20
 5660              		.cfi_offset 5, -16
 5661              		.cfi_offset 6, -12
 5662              		.cfi_offset 7, -8
 5663              		.cfi_offset 14, -4
 5664              	.LVL688:
 604:../user/source/DLT645.c ****         return;
 5665              		.loc 1 604 0
 5666 0002 7A4B     		ldr	r3, .L395
 5667 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5668 0006 002B     		cmp	r3, #0
 5669 0008 00F0EF80 		beq	.L378
 606:../user/source/DLT645.c ****     {
 5670              		.loc 1 606 0
 5671 000c 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 5672 000e 912B     		cmp	r3, #145
 5673 0010 40F0EB80 		bne	.L378
 606:../user/source/DLT645.c ****     {
 5674              		.loc 1 606 0 is_stmt 0 discriminator 1
 5675 0014 837A     		ldrb	r3, [r0, #10]	@ zero_extendqisi2
 5676 0016 332B     		cmp	r3, #51
 5677 0018 40F0E780 		bne	.L378
 606:../user/source/DLT645.c ****     {
 5678              		.loc 1 606 0 discriminator 2
 5679 001c 037B     		ldrb	r3, [r0, #12]	@ zero_extendqisi2
 5680 001e 342B     		cmp	r3, #52
 5681 0020 40F0E380 		bne	.L378
 606:../user/source/DLT645.c ****     {
 5682              		.loc 1 606 0 discriminator 3
 5683 0024 437B     		ldrb	r3, [r0, #13]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 163


 5684 0026 352B     		cmp	r3, #53
 5685 0028 40F0DF80 		bne	.L378
 5686 002c 0446     		mov	r4, r0
 608:../user/source/DLT645.c ****         {
 5687              		.loc 1 608 0 is_stmt 1
 5688 002e C57A     		ldrb	r5, [r0, #11]	@ zero_extendqisi2
 5689 0030 322D     		cmp	r5, #50
 5690 0032 62D1     		bne	.L380
 610:../user/source/DLT645.c ****             {
 5691              		.loc 1 610 0
 5692 0034 867B     		ldrb	r6, [r0, #14]	@ zero_extendqisi2
 5693 0036 C77B     		ldrb	r7, [r0, #15]	@ zero_extendqisi2
 5694 0038 3946     		mov	r1, r7
 5695 003a 3046     		mov	r0, r6
 5696              	.LVL689:
 5697 003c FFF7FEFF 		bl	BCD_Verity
 5698              	.LVL690:
 5699 0040 C8B1     		cbz	r0, .L381
 612:../user/source/DLT645.c ****                 if ((A_Voltage > Voltage_MAX) || (A_Voltage < Voltage_MIN)) //ĞŞ¸ÄAÏàµçÑ¹
 5700              		.loc 1 612 0
 5701 0042 3946     		mov	r1, r7
 5702 0044 3046     		mov	r0, r6
 5703 0046 FFF7FEFF 		bl	Get_Voltage
 5704              	.LVL691:
 5705 004a 694B     		ldr	r3, .L395+4
 5706 004c 1860     		str	r0, [r3]
 613:../user/source/DLT645.c ****                 {
 5707              		.loc 1 613 0
 5708 004e 694B     		ldr	r3, .L395+8
 5709 0050 1B68     		ldr	r3, [r3]
 5710 0052 9842     		cmp	r0, r3
 5711 0054 03DC     		bgt	.L382
 613:../user/source/DLT645.c ****                 {
 5712              		.loc 1 613 0 is_stmt 0 discriminator 1
 5713 0056 684B     		ldr	r3, .L395+12
 5714 0058 1B68     		ldr	r3, [r3]
 5715 005a 9842     		cmp	r0, r3
 5716 005c 0BDA     		bge	.L381
 5717              	.L382:
 615:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(A_Voltage);
 5718              		.loc 1 615 0 is_stmt 1
 5719 005e FFF7FEFF 		bl	Voltage_Modifier_Method
 5720              	.LVL692:
 5721 0062 0646     		mov	r6, r0
 5722 0064 624B     		ldr	r3, .L395+4
 5723 0066 1860     		str	r0, [r3]
 616:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(A_Voltage);
 5724              		.loc 1 616 0
 5725 0068 FFF7FEFF 		bl	GetLowByte
 5726              	.LVL693:
 5727 006c A073     		strb	r0, [r4, #14]
 617:../user/source/DLT645.c ****                 }
 5728              		.loc 1 617 0
 5729 006e 3046     		mov	r0, r6
 5730 0070 FFF7FEFF 		bl	GetHighByte
 5731              	.LVL694:
 5732 0074 E073     		strb	r0, [r4, #15]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 164


 5733              	.L381:
 620:../user/source/DLT645.c ****             {
 5734              		.loc 1 620 0
 5735 0076 267C     		ldrb	r6, [r4, #16]	@ zero_extendqisi2
 5736 0078 677C     		ldrb	r7, [r4, #17]	@ zero_extendqisi2
 5737 007a 3946     		mov	r1, r7
 5738 007c 3046     		mov	r0, r6
 5739 007e FFF7FEFF 		bl	BCD_Verity
 5740              	.LVL695:
 5741 0082 C8B1     		cbz	r0, .L383
 622:../user/source/DLT645.c ****                 if ((B_Voltage > Voltage_MAX) || (B_Voltage < Voltage_MIN)) //ĞŞ¸ÄBÏàµçÑ¹
 5742              		.loc 1 622 0
 5743 0084 3946     		mov	r1, r7
 5744 0086 3046     		mov	r0, r6
 5745 0088 FFF7FEFF 		bl	Get_Voltage
 5746              	.LVL696:
 5747 008c 5B4B     		ldr	r3, .L395+16
 5748 008e 1860     		str	r0, [r3]
 623:../user/source/DLT645.c ****                 {
 5749              		.loc 1 623 0
 5750 0090 584B     		ldr	r3, .L395+8
 5751 0092 1B68     		ldr	r3, [r3]
 5752 0094 9842     		cmp	r0, r3
 5753 0096 03DC     		bgt	.L384
 623:../user/source/DLT645.c ****                 {
 5754              		.loc 1 623 0 is_stmt 0 discriminator 1
 5755 0098 574B     		ldr	r3, .L395+12
 5756 009a 1B68     		ldr	r3, [r3]
 5757 009c 9842     		cmp	r0, r3
 5758 009e 0BDA     		bge	.L383
 5759              	.L384:
 625:../user/source/DLT645.c ****                     pucBuffer[16] = GetLowByte(B_Voltage);
 5760              		.loc 1 625 0 is_stmt 1
 5761 00a0 FFF7FEFF 		bl	Voltage_Modifier_Method
 5762              	.LVL697:
 5763 00a4 0646     		mov	r6, r0
 5764 00a6 554B     		ldr	r3, .L395+16
 5765 00a8 1860     		str	r0, [r3]
 626:../user/source/DLT645.c ****                     pucBuffer[17] = GetHighByte(B_Voltage);
 5766              		.loc 1 626 0
 5767 00aa FFF7FEFF 		bl	GetLowByte
 5768              	.LVL698:
 5769 00ae 2074     		strb	r0, [r4, #16]
 627:../user/source/DLT645.c ****                 }
 5770              		.loc 1 627 0
 5771 00b0 3046     		mov	r0, r6
 5772 00b2 FFF7FEFF 		bl	GetHighByte
 5773              	.LVL699:
 5774 00b6 6074     		strb	r0, [r4, #17]
 5775              	.L383:
 630:../user/source/DLT645.c ****             {
 5776              		.loc 1 630 0
 5777 00b8 A67C     		ldrb	r6, [r4, #18]	@ zero_extendqisi2
 5778 00ba E77C     		ldrb	r7, [r4, #19]	@ zero_extendqisi2
 5779 00bc 3946     		mov	r1, r7
 5780 00be 3046     		mov	r0, r6
 5781 00c0 FFF7FEFF 		bl	BCD_Verity
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 165


 5782              	.LVL700:
 5783 00c4 C8B1     		cbz	r0, .L380
 632:../user/source/DLT645.c ****                 if ((C_Voltage > Voltage_MAX) || (C_Voltage < Voltage_MIN)) //ĞŞ¸ÄCÏàµçÑ¹
 5784              		.loc 1 632 0
 5785 00c6 3946     		mov	r1, r7
 5786 00c8 3046     		mov	r0, r6
 5787 00ca FFF7FEFF 		bl	Get_Voltage
 5788              	.LVL701:
 5789 00ce 4C4B     		ldr	r3, .L395+20
 5790 00d0 1860     		str	r0, [r3]
 633:../user/source/DLT645.c ****                 {
 5791              		.loc 1 633 0
 5792 00d2 484B     		ldr	r3, .L395+8
 5793 00d4 1B68     		ldr	r3, [r3]
 5794 00d6 9842     		cmp	r0, r3
 5795 00d8 03DC     		bgt	.L385
 633:../user/source/DLT645.c ****                 {
 5796              		.loc 1 633 0 is_stmt 0 discriminator 1
 5797 00da 474B     		ldr	r3, .L395+12
 5798 00dc 1B68     		ldr	r3, [r3]
 5799 00de 9842     		cmp	r0, r3
 5800 00e0 0BDA     		bge	.L380
 5801              	.L385:
 635:../user/source/DLT645.c ****                     pucBuffer[18] = GetLowByte(C_Voltage);
 5802              		.loc 1 635 0 is_stmt 1
 5803 00e2 FFF7FEFF 		bl	Voltage_Modifier_Method
 5804              	.LVL702:
 5805 00e6 0646     		mov	r6, r0
 5806 00e8 454B     		ldr	r3, .L395+20
 5807 00ea 1860     		str	r0, [r3]
 636:../user/source/DLT645.c ****                     pucBuffer[19] = GetHighByte(C_Voltage);
 5808              		.loc 1 636 0
 5809 00ec FFF7FEFF 		bl	GetLowByte
 5810              	.LVL703:
 5811 00f0 A074     		strb	r0, [r4, #18]
 637:../user/source/DLT645.c ****                 }
 5812              		.loc 1 637 0
 5813 00f2 3046     		mov	r0, r6
 5814 00f4 FFF7FEFF 		bl	GetHighByte
 5815              	.LVL704:
 5816 00f8 E074     		strb	r0, [r4, #19]
 5817              	.L380:
 641:../user/source/DLT645.c ****         {
 5818              		.loc 1 641 0
 5819 00fa 342D     		cmp	r5, #52
 5820 00fc 20D1     		bne	.L386
 643:../user/source/DLT645.c ****             {
 5821              		.loc 1 643 0
 5822 00fe A67B     		ldrb	r6, [r4, #14]	@ zero_extendqisi2
 5823 0100 E77B     		ldrb	r7, [r4, #15]	@ zero_extendqisi2
 5824 0102 3946     		mov	r1, r7
 5825 0104 3046     		mov	r0, r6
 5826 0106 FFF7FEFF 		bl	BCD_Verity
 5827              	.LVL705:
 5828 010a C8B1     		cbz	r0, .L386
 645:../user/source/DLT645.c ****                 if ((A_Voltage > Voltage_MAX) || (A_Voltage < Voltage_MIN)) //ĞŞ¸ÄAÏàµçÑ¹
 5829              		.loc 1 645 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 166


 5830 010c 3946     		mov	r1, r7
 5831 010e 3046     		mov	r0, r6
 5832 0110 FFF7FEFF 		bl	Get_Voltage
 5833              	.LVL706:
 5834 0114 364B     		ldr	r3, .L395+4
 5835 0116 1860     		str	r0, [r3]
 646:../user/source/DLT645.c ****                 {
 5836              		.loc 1 646 0
 5837 0118 364B     		ldr	r3, .L395+8
 5838 011a 1B68     		ldr	r3, [r3]
 5839 011c 9842     		cmp	r0, r3
 5840 011e 03DC     		bgt	.L387
 646:../user/source/DLT645.c ****                 {
 5841              		.loc 1 646 0 is_stmt 0 discriminator 1
 5842 0120 354B     		ldr	r3, .L395+12
 5843 0122 1B68     		ldr	r3, [r3]
 5844 0124 9842     		cmp	r0, r3
 5845 0126 0BDA     		bge	.L386
 5846              	.L387:
 648:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(A_Voltage);
 5847              		.loc 1 648 0 is_stmt 1
 5848 0128 FFF7FEFF 		bl	Voltage_Modifier_Method
 5849              	.LVL707:
 5850 012c 0646     		mov	r6, r0
 5851 012e 304B     		ldr	r3, .L395+4
 5852 0130 1860     		str	r0, [r3]
 649:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(A_Voltage);
 5853              		.loc 1 649 0
 5854 0132 FFF7FEFF 		bl	GetLowByte
 5855              	.LVL708:
 5856 0136 A073     		strb	r0, [r4, #14]
 650:../user/source/DLT645.c ****                 }
 5857              		.loc 1 650 0
 5858 0138 3046     		mov	r0, r6
 5859 013a FFF7FEFF 		bl	GetHighByte
 5860              	.LVL709:
 5861 013e E073     		strb	r0, [r4, #15]
 5862              	.L386:
 654:../user/source/DLT645.c ****         {
 5863              		.loc 1 654 0
 5864 0140 352D     		cmp	r5, #53
 5865 0142 20D1     		bne	.L388
 656:../user/source/DLT645.c ****             {
 5866              		.loc 1 656 0
 5867 0144 A67B     		ldrb	r6, [r4, #14]	@ zero_extendqisi2
 5868 0146 E77B     		ldrb	r7, [r4, #15]	@ zero_extendqisi2
 5869 0148 3946     		mov	r1, r7
 5870 014a 3046     		mov	r0, r6
 5871 014c FFF7FEFF 		bl	BCD_Verity
 5872              	.LVL710:
 5873 0150 C8B1     		cbz	r0, .L388
 658:../user/source/DLT645.c ****                 if ((B_Voltage > Voltage_MAX) || (B_Voltage < Voltage_MIN)) //ĞŞ¸ÄBÏàµçÑ¹
 5874              		.loc 1 658 0
 5875 0152 3946     		mov	r1, r7
 5876 0154 3046     		mov	r0, r6
 5877 0156 FFF7FEFF 		bl	Get_Voltage
 5878              	.LVL711:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 167


 5879 015a 284B     		ldr	r3, .L395+16
 5880 015c 1860     		str	r0, [r3]
 659:../user/source/DLT645.c ****                 {
 5881              		.loc 1 659 0
 5882 015e 254B     		ldr	r3, .L395+8
 5883 0160 1B68     		ldr	r3, [r3]
 5884 0162 9842     		cmp	r0, r3
 5885 0164 03DC     		bgt	.L389
 659:../user/source/DLT645.c ****                 {
 5886              		.loc 1 659 0 is_stmt 0 discriminator 1
 5887 0166 244B     		ldr	r3, .L395+12
 5888 0168 1B68     		ldr	r3, [r3]
 5889 016a 9842     		cmp	r0, r3
 5890 016c 0BDA     		bge	.L388
 5891              	.L389:
 661:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(B_Voltage);
 5892              		.loc 1 661 0 is_stmt 1
 5893 016e FFF7FEFF 		bl	Voltage_Modifier_Method
 5894              	.LVL712:
 5895 0172 0646     		mov	r6, r0
 5896 0174 214B     		ldr	r3, .L395+16
 5897 0176 1860     		str	r0, [r3]
 662:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(B_Voltage);
 5898              		.loc 1 662 0
 5899 0178 FFF7FEFF 		bl	GetLowByte
 5900              	.LVL713:
 5901 017c A073     		strb	r0, [r4, #14]
 663:../user/source/DLT645.c ****                 }
 5902              		.loc 1 663 0
 5903 017e 3046     		mov	r0, r6
 5904 0180 FFF7FEFF 		bl	GetHighByte
 5905              	.LVL714:
 5906 0184 E073     		strb	r0, [r4, #15]
 5907              	.L388:
 667:../user/source/DLT645.c ****         {
 5908              		.loc 1 667 0
 5909 0186 362D     		cmp	r5, #54
 5910 0188 20D1     		bne	.L390
 669:../user/source/DLT645.c ****             {
 5911              		.loc 1 669 0
 5912 018a A57B     		ldrb	r5, [r4, #14]	@ zero_extendqisi2
 5913 018c E67B     		ldrb	r6, [r4, #15]	@ zero_extendqisi2
 5914 018e 3146     		mov	r1, r6
 5915 0190 2846     		mov	r0, r5
 5916 0192 FFF7FEFF 		bl	BCD_Verity
 5917              	.LVL715:
 5918 0196 C8B1     		cbz	r0, .L390
 671:../user/source/DLT645.c ****                 if ((C_Voltage > Voltage_MAX) || (C_Voltage < Voltage_MIN)) //ĞŞ¸ÄCÏàµçÑ¹
 5919              		.loc 1 671 0
 5920 0198 3146     		mov	r1, r6
 5921 019a 2846     		mov	r0, r5
 5922 019c FFF7FEFF 		bl	Get_Voltage
 5923              	.LVL716:
 5924 01a0 174B     		ldr	r3, .L395+20
 5925 01a2 1860     		str	r0, [r3]
 672:../user/source/DLT645.c ****                 {
 5926              		.loc 1 672 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 168


 5927 01a4 134B     		ldr	r3, .L395+8
 5928 01a6 1B68     		ldr	r3, [r3]
 5929 01a8 9842     		cmp	r0, r3
 5930 01aa 03DC     		bgt	.L391
 672:../user/source/DLT645.c ****                 {
 5931              		.loc 1 672 0 is_stmt 0 discriminator 1
 5932 01ac 124B     		ldr	r3, .L395+12
 5933 01ae 1B68     		ldr	r3, [r3]
 5934 01b0 9842     		cmp	r0, r3
 5935 01b2 0BDA     		bge	.L390
 5936              	.L391:
 674:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(C_Voltage);
 5937              		.loc 1 674 0 is_stmt 1
 5938 01b4 FFF7FEFF 		bl	Voltage_Modifier_Method
 5939              	.LVL717:
 5940 01b8 0546     		mov	r5, r0
 5941 01ba 114B     		ldr	r3, .L395+20
 5942 01bc 1860     		str	r0, [r3]
 675:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(C_Voltage);
 5943              		.loc 1 675 0
 5944 01be FFF7FEFF 		bl	GetLowByte
 5945              	.LVL718:
 5946 01c2 A073     		strb	r0, [r4, #14]
 676:../user/source/DLT645.c ****                 }
 5947              		.loc 1 676 0
 5948 01c4 2846     		mov	r0, r5
 5949 01c6 FFF7FEFF 		bl	GetHighByte
 5950              	.LVL719:
 5951 01ca E073     		strb	r0, [r4, #15]
 5952              	.L390:
 681:../user/source/DLT645.c ****         {
 5953              		.loc 1 681 0
 5954 01cc 0023     		movs	r3, #0
 601:../user/source/DLT645.c ****     uint8_t i = 0;
 5955              		.loc 1 601 0
 5956 01ce 1A46     		mov	r2, r3
 681:../user/source/DLT645.c ****         {
 5957              		.loc 1 681 0
 5958 01d0 04E0     		b	.L392
 5959              	.LVL720:
 5960              	.L393:
 683:../user/source/DLT645.c ****         }
 5961              		.loc 1 683 0 discriminator 3
 5962 01d2 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 5963 01d4 0A44     		add	r2, r2, r1
 5964              	.LVL721:
 5965 01d6 D2B2     		uxtb	r2, r2
 5966              	.LVL722:
 681:../user/source/DLT645.c ****         {
 5967              		.loc 1 681 0 discriminator 3
 5968 01d8 0133     		adds	r3, r3, #1
 5969              	.LVL723:
 5970 01da DBB2     		uxtb	r3, r3
 5971              	.LVL724:
 5972              	.L392:
 681:../user/source/DLT645.c ****         {
 5973              		.loc 1 681 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 169


 5974 01dc 0949     		ldr	r1, .L395+24
 5975 01de 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 5976 01e0 01F10A00 		add	r0, r1, #10
 5977 01e4 8342     		cmp	r3, r0
 5978 01e6 F4DB     		blt	.L393
 685:../user/source/DLT645.c ****     }
 5979              		.loc 1 685 0 is_stmt 1
 5980 01e8 2254     		strb	r2, [r4, r0]
 5981              	.LVL725:
 5982              	.L378:
 5983 01ea F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5984              	.L396:
 5985              		.align	2
 5986              	.L395:
 5987 01ec 00000000 		.word	.LANCHOR5
 5988 01f0 00000000 		.word	.LANCHOR4
 5989 01f4 00000000 		.word	Voltage_MAX
 5990 01f8 00000000 		.word	Voltage_MIN
 5991 01fc 00000000 		.word	.LANCHOR8
 5992 0200 00000000 		.word	.LANCHOR9
 5993 0204 00000000 		.word	.LANCHOR0
 5994              		.cfi_endproc
 5995              	.LFE120:
 5997              		.section	.text.vVoltageHandle,"ax",%progbits
 5998              		.align	2
 5999              		.global	vVoltageHandle
 6000              		.thumb
 6001              		.thumb_func
 6003              	vVoltageHandle:
 6004              	.LFB119:
 581:../user/source/DLT645.c ****     /*µÈ´ıµçÑ¹»ØÖ¡×´Ì¬ÇåÎ»*/
 6005              		.loc 1 581 0
 6006              		.cfi_startproc
 6007              		@ args = 0, pretend = 0, frame = 0
 6008              		@ frame_needed = 0, uses_anonymous_args = 0
 6009              	.LVL726:
 6010 0000 08B5     		push	{r3, lr}
 6011              	.LCFI49:
 6012              		.cfi_def_cfa_offset 8
 6013              		.cfi_offset 3, -8
 6014              		.cfi_offset 14, -4
 583:../user/source/DLT645.c ****     /*¼ÆÊ±Æ÷¸´Î»*/
 6015              		.loc 1 583 0
 6016 0002 0122     		movs	r2, #1
 6017 0004 044B     		ldr	r3, .L399
 6018 0006 1A70     		strb	r2, [r3]
 585:../user/source/DLT645.c ****     uwTime2FramesCounter = 0;
 6019              		.loc 1 585 0
 6020 0008 0023     		movs	r3, #0
 6021 000a 044A     		ldr	r2, .L399+4
 6022 000c 1370     		strb	r3, [r2]
 586:../user/source/DLT645.c ****     /*µçÑ¹Ö¡ÅĞ¶Ï´¦Àí*/
 6023              		.loc 1 586 0
 6024 000e 044A     		ldr	r2, .L399+8
 6025 0010 1380     		strh	r3, [r2]	@ movhi
 588:../user/source/DLT645.c **** }
 6026              		.loc 1 588 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 170


 6027 0012 FFF7FEFF 		bl	Voltage_Modifier
 6028              	.LVL727:
 6029 0016 08BD     		pop	{r3, pc}
 6030              	.L400:
 6031              		.align	2
 6032              	.L399:
 6033 0018 00000000 		.word	Voltage_Frame_Status
 6034 001c 00000000 		.word	blFramesCounterStatus
 6035 0020 00000000 		.word	uwTime2FramesCounter
 6036              		.cfi_endproc
 6037              	.LFE119:
 6039              		.section	.text.vCurrent_Limit_DefaultSet,"ax",%progbits
 6040              		.align	2
 6041              		.global	vCurrent_Limit_DefaultSet
 6042              		.thumb
 6043              		.thumb_func
 6045              	vCurrent_Limit_DefaultSet:
 6046              	.LFB132:
1264:../user/source/DLT645.c ****     uint32_t uwLimit;
 6047              		.loc 1 1264 0
 6048              		.cfi_startproc
 6049              		@ args = 0, pretend = 0, frame = 0
 6050              		@ frame_needed = 0, uses_anonymous_args = 0
 6051 0000 08B5     		push	{r3, lr}
 6052              	.LCFI50:
 6053              		.cfi_def_cfa_offset 8
 6054              		.cfi_offset 3, -8
 6055              		.cfi_offset 14, -4
1279:../user/source/DLT645.c ****     TransFormer.rated_current = 288000;
 6056              		.loc 1 1279 0
 6057 0002 174B     		ldr	r3, .L407
 6058 0004 C822     		movs	r2, #200
 6059 0006 1A60     		str	r2, [r3]
1280:../user/source/DLT645.c **** #endif
 6060              		.loc 1 1280 0
 6061 0008 164A     		ldr	r2, .L407+4
 6062 000a 5A60     		str	r2, [r3, #4]
1288:../user/source/DLT645.c ****     /*±ä±ÈÎŞĞ§ £¬ÔòÎª³õ´ÎÉÏµç*/
 6063              		.loc 1 1288 0
 6064 000c 1648     		ldr	r0, .L407+8
 6065 000e FFF7FEFF 		bl	Flash_Read_Word
 6066              	.LVL728:
1290:../user/source/DLT645.c ****     {
 6067              		.loc 1 1290 0
 6068 0012 B0F1FF3F 		cmp	r0, #-1
 6069 0016 06D1     		bne	.L402
1293:../user/source/DLT645.c ****         /*´æ´¢CTÖµ*/
 6070              		.loc 1 1293 0
 6071 0018 5021     		movs	r1, #80
 6072 001a 114B     		ldr	r3, .L407
 6073 001c 9960     		str	r1, [r3, #8]
1295:../user/source/DLT645.c ****     }
 6074              		.loc 1 1295 0
 6075 001e 1248     		ldr	r0, .L407+8
 6076              	.LVL729:
 6077 0020 FFF7FEFF 		bl	Flash_Write_Word
 6078              	.LVL730:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 171


 6079 0024 01E0     		b	.L403
 6080              	.LVL731:
 6081              	.L402:
1300:../user/source/DLT645.c ****     }
 6082              		.loc 1 1300 0
 6083 0026 0E4B     		ldr	r3, .L407
 6084 0028 9860     		str	r0, [r3, #8]
 6085              	.LVL732:
 6086              	.L403:
1303:../user/source/DLT645.c ****     /*²ÎÊıÎŞĞ§£¬³õ´ÎÉÏµç*/
 6087              		.loc 1 1303 0
 6088 002a 1048     		ldr	r0, .L407+12
 6089 002c FFF7FEFF 		bl	Flash_Read_Word
 6090              	.LVL733:
1305:../user/source/DLT645.c ****     {
 6091              		.loc 1 1305 0
 6092 0030 B0F1FF3F 		cmp	r0, #-1
 6093 0034 10D1     		bne	.L404
1308:../user/source/DLT645.c ****         /*´æ´¢µçÁ÷ÉÏÏŞÖµ*/
 6094              		.loc 1 1308 0
 6095 0036 0A48     		ldr	r0, .L407
 6096              	.LVL734:
 6097 0038 4368     		ldr	r3, [r0, #4]
 6098 003a 8268     		ldr	r2, [r0, #8]
 6099 003c B3FBF2F2 		udiv	r2, r3, r2
 6100 0040 02EB4202 		add	r2, r2, r2, lsl #1
 6101 0044 D300     		lsls	r3, r2, #3
 6102 0046 0A49     		ldr	r1, .L407+16
 6103 0048 A1FB0331 		umull	r3, r1, r1, r3
 6104 004c C908     		lsrs	r1, r1, #3
 6105 004e C160     		str	r1, [r0, #12]
1310:../user/source/DLT645.c ****     }
 6106              		.loc 1 1310 0
 6107 0050 0648     		ldr	r0, .L407+12
 6108 0052 FFF7FEFF 		bl	Flash_Write_Word
 6109              	.LVL735:
 6110 0056 08BD     		pop	{r3, pc}
 6111              	.LVL736:
 6112              	.L404:
1315:../user/source/DLT645.c ****     }
 6113              		.loc 1 1315 0
 6114 0058 014B     		ldr	r3, .L407
 6115 005a D860     		str	r0, [r3, #12]
 6116 005c 08BD     		pop	{r3, pc}
 6117              	.L408:
 6118 005e 00BF     		.align	2
 6119              	.L407:
 6120 0060 00000000 		.word	TransFormer
 6121 0064 00650400 		.word	288000
 6122 0068 201F0308 		.word	134422304
 6123 006c 1C1F0308 		.word	134422300
 6124 0070 CDCCCCCC 		.word	-858993459
 6125              		.cfi_endproc
 6126              	.LFE132:
 6128              		.section	.text.vCurrentDirect_Modify,"ax",%progbits
 6129              		.align	2
 6130              		.global	vCurrentDirect_Modify
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 172


 6131              		.thumb
 6132              		.thumb_func
 6134              	vCurrentDirect_Modify:
 6135              	.LFB134:
1421:../user/source/DLT645.c ****     uint8_t i = 0;
 6136              		.loc 1 1421 0
 6137              		.cfi_startproc
 6138              		@ args = 0, pretend = 0, frame = 0
 6139              		@ frame_needed = 0, uses_anonymous_args = 0
 6140              		@ link register save eliminated.
 6141              	.LVL737:
1424:../user/source/DLT645.c ****     {
 6142              		.loc 1 1424 0
 6143 0000 C27A     		ldrb	r2, [r0, #11]	@ zero_extendqisi2
 6144 0002 323A     		subs	r2, r2, #50
 6145 0004 042A     		cmp	r2, #4
 6146 0006 55D8     		bhi	.L409
 6147 0008 DFE802F0 		tbb	[pc, r2]
 6148              	.L412:
 6149 000c 03       		.byte	(.L411-.L412)/2
 6150 000d 54       		.byte	(.L409-.L412)/2
 6151 000e 1F       		.byte	(.L413-.L412)/2
 6152 000f 31       		.byte	(.L414-.L412)/2
 6153 0010 43       		.byte	(.L415-.L412)/2
 6154 0011 00       		.p2align 1
 6155              	.L411:
1428:../user/source/DLT645.c ****         pucBuffer[19] = (pucBuffer[19] - 0x33) & 0xEF + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ»Æ
 6156              		.loc 1 1428 0
 6157 0012 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 6158 0014 333A     		subs	r2, r2, #51
 6159 0016 02F02202 		and	r2, r2, #34
 6160 001a 0274     		strb	r2, [r0, #16]
1429:../user/source/DLT645.c ****         pucBuffer[22] = (pucBuffer[22] - 0x33) & 0xEF + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ»Æ
 6161              		.loc 1 1429 0
 6162 001c C27C     		ldrb	r2, [r0, #19]	@ zero_extendqisi2
 6163 001e 333A     		subs	r2, r2, #51
 6164 0020 02F02202 		and	r2, r2, #34
 6165 0024 C274     		strb	r2, [r0, #19]
1430:../user/source/DLT645.c ****         for (i = 0; i < 23; i++)                              //Êı¾İÓò³¤¶È23
 6166              		.loc 1 1430 0
 6167 0026 827D     		ldrb	r2, [r0, #22]	@ zero_extendqisi2
 6168 0028 333A     		subs	r2, r2, #51
 6169 002a 02F02202 		and	r2, r2, #34
 6170 002e 8275     		strb	r2, [r0, #22]
1431:../user/source/DLT645.c ****         {
 6171              		.loc 1 1431 0
 6172 0030 0022     		movs	r2, #0
 6173 0032 04E0     		b	.L416
 6174              	.LVL738:
 6175              	.L417:
1433:../user/source/DLT645.c ****         }
 6176              		.loc 1 1433 0 discriminator 3
 6177 0034 815C     		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 6178 0036 0B44     		add	r3, r3, r1
 6179              	.LVL739:
 6180 0038 DBB2     		uxtb	r3, r3
 6181              	.LVL740:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 173


1431:../user/source/DLT645.c ****         {
 6182              		.loc 1 1431 0 discriminator 3
 6183 003a 0132     		adds	r2, r2, #1
 6184              	.LVL741:
 6185 003c D2B2     		uxtb	r2, r2
 6186              	.LVL742:
 6187              	.L416:
1431:../user/source/DLT645.c ****         {
 6188              		.loc 1 1431 0 is_stmt 0 discriminator 1
 6189 003e 162A     		cmp	r2, #22
 6190 0040 F8D9     		bls	.L417
1435:../user/source/DLT645.c ****         pucBuffer[24] = 0x16;
 6191              		.loc 1 1435 0 is_stmt 1
 6192 0042 C375     		strb	r3, [r0, #23]
1436:../user/source/DLT645.c ****         break;
 6193              		.loc 1 1436 0
 6194 0044 1623     		movs	r3, #22
 6195              	.LVL743:
 6196 0046 0376     		strb	r3, [r0, #24]
1437:../user/source/DLT645.c ****     }
 6197              		.loc 1 1437 0
 6198 0048 7047     		bx	lr
 6199              	.LVL744:
 6200              	.L413:
1441:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                              //Êı¾İÓò³¤¶È17
 6201              		.loc 1 1441 0
 6202 004a 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 6203 004c 333A     		subs	r2, r2, #51
 6204 004e 02F02202 		and	r2, r2, #34
 6205 0052 0274     		strb	r2, [r0, #16]
1442:../user/source/DLT645.c ****         {
 6206              		.loc 1 1442 0
 6207 0054 0022     		movs	r2, #0
 6208 0056 04E0     		b	.L418
 6209              	.LVL745:
 6210              	.L419:
1444:../user/source/DLT645.c ****         }
 6211              		.loc 1 1444 0 discriminator 3
 6212 0058 815C     		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 6213 005a 0B44     		add	r3, r3, r1
 6214              	.LVL746:
 6215 005c DBB2     		uxtb	r3, r3
 6216              	.LVL747:
1442:../user/source/DLT645.c ****         {
 6217              		.loc 1 1442 0 discriminator 3
 6218 005e 0132     		adds	r2, r2, #1
 6219              	.LVL748:
 6220 0060 D2B2     		uxtb	r2, r2
 6221              	.LVL749:
 6222              	.L418:
1442:../user/source/DLT645.c ****         {
 6223              		.loc 1 1442 0 is_stmt 0 discriminator 1
 6224 0062 102A     		cmp	r2, #16
 6225 0064 F8D9     		bls	.L419
1446:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
 6226              		.loc 1 1446 0 is_stmt 1
 6227 0066 4374     		strb	r3, [r0, #17]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 174


1447:../user/source/DLT645.c ****         break;
 6228              		.loc 1 1447 0
 6229 0068 1623     		movs	r3, #22
 6230              	.LVL750:
 6231 006a 8374     		strb	r3, [r0, #18]
1448:../user/source/DLT645.c ****     }
 6232              		.loc 1 1448 0
 6233 006c 7047     		bx	lr
 6234              	.LVL751:
 6235              	.L414:
1452:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                              //Êı¾İÓò³¤¶È17
 6236              		.loc 1 1452 0
 6237 006e 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 6238 0070 333A     		subs	r2, r2, #51
 6239 0072 02F02202 		and	r2, r2, #34
 6240 0076 0274     		strb	r2, [r0, #16]
1453:../user/source/DLT645.c ****         {
 6241              		.loc 1 1453 0
 6242 0078 0022     		movs	r2, #0
 6243 007a 04E0     		b	.L420
 6244              	.LVL752:
 6245              	.L421:
1455:../user/source/DLT645.c ****         }
 6246              		.loc 1 1455 0 discriminator 3
 6247 007c 815C     		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 6248 007e 0B44     		add	r3, r3, r1
 6249              	.LVL753:
 6250 0080 DBB2     		uxtb	r3, r3
 6251              	.LVL754:
1453:../user/source/DLT645.c ****         {
 6252              		.loc 1 1453 0 discriminator 3
 6253 0082 0132     		adds	r2, r2, #1
 6254              	.LVL755:
 6255 0084 D2B2     		uxtb	r2, r2
 6256              	.LVL756:
 6257              	.L420:
1453:../user/source/DLT645.c ****         {
 6258              		.loc 1 1453 0 is_stmt 0 discriminator 1
 6259 0086 102A     		cmp	r2, #16
 6260 0088 F8D9     		bls	.L421
1457:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
 6261              		.loc 1 1457 0 is_stmt 1
 6262 008a 4374     		strb	r3, [r0, #17]
1458:../user/source/DLT645.c ****         break;
 6263              		.loc 1 1458 0
 6264 008c 1623     		movs	r3, #22
 6265              	.LVL757:
 6266 008e 8374     		strb	r3, [r0, #18]
1459:../user/source/DLT645.c ****     }
 6267              		.loc 1 1459 0
 6268 0090 7047     		bx	lr
 6269              	.LVL758:
 6270              	.L415:
1463:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                              //Êı¾İÓò³¤¶È16
 6271              		.loc 1 1463 0
 6272 0092 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 6273 0094 333A     		subs	r2, r2, #51
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 175


 6274 0096 02F02202 		and	r2, r2, #34
 6275 009a 0274     		strb	r2, [r0, #16]
1464:../user/source/DLT645.c ****         {
 6276              		.loc 1 1464 0
 6277 009c 0022     		movs	r2, #0
 6278 009e 04E0     		b	.L422
 6279              	.LVL759:
 6280              	.L423:
1466:../user/source/DLT645.c ****         }
 6281              		.loc 1 1466 0 discriminator 3
 6282 00a0 815C     		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 6283 00a2 0B44     		add	r3, r3, r1
 6284              	.LVL760:
 6285 00a4 DBB2     		uxtb	r3, r3
 6286              	.LVL761:
1464:../user/source/DLT645.c ****         {
 6287              		.loc 1 1464 0 discriminator 3
 6288 00a6 0132     		adds	r2, r2, #1
 6289              	.LVL762:
 6290 00a8 D2B2     		uxtb	r2, r2
 6291              	.LVL763:
 6292              	.L422:
1464:../user/source/DLT645.c ****         {
 6293              		.loc 1 1464 0 is_stmt 0 discriminator 1
 6294 00aa 102A     		cmp	r2, #16
 6295 00ac F8D9     		bls	.L423
1468:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
 6296              		.loc 1 1468 0 is_stmt 1
 6297 00ae 4374     		strb	r3, [r0, #17]
1469:../user/source/DLT645.c ****         break;
 6298              		.loc 1 1469 0
 6299 00b0 1623     		movs	r3, #22
 6300              	.LVL764:
 6301 00b2 8374     		strb	r3, [r0, #18]
 6302              	.LVL765:
 6303              	.L409:
 6304 00b4 7047     		bx	lr
 6305              		.cfi_endproc
 6306              	.LFE134:
 6308 00b6 00BF     		.section	.text.vCurrent_Count_Clear,"ax",%progbits
 6309              		.align	2
 6310              		.global	vCurrent_Count_Clear
 6311              		.thumb
 6312              		.thumb_func
 6314              	vCurrent_Count_Clear:
 6315              	.LFB140:
1731:../user/source/DLT645.c ****     Acurrent.count = 0;
 6316              		.loc 1 1731 0
 6317              		.cfi_startproc
 6318              		@ args = 0, pretend = 0, frame = 0
 6319              		@ frame_needed = 0, uses_anonymous_args = 0
 6320              		@ link register save eliminated.
1732:../user/source/DLT645.c ****     Bcurrent.count = 0;
 6321              		.loc 1 1732 0
 6322 0000 0023     		movs	r3, #0
 6323 0002 034A     		ldr	r2, .L425
 6324 0004 1371     		strb	r3, [r2, #4]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 176


1733:../user/source/DLT645.c ****     Ccurrent.count = 0;
 6325              		.loc 1 1733 0
 6326 0006 034A     		ldr	r2, .L425+4
 6327 0008 1371     		strb	r3, [r2, #4]
1734:../user/source/DLT645.c **** }
 6328              		.loc 1 1734 0
 6329 000a 034A     		ldr	r2, .L425+8
 6330 000c 1371     		strb	r3, [r2, #4]
 6331 000e 7047     		bx	lr
 6332              	.L426:
 6333              		.align	2
 6334              	.L425:
 6335 0010 00000000 		.word	.LANCHOR1
 6336 0014 00000000 		.word	.LANCHOR2
 6337 0018 00000000 		.word	.LANCHOR3
 6338              		.cfi_endproc
 6339              	.LFE140:
 6341              		.section	.text.vEnergy_Modify_Init,"ax",%progbits
 6342              		.align	2
 6343              		.global	vEnergy_Modify_Init
 6344              		.thumb
 6345              		.thumb_func
 6347              	vEnergy_Modify_Init:
 6348              	.LFB144:
1791:../user/source/DLT645.c ****     uint8_t tmp;
 6349              		.loc 1 1791 0
 6350              		.cfi_startproc
 6351              		@ args = 0, pretend = 0, frame = 0
 6352              		@ frame_needed = 0, uses_anonymous_args = 0
 6353 0000 08B5     		push	{r3, lr}
 6354              	.LCFI51:
 6355              		.cfi_def_cfa_offset 8
 6356              		.cfi_offset 3, -8
 6357              		.cfi_offset 14, -4
1794:../user/source/DLT645.c ****     tmp = EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR);
 6358              		.loc 1 1794 0
 6359 0002 0848     		ldr	r0, .L431
 6360 0004 FFF7FEFF 		bl	EEProm_Read
 6361              	.LVL766:
 6362 0008 074B     		ldr	r3, .L431+4
 6363 000a 1870     		strb	r0, [r3]
1795:../user/source/DLT645.c ****     /*ÅĞ¶ÏflashÖĞÊÇ·ñÒÑ´æ´¢µçÑ¹ĞŞ¸Ä±ÈÀı*/
 6364              		.loc 1 1795 0
 6365 000c 0748     		ldr	r0, .L431+8
 6366 000e FFF7FEFF 		bl	EEProm_Read
 6367              	.LVL767:
1797:../user/source/DLT645.c ****     {
 6368              		.loc 1 1797 0
 6369 0012 FF28     		cmp	r0, #255
 6370 0014 03D1     		bne	.L428
1800:../user/source/DLT645.c ****     }
 6371              		.loc 1 1800 0
 6372 0016 5A22     		movs	r2, #90
 6373 0018 054B     		ldr	r3, .L431+12
 6374 001a 1A70     		strb	r2, [r3]
 6375 001c 08BD     		pop	{r3, pc}
 6376              	.L428:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 177


1804:../user/source/DLT645.c ****     }
 6377              		.loc 1 1804 0
 6378 001e 044B     		ldr	r3, .L431+12
 6379 0020 1870     		strb	r0, [r3]
 6380 0022 08BD     		pop	{r3, pc}
 6381              	.L432:
 6382              		.align	2
 6383              	.L431:
 6384 0024 181F0308 		.word	134422296
 6385 0028 00000000 		.word	.LANCHOR10
 6386 002c 101F0308 		.word	134422288
 6387 0030 00000000 		.word	ucDayfrozen_Modify_Ratio
 6388              		.cfi_endproc
 6389              	.LFE144:
 6391              		.global	__aeabi_uldivmod
 6392              		.section	.text.vNow_Frozen_Modify_Mothod,"ax",%progbits
 6393              		.align	2
 6394              		.global	vNow_Frozen_Modify_Mothod
 6395              		.thumb
 6396              		.thumb_func
 6398              	vNow_Frozen_Modify_Mothod:
 6399              	.LFB147:
1851:../user/source/DLT645.c ****     uint32_t RealValue;
 6400              		.loc 1 1851 0
 6401              		.cfi_startproc
 6402              		@ args = 0, pretend = 0, frame = 0
 6403              		@ frame_needed = 0, uses_anonymous_args = 0
 6404              	.LVL768:
 6405 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 6406              	.LCFI52:
 6407              		.cfi_def_cfa_offset 24
 6408              		.cfi_offset 4, -24
 6409              		.cfi_offset 5, -20
 6410              		.cfi_offset 6, -16
 6411              		.cfi_offset 7, -12
 6412              		.cfi_offset 8, -8
 6413              		.cfi_offset 14, -4
 6414 0004 0646     		mov	r6, r0
 6415 0006 8846     		mov	r8, r1
 6416 0008 1746     		mov	r7, r2
1856:../user/source/DLT645.c ****     Modified_Value = Flash_Read_Word(ModifiedValueAddr);
 6417              		.loc 1 1856 0
 6418 000a 0846     		mov	r0, r1
 6419              	.LVL769:
 6420 000c FFF7FEFF 		bl	Flash_Read_Word
 6421              	.LVL770:
 6422 0010 0546     		mov	r5, r0
 6423              	.LVL771:
1857:../user/source/DLT645.c ****     /*ÖÕ¶ËµÚÒ»´ÎÊ¹ÓÃ*/
 6424              		.loc 1 1857 0
 6425 0012 3846     		mov	r0, r7
 6426              	.LVL772:
 6427 0014 FFF7FEFF 		bl	Flash_Read_Word
 6428              	.LVL773:
1859:../user/source/DLT645.c ****     {
 6429              		.loc 1 1859 0
 6430 0018 B5F1FF3F 		cmp	r5, #-1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 178


 6431 001c 03D0     		beq	.L434
 6432 001e 0446     		mov	r4, r0
1859:../user/source/DLT645.c ****     {
 6433              		.loc 1 1859 0 is_stmt 0 discriminator 1
 6434 0020 B0F1FF3F 		cmp	r0, #-1
 6435 0024 0AD1     		bne	.L435
 6436              	.L434:
1862:../user/source/DLT645.c ****         Flash_Write_Word(ModifiedValueAddr, nowenergy);
 6437              		.loc 1 1862 0 is_stmt 1
 6438 0026 3146     		mov	r1, r6
 6439 0028 4046     		mov	r0, r8
 6440              	.LVL774:
 6441 002a FFF7FEFF 		bl	Flash_Write_Word
 6442              	.LVL775:
1863:../user/source/DLT645.c ****         /*²»ĞŞ¸Ä*/
 6443              		.loc 1 1863 0
 6444 002e 3146     		mov	r1, r6
 6445 0030 3846     		mov	r0, r7
 6446 0032 FFF7FEFF 		bl	Flash_Write_Word
 6447              	.LVL776:
1865:../user/source/DLT645.c ****     }
 6448              		.loc 1 1865 0
 6449 0036 3046     		mov	r0, r6
 6450 0038 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6451              	.LVL777:
 6452              	.L435:
1871:../user/source/DLT645.c ****         {
 6453              		.loc 1 1871 0
 6454 003c B542     		cmp	r5, r6
 6455 003e 0ED9     		bls	.L437
1875:../user/source/DLT645.c ****         }
 6456              		.loc 1 1875 0
 6457 0040 751B     		subs	r5, r6, r5
 6458              	.LVL778:
 6459 0042 1748     		ldr	r0, .L441
 6460              	.LVL779:
 6461 0044 2844     		add	r0, r0, r5
 6462 0046 174B     		ldr	r3, .L441+4
 6463 0048 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6464 004a A2FB0001 		umull	r0, r1, r2, r0
 6465 004e 6422     		movs	r2, #100
 6466 0050 0023     		movs	r3, #0
 6467 0052 3230     		adds	r0, r0, #50
 6468 0054 41F10001 		adc	r1, r1, #0
 6469 0058 FFF7FEFF 		bl	__aeabi_uldivmod
 6470              	.LVL780:
 6471 005c 0BE0     		b	.L438
 6472              	.LVL781:
 6473              	.L437:
1879:../user/source/DLT645.c ****         }
 6474              		.loc 1 1879 0
 6475 005e 751B     		subs	r5, r6, r5
 6476              	.LVL782:
 6477 0060 104B     		ldr	r3, .L441+4
 6478 0062 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6479              	.LVL783:
 6480 0064 A0FB0501 		umull	r0, r1, r0, r5
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 179


 6481 0068 6422     		movs	r2, #100
 6482 006a 0023     		movs	r3, #0
 6483 006c 3230     		adds	r0, r0, #50
 6484 006e 41F10001 		adc	r1, r1, #0
 6485 0072 FFF7FEFF 		bl	__aeabi_uldivmod
 6486              	.LVL784:
 6487              	.L438:
1881:../user/source/DLT645.c ****         /*ÀÛ¼ÆÖµÒç³öºó¹éÁã*/
 6488              		.loc 1 1881 0
 6489 0076 0444     		add	r4, r4, r0
 6490              	.LVL785:
1883:../user/source/DLT645.c ****         /*½«ÉÏËÍÖµ´æ´¢ÎªÕæÊµÖµ*/
 6491              		.loc 1 1883 0
 6492 0078 094B     		ldr	r3, .L441
 6493 007a 9C42     		cmp	r4, r3
 6494 007c 05D9     		bls	.L439
1883:../user/source/DLT645.c ****         /*½«ÉÏËÍÖµ´æ´¢ÎªÕæÊµÖµ*/
 6495              		.loc 1 1883 0 is_stmt 0 discriminator 1
 6496 007e 04F17A44 		add	r4, r4, #-100663296
 6497              	.LVL786:
 6498 0082 04F52124 		add	r4, r4, #659456
 6499              	.LVL787:
 6500 0086 04F60174 		addw	r4, r4, #3841
 6501              	.LVL788:
 6502              	.L439:
1885:../user/source/DLT645.c ****         /*ĞÂµÄĞŞ¸ÄÖµ¸²¸Ç¾ÉÖµ´æ´¢*/
 6503              		.loc 1 1885 0 is_stmt 1 discriminator 4
 6504 008a 3146     		mov	r1, r6
 6505 008c 4046     		mov	r0, r8
 6506 008e FFF7FEFF 		bl	Flash_Write_Word
 6507              	.LVL789:
1887:../user/source/DLT645.c ****         /*·µ»ØĞŞ¸ÄÖµ*/
 6508              		.loc 1 1887 0 discriminator 4
 6509 0092 2146     		mov	r1, r4
 6510 0094 3846     		mov	r0, r7
 6511 0096 FFF7FEFF 		bl	Flash_Write_Word
 6512              	.LVL790:
1889:../user/source/DLT645.c ****     }
 6513              		.loc 1 1889 0 discriminator 4
 6514 009a 2046     		mov	r0, r4
1891:../user/source/DLT645.c **** 
 6515              		.loc 1 1891 0 discriminator 4
 6516 009c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6517              	.LVL791:
 6518              	.L442:
 6519              		.align	2
 6520              	.L441:
 6521 00a0 FFE0F505 		.word	99999999
 6522 00a4 00000000 		.word	ucDayfrozen_Modify_Ratio
 6523              		.cfi_endproc
 6524              	.LFE147:
 6526              		.section	.text.vNowEnergy_Modifier,"ax",%progbits
 6527              		.align	2
 6528              		.global	vNowEnergy_Modifier
 6529              		.thumb
 6530              		.thumb_func
 6532              	vNowEnergy_Modifier:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 180


 6533              	.LFB148:
1910:../user/source/DLT645.c ****     uint16_t i;
 6534              		.loc 1 1910 0
 6535              		.cfi_startproc
 6536              		@ args = 0, pretend = 0, frame = 0
 6537              		@ frame_needed = 0, uses_anonymous_args = 0
 6538              	.LVL792:
1917:../user/source/DLT645.c ****         return;
 6539              		.loc 1 1917 0
 6540 0000 834B     		ldr	r3, .L466
 6541 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6542 0004 002B     		cmp	r3, #0
 6543 0006 00F00181 		beq	.L465
1910:../user/source/DLT645.c ****     uint16_t i;
 6544              		.loc 1 1910 0
 6545 000a 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 6546              	.LCFI53:
 6547              		.cfi_def_cfa_offset 28
 6548              		.cfi_offset 4, -28
 6549              		.cfi_offset 5, -24
 6550              		.cfi_offset 6, -20
 6551              		.cfi_offset 7, -16
 6552              		.cfi_offset 8, -12
 6553              		.cfi_offset 9, -8
 6554              		.cfi_offset 14, -4
 6555 000e 83B0     		sub	sp, sp, #12
 6556              	.LCFI54:
 6557              		.cfi_def_cfa_offset 40
 6558 0010 0446     		mov	r4, r0
1919:../user/source/DLT645.c ****     switch (pucBuffer[11])
 6559              		.loc 1 1919 0
 6560 0012 437C     		ldrb	r3, [r0, #17]	@ zero_extendqisi2
 6561 0014 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 6562 0016 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 6563 0018 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 6564              	.LVL793:
 6565 001a FFF7FEFF 		bl	Get_Energy
 6566              	.LVL794:
 6567 001e 0546     		mov	r5, r0
 6568              	.LVL795:
1920:../user/source/DLT645.c ****     {
 6569              		.loc 1 1920 0
 6570 0020 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 6571 0022 323B     		subs	r3, r3, #50
 6572 0024 052B     		cmp	r3, #5
 6573 0026 00F28180 		bhi	.L445
 6574 002a DFE803F0 		tbb	[pc, r3]
 6575              	.L447:
 6576 002e 3F       		.byte	(.L446-.L447)/2
 6577 002f 03       		.byte	(.L448-.L447)/2
 6578 0030 27       		.byte	(.L449-.L447)/2
 6579 0031 2D       		.byte	(.L450-.L447)/2
 6580 0032 33       		.byte	(.L451-.L447)/2
 6581 0033 39       		.byte	(.L452-.L447)/2
 6582              		.p2align 1
 6583              	.L448:
1924:../user/source/DLT645.c ****         {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 181


 6584              		.loc 1 1924 0
 6585 0034 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 6586 0036 482B     		cmp	r3, #72
 6587 0038 0ED0     		beq	.L453
 6588 003a 02D8     		bhi	.L454
 6589 003c 342B     		cmp	r3, #52
 6590 003e 05D0     		beq	.L455
 6591 0040 74E0     		b	.L445
 6592              	.L454:
 6593 0042 5C2B     		cmp	r3, #92
 6594 0044 0ED0     		beq	.L456
 6595 0046 702B     		cmp	r3, #112
 6596 0048 12D0     		beq	.L457
 6597 004a 6FE0     		b	.L445
 6598              	.L455:
1929:../user/source/DLT645.c ****                                                FLASH_MODIFIED_ALL_NOWENERGY_ADDR);
 6599              		.loc 1 1929 0
 6600 004c 714A     		ldr	r2, .L466+4
 6601 004e 7249     		ldr	r1, .L466+8
 6602 0050 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6603              	.LVL796:
 6604 0054 0546     		mov	r5, r0
 6605              	.LVL797:
1931:../user/source/DLT645.c ****         }
 6606              		.loc 1 1931 0
 6607 0056 69E0     		b	.L445
 6608              	.L453:
1936:../user/source/DLT645.c ****                                                FLASH_MODIFIED_A_NOWENERGY_ADDR);
 6609              		.loc 1 1936 0
 6610 0058 704A     		ldr	r2, .L466+12
 6611 005a 7149     		ldr	r1, .L466+16
 6612 005c FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6613              	.LVL798:
 6614 0060 0546     		mov	r5, r0
 6615              	.LVL799:
1938:../user/source/DLT645.c ****         }
 6616              		.loc 1 1938 0
 6617 0062 63E0     		b	.L445
 6618              	.L456:
1943:../user/source/DLT645.c ****                                                FLASH_MODIFIED_B_NOWENERGY_ADDR);
 6619              		.loc 1 1943 0
 6620 0064 6F4A     		ldr	r2, .L466+20
 6621 0066 7049     		ldr	r1, .L466+24
 6622 0068 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6623              	.LVL800:
 6624 006c 0546     		mov	r5, r0
 6625              	.LVL801:
1945:../user/source/DLT645.c ****         }
 6626              		.loc 1 1945 0
 6627 006e 5DE0     		b	.L445
 6628              	.L457:
1950:../user/source/DLT645.c ****                                                FLASH_MODIFIED_C_NOWENERGY_ADDR);
 6629              		.loc 1 1950 0
 6630 0070 6E4A     		ldr	r2, .L466+28
 6631 0072 6F49     		ldr	r1, .L466+32
 6632 0074 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6633              	.LVL802:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 182


 6634 0078 0546     		mov	r5, r0
 6635              	.LVL803:
1952:../user/source/DLT645.c ****         }
 6636              		.loc 1 1952 0
 6637 007a 57E0     		b	.L445
 6638              	.L449:
1962:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F1_NOWENERGY_ADDR);
 6639              		.loc 1 1962 0
 6640 007c 6D4A     		ldr	r2, .L466+36
 6641 007e 6E49     		ldr	r1, .L466+40
 6642 0080 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6643              	.LVL804:
 6644 0084 0546     		mov	r5, r0
 6645              	.LVL805:
1964:../user/source/DLT645.c ****     }
 6646              		.loc 1 1964 0
 6647 0086 51E0     		b	.L445
 6648              	.L450:
1969:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F2_NOWENERGY_ADDR);
 6649              		.loc 1 1969 0
 6650 0088 6C4A     		ldr	r2, .L466+44
 6651 008a 6D49     		ldr	r1, .L466+48
 6652 008c FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6653              	.LVL806:
 6654 0090 0546     		mov	r5, r0
 6655              	.LVL807:
1971:../user/source/DLT645.c ****     }
 6656              		.loc 1 1971 0
 6657 0092 4BE0     		b	.L445
 6658              	.L451:
1976:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F3_NOWENERGY_ADDR);
 6659              		.loc 1 1976 0
 6660 0094 6B4A     		ldr	r2, .L466+52
 6661 0096 6C49     		ldr	r1, .L466+56
 6662 0098 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6663              	.LVL808:
 6664 009c 0546     		mov	r5, r0
 6665              	.LVL809:
1978:../user/source/DLT645.c ****     }
 6666              		.loc 1 1978 0
 6667 009e 45E0     		b	.L445
 6668              	.L452:
1983:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F4_NOWENERGY_ADDR);
 6669              		.loc 1 1983 0
 6670 00a0 6A4A     		ldr	r2, .L466+60
 6671 00a2 6B49     		ldr	r1, .L466+64
 6672 00a4 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6673              	.LVL810:
 6674 00a8 0546     		mov	r5, r0
 6675              	.LVL811:
1985:../user/source/DLT645.c ****     }
 6676              		.loc 1 1985 0
 6677 00aa 3FE0     		b	.L445
 6678              	.L446:
1995:../user/source/DLT645.c ****         energy_F1 = vNow_Frozen_Modify_Mothod(energy_F1, FLASH_REAL_F1_NOWENERGY_ADDR,
 6679              		.loc 1 1995 0
 6680 00ac 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 183


 6681 00ae 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 6682 00b0 E17C     		ldrb	r1, [r4, #19]	@ zero_extendqisi2
 6683 00b2 A07C     		ldrb	r0, [r4, #18]	@ zero_extendqisi2
 6684              	.LVL812:
 6685 00b4 FFF7FEFF 		bl	Get_Energy
 6686              	.LVL813:
1996:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F1_NOWENERGY_ADDR);
 6687              		.loc 1 1996 0
 6688 00b8 5E4A     		ldr	r2, .L466+36
 6689 00ba 5F49     		ldr	r1, .L466+40
 6690 00bc FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6691              	.LVL814:
 6692 00c0 8146     		mov	r9, r0
 6693              	.LVL815:
1998:../user/source/DLT645.c ****         energy_F2 = vNow_Frozen_Modify_Mothod(energy_F2, FLASH_REAL_F2_NOWENERGY_ADDR,
 6694              		.loc 1 1998 0
 6695 00c2 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 6696 00c4 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 6697 00c6 E17D     		ldrb	r1, [r4, #23]	@ zero_extendqisi2
 6698 00c8 A07D     		ldrb	r0, [r4, #22]	@ zero_extendqisi2
 6699              	.LVL816:
 6700 00ca FFF7FEFF 		bl	Get_Energy
 6701              	.LVL817:
1999:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F2_NOWENERGY_ADDR);
 6702              		.loc 1 1999 0
 6703 00ce 5B4A     		ldr	r2, .L466+44
 6704 00d0 5B49     		ldr	r1, .L466+48
 6705 00d2 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6706              	.LVL818:
 6707 00d6 8046     		mov	r8, r0
 6708              	.LVL819:
2001:../user/source/DLT645.c ****         energy_F3 = vNow_Frozen_Modify_Mothod(energy_F3, FLASH_REAL_F3_NOWENERGY_ADDR,
 6709              		.loc 1 2001 0
 6710 00d8 637F     		ldrb	r3, [r4, #29]	@ zero_extendqisi2
 6711 00da 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 6712 00dc E17E     		ldrb	r1, [r4, #27]	@ zero_extendqisi2
 6713 00de A07E     		ldrb	r0, [r4, #26]	@ zero_extendqisi2
 6714              	.LVL820:
 6715 00e0 FFF7FEFF 		bl	Get_Energy
 6716              	.LVL821:
2002:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F3_NOWENERGY_ADDR);
 6717              		.loc 1 2002 0
 6718 00e4 574A     		ldr	r2, .L466+52
 6719 00e6 5849     		ldr	r1, .L466+56
 6720 00e8 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6721              	.LVL822:
 6722 00ec 0746     		mov	r7, r0
 6723              	.LVL823:
2005:../user/source/DLT645.c ****         energy_F4 = vNow_Frozen_Modify_Mothod(energy_F4, FLASH_REAL_F4_NOWENERGY_ADDR,
 6724              		.loc 1 2005 0
 6725 00ee 94F82130 		ldrb	r3, [r4, #33]	@ zero_extendqisi2
 6726 00f2 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 6727 00f6 E17F     		ldrb	r1, [r4, #31]	@ zero_extendqisi2
 6728 00f8 A07F     		ldrb	r0, [r4, #30]	@ zero_extendqisi2
 6729              	.LVL824:
 6730 00fa FFF7FEFF 		bl	Get_Energy
 6731              	.LVL825:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 184


2006:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F4_NOWENERGY_ADDR);
 6732              		.loc 1 2006 0
 6733 00fe 534A     		ldr	r2, .L466+60
 6734 0100 5349     		ldr	r1, .L466+64
 6735 0102 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6736              	.LVL826:
 6737 0106 0646     		mov	r6, r0
 6738              	.LVL827:
2009:../user/source/DLT645.c ****         /*±£´æ×ÜµçÁ¿ÕæÊµÖµ£¬µ¥³­×ÜµçÁ¿Ê±Ê¹ÓÃ*/
 6739              		.loc 1 2009 0
 6740 0108 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 6741 010a 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 6742 010c E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
 6743 010e A07B     		ldrb	r0, [r4, #14]	@ zero_extendqisi2
 6744              	.LVL828:
 6745 0110 FFF7FEFF 		bl	Get_Energy
 6746              	.LVL829:
2011:../user/source/DLT645.c ****         /*¸ù¾İ·Ö·ÑÂÊµçÁ¿¼ÆËãĞŞ¸ÄºóµÄ×ÜµçÁ¿*/
 6747              		.loc 1 2011 0
 6748 0114 0146     		mov	r1, r0
 6749 0116 4048     		ldr	r0, .L466+8
 6750              	.LVL830:
 6751 0118 FFF7FEFF 		bl	Flash_Write_Word
 6752              	.LVL831:
2013:../user/source/DLT645.c ****         /*±£´æĞŞ¸ÄÖµ£¬µ¥³­×ÜµçÁ¿Ê±Ê¹ÓÃ*/
 6753              		.loc 1 2013 0
 6754 011c 09EB0805 		add	r5, r9, r8
 6755 0120 3D44     		add	r5, r5, r7
 6756 0122 3544     		add	r5, r5, r6
 6757              	.LVL832:
2015:../user/source/DLT645.c ****         break;
 6758              		.loc 1 2015 0
 6759 0124 2946     		mov	r1, r5
 6760 0126 3B48     		ldr	r0, .L466+4
 6761 0128 FFF7FEFF 		bl	Flash_Write_Word
 6762              	.LVL833:
 6763              	.L445:
2021:../user/source/DLT645.c ****     {
 6764              		.loc 1 2021 0
 6765 012c E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 6766 012e 322B     		cmp	r3, #50
 6767 0130 1CD0     		beq	.L458
 6768 0132 68D3     		bcc	.L443
 6769 0134 372B     		cmp	r3, #55
 6770 0136 66D8     		bhi	.L443
2030:../user/source/DLT645.c ****         pucBuffer[18] = 0;
 6771              		.loc 1 2030 0
 6772 0138 04F11103 		add	r3, r4, #17
 6773 013c 0093     		str	r3, [sp]
 6774 013e 04F11003 		add	r3, r4, #16
 6775 0142 04F10F02 		add	r2, r4, #15
 6776 0146 04F10E01 		add	r1, r4, #14
 6777 014a 2846     		mov	r0, r5
 6778 014c FFF7FEFF 		bl	Fill_Energy
 6779              	.LVL834:
2031:../user/source/DLT645.c ****         for (i = 0; i < 18; i++)
 6780              		.loc 1 2031 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 185


 6781 0150 0023     		movs	r3, #0
 6782 0152 A374     		strb	r3, [r4, #18]
 6783              	.LVL835:
2032:../user/source/DLT645.c ****         {
 6784              		.loc 1 2032 0
 6785 0154 05E0     		b	.L460
 6786              	.LVL836:
 6787              	.L461:
2034:../user/source/DLT645.c ****         }
 6788              		.loc 1 2034 0 discriminator 3
 6789 0156 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 6790 0158 A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 6791 015a 0A44     		add	r2, r2, r1
 6792 015c A274     		strb	r2, [r4, #18]
2032:../user/source/DLT645.c ****         {
 6793              		.loc 1 2032 0 discriminator 3
 6794 015e 0133     		adds	r3, r3, #1
 6795              	.LVL837:
 6796 0160 9BB2     		uxth	r3, r3
 6797              	.LVL838:
 6798              	.L460:
2032:../user/source/DLT645.c ****         {
 6799              		.loc 1 2032 0 is_stmt 0 discriminator 1
 6800 0162 112B     		cmp	r3, #17
 6801 0164 F7D9     		bls	.L461
2036:../user/source/DLT645.c ****         break;
 6802              		.loc 1 2036 0 is_stmt 1
 6803 0166 1623     		movs	r3, #22
 6804              	.LVL839:
 6805 0168 E374     		strb	r3, [r4, #19]
2037:../user/source/DLT645.c ****     }
 6806              		.loc 1 2037 0
 6807 016a 4CE0     		b	.L443
 6808              	.L458:
2043:../user/source/DLT645.c ****         /*¼â*/
 6809              		.loc 1 2043 0
 6810 016c 04F11103 		add	r3, r4, #17
 6811 0170 0093     		str	r3, [sp]
 6812 0172 04F11003 		add	r3, r4, #16
 6813 0176 04F10F02 		add	r2, r4, #15
 6814 017a 04F10E01 		add	r1, r4, #14
 6815 017e 2846     		mov	r0, r5
 6816 0180 FFF7FEFF 		bl	Fill_Energy
 6817              	.LVL840:
2045:../user/source/DLT645.c ****         /*·å*/
 6818              		.loc 1 2045 0
 6819 0184 04F11503 		add	r3, r4, #21
 6820 0188 0093     		str	r3, [sp]
 6821 018a 04F11403 		add	r3, r4, #20
 6822 018e 04F11302 		add	r2, r4, #19
 6823 0192 04F11201 		add	r1, r4, #18
 6824 0196 4846     		mov	r0, r9
 6825 0198 FFF7FEFF 		bl	Fill_Energy
 6826              	.LVL841:
2047:../user/source/DLT645.c ****         /*Æ½*/
 6827              		.loc 1 2047 0
 6828 019c 04F11903 		add	r3, r4, #25
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 186


 6829 01a0 0093     		str	r3, [sp]
 6830 01a2 04F11803 		add	r3, r4, #24
 6831 01a6 04F11702 		add	r2, r4, #23
 6832 01aa 04F11601 		add	r1, r4, #22
 6833 01ae 4046     		mov	r0, r8
 6834 01b0 FFF7FEFF 		bl	Fill_Energy
 6835              	.LVL842:
2049:../user/source/DLT645.c ****         /*¹È*/
 6836              		.loc 1 2049 0
 6837 01b4 04F11D03 		add	r3, r4, #29
 6838 01b8 0093     		str	r3, [sp]
 6839 01ba 04F11C03 		add	r3, r4, #28
 6840 01be 04F11B02 		add	r2, r4, #27
 6841 01c2 04F11A01 		add	r1, r4, #26
 6842 01c6 3846     		mov	r0, r7
 6843 01c8 FFF7FEFF 		bl	Fill_Energy
 6844              	.LVL843:
2051:../user/source/DLT645.c ****         pucBuffer[34] = 0;
 6845              		.loc 1 2051 0
 6846 01cc 04F12103 		add	r3, r4, #33
 6847 01d0 0093     		str	r3, [sp]
 6848 01d2 04F12003 		add	r3, r4, #32
 6849 01d6 04F11F02 		add	r2, r4, #31
 6850 01da 04F11E01 		add	r1, r4, #30
 6851 01de 3046     		mov	r0, r6
 6852 01e0 FFF7FEFF 		bl	Fill_Energy
 6853              	.LVL844:
2052:../user/source/DLT645.c ****         for (i = 0; i < 34; i++)
 6854              		.loc 1 2052 0
 6855 01e4 0023     		movs	r3, #0
 6856 01e6 84F82230 		strb	r3, [r4, #34]
 6857              	.LVL845:
2053:../user/source/DLT645.c ****         {
 6858              		.loc 1 2053 0
 6859 01ea 07E0     		b	.L462
 6860              	.LVL846:
 6861              	.L463:
2055:../user/source/DLT645.c ****         }
 6862              		.loc 1 2055 0 discriminator 3
 6863 01ec E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 6864 01ee 94F82220 		ldrb	r2, [r4, #34]	@ zero_extendqisi2
 6865 01f2 0A44     		add	r2, r2, r1
 6866 01f4 84F82220 		strb	r2, [r4, #34]
2053:../user/source/DLT645.c ****         {
 6867              		.loc 1 2053 0 discriminator 3
 6868 01f8 0133     		adds	r3, r3, #1
 6869              	.LVL847:
 6870 01fa 9BB2     		uxth	r3, r3
 6871              	.LVL848:
 6872              	.L462:
2053:../user/source/DLT645.c ****         {
 6873              		.loc 1 2053 0 is_stmt 0 discriminator 1
 6874 01fc 212B     		cmp	r3, #33
 6875 01fe F5D9     		bls	.L463
2057:../user/source/DLT645.c ****         break;
 6876              		.loc 1 2057 0 is_stmt 1
 6877 0200 1623     		movs	r3, #22
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 187


 6878              	.LVL849:
 6879 0202 84F82330 		strb	r3, [r4, #35]
 6880              	.L443:
2063:../user/source/DLT645.c **** 
 6881              		.loc 1 2063 0
 6882 0206 03B0     		add	sp, sp, #12
 6883              	.LCFI55:
 6884              		.cfi_def_cfa_offset 28
 6885              		@ sp needed
 6886 0208 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 6887              	.LVL850:
 6888              	.L465:
 6889              	.LCFI56:
 6890              		.cfi_def_cfa_offset 0
 6891              		.cfi_restore 4
 6892              		.cfi_restore 5
 6893              		.cfi_restore 6
 6894              		.cfi_restore 7
 6895              		.cfi_restore 8
 6896              		.cfi_restore 9
 6897              		.cfi_restore 14
 6898 020c 7047     		bx	lr
 6899              	.L467:
 6900 020e 00BF     		.align	2
 6901              	.L466:
 6902 0210 00000000 		.word	.LANCHOR10
 6903 0214 74200308 		.word	134422644
 6904 0218 70200308 		.word	134422640
 6905 021c 9C200308 		.word	134422684
 6906 0220 98200308 		.word	134422680
 6907 0224 A4200308 		.word	134422692
 6908 0228 A0200308 		.word	134422688
 6909 022c AC200308 		.word	134422700
 6910 0230 A8200308 		.word	134422696
 6911 0234 7C200308 		.word	134422652
 6912 0238 78200308 		.word	134422648
 6913 023c 84200308 		.word	134422660
 6914 0240 80200308 		.word	134422656
 6915 0244 8C200308 		.word	134422668
 6916 0248 88200308 		.word	134422664
 6917 024c 94200308 		.word	134422676
 6918 0250 90200308 		.word	134422672
 6919              		.cfi_endproc
 6920              	.LFE148:
 6922              		.section	.text.vDayfrozen_Modifier,"ax",%progbits
 6923              		.align	2
 6924              		.global	vDayfrozen_Modifier
 6925              		.thumb
 6926              		.thumb_func
 6928              	vDayfrozen_Modifier:
 6929              	.LFB149:
2082:../user/source/DLT645.c ****     uint32_t energy, energy_F1, energy_F2, energy_F3, energy_F4;
 6930              		.loc 1 2082 0
 6931              		.cfi_startproc
 6932              		@ args = 0, pretend = 0, frame = 0
 6933              		@ frame_needed = 0, uses_anonymous_args = 0
 6934              	.LVL851:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 188


2086:../user/source/DLT645.c ****         return;
 6935              		.loc 1 2086 0
 6936 0000 4A4B     		ldr	r3, .L474
 6937 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6938 0004 002B     		cmp	r3, #0
 6939 0006 00F08F80 		beq	.L473
2082:../user/source/DLT645.c ****     uint32_t energy, energy_F1, energy_F2, energy_F3, energy_F4;
 6940              		.loc 1 2082 0
 6941 000a 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 6942              	.LCFI57:
 6943              		.cfi_def_cfa_offset 24
 6944              		.cfi_offset 4, -24
 6945              		.cfi_offset 5, -20
 6946              		.cfi_offset 6, -16
 6947              		.cfi_offset 7, -12
 6948              		.cfi_offset 8, -8
 6949              		.cfi_offset 14, -4
 6950 000e 82B0     		sub	sp, sp, #8
 6951              	.LCFI58:
 6952              		.cfi_def_cfa_offset 32
 6953 0010 0446     		mov	r4, r0
2098:../user/source/DLT645.c ****     energy_F1 = vNow_Frozen_Modify_Mothod(energy_F1, FLASH_REAL_1DAYFROZEN_ADDR + 4, FLASH_MODIFIED
 6954              		.loc 1 2098 0
 6955 0012 437D     		ldrb	r3, [r0, #21]	@ zero_extendqisi2
 6956 0014 027D     		ldrb	r2, [r0, #20]	@ zero_extendqisi2
 6957 0016 C17C     		ldrb	r1, [r0, #19]	@ zero_extendqisi2
 6958 0018 807C     		ldrb	r0, [r0, #18]	@ zero_extendqisi2
 6959              	.LVL852:
 6960 001a FFF7FEFF 		bl	Get_Energy
 6961              	.LVL853:
2099:../user/source/DLT645.c ****     Fill_Energy(energy_F1, &pucBuffer[18], &pucBuffer[19], &pucBuffer[20], &pucBuffer[21]);
 6962              		.loc 1 2099 0
 6963 001e 444A     		ldr	r2, .L474+4
 6964 0020 4449     		ldr	r1, .L474+8
 6965 0022 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6966              	.LVL854:
 6967 0026 8046     		mov	r8, r0
 6968              	.LVL855:
2100:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦·å·ÑÂÊµçÁ¿*/
 6969              		.loc 1 2100 0
 6970 0028 04F11503 		add	r3, r4, #21
 6971 002c 0093     		str	r3, [sp]
 6972 002e 04F11403 		add	r3, r4, #20
 6973 0032 04F11302 		add	r2, r4, #19
 6974 0036 04F11201 		add	r1, r4, #18
 6975 003a FFF7FEFF 		bl	Fill_Energy
 6976              	.LVL856:
2102:../user/source/DLT645.c ****     energy_F2 = vNow_Frozen_Modify_Mothod(energy_F2, FLASH_REAL_1DAYFROZEN_ADDR + 8, FLASH_MODIFIED
 6977              		.loc 1 2102 0
 6978 003e 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 6979 0040 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 6980 0042 E17D     		ldrb	r1, [r4, #23]	@ zero_extendqisi2
 6981 0044 A07D     		ldrb	r0, [r4, #22]	@ zero_extendqisi2
 6982 0046 FFF7FEFF 		bl	Get_Energy
 6983              	.LVL857:
2103:../user/source/DLT645.c ****     Fill_Energy(energy_F2, &pucBuffer[22], &pucBuffer[23], &pucBuffer[24], &pucBuffer[25]);
 6984              		.loc 1 2103 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 189


 6985 004a 3B4A     		ldr	r2, .L474+12
 6986 004c 3B49     		ldr	r1, .L474+16
 6987 004e FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6988              	.LVL858:
 6989 0052 0646     		mov	r6, r0
 6990              	.LVL859:
2104:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦Æ½·ÑÂÊµçÁ¿*/
 6991              		.loc 1 2104 0
 6992 0054 04F11903 		add	r3, r4, #25
 6993 0058 0093     		str	r3, [sp]
 6994 005a 04F11803 		add	r3, r4, #24
 6995 005e 04F11702 		add	r2, r4, #23
 6996 0062 04F11601 		add	r1, r4, #22
 6997 0066 FFF7FEFF 		bl	Fill_Energy
 6998              	.LVL860:
2106:../user/source/DLT645.c ****     energy_F3 = vNow_Frozen_Modify_Mothod(energy_F3, FLASH_REAL_1DAYFROZEN_ADDR + 12, FLASH_MODIFIE
 6999              		.loc 1 2106 0
 7000 006a 637F     		ldrb	r3, [r4, #29]	@ zero_extendqisi2
 7001 006c 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 7002 006e E17E     		ldrb	r1, [r4, #27]	@ zero_extendqisi2
 7003 0070 A07E     		ldrb	r0, [r4, #26]	@ zero_extendqisi2
 7004 0072 FFF7FEFF 		bl	Get_Energy
 7005              	.LVL861:
2107:../user/source/DLT645.c ****     Fill_Energy(energy_F3, &pucBuffer[26], &pucBuffer[27], &pucBuffer[28], &pucBuffer[29]);
 7006              		.loc 1 2107 0
 7007 0076 324A     		ldr	r2, .L474+20
 7008 0078 3249     		ldr	r1, .L474+24
 7009 007a FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 7010              	.LVL862:
 7011 007e 0546     		mov	r5, r0
 7012              	.LVL863:
2108:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦¹È·ÑÂÊµçÁ¿*/
 7013              		.loc 1 2108 0
 7014 0080 04F11D03 		add	r3, r4, #29
 7015 0084 0093     		str	r3, [sp]
 7016 0086 04F11C03 		add	r3, r4, #28
 7017 008a 04F11B02 		add	r2, r4, #27
 7018 008e 04F11A01 		add	r1, r4, #26
 7019 0092 FFF7FEFF 		bl	Fill_Energy
 7020              	.LVL864:
2110:../user/source/DLT645.c ****     energy_F4 = vNow_Frozen_Modify_Mothod(energy_F4, FLASH_REAL_1DAYFROZEN_ADDR + 16, FLASH_MODIFIE
 7021              		.loc 1 2110 0
 7022 0096 94F82130 		ldrb	r3, [r4, #33]	@ zero_extendqisi2
 7023 009a 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 7024 009e E17F     		ldrb	r1, [r4, #31]	@ zero_extendqisi2
 7025 00a0 A07F     		ldrb	r0, [r4, #30]	@ zero_extendqisi2
 7026 00a2 FFF7FEFF 		bl	Get_Energy
 7027              	.LVL865:
2111:../user/source/DLT645.c ****     Fill_Energy(energy_F4, &pucBuffer[30], &pucBuffer[31], &pucBuffer[32], &pucBuffer[33]);
 7028              		.loc 1 2111 0
 7029 00a6 284A     		ldr	r2, .L474+28
 7030 00a8 2849     		ldr	r1, .L474+32
 7031 00aa FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 7032              	.LVL866:
 7033 00ae 0746     		mov	r7, r0
 7034              	.LVL867:
2112:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×ÜµçÁ¿*/
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 190


 7035              		.loc 1 2112 0
 7036 00b0 04F12103 		add	r3, r4, #33
 7037 00b4 0093     		str	r3, [sp]
 7038 00b6 04F12003 		add	r3, r4, #32
 7039 00ba 04F11F02 		add	r2, r4, #31
 7040 00be 04F11E01 		add	r1, r4, #30
 7041 00c2 FFF7FEFF 		bl	Fill_Energy
 7042              	.LVL868:
2115:../user/source/DLT645.c ****     /*´æ´¢ÕæÊµÖµ*/
 7043              		.loc 1 2115 0
 7044 00c6 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 7045 00c8 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 7046 00ca E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
 7047 00cc A07B     		ldrb	r0, [r4, #14]	@ zero_extendqisi2
 7048 00ce FFF7FEFF 		bl	Get_Energy
 7049              	.LVL869:
2117:../user/source/DLT645.c ****     /*¼ÆËãĞŞ¸ÄºóµÄÖµ*/
 7050              		.loc 1 2117 0
 7051 00d2 0146     		mov	r1, r0
 7052 00d4 1E48     		ldr	r0, .L474+36
 7053              	.LVL870:
 7054 00d6 FFF7FEFF 		bl	Flash_Write_Word
 7055              	.LVL871:
2119:../user/source/DLT645.c ****     /*´æ´¢ĞŞ¸ÄºóµÄÖµ*/
 7056              		.loc 1 2119 0
 7057 00da 4644     		add	r6, r6, r8
 7058              	.LVL872:
 7059 00dc 2E44     		add	r6, r6, r5
 7060 00de BD19     		adds	r5, r7, r6
 7061              	.LVL873:
2121:../user/source/DLT645.c ****     /*×éÖ¡*/
 7062              		.loc 1 2121 0
 7063 00e0 2946     		mov	r1, r5
 7064 00e2 1C48     		ldr	r0, .L474+40
 7065 00e4 FFF7FEFF 		bl	Flash_Write_Word
 7066              	.LVL874:
2123:../user/source/DLT645.c **** 
 7067              		.loc 1 2123 0
 7068 00e8 04F11103 		add	r3, r4, #17
 7069 00ec 0093     		str	r3, [sp]
 7070 00ee 04F11003 		add	r3, r4, #16
 7071 00f2 04F10F02 		add	r2, r4, #15
 7072 00f6 04F10E01 		add	r1, r4, #14
 7073 00fa 2846     		mov	r0, r5
 7074 00fc FFF7FEFF 		bl	Fill_Energy
 7075              	.LVL875:
2125:../user/source/DLT645.c ****     for (i = 0; i < 34; i++)
 7076              		.loc 1 2125 0
 7077 0100 0023     		movs	r3, #0
 7078 0102 84F82230 		strb	r3, [r4, #34]
 7079              	.LVL876:
2126:../user/source/DLT645.c ****     {
 7080              		.loc 1 2126 0
 7081 0106 07E0     		b	.L470
 7082              	.LVL877:
 7083              	.L471:
2128:../user/source/DLT645.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 191


 7084              		.loc 1 2128 0 discriminator 3
 7085 0108 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 7086 010a 94F82220 		ldrb	r2, [r4, #34]	@ zero_extendqisi2
 7087 010e 0A44     		add	r2, r2, r1
 7088 0110 84F82220 		strb	r2, [r4, #34]
2126:../user/source/DLT645.c ****     {
 7089              		.loc 1 2126 0 discriminator 3
 7090 0114 0133     		adds	r3, r3, #1
 7091              	.LVL878:
 7092 0116 9BB2     		uxth	r3, r3
 7093              	.LVL879:
 7094              	.L470:
2126:../user/source/DLT645.c ****     {
 7095              		.loc 1 2126 0 is_stmt 0 discriminator 1
 7096 0118 212B     		cmp	r3, #33
 7097 011a F5D9     		bls	.L471
2130:../user/source/DLT645.c **** }
 7098              		.loc 1 2130 0 is_stmt 1
 7099 011c 1623     		movs	r3, #22
 7100              	.LVL880:
 7101 011e 84F82330 		strb	r3, [r4, #35]
2131:../user/source/DLT645.c **** 
 7102              		.loc 1 2131 0
 7103 0122 02B0     		add	sp, sp, #8
 7104              	.LCFI59:
 7105              		.cfi_def_cfa_offset 24
 7106              		@ sp needed
 7107 0124 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 7108              	.LVL881:
 7109              	.L473:
 7110              	.LCFI60:
 7111              		.cfi_def_cfa_offset 0
 7112              		.cfi_restore 4
 7113              		.cfi_restore 5
 7114              		.cfi_restore 6
 7115              		.cfi_restore 7
 7116              		.cfi_restore 8
 7117              		.cfi_restore 14
 7118 0128 7047     		bx	lr
 7119              	.L475:
 7120 012a 00BF     		.align	2
 7121              	.L474:
 7122 012c 00000000 		.word	.LANCHOR10
 7123 0130 40200308 		.word	134422592
 7124 0134 04200308 		.word	134422532
 7125 0138 44200308 		.word	134422596
 7126 013c 08200308 		.word	134422536
 7127 0140 48200308 		.word	134422600
 7128 0144 0C200308 		.word	134422540
 7129 0148 4C200308 		.word	134422604
 7130 014c 10200308 		.word	134422544
 7131 0150 00200308 		.word	134422528
 7132 0154 3C200308 		.word	134422588
 7133              		.cfi_endproc
 7134              	.LFE149:
 7136              		.section	.text.vAccountEnergy_Modify_Mothod,"ax",%progbits
 7137              		.align	2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 192


 7138              		.global	vAccountEnergy_Modify_Mothod
 7139              		.thumb
 7140              		.thumb_func
 7142              	vAccountEnergy_Modify_Mothod:
 7143              	.LFB150:
2142:../user/source/DLT645.c ****     uint64_t i;
 7144              		.loc 1 2142 0
 7145              		.cfi_startproc
 7146              		@ args = 0, pretend = 0, frame = 0
 7147              		@ frame_needed = 0, uses_anonymous_args = 0
 7148              	.LVL882:
 7149 0000 08B5     		push	{r3, lr}
 7150              	.LCFI61:
 7151              		.cfi_def_cfa_offset 8
 7152              		.cfi_offset 3, -8
 7153              		.cfi_offset 14, -4
2144:../user/source/DLT645.c ****     return (uint32_t)(i / 100);
 7154              		.loc 1 2144 0
 7155 0002 044B     		ldr	r3, .L478
 7156 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7157 0006 A0FB0201 		umull	r0, r1, r0, r2
 7158              	.LVL883:
2145:../user/source/DLT645.c **** }
 7159              		.loc 1 2145 0
 7160 000a 6422     		movs	r2, #100
 7161 000c 0023     		movs	r3, #0
 7162 000e FFF7FEFF 		bl	__aeabi_uldivmod
 7163              	.LVL884:
2146:../user/source/DLT645.c **** 
 7164              		.loc 1 2146 0
 7165 0012 08BD     		pop	{r3, pc}
 7166              	.L479:
 7167              		.align	2
 7168              	.L478:
 7169 0014 00000000 		.word	ucDayfrozen_Modify_Ratio
 7170              		.cfi_endproc
 7171              	.LFE150:
 7173              		.section	.text.vAccountEnergy_Modify,"ax",%progbits
 7174              		.align	2
 7175              		.global	vAccountEnergy_Modify
 7176              		.thumb
 7177              		.thumb_func
 7179              	vAccountEnergy_Modify:
 7180              	.LFB151:
2166:../user/source/DLT645.c ****     int energy;
 7181              		.loc 1 2166 0
 7182              		.cfi_startproc
 7183              		@ args = 0, pretend = 0, frame = 0
 7184              		@ frame_needed = 0, uses_anonymous_args = 0
 7185              	.LVL885:
2169:../user/source/DLT645.c ****         return;
 7186              		.loc 1 2169 0
 7187 0000 504B     		ldr	r3, .L489
 7188 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7189 0004 002B     		cmp	r3, #0
 7190 0006 00F09B80 		beq	.L488
2166:../user/source/DLT645.c ****     int energy;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 193


 7191              		.loc 1 2166 0
 7192 000a 10B5     		push	{r4, lr}
 7193              	.LCFI62:
 7194              		.cfi_def_cfa_offset 8
 7195              		.cfi_offset 4, -8
 7196              		.cfi_offset 14, -4
 7197 000c 82B0     		sub	sp, sp, #8
 7198              	.LCFI63:
 7199              		.cfi_def_cfa_offset 16
 7200 000e 0446     		mov	r4, r0
2171:../user/source/DLT645.c ****     {
 7201              		.loc 1 2171 0
 7202 0010 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 7203 0012 322B     		cmp	r3, #50
 7204 0014 72D1     		bne	.L482
2174:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 7205              		.loc 1 2174 0
 7206 0016 437C     		ldrb	r3, [r0, #17]	@ zero_extendqisi2
 7207 0018 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 7208 001a C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 7209 001c 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 7210              	.LVL886:
 7211 001e FFF7FEFF 		bl	Get_Energy
 7212              	.LVL887:
2175:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
 7213              		.loc 1 2175 0
 7214 0022 FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 7215              	.LVL888:
2176:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦¼â·ÑÂÊµçÁ¿*/
 7216              		.loc 1 2176 0
 7217 0026 04F11103 		add	r3, r4, #17
 7218 002a 0093     		str	r3, [sp]
 7219 002c 04F11003 		add	r3, r4, #16
 7220 0030 04F10F02 		add	r2, r4, #15
 7221 0034 04F10E01 		add	r1, r4, #14
 7222 0038 FFF7FEFF 		bl	Fill_Energy
 7223              	.LVL889:
2178:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 7224              		.loc 1 2178 0
 7225 003c 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 7226 003e 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 7227 0040 E17C     		ldrb	r1, [r4, #19]	@ zero_extendqisi2
 7228 0042 A07C     		ldrb	r0, [r4, #18]	@ zero_extendqisi2
 7229 0044 FFF7FEFF 		bl	Get_Energy
 7230              	.LVL890:
2179:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[18], &pucBuffer[19], &pucBuffer[20], &pucBuffer[21]);
 7231              		.loc 1 2179 0
 7232 0048 FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 7233              	.LVL891:
2180:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦·å·ÑÂÊµçÁ¿*/
 7234              		.loc 1 2180 0
 7235 004c 04F11503 		add	r3, r4, #21
 7236 0050 0093     		str	r3, [sp]
 7237 0052 04F11403 		add	r3, r4, #20
 7238 0056 04F11302 		add	r2, r4, #19
 7239 005a 04F11201 		add	r1, r4, #18
 7240 005e FFF7FEFF 		bl	Fill_Energy
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 194


 7241              	.LVL892:
2182:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 7242              		.loc 1 2182 0
 7243 0062 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 7244 0064 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 7245 0066 E17D     		ldrb	r1, [r4, #23]	@ zero_extendqisi2
 7246 0068 A07D     		ldrb	r0, [r4, #22]	@ zero_extendqisi2
 7247 006a FFF7FEFF 		bl	Get_Energy
 7248              	.LVL893:
2183:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[22], &pucBuffer[23], &pucBuffer[24], &pucBuffer[25]);
 7249              		.loc 1 2183 0
 7250 006e FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 7251              	.LVL894:
2184:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦Æ½·ÑÂÊµçÁ¿*/
 7252              		.loc 1 2184 0
 7253 0072 04F11903 		add	r3, r4, #25
 7254 0076 0093     		str	r3, [sp]
 7255 0078 04F11803 		add	r3, r4, #24
 7256 007c 04F11702 		add	r2, r4, #23
 7257 0080 04F11601 		add	r1, r4, #22
 7258 0084 FFF7FEFF 		bl	Fill_Energy
 7259              	.LVL895:
2186:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 7260              		.loc 1 2186 0
 7261 0088 637F     		ldrb	r3, [r4, #29]	@ zero_extendqisi2
 7262 008a 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 7263 008c E17E     		ldrb	r1, [r4, #27]	@ zero_extendqisi2
 7264 008e A07E     		ldrb	r0, [r4, #26]	@ zero_extendqisi2
 7265 0090 FFF7FEFF 		bl	Get_Energy
 7266              	.LVL896:
2187:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[26], &pucBuffer[27], &pucBuffer[28], &pucBuffer[29]);
 7267              		.loc 1 2187 0
 7268 0094 FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 7269              	.LVL897:
2188:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦¹È·ÑÂÊµçÁ¿*/
 7270              		.loc 1 2188 0
 7271 0098 04F11D03 		add	r3, r4, #29
 7272 009c 0093     		str	r3, [sp]
 7273 009e 04F11C03 		add	r3, r4, #28
 7274 00a2 04F11B02 		add	r2, r4, #27
 7275 00a6 04F11A01 		add	r1, r4, #26
 7276 00aa FFF7FEFF 		bl	Fill_Energy
 7277              	.LVL898:
2190:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 7278              		.loc 1 2190 0
 7279 00ae 94F82130 		ldrb	r3, [r4, #33]	@ zero_extendqisi2
 7280 00b2 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 7281 00b6 E17F     		ldrb	r1, [r4, #31]	@ zero_extendqisi2
 7282 00b8 A07F     		ldrb	r0, [r4, #30]	@ zero_extendqisi2
 7283 00ba FFF7FEFF 		bl	Get_Energy
 7284              	.LVL899:
2191:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[30], &pucBuffer[31], &pucBuffer[32], &pucBuffer[33]);
 7285              		.loc 1 2191 0
 7286 00be FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 7287              	.LVL900:
2192:../user/source/DLT645.c **** 
 7288              		.loc 1 2192 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 195


 7289 00c2 04F12103 		add	r3, r4, #33
 7290 00c6 0093     		str	r3, [sp]
 7291 00c8 04F12003 		add	r3, r4, #32
 7292 00cc 04F11F02 		add	r2, r4, #31
 7293 00d0 04F11E01 		add	r1, r4, #30
 7294 00d4 FFF7FEFF 		bl	Fill_Energy
 7295              	.LVL901:
2194:../user/source/DLT645.c ****         for (i = 0; i < 34; i++)
 7296              		.loc 1 2194 0
 7297 00d8 0023     		movs	r3, #0
 7298 00da 84F82230 		strb	r3, [r4, #34]
 7299              	.LVL902:
2195:../user/source/DLT645.c ****         {
 7300              		.loc 1 2195 0
 7301 00de 07E0     		b	.L483
 7302              	.LVL903:
 7303              	.L484:
2197:../user/source/DLT645.c ****         }
 7304              		.loc 1 2197 0 discriminator 3
 7305 00e0 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 7306 00e2 94F82220 		ldrb	r2, [r4, #34]	@ zero_extendqisi2
 7307 00e6 0A44     		add	r2, r2, r1
 7308 00e8 84F82220 		strb	r2, [r4, #34]
2195:../user/source/DLT645.c ****         {
 7309              		.loc 1 2195 0 discriminator 3
 7310 00ec 0133     		adds	r3, r3, #1
 7311              	.LVL904:
 7312 00ee 9BB2     		uxth	r3, r3
 7313              	.LVL905:
 7314              	.L483:
2195:../user/source/DLT645.c ****         {
 7315              		.loc 1 2195 0 is_stmt 0 discriminator 1
 7316 00f0 212B     		cmp	r3, #33
 7317 00f2 F5D9     		bls	.L484
2199:../user/source/DLT645.c ****     }
 7318              		.loc 1 2199 0 is_stmt 1
 7319 00f4 1623     		movs	r3, #22
 7320              	.LVL906:
 7321 00f6 84F82330 		strb	r3, [r4, #35]
 7322 00fa 1FE0     		b	.L480
 7323              	.LVL907:
 7324              	.L482:
2203:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 7325              		.loc 1 2203 0
 7326 00fc 437C     		ldrb	r3, [r0, #17]	@ zero_extendqisi2
 7327 00fe 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 7328 0100 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 7329 0102 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 7330              	.LVL908:
 7331 0104 FFF7FEFF 		bl	Get_Energy
 7332              	.LVL909:
2204:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
 7333              		.loc 1 2204 0
 7334 0108 FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 7335              	.LVL910:
2205:../user/source/DLT645.c **** 
 7336              		.loc 1 2205 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 196


 7337 010c 04F11103 		add	r3, r4, #17
 7338 0110 0093     		str	r3, [sp]
 7339 0112 04F11003 		add	r3, r4, #16
 7340 0116 04F10F02 		add	r2, r4, #15
 7341 011a 04F10E01 		add	r1, r4, #14
 7342 011e FFF7FEFF 		bl	Fill_Energy
 7343              	.LVL911:
2207:../user/source/DLT645.c ****         for (i = 0; i < 18; i++)
 7344              		.loc 1 2207 0
 7345 0122 0023     		movs	r3, #0
 7346 0124 A374     		strb	r3, [r4, #18]
 7347              	.LVL912:
2208:../user/source/DLT645.c ****         {
 7348              		.loc 1 2208 0
 7349 0126 05E0     		b	.L485
 7350              	.LVL913:
 7351              	.L486:
2210:../user/source/DLT645.c ****         }
 7352              		.loc 1 2210 0 discriminator 3
 7353 0128 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 7354 012a A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 7355 012c 0A44     		add	r2, r2, r1
 7356 012e A274     		strb	r2, [r4, #18]
2208:../user/source/DLT645.c ****         {
 7357              		.loc 1 2208 0 discriminator 3
 7358 0130 0133     		adds	r3, r3, #1
 7359              	.LVL914:
 7360 0132 9BB2     		uxth	r3, r3
 7361              	.LVL915:
 7362              	.L485:
2208:../user/source/DLT645.c ****         {
 7363              		.loc 1 2208 0 is_stmt 0 discriminator 1
 7364 0134 112B     		cmp	r3, #17
 7365 0136 F7D9     		bls	.L486
2212:../user/source/DLT645.c ****     }
 7366              		.loc 1 2212 0 is_stmt 1
 7367 0138 1623     		movs	r3, #22
 7368              	.LVL916:
 7369 013a E374     		strb	r3, [r4, #19]
 7370              	.L480:
2214:../user/source/DLT645.c **** 
 7371              		.loc 1 2214 0
 7372 013c 02B0     		add	sp, sp, #8
 7373              	.LCFI64:
 7374              		.cfi_def_cfa_offset 8
 7375              		@ sp needed
 7376 013e 10BD     		pop	{r4, pc}
 7377              	.LVL917:
 7378              	.L488:
 7379              	.LCFI65:
 7380              		.cfi_def_cfa_offset 0
 7381              		.cfi_restore 4
 7382              		.cfi_restore 14
 7383 0140 7047     		bx	lr
 7384              	.L490:
 7385 0142 00BF     		.align	2
 7386              	.L489:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 197


 7387 0144 00000000 		.word	.LANCHOR10
 7388              		.cfi_endproc
 7389              	.LFE151:
 7391              		.comm	TransFormer,16,4
 7392              		.global	Ccurrent
 7393              		.global	Bcurrent
 7394              		.global	Acurrent
 7395              		.global	C_Voltage
 7396              		.global	B_Voltage
 7397              		.global	A_Voltage
 7398              		.comm	Voltage_MIN,4,4
 7399              		.comm	Voltage_MAX,4,4
 7400              		.comm	ucDayfrozen_Modify_Ratio,1,1
 7401              		.global	Dayfrozen_Change_State
 7402              		.global	Voltage_Change_State
 7403              		.global	uc645DataDomainLength
 7404              		.global	ucRcvStatus
 7405              		.comm	Voltage_Frame_Status,1,1
 7406              		.global	DBDataID_Handle_List
 7407              		.global	INFRDataID_Handle_List
 7408              		.comm	ucApp_Buf_INFR,1000,4
 7409              		.comm	ucApp_Buf_ZD2DB,1000,4
 7410              		.comm	ucApp_Buf_DB2ZD,1000,4
 7411              		.global	pUartIR
 7412              		.global	pUartDB
 7413              		.global	pUartZD
 7414              		.section	.data.C_Voltage,"aw",%progbits
 7415              		.align	2
 7416              		.set	.LANCHOR9,. + 0
 7419              	C_Voltage:
 7420 0000 98080000 		.word	2200
 7421              		.section	.bss.Uart3_Sndbuf,"aw",%nobits
 7422              		.align	2
 7425              	Uart3_Sndbuf:
 7426 0000 00000000 		.space	1008
 7426      00000000 
 7426      00000000 
 7426      00000000 
 7426      00000000 
 7427              		.section	.rodata.DBDataID_Handle_List,"a",%progbits
 7428              		.align	2
 7429              		.set	.LANCHOR12,. + 0
 7432              	DBDataID_Handle_List:
 7433 0000 33       		.byte	51
 7434 0001 34       		.byte	52
 7435 0002 34       		.byte	52
 7436 0003 35       		.byte	53
 7437 0004 00000000 		.word	vVoltageHandle
 7438 0008 33       		.byte	51
 7439 0009 35       		.byte	53
 7440 000a 34       		.byte	52
 7441 000b 35       		.byte	53
 7442 000c 00000000 		.word	vVoltageHandle
 7443 0010 33       		.byte	51
 7444 0011 36       		.byte	54
 7445 0012 34       		.byte	52
 7446 0013 35       		.byte	53
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 198


 7447 0014 00000000 		.word	vVoltageHandle
 7448 0018 33       		.byte	51
 7449 0019 32       		.byte	50
 7450 001a 34       		.byte	52
 7451 001b 35       		.byte	53
 7452 001c 00000000 		.word	vVoltageHandle
 7453 0020 37       		.byte	55
 7454 0021 38       		.byte	56
 7455 0022 33       		.byte	51
 7456 0023 38       		.byte	56
 7457 0024 00000000 		.word	Estatus_Modify_CurrentEvent
 7458 0028 38       		.byte	56
 7459 0029 38       		.byte	56
 7460 002a 33       		.byte	51
 7461 002b 38       		.byte	56
 7462 002c 00000000 		.word	Estatus_Modify_CurrentEvent
 7463 0030 39       		.byte	57
 7464 0031 38       		.byte	56
 7465 0032 33       		.byte	51
 7466 0033 38       		.byte	56
 7467 0034 00000000 		.word	Estatus_Modify_CurrentEvent
 7468 0038 3A       		.byte	58
 7469 0039 38       		.byte	56
 7470 003a 33       		.byte	51
 7471 003b 38       		.byte	56
 7472 003c 00000000 		.word	Estatus_Modify_CurrentEvent
 7473 0040 32       		.byte	50
 7474 0041 38       		.byte	56
 7475 0042 33       		.byte	51
 7476 0043 38       		.byte	56
 7477 0044 00000000 		.word	Estatus_Modify_CurrentEvent
 7478 0048 33       		.byte	51
 7479 0049 33       		.byte	51
 7480 004a 34       		.byte	52
 7481 004b 33       		.byte	51
 7482 004c 00000000 		.word	vNowEnergy_Modifier
 7483 0050 33       		.byte	51
 7484 0051 34       		.byte	52
 7485 0052 34       		.byte	52
 7486 0053 33       		.byte	51
 7487 0054 00000000 		.word	vNowEnergy_Modifier
 7488 0058 33       		.byte	51
 7489 0059 35       		.byte	53
 7490 005a 34       		.byte	52
 7491 005b 33       		.byte	51
 7492 005c 00000000 		.word	vNowEnergy_Modifier
 7493 0060 33       		.byte	51
 7494 0061 36       		.byte	54
 7495 0062 34       		.byte	52
 7496 0063 33       		.byte	51
 7497 0064 00000000 		.word	vNowEnergy_Modifier
 7498 0068 33       		.byte	51
 7499 0069 37       		.byte	55
 7500 006a 34       		.byte	52
 7501 006b 33       		.byte	51
 7502 006c 00000000 		.word	vNowEnergy_Modifier
 7503 0070 33       		.byte	51
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 199


 7504 0071 32       		.byte	50
 7505 0072 34       		.byte	52
 7506 0073 33       		.byte	51
 7507 0074 00000000 		.word	vNowEnergy_Modifier
 7508 0078 33       		.byte	51
 7509 0079 33       		.byte	51
 7510 007a 48       		.byte	72
 7511 007b 33       		.byte	51
 7512 007c 00000000 		.word	vNowEnergy_Modifier
 7513 0080 33       		.byte	51
 7514 0081 33       		.byte	51
 7515 0082 5C       		.byte	92
 7516 0083 33       		.byte	51
 7517 0084 00000000 		.word	vNowEnergy_Modifier
 7518 0088 33       		.byte	51
 7519 0089 33       		.byte	51
 7520 008a 70       		.byte	112
 7521 008b 33       		.byte	51
 7522 008c 00000000 		.word	vNowEnergy_Modifier
 7523 0090 34       		.byte	52
 7524 0091 34       		.byte	52
 7525 0092 39       		.byte	57
 7526 0093 38       		.byte	56
 7527 0094 00000000 		.word	vDayfrozen_Modifier
 7528 0098 35       		.byte	53
 7529 0099 34       		.byte	52
 7530 009a 39       		.byte	57
 7531 009b 38       		.byte	56
 7532 009c 00000000 		.word	vDayfrozen_Modifier
 7533 00a0 36       		.byte	54
 7534 00a1 34       		.byte	52
 7535 00a2 39       		.byte	57
 7536 00a3 38       		.byte	56
 7537 00a4 00000000 		.word	vDayfrozen_Modifier
 7538 00a8 34       		.byte	52
 7539 00a9 33       		.byte	51
 7540 00aa 34       		.byte	52
 7541 00ab 33       		.byte	51
 7542 00ac 00000000 		.word	vAccountEnergy_Modify
 7543 00b0 34       		.byte	52
 7544 00b1 34       		.byte	52
 7545 00b2 34       		.byte	52
 7546 00b3 33       		.byte	51
 7547 00b4 00000000 		.word	vAccountEnergy_Modify
 7548 00b8 34       		.byte	52
 7549 00b9 35       		.byte	53
 7550 00ba 34       		.byte	52
 7551 00bb 33       		.byte	51
 7552 00bc 00000000 		.word	vAccountEnergy_Modify
 7553 00c0 34       		.byte	52
 7554 00c1 36       		.byte	54
 7555 00c2 34       		.byte	52
 7556 00c3 33       		.byte	51
 7557 00c4 00000000 		.word	vAccountEnergy_Modify
 7558 00c8 34       		.byte	52
 7559 00c9 37       		.byte	55
 7560 00ca 34       		.byte	52
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 200


 7561 00cb 33       		.byte	51
 7562 00cc 00000000 		.word	vAccountEnergy_Modify
 7563 00d0 34       		.byte	52
 7564 00d1 32       		.byte	50
 7565 00d2 34       		.byte	52
 7566 00d3 33       		.byte	51
 7567 00d4 00000000 		.word	vAccountEnergy_Modify
 7568 00d8 34       		.byte	52
 7569 00d9 33       		.byte	51
 7570 00da 48       		.byte	72
 7571 00db 33       		.byte	51
 7572 00dc 00000000 		.word	vAccountEnergy_Modify
 7573 00e0 34       		.byte	52
 7574 00e1 33       		.byte	51
 7575 00e2 5C       		.byte	92
 7576 00e3 33       		.byte	51
 7577 00e4 00000000 		.word	vAccountEnergy_Modify
 7578 00e8 34       		.byte	52
 7579 00e9 33       		.byte	51
 7580 00ea 70       		.byte	112
 7581 00eb 33       		.byte	51
 7582 00ec 00000000 		.word	vAccountEnergy_Modify
 7583 00f0 33       		.byte	51
 7584 00f1 37       		.byte	55
 7585 00f2 34       		.byte	52
 7586 00f3 35       		.byte	53
 7587 00f4 00000000 		.word	Get_VChange_State
 7588 00f8 33       		.byte	51
 7589 00f9 38       		.byte	56
 7590 00fa 34       		.byte	52
 7591 00fb 35       		.byte	53
 7592 00fc 00000000 		.word	Set_Voltage_Limit
 7593 0100 33       		.byte	51
 7594 0101 39       		.byte	57
 7595 0102 34       		.byte	52
 7596 0103 35       		.byte	53
 7597 0104 00000000 		.word	Query_Voltage_Limit
 7598 0108 33       		.byte	51
 7599 0109 3A       		.byte	58
 7600 010a 34       		.byte	52
 7601 010b 35       		.byte	53
 7602 010c 00000000 		.word	Default_Reset
 7603 0110 33       		.byte	51
 7604 0111 37       		.byte	55
 7605 0112 35       		.byte	53
 7606 0113 35       		.byte	53
 7607 0114 00000000 		.word	vCurrent_Limit_Set
 7608 0118 33       		.byte	51
 7609 0119 38       		.byte	56
 7610 011a 35       		.byte	53
 7611 011b 35       		.byte	53
 7612 011c 00000000 		.word	vCurrent_Limit_ReadSet
 7613 0120 33       		.byte	51
 7614 0121 39       		.byte	57
 7615 0122 35       		.byte	53
 7616 0123 35       		.byte	53
 7617 0124 00000000 		.word	vCurrent_CTRatio_Set
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 201


 7618 0128 33       		.byte	51
 7619 0129 3A       		.byte	58
 7620 012a 35       		.byte	53
 7621 012b 35       		.byte	53
 7622 012c 00000000 		.word	vCurrent_CTRatio_ReadSet
 7623 0130 33       		.byte	51
 7624 0131 3B       		.byte	59
 7625 0132 35       		.byte	53
 7626 0133 35       		.byte	53
 7627 0134 00000000 		.word	vCurrent_TransFormer_Capacity_ReadSet
 7628 0138 33       		.byte	51
 7629 0139 73       		.byte	115
 7630 013a 34       		.byte	52
 7631 013b 33       		.byte	51
 7632 013c 00000000 		.word	vEnergy_Modify_AbleSet
 7633 0140 33       		.byte	51
 7634 0141 74       		.byte	116
 7635 0142 34       		.byte	52
 7636 0143 33       		.byte	51
 7637 0144 00000000 		.word	vEnergy_Modify_RaitoSet
 7638 0148 33       		.byte	51
 7639 0149 75       		.byte	117
 7640 014a 34       		.byte	52
 7641 014b 33       		.byte	51
 7642 014c 00000000 		.word	vEnergy_Modify_Reset
 7643 0150 33       		.byte	51
 7644 0151 76       		.byte	118
 7645 0152 34       		.byte	52
 7646 0153 33       		.byte	51
 7647 0154 00000000 		.word	vEnergy_Modify_ReadSet
 7648 0158 33       		.byte	51
 7649 0159 77       		.byte	119
 7650 015a 34       		.byte	52
 7651 015b 33       		.byte	51
 7652 015c 00000000 		.word	vEnergy_Modify_ReadValue
 7653 0160 33       		.byte	51
 7654 0161 34       		.byte	52
 7655 0162 43       		.byte	67
 7656 0163 39       		.byte	57
 7657 0164 00000000 		.word	vLoadProfile_Voltage_Modify
 7658 0168 34       		.byte	52
 7659 0169 34       		.byte	52
 7660 016a 43       		.byte	67
 7661 016b 39       		.byte	57
 7662 016c 00000000 		.word	vLoadProfile_Voltage_Modify
 7663 0170 35       		.byte	53
 7664 0171 34       		.byte	52
 7665 0172 43       		.byte	67
 7666 0173 39       		.byte	57
 7667 0174 00000000 		.word	vLoadProfile_Voltage_Modify
 7668 0178 32       		.byte	50
 7669 0179 34       		.byte	52
 7670 017a 43       		.byte	67
 7671 017b 39       		.byte	57
 7672 017c 00000000 		.word	vLoadProfile_Voltage_Modify
 7673 0180 33       		.byte	51
 7674 0181 35       		.byte	53
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 202


 7675 0182 43       		.byte	67
 7676 0183 39       		.byte	57
 7677 0184 00000000 		.word	vLoadProfile_Current_Modify
 7678 0188 34       		.byte	52
 7679 0189 35       		.byte	53
 7680 018a 43       		.byte	67
 7681 018b 39       		.byte	57
 7682 018c 00000000 		.word	vLoadProfile_Current_Modify
 7683 0190 35       		.byte	53
 7684 0191 35       		.byte	53
 7685 0192 43       		.byte	67
 7686 0193 39       		.byte	57
 7687 0194 00000000 		.word	vLoadProfile_Current_Modify
 7688 0198 32       		.byte	50
 7689 0199 35       		.byte	53
 7690 019a 43       		.byte	67
 7691 019b 39       		.byte	57
 7692 019c 00000000 		.word	vLoadProfile_Current_Modify
 7693 01a0 32       		.byte	50
 7694 01a1 32       		.byte	50
 7695 01a2 32       		.byte	50
 7696 01a3 32       		.byte	50
 7697 01a4 00000000 		.word	vRead_Version
 7698              		.section	.bss.Uart3_Rsvbuf,"aw",%nobits
 7699              		.align	2
 7702              	Uart3_Rsvbuf:
 7703 0000 00000000 		.space	1008
 7703      00000000 
 7703      00000000 
 7703      00000000 
 7703      00000000 
 7704              		.section	.data.UartDB,"aw",%progbits
 7705              		.align	2
 7708              	UartDB:
 7709 0000 00480040 		.word	1073760256
 7710 0004 00000000 		.word	Uart3_Rsvbuf
 7711 0008 00000000 		.word	Uart3_Sndbuf
 7712              		.section	.data.pUartDB,"aw",%progbits
 7713              		.align	2
 7714              		.set	.LANCHOR6,. + 0
 7717              	pUartDB:
 7718 0000 00000000 		.word	UartDB
 7719              		.section	.bss.Voltage_Change_State,"aw",%nobits
 7720              		.set	.LANCHOR5,. + 0
 7723              	Voltage_Change_State:
 7724 0000 00       		.space	1
 7725              		.section	.data.pUartZD,"aw",%progbits
 7726              		.align	2
 7729              	pUartZD:
 7730 0000 00000000 		.word	UartZD
 7731              		.section	.data.B_Voltage,"aw",%progbits
 7732              		.align	2
 7733              		.set	.LANCHOR8,. + 0
 7736              	B_Voltage:
 7737 0000 98080000 		.word	2200
 7738              		.section	.bss.uc645DataDomainLength,"aw",%nobits
 7739              		.set	.LANCHOR0,. + 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 203


 7742              	uc645DataDomainLength:
 7743 0000 00       		.space	1
 7744              		.section	.bss.Uart1_Rsvbuf,"aw",%nobits
 7745              		.align	2
 7748              	Uart1_Rsvbuf:
 7749 0000 00000000 		.space	1008
 7749      00000000 
 7749      00000000 
 7749      00000000 
 7749      00000000 
 7750              		.section	.bss.Bcurrent,"aw",%nobits
 7751              		.align	2
 7752              		.set	.LANCHOR2,. + 0
 7755              	Bcurrent:
 7756 0000 00000000 		.space	8
 7756      00000000 
 7757              		.section	.data.UartIR,"aw",%progbits
 7758              		.align	2
 7761              	UartIR:
 7762 0000 00440040 		.word	1073759232
 7763 0004 00000000 		.word	Uart2_Rsvbuf
 7764 0008 00000000 		.word	Uart2_Sndbuf
 7765              		.section	.bss.Ccurrent,"aw",%nobits
 7766              		.align	2
 7767              		.set	.LANCHOR3,. + 0
 7770              	Ccurrent:
 7771 0000 00000000 		.space	8
 7771      00000000 
 7772              		.section	.data.Dayfrozen_Change_State,"aw",%progbits
 7773              		.set	.LANCHOR10,. + 0
 7776              	Dayfrozen_Change_State:
 7777 0000 FF       		.byte	-1
 7778              		.section	.data.UartZD,"aw",%progbits
 7779              		.align	2
 7782              	UartZD:
 7783 0000 00380140 		.word	1073821696
 7784 0004 00000000 		.word	Uart1_Rsvbuf
 7785 0008 00000000 		.word	Uart1_Sndbuf
 7786              		.section	.bss.ucRcvStatus,"aw",%nobits
 7787              		.set	.LANCHOR11,. + 0
 7790              	ucRcvStatus:
 7791 0000 00       		.space	1
 7792              		.section	.bss.Acurrent,"aw",%nobits
 7793              		.align	2
 7794              		.set	.LANCHOR1,. + 0
 7797              	Acurrent:
 7798 0000 00000000 		.space	8
 7798      00000000 
 7799              		.section	.bss.Uart2_Rsvbuf,"aw",%nobits
 7800              		.align	2
 7803              	Uart2_Rsvbuf:
 7804 0000 00000000 		.space	1008
 7804      00000000 
 7804      00000000 
 7804      00000000 
 7804      00000000 
 7805              		.section	.data.pUartIR,"aw",%progbits
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 204


 7806              		.align	2
 7807              		.set	.LANCHOR7,. + 0
 7810              	pUartIR:
 7811 0000 00000000 		.word	UartIR
 7812              		.section	.rodata.INFRDataID_Handle_List,"a",%progbits
 7813              		.align	2
 7814              		.set	.LANCHOR13,. + 0
 7817              	INFRDataID_Handle_List:
 7818 0000 33       		.byte	51
 7819 0001 37       		.byte	55
 7820 0002 34       		.byte	52
 7821 0003 35       		.byte	53
 7822 0004 00000000 		.word	Get_VChange_State
 7823 0008 33       		.byte	51
 7824 0009 39       		.byte	57
 7825 000a 34       		.byte	52
 7826 000b 35       		.byte	53
 7827 000c 00000000 		.word	Query_Voltage_Limit
 7828 0010 33       		.byte	51
 7829 0011 3A       		.byte	58
 7830 0012 34       		.byte	52
 7831 0013 35       		.byte	53
 7832 0014 00000000 		.word	Default_Reset
 7833 0018 33       		.byte	51
 7834 0019 3B       		.byte	59
 7835 001a 34       		.byte	52
 7836 001b 35       		.byte	53
 7837 001c 00000000 		.word	vVoltage_SetMaxValue
 7838 0020 33       		.byte	51
 7839 0021 3C       		.byte	60
 7840 0022 34       		.byte	52
 7841 0023 35       		.byte	53
 7842 0024 00000000 		.word	vVoltage_SetMinValue
 7843 0028 33       		.byte	51
 7844 0029 3D       		.byte	61
 7845 002a 34       		.byte	52
 7846 002b 35       		.byte	53
 7847 002c 00000000 		.word	vVoltage_SetMaxMaxValue
 7848 0030 33       		.byte	51
 7849 0031 3E       		.byte	62
 7850 0032 34       		.byte	52
 7851 0033 35       		.byte	53
 7852 0034 00000000 		.word	vVoltage_SetMinMinValue
 7853 0038 33       		.byte	51
 7854 0039 73       		.byte	115
 7855 003a 34       		.byte	52
 7856 003b 33       		.byte	51
 7857 003c 00000000 		.word	vEnergy_Modify_AbleSet
 7858 0040 33       		.byte	51
 7859 0041 74       		.byte	116
 7860 0042 34       		.byte	52
 7861 0043 33       		.byte	51
 7862 0044 00000000 		.word	vEnergy_Modify_RaitoSet
 7863 0048 33       		.byte	51
 7864 0049 75       		.byte	117
 7865 004a 34       		.byte	52
 7866 004b 33       		.byte	51
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 205


 7867 004c 00000000 		.word	vEnergy_Modify_Reset
 7868 0050 33       		.byte	51
 7869 0051 76       		.byte	118
 7870 0052 34       		.byte	52
 7871 0053 33       		.byte	51
 7872 0054 00000000 		.word	vEnergy_Modify_ReadSet
 7873 0058 33       		.byte	51
 7874 0059 37       		.byte	55
 7875 005a 35       		.byte	53
 7876 005b 35       		.byte	53
 7877 005c 00000000 		.word	vCurrent_Limit_Set
 7878 0060 33       		.byte	51
 7879 0061 38       		.byte	56
 7880 0062 35       		.byte	53
 7881 0063 35       		.byte	53
 7882 0064 00000000 		.word	vCurrent_Limit_ReadSet
 7883 0068 33       		.byte	51
 7884 0069 39       		.byte	57
 7885 006a 35       		.byte	53
 7886 006b 35       		.byte	53
 7887 006c 00000000 		.word	vCurrent_CTRatio_Set
 7888 0070 33       		.byte	51
 7889 0071 3A       		.byte	58
 7890 0072 35       		.byte	53
 7891 0073 35       		.byte	53
 7892 0074 00000000 		.word	vCurrent_CTRatio_ReadSet
 7893 0078 33       		.byte	51
 7894 0079 3B       		.byte	59
 7895 007a 35       		.byte	53
 7896 007b 35       		.byte	53
 7897 007c 00000000 		.word	vCurrent_TransFormer_Capacity_ReadSet
 7898 0080 32       		.byte	50
 7899 0081 32       		.byte	50
 7900 0082 32       		.byte	50
 7901 0083 32       		.byte	50
 7902 0084 00000000 		.word	vRead_Version
 7903              		.section	.data.A_Voltage,"aw",%progbits
 7904              		.align	2
 7905              		.set	.LANCHOR4,. + 0
 7908              	A_Voltage:
 7909 0000 98080000 		.word	2200
 7910              		.section	.bss.Uart2_Sndbuf,"aw",%nobits
 7911              		.align	2
 7914              	Uart2_Sndbuf:
 7915 0000 00000000 		.space	1008
 7915      00000000 
 7915      00000000 
 7915      00000000 
 7915      00000000 
 7916              		.section	.bss.Uart1_Sndbuf,"aw",%nobits
 7917              		.align	2
 7920              	Uart1_Sndbuf:
 7921 0000 00000000 		.space	1008
 7921      00000000 
 7921      00000000 
 7921      00000000 
 7921      00000000 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 206


 7922              		.text
 7923              	.Letext0:
 7924              		.file 2 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\machine\\_defaul
 7925              		.file 3 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\sys\\_stdint.h"
 7926              		.file 4 "../cmsis/include/stm32f37x.h"
 7927              		.file 5 "../user/include/BaseDef.h"
 7928              		.file 6 "../user/include/Uart.h"
 7929              		.file 7 "../user/include/DLT645.h"
 7930              		.file 8 "../cmsis/include/core_cm4.h"
 7931              		.file 9 "../user/include/Time.h"
 7932              		.file 10 "../user/include/Flash.h"
 7933              		.file 11 "../stdperiph/include/stm32f37x_usart.h"
 7934              		.file 12 "../stdperiph/include/stm32f37x_flash.h"
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 207


DEFINED SYMBOLS
                            *ABS*:00000000 DLT645.c
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:22     .text.dwCheckFrame:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:26     .text.dwCheckFrame:00000000 dwCheckFrame
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:101    .text.dwCheckFrame:00000044 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:106    .text.BCD_Verity:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:110    .text.BCD_Verity:00000000 BCD_Verity
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:200    .text.Get_Voltage:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:204    .text.Get_Voltage:00000000 Get_Voltage
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:257    .text.vGet_Current:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:261    .text.vGet_Current:00000000 vGet_Current
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:330    .text.vGet_Current:00000058 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:335    .text.vPut_Current:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:339    .text.vPut_Current:00000000 vPut_Current
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:448    .text.vPut_Current:000000b0 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:457    .text.blCurrentSingle_Modify_Method:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:461    .text.blCurrentSingle_Modify_Method:00000000 blCurrentSingle_Modify_Method
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:783    .text.blCurrentSingle_Modify_Method:000001ac $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:789    .text.vCurrentTriple_Modify_Method:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:793    .text.vCurrentTriple_Modify_Method:00000000 vCurrentTriple_Modify_Method
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:840    .text.vCurrent_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:845    .text.vCurrent_Modify:00000000 vCurrent_Modify
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:870    .text.vCurrent_Modify:00000014 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:875    .text.vCurrent_Modify:0000001e $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1268   .text.vCurrent_Modify:0000026c $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1276   .text.vCurrent_Limit_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1281   .text.vCurrent_Limit_Modify:00000000 vCurrent_Limit_Modify
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1294   .text.Get_Estatus:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1298   .text.Get_Estatus:00000000 Get_Estatus
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1322   .text.Estatus_Modify_CurrentEvent:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1327   .text.Estatus_Modify_CurrentEvent:00000000 Estatus_Modify_CurrentEvent
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1348   .text.Estatus_Modify_CurrentEvent:00000010 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1551   .text.Estatus_Modify_CurrentEvent:00000110 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1556   .text.GetLowByte:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1560   .text.GetLowByte:00000000 GetLowByte
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1599   .text.GetLowByte:00000048 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1606   .text.GetHighByte:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1610   .text.GetHighByte:00000000 GetHighByte
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1642   .text.GetHighByte:00000034 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1648   .text.Get_Energy:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1652   .text.Get_Energy:00000000 Get_Energy
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1719   .text.Get_Energy:00000064 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1724   .text.Fill_Energy:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1728   .text.Fill_Energy:00000000 Fill_Energy
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1814   .text.Fill_Energy:000000b8 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1822   .text.vVoltage_SetMaxMaxValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1827   .text.vVoltage_SetMaxMaxValue:00000000 vVoltage_SetMaxMaxValue
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1840   .text.vVoltage_SetMinMinValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1845   .text.vVoltage_SetMinMinValue:00000000 vVoltage_SetMinMinValue
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1858   .text.vLoadProfile_Voltage_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1863   .text.vLoadProfile_Voltage_Modify:00000000 vLoadProfile_Voltage_Modify
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1996   .text.vLoadProfile_Voltage_Modify:000000a0 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:2001   .text.vLoadProfile_Current_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:2006   .text.vLoadProfile_Current_Modify:00000000 vLoadProfile_Current_Modify
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:2019   .text.Get_VChange_State:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:2024   .text.Get_VChange_State:00000000 Get_VChange_State
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:2158   .text.Get_VChange_State:000000a0 $d
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 208


C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:2171   .text.Set_Voltage_Limit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:2176   .text.Set_Voltage_Limit:00000000 Set_Voltage_Limit
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:2336   .text.Set_Voltage_Limit:000000c8 $d
                            *COM*:00000004 Voltage_MAX
                            *COM*:00000004 Voltage_MIN
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:2353   .text.Query_Voltage_Limit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:2358   .text.Query_Voltage_Limit:00000000 Query_Voltage_Limit
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:2503   .text.Query_Voltage_Limit:000000c8 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:2516   .text.Default_Reset:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:2521   .text.Default_Reset:00000000 Default_Reset
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:2679   .text.Default_Reset:000000d8 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:2701   .text.vCurrent_Limit_Set:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:2706   .text.vCurrent_Limit_Set:00000000 vCurrent_Limit_Set
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:2809   .text.vCurrent_Limit_Set:00000078 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:2820   .text.vCurrent_CTRatio_Set:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:2825   .text.vCurrent_CTRatio_Set:00000000 vCurrent_CTRatio_Set
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:2929   .text.vCurrent_CTRatio_Set:00000078 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:2940   .text.vCurrent_Limit_ReadSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:2945   .text.vCurrent_Limit_ReadSet:00000000 vCurrent_Limit_ReadSet
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:3072   .text.vCurrent_Limit_ReadSet:000000a4 $d
                            *COM*:00000010 TransFormer
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:3084   .text.vCurrent_CTRatio_ReadSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:3089   .text.vCurrent_CTRatio_ReadSet:00000000 vCurrent_CTRatio_ReadSet
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:3205   .text.vCurrent_CTRatio_ReadSet:00000090 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:3217   .text.vCurrent_TransFormer_Capacity_ReadSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:3222   .text.vCurrent_TransFormer_Capacity_ReadSet:00000000 vCurrent_TransFormer_Capacity_ReadSet
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:3338   .text.vCurrent_TransFormer_Capacity_ReadSet:00000090 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:3350   .text.vEnergy_Modify_ReadSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:3355   .text.vEnergy_Modify_ReadSet:00000000 vEnergy_Modify_ReadSet
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:3478   .text.vEnergy_Modify_ReadSet:000000a4 $d
                            *COM*:00000001 ucDayfrozen_Modify_Ratio
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:3492   .text.vRead_Version:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:3497   .text.vRead_Version:00000000 vRead_Version
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:3613   .text.vRead_Version:0000008c $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:3624   .text.vEnergy_Modify_RaitoSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:3629   .text.vEnergy_Modify_RaitoSet:00000000 vEnergy_Modify_RaitoSet
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:3782   .text.vEnergy_Modify_RaitoSet:000000d0 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:3795   .text.vVoltage_SetMinValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:3800   .text.vVoltage_SetMinValue:00000000 vVoltage_SetMinValue
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:3933   .text.vVoltage_SetMinValue:000000a0 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:3944   .text.vEnergy_Modify_ReadValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:3949   .text.vEnergy_Modify_ReadValue:00000000 vEnergy_Modify_ReadValue
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:4109   .text.vEnergy_Modify_ReadValue:000000d0 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:4122   .text.vVoltage_SetMaxValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:4127   .text.vVoltage_SetMaxValue:00000000 vVoltage_SetMaxValue
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:4262   .text.vVoltage_SetMaxValue:000000a4 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:4273   .text.vEnergy_Modify_AbleSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:4278   .text.vEnergy_Modify_AbleSet:00000000 vEnergy_Modify_AbleSet
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:4450   .text.vEnergy_Modify_AbleSet:000000d4 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:4464   .text.vEnergy_Modify_Reset:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:4469   .text.vEnergy_Modify_Reset:00000000 vEnergy_Modify_Reset
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:4618   .text.vEnergy_Modify_Reset:000000b0 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:4632   .text.blRecvFrame:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:4637   .text.blRecvFrame:00000000 blRecvFrame
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:4820   .text.blRecvFrame:000000f0 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:4828   .text.vDBDataID_Handle:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:4833   .text.vDBDataID_Handle:00000000 vDBDataID_Handle
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 209


C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:4919   .text.vDBDataID_Handle:00000068 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:4927   .text.vINFRDataID_Handle:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:4932   .text.vINFRDataID_Handle:00000000 vINFRDataID_Handle
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:5006   .text.vINFRDataID_Handle:00000054 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:5011   .text.blVoltage_Create:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:5016   .text.blVoltage_Create:00000000 blVoltage_Create
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:5039   .text.blVoltage_Create:00000012 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:5044   .text.blVoltage_Create:0000001c $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:5401   .text.blVoltage_Create:000001dc $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:5410   .text.Voltage_Change_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:5415   .text.Voltage_Change_Init:00000000 Voltage_Change_Init
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:5503   .text.Voltage_Change_Init:00000068 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:5515   .text.Voltage_Modifier_Method:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:5520   .text.Voltage_Modifier_Method:00000000 Voltage_Modifier_Method
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:5637   .text.Voltage_Modifier_Method:00000080 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:5643   .text.Voltage_Modifier:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:5648   .text.Voltage_Modifier:00000000 Voltage_Modifier
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:5987   .text.Voltage_Modifier:000001ec $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:5998   .text.vVoltageHandle:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6003   .text.vVoltageHandle:00000000 vVoltageHandle
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6033   .text.vVoltageHandle:00000018 $d
                            *COM*:00000001 Voltage_Frame_Status
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6040   .text.vCurrent_Limit_DefaultSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6045   .text.vCurrent_Limit_DefaultSet:00000000 vCurrent_Limit_DefaultSet
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6120   .text.vCurrent_Limit_DefaultSet:00000060 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6129   .text.vCurrentDirect_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6134   .text.vCurrentDirect_Modify:00000000 vCurrentDirect_Modify
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6149   .text.vCurrentDirect_Modify:0000000c $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6309   .text.vCurrent_Count_Clear:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6314   .text.vCurrent_Count_Clear:00000000 vCurrent_Count_Clear
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6335   .text.vCurrent_Count_Clear:00000010 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6342   .text.vEnergy_Modify_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6347   .text.vEnergy_Modify_Init:00000000 vEnergy_Modify_Init
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6384   .text.vEnergy_Modify_Init:00000024 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6393   .text.vNow_Frozen_Modify_Mothod:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6398   .text.vNow_Frozen_Modify_Mothod:00000000 vNow_Frozen_Modify_Mothod
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6521   .text.vNow_Frozen_Modify_Mothod:000000a0 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6527   .text.vNowEnergy_Modifier:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6532   .text.vNowEnergy_Modifier:00000000 vNowEnergy_Modifier
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6576   .text.vNowEnergy_Modifier:0000002e $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6582   .text.vNowEnergy_Modifier:00000034 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6902   .text.vNowEnergy_Modifier:00000210 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6923   .text.vDayfrozen_Modifier:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6928   .text.vDayfrozen_Modifier:00000000 vDayfrozen_Modifier
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7122   .text.vDayfrozen_Modifier:0000012c $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7137   .text.vAccountEnergy_Modify_Mothod:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7142   .text.vAccountEnergy_Modify_Mothod:00000000 vAccountEnergy_Modify_Mothod
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7169   .text.vAccountEnergy_Modify_Mothod:00000014 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7174   .text.vAccountEnergy_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7179   .text.vAccountEnergy_Modify:00000000 vAccountEnergy_Modify
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7387   .text.vAccountEnergy_Modify:00000144 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7770   .bss.Ccurrent:00000000 Ccurrent
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7755   .bss.Bcurrent:00000000 Bcurrent
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7797   .bss.Acurrent:00000000 Acurrent
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7419   .data.C_Voltage:00000000 C_Voltage
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7736   .data.B_Voltage:00000000 B_Voltage
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7908   .data.A_Voltage:00000000 A_Voltage
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 210


C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7776   .data.Dayfrozen_Change_State:00000000 Dayfrozen_Change_State
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7723   .bss.Voltage_Change_State:00000000 Voltage_Change_State
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7742   .bss.uc645DataDomainLength:00000000 uc645DataDomainLength
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7790   .bss.ucRcvStatus:00000000 ucRcvStatus
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7432   .rodata.DBDataID_Handle_List:00000000 DBDataID_Handle_List
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7817   .rodata.INFRDataID_Handle_List:00000000 INFRDataID_Handle_List
                            *COM*:000003e8 ucApp_Buf_INFR
                            *COM*:000003e8 ucApp_Buf_ZD2DB
                            *COM*:000003e8 ucApp_Buf_DB2ZD
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7810   .data.pUartIR:00000000 pUartIR
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7717   .data.pUartDB:00000000 pUartDB
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7729   .data.pUartZD:00000000 pUartZD
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7415   .data.C_Voltage:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7422   .bss.Uart3_Sndbuf:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7425   .bss.Uart3_Sndbuf:00000000 Uart3_Sndbuf
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7428   .rodata.DBDataID_Handle_List:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7699   .bss.Uart3_Rsvbuf:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7702   .bss.Uart3_Rsvbuf:00000000 Uart3_Rsvbuf
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7705   .data.UartDB:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7708   .data.UartDB:00000000 UartDB
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7713   .data.pUartDB:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7724   .bss.Voltage_Change_State:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7726   .data.pUartZD:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7782   .data.UartZD:00000000 UartZD
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7732   .data.B_Voltage:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7743   .bss.uc645DataDomainLength:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7745   .bss.Uart1_Rsvbuf:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7748   .bss.Uart1_Rsvbuf:00000000 Uart1_Rsvbuf
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7751   .bss.Bcurrent:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7758   .data.UartIR:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7761   .data.UartIR:00000000 UartIR
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7803   .bss.Uart2_Rsvbuf:00000000 Uart2_Rsvbuf
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7914   .bss.Uart2_Sndbuf:00000000 Uart2_Sndbuf
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7766   .bss.Ccurrent:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7779   .data.UartZD:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7920   .bss.Uart1_Sndbuf:00000000 Uart1_Sndbuf
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7791   .bss.ucRcvStatus:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7793   .bss.Acurrent:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7800   .bss.Uart2_Rsvbuf:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7806   .data.pUartIR:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7813   .rodata.INFRDataID_Handle_List:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7904   .data.A_Voltage:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7911   .bss.Uart2_Sndbuf:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:7917   .bss.Uart1_Sndbuf:00000000 $d
                     .debug_frame:00000010 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1357   .text.Estatus_Modify_CurrentEvent:00000019 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:1357   .text.Estatus_Modify_CurrentEvent:0000001a $t
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6154   .text.vCurrentDirect_Modify:00000011 $d
C:\Users\strag\AppData\Local\Temp\ccabNJb7.s:6154   .text.vCurrentDirect_Modify:00000012 $t

UNDEFINED SYMBOLS
Flash_Write_Word
ucDrv_Buf_PutBytes
blDrv_Buf_IsEmpty
Uart_DataPut
USART_ITConfig
EEProm_Read
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccabNJb7.s 			page 211


Flash_Read_Word
FLASH_Unlock
FLASH_ErasePage
FLASH_Lock
ucDrv_Buf_GetBytes
blTime2_Update
blWordsCounterStatus
uwTime2WordsCounter
blFramesCounterStatus
uwTime2FramesCounter
__aeabi_uldivmod
