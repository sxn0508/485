ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"DLT645.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.dwCheckFrame,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	dwCheckFrame:
  27              	.LFB112:
  28              		.file 1 "../user/source/DLT645.c"
   1:../user/source/DLT645.c **** #include "DLT645.h"
   2:../user/source/DLT645.c **** #include "Time.h"
   3:../user/source/DLT645.c **** #include "Flash.h"
   4:../user/source/DLT645.c **** 
   5:../user/source/DLT645.c **** /*´®¿ÚÇı¶¯»º´æ*/
   6:../user/source/DLT645.c **** static struct ucbuf Uart1_Rsvbuf, Uart1_Sndbuf, Uart3_Rsvbuf, Uart3_Sndbuf, Uart2_Rsvbuf, Uart2_Snd
   7:../user/source/DLT645.c **** /*Ó¦ÓÃ²ã´®¿Ú½á¹¹Ìå*/
   8:../user/source/DLT645.c **** static UartDef UartZD = {USART1, &Uart1_Rsvbuf, &Uart1_Sndbuf};
   9:../user/source/DLT645.c **** static UartDef UartDB = {USART3, &Uart3_Rsvbuf, &Uart3_Sndbuf};
  10:../user/source/DLT645.c **** static UartDef UartIR = {USART2, &Uart2_Rsvbuf, &Uart2_Sndbuf};
  11:../user/source/DLT645.c **** /*Ó¦ÓÃ²ã´®¿Ú½á¹¹ÌåÖ¸Õë*/
  12:../user/source/DLT645.c **** UartDef *pUartZD = &UartZD;
  13:../user/source/DLT645.c **** UartDef *pUartDB = &UartDB;
  14:../user/source/DLT645.c **** UartDef *pUartIR = &UartIR;
  15:../user/source/DLT645.c **** /*¹æÔ¼Ö¡»º´æ*/
  16:../user/source/DLT645.c **** uint8_t ucApp_Buf_DB2ZD[DATA_BUF_SIZE]; //µç±íÉÏĞĞÖ¡Ó¦ÓÃ»º´æ
  17:../user/source/DLT645.c **** uint8_t ucApp_Buf_ZD2DB[DATA_BUF_SIZE]; //ÖÕ¶ËÏÂĞĞÖ¡Ó¦ÓÃ»º´æ
  18:../user/source/DLT645.c **** uint8_t ucApp_Buf_INFR[DATA_BUF_SIZE];  //ºìÍâ¿ÚÓ¦ÓÃ»º´æ
  19:../user/source/DLT645.c **** /*
  20:../user/source/DLT645.c **** #define ENABLE_ESTATUS						//µç±í×´Ì¬×ÖĞŞ¸Ä¹¦ÄÜ 
  21:../user/source/DLT645.c **** #define ENABLE_CURRENT_DEVIATION			//µçÁ÷¸÷Ïà²îÖµĞŞ¸Ä¹¦ÄÜ
  22:../user/source/DLT645.c **** #define ENABLE_CURRENT_LIMIT				//µçÁ÷×î´óÖµĞŞ¸Ä¹¦ÄÜ
  23:../user/source/DLT645.c **** #define ENABLE_ENERGY_MODIFY				//ĞŞ¸ÄÕıÏòÓĞ¹¦
  24:../user/source/DLT645.c **** */
  25:../user/source/DLT645.c **** const DefDataIDHandle INFRDataID_Handle_List[] = {
  26:../user/source/DLT645.c ****     {{0X33, 0X37, 0X34, 0X35}, Get_VChange_State},       //À©³ä£ºµçÑ¹ĞŞ¸ÄÊ¹ÄÜ/½ûÄÜID_02010400,
  27:../user/source/DLT645.c ****     {{0X33, 0X39, 0X34, 0X35}, Query_Voltage_Limit},     //À©³ä£ºµçÑ¹ÏŞÖµ²éÑ¯ID_02010600,
  28:../user/source/DLT645.c ****     {{0X33, 0X3A, 0X34, 0X35}, Default_Reset},           //À©³ä£ºµçÑ¹ĞŞ¸Ä¹¦ÄÜ»Ö¸´³ö³§ÉèÖÃID_0201070
  29:../user/source/DLT645.c ****     {{0X33, 0X3B, 0X34, 0X35}, vVoltage_SetMaxValue},    //À©³ä£ºµçÑ¹ÉèÖÃºÏ¸ñÉÏÏŞ
  30:../user/source/DLT645.c ****     {{0X33, 0X3C, 0X34, 0X35}, vVoltage_SetMinValue},    //À©³ä£ºµçÑ¹ÉèÖÃºÏ¸ñÏÂÏŞ
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 2


  31:../user/source/DLT645.c ****     {{0X33, 0X3D, 0X34, 0X35}, vVoltage_SetMaxMaxValue}, //À©³ä£ºµçÑ¹ÉèÖÃĞŞ¸ÄÉÏÏŞ
  32:../user/source/DLT645.c ****     {{0X33, 0X3E, 0X34, 0X35}, vVoltage_SetMinMinValue}, //À©³ä£ºµçÑ¹ÉèÖÃĞŞ¸ÄÏÂÏŞ
  33:../user/source/DLT645.c **** #ifdef ENABLE_ENERGY_MODIFY
  34:../user/source/DLT645.c ****     {{0X33, 0X73, 0X34, 0X33}, vEnergy_Modify_AbleSet},   //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸ÄÊ¹ÄÜ/½ûÄÜID_000
  35:../user/source/DLT645.c ****     {{0X33, 0X74, 0X34, 0X33}, vEnergy_Modify_RaitoSet},  //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä±ÈÀıÉèÖÃID_0001
  36:../user/source/DLT645.c ****     {{0X33, 0X75, 0X34, 0X33}, vEnergy_Modify_Reset},     //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä»Ö¸´³ö³§ÉèÖÃID_
  37:../user/source/DLT645.c ****     {{0X33, 0X76, 0X34, 0X33}, vEnergy_Modify_ReadSet},   //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä¶ÁÈ¡Éè£ºÖÃ
  38:../user/source/DLT645.c ****     {{0X33, 0X77, 0X34, 0X33}, vEnergy_Modify_ReadValue}, //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä¶ÁÈ¡Éè£ºÖÃ
  39:../user/source/DLT645.c **** #endif
  40:../user/source/DLT645.c ****     /*µçÁ÷ÖØ¹ıÔØ*/
  41:../user/source/DLT645.c ****     {{0X33, 0X37, 0X35, 0X35}, vCurrent_Limit_Set},                    //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:µ
  42:../user/source/DLT645.c ****     {{0X33, 0X38, 0X35, 0X35}, vCurrent_Limit_ReadSet},                //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:µ
  43:../user/source/DLT645.c ****     {{0X33, 0X39, 0X35, 0X35}, vCurrent_CTRatio_Set},                  //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:¶
  44:../user/source/DLT645.c ****     {{0X33, 0X3A, 0X35, 0X35}, vCurrent_CTRatio_ReadSet},              //À©³ä£º¶ÁÈ¡µçÁ÷ÖØ¹ıÔØ²ÎÊı:¶
  45:../user/source/DLT645.c ****     {{0X33, 0X3B, 0X35, 0X35}, vCurrent_TransFormer_Capacity_ReadSet}, //À©³ä£º¶ÁÈ¡µçÁ÷ÖØ¹ıÔØ²ÎÊı:±
  46:../user/source/DLT645.c ****     {{0X32, 0X32, 0X32, 0X32}, vRead_Version},                         //À©³ä£º¶ÁÈ¡³ÌĞò°æ±¾
  47:../user/source/DLT645.c **** };
  48:../user/source/DLT645.c **** const DefDataIDHandle DBDataID_Handle_List[] = {
  49:../user/source/DLT645.c ****     {{0X33, 0X34, 0X34, 0X35}, vVoltageHandle}, //AÏàµçÑ¹ID_02010100,
  50:../user/source/DLT645.c ****     {{0X33, 0X35, 0X34, 0X35}, vVoltageHandle}, //BÏàµçÑ¹ID_02010200,
  51:../user/source/DLT645.c ****     {{0X33, 0X36, 0X34, 0X35}, vVoltageHandle}, //CÏàµçÑ¹ID_02010300,
  52:../user/source/DLT645.c ****     {{0X33, 0X32, 0X34, 0X35}, vVoltageHandle}, //µçÑ¹Êı¾İ¿éID_0201FF00,
  53:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_DEVIATION
  54:../user/source/DLT645.c ****     {{0X33, 0X34, 0X35, 0X35}, vCurrent_Modify}, //AÏàµçÁ÷ID_02020100,
  55:../user/source/DLT645.c ****     {{0X33, 0X35, 0X35, 0X35}, vCurrent_Modify}, //BÏàµçÁ÷ID_02020200,
  56:../user/source/DLT645.c ****     {{0X33, 0X36, 0X35, 0X35}, vCurrent_Modify}, //CÏàµçÁ÷ID_02020300,
  57:../user/source/DLT645.c ****     {{0X33, 0X32, 0X35, 0X35}, vCurrent_Modify}, //µçÁ÷Êı¾İ¿éID_0202FF00,
  58:../user/source/DLT645.c **** #else
  59:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
  60:../user/source/DLT645.c ****     {{0X33, 0X34, 0X35, 0X35}, vCurrent_Limit_Modify}, //AÏàµçÁ÷ID_02020100,
  61:../user/source/DLT645.c ****     {{0X33, 0X35, 0X35, 0X35}, vCurrent_Limit_Modify}, //BÏàµçÁ÷ID_02020200,
  62:../user/source/DLT645.c ****     {{0X33, 0X36, 0X35, 0X35}, vCurrent_Limit_Modify}, //CÏàµçÁ÷ID_02020300,
  63:../user/source/DLT645.c ****     {{0X33, 0X32, 0X35, 0X35}, vCurrent_Limit_Modify}, //µçÁ÷Êı¾İ¿éID_0202FF00,
  64:../user/source/DLT645.c ****     /*µçÁ÷ÖØ¹ıÔØ*/
  65:../user/source/DLT645.c ****     {{0X33, 0X37, 0X35, 0X35}, vCurrent_Limit_Set},                    //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:µ
  66:../user/source/DLT645.c ****     {{0X33, 0X38, 0X35, 0X35}, vCurrent_Limit_ReadSet},                //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:µ
  67:../user/source/DLT645.c ****     {{0X33, 0X39, 0X35, 0X35}, vCurrent_CTRatio_Set},                  //À©³ä£ºÉèÖÃµçÁ÷ÖØ¹ıÔØ²ÎÊı:¶
  68:../user/source/DLT645.c ****     {{0X33, 0X3A, 0X35, 0X35}, vCurrent_CTRatio_ReadSet},              //À©³ä£º¶ÁÈ¡µçÁ÷ÖØ¹ıÔØ²ÎÊı:¶
  69:../user/source/DLT645.c ****     {{0X33, 0X3B, 0X35, 0X35}, vCurrent_TransFormer_Capacity_ReadSet}, //À©³ä£º¶ÁÈ¡µçÁ÷ÖØ¹ıÔØ²ÎÊı:±
  70:../user/source/DLT645.c **** #endif
  71:../user/source/DLT645.c **** #endif
  72:../user/source/DLT645.c ****     {{0X37, 0X38, 0X33, 0X38}, Estatus_Modify_CurrentEvent}, //µç±íÔËĞĞ×´Ì¬×Ö4ID_04000504,
  73:../user/source/DLT645.c ****     {{0X38, 0X38, 0X33, 0X38}, Estatus_Modify_CurrentEvent}, //µç±íÔËĞĞ×´Ì¬×Ö5ID_04000505,
  74:../user/source/DLT645.c ****     {{0X39, 0X38, 0X33, 0X38}, Estatus_Modify_CurrentEvent}, //µç±íÔËĞĞ×´Ì¬×Ö6ID_04000506,
  75:../user/source/DLT645.c ****     {{0X3A, 0X38, 0X33, 0X38}, Estatus_Modify_CurrentEvent}, //µç±íÔËĞĞ×´Ì¬×Ö7ID_04000507,
  76:../user/source/DLT645.c ****     {{0X32, 0X38, 0X33, 0X38}, Estatus_Modify_CurrentEvent}, //µç±íÔËĞĞ×´Ì¬×ÖÊı¾İ¿éID_040005FF,
  77:../user/source/DLT645.c **** #ifdef ENABLE_ENERGY_MODIFY
  78:../user/source/DLT645.c ****     {{0X33, 0X33, 0X34, 0X33}, vNowEnergy_Modifier},      //µ±Ç°ÕıÏòÓĞ¹¦×ÜµçÄÜID_00010000,
  79:../user/source/DLT645.c ****     {{0X33, 0X34, 0X34, 0X33}, vNowEnergy_Modifier},      //µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜID_00010100,
  80:../user/source/DLT645.c ****     {{0X33, 0X35, 0X34, 0X33}, vNowEnergy_Modifier},      //µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ2µçÄÜID_00010200,
  81:../user/source/DLT645.c ****     {{0X33, 0X36, 0X34, 0X33}, vNowEnergy_Modifier},      //µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ3µçÄÜID_00010300,
  82:../user/source/DLT645.c ****     {{0X33, 0X37, 0X34, 0X33}, vNowEnergy_Modifier},      //µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ4µçÄÜID_00010400,
  83:../user/source/DLT645.c ****     {{0X33, 0X32, 0X34, 0X33}, vNowEnergy_Modifier},      //µ±Ç°ÕıÏòÓĞ¹¦µçÄÜÊı¾İ¿éID_0001FF00,
  84:../user/source/DLT645.c ****     {{0X33, 0X33, 0X48, 0X33}, vNowEnergy_Modifier},      //µ±Ç°AÏàÕıÏòÓĞ¹¦ID_00150000,
  85:../user/source/DLT645.c ****     {{0X33, 0X33, 0X5C, 0X33}, vNowEnergy_Modifier},      //µ±Ç°BÏàÕıÏòÓĞ¹¦ID_00290000,
  86:../user/source/DLT645.c ****     {{0X33, 0X33, 0X70, 0X33}, vNowEnergy_Modifier},      //µ±Ç°CÏàÕıÏòÓĞ¹¦ID_003D0000,
  87:../user/source/DLT645.c ****     {{0X34, 0X34, 0X39, 0X38}, vDayfrozen_Modifier},      //ÉÏ1ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£©ID_
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 3


  88:../user/source/DLT645.c ****     {{0X35, 0X34, 0X39, 0X38}, vDayfrozen_Modifier},      //ÉÏ2ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£©ID_
  89:../user/source/DLT645.c ****     {{0X36, 0X34, 0X39, 0X38}, vDayfrozen_Modifier},      //ÉÏ3ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£© ID
  90:../user/source/DLT645.c ****     {{0X34, 0X33, 0X34, 0X33}, vAccountEnergy_Modify},    //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦×ÜµçÄÜID_00010001,
  91:../user/source/DLT645.c ****     {{0X34, 0X34, 0X34, 0X33}, vAccountEnergy_Modify},    //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜID_00010101,
  92:../user/source/DLT645.c ****     {{0X34, 0X35, 0X34, 0X33}, vAccountEnergy_Modify},    //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜ ID_00010201,
  93:../user/source/DLT645.c ****     {{0X34, 0X36, 0X34, 0X33}, vAccountEnergy_Modify},    //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜID_00010301,
  94:../user/source/DLT645.c ****     {{0X34, 0X37, 0X34, 0X33}, vAccountEnergy_Modify},    //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜID_00010401,
  95:../user/source/DLT645.c ****     {{0X34, 0X32, 0X34, 0X33}, vAccountEnergy_Modify},    //ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦µçÄÜÊı¾İ¿éID_0001FF01,
  96:../user/source/DLT645.c ****     {{0X34, 0X33, 0X48, 0X33}, vAccountEnergy_Modify},    //ÉÏ1½áËãÈÕAÏàÕıÏòÓĞ¹¦µçÄÜID_00150001,
  97:../user/source/DLT645.c ****     {{0X34, 0X33, 0X5C, 0X33}, vAccountEnergy_Modify},    //ÉÏ1½áËãÈÕBÏàÕıÏòÓĞ¹¦µçÄÜID_00290001,
  98:../user/source/DLT645.c ****     {{0X34, 0X33, 0X70, 0X33}, vAccountEnergy_Modify},    //ÉÏ1½áËãÈÕCÏàÕıÏòÓĞ¹¦µçÄÜID_003D0001,
  99:../user/source/DLT645.c ****     {{0X33, 0X73, 0X34, 0X33}, vEnergy_Modify_AbleSet},   //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸ÄÊ¹ÄÜ/½ûÄÜID_000
 100:../user/source/DLT645.c ****     {{0X33, 0X74, 0X34, 0X33}, vEnergy_Modify_RaitoSet},  //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä±ÈÀıÉèÖÃID_0001
 101:../user/source/DLT645.c ****     {{0X33, 0X75, 0X34, 0X33}, vEnergy_Modify_Reset},     //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿»Ø¸´³ö³§ÉèÖÃID_0001
 102:../user/source/DLT645.c ****     {{0X33, 0X76, 0X34, 0X33}, vEnergy_Modify_ReadSet},   //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä¶ÁÈ¡ÉèÖÃ
 103:../user/source/DLT645.c ****     {{0X33, 0X77, 0X34, 0X33}, vEnergy_Modify_ReadValue}, //À©³ä£ºÕıÏòÓĞ¹¦µçÄÜÁ¿¶ÁÈ¡´æ´¢µÄÕæÊµÖµºÍĞ
 104:../user/source/DLT645.c **** #endif
 105:../user/source/DLT645.c ****     {{0X33, 0X37, 0X34, 0X35}, Get_VChange_State},   //À©³ä£ºµçÑ¹ĞŞ¸ÄÊ¹ÄÜ/½ûÄÜID_02010400,
 106:../user/source/DLT645.c ****     {{0X33, 0X38, 0X34, 0X35}, Set_Voltage_Limit},   //À©³ä£ºµçÑ¹ÏŞÖµÉèÖÃID_02010500,
 107:../user/source/DLT645.c ****     {{0X33, 0X39, 0X34, 0X35}, Query_Voltage_Limit}, //À©³ä£ºµçÑ¹ÏŞÖµ²éÑ¯ID_02010600,
 108:../user/source/DLT645.c ****     {{0X33, 0X3A, 0X34, 0X35}, Default_Reset},       //À©³ä£ºµçÑ¹ĞŞ¸Ä¹¦ÄÜ»Ö¸´³ö³§ÉèÖÃID_02010700,
 109:../user/source/DLT645.c **** 
 110:../user/source/DLT645.c ****     /*4ºÅ²¹ÒÅ¸ººÉÇúÏßÁ¬Ğø³­¶Á²¿·ÖÖĞµÄµçÑ¹ÇúÏß¡¢µçÁ÷ÇúÏßĞŞ¸Ä,2018Äê8ÔÂ7ÈÕ20:53:4£º0*/
 111:../user/source/DLT645.c ****     {{0X33, 0X34, 0X43, 0X39}, vLoadProfile_Voltage_Modify}, //AÏàµçÑ¹ÇúÏßÁ¬Ğø³­¶ÁID_06100101,
 112:../user/source/DLT645.c ****     {{0X34, 0X34, 0X43, 0X39}, vLoadProfile_Voltage_Modify}, //BµçÑ¹Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_06100102,
 113:../user/source/DLT645.c ****     {{0X35, 0X34, 0X43, 0X39}, vLoadProfile_Voltage_Modify}, //CµçÑ¹Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_06100103,
 114:../user/source/DLT645.c ****     {{0X32, 0X34, 0X43, 0X39}, vLoadProfile_Voltage_Modify}, //µçÑ¹Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_061001FF,
 115:../user/source/DLT645.c ****     {{0X33, 0X35, 0X43, 0X39}, vLoadProfile_Current_Modify}, //AÏàµçÁ÷ÇúÏßÁ¬Ğø³­¶ÁID_06100201,
 116:../user/source/DLT645.c ****     {{0X34, 0X35, 0X43, 0X39}, vLoadProfile_Current_Modify}, //BµçÁ÷Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_06100202,
 117:../user/source/DLT645.c ****     {{0X35, 0X35, 0X43, 0X39}, vLoadProfile_Current_Modify}, //CµçÁ÷Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_06100203,
 118:../user/source/DLT645.c ****     {{0X32, 0X35, 0X43, 0X39}, vLoadProfile_Current_Modify}, //µçÁ÷Êı¾İ¿éÇúÏßÁ¬Ğø³­¶ÁID_061002FF,
 119:../user/source/DLT645.c ****     {{0X32, 0X32, 0X32, 0X32}, vRead_Version},               //À©³ä£º¶ÁÈ¡³ÌĞò°æ±¾
 120:../user/source/DLT645.c **** };
 121:../user/source/DLT645.c **** 
 122:../user/source/DLT645.c **** FrameHandleStatus Voltage_Frame_Status;
 123:../user/source/DLT645.c **** uint8_t ucRcvStatus = 0;
 124:../user/source/DLT645.c **** uint8_t uc645DataDomainLength = 0;                 //645Ö¡Êı¾İÓò³¤¶È
 125:../user/source/DLT645.c **** uint8_t Voltage_Change_State = Voltage_NOChange;   //µçÑ¹ÊÇ·ñĞŞ¸Ä±êÖ¾Î»£¬Ä¬ÈÏĞŞ¸Ä×´Ì¬
 126:../user/source/DLT645.c **** uint8_t Dayfrozen_Change_State = DAYFROZEN_CHANGE; //µçÁ¿ÊÇ·ñĞŞ¸Ä£¬Ä¬ÈÏĞŞ¸Ä
 127:../user/source/DLT645.c **** uint8_t ucDayfrozen_Modify_Ratio;                  //µçÁ¿µ÷Õû±ÈÀı
 128:../user/source/DLT645.c **** int Voltage_MAX;                                   //µçÑ¹ºÏ¸ñÉÏÏŞ
 129:../user/source/DLT645.c **** int Voltage_MIN;                                   //µçÑ¹ºÏ¸ñÏÂÏŞ
 130:../user/source/DLT645.c **** int A_Voltage = WORK_VOLTAGE;                      //×îºóÒ»´ÎĞŞ¸ÄºóµÄAÏàµçÑ¹Öµ
 131:../user/source/DLT645.c **** int B_Voltage = WORK_VOLTAGE;                      //×îºóÒ»´ÎĞŞ¸ÄºóµÄBÏàµçÑ¹Öµ
 132:../user/source/DLT645.c **** int C_Voltage = WORK_VOLTAGE;                      //×îºóÒ»´ÎĞŞ¸ÄºóµÄCÏàµçÑ¹Öµ
 133:../user/source/DLT645.c **** CURRENT Acurrent = {0, 0, false};
 134:../user/source/DLT645.c **** CURRENT Bcurrent = {0, 0, false};
 135:../user/source/DLT645.c **** CURRENT Ccurrent = {0, 0, false};
 136:../user/source/DLT645.c **** 
 137:../user/source/DLT645.c **** /*±äÑ¹Æ÷½á¹¹Ìå¶¨Òå*/
 138:../user/source/DLT645.c **** TransFormer_TypeDef TransFormer;
 139:../user/source/DLT645.c **** 
 140:../user/source/DLT645.c **** /*µçÁ÷ÖØÔØ¡¢¹ıÔØµ÷ÕûÏà¹Ø²ÎÊı
 141:../user/source/DLT645.c **** #ifdef	  TRANSFORMER_CAPACITY_50KVA
 142:../user/source/DLT645.c **** 	#define TransFormer.CT2_CurrentLimit					2700						//50KVA±äÑ¹Æ÷µÄCT¶ş´Î²àÈıÏàµçÁ÷ºÍµÄ×î´óÖµ£¬À©´ó
 143:../user/source/DLT645.c **** #endif
 144:../user/source/DLT645.c **** #ifdef	  TRANSFORMER_CAPACITY_100KVA
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 4


 145:../user/source/DLT645.c **** 	#define TransFormer.CT2_CurrentLimit					5400						//100KVA±äÑ¹Æ÷µÄCT¶ş´Î²àÈıÏàµçÁ÷ºÍµÄ×î´óÖµ£¬À©´
 146:../user/source/DLT645.c **** #endif
 147:../user/source/DLT645.c **** #ifdef	  TRANSFORMER_CAPACITY_200KVA
 148:../user/source/DLT645.c **** 	#define TransFormer.CT2_CurrentLimit					10800						//200KVA±äÑ¹Æ÷µÄCT¶ş´Î²àÈıÏàµçÁ÷ºÍµÄ×î´óÖµ£¬À©
 149:../user/source/DLT645.c **** #endif
 150:../user/source/DLT645.c **** #ifdef	  TRANSFORMER_CAPACITY_400KVA
 151:../user/source/DLT645.c **** 	#define TransFormer.CT2_CurrentLimit					21600						//400KVA±äÑ¹Æ÷µÄCT¶ş´Î²àÈıÏàµçÁ÷ºÍµÄ×î´óÖµ£¬À©
 152:../user/source/DLT645.c **** #endif
 153:../user/source/DLT645.c **** */
 154:../user/source/DLT645.c **** 
 155:../user/source/DLT645.c **** /********************************************************************
 156:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½«±¨ÎÄ´æµ½Ó¦ÓÃ²ã»º´æ£¬²¢ÅĞ¶ÏÊÇ·ñÎª645Ö¡
 157:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë£¬Çı¶¯²ã»º´æÖ¸Õë
 158:../user/source/DLT645.c ****  * Êä    ³ö£ºÈç¹û¶¼ºÏ·¨·µ»Øtrue
 159:../user/source/DLT645.c ****  ·ñÔò·µ»Øfalse
 160:../user/source/DLT645.c ****  *           
 161:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 162:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 163:../user/source/DLT645.c ****  **********************************************************************/
 164:../user/source/DLT645.c **** 
 165:../user/source/DLT645.c **** bool blRecvFrame(struct ucbuf *ucDrv_Buf, uint8_t *ucdata_buf)
 166:../user/source/DLT645.c **** {
 167:../user/source/DLT645.c ****     /*ÊÕÖ¡×´Ì¬*/
 168:../user/source/DLT645.c ****     switch (ucRcvStatus)
 169:../user/source/DLT645.c ****     {
 170:../user/source/DLT645.c ****     /*Ö¡Í·68*/
 171:../user/source/DLT645.c ****     case SEARCH_SOH:
 172:../user/source/DLT645.c ****     {
 173:../user/source/DLT645.c ****         /*Î´¶Áµ½Ö¸¶¨×Ö½ÚÊı£¬Ìø³ö·ÖÖ§£¬·µ»Øfalse*/
 174:../user/source/DLT645.c ****         if (ucDrv_Buf_GetBytes(ucDrv_Buf, ucdata_buf, 1) == false)
 175:../user/source/DLT645.c ****         {
 176:../user/source/DLT645.c ****             break;
 177:../user/source/DLT645.c ****         }
 178:../user/source/DLT645.c ****         /*¶Áµ½Ò»¸ö×Ö½Ú*/
 179:../user/source/DLT645.c ****         else
 180:../user/source/DLT645.c ****         {
 181:../user/source/DLT645.c ****             /*Ö¡Í·²»ºÏ·¨£¬·µ»Øfalse*/
 182:../user/source/DLT645.c ****             if (*(ucdata_buf + 0) != 0X68)
 183:../user/source/DLT645.c ****             {
 184:../user/source/DLT645.c ****                 break;
 185:../user/source/DLT645.c ****             }
 186:../user/source/DLT645.c ****             else
 187:../user/source/DLT645.c ****             {
 188:../user/source/DLT645.c ****                 /*Ö¡Í·ºÏ·¨£¬ÊÕÖ¡×´¸ÄÎªRCV_DATA1*/
 189:../user/source/DLT645.c ****                 ucRcvStatus = RCV_DATA1;
 190:../user/source/DLT645.c ****                 blWordsCounterStatus = true;
 191:../user/source/DLT645.c ****             }
 192:../user/source/DLT645.c ****         }
 193:../user/source/DLT645.c ****     }
 194:../user/source/DLT645.c ****     case RCV_DATA1:
 195:../user/source/DLT645.c ****     {
 196:../user/source/DLT645.c ****         /*¶Á9¸ö×Ö½ÚÊ§°Ü£¬Ìø³ö·ÖÖ§£¬·µ»Øfalse*/
 197:../user/source/DLT645.c ****         if (ucDrv_Buf_GetBytes(ucDrv_Buf, ucdata_buf + 1, 9) == false)
 198:../user/source/DLT645.c ****         {
 199:../user/source/DLT645.c ****             /*DLT645_WORDS_DELAY_MAX£¬×Ö½Ú½ÓÊÕ³¬Ê±*/
 200:../user/source/DLT645.c ****             if (blTime2_Update(uwTime2WordsCounter, DLT645_WORDS_DELAY_MAX))
 201:../user/source/DLT645.c ****             {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 5


 202:../user/source/DLT645.c ****                 /*³¬Ê±ÔòÖØĞÂÅĞ¶ÏÖ¡Í·68£¬²»³¬Ê±Ôò¼ÌĞøÕÒ³¤¶È£»*/
 203:../user/source/DLT645.c ****                 ucRcvStatus = SEARCH_SOH;
 204:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 205:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 206:../user/source/DLT645.c ****             }
 207:../user/source/DLT645.c ****             break;
 208:../user/source/DLT645.c ****         }
 209:../user/source/DLT645.c ****         else //¶Á68Ö®ºó9¸ö×Ö½Ú³É¹¦
 210:../user/source/DLT645.c ****         {
 211:../user/source/DLT645.c ****             if ((*(ucdata_buf + 7) != 0X68) || ((*(ucdata_buf + 9) + 12) >= 255))
 212:../user/source/DLT645.c ****             {
 213:../user/source/DLT645.c ****                 ucRcvStatus = SEARCH_SOH; //µÚÆß¸ö×Ö½Ú²»Îª68 ,Ìø³ö£¬·µ»Øfalse£¬ÖØĞÂÕÒ68
 214:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 215:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 216:../user/source/DLT645.c ****                 break;
 217:../user/source/DLT645.c ****             }
 218:../user/source/DLT645.c ****             else
 219:../user/source/DLT645.c ****             {                                              //µÚÆß¸ö×Ö½ÚÊÇ68
 220:../user/source/DLT645.c ****                 uc645DataDomainLength = *(ucdata_buf + 9); //¶Á³ö645Ö¡³¤¶ÈL
 221:../user/source/DLT645.c ****                 ucRcvStatus = RCV_DATA2;                   //Ö¸ÏòÏÂÒ»²¿·Ö
 222:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 223:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 224:../user/source/DLT645.c ****                 blWordsCounterStatus = true;
 225:../user/source/DLT645.c ****             }
 226:../user/source/DLT645.c ****         }
 227:../user/source/DLT645.c ****     }
 228:../user/source/DLT645.c ****     case RCV_DATA2:
 229:../user/source/DLT645.c ****     {
 230:../user/source/DLT645.c ****         if (ucDrv_Buf_GetBytes(ucDrv_Buf, ucdata_buf + 10, uc645DataDomainLength + 2) == false)
 231:../user/source/DLT645.c ****         {                                                                    //¶ÁºóĞø×Ö½ÚÊ§°Ü£¬Ìø³ö
 232:../user/source/DLT645.c ****             if (blTime2_Update(uwTime2WordsCounter, DLT645_WORDS_DELAY_MAX)) //DLT645_WORDS_DELAY_M
 233:../user/source/DLT645.c ****             {                                                                //Èç¹û³¬Ê±£¬ÔòÖØĞÂÕÒ68
 234:../user/source/DLT645.c ****                 ucRcvStatus = SEARCH_SOH;
 235:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 236:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 237:../user/source/DLT645.c ****             }
 238:../user/source/DLT645.c ****             break;
 239:../user/source/DLT645.c ****         }
 240:../user/source/DLT645.c ****         else //¶Á³öÖ¸¶¨×Ö½ÚÊıµÄÒ»Ö¡
 241:../user/source/DLT645.c ****         {
 242:../user/source/DLT645.c ****             ucRcvStatus = SEARCH_SOH; //×´Ì¬¸ÄÎª²éÕÒ68£»
 243:../user/source/DLT645.c ****             blWordsCounterStatus = false;
 244:../user/source/DLT645.c ****             uwTime2WordsCounter = 0;
 245:../user/source/DLT645.c ****             if (dwCheckFrame(ucdata_buf) != OK_1)
 246:../user/source/DLT645.c ****             {
 247:../user/source/DLT645.c ****                 //	if (blTime2_Update(uwTime2WordsCounter,DLT645_WORDS_DELAY_MAX)) //DLT645_WORDS_D
 248:../user/source/DLT645.c ****                 //{ //Èç¹û³¬Ê±£¬ÔòÖØĞÂÕÒ68£¬·ñÔòÖØĞÂ½ÓÊÕºóĞø×Ö½Ú£»Ìø³ö·ÖÖ§
 249:../user/source/DLT645.c ****                 //ucRcvStatus = SEARCH_SOH;
 250:../user/source/DLT645.c ****                 //}//Ö¡Ğ£Ñé´íÎó
 251:../user/source/DLT645.c ****                 return false;
 252:../user/source/DLT645.c ****             }
 253:../user/source/DLT645.c ****             else
 254:../user/source/DLT645.c ****             {
 255:../user/source/DLT645.c ****                 //ucRcvStatus = SEARCH_SOH;//×´Ì¬¸ÄÎª²éÕÒ68£»
 256:../user/source/DLT645.c ****                 //blWordsCounterStatus = false;
 257:../user/source/DLT645.c ****                 return true; //ÅĞ¶ÏÊÕÖ¡ÊÇ·ñºÏ¸ñ£¬ºÏ¸ñ·µ»Øtrue£¬·ñÔò·µ»Øfalse
 258:../user/source/DLT645.c ****             }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 6


 259:../user/source/DLT645.c ****         }
 260:../user/source/DLT645.c ****     }
 261:../user/source/DLT645.c ****     break;
 262:../user/source/DLT645.c ****     default:
 263:../user/source/DLT645.c ****         break;
 264:../user/source/DLT645.c ****     }
 265:../user/source/DLT645.c ****     return false;
 266:../user/source/DLT645.c **** }
 267:../user/source/DLT645.c **** 
 268:../user/source/DLT645.c **** /********************************************************************
 269:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÅĞ¶ÏÖ¡µÄĞ£ÑéºÍ¡¢½áÊø×Ö½ÚÊÇ·ñºÏ·¨
 270:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 271:../user/source/DLT645.c ****  * Êä    ³ö£ºÈç¹û¶¼ºÏ·¨·µ»Øtrue
 272:../user/source/DLT645.c ****  ·ñÔò·µ»Øfalse
 273:../user/source/DLT645.c ****  *           
 274:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 275:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 276:../user/source/DLT645.c ****  **********************************************************************/
 277:../user/source/DLT645.c **** STATUS dwCheckFrame(uint8_t *pucBuffer)
 278:../user/source/DLT645.c **** {
  29              		.loc 1 278 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35 0000 10B4     		push	{r4}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 4, -4
  39              	.LVL1:
 279:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
 280:../user/source/DLT645.c ****     uint8_t i;
 281:../user/source/DLT645.c ****     //ÇóÈ¡Ğ£ÑéºÍ
 282:../user/source/DLT645.c ****     for (i = 0; i < uc645DataDomainLength + 10; i++)
  40              		.loc 1 282 0
  41 0002 0023     		movs	r3, #0
 279:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
  42              		.loc 1 279 0
  43 0004 1A46     		mov	r2, r3
  44              		.loc 1 282 0
  45 0006 04E0     		b	.L2
  46              	.LVL2:
  47              	.L3:
 283:../user/source/DLT645.c ****     {
 284:../user/source/DLT645.c ****         ucCheckData += pucBuffer[i];
  48              		.loc 1 284 0 discriminator 3
  49 0008 C45C     		ldrb	r4, [r0, r3]	@ zero_extendqisi2
  50 000a 2244     		add	r2, r2, r4
  51              	.LVL3:
  52 000c D2B2     		uxtb	r2, r2
  53              	.LVL4:
 282:../user/source/DLT645.c ****     {
  54              		.loc 1 282 0 discriminator 3
  55 000e 0133     		adds	r3, r3, #1
  56              	.LVL5:
  57 0010 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 7


  58              	.LVL6:
  59              	.L2:
 282:../user/source/DLT645.c ****     {
  60              		.loc 1 282 0 is_stmt 0 discriminator 1
  61 0012 0C4C     		ldr	r4, .L8
  62 0014 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
  63 0016 01F10A04 		add	r4, r1, #10
  64 001a A342     		cmp	r3, r4
  65 001c F4DB     		blt	.L3
 285:../user/source/DLT645.c ****     }
 286:../user/source/DLT645.c ****     //ÅĞ¶ÏĞ£ÑéºÍºÍ½áÊø·û
 287:../user/source/DLT645.c ****     if ((ucCheckData == pucBuffer[uc645DataDomainLength + 10]) &&
  66              		.loc 1 287 0 is_stmt 1
  67 001e 4318     		adds	r3, r0, r1
  68              	.LVL7:
  69 0020 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
  70 0022 9A42     		cmp	r2, r3
  71 0024 06D1     		bne	.L5
 288:../user/source/DLT645.c ****         (pucBuffer[uc645DataDomainLength + 11] == 0x16))
  72              		.loc 1 288 0 discriminator 1
  73 0026 0144     		add	r1, r1, r0
  74 0028 CB7A     		ldrb	r3, [r1, #11]	@ zero_extendqisi2
 287:../user/source/DLT645.c ****         (pucBuffer[uc645DataDomainLength + 11] == 0x16))
  75              		.loc 1 287 0 discriminator 1
  76 002a 162B     		cmp	r3, #22
  77 002c 05D0     		beq	.L6
 289:../user/source/DLT645.c ****     {
 290:../user/source/DLT645.c ****         return OK_1;
 291:../user/source/DLT645.c ****     }
 292:../user/source/DLT645.c ****     else
 293:../user/source/DLT645.c ****     {
 294:../user/source/DLT645.c ****         return ERROR_1;
  78              		.loc 1 294 0
  79 002e 4FF0FF30 		mov	r0, #-1
  80              	.LVL8:
  81 0032 03E0     		b	.L4
  82              	.LVL9:
  83              	.L5:
  84 0034 4FF0FF30 		mov	r0, #-1
  85              	.LVL10:
  86 0038 00E0     		b	.L4
  87              	.LVL11:
  88              	.L6:
 290:../user/source/DLT645.c ****     }
  89              		.loc 1 290 0
  90 003a 0020     		movs	r0, #0
  91              	.LVL12:
  92              	.L4:
 295:../user/source/DLT645.c ****     }
 296:../user/source/DLT645.c **** }
  93              		.loc 1 296 0
  94 003c 5DF8044B 		ldr	r4, [sp], #4
  95              	.LCFI1:
  96              		.cfi_restore 4
  97              		.cfi_def_cfa_offset 0
  98 0040 7047     		bx	lr
  99              	.L9:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 8


 100 0042 00BF     		.align	2
 101              	.L8:
 102 0044 00000000 		.word	.LANCHOR0
 103              		.cfi_endproc
 104              	.LFE112:
 106              		.section	.text.BCD_Verity,"ax",%progbits
 107              		.align	2
 108              		.thumb
 109              		.thumb_func
 111              	BCD_Verity:
 112              	.LFB122:
 297:../user/source/DLT645.c **** 
 298:../user/source/DLT645.c **** /********************************************************************
 299:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµç±í£º²àÊÕÖ¡Êı¾İ±êÊ¶·ÖÎö´¦Àí
 300:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 301:../user/source/DLT645.c ****  * Êä    ³ö£ºÊı¾İ±êÊ¶
 302:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 303:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.8
 304:../user/source/DLT645.c ****  **********************************************************************/
 305:../user/source/DLT645.c **** void vDBDataID_Handle(uint8_t *pucBuffer)
 306:../user/source/DLT645.c **** {
 307:../user/source/DLT645.c ****     uint8_t i;
 308:../user/source/DLT645.c ****     uint16_t idcount;
 309:../user/source/DLT645.c ****     idcount = sizeof(DBDataID_Handle_List) / sizeof(DBDataID_Handle_List[0]);
 310:../user/source/DLT645.c ****     for (i = 0; i < idcount; i++)
 311:../user/source/DLT645.c ****     {
 312:../user/source/DLT645.c ****         if ((DBDataID_Handle_List[i].Data_ID[0] == pucBuffer[10]) &&
 313:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 314:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 315:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 316:../user/source/DLT645.c ****             break;
 317:../user/source/DLT645.c ****     }
 318:../user/source/DLT645.c ****     if (i < idcount)
 319:../user/source/DLT645.c ****     {
 320:../user/source/DLT645.c **** #ifndef ENABLE_CURRENT_DEVIATION
 321:../user/source/DLT645.c ****         if (DBDataID_Handle_List[i].Handle == vCurrent_Modify)
 322:../user/source/DLT645.c ****             return;
 323:../user/source/DLT645.c **** #endif
 324:../user/source/DLT645.c **** #ifndef ENABLE_CURRENT_LIMIT
 325:../user/source/DLT645.c ****         if (DBDataID_Handle_List[i].Handle == vCurrent_Limit_Modify)
 326:../user/source/DLT645.c ****             return;
 327:../user/source/DLT645.c **** #endif
 328:../user/source/DLT645.c **** #ifndef ENABLE_ESTATUS
 329:../user/source/DLT645.c ****         if (DBDataID_Handle_List[i].Handle == Estatus_Modify_CurrentEvent)
 330:../user/source/DLT645.c ****             return;
 331:../user/source/DLT645.c **** #endif
 332:../user/source/DLT645.c **** #ifndef ENABLE_ENERGY_MODIFY
 333:../user/source/DLT645.c ****         if ((DBDataID_Handle_List[i].Handle == vNowEnergy_Modifier) ||
 334:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vDayfrozen_Modifier)) ||
 335:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vAccountEnergy_Modify)) ||
 336:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_AbleSet)) ||
 337:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_RaitoSet)) ||
 338:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_Reset)))
 339:../user/source/DLT645.c ****             return;
 340:../user/source/DLT645.c **** #endif
 341:../user/source/DLT645.c ****         DBDataID_Handle_List[i].Handle(pucBuffer);
 342:../user/source/DLT645.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 9


 343:../user/source/DLT645.c ****     else
 344:../user/source/DLT645.c ****         return;
 345:../user/source/DLT645.c **** }
 346:../user/source/DLT645.c **** 
 347:../user/source/DLT645.c **** /********************************************************************
 348:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ººìÍâ²àÊÕÖ¡Êı¾İ±êÊ¶·ÖÎö´¦Àí
 349:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 350:../user/source/DLT645.c ****  * Êä    ³ö£ºÊı¾İ±êÊ¶
 351:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 352:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.8
 353:../user/source/DLT645.c ****  **********************************************************************/
 354:../user/source/DLT645.c **** void vINFRDataID_Handle(uint8_t *pucBuffer)
 355:../user/source/DLT645.c **** {
 356:../user/source/DLT645.c ****     uint8_t i;
 357:../user/source/DLT645.c ****     uint16_t idcount;
 358:../user/source/DLT645.c ****     idcount = sizeof(INFRDataID_Handle_List) / sizeof(INFRDataID_Handle_List[0]);
 359:../user/source/DLT645.c ****     for (i = 0; i < idcount; i++)
 360:../user/source/DLT645.c ****     {
 361:../user/source/DLT645.c ****         if ((INFRDataID_Handle_List[i].Data_ID[0] == pucBuffer[10]) &&
 362:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 363:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 364:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 365:../user/source/DLT645.c ****             break;
 366:../user/source/DLT645.c ****     }
 367:../user/source/DLT645.c ****     if (i < idcount)
 368:../user/source/DLT645.c ****     {
 369:../user/source/DLT645.c **** #ifndef ENABLE_ENERGY_MODIFY
 370:../user/source/DLT645.c ****         if (((INFRDataID_Handle_List[i].Handle == vEnergy_Modify_AbleSet)) ||
 371:../user/source/DLT645.c ****             ((INFRDataID_Handle_List[i].Handle == vEnergy_Modify_RaitoSet)) ||
 372:../user/source/DLT645.c ****             ((INFRDataID_Handle_List[i].Handle == vEnergy_Modify_Reset)) ||
 373:../user/source/DLT645.c ****             ((INFRDataID_Handle_List[i].Handle == vEnergy_Modify_ReadSet)) ||
 374:../user/source/DLT645.c ****             ((INFRDataID_Handle_List[i].Handle == vEnergy_Modify_ReadValue)))
 375:../user/source/DLT645.c ****             return;
 376:../user/source/DLT645.c **** #endif
 377:../user/source/DLT645.c ****         INFRDataID_Handle_List[i].Handle(pucBuffer);
 378:../user/source/DLT645.c ****     }
 379:../user/source/DLT645.c ****     else
 380:../user/source/DLT645.c ****         return;
 381:../user/source/DLT645.c **** }
 382:../user/source/DLT645.c **** 
 383:../user/source/DLT645.c **** /********************************************************************
 384:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÀ©³äÖ¡£º¸ü¸ÄµçÑ¹ĞŞ¸Ä±êÖ¾Î»
 385:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 386:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
 387:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 388:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 389:../user/source/DLT645.c ****  **********************************************************************/
 390:../user/source/DLT645.c **** void Get_VChange_State(uint8_t *pucBuffer)
 391:../user/source/DLT645.c **** {
 392:../user/source/DLT645.c ****     uint8_t i;
 393:../user/source/DLT645.c ****     if (pucBuffer[14] == 0x34)
 394:../user/source/DLT645.c ****     {
 395:../user/source/DLT645.c ****         Voltage_Change_State = Voltage_NOChange;
 396:../user/source/DLT645.c ****     }
 397:../user/source/DLT645.c ****     if (pucBuffer[14] == 0x33)
 398:../user/source/DLT645.c ****     {
 399:../user/source/DLT645.c ****         Voltage_Change_State = Voltage_Change;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 10


 400:../user/source/DLT645.c ****     }
 401:../user/source/DLT645.c ****     if (ERROR == Flash_Write_Word(FLASH_VChangeState_Addr, Voltage_Change_State))
 402:../user/source/DLT645.c ****     {
 403:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
 404:../user/source/DLT645.c ****     }
 405:../user/source/DLT645.c ****     else
 406:../user/source/DLT645.c ****         pucBuffer[8] = 0x94;
 407:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
 408:../user/source/DLT645.c ****     pucBuffer[10] = 0x00;
 409:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 410:../user/source/DLT645.c ****     {
 411:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
 412:../user/source/DLT645.c ****     }
 413:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
 414:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 415:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
 416:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 417:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 418:../user/source/DLT645.c ****     {
 419:../user/source/DLT645.c ****         Uart_DataPut(USART3);
 420:../user/source/DLT645.c ****     }
 421:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
 422:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 423:../user/source/DLT645.c ****     {
 424:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
 425:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 426:../user/source/DLT645.c ****     }
 427:../user/source/DLT645.c **** }
 428:../user/source/DLT645.c **** /********************************************************************
 429:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÀ©³äÖ¡£ºµçÑ¹ÏŞÖµÉèÖÃ
 430:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 431:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
 432:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 433:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 434:../user/source/DLT645.c ****  **********************************************************************/
 435:../user/source/DLT645.c **** void Set_Voltage_Limit(uint8_t *pucBuffer)
 436:../user/source/DLT645.c **** {
 437:../user/source/DLT645.c ****     int VMAX = 0;
 438:../user/source/DLT645.c ****     int VMIN = 0;
 439:../user/source/DLT645.c ****     int i = 0;
 440:../user/source/DLT645.c ****     VMAX = Get_Voltage(pucBuffer[14], pucBuffer[15]);
 441:../user/source/DLT645.c ****     VMIN = Get_Voltage(pucBuffer[16], pucBuffer[17]);
 442:../user/source/DLT645.c ****     if ((VMAX > VMIN) && (VMAX < Voltage_MAX_MAX) //µçÑ¹ÏŞÖµÉèÖÃÌõ¼ş£¬ÉÏÏŞ´óÓÚÏÂÏŞÇÒĞ¡ÓÚÉÏÉÏÏŞ
 443:../user/source/DLT645.c ****         && (VMIN > Voltage_MIN_MIN))              //µçÑ¹ÏÂÏŞ´óÓÚÏÂÏÂÏŞ
 444:../user/source/DLT645.c ****     {
 445:../user/source/DLT645.c ****         Voltage_MAX = VMAX;
 446:../user/source/DLT645.c ****         Voltage_MIN = VMIN;
 447:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX1_Addr, pucBuffer[14]);
 448:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX2_Addr, pucBuffer[15]);
 449:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN1_Addr, pucBuffer[16]);
 450:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN2_Addr, pucBuffer[17]);
 451:../user/source/DLT645.c ****         pucBuffer[8] = 0x94; //ÉèÖÃ³É¹¦±êÖ¾
 452:../user/source/DLT645.c ****     }
 453:../user/source/DLT645.c ****     else
 454:../user/source/DLT645.c ****     {
 455:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4; //ÉèÖÃÒì³£±êÖ¾
 456:../user/source/DLT645.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 11


 457:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
 458:../user/source/DLT645.c ****     pucBuffer[10] = 0x00; //ÇóÈ¡Ğ£ÑéºÍ
 459:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 460:../user/source/DLT645.c ****     {
 461:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
 462:../user/source/DLT645.c ****     }
 463:../user/source/DLT645.c ****     pucBuffer[11] = 0x16; //½áÊø·û
 464:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 465:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
 466:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 467:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 468:../user/source/DLT645.c ****     {
 469:../user/source/DLT645.c ****         Uart_DataPut(USART3);
 470:../user/source/DLT645.c ****     }
 471:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
 472:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
 473:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 474:../user/source/DLT645.c ****     {
 475:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
 476:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 477:../user/source/DLT645.c ****     }
 478:../user/source/DLT645.c **** }
 479:../user/source/DLT645.c **** 
 480:../user/source/DLT645.c **** /********************************************************************
 481:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÀ©³äÖ¡£ºµçÑ¹ÏŞÖµ²éÑ¯
 482:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 483:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
 484:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 485:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 486:../user/source/DLT645.c ****  **********************************************************************/
 487:../user/source/DLT645.c **** void Query_Voltage_Limit(uint8_t *pucBuffer)
 488:../user/source/DLT645.c **** {
 489:../user/source/DLT645.c ****     int i = 0;
 490:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
 491:../user/source/DLT645.c ****     pucBuffer[9] = 0x0C;
 492:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(Voltage_MAX_MAX);
 493:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(Voltage_MAX_MAX); //µçÑ¹ÉÏÉÏÏŞ
 494:../user/source/DLT645.c ****     pucBuffer[16] = GetLowByte(Voltage_MIN_MIN);
 495:../user/source/DLT645.c ****     pucBuffer[17] = GetHighByte(Voltage_MIN_MIN); //µçÑ¹ÏÂÏÂÏŞ
 496:../user/source/DLT645.c ****     pucBuffer[18] = GetLowByte(Voltage_MAX);
 497:../user/source/DLT645.c ****     pucBuffer[19] = GetHighByte(Voltage_MAX); //µçÑ¹ÉÏÏŞÖµ
 498:../user/source/DLT645.c ****     pucBuffer[20] = GetLowByte(Voltage_MIN);
 499:../user/source/DLT645.c ****     pucBuffer[21] = GetHighByte(Voltage_MIN); //µçÑ¹ÏÂÏŞÖµ
 500:../user/source/DLT645.c ****     pucBuffer[22] = 0x00;                     //ÇóÈ¡Ğ£ÑéºÍ
 501:../user/source/DLT645.c ****     for (i = 0; i < 24 - 2; i++)              //±¨ÎÄ³¤¶È24
 502:../user/source/DLT645.c ****     {
 503:../user/source/DLT645.c ****         pucBuffer[22] += pucBuffer[i];
 504:../user/source/DLT645.c ****     }
 505:../user/source/DLT645.c ****     pucBuffer[23] = 0x16; //½áÊø·û
 506:../user/source/DLT645.c ****     uc645DataDomainLength = 12;
 507:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 508:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 509:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 510:../user/source/DLT645.c ****     {
 511:../user/source/DLT645.c ****         Uart_DataPut(USART3);
 512:../user/source/DLT645.c ****     }
 513:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 12


 514:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 24);
 515:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 516:../user/source/DLT645.c ****     {
 517:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
 518:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 519:../user/source/DLT645.c ****     }
 520:../user/source/DLT645.c **** }
 521:../user/source/DLT645.c **** 
 522:../user/source/DLT645.c **** /********************************************************************
 523:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ÏŞÖµ»Ö¸´³ö³§
 524:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 525:../user/source/DLT645.c ****  * Êä    ³ö£º	none
 526:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 527:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 528:../user/source/DLT645.c ****  **********************************************************************/
 529:../user/source/DLT645.c **** void Default_Reset(uint8_t *pucBuffer)
 530:../user/source/DLT645.c **** {
 531:../user/source/DLT645.c ****     int i = 0;
 532:../user/source/DLT645.c ****     A_Voltage = WORK_VOLTAGE;                                        //AÏàµçÑ¹Öµ¸ÄÎª±ê×¼Öµ
 533:../user/source/DLT645.c ****     B_Voltage = WORK_VOLTAGE;                                        //BÏàµçÑ¹Öµ¸ÄÎª±ê×¼Öµ
 534:../user/source/DLT645.c ****     C_Voltage = WORK_VOLTAGE;                                        //CÏàµçÑ¹Öµ¸ÄÎª±ê×¼Öµ
 535:../user/source/DLT645.c ****     Voltage_Change_State = Voltage_Change;                           //µçÑ¹ĞŞ¸Ä×´Ì¬¸ÄÎª¡°ÓĞĞ§¡±
 536:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VChangeState_Addr, Voltage_Change_State); //´æ´¢µ½FLASHÖĞ
 537:../user/source/DLT645.c ****     Voltage_MAX = Voltage_MAX_Default;                               //µçÑ¹ºÏ¸ñÏŞÖµ»Ö¸´Ä¬ÈÏ²¢ÇÒ´æµµ
 538:../user/source/DLT645.c ****     Voltage_MIN = Voltage_MIN_Default;
 539:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMAX1_Addr, GetLowByte(Voltage_MAX));
 540:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMAX2_Addr, GetHighByte(Voltage_MAX));
 541:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMIN1_Addr, GetLowByte(Voltage_MIN));
 542:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMIN2_Addr, GetHighByte(Voltage_MIN));
 543:../user/source/DLT645.c ****     pucBuffer[8] = 0x94;  //ÇóÈ¡Ğ£ÑéºÍ
 544:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;  //ÇóÈ¡Ğ£ÑéºÍ
 545:../user/source/DLT645.c ****     pucBuffer[10] = 0x00; //ÇóÈ¡Ğ£ÑéºÍ
 546:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 547:../user/source/DLT645.c ****     {
 548:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
 549:../user/source/DLT645.c ****     }
 550:../user/source/DLT645.c ****     pucBuffer[11] = 0x16; //½áÊø·û
 551:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
 552:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 553:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 554:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 555:../user/source/DLT645.c ****     {
 556:../user/source/DLT645.c ****         Uart_DataPut(USART3);
 557:../user/source/DLT645.c ****     }
 558:../user/source/DLT645.c ****     /*ºìÍâ¿Ú·¢ËÍ*/
 559:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
 560:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 561:../user/source/DLT645.c ****     {
 562:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
 563:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 564:../user/source/DLT645.c ****     }
 565:../user/source/DLT645.c **** }
 566:../user/source/DLT645.c **** 
 567:../user/source/DLT645.c **** /********************************************************************
 568:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹Ö¡´¦Àíº¯Êı
 569:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë£¬Çı¶¯²ã»º´æÖ¸Õë
 570:../user/source/DLT645.c ****  * Êä    ³ö£º
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 13


 571:../user/source/DLT645.c ****  *           
 572:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 573:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.10
 574:../user/source/DLT645.c ****  **********************************************************************/
 575:../user/source/DLT645.c **** void vVoltageHandle(uint8_t *pucBuffer)
 576:../user/source/DLT645.c **** {
 577:../user/source/DLT645.c ****     /*µÈ´ıµçÑ¹»ØÖ¡×´Ì¬ÇåÎ»*/
 578:../user/source/DLT645.c ****     Voltage_Frame_Status = FrameReplied;
 579:../user/source/DLT645.c ****     /*¼ÆÊ±Æ÷¸´Î»*/
 580:../user/source/DLT645.c ****     blFramesCounterStatus = false;
 581:../user/source/DLT645.c ****     uwTime2FramesCounter = 0;
 582:../user/source/DLT645.c ****     /*µçÑ¹Ö¡ÅĞ¶Ï´¦Àí*/
 583:../user/source/DLT645.c ****     Voltage_Modifier(pucBuffer);
 584:../user/source/DLT645.c **** }
 585:../user/source/DLT645.c **** 
 586:../user/source/DLT645.c **** /********************************************************************
 587:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ºÏ¸ñÂÊÅĞ¶Ïµ÷Õû
 588:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 589:../user/source/DLT645.c ****  * Êä    ³ö£º	none
 590:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 591:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 592:../user/source/DLT645.c ****  **********************************************************************/
 593:../user/source/DLT645.c **** void Voltage_Modifier(uint8_t *pucBuffer)
 594:../user/source/DLT645.c **** {
 595:../user/source/DLT645.c **** 
 596:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
 597:../user/source/DLT645.c ****     uint8_t i = 0;
 598:../user/source/DLT645.c ****     //IWDG_ReloadCounter();
 599:../user/source/DLT645.c ****     if (Voltage_Change_State == Voltage_NOChange)
 600:../user/source/DLT645.c ****         return;
 601:../user/source/DLT645.c ****     if ((pucBuffer[8] == 0X91) &&
 602:../user/source/DLT645.c ****         (pucBuffer[10] == 0x33) &&
 603:../user/source/DLT645.c ****         (pucBuffer[12] == 0x34) &&
 604:../user/source/DLT645.c ****         (pucBuffer[13] == 0x35))
 605:../user/source/DLT645.c ****     {
 606:../user/source/DLT645.c ****         if (pucBuffer[11] == 0x32) //ÈıÏàµçÑ¹Êı¾İ¿é
 607:../user/source/DLT645.c ****         {
 608:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[14], pucBuffer[15])) //BCDĞ£Ñé
 609:../user/source/DLT645.c ****             {
 610:../user/source/DLT645.c ****                 A_Voltage = Get_Voltage(pucBuffer[14], pucBuffer[15]);
 611:../user/source/DLT645.c ****                 if ((A_Voltage > Voltage_MAX) || (A_Voltage < Voltage_MIN)) //ĞŞ¸ÄAÏàµçÑ¹
 612:../user/source/DLT645.c ****                 {
 613:../user/source/DLT645.c ****                     A_Voltage = Voltage_Modifier_Method(A_Voltage);
 614:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(A_Voltage);
 615:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(A_Voltage);
 616:../user/source/DLT645.c ****                 }
 617:../user/source/DLT645.c ****             }
 618:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[16], pucBuffer[17])) //BCDĞ£Ñé
 619:../user/source/DLT645.c ****             {
 620:../user/source/DLT645.c ****                 B_Voltage = Get_Voltage(pucBuffer[16], pucBuffer[17]);
 621:../user/source/DLT645.c ****                 if ((B_Voltage > Voltage_MAX) || (B_Voltage < Voltage_MIN)) //ĞŞ¸ÄBÏàµçÑ¹
 622:../user/source/DLT645.c ****                 {
 623:../user/source/DLT645.c ****                     B_Voltage = Voltage_Modifier_Method(B_Voltage);
 624:../user/source/DLT645.c ****                     pucBuffer[16] = GetLowByte(B_Voltage);
 625:../user/source/DLT645.c ****                     pucBuffer[17] = GetHighByte(B_Voltage);
 626:../user/source/DLT645.c ****                 }
 627:../user/source/DLT645.c ****             }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 14


 628:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[18], pucBuffer[19])) //BCDĞ£Ñé
 629:../user/source/DLT645.c ****             {
 630:../user/source/DLT645.c ****                 C_Voltage = Get_Voltage(pucBuffer[18], pucBuffer[19]);
 631:../user/source/DLT645.c ****                 if ((C_Voltage > Voltage_MAX) || (C_Voltage < Voltage_MIN)) //ĞŞ¸ÄCÏàµçÑ¹
 632:../user/source/DLT645.c ****                 {
 633:../user/source/DLT645.c ****                     C_Voltage = Voltage_Modifier_Method(C_Voltage);
 634:../user/source/DLT645.c ****                     pucBuffer[18] = GetLowByte(C_Voltage);
 635:../user/source/DLT645.c ****                     pucBuffer[19] = GetHighByte(C_Voltage);
 636:../user/source/DLT645.c ****                 }
 637:../user/source/DLT645.c ****             }
 638:../user/source/DLT645.c ****         }
 639:../user/source/DLT645.c ****         if (pucBuffer[11] == 0x34) //AÏàµçÑ¹Êı¾İ
 640:../user/source/DLT645.c ****         {
 641:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[14], pucBuffer[15])) //BCDĞ£Ñé
 642:../user/source/DLT645.c ****             {
 643:../user/source/DLT645.c ****                 A_Voltage = Get_Voltage(pucBuffer[14], pucBuffer[15]);
 644:../user/source/DLT645.c ****                 if ((A_Voltage > Voltage_MAX) || (A_Voltage < Voltage_MIN)) //ĞŞ¸ÄAÏàµçÑ¹
 645:../user/source/DLT645.c ****                 {
 646:../user/source/DLT645.c ****                     A_Voltage = Voltage_Modifier_Method(A_Voltage);
 647:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(A_Voltage);
 648:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(A_Voltage);
 649:../user/source/DLT645.c ****                 }
 650:../user/source/DLT645.c ****             }
 651:../user/source/DLT645.c ****         }
 652:../user/source/DLT645.c ****         if (pucBuffer[11] == 0x35) //BÏàµçÑ¹Êı¾İ
 653:../user/source/DLT645.c ****         {
 654:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[14], pucBuffer[15])) //BCDĞ£Ñé
 655:../user/source/DLT645.c ****             {
 656:../user/source/DLT645.c ****                 B_Voltage = Get_Voltage(pucBuffer[14], pucBuffer[15]);
 657:../user/source/DLT645.c ****                 if ((B_Voltage > Voltage_MAX) || (B_Voltage < Voltage_MIN)) //ĞŞ¸ÄBÏàµçÑ¹
 658:../user/source/DLT645.c ****                 {
 659:../user/source/DLT645.c ****                     B_Voltage = Voltage_Modifier_Method(B_Voltage);
 660:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(B_Voltage);
 661:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(B_Voltage);
 662:../user/source/DLT645.c ****                 }
 663:../user/source/DLT645.c ****             }
 664:../user/source/DLT645.c ****         }
 665:../user/source/DLT645.c ****         if (pucBuffer[11] == 0x36) //CÏàµçÑ¹Êı¾İ
 666:../user/source/DLT645.c ****         {
 667:../user/source/DLT645.c ****             if (BCD_Verity(pucBuffer[14], pucBuffer[15])) //BCDĞ£Ñé
 668:../user/source/DLT645.c ****             {
 669:../user/source/DLT645.c ****                 C_Voltage = Get_Voltage(pucBuffer[14], pucBuffer[15]);
 670:../user/source/DLT645.c ****                 if ((C_Voltage > Voltage_MAX) || (C_Voltage < Voltage_MIN)) //ĞŞ¸ÄCÏàµçÑ¹
 671:../user/source/DLT645.c ****                 {
 672:../user/source/DLT645.c ****                     C_Voltage = Voltage_Modifier_Method(C_Voltage);
 673:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(C_Voltage);
 674:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(C_Voltage);
 675:../user/source/DLT645.c ****                 }
 676:../user/source/DLT645.c ****             }
 677:../user/source/DLT645.c ****         }
 678:../user/source/DLT645.c ****         //ÇóÈ¡Ğ£ÑéºÍ
 679:../user/source/DLT645.c ****         for (i = 0; i < uc645DataDomainLength + 10; i++)
 680:../user/source/DLT645.c ****         {
 681:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
 682:../user/source/DLT645.c ****         }
 683:../user/source/DLT645.c ****         pucBuffer[uc645DataDomainLength + 10] = ucCheckData;
 684:../user/source/DLT645.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 15


 685:../user/source/DLT645.c ****     return;
 686:../user/source/DLT645.c **** }
 687:../user/source/DLT645.c **** /********************************************************************
 688:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º»Ø¸´µçÑ¹Ö¡×éÖ¡º¯Êı
 689:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 690:../user/source/DLT645.c ****  * Êä    ³ö£º	true/false
 691:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 692:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 693:../user/source/DLT645.c ****  **********************************************************************/
 694:../user/source/DLT645.c **** bool blVoltage_Create(uint8_t *pucBuffer)
 695:../user/source/DLT645.c **** {
 696:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
 697:../user/source/DLT645.c ****     uint8_t i = 0;
 698:../user/source/DLT645.c ****     switch (pucBuffer[11])
 699:../user/source/DLT645.c ****     {
 700:../user/source/DLT645.c ****     case 0x32: //ÈıÏàµçÑ¹Êı¾İ¿é
 701:../user/source/DLT645.c ****     {
 702:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 703:../user/source/DLT645.c ****         pucBuffer[9] = 0x0A;
 704:../user/source/DLT645.c ****         //Ê¹ÓÃÉÏ´ÎĞŞ¸ÄµÄºÏ·¨µçÑ¹Öµ»ò1000 2017-10-25:
 705:../user/source/DLT645.c ****         A_Voltage = ((A_Voltage <= Voltage_MAX) && (A_Voltage >= Voltage_MIN)
 706:../user/source/DLT645.c ****                          ? A_Voltage
 707:../user/source/DLT645.c ****                          : WORK_VOLTAGE);
 708:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 709:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(A_Voltage);
 710:../user/source/DLT645.c ****         B_Voltage = ((B_Voltage <= Voltage_MAX) && (B_Voltage >= Voltage_MIN)
 711:../user/source/DLT645.c ****                          ? B_Voltage
 712:../user/source/DLT645.c ****                          : WORK_VOLTAGE);
 713:../user/source/DLT645.c ****         pucBuffer[16] = GetLowByte(B_Voltage);
 714:../user/source/DLT645.c ****         pucBuffer[17] = GetHighByte(B_Voltage);
 715:../user/source/DLT645.c ****         C_Voltage = ((C_Voltage <= Voltage_MAX) && (C_Voltage >= Voltage_MIN)
 716:../user/source/DLT645.c ****                          ? C_Voltage
 717:../user/source/DLT645.c ****                          : WORK_VOLTAGE);
 718:../user/source/DLT645.c ****         pucBuffer[18] = GetLowByte(C_Voltage);
 719:../user/source/DLT645.c ****         pucBuffer[19] = GetHighByte(C_Voltage);
 720:../user/source/DLT645.c ****         for (i = 0; i < 20; i++) //¹Ì¶¨Ö¡³¤22
 721:../user/source/DLT645.c ****         {
 722:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
 723:../user/source/DLT645.c ****         }
 724:../user/source/DLT645.c ****         pucBuffer[20] = ucCheckData;
 725:../user/source/DLT645.c ****         pucBuffer[21] = 0x16;
 726:../user/source/DLT645.c ****         return true;
 727:../user/source/DLT645.c ****     }
 728:../user/source/DLT645.c ****     case 0x34: //AÏàµçÑ¹Êı¾İ
 729:../user/source/DLT645.c ****     {
 730:../user/source/DLT645.c ****         A_Voltage = ((A_Voltage <= Voltage_MAX) && (A_Voltage >= Voltage_MIN)
 731:../user/source/DLT645.c ****                          ? A_Voltage
 732:../user/source/DLT645.c ****                          : WORK_VOLTAGE);
 733:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 734:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 735:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 736:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(A_Voltage);
 737:../user/source/DLT645.c ****         for (i = 0; i < 16; i++) //¹Ì¶¨Ö¡³¤18
 738:../user/source/DLT645.c ****         {
 739:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
 740:../user/source/DLT645.c ****         }
 741:../user/source/DLT645.c ****         pucBuffer[16] = ucCheckData;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 16


 742:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 743:../user/source/DLT645.c ****         return true;
 744:../user/source/DLT645.c ****     }
 745:../user/source/DLT645.c ****     case 0x35: //BÏàµçÑ¹Êı¾İ
 746:../user/source/DLT645.c ****     {
 747:../user/source/DLT645.c ****         B_Voltage = ((B_Voltage <= Voltage_MAX) && (B_Voltage >= Voltage_MIN)
 748:../user/source/DLT645.c ****                          ? B_Voltage
 749:../user/source/DLT645.c ****                          : WORK_VOLTAGE);
 750:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 751:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 752:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(B_Voltage);
 753:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(B_Voltage);
 754:../user/source/DLT645.c ****         for (i = 0; i < 16; i++) //¹Ì¶¨Ö¡³¤18
 755:../user/source/DLT645.c ****         {
 756:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
 757:../user/source/DLT645.c ****         }
 758:../user/source/DLT645.c ****         pucBuffer[16] = ucCheckData;
 759:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 760:../user/source/DLT645.c ****         return true;
 761:../user/source/DLT645.c ****     }
 762:../user/source/DLT645.c ****     case 0x36: //CÏàµçÑ¹Êı¾İ
 763:../user/source/DLT645.c ****     {
 764:../user/source/DLT645.c ****         C_Voltage = ((C_Voltage <= Voltage_MAX) && (C_Voltage >= Voltage_MIN)
 765:../user/source/DLT645.c ****                          ? C_Voltage
 766:../user/source/DLT645.c ****                          : WORK_VOLTAGE); //¹Ì¶¨Ö¡³¤18
 767:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 768:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 769:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(C_Voltage);
 770:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(C_Voltage);
 771:../user/source/DLT645.c ****         for (i = 0; i < 16; i++)
 772:../user/source/DLT645.c ****         {
 773:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
 774:../user/source/DLT645.c ****         }
 775:../user/source/DLT645.c ****         pucBuffer[16] = ucCheckData;
 776:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 777:../user/source/DLT645.c ****         return true;
 778:../user/source/DLT645.c ****     }
 779:../user/source/DLT645.c ****     default:
 780:../user/source/DLT645.c ****         return false; //Èç¹ûÊÕµ½µÄµçÑ¹Ö¡²»ÊÇÕÙ²âA/B/CÏà£¬ÔòÊÕÖ¡´íÎó£¬¼´Ê¹µç±í»Ø¸´³¬Ê±£¬Ò²²»ÄÜÌæ´ú»Ø
 781:../user/source/DLT645.c ****     }
 782:../user/source/DLT645.c **** }
 783:../user/source/DLT645.c **** /********************************************************************
 784:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºBCDÂëĞ£Ñé
 785:../user/source/DLT645.c ****  * Êä    Èë£ºµçÑ¹Êı¾İµÄµÍ×Ö½ÚºÍ¸ß×Ö½Ú
 786:../user/source/DLT645.c ****  * Êä    ³ö£ºtrue»òfalse
 787:../user/source/DLT645.c ****  *           
 788:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 789:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 790:../user/source/DLT645.c ****  **********************************************************************/
 791:../user/source/DLT645.c **** bool BCD_Verity(uint8_t LowByte, uint8_t HighByte)
 792:../user/source/DLT645.c **** {
 113              		.loc 1 792 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118              	.LVL13:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 17


 793:../user/source/DLT645.c ****     uint8_t hundreds; //µçÑ¹°ÙÎ»
 794:../user/source/DLT645.c ****     uint8_t tens;     //µçÑ¹Ê®Î»
 795:../user/source/DLT645.c ****     uint8_t ones;     //µçÑ¹¸öÎ»
 796:../user/source/DLT645.c ****     uint8_t decimals; //µçÑ¹Ğ¡ÊıÎ»
 797:../user/source/DLT645.c ****     hundreds = (HighByte & 0xF0) >> 4;
 119              		.loc 1 797 0
 120 0000 0B09     		lsrs	r3, r1, #4
 121              	.LVL14:
 798:../user/source/DLT645.c ****     tens = HighByte & 0x0F;
 122              		.loc 1 798 0
 123 0002 01F00F01 		and	r1, r1, #15
 124              	.LVL15:
 799:../user/source/DLT645.c ****     ones = (LowByte & 0xF0) >> 4;
 125              		.loc 1 799 0
 126 0006 0209     		lsrs	r2, r0, #4
 127              	.LVL16:
 800:../user/source/DLT645.c ****     decimals = LowByte & 0x0F;
 128              		.loc 1 800 0
 129 0008 00F00F00 		and	r0, r0, #15
 130              	.LVL17:
 801:../user/source/DLT645.c ****     if ((hundreds >= 0x03) &&
 131              		.loc 1 801 0
 132 000c 033B     		subs	r3, r3, #3
 133              	.LVL18:
 134 000e DBB2     		uxtb	r3, r3
 135              	.LVL19:
 136 0010 092B     		cmp	r3, #9
 137 0012 0DD8     		bhi	.L12
 802:../user/source/DLT645.c ****         (hundreds <= 0x0C) &&
 138              		.loc 1 802 0
 139 0014 0229     		cmp	r1, #2
 140 0016 0DD9     		bls	.L13
 803:../user/source/DLT645.c ****         (tens >= 0x03) &&
 141              		.loc 1 803 0
 142 0018 0C29     		cmp	r1, #12
 143 001a 0DD8     		bhi	.L14
 804:../user/source/DLT645.c ****         (tens <= 0x0C) &&
 144              		.loc 1 804 0
 145 001c 022A     		cmp	r2, #2
 146 001e 0DD9     		bls	.L15
 805:../user/source/DLT645.c ****         (ones >= 0x03) &&
 147              		.loc 1 805 0
 148 0020 0C2A     		cmp	r2, #12
 149 0022 0DD8     		bhi	.L16
 806:../user/source/DLT645.c ****         (ones <= 0x0C) &&
 150              		.loc 1 806 0
 151 0024 0228     		cmp	r0, #2
 152 0026 0DD9     		bls	.L17
 807:../user/source/DLT645.c ****         (decimals >= 0x03) &&
 153              		.loc 1 807 0
 154 0028 0C28     		cmp	r0, #12
 155 002a 0DD9     		bls	.L18
 808:../user/source/DLT645.c ****         (decimals <= 0x0C))
 809:../user/source/DLT645.c ****     {
 810:../user/source/DLT645.c ****         return true;
 811:../user/source/DLT645.c ****     }
 812:../user/source/DLT645.c ****     else
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 18


 813:../user/source/DLT645.c ****     {
 814:../user/source/DLT645.c ****         return false;
 156              		.loc 1 814 0
 157 002c 0020     		movs	r0, #0
 158              	.LVL20:
 159 002e 7047     		bx	lr
 160              	.LVL21:
 161              	.L12:
 162 0030 0020     		movs	r0, #0
 163              	.LVL22:
 164 0032 7047     		bx	lr
 165              	.LVL23:
 166              	.L13:
 167 0034 0020     		movs	r0, #0
 168              	.LVL24:
 169 0036 7047     		bx	lr
 170              	.LVL25:
 171              	.L14:
 172 0038 0020     		movs	r0, #0
 173              	.LVL26:
 174 003a 7047     		bx	lr
 175              	.LVL27:
 176              	.L15:
 177 003c 0020     		movs	r0, #0
 178              	.LVL28:
 179 003e 7047     		bx	lr
 180              	.LVL29:
 181              	.L16:
 182 0040 0020     		movs	r0, #0
 183              	.LVL30:
 184 0042 7047     		bx	lr
 185              	.LVL31:
 186              	.L17:
 187 0044 0020     		movs	r0, #0
 188              	.LVL32:
 189 0046 7047     		bx	lr
 190              	.LVL33:
 191              	.L18:
 810:../user/source/DLT645.c ****     }
 192              		.loc 1 810 0
 193 0048 0120     		movs	r0, #1
 194              	.LVL34:
 815:../user/source/DLT645.c ****     }
 816:../user/source/DLT645.c **** }
 195              		.loc 1 816 0
 196 004a 7047     		bx	lr
 197              		.cfi_endproc
 198              	.LFE122:
 200              		.section	.text.Get_Voltage,"ax",%progbits
 201              		.align	2
 202              		.thumb
 203              		.thumb_func
 205              	Get_Voltage:
 206              	.LFB123:
 817:../user/source/DLT645.c **** 
 818:../user/source/DLT645.c **** /********************************************************************
 819:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º´ÓÊı¾İÖ¡ÖĞ¶ÁÈ¡µçÑ¹Öµ
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 19


 820:../user/source/DLT645.c ****  * Êä    Èë£ºµçÑ¹ÖµµÍ×Ö½Ú¡¢¸ß×Ö½Ú
 821:../user/source/DLT645.c ****  * Êä    ³ö£ºÊ®½øÖÆµÄµçÑ¹Öµ
 822:../user/source/DLT645.c ****  *           
 823:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 824:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 825:../user/source/DLT645.c ****  **********************************************************************/
 826:../user/source/DLT645.c **** int Get_Voltage(uint8_t LowByte, uint8_t HighByte)
 827:../user/source/DLT645.c **** {
 207              		.loc 1 827 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 212              	.LVL35:
 213 0000 10B4     		push	{r4}
 214              	.LCFI2:
 215              		.cfi_def_cfa_offset 4
 216              		.cfi_offset 4, -4
 217              	.LVL36:
 828:../user/source/DLT645.c ****     int Voltage = 0;
 829:../user/source/DLT645.c ****     uint8_t hundreds; //µçÑ¹°ÙÎ»
 830:../user/source/DLT645.c ****     uint8_t tens;     //µçÑ¹Ê®Î»
 831:../user/source/DLT645.c ****     uint8_t ones;     //µçÑ¹¸öÎ»
 832:../user/source/DLT645.c ****     uint8_t decimals; //µçÑ¹Ğ¡ÊıÎ»
 833:../user/source/DLT645.c ****     hundreds = ((HighByte - 0x33) & 0xF0) >> 4;
 218              		.loc 1 833 0
 219 0002 3339     		subs	r1, r1, #51
 220              	.LVL37:
 221 0004 C1F30314 		ubfx	r4, r1, #4, #4
 222              	.LVL38:
 834:../user/source/DLT645.c ****     tens = (HighByte - 0x33) & 0x0F;
 223              		.loc 1 834 0
 224 0008 01F00F01 		and	r1, r1, #15
 225              	.LVL39:
 835:../user/source/DLT645.c ****     ones = ((LowByte - 0x33) & 0xF0) >> 4;
 226              		.loc 1 835 0
 227 000c 3338     		subs	r0, r0, #51
 228              	.LVL40:
 229 000e C0F30313 		ubfx	r3, r0, #4, #4
 230              	.LVL41:
 836:../user/source/DLT645.c ****     decimals = (LowByte - 0x33) & 0x0F;
 231              		.loc 1 836 0
 232 0012 00F00F00 		and	r0, r0, #15
 233              	.LVL42:
 837:../user/source/DLT645.c ****     Voltage = hundreds * 1000 + tens * 100 + ones * 10 + decimals; //Îª±íÊ¾Ğ¡ÊıÎ»£¬½«ÊıÕûÌåÔö´ó10±¶
 234              		.loc 1 837 0
 235 0016 6422     		movs	r2, #100
 236 0018 02FB01F1 		mul	r1, r2, r1
 237              	.LVL43:
 238 001c 4FF47A72 		mov	r2, #1000
 239 0020 02FB0414 		mla	r4, r2, r4, r1
 240              	.LVL44:
 241 0024 03EB8303 		add	r3, r3, r3, lsl #2
 242              	.LVL45:
 243 0028 5A00     		lsls	r2, r3, #1
 244 002a 2244     		add	r2, r2, r4
 245              	.LVL46:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 20


 838:../user/source/DLT645.c ****     return Voltage;
 839:../user/source/DLT645.c **** }
 246              		.loc 1 839 0
 247 002c 1044     		add	r0, r0, r2
 248              	.LVL47:
 249 002e 5DF8044B 		ldr	r4, [sp], #4
 250              	.LCFI3:
 251              		.cfi_restore 4
 252              		.cfi_def_cfa_offset 0
 253 0032 7047     		bx	lr
 254              		.cfi_endproc
 255              	.LFE123:
 257              		.section	.text.vGet_Current,"ax",%progbits
 258              		.align	2
 259              		.thumb
 260              		.thumb_func
 262              	vGet_Current:
 263              	.LFB124:
 840:../user/source/DLT645.c **** 
 841:../user/source/DLT645.c **** /********************************************************************
 842:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º´ÓÊı¾İÖ¡ÖĞ¶ÁÈ¡µçÁ÷Öµ
 843:../user/source/DLT645.c ****  * Êä    Èë£ºµçÁ÷ÖµµÍ×Ö½Ú¡¢ÖĞ×Ö½Ú¡¢¸ß×Ö½Ú
 844:../user/source/DLT645.c ****  * Êä    ³ö£ºÊ®½øÖÆµÄµçÁ÷Öµ
 845:../user/source/DLT645.c ****  * Òª    Çó£º
 846:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 847:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 848:../user/source/DLT645.c ****  **********************************************************************/
 849:../user/source/DLT645.c **** void vGet_Current(uint8_t LowByte, uint8_t MidByte, uint8_t HighByte, CURRENT *pcurrent)
 850:../user/source/DLT645.c **** {
 264              		.loc 1 850 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              	.LVL48:
 269 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 270              	.LCFI4:
 271              		.cfi_def_cfa_offset 20
 272              		.cfi_offset 4, -20
 273              		.cfi_offset 5, -16
 274              		.cfi_offset 6, -12
 275              		.cfi_offset 7, -8
 276              		.cfi_offset 14, -4
 851:../user/source/DLT645.c ****     uint8_t million;
 852:../user/source/DLT645.c ****     uint8_t tenkillo;
 853:../user/source/DLT645.c ****     uint8_t killo;
 854:../user/source/DLT645.c ****     uint8_t hundreds;
 855:../user/source/DLT645.c ****     uint8_t tens;
 856:../user/source/DLT645.c ****     uint8_t ones;
 857:../user/source/DLT645.c ****     million = ((HighByte - 0x33) & 0x70) >> 4; //È¡bit7~bit5£¬×î¸ßÎ»ÊÇ·ûºÅÎ»,ºöÂÔ
 277              		.loc 1 857 0
 278 0002 333A     		subs	r2, r2, #51
 279              	.LVL49:
 280 0004 C2F30217 		ubfx	r7, r2, #4, #3
 281              	.LVL50:
 858:../user/source/DLT645.c ****     tenkillo = (HighByte - 0x33) & 0x0F;
 282              		.loc 1 858 0
 283 0008 02F00F04 		and	r4, r2, #15
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 21


 284              	.LVL51:
 859:../user/source/DLT645.c ****     killo = ((MidByte - 0x33) & 0xF0) >> 4;
 285              		.loc 1 859 0
 286 000c 3339     		subs	r1, r1, #51
 287              	.LVL52:
 288 000e C1F30316 		ubfx	r6, r1, #4, #4
 289              	.LVL53:
 860:../user/source/DLT645.c ****     hundreds = (MidByte - 0x33) & 0x0F;
 290              		.loc 1 860 0
 291 0012 01F00F0C 		and	ip, r1, #15
 292              	.LVL54:
 861:../user/source/DLT645.c ****     tens = ((LowByte - 0x33) & 0xF0) >> 4;
 293              		.loc 1 861 0
 294 0016 3338     		subs	r0, r0, #51
 295              	.LVL55:
 296 0018 C0F30315 		ubfx	r5, r0, #4, #4
 297              	.LVL56:
 862:../user/source/DLT645.c ****     ones = (LowByte - 0x33) & 0x0F;
 298              		.loc 1 862 0
 299 001c 00F00F00 		and	r0, r0, #15
 300              	.LVL57:
 863:../user/source/DLT645.c ****     pcurrent->value = million * 100000 +
 864:../user/source/DLT645.c ****                       tenkillo * 10000 +
 301              		.loc 1 864 0
 302 0020 42F2107E 		movw	lr, #10000
 303 0024 0EFB04FE 		mul	lr, lr, r4
 863:../user/source/DLT645.c ****     pcurrent->value = million * 100000 +
 304              		.loc 1 863 0
 305 0028 0B49     		ldr	r1, .L23
 306 002a 01FB07E7 		mla	r7, r1, r7, lr
 307              	.LVL58:
 308              		.loc 1 864 0
 309 002e 4FF47A71 		mov	r1, #1000
 310 0032 01FB0676 		mla	r6, r1, r6, r7
 311              	.LVL59:
 865:../user/source/DLT645.c ****                       killo * 1000 +
 312              		.loc 1 865 0
 313 0036 6424     		movs	r4, #100
 314              	.LVL60:
 315 0038 04FB0C61 		mla	r1, r4, ip, r6
 866:../user/source/DLT645.c ****                       hundreds * 100 +
 867:../user/source/DLT645.c ****                       tens * 10 + ones;
 316              		.loc 1 867 0
 317 003c 05EB8505 		add	r5, r5, r5, lsl #2
 318              	.LVL61:
 319 0040 6C00     		lsls	r4, r5, #1
 866:../user/source/DLT645.c ****                       hundreds * 100 +
 320              		.loc 1 866 0
 321 0042 0C44     		add	r4, r4, r1
 322              		.loc 1 867 0
 323 0044 0444     		add	r4, r4, r0
 863:../user/source/DLT645.c ****                       tenkillo * 10000 +
 324              		.loc 1 863 0
 325 0046 1C60     		str	r4, [r3]
 868:../user/source/DLT645.c ****     pcurrent->count++;
 326              		.loc 1 868 0
 327 0048 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 22


 328 004a 0131     		adds	r1, r1, #1
 329 004c 1971     		strb	r1, [r3, #4]
 869:../user/source/DLT645.c ****     pcurrent->isminus = ((((HighByte - 0x33) & 0x80) != 0) ? true : false);
 330              		.loc 1 869 0
 331 004e C2F3C012 		ubfx	r2, r2, #7, #1
 332              	.LVL62:
 333 0052 5A71     		strb	r2, [r3, #5]
 334 0054 F0BD     		pop	{r4, r5, r6, r7, pc}
 335              	.L24:
 336 0056 00BF     		.align	2
 337              	.L23:
 338 0058 A0860100 		.word	100000
 339              		.cfi_endproc
 340              	.LFE124:
 342              		.section	.text.vPut_Current,"ax",%progbits
 343              		.align	2
 344              		.thumb
 345              		.thumb_func
 347              	vPut_Current:
 348              	.LFB125:
 870:../user/source/DLT645.c **** }
 871:../user/source/DLT645.c **** /********************************************************************
 872:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½«µçÁ÷ÖµĞ´ÈëÖ¡×Ö½Ú
 873:../user/source/DLT645.c ****  * Êä    Èë£ºµçÁ÷ÖµµÍ×Ö½Ú¡¢ÖĞ×Ö½Ú¡¢¸ß×Ö½Ú£¬µçÁ÷Öµ
 874:../user/source/DLT645.c ****  * Êä    ³ö£º
 875:../user/source/DLT645.c ****  * Òª    Çó£ºµçÁ÷Öµ²»Îª¸ºÖµ
 876:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 877:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 878:../user/source/DLT645.c ****  **********************************************************************/
 879:../user/source/DLT645.c **** void vPut_Current(CURRENT pcurrent, uint8_t *pLowByte, uint8_t *pMidByte, uint8_t *pHighByte)
 880:../user/source/DLT645.c **** {
 349              		.loc 1 880 0
 350              		.cfi_startproc
 351              		@ args = 4, pretend = 0, frame = 8
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 354              	.LVL63:
 355 0000 F0B4     		push	{r4, r5, r6, r7}
 356              	.LCFI5:
 357              		.cfi_def_cfa_offset 16
 358              		.cfi_offset 4, -16
 359              		.cfi_offset 5, -12
 360              		.cfi_offset 6, -8
 361              		.cfi_offset 7, -4
 362 0002 82B0     		sub	sp, sp, #8
 363              	.LCFI6:
 364              		.cfi_def_cfa_offset 24
 365 0004 02AC     		add	r4, sp, #8
 366 0006 04E90300 		stmdb	r4, {r0, r1}
 367 000a 0698     		ldr	r0, [sp, #24]
 881:../user/source/DLT645.c ****     *pLowByte = 0x33 + ((uint8_t)(((pcurrent.value / 10) % 10) << 4) |
 368              		.loc 1 881 0
 369 000c 009E     		ldr	r6, [sp]
 370 000e 2849     		ldr	r1, .L28
 371 0010 A1FB0647 		umull	r4, r7, r1, r6
 372 0014 FF08     		lsrs	r7, r7, #3
 373 0016 A1FB0754 		umull	r5, r4, r1, r7
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 23


 374 001a E408     		lsrs	r4, r4, #3
 375 001c 04EB8404 		add	r4, r4, r4, lsl #2
 376 0020 6500     		lsls	r5, r4, #1
 377 0022 7C1B     		subs	r4, r7, r5
 378 0024 2401     		lsls	r4, r4, #4
 379 0026 E4B2     		uxtb	r4, r4
 882:../user/source/DLT645.c ****                         (uint8_t)(pcurrent.value % 10));
 380              		.loc 1 882 0
 381 0028 07EB8707 		add	r7, r7, r7, lsl #2
 382 002c 7D00     		lsls	r5, r7, #1
 383 002e 751B     		subs	r5, r6, r5
 384 0030 EDB2     		uxtb	r5, r5
 881:../user/source/DLT645.c ****     *pLowByte = 0x33 + ((uint8_t)(((pcurrent.value / 10) % 10) << 4) |
 385              		.loc 1 881 0
 386 0032 2C43     		orrs	r4, r4, r5
 387 0034 3334     		adds	r4, r4, #51
 388 0036 1470     		strb	r4, [r2]
 883:../user/source/DLT645.c ****     *pMidByte = 0x33 + ((uint8_t)(((pcurrent.value / 1000) % 10) << 4) |
 389              		.loc 1 883 0
 390 0038 1E4C     		ldr	r4, .L28+4
 391 003a A4FB0624 		umull	r2, r4, r4, r6
 392              	.LVL64:
 393 003e A409     		lsrs	r4, r4, #6
 394 0040 A1FB0452 		umull	r5, r2, r1, r4
 395 0044 D208     		lsrs	r2, r2, #3
 396 0046 02EB8202 		add	r2, r2, r2, lsl #2
 397 004a 5500     		lsls	r5, r2, #1
 398 004c 621B     		subs	r2, r4, r5
 399 004e 1201     		lsls	r2, r2, #4
 400 0050 D5B2     		uxtb	r5, r2
 884:../user/source/DLT645.c ****                         (uint8_t)((pcurrent.value / 100) % 10));
 401              		.loc 1 884 0
 402 0052 194F     		ldr	r7, .L28+8
 403 0054 A7FB0627 		umull	r2, r7, r7, r6
 404 0058 7F09     		lsrs	r7, r7, #5
 405 005a A1FB0724 		umull	r2, r4, r1, r7
 406 005e E208     		lsrs	r2, r4, #3
 407 0060 02EB8202 		add	r2, r2, r2, lsl #2
 408 0064 5400     		lsls	r4, r2, #1
 409 0066 3A1B     		subs	r2, r7, r4
 410 0068 D2B2     		uxtb	r2, r2
 883:../user/source/DLT645.c ****     *pMidByte = 0x33 + ((uint8_t)(((pcurrent.value / 1000) % 10) << 4) |
 411              		.loc 1 883 0
 412 006a 2A43     		orrs	r2, r2, r5
 413 006c 3332     		adds	r2, r2, #51
 414 006e 1A70     		strb	r2, [r3]
 885:../user/source/DLT645.c ****     *pHighByte = 0x33 + ((uint8_t)((pcurrent.value / 100000) << 4) |
 415              		.loc 1 885 0
 416 0070 7309     		lsrs	r3, r6, #5
 417              	.LVL65:
 418 0072 124A     		ldr	r2, .L28+12
 419 0074 A2FB0332 		umull	r3, r2, r2, r3
 420 0078 D209     		lsrs	r2, r2, #7
 421 007a 1201     		lsls	r2, r2, #4
 422 007c D2B2     		uxtb	r2, r2
 886:../user/source/DLT645.c ****                          (uint8_t)((pcurrent.value / 10000) % 10));
 423              		.loc 1 886 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 24


 424 007e 104B     		ldr	r3, .L28+16
 425 0080 A3FB0636 		umull	r3, r6, r3, r6
 426 0084 760B     		lsrs	r6, r6, #13
 427 0086 A1FB0613 		umull	r1, r3, r1, r6
 428 008a D908     		lsrs	r1, r3, #3
 429 008c 01EB8101 		add	r1, r1, r1, lsl #2
 430 0090 4B00     		lsls	r3, r1, #1
 431 0092 F11A     		subs	r1, r6, r3
 432 0094 C9B2     		uxtb	r1, r1
 885:../user/source/DLT645.c ****     *pHighByte = 0x33 + ((uint8_t)((pcurrent.value / 100000) << 4) |
 433              		.loc 1 885 0
 434 0096 1143     		orrs	r1, r1, r2
 435 0098 3331     		adds	r1, r1, #51
 436 009a C9B2     		uxtb	r1, r1
 437 009c 0170     		strb	r1, [r0]
 887:../user/source/DLT645.c ****     if (pcurrent.isminus == true)
 438              		.loc 1 887 0
 439 009e 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 440 00a2 13B1     		cbz	r3, .L25
 888:../user/source/DLT645.c ****     {
 889:../user/source/DLT645.c ****         *pHighByte = *pHighByte | 0x80;
 441              		.loc 1 889 0
 442 00a4 61F07F01 		orn	r1, r1, #127
 443 00a8 0170     		strb	r1, [r0]
 444              	.L25:
 890:../user/source/DLT645.c ****     }
 891:../user/source/DLT645.c **** }
 445              		.loc 1 891 0
 446 00aa 02B0     		add	sp, sp, #8
 447              	.LCFI7:
 448              		.cfi_def_cfa_offset 16
 449              		@ sp needed
 450 00ac F0BC     		pop	{r4, r5, r6, r7}
 451              	.LCFI8:
 452              		.cfi_restore 7
 453              		.cfi_restore 6
 454              		.cfi_restore 5
 455              		.cfi_restore 4
 456              		.cfi_def_cfa_offset 0
 457              	.LVL66:
 458 00ae 7047     		bx	lr
 459              	.L29:
 460              		.align	2
 461              	.L28:
 462 00b0 CDCCCCCC 		.word	-858993459
 463 00b4 D34D6210 		.word	274877907
 464 00b8 1F85EB51 		.word	1374389535
 465 00bc C55A7C0A 		.word	175921861
 466 00c0 5917B7D1 		.word	-776530087
 467              		.cfi_endproc
 468              	.LFE125:
 470              		.section	.text.blCurrentSingle_Modify_Method,"ax",%progbits
 471              		.align	2
 472              		.thumb
 473              		.thumb_func
 475              	blCurrentSingle_Modify_Method:
 476              	.LFB129:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 25


 892:../user/source/DLT645.c **** 
 893:../user/source/DLT645.c **** /********************************************************************
 894:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ĞŞ¸Ä³õÊ¼»¯£º
 895:../user/source/DLT645.c ****  * Êä    Èë£º	none
 896:../user/source/DLT645.c ****  * Êä    ³ö£º	none
 897:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 898:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.10.25
 899:../user/source/DLT645.c ****  **********************************************************************/
 900:../user/source/DLT645.c **** void Voltage_Change_Init(void)
 901:../user/source/DLT645.c **** {
 902:../user/source/DLT645.c ****     uint8_t Vmax1;
 903:../user/source/DLT645.c ****     uint8_t Vmax2;
 904:../user/source/DLT645.c ****     uint8_t Vmin1;
 905:../user/source/DLT645.c ****     uint8_t Vmin2;
 906:../user/source/DLT645.c ****     /*µçÑ¹ĞŞ¸ÄÊ¹ÄÜÎ»³õÊ¼»¯*/
 907:../user/source/DLT645.c ****     Voltage_Change_State = EEProm_Read(FLASH_VChangeState_Addr); //´ÓflashÖĞ¶ÁÈ¡µçÑ¹ĞŞ¸ÄÊ¹ÄÜ×Ö½Ú
 908:../user/source/DLT645.c ****     /*µçÑ¹ĞŞ¸ÄÉÏÏÂÏŞ³õÊ¼»¯*/
 909:../user/source/DLT645.c ****     Vmax1 = EEProm_Read(FLASH_VMAX1_Addr);
 910:../user/source/DLT645.c ****     Vmax2 = EEProm_Read(FLASH_VMAX2_Addr);
 911:../user/source/DLT645.c ****     Vmin1 = EEProm_Read(FLASH_VMIN1_Addr);
 912:../user/source/DLT645.c ****     Vmin2 = EEProm_Read(FLASH_VMIN2_Addr);
 913:../user/source/DLT645.c **** 
 914:../user/source/DLT645.c ****     if ((Vmax1 == 0xff) &&
 915:../user/source/DLT645.c ****         (Vmax2 == 0xff) &&
 916:../user/source/DLT645.c ****         (Vmin1 == 0xff) &&
 917:../user/source/DLT645.c ****         (Vmin2 == 0xff))
 918:../user/source/DLT645.c ****     {
 919:../user/source/DLT645.c ****         Voltage_MAX = Voltage_MAX_Default; //ÉèÖÃµçÑ¹ºÏ¸ñÉÏÏÂÏŞÄ¬ÈÏÖµ
 920:../user/source/DLT645.c ****         Voltage_MIN = Voltage_MIN_Default;
 921:../user/source/DLT645.c ****     }
 922:../user/source/DLT645.c ****     else
 923:../user/source/DLT645.c ****     {
 924:../user/source/DLT645.c ****         Voltage_MAX = Get_Voltage(Vmax1, Vmax2); //flashÖĞ´æ´¢µÄÊÇ654¶ÔÓ¦Ö¡×Ö½Ú£¬Á½¸ö×Ö½Ú
 925:../user/source/DLT645.c ****         Voltage_MIN = Get_Voltage(Vmin1, Vmin2);
 926:../user/source/DLT645.c ****     }
 927:../user/source/DLT645.c **** }
 928:../user/source/DLT645.c **** 
 929:../user/source/DLT645.c **** /*****************************************************
 930:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ºÏ¸ñÂÊµ÷Õû²ßÂÔ
 931:../user/source/DLT645.c ****  * Êä    Èë£º
 932:../user/source/DLT645.c ****  * Êä    ³ö£º
 933:../user/source/DLT645.c ****  * Ëµ    Ã÷£ºµçÑ¹Æ«Ğ¡Ğèµ÷½ÚÊ±£¬ÒÔMINÎª»ù×¼£¬½«Voltage¾µÏñ£¬Èô¾µÏñµã³¬¹ıMAX£¬ÒÀ´Î¼õĞ¡ÓĞĞ§Çø¼äÖµ£¨MAX
 934:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 935:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
 936:../user/source/DLT645.c ****  *******************************************************/
 937:../user/source/DLT645.c **** int Voltage_Modifier_Method(int Voltage)
 938:../user/source/DLT645.c **** {
 939:../user/source/DLT645.c ****     int n = 0;
 940:../user/source/DLT645.c ****     int m = 0;
 941:../user/source/DLT645.c ****     int i = 0;
 942:../user/source/DLT645.c ****     n = (Voltage_MIN - Voltage_MIN_MIN) / (Voltage_MAX - Voltage_MIN) + 1; //(198-120)/(235-198)+1»
 943:../user/source/DLT645.c ****     m = (Voltage_MAX_MAX - Voltage_MAX) / (Voltage_MAX - Voltage_MIN) + 1; //(260-235)/(235-198)+1»
 944:../user/source/DLT645.c ****     if ((Voltage > Voltage_MAX) && (Voltage <= Voltage_MAX_MAX))
 945:../user/source/DLT645.c ****     {
 946:../user/source/DLT645.c ****         if (Voltage <= (Voltage_MAX + (Voltage_MAX - Voltage_MIN)))
 947:../user/source/DLT645.c ****         {
 948:../user/source/DLT645.c ****             Voltage = Voltage - (Voltage - Voltage_MAX) * 2;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 26


 949:../user/source/DLT645.c ****             return Voltage;
 950:../user/source/DLT645.c ****         }
 951:../user/source/DLT645.c ****         else
 952:../user/source/DLT645.c ****         {
 953:../user/source/DLT645.c ****             for (i = 1; i < m; i++)
 954:../user/source/DLT645.c ****             {
 955:../user/source/DLT645.c ****                 if (Voltage <= (Voltage_MAX + (Voltage_MAX - Voltage_MIN) * (i + 1)))
 956:../user/source/DLT645.c ****                 {
 957:../user/source/DLT645.c ****                     Voltage = Voltage - (Voltage_MAX - Voltage_MIN) * (i + 1);
 958:../user/source/DLT645.c ****                     return Voltage;
 959:../user/source/DLT645.c ****                 }
 960:../user/source/DLT645.c ****             }
 961:../user/source/DLT645.c ****         }
 962:../user/source/DLT645.c ****     }
 963:../user/source/DLT645.c ****     if ((Voltage < Voltage_MIN) && (Voltage >= Voltage_MIN_MIN))
 964:../user/source/DLT645.c ****     {
 965:../user/source/DLT645.c ****         if (Voltage >= (Voltage_MIN - (Voltage_MAX - Voltage_MIN)))
 966:../user/source/DLT645.c ****         {
 967:../user/source/DLT645.c ****             Voltage = Voltage + (Voltage_MIN - Voltage) * 2;
 968:../user/source/DLT645.c ****             return Voltage;
 969:../user/source/DLT645.c ****         }
 970:../user/source/DLT645.c ****         else
 971:../user/source/DLT645.c ****         {
 972:../user/source/DLT645.c ****             for (i = 1; i < n; i++)
 973:../user/source/DLT645.c ****             {
 974:../user/source/DLT645.c ****                 if (Voltage >= (Voltage_MIN - (Voltage_MAX - Voltage_MIN) * (i + 1)))
 975:../user/source/DLT645.c ****                 {
 976:../user/source/DLT645.c ****                     Voltage = Voltage + (Voltage_MAX - Voltage_MIN) * (i + 1);
 977:../user/source/DLT645.c ****                     return Voltage;
 978:../user/source/DLT645.c ****                 }
 979:../user/source/DLT645.c ****             }
 980:../user/source/DLT645.c ****         }
 981:../user/source/DLT645.c ****     }
 982:../user/source/DLT645.c ****     return Voltage;
 983:../user/source/DLT645.c **** }
 984:../user/source/DLT645.c **** /*****************************************************
 985:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºĞŞ¸Äµç±í×´Ì¬×ÖÖĞµÄµçÁ÷·´Ïò¡¢µçÁ÷¶ÌÂ·¡¢µçÁ÷¶ÏÂ·×´Ì¬×Ö
 986:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
 987:../user/source/DLT645.c ****  * Êä    ³ö£º
 988:../user/source/DLT645.c ****  *           
 989:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
 990:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.5.23
 991:../user/source/DLT645.c ****  *******************************************************/
 992:../user/source/DLT645.c **** void Estatus_Modify_CurrentEvent(uint8_t *pucBuffer)
 993:../user/source/DLT645.c **** {
 994:../user/source/DLT645.c ****     uint16_t estatus = 0x0000;
 995:../user/source/DLT645.c ****     int i = 0;
 996:../user/source/DLT645.c ****     uint8_t ucCheckData = 0x0;
 997:../user/source/DLT645.c ****     switch (pucBuffer[10])
 998:../user/source/DLT645.c ****     {
 999:../user/source/DLT645.c ****     case 0x37: //×´Ì¬×Ö4,AÏà×´Ì¬×Ö
1000:../user/source/DLT645.c ****     {
1001:../user/source/DLT645.c ****         //BIT4,BIT6,bit8 ÖÃ0->11111110 10101111:
1002:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[14], pucBuffer[15]);
1003:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
1004:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
1005:../user/source/DLT645.c ****         break;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 27


1006:../user/source/DLT645.c ****     }
1007:../user/source/DLT645.c ****     case 0x38: //×´Ì¬×Ö5,BÏà×´Ì¬×Ö
1008:../user/source/DLT645.c ****     {
1009:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[14], pucBuffer[15]); //[14][15]×ª»»Îª¶ş½øÖÆ
1010:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
1011:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
1012:../user/source/DLT645.c ****         break;
1013:../user/source/DLT645.c ****     }
1014:../user/source/DLT645.c ****     case 0x39: //×´Ì¬×Ö6,CÏà×´Ì¬×Ö
1015:../user/source/DLT645.c ****     {
1016:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[14], pucBuffer[15]); //[14][15]×ª»»Îª¶ş½øÖÆ
1017:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
1018:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
1019:../user/source/DLT645.c ****         break;
1020:../user/source/DLT645.c ****     }
1021:../user/source/DLT645.c ****     case 0x3A: //×´Ì¬×Ö7£¬ºÏÏà×´Ì¬×Ö
1022:../user/source/DLT645.c ****     {
1023:../user/source/DLT645.c ****         estatus = 0xFFF7 & Get_Estatus(pucBuffer[14], pucBuffer[15]); //BIT3=0   11111111 11110111
1024:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
1025:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
1026:../user/source/DLT645.c ****         break;
1027:../user/source/DLT645.c ****     }
1028:../user/source/DLT645.c ****     case 0x32: //×´Ì¬×ÖÊı¾İ¿é
1029:../user/source/DLT645.c ****     {
1030:../user/source/DLT645.c ****         //1:[14][15] 2:[16][17] 3:[18][19] 4:[20][21] 5:[22][23] 6:[24][25] 7:[26][27]
1031:../user/source/DLT645.c ****         //×´Ì¬×Ö4,AÏà×´Ì¬×Ö
1032:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[20], pucBuffer[21]); //BIT4,BIT6,bit8 =0->11111110
1033:../user/source/DLT645.c ****         pucBuffer[20] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
1034:../user/source/DLT645.c ****         pucBuffer[21] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
1035:../user/source/DLT645.c ****         //×´Ì¬×Ö5,BÏà×´Ì¬×Ö
1036:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[22], pucBuffer[23]);
1037:../user/source/DLT645.c ****         pucBuffer[22] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
1038:../user/source/DLT645.c ****         pucBuffer[23] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
1039:../user/source/DLT645.c ****         //×´Ì¬×Ö6,CÏà×´Ì¬×Ö
1040:../user/source/DLT645.c ****         estatus = 0xFEAF & Get_Estatus(pucBuffer[24], pucBuffer[25]);
1041:../user/source/DLT645.c ****         pucBuffer[24] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
1042:../user/source/DLT645.c ****         pucBuffer[25] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
1043:../user/source/DLT645.c ****         //×´Ì¬×Ö7£¬ºÏÏà×´Ì¬×Ö
1044:../user/source/DLT645.c ****         estatus = 0xFFF7 & Get_Estatus(pucBuffer[26], pucBuffer[27]);
1045:../user/source/DLT645.c ****         pucBuffer[26] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
1046:../user/source/DLT645.c ****         pucBuffer[27] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
1047:../user/source/DLT645.c ****         break;
1048:../user/source/DLT645.c ****     }
1049:../user/source/DLT645.c ****     default:
1050:../user/source/DLT645.c ****         break;
1051:../user/source/DLT645.c ****     }
1052:../user/source/DLT645.c ****     for (i = 0; i < uc645DataDomainLength + 10; i++)
1053:../user/source/DLT645.c ****     {
1054:../user/source/DLT645.c ****         ucCheckData += pucBuffer[i];
1055:../user/source/DLT645.c ****     }
1056:../user/source/DLT645.c ****     pucBuffer[uc645DataDomainLength + 10] = ucCheckData;
1057:../user/source/DLT645.c **** }
1058:../user/source/DLT645.c **** 
1059:../user/source/DLT645.c **** /*****************************************************
1060:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµ¥ÏàµçÁ÷ĞŞ¸Ä·½·¨
1061:../user/source/DLT645.c ****  * Êä    Èë£ºÁ½Ïà²Î¿¼µçÁ÷£¬Ò»ÏàĞèĞŞ¸ÄµçÁ÷
1062:../user/source/DLT645.c ****  * Êä    ³ö£ºµçÁ÷²»ĞèÒªĞŞ¸Ä£¬Êä³öfalse
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 28


1063:../user/source/DLT645.c ****  *           µçÁ÷ÒÑĞŞ¸Ä£¬Êä³ötrue
1064:../user/source/DLT645.c ****  * Ëµ	  Ã÷£º
1065:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1066:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.12.13
1067:../user/source/DLT645.c ****  *******************************************************/
1068:../user/source/DLT645.c **** bool blCurrentSingle_Modify_Method(CURRENT *ref1, CURRENT *ref2, CURRENT *result) //×¢ÊÍÖĞ¸ù¾İBÏàºÍ
1069:../user/source/DLT645.c **** {
 477              		.loc 1 1069 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481              		@ link register save eliminated.
 482              	.LVL67:
 483 0000 30B4     		push	{r4, r5}
 484              	.LCFI9:
 485              		.cfi_def_cfa_offset 8
 486              		.cfi_offset 4, -8
 487              		.cfi_offset 5, -4
1070:../user/source/DLT645.c ****     //if Acurrent->count>Bcurrent->count && Acurrent->count>Ccurrent->count,ÏÈA£¬²»ĞŞ¸Ä
1071:../user/source/DLT645.c ****     //if Bcurrent->count=Acurrent->count && Acurrent->count>Ccurrent->count,ÏÈB£¬ºóA£¬¸ù¾İBĞŞ¸ÄA
1072:../user/source/DLT645.c ****     //if Ccurrent->count=Acurrent->count && Acurrent->count>Bcurrent->count,ÏÈC£¬ºóA£¬¸ù¾İCĞŞ¸ÄA
1073:../user/source/DLT645.c ****     //if Bcurrent->count=Ccurrent->count && Acurrent->count<Ccurrent->count,ÏÈBC£¬ºóA£¬¸ù¾İBCĞŞ¸ÄA
1074:../user/source/DLT645.c ****     if ((result->count > ref1->count) &&
 488              		.loc 1 1074 0
 489 0002 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 490 0004 0479     		ldrb	r4, [r0, #4]	@ zero_extendqisi2
 491 0006 A342     		cmp	r3, r4
 492 0008 03D9     		bls	.L31
1075:../user/source/DLT645.c ****         (result->count > ref2->count)) //ÏÈresultÏà£¬²»ĞŞ¸Ä
 493              		.loc 1 1075 0 discriminator 1
 494 000a 0D79     		ldrb	r5, [r1, #4]	@ zero_extendqisi2
1074:../user/source/DLT645.c ****         (result->count > ref2->count)) //ÏÈresultÏà£¬²»ĞŞ¸Ä
 495              		.loc 1 1074 0 discriminator 1
 496 000c AB42     		cmp	r3, r5
 497 000e 00F2AF80 		bhi	.L41
 498              	.L31:
1076:../user/source/DLT645.c ****         return false;
1077:../user/source/DLT645.c ****     else if ((result->count == ref1->count) &&
 499              		.loc 1 1077 0
 500 0012 A342     		cmp	r3, r4
 501 0014 34D1     		bne	.L33
1078:../user/source/DLT645.c ****              (result->count > ref2->count)) //ÏÈref1Ïà£¬ºóresultÏà,¸ù¾İref1ĞŞ¸Äresult
 502              		.loc 1 1078 0 discriminator 1
 503 0016 0D79     		ldrb	r5, [r1, #4]	@ zero_extendqisi2
1077:../user/source/DLT645.c ****              (result->count > ref2->count)) //ÏÈref1Ïà£¬ºóresultÏà,¸ù¾İref1ĞŞ¸Äresult
 504              		.loc 1 1077 0 discriminator 1
 505 0018 AB42     		cmp	r3, r5
 506 001a 31D9     		bls	.L33
1079:../user/source/DLT645.c ****     {
1080:../user/source/DLT645.c ****         if (ref1->value == 0 ||
 507              		.loc 1 1080 0
 508 001c 0368     		ldr	r3, [r0]
 509 001e 002B     		cmp	r3, #0
 510 0020 00F0A880 		beq	.L42
1081:../user/source/DLT645.c ****             result->value == 0 ||
 511              		.loc 1 1081 0 discriminator 1
 512 0024 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 29


 513              	.LVL68:
1080:../user/source/DLT645.c ****             result->value == 0 ||
 514              		.loc 1 1080 0 discriminator 1
 515 0026 0029     		cmp	r1, #0
 516 0028 00F0A680 		beq	.L43
1082:../user/source/DLT645.c ****             ref1->isminus ||
 517              		.loc 1 1082 0
 518 002c 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2
 519              	.LVL69:
1081:../user/source/DLT645.c ****             result->value == 0 ||
 520              		.loc 1 1081 0
 521 002e 0028     		cmp	r0, #0
 522 0030 40F0A480 		bne	.L44
1083:../user/source/DLT645.c ****             result->isminus)
 523              		.loc 1 1083 0
 524 0034 5479     		ldrb	r4, [r2, #5]	@ zero_extendqisi2
1082:../user/source/DLT645.c ****             ref1->isminus ||
 525              		.loc 1 1082 0
 526 0036 002C     		cmp	r4, #0
 527 0038 40F0B580 		bne	.L32
1084:../user/source/DLT645.c ****             return false; //ÒÑ¾­ÊÕµ½µÄÁ½ÏàµçÁ÷ÖĞ£¬ÓĞ0Öµ£¬»òÕßÓĞ¸ºÖµ£¬²»×öĞŞ¸Ä
1085:../user/source/DLT645.c ****         if (result->value < ref1->value)
 528              		.loc 1 1085 0
 529 003c 8B42     		cmp	r3, r1
 530 003e 0CD9     		bls	.L34
1086:../user/source/DLT645.c ****         {
1087:../user/source/DLT645.c ****             //ÈôresultĞ¡£¬resultĞŞ¸ÄÎªref1µÄ¹Ì¶¨±ÈÀı£ºCURRENT_MAX_DVALUE/100
1088:../user/source/DLT645.c ****             result->value = ((result->value < (CURRENT_MAX_DVALUE * ref1->value / 100))
1089:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * ref1->value / 100
 531              		.loc 1 1089 0
 532 0040 03EB8303 		add	r3, r3, r3, lsl #2
 533 0044 1801     		lsls	r0, r3, #4
 534 0046 594B     		ldr	r3, .L56
 535 0048 A3FB0003 		umull	r0, r3, r3, r0
 536 004c 5B09     		lsrs	r3, r3, #5
1090:../user/source/DLT645.c ****                                  : result->value);
 537              		.loc 1 1090 0
 538 004e 9942     		cmp	r1, r3
 539 0050 38BF     		it	cc
 540 0052 1946     		movcc	r1, r3
1088:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * ref1->value / 100
 541              		.loc 1 1088 0
 542 0054 1160     		str	r1, [r2]
1091:../user/source/DLT645.c ****         }
1092:../user/source/DLT645.c ****         else
1093:../user/source/DLT645.c ****         {
1094:../user/source/DLT645.c ****             //Èôresult´ó£¬resultĞŞ¸ÄÎªref1µÄ¹Ì¶¨±ÈÀı£º100/CURRENT_MAX_DVALUE£»²»³¬¹ı·¶Î§»òÕßref1µÈÓ
1095:../user/source/DLT645.c ****             result->value = ((CURRENT_MAX_DVALUE * result->value / 100 > ref1->value)
1096:../user/source/DLT645.c ****                                  ? 100 * ref1->value / CURRENT_MAX_DVALUE
1097:../user/source/DLT645.c ****                                  : result->value);
1098:../user/source/DLT645.c ****         }
1099:../user/source/DLT645.c ****         return true;
 543              		.loc 1 1099 0
 544 0056 0120     		movs	r0, #1
 545 0058 A5E0     		b	.L32
 546              	.L34:
1095:../user/source/DLT645.c ****                                  ? 100 * ref1->value / CURRENT_MAX_DVALUE
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 30


 547              		.loc 1 1095 0
 548 005a 01EB8104 		add	r4, r1, r1, lsl #2
 549 005e 2001     		lsls	r0, r4, #4
 550 0060 524C     		ldr	r4, .L56
 551 0062 A4FB0040 		umull	r4, r0, r4, r0
1097:../user/source/DLT645.c ****         }
 552              		.loc 1 1097 0
 553 0066 B3EB501F 		cmp	r3, r0, lsr #5
 554 006a 06D2     		bcs	.L35
1096:../user/source/DLT645.c ****                                  : result->value);
 555              		.loc 1 1096 0 discriminator 1
 556 006c 6421     		movs	r1, #100
 557 006e 01FB03F3 		mul	r3, r1, r3
1097:../user/source/DLT645.c ****         }
 558              		.loc 1 1097 0 discriminator 1
 559 0072 4F49     		ldr	r1, .L56+4
 560 0074 A1FB0331 		umull	r3, r1, r1, r3
 561 0078 8909     		lsrs	r1, r1, #6
 562              	.L35:
1095:../user/source/DLT645.c ****                                  ? 100 * ref1->value / CURRENT_MAX_DVALUE
 563              		.loc 1 1095 0
 564 007a 1160     		str	r1, [r2]
 565              		.loc 1 1099 0
 566 007c 0120     		movs	r0, #1
 567 007e 92E0     		b	.L32
 568              	.LVL70:
 569              	.L33:
1100:../user/source/DLT645.c ****     }
1101:../user/source/DLT645.c ****     else if ((result->count == ref2->count) &&
 570              		.loc 1 1101 0
 571 0080 0D79     		ldrb	r5, [r1, #4]	@ zero_extendqisi2
 572 0082 AB42     		cmp	r3, r5
 573 0084 30D1     		bne	.L36
 574              		.loc 1 1101 0 is_stmt 0 discriminator 1
 575 0086 A342     		cmp	r3, r4
 576 0088 2ED9     		bls	.L36
1102:../user/source/DLT645.c ****              (result->count > ref1->count)) //ÏÈref2Ïà£¬ºóresultÏà£¬¸ù¾İref2ĞŞ¸Äresult
1103:../user/source/DLT645.c ****     {
1104:../user/source/DLT645.c ****         if (ref2->value == 0 ||
 577              		.loc 1 1104 0 is_stmt 1
 578 008a 0B68     		ldr	r3, [r1]
 579 008c 002B     		cmp	r3, #0
 580 008e 77D0     		beq	.L45
1105:../user/source/DLT645.c ****             result->value == 0 ||
 581              		.loc 1 1105 0 discriminator 1
 582 0090 1468     		ldr	r4, [r2]
1104:../user/source/DLT645.c ****             result->value == 0 ||
 583              		.loc 1 1104 0 discriminator 1
 584 0092 002C     		cmp	r4, #0
 585 0094 76D0     		beq	.L46
1106:../user/source/DLT645.c ****             ref2->isminus ||
 586              		.loc 1 1106 0
 587 0096 4879     		ldrb	r0, [r1, #5]	@ zero_extendqisi2
 588              	.LVL71:
1105:../user/source/DLT645.c ****             result->value == 0 ||
 589              		.loc 1 1105 0
 590 0098 0028     		cmp	r0, #0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 31


 591 009a 75D1     		bne	.L47
1107:../user/source/DLT645.c ****             result->isminus)
 592              		.loc 1 1107 0
 593 009c 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 594              	.LVL72:
1106:../user/source/DLT645.c ****             ref2->isminus ||
 595              		.loc 1 1106 0
 596 009e 0029     		cmp	r1, #0
 597 00a0 40F08180 		bne	.L32
1108:../user/source/DLT645.c ****             return false;
1109:../user/source/DLT645.c ****         if (result->value < ref2->value)
 598              		.loc 1 1109 0
 599 00a4 A342     		cmp	r3, r4
 600 00a6 0CD9     		bls	.L37
1110:../user/source/DLT645.c ****         {
1111:../user/source/DLT645.c ****             result->value = ((result->value < (CURRENT_MAX_DVALUE * ref2->value / 100))
1112:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * ref2->value / 100
 601              		.loc 1 1112 0
 602 00a8 03EB8303 		add	r3, r3, r3, lsl #2
 603 00ac 1901     		lsls	r1, r3, #4
 604 00ae 3F4B     		ldr	r3, .L56
 605 00b0 A3FB0113 		umull	r1, r3, r3, r1
 606 00b4 5B09     		lsrs	r3, r3, #5
1113:../user/source/DLT645.c ****                                  : result->value);
 607              		.loc 1 1113 0
 608 00b6 9C42     		cmp	r4, r3
 609 00b8 38BF     		it	cc
 610 00ba 1C46     		movcc	r4, r3
1111:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * ref2->value / 100
 611              		.loc 1 1111 0
 612 00bc 1460     		str	r4, [r2]
1114:../user/source/DLT645.c ****         }
1115:../user/source/DLT645.c ****         else
1116:../user/source/DLT645.c ****         {
1117:../user/source/DLT645.c ****             result->value = ((CURRENT_MAX_DVALUE * result->value / 100 > ref2->value)
1118:../user/source/DLT645.c ****                                  ? 100 * ref2->value / CURRENT_MAX_DVALUE
1119:../user/source/DLT645.c ****                                  : result->value);
1120:../user/source/DLT645.c ****         }
1121:../user/source/DLT645.c ****         return true;
 613              		.loc 1 1121 0
 614 00be 0120     		movs	r0, #1
 615 00c0 71E0     		b	.L32
 616              	.L37:
1117:../user/source/DLT645.c ****                                  ? 100 * ref2->value / CURRENT_MAX_DVALUE
 617              		.loc 1 1117 0
 618 00c2 04EB8400 		add	r0, r4, r4, lsl #2
 619 00c6 0101     		lsls	r1, r0, #4
 620 00c8 3848     		ldr	r0, .L56
 621 00ca A0FB0101 		umull	r0, r1, r0, r1
1119:../user/source/DLT645.c ****         }
 622              		.loc 1 1119 0
 623 00ce B3EB511F 		cmp	r3, r1, lsr #5
 624 00d2 06D2     		bcs	.L38
1118:../user/source/DLT645.c ****                                  : result->value);
 625              		.loc 1 1118 0 discriminator 1
 626 00d4 6424     		movs	r4, #100
 627 00d6 04FB03F3 		mul	r3, r4, r3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 32


1119:../user/source/DLT645.c ****         }
 628              		.loc 1 1119 0 discriminator 1
 629 00da 354C     		ldr	r4, .L56+4
 630 00dc A4FB0334 		umull	r3, r4, r4, r3
 631 00e0 A409     		lsrs	r4, r4, #6
 632              	.L38:
1117:../user/source/DLT645.c ****                                  ? 100 * ref2->value / CURRENT_MAX_DVALUE
 633              		.loc 1 1117 0
 634 00e2 1460     		str	r4, [r2]
 635              		.loc 1 1121 0
 636 00e4 0120     		movs	r0, #1
 637 00e6 5EE0     		b	.L32
 638              	.LVL73:
 639              	.L36:
1122:../user/source/DLT645.c ****     }
1123:../user/source/DLT645.c ****     else if ((result->count == ref1->count) &&
 640              		.loc 1 1123 0
 641 00e8 A342     		cmp	r3, r4
 642 00ea 4FD1     		bne	.L48
 643              		.loc 1 1123 0 is_stmt 0 discriminator 1
 644 00ec AB42     		cmp	r3, r5
 645 00ee 4FD1     		bne	.L49
1124:../user/source/DLT645.c ****              (result->count == ref2->count)) //Ç°Á½ÏàÊÇref1ºÍref2£¬×îºóÊÇresultÏà
1125:../user/source/DLT645.c ****     {
1126:../user/source/DLT645.c ****         if ((ref1->value == 0) ||
 646              		.loc 1 1126 0 is_stmt 1
 647 00f0 0368     		ldr	r3, [r0]
 648 00f2 002B     		cmp	r3, #0
 649 00f4 4ED0     		beq	.L50
1127:../user/source/DLT645.c ****             (ref2->value == 0) ||
 650              		.loc 1 1127 0 discriminator 1
 651 00f6 0C68     		ldr	r4, [r1]
1126:../user/source/DLT645.c ****             (ref2->value == 0) ||
 652              		.loc 1 1126 0 discriminator 1
 653 00f8 002C     		cmp	r4, #0
 654 00fa 4DD0     		beq	.L51
1128:../user/source/DLT645.c ****             (result->value == 0) ||
 655              		.loc 1 1128 0
 656 00fc 1568     		ldr	r5, [r2]
1127:../user/source/DLT645.c ****             (ref2->value == 0) ||
 657              		.loc 1 1127 0
 658 00fe 002D     		cmp	r5, #0
 659 0100 4CD0     		beq	.L52
1129:../user/source/DLT645.c ****             ref1->isminus ||
 660              		.loc 1 1129 0
 661 0102 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2
 662              	.LVL74:
1128:../user/source/DLT645.c ****             (result->value == 0) ||
 663              		.loc 1 1128 0
 664 0104 0028     		cmp	r0, #0
 665 0106 4BD1     		bne	.L53
1130:../user/source/DLT645.c ****             ref2->isminus ||
 666              		.loc 1 1130 0
 667 0108 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 668              	.LVL75:
1129:../user/source/DLT645.c ****             ref1->isminus ||
 669              		.loc 1 1129 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 33


 670 010a 0029     		cmp	r1, #0
 671 010c 4BD1     		bne	.L32
1131:../user/source/DLT645.c ****             result->isminus)
 672              		.loc 1 1131 0
 673 010e 5079     		ldrb	r0, [r2, #5]	@ zero_extendqisi2
1130:../user/source/DLT645.c ****             ref2->isminus ||
 674              		.loc 1 1130 0
 675 0110 0028     		cmp	r0, #0
 676 0112 47D1     		bne	.L54
1132:../user/source/DLT645.c ****             return false;
1133:../user/source/DLT645.c ****         if (result->value > MAX(ref1->value, ref2->value)) //result±ÈÇ°Á½Ïà¶¼´ó£¬resultĞŞ¸ÄÎª½ÏĞ¡Öµ
 677              		.loc 1 1133 0
 678 0114 1946     		mov	r1, r3
 679 0116 A342     		cmp	r3, r4
 680 0118 38BF     		it	cc
 681 011a 2146     		movcc	r1, r4
 682 011c 8D42     		cmp	r5, r1
 683 011e 15D9     		bls	.L39
1134:../user/source/DLT645.c ****         {
1135:../user/source/DLT645.c ****             result->value = (CURRENT_MAX_DVALUE * result->value / 100 >= MIN(ref1->value, ref2->val
 684              		.loc 1 1135 0
 685 0120 05EB8500 		add	r0, r5, r5, lsl #2
 686 0124 0101     		lsls	r1, r0, #4
 687 0126 2148     		ldr	r0, .L56
 688 0128 A0FB0101 		umull	r0, r1, r0, r1
 689 012c A342     		cmp	r3, r4
 690 012e 28BF     		it	cs
 691 0130 2346     		movcs	r3, r4
1136:../user/source/DLT645.c ****                                  ? 100 * MIN(ref1->value, ref2->value) / CURRENT_MAX_DVALUE
1137:../user/source/DLT645.c ****                                  : result->value);
 692              		.loc 1 1137 0
 693 0132 B3EB511F 		cmp	r3, r1, lsr #5
 694 0136 06D8     		bhi	.L40
1136:../user/source/DLT645.c ****                                  ? 100 * MIN(ref1->value, ref2->value) / CURRENT_MAX_DVALUE
 695              		.loc 1 1136 0 discriminator 1
 696 0138 6425     		movs	r5, #100
 697 013a 05FB03F3 		mul	r3, r5, r3
 698              		.loc 1 1137 0 discriminator 1
 699 013e 1C4D     		ldr	r5, .L56+4
 700 0140 A5FB0335 		umull	r3, r5, r5, r3
 701 0144 AD09     		lsrs	r5, r5, #6
 702              	.L40:
1135:../user/source/DLT645.c ****                                  ? 100 * MIN(ref1->value, ref2->value) / CURRENT_MAX_DVALUE
 703              		.loc 1 1135 0
 704 0146 1560     		str	r5, [r2]
1138:../user/source/DLT645.c ****         }
1139:../user/source/DLT645.c ****         else if (result->value < MIN(ref1->value, ref2->value)) //result±ÈÇ°Á½Ïà¶¼Ğ¡£¬resultĞŞ¸ÄÎª½
1140:../user/source/DLT645.c ****         {
1141:../user/source/DLT645.c ****             result->value = ((result->value < CURRENT_MAX_DVALUE * MAX(ref1->value, ref2->value) / 
1142:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * MAX(ref1->value, ref2->value) / 100
1143:../user/source/DLT645.c ****                                  : result->value);
1144:../user/source/DLT645.c ****         }
1145:../user/source/DLT645.c ****         else //resultÔÚref1ºÍref2Ö®¼ä£¬ÒòÎªÇ°Á½Ö¡²îÖµÒÑ±£Ö¤²»³¬³ö·¶Î§£¬ËùÒÔresult²»ĞèÒªĞŞ¸Ä
1146:../user/source/DLT645.c ****         {
1147:../user/source/DLT645.c ****             return false;
1148:../user/source/DLT645.c ****         }
1149:../user/source/DLT645.c ****         return true;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 34


 705              		.loc 1 1149 0
 706 0148 0120     		movs	r0, #1
 707 014a 2CE0     		b	.L32
 708              	.L39:
1139:../user/source/DLT645.c ****         {
 709              		.loc 1 1139 0
 710 014c A342     		cmp	r3, r4
 711 014e 28BF     		it	cs
 712 0150 2346     		movcs	r3, r4
 713 0152 9D42     		cmp	r5, r3
 714 0154 27D2     		bcs	.L32
1142:../user/source/DLT645.c ****                                  : result->value);
 715              		.loc 1 1142 0
 716 0156 01EB8101 		add	r1, r1, r1, lsl #2
 717 015a 0B01     		lsls	r3, r1, #4
 718 015c 1349     		ldr	r1, .L56
 719 015e A1FB0313 		umull	r1, r3, r1, r3
 720 0162 5B09     		lsrs	r3, r3, #5
1143:../user/source/DLT645.c ****         }
 721              		.loc 1 1143 0
 722 0164 9D42     		cmp	r5, r3
 723 0166 38BF     		it	cc
 724 0168 1D46     		movcc	r5, r3
1141:../user/source/DLT645.c ****                                  ? CURRENT_MAX_DVALUE * MAX(ref1->value, ref2->value) / 100
 725              		.loc 1 1141 0
 726 016a 1560     		str	r5, [r2]
 727              		.loc 1 1149 0
 728 016c 0120     		movs	r0, #1
 729 016e 1AE0     		b	.L32
 730              	.LVL76:
 731              	.L41:
1076:../user/source/DLT645.c ****     else if ((result->count == ref1->count) &&
 732              		.loc 1 1076 0
 733 0170 0020     		movs	r0, #0
 734              	.LVL77:
 735 0172 18E0     		b	.L32
 736              	.LVL78:
 737              	.L42:
1084:../user/source/DLT645.c ****         if (result->value < ref1->value)
 738              		.loc 1 1084 0
 739 0174 0020     		movs	r0, #0
 740              	.LVL79:
 741 0176 16E0     		b	.L32
 742              	.LVL80:
 743              	.L43:
 744 0178 0020     		movs	r0, #0
 745              	.LVL81:
 746 017a 14E0     		b	.L32
 747              	.L44:
 748 017c 0020     		movs	r0, #0
 749 017e 12E0     		b	.L32
 750              	.LVL82:
 751              	.L45:
1108:../user/source/DLT645.c ****         if (result->value < ref2->value)
 752              		.loc 1 1108 0
 753 0180 0020     		movs	r0, #0
 754              	.LVL83:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 35


 755 0182 10E0     		b	.L32
 756              	.LVL84:
 757              	.L46:
 758 0184 0020     		movs	r0, #0
 759              	.LVL85:
 760 0186 0EE0     		b	.L32
 761              	.L47:
 762 0188 0020     		movs	r0, #0
 763 018a 0CE0     		b	.L32
 764              	.LVL86:
 765              	.L48:
1150:../user/source/DLT645.c ****     }
1151:../user/source/DLT645.c ****     return true;
 766              		.loc 1 1151 0
 767 018c 0120     		movs	r0, #1
 768              	.LVL87:
 769 018e 0AE0     		b	.L32
 770              	.LVL88:
 771              	.L49:
 772 0190 0120     		movs	r0, #1
 773              	.LVL89:
 774 0192 08E0     		b	.L32
 775              	.LVL90:
 776              	.L50:
1132:../user/source/DLT645.c ****         if (result->value > MAX(ref1->value, ref2->value)) //result±ÈÇ°Á½Ïà¶¼´ó£¬resultĞŞ¸ÄÎª½ÏĞ¡Öµ
 777              		.loc 1 1132 0
 778 0194 0020     		movs	r0, #0
 779              	.LVL91:
 780 0196 06E0     		b	.L32
 781              	.LVL92:
 782              	.L51:
 783 0198 0020     		movs	r0, #0
 784              	.LVL93:
 785 019a 04E0     		b	.L32
 786              	.LVL94:
 787              	.L52:
 788 019c 0020     		movs	r0, #0
 789              	.LVL95:
 790 019e 02E0     		b	.L32
 791              	.L53:
 792 01a0 0020     		movs	r0, #0
 793 01a2 00E0     		b	.L32
 794              	.LVL96:
 795              	.L54:
 796 01a4 0846     		mov	r0, r1
 797              	.L32:
1152:../user/source/DLT645.c **** }
 798              		.loc 1 1152 0
 799 01a6 30BC     		pop	{r4, r5}
 800              	.LCFI10:
 801              		.cfi_restore 5
 802              		.cfi_restore 4
 803              		.cfi_def_cfa_offset 0
 804 01a8 7047     		bx	lr
 805              	.L57:
 806 01aa 00BF     		.align	2
 807              	.L56:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 36


 808 01ac 1F85EB51 		.word	1374389535
 809 01b0 CDCCCCCC 		.word	-858993459
 810              		.cfi_endproc
 811              	.LFE129:
 813              		.section	.text.vCurrentTriple_Modify_Method,"ax",%progbits
 814              		.align	2
 815              		.thumb
 816              		.thumb_func
 818              	vCurrentTriple_Modify_Method:
 819              	.LFB130:
1153:../user/source/DLT645.c **** 
1154:../user/source/DLT645.c **** /*****************************************************
1155:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÈıÏàµçÁ÷ĞŞ¸Ä·½·¨
1156:../user/source/DLT645.c ****  * Êä    Èë£ºÈıÏà²Î¿¼µçÁ÷
1157:../user/source/DLT645.c ****  * Êä    ³ö£ºÎŞ
1158:../user/source/DLT645.c ****  * Ëµ	  Ã÷£º×î´óµçÁ÷Öµ¸ÄÎªÆ½¾ùÖµµÄ1.1±¶£¬ÖĞ¼äÖµ¸ÄÎªÆ½¾ùÖµ£¬×îĞ¡Öµ¸ÄÎªÆ½¾ùÖµµÄ90%£¬
1159:../user/source/DLT645.c ****  *				´ËÊ±×î´óµçÁ÷ÖµºÍ×îµçÁ÷ÖµµÄ²îÖµÊÇ×î´óÖµµÄ18.18%
1160:../user/source/DLT645.c ****  *				
1161:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1162:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.12.13
1163:../user/source/DLT645.c ****  *******************************************************/
1164:../user/source/DLT645.c **** void vCurrentTriple_Modify_Method(CURRENT *current_max, CURRENT *current_mid, CURRENT *current_min)
1165:../user/source/DLT645.c **** {
 820              		.loc 1 1165 0
 821              		.cfi_startproc
 822              		@ args = 0, pretend = 0, frame = 0
 823              		@ frame_needed = 0, uses_anonymous_args = 0
 824              		@ link register save eliminated.
 825              	.LVL97:
 826 0000 30B4     		push	{r4, r5}
 827              	.LCFI11:
 828              		.cfi_def_cfa_offset 8
 829              		.cfi_offset 4, -8
 830              		.cfi_offset 5, -4
1166:../user/source/DLT645.c ****     uint32_t current_average;
1167:../user/source/DLT645.c ****     current_average = (current_max->value + current_mid->value + current_min->value) / 3;
 831              		.loc 1 1167 0
 832 0002 0468     		ldr	r4, [r0]
 833 0004 0B68     		ldr	r3, [r1]
 834 0006 1C44     		add	r4, r4, r3
 835 0008 1368     		ldr	r3, [r2]
 836 000a 2344     		add	r3, r3, r4
 837 000c 0324     		movs	r4, #3
 838 000e B3FBF4F3 		udiv	r3, r3, r4
 839              	.LVL98:
1168:../user/source/DLT645.c ****     current_max->value = current_average * 11 / 10; //×î´óÖµ¸ÄÎªÆ½¾ùÖµµÄ110%
 840              		.loc 1 1168 0
 841 0012 0B24     		movs	r4, #11
 842 0014 04FB03F4 		mul	r4, r4, r3
 843 0018 0A25     		movs	r5, #10
 844 001a B4FBF5F4 		udiv	r4, r4, r5
 845 001e 0460     		str	r4, [r0]
1169:../user/source/DLT645.c ****     current_mid->value = current_average;           //ÖĞ¼äÖµ¸ÄÎªÆ½¾ùÖµ
 846              		.loc 1 1169 0
 847 0020 0B60     		str	r3, [r1]
1170:../user/source/DLT645.c ****     current_min->value = current_average * 9 / 10;  //×îĞ¡Öµ¸ÄÎªÆ½¾ùÖµµÄ90%£»
 848              		.loc 1 1170 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 37


 849 0022 03EBC303 		add	r3, r3, r3, lsl #3
 850              	.LVL99:
 851 0026 B3FBF5F3 		udiv	r3, r3, r5
 852 002a 1360     		str	r3, [r2]
 853              	.LVL100:
1171:../user/source/DLT645.c **** }
 854              		.loc 1 1171 0
 855 002c 30BC     		pop	{r4, r5}
 856              	.LCFI12:
 857              		.cfi_restore 5
 858              		.cfi_restore 4
 859              		.cfi_def_cfa_offset 0
 860 002e 7047     		bx	lr
 861              		.cfi_endproc
 862              	.LFE130:
 864              		.section	.text.vCurrent_Modify,"ax",%progbits
 865              		.align	2
 866              		.global	vCurrent_Modify
 867              		.thumb
 868              		.thumb_func
 870              	vCurrent_Modify:
 871              	.LFB131:
1172:../user/source/DLT645.c **** 
1173:../user/source/DLT645.c **** /*****************************************************
1174:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºĞŞ¸ÄµçÁ÷¸÷Ïà²îÖµ
1175:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
1176:../user/source/DLT645.c ****  * Êä    ³ö£ºÎŞ
1177:../user/source/DLT645.c ****  * Ëµ	  Ã÷£ºµ¥ÏàµçÁ÷£ºÈôÈÎÒâÁ½Ïà²îÖµ´óÓÚ20%µÄ½Ï´óÖµ£¬Ôò½«½ÏĞ¡Öµ¸ÄÎª½Ï´óÖµµÄ80%          
1178:../user/source/DLT645.c ****  *				ÈıÏàµçÁ÷£º°´ÕÕ×ÜºÍ²»±äÀ´ĞŞ¸Ä
1179:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1180:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.12.13
1181:../user/source/DLT645.c ****  *******************************************************/
1182:../user/source/DLT645.c **** void vCurrent_Modify(uint8_t *pucBuffer)
1183:../user/source/DLT645.c **** {
 872              		.loc 1 1183 0
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 0
 875              		@ frame_needed = 0, uses_anonymous_args = 0
 876              	.LVL101:
 877 0000 30B5     		push	{r4, r5, lr}
 878              	.LCFI13:
 879              		.cfi_def_cfa_offset 12
 880              		.cfi_offset 4, -12
 881              		.cfi_offset 5, -8
 882              		.cfi_offset 14, -4
 883 0002 83B0     		sub	sp, sp, #12
 884              	.LCFI14:
 885              		.cfi_def_cfa_offset 24
 886 0004 0446     		mov	r4, r0
 887              	.LVL102:
1184:../user/source/DLT645.c ****     uint8_t i;
1185:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
1186:../user/source/DLT645.c ****     switch (pucBuffer[11])
 888              		.loc 1 1186 0
 889 0006 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 890 0008 323B     		subs	r3, r3, #50
 891 000a 042B     		cmp	r3, #4
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 38


 892 000c 00F22C81 		bhi	.L60
 893 0010 DFE813F0 		tbh	[pc, r3, lsl #1]
 894              	.L63:
 895 0014 0500     		.2byte	(.L62-.L63)/2
 896 0016 2A01     		.2byte	(.L60-.L63)/2
 897 0018 AB00     		.2byte	(.L64-.L63)/2
 898 001a D600     		.2byte	(.L65-.L63)/2
 899 001c 0101     		.2byte	(.L66-.L63)/2
 900              		.p2align 1
 901              	.L62:
1187:../user/source/DLT645.c ****     {
1188:../user/source/DLT645.c ****     case 0x32: //ÈıÏàµçÁ÷Êı¾İ¿é
1189:../user/source/DLT645.c ****     {
1190:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Acurrent);
 902              		.loc 1 1190 0
 903 001e 934D     		ldr	r5, .L82
 904 0020 2B46     		mov	r3, r5
 905 0022 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 906 0024 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 907 0026 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 908              	.LVL103:
 909 0028 FFF7FEFF 		bl	vGet_Current
 910              	.LVL104:
1191:../user/source/DLT645.c ****         /*µçÁ÷Îª¸ºÖµ,²»ĞŞ¸ÄµçÁ÷*/
1192:../user/source/DLT645.c ****         if (Acurrent.isminus || Bcurrent.isminus || Ccurrent.isminus)
 911              		.loc 1 1192 0
 912 002c 6B79     		ldrb	r3, [r5, #5]	@ zero_extendqisi2
 913 002e 002B     		cmp	r3, #0
 914 0030 40F01A81 		bne	.L60
 915              		.loc 1 1192 0 is_stmt 0 discriminator 1
 916 0034 8E4B     		ldr	r3, .L82+4
 917 0036 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 918 0038 002B     		cmp	r3, #0
 919 003a 40F01581 		bne	.L60
 920              		.loc 1 1192 0 discriminator 2
 921 003e 8D4B     		ldr	r3, .L82+8
 922 0040 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 923 0042 002B     		cmp	r3, #0
 924 0044 40F01081 		bne	.L60
1193:../user/source/DLT645.c ****             return;
1194:../user/source/DLT645.c ****         /*µçÁ÷Îª0£¬²»ĞŞ¸ÄµçÁ÷*/
1195:../user/source/DLT645.c ****         if ((Acurrent.value == 0) || (Bcurrent.value == 0) || (Ccurrent.value == 0))
 925              		.loc 1 1195 0 is_stmt 1
 926 0048 2B68     		ldr	r3, [r5]
 927 004a 002B     		cmp	r3, #0
 928 004c 00F00C81 		beq	.L60
 929              		.loc 1 1195 0 is_stmt 0 discriminator 1
 930 0050 874A     		ldr	r2, .L82+4
 931 0052 1268     		ldr	r2, [r2]
 932 0054 002A     		cmp	r2, #0
 933 0056 00F00781 		beq	.L60
 934              		.loc 1 1195 0 discriminator 2
 935 005a 8649     		ldr	r1, .L82+8
 936 005c 0868     		ldr	r0, [r1]
 937 005e 0028     		cmp	r0, #0
 938 0060 00F00281 		beq	.L60
1196:../user/source/DLT645.c ****             return;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 39


1197:../user/source/DLT645.c ****         /*µçÁ÷Ïà»¥Ö®¼ä²»³¬²î£¬²»ĞŞ¸ÄµçÁ÷*/
1198:../user/source/DLT645.c ****         if (CURRENT_MAX_DVALUE * MAX(Acurrent.value, MAX(Bcurrent.value, Ccurrent.value)) / 100 <=
 939              		.loc 1 1198 0 is_stmt 1
 940 0064 1146     		mov	r1, r2
 941 0066 8242     		cmp	r2, r0
 942 0068 38BF     		it	cc
 943 006a 0146     		movcc	r1, r0
 944 006c 9942     		cmp	r1, r3
 945 006e 38BF     		it	cc
 946 0070 1946     		movcc	r1, r3
 947 0072 01EB8101 		add	r1, r1, r1, lsl #2
 948 0076 0D01     		lsls	r5, r1, #4
 949 0078 7F49     		ldr	r1, .L82+12
 950 007a A1FB0515 		umull	r1, r5, r1, r5
1199:../user/source/DLT645.c ****             MIN(Acurrent.value, MIN(Bcurrent.value, Ccurrent.value)))
 951              		.loc 1 1199 0
 952 007e 1146     		mov	r1, r2
 953 0080 8242     		cmp	r2, r0
 954 0082 28BF     		it	cs
 955 0084 0146     		movcs	r1, r0
 956 0086 9942     		cmp	r1, r3
 957 0088 28BF     		it	cs
 958 008a 1946     		movcs	r1, r3
1198:../user/source/DLT645.c ****             MIN(Acurrent.value, MIN(Bcurrent.value, Ccurrent.value)))
 959              		.loc 1 1198 0
 960 008c B1EB551F 		cmp	r1, r5, lsr #5
 961 0090 80F0EA80 		bcs	.L60
1200:../user/source/DLT645.c ****             return;
1201:../user/source/DLT645.c ****         else //ĞèÒªĞŞ¸Ä£¬×î´óÖµ¼õĞ¡£¬×îĞ¡ÖµÔö´ó£¬Ê£ÏÂµÄÊÇÖĞ¼äÖµ
1202:../user/source/DLT645.c ****         {
1203:../user/source/DLT645.c ****             if ((Acurrent.value >= Bcurrent.value) &&
 962              		.loc 1 1203 0
 963 0094 9342     		cmp	r3, r2
 964 0096 07D3     		bcc	.L67
 965              		.loc 1 1203 0 is_stmt 0 discriminator 1
 966 0098 8242     		cmp	r2, r0
 967 009a 05D3     		bcc	.L67
1204:../user/source/DLT645.c ****                 (Bcurrent.value >= Ccurrent.value))
1205:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Acurrent, &Bcurrent, &Ccurrent);
 968              		.loc 1 1205 0 is_stmt 1
 969 009c 754A     		ldr	r2, .L82+8
 970 009e 7449     		ldr	r1, .L82+4
 971 00a0 7248     		ldr	r0, .L82
 972 00a2 FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 973              	.LVL105:
 974 00a6 30E0     		b	.L68
 975              	.L67:
1206:../user/source/DLT645.c **** 
1207:../user/source/DLT645.c ****             else if ((Acurrent.value >= Ccurrent.value) &&
 976              		.loc 1 1207 0
 977 00a8 8342     		cmp	r3, r0
 978 00aa 07D3     		bcc	.L69
 979              		.loc 1 1207 0 is_stmt 0 discriminator 1
 980 00ac 8242     		cmp	r2, r0
 981 00ae 05D8     		bhi	.L69
1208:../user/source/DLT645.c ****                      (Ccurrent.value >= Bcurrent.value))
1209:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Acurrent, &Ccurrent, &Bcurrent);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 40


 982              		.loc 1 1209 0 is_stmt 1
 983 00b0 6F4A     		ldr	r2, .L82+4
 984 00b2 7049     		ldr	r1, .L82+8
 985 00b4 6D48     		ldr	r0, .L82
 986 00b6 FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 987              	.LVL106:
 988 00ba 26E0     		b	.L68
 989              	.L69:
1210:../user/source/DLT645.c **** 
1211:../user/source/DLT645.c ****             else if ((Bcurrent.value >= Acurrent.value) &&
 990              		.loc 1 1211 0
 991 00bc 9342     		cmp	r3, r2
 992 00be 07D8     		bhi	.L70
 993              		.loc 1 1211 0 is_stmt 0 discriminator 1
 994 00c0 8342     		cmp	r3, r0
 995 00c2 05D3     		bcc	.L70
1212:../user/source/DLT645.c ****                      (Acurrent.value >= Ccurrent.value))
1213:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Bcurrent, &Acurrent, &Ccurrent);
 996              		.loc 1 1213 0 is_stmt 1
 997 00c4 6B4A     		ldr	r2, .L82+8
 998 00c6 6949     		ldr	r1, .L82
 999 00c8 6948     		ldr	r0, .L82+4
 1000 00ca FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 1001              	.LVL107:
 1002 00ce 1CE0     		b	.L68
 1003              	.L70:
1214:../user/source/DLT645.c **** 
1215:../user/source/DLT645.c ****             else if ((Bcurrent.value >= Ccurrent.value) &&
 1004              		.loc 1 1215 0
 1005 00d0 8242     		cmp	r2, r0
 1006 00d2 07D3     		bcc	.L71
 1007              		.loc 1 1215 0 is_stmt 0 discriminator 1
 1008 00d4 8342     		cmp	r3, r0
 1009 00d6 05D8     		bhi	.L71
1216:../user/source/DLT645.c ****                      (Ccurrent.value >= Acurrent.value))
1217:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Bcurrent, &Ccurrent, &Acurrent);
 1010              		.loc 1 1217 0 is_stmt 1
 1011 00d8 644A     		ldr	r2, .L82
 1012 00da 6649     		ldr	r1, .L82+8
 1013 00dc 6448     		ldr	r0, .L82+4
 1014 00de FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 1015              	.LVL108:
 1016 00e2 12E0     		b	.L68
 1017              	.L71:
1218:../user/source/DLT645.c **** 
1219:../user/source/DLT645.c ****             else if ((Ccurrent.value >= Acurrent.value) &&
 1018              		.loc 1 1219 0
 1019 00e4 8342     		cmp	r3, r0
 1020 00e6 07D8     		bhi	.L72
 1021              		.loc 1 1219 0 is_stmt 0 discriminator 1
 1022 00e8 9342     		cmp	r3, r2
 1023 00ea 05D3     		bcc	.L72
1220:../user/source/DLT645.c ****                      (Acurrent.value >= Bcurrent.value))
1221:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Ccurrent, &Acurrent, &Bcurrent);
 1024              		.loc 1 1221 0 is_stmt 1
 1025 00ec 604A     		ldr	r2, .L82+4
 1026 00ee 5F49     		ldr	r1, .L82
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 41


 1027 00f0 6048     		ldr	r0, .L82+8
 1028 00f2 FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 1029              	.LVL109:
 1030 00f6 08E0     		b	.L68
 1031              	.L72:
1222:../user/source/DLT645.c **** 
1223:../user/source/DLT645.c ****             else if ((Ccurrent.value >= Bcurrent.value) &&
 1032              		.loc 1 1223 0
 1033 00f8 8242     		cmp	r2, r0
 1034 00fa 06D8     		bhi	.L68
 1035              		.loc 1 1223 0 is_stmt 0 discriminator 1
 1036 00fc 9342     		cmp	r3, r2
 1037 00fe 04D8     		bhi	.L68
1224:../user/source/DLT645.c ****                      (Bcurrent.value >= Acurrent.value))
1225:../user/source/DLT645.c ****                 vCurrentTriple_Modify_Method(&Ccurrent, &Bcurrent, &Acurrent);
 1038              		.loc 1 1225 0 is_stmt 1
 1039 0100 5A4A     		ldr	r2, .L82
 1040 0102 5B49     		ldr	r1, .L82+4
 1041 0104 5B48     		ldr	r0, .L82+8
 1042 0106 FFF7FEFF 		bl	vCurrentTriple_Modify_Method
 1043              	.LVL110:
 1044              	.L68:
1226:../user/source/DLT645.c ****             //AÏàµçÁ÷,Ê®½øÖÆÊı×ªBCDÂë
1227:../user/source/DLT645.c ****             vPut_Current(Acurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
 1045              		.loc 1 1227 0
 1046 010a 584D     		ldr	r5, .L82
 1047 010c 04F11003 		add	r3, r4, #16
 1048 0110 0093     		str	r3, [sp]
 1049 0112 04F10F03 		add	r3, r4, #15
 1050 0116 04F10E02 		add	r2, r4, #14
 1051 011a 95E80300 		ldmia	r5, {r0, r1}
 1052 011e FFF7FEFF 		bl	vPut_Current
 1053              	.LVL111:
1228:../user/source/DLT645.c ****             //BÏàµçÁ÷
1229:../user/source/DLT645.c ****             vPut_Current(Acurrent, &pucBuffer[17], &pucBuffer[18], &pucBuffer[19]);
 1054              		.loc 1 1229 0
 1055 0122 04F11303 		add	r3, r4, #19
 1056 0126 0093     		str	r3, [sp]
 1057 0128 04F11203 		add	r3, r4, #18
 1058 012c 04F11102 		add	r2, r4, #17
 1059 0130 95E80300 		ldmia	r5, {r0, r1}
 1060 0134 FFF7FEFF 		bl	vPut_Current
 1061              	.LVL112:
1230:../user/source/DLT645.c ****             //CÏàµçÁ÷
1231:../user/source/DLT645.c ****             vPut_Current(Acurrent, &pucBuffer[20], &pucBuffer[21], &pucBuffer[22]);
 1062              		.loc 1 1231 0
 1063 0138 04F11603 		add	r3, r4, #22
 1064 013c 0093     		str	r3, [sp]
 1065 013e 04F11503 		add	r3, r4, #21
 1066 0142 04F11402 		add	r2, r4, #20
 1067 0146 95E80300 		ldmia	r5, {r0, r1}
 1068 014a FFF7FEFF 		bl	vPut_Current
 1069              	.LVL113:
1185:../user/source/DLT645.c ****     switch (pucBuffer[11])
 1070              		.loc 1 1185 0
 1071 014e 0022     		movs	r2, #0
1232:../user/source/DLT645.c ****             for (i = 0; i < 23; i++) //Êı¾İÓò³¤¶È23
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 42


 1072              		.loc 1 1232 0
 1073 0150 1346     		mov	r3, r2
 1074 0152 04E0     		b	.L73
 1075              	.LVL114:
 1076              	.L74:
1233:../user/source/DLT645.c ****             {
1234:../user/source/DLT645.c ****                 ucCheckData += pucBuffer[i];
 1077              		.loc 1 1234 0 discriminator 3
 1078 0154 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 1079 0156 0A44     		add	r2, r2, r1
 1080              	.LVL115:
 1081 0158 D2B2     		uxtb	r2, r2
 1082              	.LVL116:
1232:../user/source/DLT645.c ****             for (i = 0; i < 23; i++) //Êı¾İÓò³¤¶È23
 1083              		.loc 1 1232 0 discriminator 3
 1084 015a 0133     		adds	r3, r3, #1
 1085              	.LVL117:
 1086 015c DBB2     		uxtb	r3, r3
 1087              	.LVL118:
 1088              	.L73:
1232:../user/source/DLT645.c ****             for (i = 0; i < 23; i++) //Êı¾İÓò³¤¶È23
 1089              		.loc 1 1232 0 is_stmt 0 discriminator 1
 1090 015e 162B     		cmp	r3, #22
 1091 0160 F8D9     		bls	.L74
1235:../user/source/DLT645.c ****             }
1236:../user/source/DLT645.c ****             pucBuffer[23] = ucCheckData;
 1092              		.loc 1 1236 0 is_stmt 1
 1093 0162 E275     		strb	r2, [r4, #23]
1237:../user/source/DLT645.c ****             pucBuffer[24] = 0x16;
 1094              		.loc 1 1237 0
 1095 0164 1623     		movs	r3, #22
 1096              	.LVL119:
 1097 0166 2376     		strb	r3, [r4, #24]
1238:../user/source/DLT645.c ****         }
1239:../user/source/DLT645.c ****         break;
 1098              		.loc 1 1239 0
 1099 0168 7EE0     		b	.L60
 1100              	.LVL120:
 1101              	.L64:
1240:../user/source/DLT645.c ****     }
1241:../user/source/DLT645.c ****     case 0x34: //AÏàµçÁ÷
1242:../user/source/DLT645.c ****     {
1243:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Acurrent);
 1102              		.loc 1 1243 0
 1103 016a 404B     		ldr	r3, .L82
 1104 016c 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 1105 016e C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1106 0170 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1107              	.LVL121:
 1108 0172 FFF7FEFF 		bl	vGet_Current
 1109              	.LVL122:
1244:../user/source/DLT645.c ****         if (((pucBuffer[16] - 0x33) & 0x80) != 0)
 1110              		.loc 1 1244 0
 1111 0176 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1112 0178 333B     		subs	r3, r3, #51
 1113 017a 13F0800F 		tst	r3, #128
 1114 017e 73D1     		bne	.L60
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 43


1245:../user/source/DLT645.c ****         {
1246:../user/source/DLT645.c ****             return;
1247:../user/source/DLT645.c ****         }
1248:../user/source/DLT645.c ****         if (blCurrentSingle_Modify_Method(&Bcurrent, &Ccurrent, &Acurrent)) //¸ù¾İBÏàºÍCÏàµçÁ÷ĞŞ¸ÄA
 1115              		.loc 1 1248 0
 1116 0180 3A4A     		ldr	r2, .L82
 1117 0182 3C49     		ldr	r1, .L82+8
 1118 0184 3A48     		ldr	r0, .L82+4
 1119 0186 FFF7FEFF 		bl	blCurrentSingle_Modify_Method
 1120              	.LVL123:
 1121 018a 0028     		cmp	r0, #0
 1122 018c 6CD0     		beq	.L60
1249:../user/source/DLT645.c ****         {
1250:../user/source/DLT645.c ****             //AÏàµçÁ÷,Ê®½øÖÆÊı×ªBCDÂë
1251:../user/source/DLT645.c ****             vPut_Current(Acurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
 1123              		.loc 1 1251 0
 1124 018e 3749     		ldr	r1, .L82
 1125 0190 04F11003 		add	r3, r4, #16
 1126 0194 0093     		str	r3, [sp]
 1127 0196 04F10F03 		add	r3, r4, #15
 1128 019a 04F10E02 		add	r2, r4, #14
 1129 019e 03C9     		ldmia	r1, {r0, r1}
 1130 01a0 FFF7FEFF 		bl	vPut_Current
 1131              	.LVL124:
1185:../user/source/DLT645.c ****     switch (pucBuffer[11])
 1132              		.loc 1 1185 0
 1133 01a4 0022     		movs	r2, #0
1252:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1134              		.loc 1 1252 0
 1135 01a6 1346     		mov	r3, r2
 1136 01a8 04E0     		b	.L75
 1137              	.LVL125:
 1138              	.L76:
1253:../user/source/DLT645.c ****             {
1254:../user/source/DLT645.c ****                 ucCheckData += pucBuffer[i];
 1139              		.loc 1 1254 0 discriminator 3
 1140 01aa E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 1141 01ac 0A44     		add	r2, r2, r1
 1142              	.LVL126:
 1143 01ae D2B2     		uxtb	r2, r2
 1144              	.LVL127:
1252:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1145              		.loc 1 1252 0 discriminator 3
 1146 01b0 0133     		adds	r3, r3, #1
 1147              	.LVL128:
 1148 01b2 DBB2     		uxtb	r3, r3
 1149              	.LVL129:
 1150              	.L75:
1252:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1151              		.loc 1 1252 0 is_stmt 0 discriminator 1
 1152 01b4 102B     		cmp	r3, #16
 1153 01b6 F8D9     		bls	.L76
1255:../user/source/DLT645.c ****             }
1256:../user/source/DLT645.c ****             pucBuffer[17] = ucCheckData;
 1154              		.loc 1 1256 0 is_stmt 1
 1155 01b8 6274     		strb	r2, [r4, #17]
1257:../user/source/DLT645.c ****             pucBuffer[18] = 0x16;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 44


 1156              		.loc 1 1257 0
 1157 01ba 1623     		movs	r3, #22
 1158              	.LVL130:
 1159 01bc A374     		strb	r3, [r4, #18]
 1160 01be 53E0     		b	.L60
 1161              	.LVL131:
 1162              	.L65:
1258:../user/source/DLT645.c ****         }
1259:../user/source/DLT645.c ****         break;
1260:../user/source/DLT645.c ****     }
1261:../user/source/DLT645.c ****     case 0x35: //BÏàµçÁ÷
1262:../user/source/DLT645.c ****     {
1263:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Bcurrent);
 1163              		.loc 1 1263 0
 1164 01c0 2B4B     		ldr	r3, .L82+4
 1165 01c2 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 1166 01c4 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1167 01c6 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1168              	.LVL132:
 1169 01c8 FFF7FEFF 		bl	vGet_Current
 1170              	.LVL133:
1264:../user/source/DLT645.c **** 
1265:../user/source/DLT645.c ****         if (((pucBuffer[16] - 0x33) & 0x80) != 0) //µçÁ÷ÊÇ¸ºÖµ
 1171              		.loc 1 1265 0
 1172 01cc 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1173 01ce 333B     		subs	r3, r3, #51
 1174 01d0 13F0800F 		tst	r3, #128
 1175 01d4 48D1     		bne	.L60
1266:../user/source/DLT645.c ****         {
1267:../user/source/DLT645.c ****             return;
1268:../user/source/DLT645.c ****         }
1269:../user/source/DLT645.c ****         if (blCurrentSingle_Modify_Method(&Acurrent, &Ccurrent, &Bcurrent)) //¸ù¾İAÏàºÍCÏàĞŞ¸ÄBÏàµç
 1176              		.loc 1 1269 0
 1177 01d6 264A     		ldr	r2, .L82+4
 1178 01d8 2649     		ldr	r1, .L82+8
 1179 01da 2448     		ldr	r0, .L82
 1180 01dc FFF7FEFF 		bl	blCurrentSingle_Modify_Method
 1181              	.LVL134:
 1182 01e0 0028     		cmp	r0, #0
 1183 01e2 41D0     		beq	.L60
1270:../user/source/DLT645.c ****         {
1271:../user/source/DLT645.c ****             //BÏàµçÁ÷,Ê®½øÖÆÊı×ªBCDÂë
1272:../user/source/DLT645.c ****             vPut_Current(Bcurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
 1184              		.loc 1 1272 0
 1185 01e4 2249     		ldr	r1, .L82+4
 1186 01e6 04F11003 		add	r3, r4, #16
 1187 01ea 0093     		str	r3, [sp]
 1188 01ec 04F10F03 		add	r3, r4, #15
 1189 01f0 04F10E02 		add	r2, r4, #14
 1190 01f4 03C9     		ldmia	r1, {r0, r1}
 1191 01f6 FFF7FEFF 		bl	vPut_Current
 1192              	.LVL135:
1185:../user/source/DLT645.c ****     switch (pucBuffer[11])
 1193              		.loc 1 1185 0
 1194 01fa 0022     		movs	r2, #0
1273:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1195              		.loc 1 1273 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 45


 1196 01fc 1346     		mov	r3, r2
 1197 01fe 04E0     		b	.L77
 1198              	.LVL136:
 1199              	.L78:
1274:../user/source/DLT645.c ****             {
1275:../user/source/DLT645.c ****                 ucCheckData += pucBuffer[i];
 1200              		.loc 1 1275 0 discriminator 3
 1201 0200 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 1202 0202 0A44     		add	r2, r2, r1
 1203              	.LVL137:
 1204 0204 D2B2     		uxtb	r2, r2
 1205              	.LVL138:
1273:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1206              		.loc 1 1273 0 discriminator 3
 1207 0206 0133     		adds	r3, r3, #1
 1208              	.LVL139:
 1209 0208 DBB2     		uxtb	r3, r3
 1210              	.LVL140:
 1211              	.L77:
1273:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
 1212              		.loc 1 1273 0 is_stmt 0 discriminator 1
 1213 020a 102B     		cmp	r3, #16
 1214 020c F8D9     		bls	.L78
1276:../user/source/DLT645.c ****             }
1277:../user/source/DLT645.c ****             pucBuffer[17] = ucCheckData;
 1215              		.loc 1 1277 0 is_stmt 1
 1216 020e 6274     		strb	r2, [r4, #17]
1278:../user/source/DLT645.c ****             pucBuffer[18] = 0x16;
 1217              		.loc 1 1278 0
 1218 0210 1623     		movs	r3, #22
 1219              	.LVL141:
 1220 0212 A374     		strb	r3, [r4, #18]
 1221 0214 28E0     		b	.L60
 1222              	.LVL142:
 1223              	.L66:
1279:../user/source/DLT645.c ****         }
1280:../user/source/DLT645.c ****         break;
1281:../user/source/DLT645.c ****     }
1282:../user/source/DLT645.c ****     case 0x36: //CÏàµçÁ÷
1283:../user/source/DLT645.c ****     {
1284:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Ccurrent);
 1224              		.loc 1 1284 0
 1225 0216 174B     		ldr	r3, .L82+8
 1226 0218 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 1227 021a C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1228 021c 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1229              	.LVL143:
 1230 021e FFF7FEFF 		bl	vGet_Current
 1231              	.LVL144:
1285:../user/source/DLT645.c **** 
1286:../user/source/DLT645.c ****         if (((pucBuffer[16] - 0x33) & 0x80) != 0)
 1232              		.loc 1 1286 0
 1233 0222 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1234 0224 333B     		subs	r3, r3, #51
 1235 0226 13F0800F 		tst	r3, #128
 1236 022a 1DD1     		bne	.L60
1287:../user/source/DLT645.c ****         {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 46


1288:../user/source/DLT645.c ****             return;
1289:../user/source/DLT645.c ****         }
1290:../user/source/DLT645.c ****         if (blCurrentSingle_Modify_Method(&Acurrent, &Bcurrent, &Ccurrent)) //¸ù¾İAÏàºÍBÏàĞŞ¸ÄCÏàµç
 1237              		.loc 1 1290 0
 1238 022c 114A     		ldr	r2, .L82+8
 1239 022e 1049     		ldr	r1, .L82+4
 1240 0230 0E48     		ldr	r0, .L82
 1241 0232 FFF7FEFF 		bl	blCurrentSingle_Modify_Method
 1242              	.LVL145:
 1243 0236 B8B1     		cbz	r0, .L60
1291:../user/source/DLT645.c ****         {
1292:../user/source/DLT645.c ****             //BÏàµçÁ÷,Ê®½øÖÆÊı×ªBCDÂë
1293:../user/source/DLT645.c ****             vPut_Current(Ccurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
 1244              		.loc 1 1293 0
 1245 0238 0E49     		ldr	r1, .L82+8
 1246 023a 04F11003 		add	r3, r4, #16
 1247 023e 0093     		str	r3, [sp]
 1248 0240 04F10F03 		add	r3, r4, #15
 1249 0244 04F10E02 		add	r2, r4, #14
 1250 0248 03C9     		ldmia	r1, {r0, r1}
 1251 024a FFF7FEFF 		bl	vPut_Current
 1252              	.LVL146:
1185:../user/source/DLT645.c ****     switch (pucBuffer[11])
 1253              		.loc 1 1185 0
 1254 024e 0022     		movs	r2, #0
1294:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È16
 1255              		.loc 1 1294 0
 1256 0250 1346     		mov	r3, r2
 1257 0252 04E0     		b	.L79
 1258              	.LVL147:
 1259              	.L80:
1295:../user/source/DLT645.c ****             {
1296:../user/source/DLT645.c ****                 ucCheckData += pucBuffer[i];
 1260              		.loc 1 1296 0 discriminator 3
 1261 0254 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 1262 0256 0A44     		add	r2, r2, r1
 1263              	.LVL148:
 1264 0258 D2B2     		uxtb	r2, r2
 1265              	.LVL149:
1294:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È16
 1266              		.loc 1 1294 0 discriminator 3
 1267 025a 0133     		adds	r3, r3, #1
 1268              	.LVL150:
 1269 025c DBB2     		uxtb	r3, r3
 1270              	.LVL151:
 1271              	.L79:
1294:../user/source/DLT645.c ****             for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È16
 1272              		.loc 1 1294 0 is_stmt 0 discriminator 1
 1273 025e 102B     		cmp	r3, #16
 1274 0260 F8D9     		bls	.L80
1297:../user/source/DLT645.c ****             }
1298:../user/source/DLT645.c ****             pucBuffer[17] = ucCheckData;
 1275              		.loc 1 1298 0 is_stmt 1
 1276 0262 6274     		strb	r2, [r4, #17]
1299:../user/source/DLT645.c ****             pucBuffer[18] = 0x16;
 1277              		.loc 1 1299 0
 1278 0264 1623     		movs	r3, #22
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 47


 1279              	.LVL152:
 1280 0266 A374     		strb	r3, [r4, #18]
 1281              	.LVL153:
 1282              	.L60:
1300:../user/source/DLT645.c ****         }
1301:../user/source/DLT645.c ****         break;
1302:../user/source/DLT645.c ****     }
1303:../user/source/DLT645.c ****     }
1304:../user/source/DLT645.c **** }
 1283              		.loc 1 1304 0
 1284 0268 03B0     		add	sp, sp, #12
 1285              	.LCFI15:
 1286              		.cfi_def_cfa_offset 12
 1287              		@ sp needed
 1288 026a 30BD     		pop	{r4, r5, pc}
 1289              	.LVL154:
 1290              	.L83:
 1291              		.align	2
 1292              	.L82:
 1293 026c 00000000 		.word	.LANCHOR1
 1294 0270 00000000 		.word	.LANCHOR2
 1295 0274 00000000 		.word	.LANCHOR3
 1296 0278 1F85EB51 		.word	1374389535
 1297              		.cfi_endproc
 1298              	.LFE131:
 1300              		.section	.text.vCurrent_Limit_Modify,"ax",%progbits
 1301              		.align	2
 1302              		.global	vCurrent_Limit_Modify
 1303              		.thumb
 1304              		.thumb_func
 1306              	vCurrent_Limit_Modify:
 1307              	.LFB133:
1305:../user/source/DLT645.c **** 
1306:../user/source/DLT645.c **** /********************************************************************
1307:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı³õÊ¼»¯
1308:../user/source/DLT645.c ****  * Êä    Èë£ºµçÁ÷Ö¡Êı×éÖ¸Õë
1309:../user/source/DLT645.c ****  * Êä    ³ö£º
1310:../user/source/DLT645.c ****  *           
1311:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1312:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ16:13:30
1313:../user/source/DLT645.c ****  **********************************************************************/
1314:../user/source/DLT645.c **** void vCurrent_Limit_DefaultSet(void)
1315:../user/source/DLT645.c **** {
1316:../user/source/DLT645.c ****     uint32_t uwLimit;
1317:../user/source/DLT645.c ****     uint32_t uwCTratio;
1318:../user/source/DLT645.c **** /*±äÑ¹Æ÷ÈİÁ¿ºÍ¶î¶¨µçÁ÷³ö³§¹Ì»¯£¬²»ÔÊĞíĞŞ¸Ä*/
1319:../user/source/DLT645.c **** #ifdef TRANSFORMER_CAPACITY_50KVA
1320:../user/source/DLT645.c ****     TransFormer.capacity = 50;
1321:../user/source/DLT645.c ****     TransFormer.rated_current = 72000;
1322:../user/source/DLT645.c **** #endif
1323:../user/source/DLT645.c **** 
1324:../user/source/DLT645.c **** #ifdef TRANSFORMER_CAPACITY_100KVA
1325:../user/source/DLT645.c ****     TransFormer.capacity = 100;
1326:../user/source/DLT645.c ****     TransFormer.rated_current = 144000;
1327:../user/source/DLT645.c **** #endif
1328:../user/source/DLT645.c **** 
1329:../user/source/DLT645.c **** #ifdef TRANSFORMER_CAPACITY_200KVA
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 48


1330:../user/source/DLT645.c ****     TransFormer.capacity = 200;
1331:../user/source/DLT645.c ****     TransFormer.rated_current = 288000;
1332:../user/source/DLT645.c **** #endif
1333:../user/source/DLT645.c **** 
1334:../user/source/DLT645.c **** #ifdef TRANSFORMER_CAPACITY_400KVA
1335:../user/source/DLT645.c ****     TransFormer.capacity = 400;
1336:../user/source/DLT645.c ****     TransFormer.rated_current = 577000;
1337:../user/source/DLT645.c **** #endif
1338:../user/source/DLT645.c ****     /*´ÓFLASH¶ÁÈ¡±äÑ¹Æ÷¶ş´Î²àCT±ä±È*/
1339:../user/source/DLT645.c ****     uwCTratio = Flash_Read_Word(FLASH_CURRENT_LIMIT_RATIO_ADDR);
1340:../user/source/DLT645.c ****     /*±ä±ÈÎŞĞ§ £¬ÔòÎª³õ´ÎÉÏµç*/
1341:../user/source/DLT645.c ****     if (uwCTratio == 0xFFFFFFFF)
1342:../user/source/DLT645.c ****     {
1343:../user/source/DLT645.c ****         /*CTÉèÖÃÎª80*/
1344:../user/source/DLT645.c ****         TransFormer.CTratio = 80;
1345:../user/source/DLT645.c ****         /*´æ´¢CTÖµ*/
1346:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_CURRENT_LIMIT_RATIO_ADDR, TransFormer.CTratio);
1347:../user/source/DLT645.c ****     }
1348:../user/source/DLT645.c ****     else
1349:../user/source/DLT645.c ****     {
1350:../user/source/DLT645.c ****         /*Êı¾İÓĞĞ§£¬³õÊ¼»¯È«¾Ö±äÁ¿*/
1351:../user/source/DLT645.c ****         TransFormer.CTratio = uwCTratio;
1352:../user/source/DLT645.c ****     }
1353:../user/source/DLT645.c ****     /*¶ÁÈ¡µçÁ÷ÉÏÏŞ²ÎÊı*/
1354:../user/source/DLT645.c ****     uwLimit = Flash_Read_Word(FLASH_CURRENT_LIMIT_VALUE_ADDR);
1355:../user/source/DLT645.c ****     /*²ÎÊıÎŞĞ§£¬³õ´ÎÉÏµç*/
1356:../user/source/DLT645.c ****     if (uwLimit == 0xFFFFFFFF)
1357:../user/source/DLT645.c ****     {
1358:../user/source/DLT645.c ****         /*¸ù¾İ¶î¶¨µçÁ÷ºÍCT±ä±È¼ÆËãµçÁ÷ÉÏÏŞÖµ*/
1359:../user/source/DLT645.c ****         TransFormer.CT2_CurrentLimit = (TransFormer.rated_current / TransFormer.CTratio) * 3 * 8 / 
1360:../user/source/DLT645.c ****         /*´æ´¢µçÁ÷ÉÏÏŞÖµ*/
1361:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_CURRENT_LIMIT_VALUE_ADDR, TransFormer.CT2_CurrentLimit);
1362:../user/source/DLT645.c ****     }
1363:../user/source/DLT645.c ****     else
1364:../user/source/DLT645.c ****     {
1365:../user/source/DLT645.c ****         /*²ÎÊıÓĞĞ§£¬³õÊ¼»¯È«¾Ö±äÁ¿*/
1366:../user/source/DLT645.c ****         TransFormer.CT2_CurrentLimit = uwLimit;
1367:../user/source/DLT645.c ****     }
1368:../user/source/DLT645.c **** }
1369:../user/source/DLT645.c **** 
1370:../user/source/DLT645.c **** /********************************************************************
1371:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º¸÷ÏàµçÁ÷ÖµÉÏÏŞĞŞ¸Äº¯Êı
1372:../user/source/DLT645.c ****  * Êä    Èë£ºµçÁ÷Ö¡Êı×éÖ¸Õë
1373:../user/source/DLT645.c ****  * Êä    ³ö£º
1374:../user/source/DLT645.c ****  *           
1375:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1376:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.1.30
1377:../user/source/DLT645.c ****  **********************************************************************/
1378:../user/source/DLT645.c **** void vCurrent_Limit_Modify(uint8_t *pucBuffer)
1379:../user/source/DLT645.c **** {
 1308              		.loc 1 1379 0
 1309              		.cfi_startproc
 1310              		@ args = 0, pretend = 0, frame = 0
 1311              		@ frame_needed = 0, uses_anonymous_args = 0
 1312              		@ link register save eliminated.
 1313              	.LVL155:
 1314 0000 7047     		bx	lr
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 49


 1315              		.cfi_endproc
 1316              	.LFE133:
 1318 0002 00BF     		.section	.text.Get_Estatus,"ax",%progbits
 1319              		.align	2
 1320              		.thumb
 1321              		.thumb_func
 1323              	Get_Estatus:
 1324              	.LFB141:
1380:../user/source/DLT645.c ****     uint32_t ABCcurrent;
1381:../user/source/DLT645.c ****     uint8_t i;
1382:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
1383:../user/source/DLT645.c **** #ifndef ENABLE_CURRENT_LIMIT
1384:../user/source/DLT645.c ****     return;
1385:../user/source/DLT645.c **** #endif
1386:../user/source/DLT645.c **** 
1387:../user/source/DLT645.c ****     switch (pucBuffer[11])
1388:../user/source/DLT645.c ****     {
1389:../user/source/DLT645.c ****     case 0x32: //ÈıÏàµçÁ÷Êı¾İ¿é
1390:../user/source/DLT645.c ****     {
1391:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Acurrent);
1392:../user/source/DLT645.c ****         vGet_Current(pucBuffer[17], pucBuffer[18], pucBuffer[19], &Bcurrent);
1393:../user/source/DLT645.c ****         vGet_Current(pucBuffer[20], pucBuffer[21], pucBuffer[22], &Ccurrent);
1394:../user/source/DLT645.c ****         if (Acurrent.isminus || Bcurrent.isminus || Ccurrent.isminus)
1395:../user/source/DLT645.c ****             return;
1396:../user/source/DLT645.c ****         ABCcurrent = Acurrent.value + Bcurrent.value + Ccurrent.value;
1397:../user/source/DLT645.c ****         if (ABCcurrent > TransFormer.CT2_CurrentLimit)
1398:../user/source/DLT645.c ****         {
1399:../user/source/DLT645.c ****             Acurrent.value = TransFormer.CT2_CurrentLimit * Acurrent.value / ABCcurrent;
1400:../user/source/DLT645.c ****             Bcurrent.value = TransFormer.CT2_CurrentLimit * Bcurrent.value / ABCcurrent;
1401:../user/source/DLT645.c ****             Ccurrent.value = TransFormer.CT2_CurrentLimit * Ccurrent.value / ABCcurrent;
1402:../user/source/DLT645.c ****         }
1403:../user/source/DLT645.c ****         Acurrent.value = (Acurrent.value > (TransFormer.CT2_CurrentLimit / 3)
1404:../user/source/DLT645.c ****                               ? (TransFormer.CT2_CurrentLimit / 3)
1405:../user/source/DLT645.c ****                               : Acurrent.value);
1406:../user/source/DLT645.c ****         Bcurrent.value = (Bcurrent.value > (TransFormer.CT2_CurrentLimit / 3)
1407:../user/source/DLT645.c ****                               ? (TransFormer.CT2_CurrentLimit / 3)
1408:../user/source/DLT645.c ****                               : Bcurrent.value);
1409:../user/source/DLT645.c ****         Ccurrent.value = (Ccurrent.value > (TransFormer.CT2_CurrentLimit / 3)
1410:../user/source/DLT645.c ****                               ? (TransFormer.CT2_CurrentLimit / 3)
1411:../user/source/DLT645.c ****                               : Ccurrent.value);
1412:../user/source/DLT645.c ****         //AÏàµçÁ÷,Ê®½øÖÆÊı×ªBCDÂë
1413:../user/source/DLT645.c ****         vPut_Current(Acurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
1414:../user/source/DLT645.c ****         //BÏàµçÁ÷
1415:../user/source/DLT645.c ****         vPut_Current(Bcurrent, &pucBuffer[17], &pucBuffer[18], &pucBuffer[19]);
1416:../user/source/DLT645.c ****         //CÏàµçÁ÷
1417:../user/source/DLT645.c ****         vPut_Current(Ccurrent, &pucBuffer[20], &pucBuffer[21], &pucBuffer[22]);
1418:../user/source/DLT645.c ****         for (i = 0; i < 23; i++) //Êı¾İÓò³¤¶È23
1419:../user/source/DLT645.c ****         {
1420:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1421:../user/source/DLT645.c ****         }
1422:../user/source/DLT645.c ****         pucBuffer[23] = ucCheckData;
1423:../user/source/DLT645.c ****         pucBuffer[24] = 0x16;
1424:../user/source/DLT645.c ****         break;
1425:../user/source/DLT645.c ****     }
1426:../user/source/DLT645.c ****     case 0x34: //AÏàµçÁ÷
1427:../user/source/DLT645.c ****     {
1428:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Acurrent);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 50


1429:../user/source/DLT645.c ****         Acurrent.value = (Acurrent.value > (TransFormer.CT2_CurrentLimit / 3)
1430:../user/source/DLT645.c ****                               ? (TransFormer.CT2_CurrentLimit / 3)
1431:../user/source/DLT645.c ****                               : Acurrent.value);
1432:../user/source/DLT645.c ****         vPut_Current(Acurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
1433:../user/source/DLT645.c ****         for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
1434:../user/source/DLT645.c ****         {
1435:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1436:../user/source/DLT645.c ****         }
1437:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1438:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1439:../user/source/DLT645.c ****         break;
1440:../user/source/DLT645.c ****     }
1441:../user/source/DLT645.c ****     case 0x35: //BÏàµçÁ÷
1442:../user/source/DLT645.c ****     {
1443:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Bcurrent);
1444:../user/source/DLT645.c ****         Bcurrent.value = (Bcurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT2_Cu
1445:../user/source/DLT645.c ****         vPut_Current(Bcurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
1446:../user/source/DLT645.c ****         for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
1447:../user/source/DLT645.c ****         {
1448:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1449:../user/source/DLT645.c ****         }
1450:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1451:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1452:../user/source/DLT645.c **** 
1453:../user/source/DLT645.c ****         break;
1454:../user/source/DLT645.c ****     }
1455:../user/source/DLT645.c ****     case 0x36: //CÏàµçÁ÷
1456:../user/source/DLT645.c ****     {
1457:../user/source/DLT645.c ****         vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &Ccurrent);
1458:../user/source/DLT645.c ****         Ccurrent.value = (Ccurrent.value > (TransFormer.CT2_CurrentLimit / 3)
1459:../user/source/DLT645.c ****                               ? (TransFormer.CT2_CurrentLimit / 3)
1460:../user/source/DLT645.c ****                               : Ccurrent.value);
1461:../user/source/DLT645.c ****         vPut_Current(Bcurrent, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
1462:../user/source/DLT645.c ****         for (i = 0; i < 17; i++) //Êı¾İÓò³¤¶È17
1463:../user/source/DLT645.c ****         {
1464:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1465:../user/source/DLT645.c ****         }
1466:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1467:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1468:../user/source/DLT645.c ****         break;
1469:../user/source/DLT645.c ****     }
1470:../user/source/DLT645.c ****     }
1471:../user/source/DLT645.c **** }
1472:../user/source/DLT645.c **** 
1473:../user/source/DLT645.c **** /*****************************************************
1474:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºĞŞ¸ÄµçÁ÷·½ÏòÖ¡
1475:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
1476:../user/source/DLT645.c ****  * Êä    ³ö£º
1477:../user/source/DLT645.c ****  *           
1478:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1479:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.12.13
1480:../user/source/DLT645.c ****  *******************************************************/
1481:../user/source/DLT645.c **** void vCurrentDirect_Modify(uint8_t *pucBuffer)
1482:../user/source/DLT645.c **** {
1483:../user/source/DLT645.c ****     uint8_t i = 0;
1484:../user/source/DLT645.c ****     uint8_t ucCheckData;
1485:../user/source/DLT645.c ****     switch (pucBuffer[11])
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 51


1486:../user/source/DLT645.c ****     {
1487:../user/source/DLT645.c ****     case 0x32: //ÈıÏàµçÁ÷Êı¾İ¿é
1488:../user/source/DLT645.c ****     {
1489:../user/source/DLT645.c ****         pucBuffer[16] = ((pucBuffer[16] - 0x33) & 0xEF) + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ
1490:../user/source/DLT645.c ****         pucBuffer[19] = ((pucBuffer[19] - 0x33) & 0xEF) + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ
1491:../user/source/DLT645.c ****         pucBuffer[22] = ((pucBuffer[22] - 0x33) & 0xEF) + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ
1492:../user/source/DLT645.c ****         for (i = 0; i < 23; i++)                                //Êı¾İÓò³¤¶È23
1493:../user/source/DLT645.c ****         {
1494:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1495:../user/source/DLT645.c ****         }
1496:../user/source/DLT645.c ****         pucBuffer[23] = ucCheckData;
1497:../user/source/DLT645.c ****         pucBuffer[24] = 0x16;
1498:../user/source/DLT645.c ****         break;
1499:../user/source/DLT645.c ****     }
1500:../user/source/DLT645.c ****     case 0x34: //AÏàµçÁ÷
1501:../user/source/DLT645.c ****     {
1502:../user/source/DLT645.c ****         pucBuffer[16] = ((pucBuffer[16] - 0x33) & 0xEF) + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ
1503:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                                //Êı¾İÓò³¤¶È17
1504:../user/source/DLT645.c ****         {
1505:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1506:../user/source/DLT645.c ****         }
1507:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1508:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1509:../user/source/DLT645.c ****         break;
1510:../user/source/DLT645.c ****     }
1511:../user/source/DLT645.c ****     case 0x35: //BÏàµçÁ÷
1512:../user/source/DLT645.c ****     {
1513:../user/source/DLT645.c ****         pucBuffer[16] = ((pucBuffer[16] - 0x33) & 0xEF) + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ
1514:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                                //Êı¾İÓò³¤¶È17
1515:../user/source/DLT645.c ****         {
1516:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1517:../user/source/DLT645.c ****         }
1518:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1519:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1520:../user/source/DLT645.c ****         break;
1521:../user/source/DLT645.c ****     }
1522:../user/source/DLT645.c ****     case 0x36: //CÏàµçÁ÷
1523:../user/source/DLT645.c ****     {
1524:../user/source/DLT645.c ****         pucBuffer[16] = ((pucBuffer[16] - 0x33) & 0xEF) + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ
1525:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                                //Êı¾İÓò³¤¶È16
1526:../user/source/DLT645.c ****         {
1527:../user/source/DLT645.c ****             ucCheckData += pucBuffer[i];
1528:../user/source/DLT645.c ****         }
1529:../user/source/DLT645.c ****         pucBuffer[17] = ucCheckData;
1530:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
1531:../user/source/DLT645.c ****         break;
1532:../user/source/DLT645.c ****     }
1533:../user/source/DLT645.c ****     }
1534:../user/source/DLT645.c **** }
1535:../user/source/DLT645.c **** 
1536:../user/source/DLT645.c **** /********************************************************************
1537:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı£ºµçÁ÷ÉÏÏŞÖµÉèÖÃ
1538:../user/source/DLT645.c ****  * Êä    Èë£ºÎ¬»¤Ö¡Êı×éÖ¸Õë
1539:../user/source/DLT645.c ****  * Êä    ³ö£º
1540:../user/source/DLT645.c ****  *           
1541:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1542:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ09:39:18
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 52


1543:../user/source/DLT645.c ****  * ½ÓÊÜ£º   68 AA AA AA AA AA AA 68 14 07 33 37 35 35 56 34 12 XX 16(123.456A)
1544:../user/source/DLT645.c ****  *³É¹¦»Ø¸´£º68 AA AA AA AA AA AA 68 94 00 XX 16
1545:../user/source/DLT645.c ****  *Ê§°Ü»Ø¸´£º68 AA AA AA AA AA AA 68 D4 00 XX 16
1546:../user/source/DLT645.c ****  **********************************************************************/
1547:../user/source/DLT645.c **** void vCurrent_Limit_Set(uint8_t *pucBuffer)
1548:../user/source/DLT645.c **** {
1549:../user/source/DLT645.c ****     uint8_t i;
1550:../user/source/DLT645.c ****     CURRENT limit;
1551:../user/source/DLT645.c ****     pucBuffer[8] = 0xD4;
1552:../user/source/DLT645.c ****     /*·ÇÖØ¹ıÔØµ÷Õû°æ±¾Ê±£¬»Ø¸´·ñÈÏÖ¡*/
1553:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
1554:../user/source/DLT645.c ****     /*ÊäÈëµÄ×Ö½Ú¼õÈ¥33ºó²»ÊÇBCDÂëÔõÃ´°ì£¿*/
1555:../user/source/DLT645.c ****     vGet_Current(pucBuffer[14], pucBuffer[15], pucBuffer[16], &limit);
1556:../user/source/DLT645.c ****     if (!limit.isminus && (limit.value > 0) && (limit.value <= 999999))
1557:../user/source/DLT645.c ****     {
1558:../user/source/DLT645.c ****         if (SUCCESS == Flash_Write_Word(FLASH_CURRENT_LIMIT_VALUE_ADDR, limit.value))
1559:../user/source/DLT645.c ****         {
1560:../user/source/DLT645.c ****             TransFormer.CT2_CurrentLimit = limit.value;
1561:../user/source/DLT645.c ****             //limit.value = TransFormer.rated_current / TransFormer.CTratio;
1562:../user/source/DLT645.c ****             //limit.value = limit.value * 8 / 10;
1563:../user/source/DLT645.c ****             //limit.value = limit.value * 3;
1564:../user/source/DLT645.c ****             TransFormer.CTratio = TransFormer.rated_current /
1565:../user/source/DLT645.c ****                                   (TransFormer.CT2_CurrentLimit / 3 * 10 / 8);
1566:../user/source/DLT645.c ****             if (SUCCESS == Flash_Write_Word(FLASH_CURRENT_LIMIT_RATIO_ADDR, TransFormer.CTratio))
1567:../user/source/DLT645.c ****             {
1568:../user/source/DLT645.c ****                 pucBuffer[8] = 0x94;
1569:../user/source/DLT645.c ****             }
1570:../user/source/DLT645.c ****         }
1571:../user/source/DLT645.c ****     }
1572:../user/source/DLT645.c **** #endif
1573:../user/source/DLT645.c **** 
1574:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
1575:../user/source/DLT645.c ****     pucBuffer[10] = 0;
1576:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
1577:../user/source/DLT645.c ****     {
1578:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
1579:../user/source/DLT645.c ****     }
1580:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
1581:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
1582:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
1583:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
1584:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
1585:../user/source/DLT645.c ****     {
1586:../user/source/DLT645.c ****         Uart_DataPut(USART3);
1587:../user/source/DLT645.c ****     }
1588:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
1589:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
1590:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
1591:../user/source/DLT645.c ****     {
1592:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
1593:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
1594:../user/source/DLT645.c ****     }
1595:../user/source/DLT645.c **** }
1596:../user/source/DLT645.c **** 
1597:../user/source/DLT645.c **** /********************************************************************
1598:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı£ºCT±ä±ÈÉèÖÃ
1599:../user/source/DLT645.c ****  * Êä    Èë£ºÎ¬»¤Ö¡Êı×éÖ¸Õë
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 53


1600:../user/source/DLT645.c ****  * Êä    ³ö£º
1601:../user/source/DLT645.c ****  *           
1602:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1603:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ09:39:18
1604:../user/source/DLT645.c ****  * ½ÓÊÜ£º   68 AA AA AA AA AA AA 68 14 06 33 39 35 35 00 01 XX 16(±ä±È100)
1605:../user/source/DLT645.c ****  *³É¹¦»Ø¸´£º68 AA AA AA AA AA AA 68 94 00 XX 16
1606:../user/source/DLT645.c ****  *Ê§°Ü»Ø¸´£º68 AA AA AA AA AA AA 68 D4 00 XX 16
1607:../user/source/DLT645.c ****  **********************************************************************/
1608:../user/source/DLT645.c **** void vCurrent_CTRatio_Set(uint8_t *pucBuffer)
1609:../user/source/DLT645.c **** {
1610:../user/source/DLT645.c ****     uint8_t i;
1611:../user/source/DLT645.c ****     uint32_t uwdata = 0;
1612:../user/source/DLT645.c ****     pucBuffer[8] = 0xD4;
1613:../user/source/DLT645.c **** /*ÊäÈëµÄ×Ö½Ú¼õÈ¥33ºó²»ÊÇBCDÂëÔõÃ´°ì£¿*/
1614:../user/source/DLT645.c **** /*²»Ö§³ÖÖØ¹ıÔØĞŞ¸Ä¹¦ÄÜÊ±£¬»Ø¸´·ñÈÏÖ¡*/
1615:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
1616:../user/source/DLT645.c ****     uwdata = Get_Voltage(pucBuffer[14], pucBuffer[15]);
1617:../user/source/DLT645.c ****     if ((uwdata > 0) && (uwdata <= 9999))
1618:../user/source/DLT645.c ****     {
1619:../user/source/DLT645.c ****         if (SUCCESS == Flash_Write_Word(FLASH_CURRENT_LIMIT_RATIO_ADDR, uwdata))
1620:../user/source/DLT645.c ****         {
1621:../user/source/DLT645.c ****             TransFormer.CTratio = uwdata;
1622:../user/source/DLT645.c ****             TransFormer.CT2_CurrentLimit = (TransFormer.rated_current / TransFormer.CTratio) * 24 /
1623:../user/source/DLT645.c ****             if (SUCCESS == Flash_Write_Word(FLASH_CURRENT_LIMIT_VALUE_ADDR, TransFormer.CT2_Current
1624:../user/source/DLT645.c ****             {
1625:../user/source/DLT645.c ****                 pucBuffer[8] = 0x94;
1626:../user/source/DLT645.c ****             }
1627:../user/source/DLT645.c ****         }
1628:../user/source/DLT645.c ****     }
1629:../user/source/DLT645.c **** #endif
1630:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
1631:../user/source/DLT645.c ****     pucBuffer[10] = 0;
1632:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
1633:../user/source/DLT645.c ****     {
1634:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
1635:../user/source/DLT645.c ****     }
1636:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
1637:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
1638:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
1639:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
1640:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
1641:../user/source/DLT645.c ****     {
1642:../user/source/DLT645.c ****         Uart_DataPut(USART3);
1643:../user/source/DLT645.c ****     }
1644:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
1645:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
1646:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
1647:../user/source/DLT645.c ****     {
1648:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
1649:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
1650:../user/source/DLT645.c ****     }
1651:../user/source/DLT645.c **** }
1652:../user/source/DLT645.c **** 
1653:../user/source/DLT645.c **** /********************************************************************
1654:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı²éÑ¯£ºµçÁ÷ÉÏÏŞÖµ
1655:../user/source/DLT645.c ****  * Êä    Èë£ºÎ¬»¤Ö¡Êı×éÖ¸Õë
1656:../user/source/DLT645.c ****  * Êä    ³ö£º
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 54


1657:../user/source/DLT645.c ****  *           
1658:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1659:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ09:39:18
1660:../user/source/DLT645.c ****  * ½ÓÊÕ£º   68 AA AA AA AA AA AA 68 11 04 33 38 35 35 XX 16
1661:../user/source/DLT645.c ****  *³É¹¦»Ø¸´£º68 AA AA AA AA AA AA 68 91 07 33 38 35 35 56 34 12 XX 16(123.456)
1662:../user/source/DLT645.c ****  **********************************************************************/
1663:../user/source/DLT645.c **** void vCurrent_Limit_ReadSet(uint8_t *pucBuffer)
1664:../user/source/DLT645.c **** {
1665:../user/source/DLT645.c ****     uint8_t i;
1666:../user/source/DLT645.c ****     CURRENT limit;
1667:../user/source/DLT645.c ****     limit.value = TransFormer.CT2_CurrentLimit;
1668:../user/source/DLT645.c ****     limit.isminus = false;
1669:../user/source/DLT645.c ****     vPut_Current(limit, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
1670:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
1671:../user/source/DLT645.c ****     pucBuffer[9] = 0x07;
1672:../user/source/DLT645.c ****     pucBuffer[17] = 0;
1673:../user/source/DLT645.c ****     for (i = 0; i < 17; i++)
1674:../user/source/DLT645.c ****     {
1675:../user/source/DLT645.c ****         pucBuffer[17] += pucBuffer[i];
1676:../user/source/DLT645.c ****     }
1677:../user/source/DLT645.c ****     pucBuffer[18] = 0x16;
1678:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
1679:../user/source/DLT645.c ****     uc645DataDomainLength = 7;
1680:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 19);
1681:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
1682:../user/source/DLT645.c ****     {
1683:../user/source/DLT645.c ****         Uart_DataPut(USART3);
1684:../user/source/DLT645.c ****     }
1685:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
1686:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 19);
1687:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
1688:../user/source/DLT645.c ****     {
1689:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
1690:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
1691:../user/source/DLT645.c ****     }
1692:../user/source/DLT645.c **** }
1693:../user/source/DLT645.c **** 
1694:../user/source/DLT645.c **** /********************************************************************
1695:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı²éÑ¯£ºCT±ä±È
1696:../user/source/DLT645.c ****  * Êä    Èë£ºÎ¬»¤Ö¡Êı×éÖ¸Õë
1697:../user/source/DLT645.c ****  * Êä    ³ö£º
1698:../user/source/DLT645.c ****  *           
1699:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1700:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ09:39:18
1701:../user/source/DLT645.c ****  * ½ÓÊÕ£º   68 AA AA AA AA AA AA 68 11 04 33 3A 35 35 XX 16
1702:../user/source/DLT645.c ****  *³É¹¦»Ø¸´£º68 AA AA AA AA AA AA 68 91 06 33 3A 35 35 00 01 XX 16(±ä±È100)
1703:../user/source/DLT645.c ****  **********************************************************************/
1704:../user/source/DLT645.c **** void vCurrent_CTRatio_ReadSet(uint8_t *pucBuffer)
1705:../user/source/DLT645.c **** {
1706:../user/source/DLT645.c **** 
1707:../user/source/DLT645.c ****     uint8_t i;
1708:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
1709:../user/source/DLT645.c ****     pucBuffer[9] = 0x06;
1710:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(TransFormer.CTratio);
1711:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(TransFormer.CTratio);
1712:../user/source/DLT645.c ****     pucBuffer[16] = 0;
1713:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 55


1714:../user/source/DLT645.c ****     {
1715:../user/source/DLT645.c ****         pucBuffer[16] += pucBuffer[i];
1716:../user/source/DLT645.c ****     }
1717:../user/source/DLT645.c ****     pucBuffer[17] = 0x16;
1718:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
1719:../user/source/DLT645.c ****     uc645DataDomainLength = 6;
1720:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 18);
1721:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
1722:../user/source/DLT645.c ****     {
1723:../user/source/DLT645.c ****         Uart_DataPut(USART3);
1724:../user/source/DLT645.c ****     }
1725:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
1726:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 18);
1727:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
1728:../user/source/DLT645.c ****     {
1729:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
1730:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
1731:../user/source/DLT645.c ****     }
1732:../user/source/DLT645.c **** }
1733:../user/source/DLT645.c **** 
1734:../user/source/DLT645.c **** /********************************************************************
1735:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷ÖØ¹ıÔØ²ÎÊı²éÑ¯£º±äÑ¹Æ÷ÈİÁ¿
1736:../user/source/DLT645.c ****  * Êä    Èë£ºÎ¬»¤Ö¡Êı×éÖ¸Õë
1737:../user/source/DLT645.c ****  * Êä    ³ö£º
1738:../user/source/DLT645.c ****  *           
1739:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1740:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ13ÈÕ09:39:18
1741:../user/source/DLT645.c ****  * ½ÓÊÕ£º   68 AA AA AA AA AA AA 68 11 04 33 3B 35 35 XX 16
1742:../user/source/DLT645.c ****  *³É¹¦»Ø¸´£º68 AA AA AA AA AA AA 68 91 06 33 3B 35 35 00 01 XX 16(±ä±È100)
1743:../user/source/DLT645.c ****  **********************************************************************/
1744:../user/source/DLT645.c **** void vCurrent_TransFormer_Capacity_ReadSet(uint8_t *pucBuffer)
1745:../user/source/DLT645.c **** {
1746:../user/source/DLT645.c ****     uint8_t i;
1747:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
1748:../user/source/DLT645.c ****     pucBuffer[9] = 0x06;
1749:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(TransFormer.capacity);
1750:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(TransFormer.capacity);
1751:../user/source/DLT645.c ****     pucBuffer[16] = 0;
1752:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
1753:../user/source/DLT645.c ****     {
1754:../user/source/DLT645.c ****         pucBuffer[16] += pucBuffer[i];
1755:../user/source/DLT645.c ****     }
1756:../user/source/DLT645.c ****     pucBuffer[17] = 0x16;
1757:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
1758:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
1759:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 18);
1760:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
1761:../user/source/DLT645.c ****     {
1762:../user/source/DLT645.c ****         Uart_DataPut(USART3);
1763:../user/source/DLT645.c ****     }
1764:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
1765:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 18);
1766:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
1767:../user/source/DLT645.c ****     {
1768:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
1769:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
1770:../user/source/DLT645.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 56


1771:../user/source/DLT645.c **** }
1772:../user/source/DLT645.c **** 
1773:../user/source/DLT645.c **** /*****************************************************
1774:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÁ÷Ö¡¼ÆÊıÇåÁã
1775:../user/source/DLT645.c ****  * Êä    Èë£º
1776:../user/source/DLT645.c ****  * Êä    ³ö£ºÎŞ
1777:../user/source/DLT645.c ****  * Ëµ	  Ã÷£ºÊÕµ½µçÑ¹»Ø¸´Ö¡ºó£¬½«µçÁ÷Ö¡¼ÆÊıÇåÁã
1778:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1779:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.12.13
1780:../user/source/DLT645.c ****  *******************************************************/
1781:../user/source/DLT645.c **** void vCurrent_Count_Clear(void)
1782:../user/source/DLT645.c **** {
1783:../user/source/DLT645.c ****     Acurrent.count = 0;
1784:../user/source/DLT645.c ****     Bcurrent.count = 0;
1785:../user/source/DLT645.c ****     Ccurrent.count = 0;
1786:../user/source/DLT645.c **** }
1787:../user/source/DLT645.c **** /********************************************************************
1788:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º´ÓÊı¾İÖ¡ÖĞ¶ÁÈ¡×´Ì¬×Ö
1789:../user/source/DLT645.c ****  * Êä    Èë£º×´Ì¬×ÖµÍ×Ö½Ú¡¢¸ß×Ö½Ú
1790:../user/source/DLT645.c ****  * Êä    ³ö£º¶ş½øÖÆµÄ×´Ì¬×Ö
1791:../user/source/DLT645.c ****  *           
1792:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1793:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.5.23
1794:../user/source/DLT645.c ****  **********************************************************************/
1795:../user/source/DLT645.c **** uint16_t Get_Estatus(uint8_t LowByte, uint8_t HighByte)
1796:../user/source/DLT645.c **** {
 1325              		.loc 1 1796 0
 1326              		.cfi_startproc
 1327              		@ args = 0, pretend = 0, frame = 0
 1328              		@ frame_needed = 0, uses_anonymous_args = 0
 1329              		@ link register save eliminated.
 1330              	.LVL156:
1797:../user/source/DLT645.c ****     uint16_t estatus;
1798:../user/source/DLT645.c ****     estatus = ((HighByte - 0x33) & 0x00FF) << 8; //00010000 00000000
 1331              		.loc 1 1798 0
 1332 0000 3339     		subs	r1, r1, #51
 1333              	.LVL157:
1799:../user/source/DLT645.c ****     estatus |= (LowByte - 0X33) & 0X00FF;
 1334              		.loc 1 1799 0
 1335 0002 3338     		subs	r0, r0, #51
 1336              	.LVL158:
 1337 0004 C0B2     		uxtb	r0, r0
 1338 0006 40EA0120 		orr	r0, r0, r1, lsl #8
 1339              	.LVL159:
1800:../user/source/DLT645.c ****     return estatus;
1801:../user/source/DLT645.c **** }
 1340              		.loc 1 1801 0
 1341 000a 80B2     		uxth	r0, r0
 1342 000c 7047     		bx	lr
 1343              		.cfi_endproc
 1344              	.LFE141:
 1346 000e 00BF     		.section	.text.Estatus_Modify_CurrentEvent,"ax",%progbits
 1347              		.align	2
 1348              		.global	Estatus_Modify_CurrentEvent
 1349              		.thumb
 1350              		.thumb_func
 1352              	Estatus_Modify_CurrentEvent:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 57


 1353              	.LFB128:
 993:../user/source/DLT645.c ****     uint16_t estatus = 0x0000;
 1354              		.loc 1 993 0
 1355              		.cfi_startproc
 1356              		@ args = 0, pretend = 0, frame = 0
 1357              		@ frame_needed = 0, uses_anonymous_args = 0
 1358              	.LVL160:
 1359 0000 10B5     		push	{r4, lr}
 1360              	.LCFI16:
 1361              		.cfi_def_cfa_offset 8
 1362              		.cfi_offset 4, -8
 1363              		.cfi_offset 14, -4
 1364 0002 0446     		mov	r4, r0
 1365              	.LVL161:
 997:../user/source/DLT645.c ****     {
 1366              		.loc 1 997 0
 1367 0004 837A     		ldrb	r3, [r0, #10]	@ zero_extendqisi2
 1368 0006 323B     		subs	r3, r3, #50
 1369 0008 082B     		cmp	r3, #8
 1370 000a 72D8     		bhi	.L87
 1371 000c DFE803F0 		tbb	[pc, r3]
 1372              	.L89:
 1373 0010 3D       		.byte	(.L88-.L89)/2
 1374 0011 71       		.byte	(.L87-.L89)/2
 1375 0012 71       		.byte	(.L87-.L89)/2
 1376 0013 71       		.byte	(.L87-.L89)/2
 1377 0014 71       		.byte	(.L87-.L89)/2
 1378 0015 05       		.byte	(.L90-.L89)/2
 1379 0016 13       		.byte	(.L91-.L89)/2
 1380 0017 21       		.byte	(.L92-.L89)/2
 1381 0018 2F       		.byte	(.L93-.L89)/2
 1382 0019 00       		.p2align 1
 1383              	.L90:
1002:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
 1384              		.loc 1 1002 0
 1385 001a C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1386 001c 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1387              	.LVL162:
 1388 001e FFF7FEFF 		bl	Get_Estatus
 1389              	.LVL163:
 1390 0022 20F4A870 		bic	r0, r0, #336
 1391 0026 83B2     		uxth	r3, r0
 1392              	.LVL164:
1003:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
 1393              		.loc 1 1003 0
 1394 0028 DAB2     		uxtb	r2, r3
 1395 002a 3332     		adds	r2, r2, #51
 1396 002c A273     		strb	r2, [r4, #14]
1004:../user/source/DLT645.c ****         break;
 1397              		.loc 1 1004 0
 1398 002e 1B0A     		lsrs	r3, r3, #8
 1399              	.LVL165:
 1400 0030 3333     		adds	r3, r3, #51
 1401 0032 E373     		strb	r3, [r4, #15]
1005:../user/source/DLT645.c ****     }
 1402              		.loc 1 1005 0
 1403 0034 5DE0     		b	.L87
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 58


 1404              	.LVL166:
 1405              	.L91:
1009:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 1406              		.loc 1 1009 0
 1407 0036 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1408 0038 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1409              	.LVL167:
 1410 003a FFF7FEFF 		bl	Get_Estatus
 1411              	.LVL168:
 1412 003e 20F4A870 		bic	r0, r0, #336
 1413 0042 83B2     		uxth	r3, r0
 1414              	.LVL169:
1010:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 1415              		.loc 1 1010 0
 1416 0044 DAB2     		uxtb	r2, r3
 1417 0046 3332     		adds	r2, r2, #51
 1418 0048 A273     		strb	r2, [r4, #14]
1011:../user/source/DLT645.c ****         break;
 1419              		.loc 1 1011 0
 1420 004a 1B0A     		lsrs	r3, r3, #8
 1421              	.LVL170:
 1422 004c 3333     		adds	r3, r3, #51
 1423 004e E373     		strb	r3, [r4, #15]
1012:../user/source/DLT645.c ****     }
 1424              		.loc 1 1012 0
 1425 0050 4FE0     		b	.L87
 1426              	.LVL171:
 1427              	.L92:
1016:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 1428              		.loc 1 1016 0
 1429 0052 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1430 0054 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1431              	.LVL172:
 1432 0056 FFF7FEFF 		bl	Get_Estatus
 1433              	.LVL173:
 1434 005a 20F4A870 		bic	r0, r0, #336
 1435 005e 83B2     		uxth	r3, r0
 1436              	.LVL174:
1017:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 1437              		.loc 1 1017 0
 1438 0060 DAB2     		uxtb	r2, r3
 1439 0062 3332     		adds	r2, r2, #51
 1440 0064 A273     		strb	r2, [r4, #14]
1018:../user/source/DLT645.c ****         break;
 1441              		.loc 1 1018 0
 1442 0066 1B0A     		lsrs	r3, r3, #8
 1443              	.LVL175:
 1444 0068 3333     		adds	r3, r3, #51
 1445 006a E373     		strb	r3, [r4, #15]
1019:../user/source/DLT645.c ****     }
 1446              		.loc 1 1019 0
 1447 006c 41E0     		b	.L87
 1448              	.LVL176:
 1449              	.L93:
1023:../user/source/DLT645.c ****         pucBuffer[14] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 1450              		.loc 1 1023 0
 1451 006e C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 59


 1452 0070 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 1453              	.LVL177:
 1454 0072 FFF7FEFF 		bl	Get_Estatus
 1455              	.LVL178:
 1456 0076 20F00800 		bic	r0, r0, #8
 1457 007a 83B2     		uxth	r3, r0
 1458              	.LVL179:
1024:../user/source/DLT645.c ****         pucBuffer[15] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 1459              		.loc 1 1024 0
 1460 007c DAB2     		uxtb	r2, r3
 1461 007e 3332     		adds	r2, r2, #51
 1462 0080 A273     		strb	r2, [r4, #14]
1025:../user/source/DLT645.c ****         break;
 1463              		.loc 1 1025 0
 1464 0082 1B0A     		lsrs	r3, r3, #8
 1465              	.LVL180:
 1466 0084 3333     		adds	r3, r3, #51
 1467 0086 E373     		strb	r3, [r4, #15]
1026:../user/source/DLT645.c ****     }
 1468              		.loc 1 1026 0
 1469 0088 33E0     		b	.L87
 1470              	.LVL181:
 1471              	.L88:
1032:../user/source/DLT645.c ****         pucBuffer[20] = (uint8_t)(estatus & 0x00FF) + 0X33;           //×´Ì¬×ÖµÍ×Ö½Ú
 1472              		.loc 1 1032 0
 1473 008a 417D     		ldrb	r1, [r0, #21]	@ zero_extendqisi2
 1474 008c 007D     		ldrb	r0, [r0, #20]	@ zero_extendqisi2
 1475              	.LVL182:
 1476 008e FFF7FEFF 		bl	Get_Estatus
 1477              	.LVL183:
 1478 0092 20F4A870 		bic	r0, r0, #336
 1479 0096 83B2     		uxth	r3, r0
 1480              	.LVL184:
1033:../user/source/DLT645.c ****         pucBuffer[21] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33;    //×´Ì¬×Ö¸ß×Ö½Ú
 1481              		.loc 1 1033 0
 1482 0098 DAB2     		uxtb	r2, r3
 1483 009a 3332     		adds	r2, r2, #51
 1484 009c 2275     		strb	r2, [r4, #20]
1034:../user/source/DLT645.c ****         //×´Ì¬×Ö5,BÏà×´Ì¬×Ö
 1485              		.loc 1 1034 0
 1486 009e 1B0A     		lsrs	r3, r3, #8
 1487              	.LVL185:
 1488 00a0 3333     		adds	r3, r3, #51
 1489 00a2 6375     		strb	r3, [r4, #21]
1036:../user/source/DLT645.c ****         pucBuffer[22] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
 1490              		.loc 1 1036 0
 1491 00a4 E17D     		ldrb	r1, [r4, #23]	@ zero_extendqisi2
 1492 00a6 A07D     		ldrb	r0, [r4, #22]	@ zero_extendqisi2
 1493              	.LVL186:
 1494 00a8 FFF7FEFF 		bl	Get_Estatus
 1495              	.LVL187:
 1496 00ac 20F4A870 		bic	r0, r0, #336
 1497 00b0 83B2     		uxth	r3, r0
 1498              	.LVL188:
1037:../user/source/DLT645.c ****         pucBuffer[23] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
 1499              		.loc 1 1037 0
 1500 00b2 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 60


 1501 00b4 3332     		adds	r2, r2, #51
 1502 00b6 A275     		strb	r2, [r4, #22]
1038:../user/source/DLT645.c ****         //×´Ì¬×Ö6,CÏà×´Ì¬×Ö
 1503              		.loc 1 1038 0
 1504 00b8 1B0A     		lsrs	r3, r3, #8
 1505              	.LVL189:
 1506 00ba 3333     		adds	r3, r3, #51
 1507 00bc E375     		strb	r3, [r4, #23]
1040:../user/source/DLT645.c ****         pucBuffer[24] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
 1508              		.loc 1 1040 0
 1509 00be 617E     		ldrb	r1, [r4, #25]	@ zero_extendqisi2
 1510 00c0 207E     		ldrb	r0, [r4, #24]	@ zero_extendqisi2
 1511              	.LVL190:
 1512 00c2 FFF7FEFF 		bl	Get_Estatus
 1513              	.LVL191:
 1514 00c6 20F4A870 		bic	r0, r0, #336
 1515 00ca 83B2     		uxth	r3, r0
 1516              	.LVL192:
1041:../user/source/DLT645.c ****         pucBuffer[25] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
 1517              		.loc 1 1041 0
 1518 00cc DAB2     		uxtb	r2, r3
 1519 00ce 3332     		adds	r2, r2, #51
 1520 00d0 2276     		strb	r2, [r4, #24]
1042:../user/source/DLT645.c ****         //×´Ì¬×Ö7£¬ºÏÏà×´Ì¬×Ö
 1521              		.loc 1 1042 0
 1522 00d2 1B0A     		lsrs	r3, r3, #8
 1523              	.LVL193:
 1524 00d4 3333     		adds	r3, r3, #51
 1525 00d6 6376     		strb	r3, [r4, #25]
1044:../user/source/DLT645.c ****         pucBuffer[26] = (uint8_t)(estatus & 0x00FF) + 0X33;        //×´Ì¬×ÖµÍ×Ö½Ú
 1526              		.loc 1 1044 0
 1527 00d8 E17E     		ldrb	r1, [r4, #27]	@ zero_extendqisi2
 1528 00da A07E     		ldrb	r0, [r4, #26]	@ zero_extendqisi2
 1529              	.LVL194:
 1530 00dc FFF7FEFF 		bl	Get_Estatus
 1531              	.LVL195:
 1532 00e0 20F00800 		bic	r0, r0, #8
 1533 00e4 83B2     		uxth	r3, r0
 1534              	.LVL196:
1045:../user/source/DLT645.c ****         pucBuffer[27] = (uint8_t)((estatus & 0xFF00) >> 8) + 0X33; //×´Ì¬×Ö¸ß×Ö½Ú
 1535              		.loc 1 1045 0
 1536 00e6 DAB2     		uxtb	r2, r3
 1537 00e8 3332     		adds	r2, r2, #51
 1538 00ea A276     		strb	r2, [r4, #26]
1046:../user/source/DLT645.c ****         break;
 1539              		.loc 1 1046 0
 1540 00ec 1B0A     		lsrs	r3, r3, #8
 1541              	.LVL197:
 1542 00ee 3333     		adds	r3, r3, #51
 1543 00f0 E376     		strb	r3, [r4, #27]
 1544              	.LVL198:
 1545              	.L87:
 996:../user/source/DLT645.c ****     switch (pucBuffer[10])
 1546              		.loc 1 996 0
 1547 00f2 0023     		movs	r3, #0
1052:../user/source/DLT645.c ****     {
 1548              		.loc 1 1052 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 61


 1549 00f4 1A46     		mov	r2, r3
 1550 00f6 03E0     		b	.L94
 1551              	.LVL199:
 1552              	.L95:
1054:../user/source/DLT645.c ****     }
 1553              		.loc 1 1054 0 discriminator 3
 1554 00f8 A15C     		ldrb	r1, [r4, r2]	@ zero_extendqisi2
 1555 00fa 0B44     		add	r3, r3, r1
 1556              	.LVL200:
 1557 00fc DBB2     		uxtb	r3, r3
 1558              	.LVL201:
1052:../user/source/DLT645.c ****     {
 1559              		.loc 1 1052 0 discriminator 3
 1560 00fe 0132     		adds	r2, r2, #1
 1561              	.LVL202:
 1562              	.L94:
1052:../user/source/DLT645.c ****     {
 1563              		.loc 1 1052 0 is_stmt 0 discriminator 1
 1564 0100 0349     		ldr	r1, .L97
 1565 0102 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1566 0104 01F10A00 		add	r0, r1, #10
 1567 0108 8242     		cmp	r2, r0
 1568 010a F5DB     		blt	.L95
1056:../user/source/DLT645.c **** }
 1569              		.loc 1 1056 0 is_stmt 1
 1570 010c 2354     		strb	r3, [r4, r0]
 1571 010e 10BD     		pop	{r4, pc}
 1572              	.LVL203:
 1573              	.L98:
 1574              		.align	2
 1575              	.L97:
 1576 0110 00000000 		.word	.LANCHOR0
 1577              		.cfi_endproc
 1578              	.LFE128:
 1580              		.section	.text.GetLowByte,"ax",%progbits
 1581              		.align	2
 1582              		.thumb
 1583              		.thumb_func
 1585              	GetLowByte:
 1586              	.LFB142:
1802:../user/source/DLT645.c **** /********************************************************************
1803:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½«µçÑ¹¸öÎ»×ª»»ÎªµÍ×Ö½Ú
1804:../user/source/DLT645.c ****  * Êä    Èë£ºÊ®½øÖÆµçÑ¹Öµ
1805:../user/source/DLT645.c ****  * Êä    ³ö£º	BCDÂë
1806:../user/source/DLT645.c ****  *           
1807:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1808:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
1809:../user/source/DLT645.c ****  **********************************************************************/
1810:../user/source/DLT645.c **** uint8_t GetLowByte(int Voltage)
1811:../user/source/DLT645.c **** {
 1587              		.loc 1 1811 0
 1588              		.cfi_startproc
 1589              		@ args = 0, pretend = 0, frame = 0
 1590              		@ frame_needed = 0, uses_anonymous_args = 0
 1591              		@ link register save eliminated.
 1592              	.LVL204:
1812:../user/source/DLT645.c ****     uint8_t LowByte = 0x00;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 62


1813:../user/source/DLT645.c ****     LowByte = (((((Voltage % 1000) % 100) / 10) << 4) & 0xF0) +
 1593              		.loc 1 1813 0
 1594 0000 1149     		ldr	r1, .L100
 1595 0002 81FB0031 		smull	r3, r1, r1, r0
 1596 0006 C317     		asrs	r3, r0, #31
 1597 0008 C3EBA111 		rsb	r1, r3, r1, asr #6
 1598 000c 4FF47A73 		mov	r3, #1000
 1599 0010 03FB1101 		mls	r1, r3, r1, r0
 1600 0014 0D4A     		ldr	r2, .L100+4
 1601 0016 82FB0132 		smull	r3, r2, r2, r1
 1602 001a CB17     		asrs	r3, r1, #31
 1603 001c C3EB6212 		rsb	r2, r3, r2, asr #5
 1604 0020 6423     		movs	r3, #100
 1605 0022 03FB1212 		mls	r2, r3, r2, r1
 1606 0026 0A48     		ldr	r0, .L100+8
 1607              	.LVL205:
 1608 0028 80FB0230 		smull	r3, r0, r0, r2
 1609 002c D317     		asrs	r3, r2, #31
 1610 002e C3EBA000 		rsb	r0, r3, r0, asr #2
1814:../user/source/DLT645.c ****               ((((Voltage % 1000) % 100) % 10) & 0x0F) + 0x33;
 1611              		.loc 1 1814 0
 1612 0032 00EB8001 		add	r1, r0, r0, lsl #2
 1613 0036 4B00     		lsls	r3, r1, #1
 1614 0038 D31A     		subs	r3, r2, r3
1813:../user/source/DLT645.c ****               ((((Voltage % 1000) % 100) % 10) & 0x0F) + 0x33;
 1615              		.loc 1 1813 0
 1616 003a 03F00F03 		and	r3, r3, #15
 1617 003e 03EB0010 		add	r0, r3, r0, lsl #4
 1618 0042 3330     		adds	r0, r0, #51
 1619              	.LVL206:
1815:../user/source/DLT645.c ****     return LowByte;
1816:../user/source/DLT645.c **** }
 1620              		.loc 1 1816 0
 1621 0044 C0B2     		uxtb	r0, r0
 1622 0046 7047     		bx	lr
 1623              	.L101:
 1624              		.align	2
 1625              	.L100:
 1626 0048 D34D6210 		.word	274877907
 1627 004c 1F85EB51 		.word	1374389535
 1628 0050 67666666 		.word	1717986919
 1629              		.cfi_endproc
 1630              	.LFE142:
 1632              		.section	.text.GetHighByte,"ax",%progbits
 1633              		.align	2
 1634              		.thumb
 1635              		.thumb_func
 1637              	GetHighByte:
 1638              	.LFB143:
1817:../user/source/DLT645.c **** 
1818:../user/source/DLT645.c **** /********************************************************************
1819:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½«µçÑ¹°ÙÎ»¡¢Ê®Î»×ª»»ÎªµÍ×Ö½Ú
1820:../user/source/DLT645.c ****  * Êä    Èë£ºÊ®½øÖÆµçÑ¹Öµ
1821:../user/source/DLT645.c ****  * Êä    ³ö£º	BCDÂë
1822:../user/source/DLT645.c ****  *           
1823:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1824:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 63


1825:../user/source/DLT645.c ****  **********************************************************************/
1826:../user/source/DLT645.c **** uint8_t GetHighByte(int Voltage)
1827:../user/source/DLT645.c **** {
 1639              		.loc 1 1827 0
 1640              		.cfi_startproc
 1641              		@ args = 0, pretend = 0, frame = 0
 1642              		@ frame_needed = 0, uses_anonymous_args = 0
 1643              		@ link register save eliminated.
 1644              	.LVL207:
1828:../user/source/DLT645.c ****     uint8_t HighByte = 0x00;
1829:../user/source/DLT645.c ****     HighByte = (((uint8_t)(Voltage / 1000) << 4) & 0xF0) +
 1645              		.loc 1 1829 0
 1646 0000 0C49     		ldr	r1, .L103
 1647 0002 81FB0031 		smull	r3, r1, r1, r0
 1648 0006 C317     		asrs	r3, r0, #31
 1649 0008 C3EBA111 		rsb	r1, r3, r1, asr #6
 1650 000c 0B01     		lsls	r3, r1, #4
 1651 000e 03F47F62 		and	r2, r3, #4080
1830:../user/source/DLT645.c ****                ((uint8_t)((Voltage % 1000) / 100) & 0x0F) + 0x33;
 1652              		.loc 1 1830 0
 1653 0012 4FF47A73 		mov	r3, #1000
 1654 0016 03FB1103 		mls	r3, r3, r1, r0
 1655 001a 0748     		ldr	r0, .L103+4
 1656              	.LVL208:
 1657 001c 80FB0310 		smull	r1, r0, r0, r3
 1658 0020 DB17     		asrs	r3, r3, #31
 1659 0022 C3EB6013 		rsb	r3, r3, r0, asr #5
1829:../user/source/DLT645.c ****                ((uint8_t)((Voltage % 1000) / 100) & 0x0F) + 0x33;
 1660              		.loc 1 1829 0
 1661 0026 03F00F03 		and	r3, r3, #15
 1662 002a 1344     		add	r3, r3, r2
 1663 002c 03F13300 		add	r0, r3, #51
 1664              	.LVL209:
1831:../user/source/DLT645.c ****     return HighByte;
1832:../user/source/DLT645.c **** }
 1665              		.loc 1 1832 0
 1666 0030 C0B2     		uxtb	r0, r0
 1667 0032 7047     		bx	lr
 1668              	.L104:
 1669              		.align	2
 1670              	.L103:
 1671 0034 D34D6210 		.word	274877907
 1672 0038 1F85EB51 		.word	1374389535
 1673              		.cfi_endproc
 1674              	.LFE143:
 1676              		.section	.text.Get_Energy,"ax",%progbits
 1677              		.align	2
 1678              		.thumb
 1679              		.thumb_func
 1681              	Get_Energy:
 1682              	.LFB145:
1833:../user/source/DLT645.c **** 
1834:../user/source/DLT645.c **** /********************************************************************
1835:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÈÕ¶³½áÊı¾İĞŞ¸Ä¹¦ÄÜ³õÊ¼»¯£ºÄ¬ÈÏĞŞ¸Ä£»
1836:../user/source/DLT645.c ****  * Êä    Èë£º
1837:../user/source/DLT645.c ****  * Êä    ³ö£º
1838:../user/source/DLT645.c ****  *
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 64


1839:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1840:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.9.6
1841:../user/source/DLT645.c ****  **********************************************************************/
1842:../user/source/DLT645.c **** //void vDayfrozen_Change_Init(void)
1843:../user/source/DLT645.c **** void vEnergy_Modify_Init(void)
1844:../user/source/DLT645.c **** {
1845:../user/source/DLT645.c ****     uint8_t tmp;
1846:../user/source/DLT645.c ****     /*ÈÕ¶³½áĞŞ¸ÄÊ¹ÄÜÎ»³õÊ¼»¯*/
1847:../user/source/DLT645.c ****     Dayfrozen_Change_State = EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR);
1848:../user/source/DLT645.c ****     tmp = EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR);
1849:../user/source/DLT645.c ****     /*ÅĞ¶ÏflashÖĞÊÇ·ñÒÑ´æ´¢µçÑ¹ĞŞ¸Ä±ÈÀı*/
1850:../user/source/DLT645.c ****     if (tmp == 0xFF)
1851:../user/source/DLT645.c ****     {
1852:../user/source/DLT645.c ****         /*Ê¹ÓÃÄ¬ÈÏĞŞ¸Ä±ÈÀı*/
1853:../user/source/DLT645.c ****         ucDayfrozen_Modify_Ratio = UCDAYFROZEN_CHANGE_DEFAULE_RATIO;
1854:../user/source/DLT645.c ****     }
1855:../user/source/DLT645.c ****     else
1856:../user/source/DLT645.c ****     {
1857:../user/source/DLT645.c ****         ucDayfrozen_Modify_Ratio = tmp;
1858:../user/source/DLT645.c ****     }
1859:../user/source/DLT645.c **** }
1860:../user/source/DLT645.c **** 
1861:../user/source/DLT645.c **** /********************************************************************
1862:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º´ÓÊı¾İÖ¡ÖĞ¶ÁÈ¡µçÄÜÁ¿Öµ
1863:../user/source/DLT645.c ****  * Êä    Èë£ºµçÄÜÁ¿Öµ´ÓµÍµ½¸ßËÄ¸ö×Ö½Ú
1864:../user/source/DLT645.c ****  * Êä    ³ö£ºÊ®½øÖÆµÄµçÄÜÁ¿Öµ
1865:../user/source/DLT645.c ****  * Òª    Çó£ºÊä³öÖµÀ©´ó100±¶
1866:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1867:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2016.6.23
1868:../user/source/DLT645.c ****  **********************************************************************/
1869:../user/source/DLT645.c **** uint32_t Get_Energy(uint8_t FstByte, uint8_t ScdByte, uint8_t TirdByte, uint8_t ForthByte)
1870:../user/source/DLT645.c **** {
 1683              		.loc 1 1870 0
 1684              		.cfi_startproc
 1685              		@ args = 0, pretend = 0, frame = 0
 1686              		@ frame_needed = 0, uses_anonymous_args = 0
 1687              		@ link register save eliminated.
 1688              	.LVL210:
 1689 0000 30B4     		push	{r4, r5}
 1690              	.LCFI17:
 1691              		.cfi_def_cfa_offset 8
 1692              		.cfi_offset 4, -8
 1693              		.cfi_offset 5, -4
 1694              	.LVL211:
1871:../user/source/DLT645.c ****     uint32_t Energy = 0;
1872:../user/source/DLT645.c ****     Energy = BCD2DEC(ForthByte - 0x33) * 1000000 +
 1695              		.loc 1 1872 0
 1696 0002 333B     		subs	r3, r3, #51
 1697              	.LVL212:
 1698 0004 C3F30314 		ubfx	r4, r3, #4, #4
 1699 0008 04EB8404 		add	r4, r4, r4, lsl #2
 1700 000c 6500     		lsls	r5, r4, #1
 1701 000e 03F00F03 		and	r3, r3, #15
 1702 0012 2B44     		add	r3, r3, r5
1873:../user/source/DLT645.c ****              BCD2DEC(TirdByte - 0x33) * 10000 +
 1703              		.loc 1 1873 0
 1704 0014 333A     		subs	r2, r2, #51
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 65


 1705              	.LVL213:
 1706 0016 C2F30314 		ubfx	r4, r2, #4, #4
 1707 001a 04EB8404 		add	r4, r4, r4, lsl #2
 1708 001e 6500     		lsls	r5, r4, #1
 1709 0020 02F00F02 		and	r2, r2, #15
 1710 0024 2A44     		add	r2, r2, r5
 1711 0026 42F21074 		movw	r4, #10000
 1712 002a 04FB02F2 		mul	r2, r4, r2
1872:../user/source/DLT645.c ****              BCD2DEC(TirdByte - 0x33) * 10000 +
 1713              		.loc 1 1872 0
 1714 002e 0D4C     		ldr	r4, .L107
 1715 0030 04FB0323 		mla	r3, r4, r3, r2
1874:../user/source/DLT645.c ****              BCD2DEC(ScdByte - 0x33) * 100 +
 1716              		.loc 1 1874 0
 1717 0034 3339     		subs	r1, r1, #51
 1718              	.LVL214:
 1719 0036 C1F30312 		ubfx	r2, r1, #4, #4
 1720 003a 02EB8202 		add	r2, r2, r2, lsl #2
 1721 003e 5400     		lsls	r4, r2, #1
 1722 0040 01F00F01 		and	r1, r1, #15
 1723 0044 2144     		add	r1, r1, r4
1873:../user/source/DLT645.c ****              BCD2DEC(TirdByte - 0x33) * 10000 +
 1724              		.loc 1 1873 0
 1725 0046 6422     		movs	r2, #100
 1726 0048 02FB0131 		mla	r1, r2, r1, r3
1875:../user/source/DLT645.c ****              BCD2DEC(FstByte - 0x33);
 1727              		.loc 1 1875 0
 1728 004c 3338     		subs	r0, r0, #51
 1729              	.LVL215:
 1730 004e C0F30313 		ubfx	r3, r0, #4, #4
 1731 0052 03EB8303 		add	r3, r3, r3, lsl #2
 1732 0056 5A00     		lsls	r2, r3, #1
 1733 0058 00F00F00 		and	r0, r0, #15
 1734 005c 1044     		add	r0, r0, r2
 1735              	.LVL216:
1876:../user/source/DLT645.c ****     return Energy;
1877:../user/source/DLT645.c **** }
 1736              		.loc 1 1877 0
 1737 005e 0844     		add	r0, r0, r1
 1738              	.LVL217:
 1739 0060 30BC     		pop	{r4, r5}
 1740              	.LCFI18:
 1741              		.cfi_restore 5
 1742              		.cfi_restore 4
 1743              		.cfi_def_cfa_offset 0
 1744 0062 7047     		bx	lr
 1745              	.L108:
 1746              		.align	2
 1747              	.L107:
 1748 0064 40420F00 		.word	1000000
 1749              		.cfi_endproc
 1750              	.LFE145:
 1752              		.section	.text.Fill_Energy,"ax",%progbits
 1753              		.align	2
 1754              		.thumb
 1755              		.thumb_func
 1757              	Fill_Energy:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 66


 1758              	.LFB146:
1878:../user/source/DLT645.c **** 
1879:../user/source/DLT645.c **** /********************************************************************
1880:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½«µçÄÜÁ¿Öµ×ª»¯Îª645Ö¡×Ö½Ú
1881:../user/source/DLT645.c ****  * Êä    Èë£ºµçÄÜÁ¿Öµ£¬ËÄ×Ö½Ú°´´«ÊäË³ĞòÊäÈë
1882:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
1883:../user/source/DLT645.c ****  * Òª    Çó£ºÊä³öÖµÀ©´ó100±¶
1884:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1885:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.10
1886:../user/source/DLT645.c ****  **********************************************************************/
1887:../user/source/DLT645.c **** void Fill_Energy(uint32_t energy, uint8_t *pFstByte, uint8_t *pScdByte, uint8_t *pTirdByte, uint8_t
1888:../user/source/DLT645.c **** {
 1759              		.loc 1 1888 0
 1760              		.cfi_startproc
 1761              		@ args = 4, pretend = 0, frame = 0
 1762              		@ frame_needed = 0, uses_anonymous_args = 0
 1763              	.LVL218:
 1764 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1765              	.LCFI19:
 1766              		.cfi_def_cfa_offset 28
 1767              		.cfi_offset 4, -28
 1768              		.cfi_offset 5, -24
 1769              		.cfi_offset 6, -20
 1770              		.cfi_offset 7, -16
 1771              		.cfi_offset 8, -12
 1772              		.cfi_offset 9, -8
 1773              		.cfi_offset 14, -4
1889:../user/source/DLT645.c ****     *pFstByte = DEC2BCD(energy % 100) + 0x33;
 1774              		.loc 1 1889 0
 1775 0004 2C4D     		ldr	r5, .L111
 1776 0006 A5FB004C 		umull	r4, ip, r5, r0
 1777 000a 4FEA5C18 		lsr	r8, ip, #5
 1778 000e 6426     		movs	r6, #100
 1779 0010 06FB1808 		mls	r8, r6, r8, r0
 1780 0014 294C     		ldr	r4, .L111+4
 1781 0016 A4FB08E7 		umull	lr, r7, r4, r8
 1782 001a 4FEAD70E 		lsr	lr, r7, #3
 1783 001e 0EEB8E09 		add	r9, lr, lr, lsl #2
 1784 0022 4FEA4907 		lsl	r7, r9, #1
 1785 0026 C7EB0807 		rsb	r7, r7, r8
 1786 002a 47EA0E17 		orr	r7, r7, lr, lsl #4
 1787 002e 3337     		adds	r7, r7, #51
 1788 0030 0F70     		strb	r7, [r1]
1890:../user/source/DLT645.c ****     *pScdByte = DEC2BCD(energy / 100 % 100) + 0x33;
 1789              		.loc 1 1890 0
 1790 0032 4FEA5C1C 		lsr	ip, ip, #5
 1791 0036 A5FB0C1E 		umull	r1, lr, r5, ip
 1792              	.LVL219:
 1793 003a 4FEA5E1E 		lsr	lr, lr, #5
 1794 003e 06FB1ECE 		mls	lr, r6, lr, ip
 1795 0042 A4FB0E71 		umull	r7, r1, r4, lr
 1796 0046 CF08     		lsrs	r7, r1, #3
 1797 0048 07EB870C 		add	ip, r7, r7, lsl #2
 1798 004c 4FEA4C01 		lsl	r1, ip, #1
 1799 0050 C1EB0E01 		rsb	r1, r1, lr
 1800 0054 41EA0711 		orr	r1, r1, r7, lsl #4
 1801 0058 3331     		adds	r1, r1, #51
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 67


 1802 005a 1170     		strb	r1, [r2]
1891:../user/source/DLT645.c ****     *pTirdByte = DEC2BCD(energy / 10000 % 100) + 0x33;
 1803              		.loc 1 1891 0
 1804 005c 184A     		ldr	r2, .L111+8
 1805              	.LVL220:
 1806 005e A2FB0012 		umull	r1, r2, r2, r0
 1807 0062 520B     		lsrs	r2, r2, #13
 1808 0064 A5FB0217 		umull	r1, r7, r5, r2
 1809 0068 7F09     		lsrs	r7, r7, #5
 1810 006a 06FB1727 		mls	r7, r6, r7, r2
 1811 006e A4FB0712 		umull	r1, r2, r4, r7
 1812 0072 D108     		lsrs	r1, r2, #3
 1813 0074 01EB810E 		add	lr, r1, r1, lsl #2
 1814 0078 4FEA4E02 		lsl	r2, lr, #1
 1815 007c 9646     		mov	lr, r2
 1816 007e BA1A     		subs	r2, r7, r2
 1817 0080 42EA0112 		orr	r2, r2, r1, lsl #4
 1818 0084 3332     		adds	r2, r2, #51
 1819 0086 1A70     		strb	r2, [r3]
1892:../user/source/DLT645.c ****     *pForthByte = DEC2BCD(energy / 1000000 % 100) + 0x33;
 1820              		.loc 1 1892 0
 1821 0088 0E4B     		ldr	r3, .L111+12
 1822              	.LVL221:
 1823 008a A3FB0030 		umull	r3, r0, r3, r0
 1824              	.LVL222:
 1825 008e 800C     		lsrs	r0, r0, #18
 1826 0090 A5FB0035 		umull	r3, r5, r5, r0
 1827 0094 6D09     		lsrs	r5, r5, #5
 1828 0096 06FB1505 		mls	r5, r6, r5, r0
 1829 009a A4FB0534 		umull	r3, r4, r4, r5
 1830 009e E408     		lsrs	r4, r4, #3
 1831 00a0 04EB8402 		add	r2, r4, r4, lsl #2
 1832 00a4 5300     		lsls	r3, r2, #1
 1833 00a6 EB1A     		subs	r3, r5, r3
 1834 00a8 43EA0414 		orr	r4, r3, r4, lsl #4
 1835 00ac 3334     		adds	r4, r4, #51
 1836 00ae 079B     		ldr	r3, [sp, #28]
 1837 00b0 1C70     		strb	r4, [r3]
 1838 00b2 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1839              	.LVL223:
 1840              	.L112:
 1841 00b6 00BF     		.align	2
 1842              	.L111:
 1843 00b8 1F85EB51 		.word	1374389535
 1844 00bc CDCCCCCC 		.word	-858993459
 1845 00c0 5917B7D1 		.word	-776530087
 1846 00c4 83DE1B43 		.word	1125899907
 1847              		.cfi_endproc
 1848              	.LFE146:
 1850              		.section	.text.vVoltage_SetMaxMaxValue,"ax",%progbits
 1851              		.align	2
 1852              		.global	vVoltage_SetMaxMaxValue
 1853              		.thumb
 1854              		.thumb_func
 1856              	vVoltage_SetMaxMaxValue:
 1857              	.LFB159:
1893:../user/source/DLT645.c **** }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 68


1894:../user/source/DLT645.c **** 
1895:../user/source/DLT645.c **** /********************************************************************
1896:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµ±Ç°/ÈÕ¶³½áµçÄÜÁ¿µ÷Õû²ßÂÔ
1897:../user/source/DLT645.c ****  * Êä    Èë£º
1898:../user/source/DLT645.c ****  * Êä    ³ö£º
1899:../user/source/DLT645.c ****  *           
1900:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1901:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.8
1902:../user/source/DLT645.c ****  **********************************************************************/
1903:../user/source/DLT645.c **** uint32_t vNow_Frozen_Modify_Mothod(uint32_t nowenergy, uint32_t RealValueAddr, uint32_t ModifiedVal
1904:../user/source/DLT645.c **** {
1905:../user/source/DLT645.c ****     uint32_t RealValue;
1906:../user/source/DLT645.c ****     uint32_t Modified_Value;
1907:../user/source/DLT645.c ****     uint64_t i;
1908:../user/source/DLT645.c ****     /*¶ÁÈ¡´æ´¢µÄÉÏ´ÎÕæÊµÖµºÍĞŞ¸ÄÖµ*/
1909:../user/source/DLT645.c ****     RealValue = Flash_Read_Word(RealValueAddr);
1910:../user/source/DLT645.c ****     Modified_Value = Flash_Read_Word(ModifiedValueAddr);
1911:../user/source/DLT645.c ****     /*ÖÕ¶ËµÚÒ»´ÎÊ¹ÓÃ*/
1912:../user/source/DLT645.c ****     if ((RealValue == 0XFFFFFFFF) || (Modified_Value == 0XFFFFFFFF))
1913:../user/source/DLT645.c ****     {
1914:../user/source/DLT645.c ****         /*ÉÏËÍÖµ´æ´¢ÎªÕæÊµÖµºÍĞŞ¸ÄÖµ*/
1915:../user/source/DLT645.c ****         Flash_Write_Word(RealValueAddr, nowenergy);
1916:../user/source/DLT645.c ****         Flash_Write_Word(ModifiedValueAddr, nowenergy);
1917:../user/source/DLT645.c ****         /*²»ĞŞ¸Ä*/
1918:../user/source/DLT645.c ****         return nowenergy;
1919:../user/source/DLT645.c ****     }
1920:../user/source/DLT645.c ****     else
1921:../user/source/DLT645.c ****     {
1922:../user/source/DLT645.c ****         /*¼ÆËãÕæÊµµÄÔöÁ¿£¬´òÕÛºóÀÛ¼Óµ½ÉÏ´ÎµÄĞŞ¸ÄÖµ*/
1923:../user/source/DLT645.c ****         /*µç±íÖµÒç³öºó¹éÁã*/
1924:../user/source/DLT645.c ****         if (nowenergy < RealValue)
1925:../user/source/DLT645.c ****         {
1926:../user/source/DLT645.c ****             //i= ((uint64_t)(nowenergy+ 99999999- RealValue)* ucDayfrozen_Modify_Ratio)/100;
1927:../user/source/DLT645.c ****             /*2018-6-27 11:04:38£ºÔö¼ÓËÄÉáÎåÈë£¬µ¥´ÎÔö¼Ó0.05kwhÒÔÏÂÊ±£¬²»ĞŞ¸Ä*/
1928:../user/source/DLT645.c ****             i = ((uint64_t)(nowenergy + 99999999 - RealValue) * ucDayfrozen_Modify_Ratio + 50) / 10
1929:../user/source/DLT645.c ****         }
1930:../user/source/DLT645.c ****         else
1931:../user/source/DLT645.c ****         {
1932:../user/source/DLT645.c ****             i = ((uint64_t)(nowenergy - RealValue) * ucDayfrozen_Modify_Ratio + 50) / 100;
1933:../user/source/DLT645.c ****         }
1934:../user/source/DLT645.c ****         Modified_Value += (uint32_t)i;
1935:../user/source/DLT645.c ****         /*ÀÛ¼ÆÖµÒç³öºó¹éÁã*/
1936:../user/source/DLT645.c ****         Modified_Value = (Modified_Value > 99999999
1937:../user/source/DLT645.c ****                               ? Modified_Value - 99999999
1938:../user/source/DLT645.c ****                               : Modified_Value);
1939:../user/source/DLT645.c ****         /*½«ÉÏËÍÖµ´æ´¢ÎªÕæÊµÖµ*/
1940:../user/source/DLT645.c ****         Flash_Write_Word(RealValueAddr, nowenergy);
1941:../user/source/DLT645.c ****         /*ĞÂµÄĞŞ¸ÄÖµ¸²¸Ç¾ÉÖµ´æ´¢*/
1942:../user/source/DLT645.c ****         Flash_Write_Word(ModifiedValueAddr, Modified_Value);
1943:../user/source/DLT645.c ****         /*·µ»ØĞŞ¸ÄÖµ*/
1944:../user/source/DLT645.c ****         return Modified_Value;
1945:../user/source/DLT645.c ****     }
1946:../user/source/DLT645.c **** }
1947:../user/source/DLT645.c **** 
1948:../user/source/DLT645.c **** /********************************************************************
1949:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµ±Ç°µçÁ¿Êı¾İĞŞ¸Äº¯Êı
1950:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 69


1951:../user/source/DLT645.c ****  * Êä    ³ö£º	none
1952:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
1953:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.9
1954:../user/source/DLT645.c ****  case ID_00010000:	//µ±Ç°ÕıÏòÓĞ¹¦×ÜµçÄÜ
1955:../user/source/DLT645.c ****  case ID_00010100:	//µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜ
1956:../user/source/DLT645.c ****  case ID_00010200:	//µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ2µçÄÜ
1957:../user/source/DLT645.c ****  case ID_00010300:	//µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ3µçÄÜ
1958:../user/source/DLT645.c ****  case ID_00010400:	//µ±Ç°ÕıÏòÓĞ¹¦·ÑÂÊ4µçÄÜ
1959:../user/source/DLT645.c ****  case ID_0001FF00:	//µ±Ç°ÕıÏòÓĞ¹¦µçÄÜÊı¾İ¿é
1960:../user/source/DLT645.c ****  case ID_00150000:	//µ±Ç°AÏàÕıÏòÓĞ¹¦
1961:../user/source/DLT645.c ****  case ID_00290000:	//µ±Ç°BÏàÕıÏòÓĞ¹¦
1962:../user/source/DLT645.c ****  case ID_003D0000:	//µ±Ç°CÏàÕıÏòÓĞ¹¦
1963:../user/source/DLT645.c ****  **********************************************************************/
1964:../user/source/DLT645.c **** void vNowEnergy_Modifier(uint8_t *pucBuffer)
1965:../user/source/DLT645.c **** {
1966:../user/source/DLT645.c ****     uint16_t i;
1967:../user/source/DLT645.c ****     uint32_t energy;    //Êı¾İÓòµÄµÚÒ»¸öµçÁ¿Öµ
1968:../user/source/DLT645.c ****     uint32_t energy_F1; //·ÑÂÊ1µçÁ¿×¨ÓÃ±äÁ¿
1969:../user/source/DLT645.c ****     uint32_t energy_F2; //·ÑÂÊ2µçÁ¿×¨ÓÃ±äÁ¿
1970:../user/source/DLT645.c ****     uint32_t energy_F3; //·ÑÂÊ3µçÁ¿×¨ÓÃ±äÁ¿
1971:../user/source/DLT645.c ****     uint32_t energy_F4; //·ÑÂÊ4µçÁ¿×¨ÓÃ±äÁ¿
1972:../user/source/DLT645.c ****     if (Dayfrozen_Change_State == 0x00)
1973:../user/source/DLT645.c ****         return;
1974:../user/source/DLT645.c ****     energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);
1975:../user/source/DLT645.c ****     switch (pucBuffer[11])
1976:../user/source/DLT645.c ****     {
1977:../user/source/DLT645.c ****     case 0x33:
1978:../user/source/DLT645.c ****     {
1979:../user/source/DLT645.c ****         switch (pucBuffer[12])
1980:../user/source/DLT645.c ****         {
1981:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦×Ü*/
1982:../user/source/DLT645.c ****         case 0x34:
1983:../user/source/DLT645.c ****         {
1984:../user/source/DLT645.c ****             energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_ALL_NOWENERGY_ADDR,
1985:../user/source/DLT645.c ****                                                FLASH_MODIFIED_ALL_NOWENERGY_ADDR);
1986:../user/source/DLT645.c ****             break;
1987:../user/source/DLT645.c ****         }
1988:../user/source/DLT645.c ****         /*AÏàÕıÏòÓĞ¹¦*/
1989:../user/source/DLT645.c ****         case 0x48:
1990:../user/source/DLT645.c ****         {
1991:../user/source/DLT645.c ****             energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_A_NOWENERGY_ADDR,
1992:../user/source/DLT645.c ****                                                FLASH_MODIFIED_A_NOWENERGY_ADDR);
1993:../user/source/DLT645.c ****             break;
1994:../user/source/DLT645.c ****         }
1995:../user/source/DLT645.c ****         /*BÏàÕıÏòÓĞ¹¦*/
1996:../user/source/DLT645.c ****         case 0x5c:
1997:../user/source/DLT645.c ****         {
1998:../user/source/DLT645.c ****             energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_B_NOWENERGY_ADDR,
1999:../user/source/DLT645.c ****                                                FLASH_MODIFIED_B_NOWENERGY_ADDR);
2000:../user/source/DLT645.c ****             break;
2001:../user/source/DLT645.c ****         }
2002:../user/source/DLT645.c ****         /*CÏàÕıÏòÓĞ¹¦*/
2003:../user/source/DLT645.c ****         case 0x70:
2004:../user/source/DLT645.c ****         {
2005:../user/source/DLT645.c ****             energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_C_NOWENERGY_ADDR,
2006:../user/source/DLT645.c ****                                                FLASH_MODIFIED_C_NOWENERGY_ADDR);
2007:../user/source/DLT645.c ****             break;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 70


2008:../user/source/DLT645.c ****         }
2009:../user/source/DLT645.c ****         default:
2010:../user/source/DLT645.c ****             break;
2011:../user/source/DLT645.c ****         }
2012:../user/source/DLT645.c ****         break;
2013:../user/source/DLT645.c ****     }
2014:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×Ü·ÑÂÊ1*/
2015:../user/source/DLT645.c ****     case 0x34:
2016:../user/source/DLT645.c ****     {
2017:../user/source/DLT645.c ****         energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_F1_NOWENERGY_ADDR,
2018:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F1_NOWENERGY_ADDR);
2019:../user/source/DLT645.c ****         break;
2020:../user/source/DLT645.c ****     }
2021:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×Ü·ÑÂÊ2*/
2022:../user/source/DLT645.c ****     case 0x35:
2023:../user/source/DLT645.c ****     {
2024:../user/source/DLT645.c ****         energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_F2_NOWENERGY_ADDR,
2025:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F2_NOWENERGY_ADDR);
2026:../user/source/DLT645.c ****         break;
2027:../user/source/DLT645.c ****     }
2028:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×Ü·ÑÂÊ3*/
2029:../user/source/DLT645.c ****     case 0x36:
2030:../user/source/DLT645.c ****     {
2031:../user/source/DLT645.c ****         energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_F3_NOWENERGY_ADDR,
2032:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F3_NOWENERGY_ADDR);
2033:../user/source/DLT645.c ****         break;
2034:../user/source/DLT645.c ****     }
2035:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×Ü·ÑÂÊ4*/
2036:../user/source/DLT645.c ****     case 0x37:
2037:../user/source/DLT645.c ****     {
2038:../user/source/DLT645.c ****         energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_F4_NOWENERGY_ADDR,
2039:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F4_NOWENERGY_ADDR);
2040:../user/source/DLT645.c ****         break;
2041:../user/source/DLT645.c ****     }
2042:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×ÜÊı¾İ¿é*/
2043:../user/source/DLT645.c ****     case 0x32:
2044:../user/source/DLT645.c ****     {
2045:../user/source/DLT645.c ****         /*			2018-6-27 09:07:02£ºÖØÇìÕÙ²âÈÕ¶³½áÊı¾İ¿é·¢ÏÖ×ÜºÍËÄ·ÑÂÊÖ®ºÍÓĞ²îÒì£¬
2046:../user/source/DLT645.c **** 	 *			Ô­ÒòÎª³ËÒÔ0.9ºóĞ¡ÊıµãºóµÚÈıÎ»±»ºöÂÔ£¬×ÜµçÁ¿´óÓÚ·Ö·ÑÂÊµçÁ¿Ö®ºÍ£¬
2047:../user/source/DLT645.c **** 	 *			½«×ÜµçÁ¿¼ÆËã·½·¨¸ÄÎª½«ËÄ·ÑÂÊ·ÖµçÁ¿Ïà¼Ó
2048:../user/source/DLT645.c **** 	 *			energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_ALL_NOWENERGY_ADDR,FLASH_MODIFIED_ALL_N
2049:../user/source/DLT645.c **** 	 *			*/
2050:../user/source/DLT645.c ****         energy_F1 = Get_Energy(pucBuffer[18], pucBuffer[19], pucBuffer[20], pucBuffer[21]);
2051:../user/source/DLT645.c ****         energy_F1 = vNow_Frozen_Modify_Mothod(energy_F1, FLASH_REAL_F1_NOWENERGY_ADDR,
2052:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F1_NOWENERGY_ADDR);
2053:../user/source/DLT645.c **** 
2054:../user/source/DLT645.c ****         energy_F2 = Get_Energy(pucBuffer[22], pucBuffer[23], pucBuffer[24], pucBuffer[25]);
2055:../user/source/DLT645.c ****         energy_F2 = vNow_Frozen_Modify_Mothod(energy_F2, FLASH_REAL_F2_NOWENERGY_ADDR,
2056:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F2_NOWENERGY_ADDR);
2057:../user/source/DLT645.c **** 
2058:../user/source/DLT645.c ****         energy_F3 = Get_Energy(pucBuffer[26], pucBuffer[27], pucBuffer[28], pucBuffer[29]);
2059:../user/source/DLT645.c ****         energy_F3 = vNow_Frozen_Modify_Mothod(energy_F3, FLASH_REAL_F3_NOWENERGY_ADDR,
2060:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F3_NOWENERGY_ADDR);
2061:../user/source/DLT645.c **** 
2062:../user/source/DLT645.c ****         energy_F4 = Get_Energy(pucBuffer[30], pucBuffer[31], pucBuffer[32], pucBuffer[33]);
2063:../user/source/DLT645.c ****         energy_F4 = vNow_Frozen_Modify_Mothod(energy_F4, FLASH_REAL_F4_NOWENERGY_ADDR,
2064:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F4_NOWENERGY_ADDR);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 71


2065:../user/source/DLT645.c ****         /*¶ÁÈ¡×ÜµçÁ¿ÕæÊµÖµ*/
2066:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);
2067:../user/source/DLT645.c ****         /*±£´æ×ÜµçÁ¿ÕæÊµÖµ£¬µ¥³­×ÜµçÁ¿Ê±Ê¹ÓÃ*/
2068:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_REAL_ALL_NOWENERGY_ADDR, energy);
2069:../user/source/DLT645.c ****         /*¸ù¾İ·Ö·ÑÂÊµçÁ¿¼ÆËãĞŞ¸ÄºóµÄ×ÜµçÁ¿*/
2070:../user/source/DLT645.c ****         energy = energy_F1 + energy_F2 + energy_F3 + energy_F4;
2071:../user/source/DLT645.c ****         /*±£´æĞŞ¸ÄÖµ£¬µ¥³­×ÜµçÁ¿Ê±Ê¹ÓÃ*/
2072:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_MODIFIED_ALL_NOWENERGY_ADDR, energy);
2073:../user/source/DLT645.c ****         break;
2074:../user/source/DLT645.c ****     }
2075:../user/source/DLT645.c ****     default:
2076:../user/source/DLT645.c ****         break;
2077:../user/source/DLT645.c ****     }
2078:../user/source/DLT645.c ****     switch (pucBuffer[11])
2079:../user/source/DLT645.c ****     {
2080:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×Ü£¬»òA/B/CÏàÕıÏòÓĞ¹¦*/
2081:../user/source/DLT645.c ****     case 0x33:
2082:../user/source/DLT645.c ****     case 0x34:
2083:../user/source/DLT645.c ****     case 0x35:
2084:../user/source/DLT645.c ****     case 0x36:
2085:../user/source/DLT645.c ****     case 0x37:
2086:../user/source/DLT645.c ****     {
2087:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2088:../user/source/DLT645.c ****         pucBuffer[18] = 0;
2089:../user/source/DLT645.c ****         for (i = 0; i < 18; i++)
2090:../user/source/DLT645.c ****         {
2091:../user/source/DLT645.c ****             pucBuffer[18] += pucBuffer[i];
2092:../user/source/DLT645.c ****         }
2093:../user/source/DLT645.c ****         pucBuffer[19] = 0x16;
2094:../user/source/DLT645.c ****         break;
2095:../user/source/DLT645.c ****     }
2096:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×ÜÊı¾İ¿é*/
2097:../user/source/DLT645.c ****     case 0x32:
2098:../user/source/DLT645.c ****     {
2099:../user/source/DLT645.c ****         /*×Ü*/
2100:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2101:../user/source/DLT645.c ****         /*¼â*/
2102:../user/source/DLT645.c ****         Fill_Energy(energy_F1, &pucBuffer[18], &pucBuffer[19], &pucBuffer[20], &pucBuffer[21]);
2103:../user/source/DLT645.c ****         /*·å*/
2104:../user/source/DLT645.c ****         Fill_Energy(energy_F2, &pucBuffer[22], &pucBuffer[23], &pucBuffer[24], &pucBuffer[25]);
2105:../user/source/DLT645.c ****         /*Æ½*/
2106:../user/source/DLT645.c ****         Fill_Energy(energy_F3, &pucBuffer[26], &pucBuffer[27], &pucBuffer[28], &pucBuffer[29]);
2107:../user/source/DLT645.c ****         /*¹È*/
2108:../user/source/DLT645.c ****         Fill_Energy(energy_F4, &pucBuffer[30], &pucBuffer[31], &pucBuffer[32], &pucBuffer[33]);
2109:../user/source/DLT645.c ****         pucBuffer[34] = 0;
2110:../user/source/DLT645.c ****         for (i = 0; i < 34; i++)
2111:../user/source/DLT645.c ****         {
2112:../user/source/DLT645.c ****             pucBuffer[34] += pucBuffer[i];
2113:../user/source/DLT645.c ****         }
2114:../user/source/DLT645.c ****         pucBuffer[35] = 0x16;
2115:../user/source/DLT645.c ****         break;
2116:../user/source/DLT645.c ****     }
2117:../user/source/DLT645.c ****     default:
2118:../user/source/DLT645.c ****         break;
2119:../user/source/DLT645.c ****     }
2120:../user/source/DLT645.c **** }
2121:../user/source/DLT645.c **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 72


2122:../user/source/DLT645.c **** /********************************************************************
2123:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÈÕ¶³½áÊı¾İĞŞ¸Äº¯Êı
2124:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2125:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2126:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2127:../user/source/DLT645.c ****  * Ç°1ÈÕ¶³½áµÚ¶şÌìÕÙ²â¿ªÊ¼¸Ä£¬
2128:../user/source/DLT645.c ****  * Ç°2ÈÕ¶³½áµÚÈıÌìÕÙ²â¿ªÊ¼¸Ä£¬
2129:../user/source/DLT645.c ****  * Ç°3ÈÕ¶«½áµÚËÄÌìÕÙ²â¿ªÊ¼¸Ä
2130:../user/source/DLT645.c ****  * ÈôÉÏµç3ÈÕÄÚ£¬Ç°1ÈÕ¡¢Ç°2ÈÕ¡¢Ç°3ÈÕ¶³½áÃ¿ÌìÕÙ²âµÄ´ÎÊı²»È«ÊÇÒ»´Î£¬ÔòÎŞ·¨
2131:../user/source/DLT645.c ****  * ÊµÏÖ£¬¹Ê²»ĞŞ¸ÄÇ°2ÈÕºÍÇ°3ÈÕ¶³½á
2132:../user/source/DLT645.c ****  *
2133:../user/source/DLT645.c **** 	case ID_05060101:	//ÉÏ1ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£©
2134:../user/source/DLT645.c **** 	case ID_05060102:	//ÉÏ2ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£©
2135:../user/source/DLT645.c **** 	case ID_05060103:	//ÉÏ3ÈÕ¶³½áÕıÏòÓĞ¹¦µçÄÜÊı¾İ£¨·ÑÂÊ1~4£© 
2136:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.9
2137:../user/source/DLT645.c ****  **********************************************************************/
2138:../user/source/DLT645.c **** void vDayfrozen_Modifier(uint8_t *pucBuffer) //ĞŞ¸ÄÈÕ¶³½áÊı¾İº¯Êı
2139:../user/source/DLT645.c **** {
2140:../user/source/DLT645.c ****     uint32_t energy, energy_F1, energy_F2, energy_F3, energy_F4;
2141:../user/source/DLT645.c ****     uint16_t i;
2142:../user/source/DLT645.c ****     /*ÉÏ1´Î¡¢ÉÏ2´Î¡¢ÉÏ3´ÎÈÕ¶³½áµçÄÜÊı£º¾İ*/
2143:../user/source/DLT645.c ****     if (Dayfrozen_Change_State == 0x00)
2144:../user/source/DLT645.c ****         return;
2145:../user/source/DLT645.c ****     /*2018-6-27 13:27:07£º
2146:../user/source/DLT645.c **** 	 *ÖØÇì·´À¡ÉÏ1ÈÕ¶³½áÕıÏòÓĞ¹¦×ÜÓëËÄ·ÑÂÊÖ®ºÍ²»Ò»ÖÂ£¬
2147:../user/source/DLT645.c **** 	 *Ô­ÒòÎª³ËÒÔ0.9Ê±Ğ¡ÊıµãºóµÚÈıÎ»±»ºöÂÔ£¬
2148:../user/source/DLT645.c **** 	 *ÕıÏòÓĞ¹¦×Ü²»ÔÙ³ËÒÔ0.9£¬Ö±½ÓÀÛ¼ÓËÄ·ÑÂÊĞŞ¸ÄºóµÄÖµ
2149:../user/source/DLT645.c **** 	 *energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);	
2150:../user/source/DLT645.c **** 	 *energy = vNow_Frozen_Modify_Mothod(energy, FLASH_REAL_1DAYFROZEN_ADDR, FLASH_MODIFIED_1DAYFROZEN
2151:../user/source/DLT645.c **** 	 *Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2152:../user/source/DLT645.c **** 	*/
2153:../user/source/DLT645.c **** 
2154:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦¼â·ÑÂÊµçÁ¿*/
2155:../user/source/DLT645.c ****     energy_F1 = Get_Energy(pucBuffer[18], pucBuffer[19], pucBuffer[20], pucBuffer[21]);
2156:../user/source/DLT645.c ****     energy_F1 = vNow_Frozen_Modify_Mothod(energy_F1, FLASH_REAL_1DAYFROZEN_ADDR + 4,
2157:../user/source/DLT645.c ****                                           FLASH_MODIFIED_1DAYFROZEN_ADDR + 4);
2158:../user/source/DLT645.c ****     Fill_Energy(energy_F1, &pucBuffer[18], &pucBuffer[19], &pucBuffer[20], &pucBuffer[21]);
2159:../user/source/DLT645.c **** 
2160:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦·å·ÑÂÊµçÁ¿*/
2161:../user/source/DLT645.c ****     energy_F2 = Get_Energy(pucBuffer[22], pucBuffer[23], pucBuffer[24], pucBuffer[25]);
2162:../user/source/DLT645.c ****     energy_F2 = vNow_Frozen_Modify_Mothod(energy_F2, FLASH_REAL_1DAYFROZEN_ADDR + 8,
2163:../user/source/DLT645.c ****                                           FLASH_MODIFIED_1DAYFROZEN_ADDR + 8);
2164:../user/source/DLT645.c ****     Fill_Energy(energy_F2, &pucBuffer[22], &pucBuffer[23], &pucBuffer[24], &pucBuffer[25]);
2165:../user/source/DLT645.c **** 
2166:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦Æ½·ÑÂÊµçÁ¿*/
2167:../user/source/DLT645.c ****     energy_F3 = Get_Energy(pucBuffer[26], pucBuffer[27], pucBuffer[28], pucBuffer[29]);
2168:../user/source/DLT645.c ****     energy_F3 = vNow_Frozen_Modify_Mothod(energy_F3, FLASH_REAL_1DAYFROZEN_ADDR + 12,
2169:../user/source/DLT645.c ****                                           FLASH_MODIFIED_1DAYFROZEN_ADDR + 12);
2170:../user/source/DLT645.c ****     Fill_Energy(energy_F3, &pucBuffer[26], &pucBuffer[27], &pucBuffer[28], &pucBuffer[29]);
2171:../user/source/DLT645.c **** 
2172:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦¹È·ÑÂÊµçÁ¿*/
2173:../user/source/DLT645.c ****     energy_F4 = Get_Energy(pucBuffer[30], pucBuffer[31], pucBuffer[32], pucBuffer[33]);
2174:../user/source/DLT645.c ****     energy_F4 = vNow_Frozen_Modify_Mothod(energy_F4, FLASH_REAL_1DAYFROZEN_ADDR + 16,
2175:../user/source/DLT645.c ****                                           FLASH_MODIFIED_1DAYFROZEN_ADDR + 16);
2176:../user/source/DLT645.c ****     Fill_Energy(energy_F4, &pucBuffer[30], &pucBuffer[31], &pucBuffer[32], &pucBuffer[33]);
2177:../user/source/DLT645.c **** 
2178:../user/source/DLT645.c ****     /*ÕıÏòÓĞ¹¦×ÜµçÁ¿*/
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 73


2179:../user/source/DLT645.c ****     /*»ñÈ¡ÉÏÒ»ÈÕÕæÊµÖµ*/
2180:../user/source/DLT645.c ****     energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);
2181:../user/source/DLT645.c ****     /*´æ´¢ÕæÊµÖµ*/
2182:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_REAL_1DAYFROZEN_ADDR, energy);
2183:../user/source/DLT645.c ****     /*¼ÆËãĞŞ¸ÄºóµÄÖµ*/
2184:../user/source/DLT645.c ****     energy = energy_F1 + energy_F2 + energy_F3 + energy_F4;
2185:../user/source/DLT645.c ****     /*´æ´¢ĞŞ¸ÄºóµÄÖµ*/
2186:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_MODIFIED_1DAYFROZEN_ADDR, energy);
2187:../user/source/DLT645.c ****     /*×éÖ¡*/
2188:../user/source/DLT645.c ****     Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2189:../user/source/DLT645.c **** 
2190:../user/source/DLT645.c ****     pucBuffer[34] = 0;
2191:../user/source/DLT645.c ****     for (i = 0; i < 34; i++)
2192:../user/source/DLT645.c ****     {
2193:../user/source/DLT645.c ****         pucBuffer[34] += pucBuffer[i];
2194:../user/source/DLT645.c ****     }
2195:../user/source/DLT645.c ****     pucBuffer[35] = 0x16;
2196:../user/source/DLT645.c **** }
2197:../user/source/DLT645.c **** 
2198:../user/source/DLT645.c **** /********************************************************************
2199:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½áËãÈÕÕıÏòÓĞ¹¦µçÁ¿Êı¾İµ÷Õû²ßÂÔ
2200:../user/source/DLT645.c ****  * Êä    Èë£º
2201:../user/source/DLT645.c ****  * Êä    ³ö£º
2202:../user/source/DLT645.c ****  * Ëµ    Ã÷£º½áËãÈÕµçÁ¿ÎªÔö¼ÓÖµ£¬¿ÉÒÔÖ±½Ó°´±ÈÀıËõĞ¡
2203:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2204:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.9.6
2205:../user/source/DLT645.c ****  **********************************************************************/
2206:../user/source/DLT645.c **** uint32_t vAccountEnergy_Modify_Mothod(uint32_t dayfrozen)
2207:../user/source/DLT645.c **** {
2208:../user/source/DLT645.c ****     uint64_t i;
2209:../user/source/DLT645.c ****     i = (uint64_t)dayfrozen * ucDayfrozen_Modify_Ratio;
2210:../user/source/DLT645.c ****     return (uint32_t)(i / 100);
2211:../user/source/DLT645.c **** }
2212:../user/source/DLT645.c **** 
2213:../user/source/DLT645.c **** /********************************************************************
2214:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º½áËãÈÕÕıÏòÓĞ¹¦µçÁ¿Êı¾İĞŞ¸Äº¯Êı
2215:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2216:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
2217:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2218:../user/source/DLT645.c ****  *
2219:../user/source/DLT645.c **** 		case ID_00010001:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦×ÜµçÄÜ
2220:../user/source/DLT645.c **** 		case ID_00010101:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ1µçÄÜ
2221:../user/source/DLT645.c **** 		case ID_00010201:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ2µçÄÜ 
2222:../user/source/DLT645.c **** 		case ID_00010301:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ3µçÄÜ
2223:../user/source/DLT645.c **** 		case ID_00010401:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦·ÑÂÊ4µçÄÜ
2224:../user/source/DLT645.c **** 		case ID_0001FF01:	//ÉÏ1½áËãÈÕÕıÏòÓĞ¹¦µçÄÜÊı¾İ¿é
2225:../user/source/DLT645.c **** 		case ID_00150001:	//ÉÏ1½áËãÈÕAÏàÕıÏòÓĞ¹¦µçÄÜ
2226:../user/source/DLT645.c **** 		case ID_00290001:	//ÉÏ1½áËãÈÕBÏàÕıÏòÓĞ¹¦µçÄÜ
2227:../user/source/DLT645.c **** 		case ID_003D0001:	//ÉÏ1½áËãÈÕCÏàÕıÏòÓĞ¹¦µçÄÜ
2228:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2017.9.6
2229:../user/source/DLT645.c ****  **********************************************************************/
2230:../user/source/DLT645.c **** void vAccountEnergy_Modify(uint8_t *pucBuffer)
2231:../user/source/DLT645.c **** {
2232:../user/source/DLT645.c ****     int energy;
2233:../user/source/DLT645.c ****     uint16_t i;
2234:../user/source/DLT645.c ****     if (Dayfrozen_Change_State == 0x00)
2235:../user/source/DLT645.c ****         return;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 74


2236:../user/source/DLT645.c ****     if (pucBuffer[11] == 0x32)
2237:../user/source/DLT645.c ****     {
2238:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦×ÜµçÁ¿*/
2239:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);
2240:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2241:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2242:../user/source/DLT645.c **** 
2243:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦¼â·ÑÂÊµçÁ¿*/
2244:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[18], pucBuffer[19], pucBuffer[20], pucBuffer[21]);
2245:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2246:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[18], &pucBuffer[19], &pucBuffer[20], &pucBuffer[21]);
2247:../user/source/DLT645.c **** 
2248:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦·å·ÑÂÊµçÁ¿*/
2249:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[22], pucBuffer[23], pucBuffer[24], pucBuffer[25]);
2250:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2251:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[22], &pucBuffer[23], &pucBuffer[24], &pucBuffer[25]);
2252:../user/source/DLT645.c **** 
2253:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦Æ½·ÑÂÊµçÁ¿*/
2254:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[26], pucBuffer[27], pucBuffer[28], pucBuffer[29]);
2255:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2256:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[26], &pucBuffer[27], &pucBuffer[28], &pucBuffer[29]);
2257:../user/source/DLT645.c **** 
2258:../user/source/DLT645.c ****         /*ÕıÏòÓĞ¹¦¹È·ÑÂÊµçÁ¿*/
2259:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[30], pucBuffer[31], pucBuffer[32], pucBuffer[33]);
2260:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2261:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[30], &pucBuffer[31], &pucBuffer[32], &pucBuffer[33]);
2262:../user/source/DLT645.c **** 
2263:../user/source/DLT645.c ****         pucBuffer[34] = 0;
2264:../user/source/DLT645.c ****         for (i = 0; i < 34; i++)
2265:../user/source/DLT645.c ****         {
2266:../user/source/DLT645.c ****             pucBuffer[34] += pucBuffer[i];
2267:../user/source/DLT645.c ****         }
2268:../user/source/DLT645.c ****         pucBuffer[35] = 0x16;
2269:../user/source/DLT645.c ****     }
2270:../user/source/DLT645.c ****     else
2271:../user/source/DLT645.c ****     {
2272:../user/source/DLT645.c ****         energy = Get_Energy(pucBuffer[14], pucBuffer[15], pucBuffer[16], pucBuffer[17]);
2273:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
2274:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
2275:../user/source/DLT645.c **** 
2276:../user/source/DLT645.c ****         pucBuffer[18] = 0;
2277:../user/source/DLT645.c ****         for (i = 0; i < 18; i++)
2278:../user/source/DLT645.c ****         {
2279:../user/source/DLT645.c ****             pucBuffer[18] += pucBuffer[i];
2280:../user/source/DLT645.c ****         }
2281:../user/source/DLT645.c ****         pucBuffer[19] = 0x16;
2282:../user/source/DLT645.c ****     }
2283:../user/source/DLT645.c **** }
2284:../user/source/DLT645.c **** 
2285:../user/source/DLT645.c **** /********************************************************************
2286:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä½ûÄÜ/Ê¹ÄÜ
2287:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2288:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
2289:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2290:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2291:../user/source/DLT645.c ****  **********************************************************************/
2292:../user/source/DLT645.c **** void vEnergy_Modify_AbleSet(uint8_t *pucBuffer)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 75


2293:../user/source/DLT645.c **** {
2294:../user/source/DLT645.c ****     uint16_t i;
2295:../user/source/DLT645.c ****     if (pucBuffer[14] == 0xFF) //Ê¹ÄÜ
2296:../user/source/DLT645.c ****     {
2297:../user/source/DLT645.c ****         Dayfrozen_Change_State = pucBuffer[14];
2298:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZENCHANGESTATE_ADDR, Dayfrozen_Change_State);
2299:../user/source/DLT645.c ****         pucBuffer[8] = (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == Dayfrozen_Change_State
2300:../user/source/DLT645.c ****                             ? 0x94
2301:../user/source/DLT645.c ****                             : 0xD4);
2302:../user/source/DLT645.c ****     }
2303:../user/source/DLT645.c ****     else if (pucBuffer[14] == 0x00) //½û£ºÄÜ
2304:../user/source/DLT645.c ****     {
2305:../user/source/DLT645.c ****         /*Çå¿Õ´æ´¢µÄµçÁ¿Öµ*/
2306:../user/source/DLT645.c ****         FLASH_Unlock();
2307:../user/source/DLT645.c ****         FLASH_ErasePage(FLASH_ENERGY_PAGE);
2308:../user/source/DLT645.c ****         FLASH_Lock();
2309:../user/source/DLT645.c ****         Dayfrozen_Change_State = pucBuffer[14];
2310:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZENCHANGESTATE_ADDR, Dayfrozen_Change_State);
2311:../user/source/DLT645.c ****         pucBuffer[8] = (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == Dayfrozen_Change_State
2312:../user/source/DLT645.c ****                             ? 0x94
2313:../user/source/DLT645.c ****                             : 0xD4);
2314:../user/source/DLT645.c ****     }
2315:../user/source/DLT645.c ****     else
2316:../user/source/DLT645.c ****     {
2317:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
2318:../user/source/DLT645.c ****     }
2319:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
2320:../user/source/DLT645.c ****     pucBuffer[10] = 0;
2321:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
2322:../user/source/DLT645.c ****     {
2323:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
2324:../user/source/DLT645.c ****     }
2325:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
2326:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2327:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
2328:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
2329:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
2330:../user/source/DLT645.c ****     {
2331:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2332:../user/source/DLT645.c ****     }
2333:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
2334:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
2335:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
2336:../user/source/DLT645.c ****     {
2337:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2338:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2339:../user/source/DLT645.c ****     }
2340:../user/source/DLT645.c **** }
2341:../user/source/DLT645.c **** 
2342:../user/source/DLT645.c **** /********************************************************************
2343:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÕıÏòÓĞ¹¦µçÄÜÁ¿ĞŞ¸Ä±ÈÀıÉèÖÃ
2344:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2345:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2346:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2347:../user/source/DLT645.c ****  * ĞŞ¸Ä¼ÇÂ¼£ºĞŞ¸Ä±ÈÀı¸ÄÎªÓÃÁ½¸ö×Ö½Ú±íÊ¾£¬BCDÂë£¬µÍ×Ö½ÚÔÚÇ°£¬¸ß×Ö½ÚÔÚºó
2348:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2349:../user/source/DLT645.c ****  **********************************************************************/
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 76


2350:../user/source/DLT645.c **** void vEnergy_Modify_RaitoSet(uint8_t *pucBuffer)
2351:../user/source/DLT645.c **** {
2352:../user/source/DLT645.c ****     uint8_t ratio;
2353:../user/source/DLT645.c ****     bool ratioValid;
2354:../user/source/DLT645.c ****     uint16_t i;
2355:../user/source/DLT645.c **** 
2356:../user/source/DLT645.c ****     /*ratio = BCD2DEC(pucBuffer[14]);*/
2357:../user/source/DLT645.c ****     //68 AA AA AA AA AA AA 68 91 05 33 74 34 33 20 01 00 16  120%
2358:../user/source/DLT645.c ****     ratio = BCD2DEC(pucBuffer[14]) + BCD2DEC(pucBuffer[15]) * 100;
2359:../user/source/DLT645.c ****     ratioValid = (ratio > 0 && ratio <= 255);
2360:../user/source/DLT645.c ****     if (ratioValid)
2361:../user/source/DLT645.c ****     {
2362:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR, ratio);
2363:../user/source/DLT645.c ****         ucDayfrozen_Modify_Ratio = ratio;
2364:../user/source/DLT645.c ****         if (EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR) == ratio)
2365:../user/source/DLT645.c ****         {
2366:../user/source/DLT645.c ****             pucBuffer[8] = 0x94;
2367:../user/source/DLT645.c ****         }
2368:../user/source/DLT645.c ****         else
2369:../user/source/DLT645.c ****         {
2370:../user/source/DLT645.c ****             pucBuffer[8] = 0xD4;
2371:../user/source/DLT645.c ****         }
2372:../user/source/DLT645.c ****     }
2373:../user/source/DLT645.c ****     else
2374:../user/source/DLT645.c ****     {
2375:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
2376:../user/source/DLT645.c ****     }
2377:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
2378:../user/source/DLT645.c ****     pucBuffer[10] = 0;
2379:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
2380:../user/source/DLT645.c ****     {
2381:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
2382:../user/source/DLT645.c ****     }
2383:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
2384:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2385:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
2386:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
2387:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
2388:../user/source/DLT645.c ****     {
2389:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2390:../user/source/DLT645.c ****     }
2391:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
2392:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
2393:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
2394:../user/source/DLT645.c ****     {
2395:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2396:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2397:../user/source/DLT645.c ****     }
2398:../user/source/DLT645.c **** }
2399:../user/source/DLT645.c **** 
2400:../user/source/DLT645.c **** /********************************************************************
2401:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÕıÏòÓĞ¹¦µçÄÜÁ¿»Ö¸´³ö³§ÉèÖÃ
2402:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2403:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2404:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2405:../user/source/DLT645.c ****  * ĞŞ¸Ä¼ÇÂ¼£º³ÌĞòĞèÖ§³ÖµçÄÜÁ¿µ÷¸ß£¬ËùÒÔ¸´Î»Ê±ÈÕ¶³½áĞŞ¸Ä±ÈÀı£¬²»ÔÙ¸´Î»:2018Äê11ÔÂ5ÈÕ16:11:34
2406:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 77


2407:../user/source/DLT645.c ****  **********************************************************************/
2408:../user/source/DLT645.c **** void vEnergy_Modify_Reset(uint8_t *pucBuffer)
2409:../user/source/DLT645.c **** {
2410:../user/source/DLT645.c ****     bool cmdValid;
2411:../user/source/DLT645.c ****     uint16_t i;
2412:../user/source/DLT645.c **** 
2413:../user/source/DLT645.c ****     cmdValid = (pucBuffer[14] == 0x00);
2414:../user/source/DLT645.c ****     if (cmdValid)
2415:../user/source/DLT645.c ****     {
2416:../user/source/DLT645.c ****         /*µçÄÜĞŞ¸ÄÊ¹ÄÜ*/
2417:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZENCHANGESTATE_ADDR, 0xff);
2418:../user/source/DLT645.c ****         Dayfrozen_Change_State = 0xff;
2419:../user/source/DLT645.c ****         /*ÈÕ¶³½áĞŞ¸Ä±ÈÀıÉèÖÃÎª90*/
2420:../user/source/DLT645.c ****         /*Flash_Write_Word(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR, 90);*/
2421:../user/source/DLT645.c ****         /*ucDayfrozen_Modify_Ratio = 90;*/
2422:../user/source/DLT645.c ****         /*É¾³ı´æ´¢µÄÔ­Ê¼ºÍĞŞ¸ÄºóµÄµçÁ¿Öµ£¨²Á³ı´æ´¢Ò³£©*/
2423:../user/source/DLT645.c ****         FLASH_Unlock();
2424:../user/source/DLT645.c ****         FLASH_ErasePage(FLASH_ENERGY_PAGE);
2425:../user/source/DLT645.c ****         FLASH_Lock();
2426:../user/source/DLT645.c ****         if ( //(EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR) == 90) &&
2427:../user/source/DLT645.c ****             (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == 0xff))
2428:../user/source/DLT645.c ****         {
2429:../user/source/DLT645.c ****             pucBuffer[8] = 0x94;
2430:../user/source/DLT645.c ****         }
2431:../user/source/DLT645.c ****         else
2432:../user/source/DLT645.c ****         {
2433:../user/source/DLT645.c ****             pucBuffer[8] = 0xD4;
2434:../user/source/DLT645.c ****         }
2435:../user/source/DLT645.c ****     }
2436:../user/source/DLT645.c ****     else
2437:../user/source/DLT645.c ****     {
2438:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
2439:../user/source/DLT645.c ****     }
2440:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
2441:../user/source/DLT645.c ****     pucBuffer[10] = 0;
2442:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
2443:../user/source/DLT645.c ****     {
2444:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
2445:../user/source/DLT645.c ****     }
2446:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
2447:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2448:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
2449:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
2450:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
2451:../user/source/DLT645.c ****     {
2452:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2453:../user/source/DLT645.c ****     }
2454:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
2455:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
2456:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
2457:../user/source/DLT645.c ****     {
2458:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2459:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2460:../user/source/DLT645.c ****     }
2461:../user/source/DLT645.c **** }
2462:../user/source/DLT645.c **** #if 1
2463:../user/source/DLT645.c **** /********************************************************************
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 78


2464:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºÕıÏòÓĞ¹¦µçÄÜÁ¿²éÑ¯ĞŞ¸Ä±ÈÀı
2465:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2466:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2467:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2468:../user/source/DLT645.c ****  * ĞŞ¸Ä¼ÇÂ¼£º
2469:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018-11-5 16:12:03
2470:../user/source/DLT645.c ****  **********************************************************************/
2471:../user/source/DLT645.c **** void vEnergy_Modify_ReadSet(uint8_t *pucbuffer)
2472:../user/source/DLT645.c **** {
2473:../user/source/DLT645.c ****     //68 AA AA AA AA AA AA 68 91 04 33 76 34 33 71 16
2474:../user/source/DLT645.c ****     uint8_t ratio;
2475:../user/source/DLT645.c ****     uint32_t i;
2476:../user/source/DLT645.c ****     if (pucbuffer[8] != 0x91)
2477:../user/source/DLT645.c ****         return;
2478:../user/source/DLT645.c ****     //pucbuffer[8] = 0x11;
2479:../user/source/DLT645.c ****     pucbuffer[9] = 0x06;
2480:../user/source/DLT645.c ****     //ratio = EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR);
2481:../user/source/DLT645.c ****     ratio = ucDayfrozen_Modify_Ratio;
2482:../user/source/DLT645.c **** 
2483:../user/source/DLT645.c ****     pucbuffer[14] = DEC2BCD(ratio % 100); //µÍÎ»ÔÚÇ°
2484:../user/source/DLT645.c ****     pucbuffer[15] = DEC2BCD(ratio / 100); //¸ßÎ»ÔÚºó
2485:../user/source/DLT645.c ****     pucbuffer[16] = 0;
2486:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
2487:../user/source/DLT645.c ****     {
2488:../user/source/DLT645.c ****         pucbuffer[16] += pucbuffer[i];
2489:../user/source/DLT645.c ****     }
2490:../user/source/DLT645.c ****     pucbuffer[17] = 0x16;
2491:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2492:../user/source/DLT645.c ****     uc645DataDomainLength = 4;
2493:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, pUartDB->pSndbuf, 18);
2494:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
2495:../user/source/DLT645.c ****     {
2496:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2497:../user/source/DLT645.c ****     }
2498:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
2499:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, pUartIR->pSndbuf, 18);
2500:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
2501:../user/source/DLT645.c ****     {
2502:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2503:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2504:../user/source/DLT645.c ****     }
2505:../user/source/DLT645.c **** }
2506:../user/source/DLT645.c **** #endif
2507:../user/source/DLT645.c **** /********************************************************************
2508:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º²éÑ¯ÈÕ¶³½áÕıÏòÓĞ¹¦×Üµ±Ç°ÕæÊµÖµºÍĞŞ¸ÄÖµ
2509:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2510:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2511:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2512:../user/source/DLT645.c ****  * ĞŞ¸Ä¼ÇÂ¼£º
2513:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018-11-5 16:12:03
2514:../user/source/DLT645.c ****  **********************************************************************/
2515:../user/source/DLT645.c **** void vEnergy_Modify_ReadValue(uint8_t *pucbuffer)
2516:../user/source/DLT645.c **** {
2517:../user/source/DLT645.c ****     uint8_t i;
2518:../user/source/DLT645.c ****     int dayFrozen;
2519:../user/source/DLT645.c ****     uint32_t realValue;
2520:../user/source/DLT645.c ****     uint32_t modifiedValue;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 79


2521:../user/source/DLT645.c **** 
2522:../user/source/DLT645.c ****     pucbuffer[8] = 0x91;
2523:../user/source/DLT645.c ****     pucbuffer[9] = 0x0C;
2524:../user/source/DLT645.c **** 
2525:../user/source/DLT645.c ****     /*¶ÁÈ¡´æ´¢µÄÉÏ´ÎÕæÊµÖµºÍĞŞ¸ÄÖµ*/
2526:../user/source/DLT645.c ****     realValue = Flash_Read_Word(FLASH_REAL_1DAYFROZEN_ADDR);
2527:../user/source/DLT645.c ****     modifiedValue = Flash_Read_Word(FLASH_MODIFIED_1DAYFROZEN_ADDR);
2528:../user/source/DLT645.c ****     /*ÖÕ¶ËµÚÒ»´ÎÊ¹ÓÃ*/
2529:../user/source/DLT645.c ****     if (realValue == 0XFFFFFFFF)
2530:../user/source/DLT645.c ****     {
2531:../user/source/DLT645.c ****         realValue = 0;
2532:../user/source/DLT645.c ****     }
2533:../user/source/DLT645.c ****     Fill_Energy(realValue, &pucbuffer[14], &pucbuffer[15], &pucbuffer[16], &pucbuffer[17]);
2534:../user/source/DLT645.c ****     if (modifiedValue == 0XFFFFFFFF)
2535:../user/source/DLT645.c ****     {
2536:../user/source/DLT645.c ****         modifiedValue = 0;
2537:../user/source/DLT645.c ****     }
2538:../user/source/DLT645.c ****     Fill_Energy(modifiedValue, &pucbuffer[18], &pucbuffer[19], &pucbuffer[20], &pucbuffer[21]);
2539:../user/source/DLT645.c ****     pucbuffer[22] = 0;
2540:../user/source/DLT645.c ****     for (i = 0; i < 22; i++)
2541:../user/source/DLT645.c ****     {
2542:../user/source/DLT645.c ****         pucbuffer[22] += pucbuffer[i];
2543:../user/source/DLT645.c ****     }
2544:../user/source/DLT645.c ****     pucbuffer[23] = 0x16;
2545:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2546:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
2547:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, pUartDB->pSndbuf, 24);
2548:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
2549:../user/source/DLT645.c ****     {
2550:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2551:../user/source/DLT645.c ****     }
2552:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
2553:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, pUartIR->pSndbuf, 24);
2554:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
2555:../user/source/DLT645.c ****     {
2556:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2557:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2558:../user/source/DLT645.c ****     }
2559:../user/source/DLT645.c **** }
2560:../user/source/DLT645.c **** 
2561:../user/source/DLT645.c **** /********************************************************************
2562:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ºÏ¸ñÉÏÏŞĞŞ¸Äº¯Êı£¨ºìÍâ¿ÚÊÕÖ¡´¦Àí£©
2563:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2564:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2565:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2566:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2567:../user/source/DLT645.c ****  **********************************************************************/
2568:../user/source/DLT645.c **** void vVoltage_SetMaxValue(uint8_t *pucBuffer)
2569:../user/source/DLT645.c **** {
2570:../user/source/DLT645.c ****     int VMAX = 0;
2571:../user/source/DLT645.c ****     uint16_t i = 0;
2572:../user/source/DLT645.c ****     VMAX = Get_Voltage(pucBuffer[14], pucBuffer[15]);
2573:../user/source/DLT645.c ****     if (VMAX > 2200)
2574:../user/source/DLT645.c ****     {
2575:../user/source/DLT645.c ****         Voltage_MAX = VMAX;
2576:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX1_Addr, pucBuffer[14]);
2577:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX2_Addr, pucBuffer[15]);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 80


2578:../user/source/DLT645.c ****         if (((uint8_t)Flash_Read_Word(FLASH_VMAX1_Addr) == pucBuffer[14]) &&
2579:../user/source/DLT645.c ****             ((uint8_t)Flash_Read_Word(FLASH_VMAX2_Addr) == pucBuffer[15]))
2580:../user/source/DLT645.c ****         {
2581:../user/source/DLT645.c ****             pucBuffer[8] = 0x94; //ÉèÖÃ³É¹¦±êÖ¾
2582:../user/source/DLT645.c ****         }
2583:../user/source/DLT645.c ****         else
2584:../user/source/DLT645.c ****         {
2585:../user/source/DLT645.c ****             pucBuffer[8] = 0xD4;
2586:../user/source/DLT645.c ****         }
2587:../user/source/DLT645.c ****     }
2588:../user/source/DLT645.c ****     else
2589:../user/source/DLT645.c ****     {
2590:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
2591:../user/source/DLT645.c ****     }
2592:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
2593:../user/source/DLT645.c ****     pucBuffer[10] = 0;
2594:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
2595:../user/source/DLT645.c ****     {
2596:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
2597:../user/source/DLT645.c ****     }
2598:../user/source/DLT645.c ****     pucBuffer[11] = 0x16; //½áÊø·û
2599:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
2600:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
2601:../user/source/DLT645.c ****     {
2602:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2603:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2604:../user/source/DLT645.c ****     }
2605:../user/source/DLT645.c **** }
2606:../user/source/DLT645.c **** /********************************************************************
2607:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ºÏ¸ñÏÂÏŞĞŞ¸Äº¯Êı£¨ºìÍâ¿ÚÊÕÖ¡´¦Àí£º£©
2608:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2609:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2610:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2611:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2612:../user/source/DLT645.c ****  **********************************************************************/
2613:../user/source/DLT645.c **** void vVoltage_SetMinValue(uint8_t *pucBuffer)
2614:../user/source/DLT645.c **** {
2615:../user/source/DLT645.c ****     int VMIN = 0;
2616:../user/source/DLT645.c ****     uint16_t i = 0;
2617:../user/source/DLT645.c ****     VMIN = Get_Voltage(pucBuffer[14], pucBuffer[15]);
2618:../user/source/DLT645.c ****     if (VMIN < 2200)
2619:../user/source/DLT645.c ****     {
2620:../user/source/DLT645.c ****         Voltage_MIN = VMIN;
2621:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN1_Addr, pucBuffer[14]);
2622:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN2_Addr, pucBuffer[15]);
2623:../user/source/DLT645.c ****         if ((EEProm_Read(FLASH_VMIN1_Addr) == pucBuffer[14]) &&
2624:../user/source/DLT645.c ****             (EEProm_Read(FLASH_VMIN2_Addr) == pucBuffer[15]))
2625:../user/source/DLT645.c ****         {
2626:../user/source/DLT645.c ****             pucBuffer[8] = 0x94; //ÉèÖÃ³É¹¦±êÖ¾
2627:../user/source/DLT645.c ****         }
2628:../user/source/DLT645.c ****         else
2629:../user/source/DLT645.c ****         {
2630:../user/source/DLT645.c ****             pucBuffer[8] = 0xD4;
2631:../user/source/DLT645.c ****         }
2632:../user/source/DLT645.c ****     }
2633:../user/source/DLT645.c ****     else
2634:../user/source/DLT645.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 81


2635:../user/source/DLT645.c ****         pucBuffer[8] = 0xD4;
2636:../user/source/DLT645.c ****     }
2637:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
2638:../user/source/DLT645.c ****     pucBuffer[10] = 0;
2639:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
2640:../user/source/DLT645.c ****     {
2641:../user/source/DLT645.c ****         pucBuffer[10] += pucBuffer[i];
2642:../user/source/DLT645.c ****     }
2643:../user/source/DLT645.c ****     pucBuffer[11] = 0x16;
2644:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
2645:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
2646:../user/source/DLT645.c ****     {
2647:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2648:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2649:../user/source/DLT645.c ****     }
2650:../user/source/DLT645.c **** }
2651:../user/source/DLT645.c **** 
2652:../user/source/DLT645.c **** /********************************************************************
2653:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ĞŞ¸ÄÉÏÏŞĞŞ¸Äº¯Êı£¨ºìÍâ¿ÚÊÕÖ¡´¦Àí£º£©
2654:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2655:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2656:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2657:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2658:../user/source/DLT645.c ****  **********************************************************************/
2659:../user/source/DLT645.c **** void vVoltage_SetMaxMaxValue(uint8_t *pucBuffer)
2660:../user/source/DLT645.c **** {
 1858              		.loc 1 2660 0
 1859              		.cfi_startproc
 1860              		@ args = 0, pretend = 0, frame = 0
 1861              		@ frame_needed = 0, uses_anonymous_args = 0
 1862              		@ link register save eliminated.
 1863              	.LVL224:
 1864 0000 7047     		bx	lr
 1865              		.cfi_endproc
 1866              	.LFE159:
 1868 0002 00BF     		.section	.text.vVoltage_SetMinMinValue,"ax",%progbits
 1869              		.align	2
 1870              		.global	vVoltage_SetMinMinValue
 1871              		.thumb
 1872              		.thumb_func
 1874              	vVoltage_SetMinMinValue:
 1875              	.LFB160:
2661:../user/source/DLT645.c **** }
2662:../user/source/DLT645.c **** /********************************************************************
2663:../user/source/DLT645.c ****  * ¹¦    ÄÜ£ºµçÑ¹ĞŞ¸ÄÏÂÏŞĞŞ¸Äº¯Êı£¨ºìÍâ¿ÚÊÕÖ¡´¦Àí£º£©
2664:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2665:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2666:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2667:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2668:../user/source/DLT645.c ****  **********************************************************************/
2669:../user/source/DLT645.c **** void vVoltage_SetMinMinValue(uint8_t *pucBuffer)
2670:../user/source/DLT645.c **** {
 1876              		.loc 1 2670 0
 1877              		.cfi_startproc
 1878              		@ args = 0, pretend = 0, frame = 0
 1879              		@ frame_needed = 0, uses_anonymous_args = 0
 1880              		@ link register save eliminated.
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 82


 1881              	.LVL225:
 1882 0000 7047     		bx	lr
 1883              		.cfi_endproc
 1884              	.LFE160:
 1886 0002 00BF     		.section	.text.vLoadProfile_Voltage_Modify,"ax",%progbits
 1887              		.align	2
 1888              		.global	vLoadProfile_Voltage_Modify
 1889              		.thumb
 1890              		.thumb_func
 1892              	vLoadProfile_Voltage_Modify:
 1893              	.LFB161:
2671:../user/source/DLT645.c **** }
2672:../user/source/DLT645.c **** #if 0
2673:../user/source/DLT645.c **** /********************************************************************
2674:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º¶ÁÈ¡µçÁ¿ĞŞ¸Ä²ÎÊı£ºÊÇ·ñĞŞ¸Ä/ĞŞ¸Ä±ÈÀı
2675:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2676:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2677:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2678:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018.5.6
2679:../user/source/DLT645.c ****  **********************************************************************/
2680:../user/source/DLT645.c **** void vEnergy_Modify_ReadSet(uint8_t *pucBuffer)
2681:../user/source/DLT645.c **** {
2682:../user/source/DLT645.c ****     uint16_t i;
2683:../user/source/DLT645.c ****     uint8_t tRatio;
2684:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
2685:../user/source/DLT645.c ****     pucBuffer[9] = 0x06;
2686:../user/source/DLT645.c ****     pucBuffer[14] = (uint8_t)Flash_Read_Word(FLASH_DAYFROZENCHANGESTATE_ADDR);
2687:../user/source/DLT645.c ****     tRatio = (uint8_t)Flash_Read_Word(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR);
2688:../user/source/DLT645.c ****     pucBuffer[15] = DEC2BCD(tRatio);
2689:../user/source/DLT645.c ****     pucBuffer[16] = 0;
2690:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
2691:../user/source/DLT645.c ****     {
2692:../user/source/DLT645.c ****         pucBuffer[16] += pucBuffer[i];
2693:../user/source/DLT645.c ****     }
2694:../user/source/DLT645.c ****     pucBuffer[17] = 0x16;
2695:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
2696:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
2697:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 18);
2698:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
2699:../user/source/DLT645.c ****     {
2700:../user/source/DLT645.c ****         Uart_DataPut(USART3);
2701:../user/source/DLT645.c ****     }
2702:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
2703:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 18);
2704:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
2705:../user/source/DLT645.c ****     {
2706:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
2707:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
2708:../user/source/DLT645.c ****     }
2709:../user/source/DLT645.c **** }
2710:../user/source/DLT645.c **** #endif
2711:../user/source/DLT645.c **** 
2712:../user/source/DLT645.c **** /********************************************************************
2713:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º¸ººÉ¼ÇÂ¼Á¬Ğø³­¶ÁµçÑ¹Êı¾İĞŞ¸Äº¯Êı
2714:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2715:../user/source/DLT645.c ****  * Êä    ³ö£ºnone
2716:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 83


2717:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ7ÈÕ21:08:05
2718:../user/source/DLT645.c ****  * µÚÒ»Ö¡£º68 AA AA AA AA AA AA 68 91 0X 32 34 43 39 mm hh DD MM YY 11 11 11 11 11 11 22 22 22 22 2
2719:../user/source/DLT645.c ****  *                                 B1
2720:../user/source/DLT645.c ****  * ºóĞøÖ¡£º68 AA AA AA AA AA AA 68 92 0X 32 34 43 39 11 11 11 11 22 22 22 22 33 33 33 33 44 44 44 4
2721:../user/source/DLT645.c ****  *                                 B2 04             cs 16
2722:../user/source/DLT645.c ****  **********************************************************************/
2723:../user/source/DLT645.c **** void vLoadProfile_Voltage_Modify(uint8_t *pucbuffer)
2724:../user/source/DLT645.c **** {
 1894              		.loc 1 2724 0
 1895              		.cfi_startproc
 1896              		@ args = 0, pretend = 0, frame = 0
 1897              		@ frame_needed = 0, uses_anonymous_args = 0
 1898              	.LVL226:
 1899              		.loc 1 2724 0
 1900 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1901              	.LCFI20:
 1902              		.cfi_def_cfa_offset 40
 1903              		.cfi_offset 3, -40
 1904              		.cfi_offset 4, -36
 1905              		.cfi_offset 5, -32
 1906              		.cfi_offset 6, -28
 1907              		.cfi_offset 7, -24
 1908              		.cfi_offset 8, -20
 1909              		.cfi_offset 9, -16
 1910              		.cfi_offset 10, -12
 1911              		.cfi_offset 11, -8
 1912              		.cfi_offset 14, -4
 1913 0004 0646     		mov	r6, r0
 1914              	.LVL227:
2725:../user/source/DLT645.c ****     uint16_t n = 0; //Êı¾İ¿é¸öÊı
2726:../user/source/DLT645.c ****     uint16_t length = pucbuffer[9];
 1915              		.loc 1 2726 0
 1916 0006 90F80980 		ldrb	r8, [r0, #9]	@ zero_extendqisi2
 1917              	.LVL228:
2727:../user/source/DLT645.c ****     uint16_t ID_length = 0; //Êı¾İÓòÖĞÊı¾İ±êÊ¶³¤¶È
2728:../user/source/DLT645.c ****     uint32_t voltage = 0;
2729:../user/source/DLT645.c ****     uint16_t i = 0;
2730:../user/source/DLT645.c **** 
2731:../user/source/DLT645.c ****     if (pucbuffer[8] == 0x91 || pucbuffer[8] == 0xB1) //ÎŞºóĞøÖ¡£¬»ò·ÖÖ¡µÄµÚÒ»Ö¡
 1918              		.loc 1 2731 0
 1919 000a 027A     		ldrb	r2, [r0, #8]	@ zero_extendqisi2
 1920 000c 912A     		cmp	r2, #145
 1921 000e 03D0     		beq	.L122
 1922              		.loc 1 2731 0 is_stmt 0 discriminator 1
 1923 0010 B12A     		cmp	r2, #177
 1924 0012 03D0     		beq	.L123
2727:../user/source/DLT645.c ****     uint16_t ID_length = 0; //Êı¾İÓòÖĞÊı¾İ±êÊ¶³¤¶È
 1925              		.loc 1 2727 0 is_stmt 1
 1926 0014 0023     		movs	r3, #0
 1927 0016 02E0     		b	.L116
 1928              	.L122:
2732:../user/source/DLT645.c ****     {
2733:../user/source/DLT645.c ****         ID_length = 9; //Êı¾İ±êÊ¶*4 + Ê±±ê*5
 1929              		.loc 1 2733 0
 1930 0018 0923     		movs	r3, #9
 1931 001a 00E0     		b	.L116
 1932              	.L123:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 84


 1933 001c 0923     		movs	r3, #9
 1934              	.L116:
 1935              	.LVL229:
2734:../user/source/DLT645.c ****     }
2735:../user/source/DLT645.c ****     if (pucbuffer[8] == 0x92 || pucbuffer[8] == 0xB2)
 1936              		.loc 1 2735 0
 1937 001e 922A     		cmp	r2, #146
 1938 0020 02D0     		beq	.L124
 1939              		.loc 1 2735 0 is_stmt 0 discriminator 1
 1940 0022 B22A     		cmp	r2, #178
 1941 0024 03D1     		bne	.L117
 1942 0026 01E0     		b	.L125
 1943              	.L124:
2736:../user/source/DLT645.c ****     {
2737:../user/source/DLT645.c ****         ID_length = 4; //Êı¾İ±êÊ¶*4 £¬ºöÂÔºóÃæµÄSEQ*1£¬Ô­ÒòÎªÕû³ı2ºó½á¹ûÒ»Ñù
 1944              		.loc 1 2737 0 is_stmt 1
 1945 0028 0423     		movs	r3, #4
 1946              	.LVL230:
 1947 002a 00E0     		b	.L117
 1948              	.LVL231:
 1949              	.L125:
 1950 002c 0423     		movs	r3, #4
 1951              	.LVL232:
 1952              	.L117:
2738:../user/source/DLT645.c ****     }
2739:../user/source/DLT645.c ****     n = (length - ID_length) / 2; //µçÑ¹Êı¾İµÄ¸öÊı£¬·ÖÏàºÍ¿éÊı¾İ¶¼ÊÊÓÃ
 1953              		.loc 1 2739 0
 1954 002e 4746     		mov	r7, r8
 1955 0030 9946     		mov	r9, r3
 1956 0032 C3EB0803 		rsb	r3, r3, r8
 1957              	.LVL233:
 1958 0036 03EBD373 		add	r3, r3, r3, lsr #31
 1959 003a C3F34F03 		ubfx	r3, r3, #1, #16
 1960              	.LVL234:
2740:../user/source/DLT645.c ****     while (n--)
 1961              		.loc 1 2740 0
 1962 003e 15E0     		b	.L118
 1963              	.LVL235:
 1964              	.L119:
2741:../user/source/DLT645.c ****     {
2742:../user/source/DLT645.c ****         voltage = Get_Voltage(pucbuffer[10 + ID_length + 2 * n], pucbuffer[11 + ID_length + 2 * n])
 1965              		.loc 1 2742 0
 1966 0040 09F10A04 		add	r4, r9, #10
 1967 0044 4FEA450A 		lsl	r10, r5, #1
 1968 0048 5444     		add	r4, r4, r10
 1969 004a 09F10B03 		add	r3, r9, #11
 1970 004e 9A44     		add	r10, r10, r3
2743:../user/source/DLT645.c ****         voltage = Voltage_Modifier_Method(voltage);
2744:../user/source/DLT645.c ****         pucbuffer[10 + ID_length + 2 * n] = GetLowByte(A_Voltage);
 1971              		.loc 1 2744 0
 1972 0050 DFF84CB0 		ldr	fp, .L127
 1973 0054 DBF80000 		ldr	r0, [fp]
 1974 0058 FFF7FEFF 		bl	GetLowByte
 1975              	.LVL236:
 1976 005c 3055     		strb	r0, [r6, r4]
2745:../user/source/DLT645.c ****         pucbuffer[11 + ID_length + 2 * n] = GetHighByte(A_Voltage);
 1977              		.loc 1 2745 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 85


 1978 005e DBF80000 		ldr	r0, [fp]
 1979 0062 FFF7FEFF 		bl	GetHighByte
 1980              	.LVL237:
 1981 0066 06F80A00 		strb	r0, [r6, r10]
2740:../user/source/DLT645.c ****     {
 1982              		.loc 1 2740 0
 1983 006a 2B46     		mov	r3, r5
 1984              	.LVL238:
 1985              	.L118:
 1986 006c 5D1E     		subs	r5, r3, #1
 1987 006e ADB2     		uxth	r5, r5
 1988              	.LVL239:
 1989 0070 002B     		cmp	r3, #0
 1990 0072 E5D1     		bne	.L119
2746:../user/source/DLT645.c ****     }
2747:../user/source/DLT645.c ****     pucbuffer[length + 10] = 0;
 1991              		.loc 1 2747 0
 1992 0074 08F10A02 		add	r2, r8, #10
 1993 0078 B118     		adds	r1, r6, r2
 1994 007a B354     		strb	r3, [r6, r2]
2748:../user/source/DLT645.c ****     for (i = 0; i < (length + 10); i++)
 1995              		.loc 1 2748 0
 1996 007c 05E0     		b	.L120
 1997              	.LVL240:
 1998              	.L121:
2749:../user/source/DLT645.c ****     {
2750:../user/source/DLT645.c ****         pucbuffer[length + 10] += pucbuffer[i];
 1999              		.loc 1 2750 0 discriminator 3
 2000 007e F05C     		ldrb	r0, [r6, r3]	@ zero_extendqisi2
 2001 0080 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2002 0082 0244     		add	r2, r2, r0
 2003 0084 0A70     		strb	r2, [r1]
2748:../user/source/DLT645.c ****     for (i = 0; i < (length + 10); i++)
 2004              		.loc 1 2748 0 discriminator 3
 2005 0086 0133     		adds	r3, r3, #1
 2006              	.LVL241:
 2007 0088 9BB2     		uxth	r3, r3
 2008              	.LVL242:
 2009              	.L120:
2748:../user/source/DLT645.c ****     for (i = 0; i < (length + 10); i++)
 2010              		.loc 1 2748 0 is_stmt 0 discriminator 1
 2011 008a 07F10A02 		add	r2, r7, #10
 2012 008e 9342     		cmp	r3, r2
 2013 0090 F5DB     		blt	.L121
2751:../user/source/DLT645.c ****     }
2752:../user/source/DLT645.c ****     pucbuffer[length + 11] = 16;
 2014              		.loc 1 2752 0 is_stmt 1
 2015 0092 08F10B08 		add	r8, r8, #11
 2016              	.LVL243:
 2017 0096 1023     		movs	r3, #16
 2018              	.LVL244:
 2019 0098 06F80830 		strb	r3, [r6, r8]
 2020 009c BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2021              	.LVL245:
 2022              	.L128:
 2023              		.align	2
 2024              	.L127:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 86


 2025 00a0 00000000 		.word	.LANCHOR4
 2026              		.cfi_endproc
 2027              	.LFE161:
 2029              		.section	.text.vLoadProfile_Current_Modify,"ax",%progbits
 2030              		.align	2
 2031              		.global	vLoadProfile_Current_Modify
 2032              		.thumb
 2033              		.thumb_func
 2035              	vLoadProfile_Current_Modify:
 2036              	.LFB162:
2753:../user/source/DLT645.c **** }
2754:../user/source/DLT645.c **** 
2755:../user/source/DLT645.c **** /********************************************************************
2756:../user/source/DLT645.c ****  * ¹¦    ÄÜ£º¸ººÉ¼ÇÂ¼Á¬Ğø³­¶ÁµçÁ÷Êı¾İĞŞ¸Äº¯Êı
2757:../user/source/DLT645.c ****  * Êä    Èë£ºÓ¦ÓÃ²ã»º´æÖ¸Õë
2758:../user/source/DLT645.c ****  * Êä    ³ö£º	none
2759:../user/source/DLT645.c ****  * ±à Ğ´ ÈË£ºÍõ¾ıÁú
2760:../user/source/DLT645.c ****  * ±àĞ´ÈÕÆÚ£º2018Äê8ÔÂ7ÈÕ21:08:05
2761:../user/source/DLT645.c ****  **********************************************************************/
2762:../user/source/DLT645.c **** void vLoadProfile_Current_Modify(uint8_t *pucbuffer)
2763:../user/source/DLT645.c **** {
 2037              		.loc 1 2763 0
 2038              		.cfi_startproc
 2039              		@ args = 0, pretend = 0, frame = 0
 2040              		@ frame_needed = 0, uses_anonymous_args = 0
 2041              		@ link register save eliminated.
 2042              	.LVL246:
 2043 0000 7047     		bx	lr
 2044              		.cfi_endproc
 2045              	.LFE162:
 2047 0002 00BF     		.section	.text.Get_VChange_State,"ax",%progbits
 2048              		.align	2
 2049              		.global	Get_VChange_State
 2050              		.thumb
 2051              		.thumb_func
 2053              	Get_VChange_State:
 2054              	.LFB115:
 391:../user/source/DLT645.c ****     uint8_t i;
 2055              		.loc 1 391 0
 2056              		.cfi_startproc
 2057              		@ args = 0, pretend = 0, frame = 0
 2058              		@ frame_needed = 0, uses_anonymous_args = 0
 2059              	.LVL247:
 391:../user/source/DLT645.c ****     uint8_t i;
 2060              		.loc 1 391 0
 2061 0000 38B5     		push	{r3, r4, r5, lr}
 2062              	.LCFI21:
 2063              		.cfi_def_cfa_offset 16
 2064              		.cfi_offset 3, -16
 2065              		.cfi_offset 4, -12
 2066              		.cfi_offset 5, -8
 2067              		.cfi_offset 14, -4
 2068 0002 0446     		mov	r4, r0
 393:../user/source/DLT645.c ****     {
 2069              		.loc 1 393 0
 2070 0004 837B     		ldrb	r3, [r0, #14]	@ zero_extendqisi2
 2071 0006 342B     		cmp	r3, #52
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 87


 2072 0008 02D1     		bne	.L131
 395:../user/source/DLT645.c ****     }
 2073              		.loc 1 395 0
 2074 000a 0021     		movs	r1, #0
 2075 000c 244A     		ldr	r2, .L140
 2076 000e 1170     		strb	r1, [r2]
 2077              	.L131:
 397:../user/source/DLT645.c ****     {
 2078              		.loc 1 397 0
 2079 0010 332B     		cmp	r3, #51
 2080 0012 02D1     		bne	.L132
 399:../user/source/DLT645.c ****     }
 2081              		.loc 1 399 0
 2082 0014 FF22     		movs	r2, #255
 2083 0016 224B     		ldr	r3, .L140
 2084 0018 1A70     		strb	r2, [r3]
 2085              	.L132:
 401:../user/source/DLT645.c ****     {
 2086              		.loc 1 401 0
 2087 001a 214B     		ldr	r3, .L140
 2088 001c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2089 001e 2148     		ldr	r0, .L140+4
 2090              	.LVL248:
 2091 0020 FFF7FEFF 		bl	Flash_Write_Word
 2092              	.LVL249:
 2093 0024 10B9     		cbnz	r0, .L133
 403:../user/source/DLT645.c ****     }
 2094              		.loc 1 403 0
 2095 0026 D423     		movs	r3, #212
 2096 0028 2372     		strb	r3, [r4, #8]
 2097 002a 01E0     		b	.L134
 2098              	.L133:
 406:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;
 2099              		.loc 1 406 0
 2100 002c 9423     		movs	r3, #148
 2101 002e 2372     		strb	r3, [r4, #8]
 2102              	.L134:
 407:../user/source/DLT645.c ****     pucBuffer[10] = 0x00;
 2103              		.loc 1 407 0
 2104 0030 0023     		movs	r3, #0
 2105 0032 6372     		strb	r3, [r4, #9]
 408:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 2106              		.loc 1 408 0
 2107 0034 A372     		strb	r3, [r4, #10]
 2108              	.LVL250:
 409:../user/source/DLT645.c ****     {
 2109              		.loc 1 409 0
 2110 0036 05E0     		b	.L135
 2111              	.LVL251:
 2112              	.L136:
 411:../user/source/DLT645.c ****     }
 2113              		.loc 1 411 0 discriminator 3
 2114 0038 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2115 003a A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 2116 003c 0A44     		add	r2, r2, r1
 2117 003e A272     		strb	r2, [r4, #10]
 409:../user/source/DLT645.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 88


 2118              		.loc 1 409 0 discriminator 3
 2119 0040 0133     		adds	r3, r3, #1
 2120              	.LVL252:
 2121 0042 DBB2     		uxtb	r3, r3
 2122              	.LVL253:
 2123              	.L135:
 409:../user/source/DLT645.c ****     {
 2124              		.loc 1 409 0 is_stmt 0 discriminator 1
 2125 0044 092B     		cmp	r3, #9
 2126 0046 F7D9     		bls	.L136
 413:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2127              		.loc 1 413 0 is_stmt 1
 2128 0048 1623     		movs	r3, #22
 2129              	.LVL254:
 2130 004a E372     		strb	r3, [r4, #11]
 415:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 2131              		.loc 1 415 0
 2132 004c 0022     		movs	r2, #0
 2133 004e 164B     		ldr	r3, .L140+8
 2134 0050 1A70     		strb	r2, [r3]
 416:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 2135              		.loc 1 416 0
 2136 0052 164D     		ldr	r5, .L140+12
 2137 0054 2B68     		ldr	r3, [r5]
 2138 0056 0C22     		movs	r2, #12
 2139 0058 9968     		ldr	r1, [r3, #8]
 2140 005a 2046     		mov	r0, r4
 2141 005c FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2142              	.LVL255:
 417:../user/source/DLT645.c ****     {
 2143              		.loc 1 417 0
 2144 0060 2B68     		ldr	r3, [r5]
 2145 0062 9868     		ldr	r0, [r3, #8]
 2146 0064 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2147              	.LVL256:
 2148 0068 10B9     		cbnz	r0, .L137
 419:../user/source/DLT645.c ****     }
 2149              		.loc 1 419 0
 2150 006a 1148     		ldr	r0, .L140+16
 2151 006c FFF7FEFF 		bl	Uart_DataPut
 2152              	.LVL257:
 2153              	.L137:
 421:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 2154              		.loc 1 421 0
 2155 0070 104D     		ldr	r5, .L140+20
 2156 0072 2B68     		ldr	r3, [r5]
 2157 0074 0C22     		movs	r2, #12
 2158 0076 9968     		ldr	r1, [r3, #8]
 2159 0078 2046     		mov	r0, r4
 2160 007a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2161              	.LVL258:
 422:../user/source/DLT645.c ****     {
 2162              		.loc 1 422 0
 2163 007e 2B68     		ldr	r3, [r5]
 2164 0080 9868     		ldr	r0, [r3, #8]
 2165 0082 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2166              	.LVL259:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 89


 2167 0086 50B9     		cbnz	r0, .L130
 424:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 2168              		.loc 1 424 0
 2169 0088 0B4C     		ldr	r4, .L140+24
 2170              	.LVL260:
 2171 008a 0022     		movs	r2, #0
 2172 008c 0B49     		ldr	r1, .L140+28
 2173 008e 2046     		mov	r0, r4
 2174 0090 FFF7FEFF 		bl	USART_ITConfig
 2175              	.LVL261:
 425:../user/source/DLT645.c ****     }
 2176              		.loc 1 425 0
 2177 0094 0122     		movs	r2, #1
 2178 0096 0A49     		ldr	r1, .L140+32
 2179 0098 2046     		mov	r0, r4
 2180 009a FFF7FEFF 		bl	USART_ITConfig
 2181              	.LVL262:
 2182              	.L130:
 2183 009e 38BD     		pop	{r3, r4, r5, pc}
 2184              	.L141:
 2185              		.align	2
 2186              	.L140:
 2187 00a0 00000000 		.word	.LANCHOR5
 2188 00a4 14EF0108 		.word	134344468
 2189 00a8 00000000 		.word	.LANCHOR0
 2190 00ac 00000000 		.word	.LANCHOR6
 2191 00b0 00480040 		.word	1073760256
 2192 00b4 00000000 		.word	.LANCHOR7
 2193 00b8 00440040 		.word	1073759232
 2194 00bc 05010500 		.word	327941
 2195 00c0 07010700 		.word	459015
 2196              		.cfi_endproc
 2197              	.LFE115:
 2199              		.section	.text.Set_Voltage_Limit,"ax",%progbits
 2200              		.align	2
 2201              		.global	Set_Voltage_Limit
 2202              		.thumb
 2203              		.thumb_func
 2205              	Set_Voltage_Limit:
 2206              	.LFB116:
 436:../user/source/DLT645.c ****     int VMAX = 0;
 2207              		.loc 1 436 0
 2208              		.cfi_startproc
 2209              		@ args = 0, pretend = 0, frame = 0
 2210              		@ frame_needed = 0, uses_anonymous_args = 0
 2211              	.LVL263:
 2212 0000 70B5     		push	{r4, r5, r6, lr}
 2213              	.LCFI22:
 2214              		.cfi_def_cfa_offset 16
 2215              		.cfi_offset 4, -16
 2216              		.cfi_offset 5, -12
 2217              		.cfi_offset 6, -8
 2218              		.cfi_offset 14, -4
 2219 0002 0446     		mov	r4, r0
 2220              	.LVL264:
 440:../user/source/DLT645.c ****     VMIN = Get_Voltage(pucBuffer[16], pucBuffer[17]);
 2221              		.loc 1 440 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 90


 2222 0004 867B     		ldrb	r6, [r0, #14]	@ zero_extendqisi2
 2223 0006 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 2224 0008 3046     		mov	r0, r6
 2225              	.LVL265:
 2226 000a FFF7FEFF 		bl	Get_Voltage
 2227              	.LVL266:
 2228 000e 0546     		mov	r5, r0
 2229              	.LVL267:
 441:../user/source/DLT645.c ****     if ((VMAX > VMIN) && (VMAX < Voltage_MAX_MAX) //µçÑ¹ÏŞÖµÉèÖÃÌõ¼ş£¬ÉÏÏŞ´óÓÚÏÂÏŞÇÒĞ¡ÓÚÉÏÉÏÏŞ
 2230              		.loc 1 441 0
 2231 0010 617C     		ldrb	r1, [r4, #17]	@ zero_extendqisi2
 2232 0012 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 2233              	.LVL268:
 2234 0014 FFF7FEFF 		bl	Get_Voltage
 2235              	.LVL269:
 442:../user/source/DLT645.c ****         && (VMIN > Voltage_MIN_MIN))              //µçÑ¹ÏÂÏŞ´óÓÚÏÂÏÂÏŞ
 2236              		.loc 1 442 0
 2237 0018 8542     		cmp	r5, r0
 2238 001a 1CDD     		ble	.L143
 442:../user/source/DLT645.c ****         && (VMIN > Voltage_MIN_MIN))              //µçÑ¹ÏÂÏŞ´óÓÚÏÂÏÂÏŞ
 2239              		.loc 1 442 0 is_stmt 0 discriminator 1
 2240 001c B5F52F6F 		cmp	r5, #2800
 2241 0020 19DA     		bge	.L143
 443:../user/source/DLT645.c ****     {
 2242              		.loc 1 443 0 is_stmt 1
 2243 0022 B0F5966F 		cmp	r0, #1200
 2244 0026 16DD     		ble	.L143
 445:../user/source/DLT645.c ****         Voltage_MIN = VMIN;
 2245              		.loc 1 445 0
 2246 0028 274B     		ldr	r3, .L150
 2247 002a 1D60     		str	r5, [r3]
 446:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX1_Addr, pucBuffer[14]);
 2248              		.loc 1 446 0
 2249 002c 274B     		ldr	r3, .L150+4
 2250 002e 1860     		str	r0, [r3]
 447:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX2_Addr, pucBuffer[15]);
 2251              		.loc 1 447 0
 2252 0030 3146     		mov	r1, r6
 2253 0032 2748     		ldr	r0, .L150+8
 2254              	.LVL270:
 2255 0034 FFF7FEFF 		bl	Flash_Write_Word
 2256              	.LVL271:
 448:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN1_Addr, pucBuffer[16]);
 2257              		.loc 1 448 0
 2258 0038 E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
 2259 003a 2648     		ldr	r0, .L150+12
 2260 003c FFF7FEFF 		bl	Flash_Write_Word
 2261              	.LVL272:
 449:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN2_Addr, pucBuffer[17]);
 2262              		.loc 1 449 0
 2263 0040 217C     		ldrb	r1, [r4, #16]	@ zero_extendqisi2
 2264 0042 2548     		ldr	r0, .L150+16
 2265 0044 FFF7FEFF 		bl	Flash_Write_Word
 2266              	.LVL273:
 450:../user/source/DLT645.c ****         pucBuffer[8] = 0x94; //ÉèÖÃ³É¹¦±êÖ¾
 2267              		.loc 1 450 0
 2268 0048 617C     		ldrb	r1, [r4, #17]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 91


 2269 004a 2448     		ldr	r0, .L150+20
 2270 004c FFF7FEFF 		bl	Flash_Write_Word
 2271              	.LVL274:
 451:../user/source/DLT645.c ****     }
 2272              		.loc 1 451 0
 2273 0050 9423     		movs	r3, #148
 2274 0052 2372     		strb	r3, [r4, #8]
 2275 0054 01E0     		b	.L144
 2276              	.LVL275:
 2277              	.L143:
 455:../user/source/DLT645.c ****     }
 2278              		.loc 1 455 0
 2279 0056 D423     		movs	r3, #212
 2280 0058 2372     		strb	r3, [r4, #8]
 2281              	.LVL276:
 2282              	.L144:
 457:../user/source/DLT645.c ****     pucBuffer[10] = 0x00; //ÇóÈ¡Ğ£ÑéºÍ
 2283              		.loc 1 457 0
 2284 005a 0023     		movs	r3, #0
 2285 005c 6372     		strb	r3, [r4, #9]
 458:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 2286              		.loc 1 458 0
 2287 005e A372     		strb	r3, [r4, #10]
 459:../user/source/DLT645.c ****     {
 2288              		.loc 1 459 0
 2289 0060 04E0     		b	.L145
 2290              	.LVL277:
 2291              	.L146:
 461:../user/source/DLT645.c ****     }
 2292              		.loc 1 461 0 discriminator 3
 2293 0062 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2294 0064 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 2295 0066 0A44     		add	r2, r2, r1
 2296 0068 A272     		strb	r2, [r4, #10]
 459:../user/source/DLT645.c ****     {
 2297              		.loc 1 459 0 discriminator 3
 2298 006a 0133     		adds	r3, r3, #1
 2299              	.LVL278:
 2300              	.L145:
 459:../user/source/DLT645.c ****     {
 2301              		.loc 1 459 0 is_stmt 0 discriminator 1
 2302 006c 092B     		cmp	r3, #9
 2303 006e F8DD     		ble	.L146
 463:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2304              		.loc 1 463 0 is_stmt 1
 2305 0070 1623     		movs	r3, #22
 2306              	.LVL279:
 2307 0072 E372     		strb	r3, [r4, #11]
 465:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 2308              		.loc 1 465 0
 2309 0074 0022     		movs	r2, #0
 2310 0076 1A4B     		ldr	r3, .L150+24
 2311 0078 1A70     		strb	r2, [r3]
 466:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 2312              		.loc 1 466 0
 2313 007a 1A4D     		ldr	r5, .L150+28
 2314              	.LVL280:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 92


 2315 007c 2B68     		ldr	r3, [r5]
 2316 007e 0C22     		movs	r2, #12
 2317 0080 9968     		ldr	r1, [r3, #8]
 2318 0082 2046     		mov	r0, r4
 2319 0084 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2320              	.LVL281:
 467:../user/source/DLT645.c ****     {
 2321              		.loc 1 467 0
 2322 0088 2B68     		ldr	r3, [r5]
 2323 008a 9868     		ldr	r0, [r3, #8]
 2324 008c FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2325              	.LVL282:
 2326 0090 10B9     		cbnz	r0, .L147
 469:../user/source/DLT645.c ****     }
 2327              		.loc 1 469 0
 2328 0092 1548     		ldr	r0, .L150+32
 2329 0094 FFF7FEFF 		bl	Uart_DataPut
 2330              	.LVL283:
 2331              	.L147:
 472:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 2332              		.loc 1 472 0
 2333 0098 144D     		ldr	r5, .L150+36
 2334 009a 2B68     		ldr	r3, [r5]
 2335 009c 0C22     		movs	r2, #12
 2336 009e 9968     		ldr	r1, [r3, #8]
 2337 00a0 2046     		mov	r0, r4
 2338 00a2 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2339              	.LVL284:
 473:../user/source/DLT645.c ****     {
 2340              		.loc 1 473 0
 2341 00a6 2B68     		ldr	r3, [r5]
 2342 00a8 9868     		ldr	r0, [r3, #8]
 2343 00aa FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2344              	.LVL285:
 2345 00ae 50B9     		cbnz	r0, .L142
 475:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 2346              		.loc 1 475 0
 2347 00b0 0F4C     		ldr	r4, .L150+40
 2348              	.LVL286:
 2349 00b2 0022     		movs	r2, #0
 2350 00b4 0F49     		ldr	r1, .L150+44
 2351 00b6 2046     		mov	r0, r4
 2352 00b8 FFF7FEFF 		bl	USART_ITConfig
 2353              	.LVL287:
 476:../user/source/DLT645.c ****     }
 2354              		.loc 1 476 0
 2355 00bc 0122     		movs	r2, #1
 2356 00be 0E49     		ldr	r1, .L150+48
 2357 00c0 2046     		mov	r0, r4
 2358 00c2 FFF7FEFF 		bl	USART_ITConfig
 2359              	.LVL288:
 2360              	.L142:
 2361 00c6 70BD     		pop	{r4, r5, r6, pc}
 2362              	.L151:
 2363              		.align	2
 2364              	.L150:
 2365 00c8 00000000 		.word	Voltage_MAX
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 93


 2366 00cc 00000000 		.word	Voltage_MIN
 2367 00d0 00EF0108 		.word	134344448
 2368 00d4 04EF0108 		.word	134344452
 2369 00d8 08EF0108 		.word	134344456
 2370 00dc 0CEF0108 		.word	134344460
 2371 00e0 00000000 		.word	.LANCHOR0
 2372 00e4 00000000 		.word	.LANCHOR6
 2373 00e8 00480040 		.word	1073760256
 2374 00ec 00000000 		.word	.LANCHOR7
 2375 00f0 00440040 		.word	1073759232
 2376 00f4 05010500 		.word	327941
 2377 00f8 07010700 		.word	459015
 2378              		.cfi_endproc
 2379              	.LFE116:
 2381              		.section	.text.Query_Voltage_Limit,"ax",%progbits
 2382              		.align	2
 2383              		.global	Query_Voltage_Limit
 2384              		.thumb
 2385              		.thumb_func
 2387              	Query_Voltage_Limit:
 2388              	.LFB117:
 488:../user/source/DLT645.c ****     int i = 0;
 2389              		.loc 1 488 0
 2390              		.cfi_startproc
 2391              		@ args = 0, pretend = 0, frame = 0
 2392              		@ frame_needed = 0, uses_anonymous_args = 0
 2393              	.LVL289:
 2394 0000 38B5     		push	{r3, r4, r5, lr}
 2395              	.LCFI23:
 2396              		.cfi_def_cfa_offset 16
 2397              		.cfi_offset 3, -16
 2398              		.cfi_offset 4, -12
 2399              		.cfi_offset 5, -8
 2400              		.cfi_offset 14, -4
 2401 0002 0446     		mov	r4, r0
 2402              	.LVL290:
 490:../user/source/DLT645.c ****     pucBuffer[9] = 0x0C;
 2403              		.loc 1 490 0
 2404 0004 9123     		movs	r3, #145
 2405 0006 0372     		strb	r3, [r0, #8]
 491:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(Voltage_MAX_MAX);
 2406              		.loc 1 491 0
 2407 0008 0C23     		movs	r3, #12
 2408 000a 4372     		strb	r3, [r0, #9]
 492:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(Voltage_MAX_MAX); //µçÑ¹ÉÏÉÏÏŞ
 2409              		.loc 1 492 0
 2410 000c 4FF42F60 		mov	r0, #2800
 2411              	.LVL291:
 2412 0010 FFF7FEFF 		bl	GetLowByte
 2413              	.LVL292:
 2414 0014 A073     		strb	r0, [r4, #14]
 493:../user/source/DLT645.c ****     pucBuffer[16] = GetLowByte(Voltage_MIN_MIN);
 2415              		.loc 1 493 0
 2416 0016 4FF42F60 		mov	r0, #2800
 2417 001a FFF7FEFF 		bl	GetHighByte
 2418              	.LVL293:
 2419 001e E073     		strb	r0, [r4, #15]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 94


 494:../user/source/DLT645.c ****     pucBuffer[17] = GetHighByte(Voltage_MIN_MIN); //µçÑ¹ÏÂÏÂÏŞ
 2420              		.loc 1 494 0
 2421 0020 4FF49660 		mov	r0, #1200
 2422 0024 FFF7FEFF 		bl	GetLowByte
 2423              	.LVL294:
 2424 0028 2074     		strb	r0, [r4, #16]
 495:../user/source/DLT645.c ****     pucBuffer[18] = GetLowByte(Voltage_MAX);
 2425              		.loc 1 495 0
 2426 002a 4FF49660 		mov	r0, #1200
 2427 002e FFF7FEFF 		bl	GetHighByte
 2428              	.LVL295:
 2429 0032 6074     		strb	r0, [r4, #17]
 496:../user/source/DLT645.c ****     pucBuffer[19] = GetHighByte(Voltage_MAX); //µçÑ¹ÉÏÏŞÖµ
 2430              		.loc 1 496 0
 2431 0034 244B     		ldr	r3, .L158
 2432 0036 1D68     		ldr	r5, [r3]
 2433 0038 2846     		mov	r0, r5
 2434 003a FFF7FEFF 		bl	GetLowByte
 2435              	.LVL296:
 2436 003e A074     		strb	r0, [r4, #18]
 497:../user/source/DLT645.c ****     pucBuffer[20] = GetLowByte(Voltage_MIN);
 2437              		.loc 1 497 0
 2438 0040 2846     		mov	r0, r5
 2439 0042 FFF7FEFF 		bl	GetHighByte
 2440              	.LVL297:
 2441 0046 E074     		strb	r0, [r4, #19]
 498:../user/source/DLT645.c ****     pucBuffer[21] = GetHighByte(Voltage_MIN); //µçÑ¹ÏÂÏŞÖµ
 2442              		.loc 1 498 0
 2443 0048 204B     		ldr	r3, .L158+4
 2444 004a 1D68     		ldr	r5, [r3]
 2445 004c 2846     		mov	r0, r5
 2446 004e FFF7FEFF 		bl	GetLowByte
 2447              	.LVL298:
 2448 0052 2075     		strb	r0, [r4, #20]
 499:../user/source/DLT645.c ****     pucBuffer[22] = 0x00;                     //ÇóÈ¡Ğ£ÑéºÍ
 2449              		.loc 1 499 0
 2450 0054 2846     		mov	r0, r5
 2451 0056 FFF7FEFF 		bl	GetHighByte
 2452              	.LVL299:
 2453 005a 6075     		strb	r0, [r4, #21]
 500:../user/source/DLT645.c ****     for (i = 0; i < 24 - 2; i++)              //±¨ÎÄ³¤¶È24
 2454              		.loc 1 500 0
 2455 005c 0023     		movs	r3, #0
 2456 005e A375     		strb	r3, [r4, #22]
 501:../user/source/DLT645.c ****     {
 2457              		.loc 1 501 0
 2458 0060 04E0     		b	.L153
 2459              	.LVL300:
 2460              	.L154:
 503:../user/source/DLT645.c ****     }
 2461              		.loc 1 503 0 discriminator 3
 2462 0062 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2463 0064 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
 2464 0066 0A44     		add	r2, r2, r1
 2465 0068 A275     		strb	r2, [r4, #22]
 501:../user/source/DLT645.c ****     {
 2466              		.loc 1 501 0 discriminator 3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 95


 2467 006a 0133     		adds	r3, r3, #1
 2468              	.LVL301:
 2469              	.L153:
 501:../user/source/DLT645.c ****     {
 2470              		.loc 1 501 0 is_stmt 0 discriminator 1
 2471 006c 152B     		cmp	r3, #21
 2472 006e F8DD     		ble	.L154
 505:../user/source/DLT645.c ****     uc645DataDomainLength = 12;
 2473              		.loc 1 505 0 is_stmt 1
 2474 0070 1623     		movs	r3, #22
 2475              	.LVL302:
 2476 0072 E375     		strb	r3, [r4, #23]
 506:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2477              		.loc 1 506 0
 2478 0074 0C22     		movs	r2, #12
 2479 0076 164B     		ldr	r3, .L158+8
 2480 0078 1A70     		strb	r2, [r3]
 508:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 2481              		.loc 1 508 0
 2482 007a 164D     		ldr	r5, .L158+12
 2483 007c 2B68     		ldr	r3, [r5]
 2484 007e 9968     		ldr	r1, [r3, #8]
 2485 0080 2046     		mov	r0, r4
 2486 0082 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2487              	.LVL303:
 509:../user/source/DLT645.c ****     {
 2488              		.loc 1 509 0
 2489 0086 2B68     		ldr	r3, [r5]
 2490 0088 9868     		ldr	r0, [r3, #8]
 2491 008a FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2492              	.LVL304:
 2493 008e 10B9     		cbnz	r0, .L155
 511:../user/source/DLT645.c ****     }
 2494              		.loc 1 511 0
 2495 0090 1148     		ldr	r0, .L158+16
 2496 0092 FFF7FEFF 		bl	Uart_DataPut
 2497              	.LVL305:
 2498              	.L155:
 514:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 2499              		.loc 1 514 0
 2500 0096 114D     		ldr	r5, .L158+20
 2501 0098 2B68     		ldr	r3, [r5]
 2502 009a 1822     		movs	r2, #24
 2503 009c 9968     		ldr	r1, [r3, #8]
 2504 009e 2046     		mov	r0, r4
 2505 00a0 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2506              	.LVL306:
 515:../user/source/DLT645.c ****     {
 2507              		.loc 1 515 0
 2508 00a4 2B68     		ldr	r3, [r5]
 2509 00a6 9868     		ldr	r0, [r3, #8]
 2510 00a8 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2511              	.LVL307:
 2512 00ac 50B9     		cbnz	r0, .L152
 517:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 2513              		.loc 1 517 0
 2514 00ae 0C4C     		ldr	r4, .L158+24
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 96


 2515              	.LVL308:
 2516 00b0 0022     		movs	r2, #0
 2517 00b2 0C49     		ldr	r1, .L158+28
 2518 00b4 2046     		mov	r0, r4
 2519 00b6 FFF7FEFF 		bl	USART_ITConfig
 2520              	.LVL309:
 518:../user/source/DLT645.c ****     }
 2521              		.loc 1 518 0
 2522 00ba 0122     		movs	r2, #1
 2523 00bc 0A49     		ldr	r1, .L158+32
 2524 00be 2046     		mov	r0, r4
 2525 00c0 FFF7FEFF 		bl	USART_ITConfig
 2526              	.LVL310:
 2527              	.L152:
 2528 00c4 38BD     		pop	{r3, r4, r5, pc}
 2529              	.L159:
 2530 00c6 00BF     		.align	2
 2531              	.L158:
 2532 00c8 00000000 		.word	Voltage_MAX
 2533 00cc 00000000 		.word	Voltage_MIN
 2534 00d0 00000000 		.word	.LANCHOR0
 2535 00d4 00000000 		.word	.LANCHOR6
 2536 00d8 00480040 		.word	1073760256
 2537 00dc 00000000 		.word	.LANCHOR7
 2538 00e0 00440040 		.word	1073759232
 2539 00e4 05010500 		.word	327941
 2540 00e8 07010700 		.word	459015
 2541              		.cfi_endproc
 2542              	.LFE117:
 2544              		.section	.text.Default_Reset,"ax",%progbits
 2545              		.align	2
 2546              		.global	Default_Reset
 2547              		.thumb
 2548              		.thumb_func
 2550              	Default_Reset:
 2551              	.LFB118:
 530:../user/source/DLT645.c ****     int i = 0;
 2552              		.loc 1 530 0
 2553              		.cfi_startproc
 2554              		@ args = 0, pretend = 0, frame = 0
 2555              		@ frame_needed = 0, uses_anonymous_args = 0
 2556              	.LVL311:
 2557 0000 70B5     		push	{r4, r5, r6, lr}
 2558              	.LCFI24:
 2559              		.cfi_def_cfa_offset 16
 2560              		.cfi_offset 4, -16
 2561              		.cfi_offset 5, -12
 2562              		.cfi_offset 6, -8
 2563              		.cfi_offset 14, -4
 2564 0002 0446     		mov	r4, r0
 2565              	.LVL312:
 532:../user/source/DLT645.c ****     B_Voltage = WORK_VOLTAGE;                                        //BÏàµçÑ¹Öµ¸ÄÎª±ê×¼Öµ
 2566              		.loc 1 532 0
 2567 0004 40F69803 		movw	r3, #2200
 2568 0008 334A     		ldr	r2, .L166
 2569 000a 1360     		str	r3, [r2]
 533:../user/source/DLT645.c ****     C_Voltage = WORK_VOLTAGE;                                        //CÏàµçÑ¹Öµ¸ÄÎª±ê×¼Öµ
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 97


 2570              		.loc 1 533 0
 2571 000c 334A     		ldr	r2, .L166+4
 2572 000e 1360     		str	r3, [r2]
 534:../user/source/DLT645.c ****     Voltage_Change_State = Voltage_Change;                           //µçÑ¹ĞŞ¸Ä×´Ì¬¸ÄÎª¡°ÓĞĞ§¡±
 2573              		.loc 1 534 0
 2574 0010 334A     		ldr	r2, .L166+8
 2575 0012 1360     		str	r3, [r2]
 535:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VChangeState_Addr, Voltage_Change_State); //´æ´¢µ½FLASHÖĞ
 2576              		.loc 1 535 0
 2577 0014 FF21     		movs	r1, #255
 2578 0016 334B     		ldr	r3, .L166+12
 2579 0018 1970     		strb	r1, [r3]
 536:../user/source/DLT645.c ****     Voltage_MAX = Voltage_MAX_Default;                               //µçÑ¹ºÏ¸ñÏŞÖµ»Ö¸´Ä¬ÈÏ²¢ÇÒ´æµµ
 2580              		.loc 1 536 0
 2581 001a 3348     		ldr	r0, .L166+16
 2582              	.LVL313:
 2583 001c FFF7FEFF 		bl	Flash_Write_Word
 2584              	.LVL314:
 537:../user/source/DLT645.c ****     Voltage_MIN = Voltage_MIN_Default;
 2585              		.loc 1 537 0
 2586 0020 324E     		ldr	r6, .L166+20
 2587 0022 40F62E10 		movw	r0, #2350
 2588 0026 3060     		str	r0, [r6]
 538:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMAX1_Addr, GetLowByte(Voltage_MAX));
 2589              		.loc 1 538 0
 2590 0028 314D     		ldr	r5, .L166+24
 2591 002a 40F2BC73 		movw	r3, #1980
 2592 002e 2B60     		str	r3, [r5]
 539:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMAX2_Addr, GetHighByte(Voltage_MAX));
 2593              		.loc 1 539 0
 2594 0030 FFF7FEFF 		bl	GetLowByte
 2595              	.LVL315:
 2596 0034 0146     		mov	r1, r0
 2597 0036 2F48     		ldr	r0, .L166+28
 2598 0038 FFF7FEFF 		bl	Flash_Write_Word
 2599              	.LVL316:
 540:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMIN1_Addr, GetLowByte(Voltage_MIN));
 2600              		.loc 1 540 0
 2601 003c 3068     		ldr	r0, [r6]
 2602 003e FFF7FEFF 		bl	GetHighByte
 2603              	.LVL317:
 2604 0042 0146     		mov	r1, r0
 2605 0044 2C48     		ldr	r0, .L166+32
 2606 0046 FFF7FEFF 		bl	Flash_Write_Word
 2607              	.LVL318:
 541:../user/source/DLT645.c ****     Flash_Write_Word(FLASH_VMIN2_Addr, GetHighByte(Voltage_MIN));
 2608              		.loc 1 541 0
 2609 004a 2868     		ldr	r0, [r5]
 2610 004c FFF7FEFF 		bl	GetLowByte
 2611              	.LVL319:
 2612 0050 0146     		mov	r1, r0
 2613 0052 2A48     		ldr	r0, .L166+36
 2614 0054 FFF7FEFF 		bl	Flash_Write_Word
 2615              	.LVL320:
 542:../user/source/DLT645.c ****     pucBuffer[8] = 0x94;  //ÇóÈ¡Ğ£ÑéºÍ
 2616              		.loc 1 542 0
 2617 0058 2868     		ldr	r0, [r5]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 98


 2618 005a FFF7FEFF 		bl	GetHighByte
 2619              	.LVL321:
 2620 005e 0146     		mov	r1, r0
 2621 0060 2748     		ldr	r0, .L166+40
 2622 0062 FFF7FEFF 		bl	Flash_Write_Word
 2623              	.LVL322:
 543:../user/source/DLT645.c ****     pucBuffer[9] = 0x00;  //ÇóÈ¡Ğ£ÑéºÍ
 2624              		.loc 1 543 0
 2625 0066 9423     		movs	r3, #148
 2626 0068 2372     		strb	r3, [r4, #8]
 544:../user/source/DLT645.c ****     pucBuffer[10] = 0x00; //ÇóÈ¡Ğ£ÑéºÍ
 2627              		.loc 1 544 0
 2628 006a 0023     		movs	r3, #0
 2629 006c 6372     		strb	r3, [r4, #9]
 545:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 2630              		.loc 1 545 0
 2631 006e A372     		strb	r3, [r4, #10]
 546:../user/source/DLT645.c ****     {
 2632              		.loc 1 546 0
 2633 0070 04E0     		b	.L161
 2634              	.LVL323:
 2635              	.L162:
 548:../user/source/DLT645.c ****     }
 2636              		.loc 1 548 0 discriminator 3
 2637 0072 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2638 0074 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 2639 0076 0A44     		add	r2, r2, r1
 2640 0078 A272     		strb	r2, [r4, #10]
 546:../user/source/DLT645.c ****     {
 2641              		.loc 1 546 0 discriminator 3
 2642 007a 0133     		adds	r3, r3, #1
 2643              	.LVL324:
 2644              	.L161:
 546:../user/source/DLT645.c ****     {
 2645              		.loc 1 546 0 is_stmt 0 discriminator 1
 2646 007c 092B     		cmp	r3, #9
 2647 007e F8DD     		ble	.L162
 550:../user/source/DLT645.c ****     uc645DataDomainLength = 0;
 2648              		.loc 1 550 0 is_stmt 1
 2649 0080 1623     		movs	r3, #22
 2650              	.LVL325:
 2651 0082 E372     		strb	r3, [r4, #11]
 551:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2652              		.loc 1 551 0
 2653 0084 0022     		movs	r2, #0
 2654 0086 1F4B     		ldr	r3, .L166+44
 2655 0088 1A70     		strb	r2, [r3]
 553:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 2656              		.loc 1 553 0
 2657 008a 1F4D     		ldr	r5, .L166+48
 2658 008c 2B68     		ldr	r3, [r5]
 2659 008e 0C22     		movs	r2, #12
 2660 0090 9968     		ldr	r1, [r3, #8]
 2661 0092 2046     		mov	r0, r4
 2662 0094 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2663              	.LVL326:
 554:../user/source/DLT645.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 99


 2664              		.loc 1 554 0
 2665 0098 2B68     		ldr	r3, [r5]
 2666 009a 9868     		ldr	r0, [r3, #8]
 2667 009c FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2668              	.LVL327:
 2669 00a0 10B9     		cbnz	r0, .L163
 556:../user/source/DLT645.c ****     }
 2670              		.loc 1 556 0
 2671 00a2 1A48     		ldr	r0, .L166+52
 2672 00a4 FFF7FEFF 		bl	Uart_DataPut
 2673              	.LVL328:
 2674              	.L163:
 559:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 2675              		.loc 1 559 0
 2676 00a8 194D     		ldr	r5, .L166+56
 2677 00aa 2B68     		ldr	r3, [r5]
 2678 00ac 0C22     		movs	r2, #12
 2679 00ae 9968     		ldr	r1, [r3, #8]
 2680 00b0 2046     		mov	r0, r4
 2681 00b2 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2682              	.LVL329:
 560:../user/source/DLT645.c ****     {
 2683              		.loc 1 560 0
 2684 00b6 2B68     		ldr	r3, [r5]
 2685 00b8 9868     		ldr	r0, [r3, #8]
 2686 00ba FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2687              	.LVL330:
 2688 00be 50B9     		cbnz	r0, .L160
 562:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 2689              		.loc 1 562 0
 2690 00c0 144C     		ldr	r4, .L166+60
 2691              	.LVL331:
 2692 00c2 0022     		movs	r2, #0
 2693 00c4 1449     		ldr	r1, .L166+64
 2694 00c6 2046     		mov	r0, r4
 2695 00c8 FFF7FEFF 		bl	USART_ITConfig
 2696              	.LVL332:
 563:../user/source/DLT645.c ****     }
 2697              		.loc 1 563 0
 2698 00cc 0122     		movs	r2, #1
 2699 00ce 1349     		ldr	r1, .L166+68
 2700 00d0 2046     		mov	r0, r4
 2701 00d2 FFF7FEFF 		bl	USART_ITConfig
 2702              	.LVL333:
 2703              	.L160:
 2704 00d6 70BD     		pop	{r4, r5, r6, pc}
 2705              	.L167:
 2706              		.align	2
 2707              	.L166:
 2708 00d8 00000000 		.word	.LANCHOR4
 2709 00dc 00000000 		.word	.LANCHOR8
 2710 00e0 00000000 		.word	.LANCHOR9
 2711 00e4 00000000 		.word	.LANCHOR5
 2712 00e8 14EF0108 		.word	134344468
 2713 00ec 00000000 		.word	Voltage_MAX
 2714 00f0 00000000 		.word	Voltage_MIN
 2715 00f4 00EF0108 		.word	134344448
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 100


 2716 00f8 04EF0108 		.word	134344452
 2717 00fc 08EF0108 		.word	134344456
 2718 0100 0CEF0108 		.word	134344460
 2719 0104 00000000 		.word	.LANCHOR0
 2720 0108 00000000 		.word	.LANCHOR6
 2721 010c 00480040 		.word	1073760256
 2722 0110 00000000 		.word	.LANCHOR7
 2723 0114 00440040 		.word	1073759232
 2724 0118 05010500 		.word	327941
 2725 011c 07010700 		.word	459015
 2726              		.cfi_endproc
 2727              	.LFE118:
 2729              		.section	.text.vCurrent_Limit_Set,"ax",%progbits
 2730              		.align	2
 2731              		.global	vCurrent_Limit_Set
 2732              		.thumb
 2733              		.thumb_func
 2735              	vCurrent_Limit_Set:
 2736              	.LFB135:
1548:../user/source/DLT645.c ****     uint8_t i;
 2737              		.loc 1 1548 0
 2738              		.cfi_startproc
 2739              		@ args = 0, pretend = 0, frame = 0
 2740              		@ frame_needed = 0, uses_anonymous_args = 0
 2741              	.LVL334:
 2742 0000 38B5     		push	{r3, r4, r5, lr}
 2743              	.LCFI25:
 2744              		.cfi_def_cfa_offset 16
 2745              		.cfi_offset 3, -16
 2746              		.cfi_offset 4, -12
 2747              		.cfi_offset 5, -8
 2748              		.cfi_offset 14, -4
 2749 0002 0446     		mov	r4, r0
1551:../user/source/DLT645.c ****     /*·ÇÖØ¹ıÔØµ÷Õû°æ±¾Ê±£¬»Ø¸´·ñÈÏÖ¡*/
 2750              		.loc 1 1551 0
 2751 0004 D423     		movs	r3, #212
 2752 0006 0372     		strb	r3, [r0, #8]
1574:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 2753              		.loc 1 1574 0
 2754 0008 0023     		movs	r3, #0
 2755 000a 4372     		strb	r3, [r0, #9]
1575:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 2756              		.loc 1 1575 0
 2757 000c 8372     		strb	r3, [r0, #10]
 2758              	.LVL335:
1576:../user/source/DLT645.c ****     {
 2759              		.loc 1 1576 0
 2760 000e 05E0     		b	.L169
 2761              	.LVL336:
 2762              	.L170:
1578:../user/source/DLT645.c ****     }
 2763              		.loc 1 1578 0 discriminator 3
 2764 0010 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2765 0012 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 2766 0014 0A44     		add	r2, r2, r1
 2767 0016 A272     		strb	r2, [r4, #10]
1576:../user/source/DLT645.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 101


 2768              		.loc 1 1576 0 discriminator 3
 2769 0018 0133     		adds	r3, r3, #1
 2770              	.LVL337:
 2771 001a DBB2     		uxtb	r3, r3
 2772              	.LVL338:
 2773              	.L169:
1576:../user/source/DLT645.c ****     {
 2774              		.loc 1 1576 0 is_stmt 0 discriminator 1
 2775 001c 092B     		cmp	r3, #9
 2776 001e F7D9     		bls	.L170
1580:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2777              		.loc 1 1580 0 is_stmt 1
 2778 0020 1623     		movs	r3, #22
 2779              	.LVL339:
 2780 0022 E372     		strb	r3, [r4, #11]
1582:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 2781              		.loc 1 1582 0
 2782 0024 0022     		movs	r2, #0
 2783 0026 144B     		ldr	r3, .L174
 2784 0028 1A70     		strb	r2, [r3]
1583:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 2785              		.loc 1 1583 0
 2786 002a 144D     		ldr	r5, .L174+4
 2787 002c 2B68     		ldr	r3, [r5]
 2788 002e 0C22     		movs	r2, #12
 2789 0030 9968     		ldr	r1, [r3, #8]
 2790 0032 2046     		mov	r0, r4
 2791              	.LVL340:
 2792 0034 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2793              	.LVL341:
1584:../user/source/DLT645.c ****     {
 2794              		.loc 1 1584 0
 2795 0038 2B68     		ldr	r3, [r5]
 2796 003a 9868     		ldr	r0, [r3, #8]
 2797 003c FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2798              	.LVL342:
 2799 0040 10B9     		cbnz	r0, .L171
1586:../user/source/DLT645.c ****     }
 2800              		.loc 1 1586 0
 2801 0042 0F48     		ldr	r0, .L174+8
 2802 0044 FFF7FEFF 		bl	Uart_DataPut
 2803              	.LVL343:
 2804              	.L171:
1589:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 2805              		.loc 1 1589 0
 2806 0048 0E4D     		ldr	r5, .L174+12
 2807 004a 2B68     		ldr	r3, [r5]
 2808 004c 0C22     		movs	r2, #12
 2809 004e 9968     		ldr	r1, [r3, #8]
 2810 0050 2046     		mov	r0, r4
 2811 0052 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2812              	.LVL344:
1590:../user/source/DLT645.c ****     {
 2813              		.loc 1 1590 0
 2814 0056 2B68     		ldr	r3, [r5]
 2815 0058 9868     		ldr	r0, [r3, #8]
 2816 005a FFF7FEFF 		bl	blDrv_Buf_IsEmpty
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 102


 2817              	.LVL345:
 2818 005e 50B9     		cbnz	r0, .L168
1592:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 2819              		.loc 1 1592 0
 2820 0060 094C     		ldr	r4, .L174+16
 2821              	.LVL346:
 2822 0062 0022     		movs	r2, #0
 2823 0064 0949     		ldr	r1, .L174+20
 2824 0066 2046     		mov	r0, r4
 2825 0068 FFF7FEFF 		bl	USART_ITConfig
 2826              	.LVL347:
1593:../user/source/DLT645.c ****     }
 2827              		.loc 1 1593 0
 2828 006c 0122     		movs	r2, #1
 2829 006e 0849     		ldr	r1, .L174+24
 2830 0070 2046     		mov	r0, r4
 2831 0072 FFF7FEFF 		bl	USART_ITConfig
 2832              	.LVL348:
 2833              	.L168:
 2834 0076 38BD     		pop	{r3, r4, r5, pc}
 2835              	.L175:
 2836              		.align	2
 2837              	.L174:
 2838 0078 00000000 		.word	.LANCHOR0
 2839 007c 00000000 		.word	.LANCHOR6
 2840 0080 00480040 		.word	1073760256
 2841 0084 00000000 		.word	.LANCHOR7
 2842 0088 00440040 		.word	1073759232
 2843 008c 05010500 		.word	327941
 2844 0090 07010700 		.word	459015
 2845              		.cfi_endproc
 2846              	.LFE135:
 2848              		.section	.text.vCurrent_CTRatio_Set,"ax",%progbits
 2849              		.align	2
 2850              		.global	vCurrent_CTRatio_Set
 2851              		.thumb
 2852              		.thumb_func
 2854              	vCurrent_CTRatio_Set:
 2855              	.LFB136:
1609:../user/source/DLT645.c ****     uint8_t i;
 2856              		.loc 1 1609 0
 2857              		.cfi_startproc
 2858              		@ args = 0, pretend = 0, frame = 0
 2859              		@ frame_needed = 0, uses_anonymous_args = 0
 2860              	.LVL349:
 2861 0000 38B5     		push	{r3, r4, r5, lr}
 2862              	.LCFI26:
 2863              		.cfi_def_cfa_offset 16
 2864              		.cfi_offset 3, -16
 2865              		.cfi_offset 4, -12
 2866              		.cfi_offset 5, -8
 2867              		.cfi_offset 14, -4
 2868 0002 0446     		mov	r4, r0
 2869              	.LVL350:
1612:../user/source/DLT645.c **** /*ÊäÈëµÄ×Ö½Ú¼õÈ¥33ºó²»ÊÇBCDÂëÔõÃ´°ì£¿*/
 2870              		.loc 1 1612 0
 2871 0004 D423     		movs	r3, #212
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 103


 2872 0006 0372     		strb	r3, [r0, #8]
1630:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 2873              		.loc 1 1630 0
 2874 0008 0023     		movs	r3, #0
 2875 000a 4372     		strb	r3, [r0, #9]
1631:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 2876              		.loc 1 1631 0
 2877 000c 8372     		strb	r3, [r0, #10]
 2878              	.LVL351:
1632:../user/source/DLT645.c ****     {
 2879              		.loc 1 1632 0
 2880 000e 05E0     		b	.L177
 2881              	.LVL352:
 2882              	.L178:
1634:../user/source/DLT645.c ****     }
 2883              		.loc 1 1634 0 discriminator 3
 2884 0010 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2885 0012 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 2886 0014 0A44     		add	r2, r2, r1
 2887 0016 A272     		strb	r2, [r4, #10]
1632:../user/source/DLT645.c ****     {
 2888              		.loc 1 1632 0 discriminator 3
 2889 0018 0133     		adds	r3, r3, #1
 2890              	.LVL353:
 2891 001a DBB2     		uxtb	r3, r3
 2892              	.LVL354:
 2893              	.L177:
1632:../user/source/DLT645.c ****     {
 2894              		.loc 1 1632 0 is_stmt 0 discriminator 1
 2895 001c 092B     		cmp	r3, #9
 2896 001e F7D9     		bls	.L178
1636:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 2897              		.loc 1 1636 0 is_stmt 1
 2898 0020 1623     		movs	r3, #22
 2899              	.LVL355:
 2900 0022 E372     		strb	r3, [r4, #11]
1638:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 2901              		.loc 1 1638 0
 2902 0024 0022     		movs	r2, #0
 2903 0026 144B     		ldr	r3, .L182
 2904 0028 1A70     		strb	r2, [r3]
1639:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 2905              		.loc 1 1639 0
 2906 002a 144D     		ldr	r5, .L182+4
 2907 002c 2B68     		ldr	r3, [r5]
 2908 002e 0C22     		movs	r2, #12
 2909 0030 9968     		ldr	r1, [r3, #8]
 2910 0032 2046     		mov	r0, r4
 2911              	.LVL356:
 2912 0034 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2913              	.LVL357:
1640:../user/source/DLT645.c ****     {
 2914              		.loc 1 1640 0
 2915 0038 2B68     		ldr	r3, [r5]
 2916 003a 9868     		ldr	r0, [r3, #8]
 2917 003c FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2918              	.LVL358:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 104


 2919 0040 10B9     		cbnz	r0, .L179
1642:../user/source/DLT645.c ****     }
 2920              		.loc 1 1642 0
 2921 0042 0F48     		ldr	r0, .L182+8
 2922 0044 FFF7FEFF 		bl	Uart_DataPut
 2923              	.LVL359:
 2924              	.L179:
1645:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 2925              		.loc 1 1645 0
 2926 0048 0E4D     		ldr	r5, .L182+12
 2927 004a 2B68     		ldr	r3, [r5]
 2928 004c 0C22     		movs	r2, #12
 2929 004e 9968     		ldr	r1, [r3, #8]
 2930 0050 2046     		mov	r0, r4
 2931 0052 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 2932              	.LVL360:
1646:../user/source/DLT645.c ****     {
 2933              		.loc 1 1646 0
 2934 0056 2B68     		ldr	r3, [r5]
 2935 0058 9868     		ldr	r0, [r3, #8]
 2936 005a FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 2937              	.LVL361:
 2938 005e 50B9     		cbnz	r0, .L176
1648:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 2939              		.loc 1 1648 0
 2940 0060 094C     		ldr	r4, .L182+16
 2941              	.LVL362:
 2942 0062 0022     		movs	r2, #0
 2943 0064 0949     		ldr	r1, .L182+20
 2944 0066 2046     		mov	r0, r4
 2945 0068 FFF7FEFF 		bl	USART_ITConfig
 2946              	.LVL363:
1649:../user/source/DLT645.c ****     }
 2947              		.loc 1 1649 0
 2948 006c 0122     		movs	r2, #1
 2949 006e 0849     		ldr	r1, .L182+24
 2950 0070 2046     		mov	r0, r4
 2951 0072 FFF7FEFF 		bl	USART_ITConfig
 2952              	.LVL364:
 2953              	.L176:
 2954 0076 38BD     		pop	{r3, r4, r5, pc}
 2955              	.L183:
 2956              		.align	2
 2957              	.L182:
 2958 0078 00000000 		.word	.LANCHOR0
 2959 007c 00000000 		.word	.LANCHOR6
 2960 0080 00480040 		.word	1073760256
 2961 0084 00000000 		.word	.LANCHOR7
 2962 0088 00440040 		.word	1073759232
 2963 008c 05010500 		.word	327941
 2964 0090 07010700 		.word	459015
 2965              		.cfi_endproc
 2966              	.LFE136:
 2968              		.section	.text.vCurrent_Limit_ReadSet,"ax",%progbits
 2969              		.align	2
 2970              		.global	vCurrent_Limit_ReadSet
 2971              		.thumb
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 105


 2972              		.thumb_func
 2974              	vCurrent_Limit_ReadSet:
 2975              	.LFB137:
1664:../user/source/DLT645.c ****     uint8_t i;
 2976              		.loc 1 1664 0
 2977              		.cfi_startproc
 2978              		@ args = 0, pretend = 0, frame = 8
 2979              		@ frame_needed = 0, uses_anonymous_args = 0
 2980              	.LVL365:
 2981 0000 30B5     		push	{r4, r5, lr}
 2982              	.LCFI27:
 2983              		.cfi_def_cfa_offset 12
 2984              		.cfi_offset 4, -12
 2985              		.cfi_offset 5, -8
 2986              		.cfi_offset 14, -4
 2987 0002 85B0     		sub	sp, sp, #20
 2988              	.LCFI28:
 2989              		.cfi_def_cfa_offset 32
 2990 0004 0546     		mov	r5, r0
1667:../user/source/DLT645.c ****     limit.isminus = false;
 2991              		.loc 1 1667 0
 2992 0006 274B     		ldr	r3, .L190
 2993 0008 DB68     		ldr	r3, [r3, #12]
 2994 000a 0293     		str	r3, [sp, #8]
1668:../user/source/DLT645.c ****     vPut_Current(limit, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16]);
 2995              		.loc 1 1668 0
 2996 000c 0024     		movs	r4, #0
 2997 000e 8DF80D40 		strb	r4, [sp, #13]
1669:../user/source/DLT645.c ****     pucBuffer[8] = 0x91;
 2998              		.loc 1 1669 0
 2999 0012 00F11003 		add	r3, r0, #16
 3000 0016 0093     		str	r3, [sp]
 3001 0018 00F10F03 		add	r3, r0, #15
 3002 001c 00F10E02 		add	r2, r0, #14
 3003 0020 04A9     		add	r1, sp, #16
 3004 0022 11E90300 		ldmdb	r1, {r0, r1}
 3005              	.LVL366:
 3006 0026 FFF7FEFF 		bl	vPut_Current
 3007              	.LVL367:
1670:../user/source/DLT645.c ****     pucBuffer[9] = 0x07;
 3008              		.loc 1 1670 0
 3009 002a 9123     		movs	r3, #145
 3010 002c 2B72     		strb	r3, [r5, #8]
1671:../user/source/DLT645.c ****     pucBuffer[17] = 0;
 3011              		.loc 1 1671 0
 3012 002e 0723     		movs	r3, #7
 3013 0030 6B72     		strb	r3, [r5, #9]
1672:../user/source/DLT645.c ****     for (i = 0; i < 17; i++)
 3014              		.loc 1 1672 0
 3015 0032 6C74     		strb	r4, [r5, #17]
 3016              	.LVL368:
1673:../user/source/DLT645.c ****     {
 3017              		.loc 1 1673 0
 3018 0034 2346     		mov	r3, r4
 3019 0036 05E0     		b	.L185
 3020              	.LVL369:
 3021              	.L186:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 106


1675:../user/source/DLT645.c ****     }
 3022              		.loc 1 1675 0 discriminator 3
 3023 0038 E95C     		ldrb	r1, [r5, r3]	@ zero_extendqisi2
 3024 003a 6A7C     		ldrb	r2, [r5, #17]	@ zero_extendqisi2
 3025 003c 0A44     		add	r2, r2, r1
 3026 003e 6A74     		strb	r2, [r5, #17]
1673:../user/source/DLT645.c ****     {
 3027              		.loc 1 1673 0 discriminator 3
 3028 0040 0133     		adds	r3, r3, #1
 3029              	.LVL370:
 3030 0042 DBB2     		uxtb	r3, r3
 3031              	.LVL371:
 3032              	.L185:
1673:../user/source/DLT645.c ****     {
 3033              		.loc 1 1673 0 is_stmt 0 discriminator 1
 3034 0044 102B     		cmp	r3, #16
 3035 0046 F7D9     		bls	.L186
1677:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 3036              		.loc 1 1677 0 is_stmt 1
 3037 0048 1623     		movs	r3, #22
 3038              	.LVL372:
 3039 004a AB74     		strb	r3, [r5, #18]
1679:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 19);
 3040              		.loc 1 1679 0
 3041 004c 0722     		movs	r2, #7
 3042 004e 164B     		ldr	r3, .L190+4
 3043 0050 1A70     		strb	r2, [r3]
1680:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 3044              		.loc 1 1680 0
 3045 0052 164C     		ldr	r4, .L190+8
 3046 0054 2368     		ldr	r3, [r4]
 3047 0056 1322     		movs	r2, #19
 3048 0058 9968     		ldr	r1, [r3, #8]
 3049 005a 2846     		mov	r0, r5
 3050 005c FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3051              	.LVL373:
1681:../user/source/DLT645.c ****     {
 3052              		.loc 1 1681 0
 3053 0060 2368     		ldr	r3, [r4]
 3054 0062 9868     		ldr	r0, [r3, #8]
 3055 0064 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3056              	.LVL374:
 3057 0068 10B9     		cbnz	r0, .L187
1683:../user/source/DLT645.c ****     }
 3058              		.loc 1 1683 0
 3059 006a 1148     		ldr	r0, .L190+12
 3060 006c FFF7FEFF 		bl	Uart_DataPut
 3061              	.LVL375:
 3062              	.L187:
1686:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 3063              		.loc 1 1686 0
 3064 0070 104C     		ldr	r4, .L190+16
 3065 0072 2368     		ldr	r3, [r4]
 3066 0074 1322     		movs	r2, #19
 3067 0076 9968     		ldr	r1, [r3, #8]
 3068 0078 2846     		mov	r0, r5
 3069 007a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 107


 3070              	.LVL376:
1687:../user/source/DLT645.c ****     {
 3071              		.loc 1 1687 0
 3072 007e 2368     		ldr	r3, [r4]
 3073 0080 9868     		ldr	r0, [r3, #8]
 3074 0082 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3075              	.LVL377:
 3076 0086 50B9     		cbnz	r0, .L184
1689:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3077              		.loc 1 1689 0
 3078 0088 0B4C     		ldr	r4, .L190+20
 3079 008a 0022     		movs	r2, #0
 3080 008c 0B49     		ldr	r1, .L190+24
 3081 008e 2046     		mov	r0, r4
 3082 0090 FFF7FEFF 		bl	USART_ITConfig
 3083              	.LVL378:
1690:../user/source/DLT645.c ****     }
 3084              		.loc 1 1690 0
 3085 0094 0122     		movs	r2, #1
 3086 0096 0A49     		ldr	r1, .L190+28
 3087 0098 2046     		mov	r0, r4
 3088 009a FFF7FEFF 		bl	USART_ITConfig
 3089              	.LVL379:
 3090              	.L184:
1692:../user/source/DLT645.c **** 
 3091              		.loc 1 1692 0
 3092 009e 05B0     		add	sp, sp, #20
 3093              	.LCFI29:
 3094              		.cfi_def_cfa_offset 12
 3095              		@ sp needed
 3096 00a0 30BD     		pop	{r4, r5, pc}
 3097              	.LVL380:
 3098              	.L191:
 3099 00a2 00BF     		.align	2
 3100              	.L190:
 3101 00a4 00000000 		.word	TransFormer
 3102 00a8 00000000 		.word	.LANCHOR0
 3103 00ac 00000000 		.word	.LANCHOR6
 3104 00b0 00480040 		.word	1073760256
 3105 00b4 00000000 		.word	.LANCHOR7
 3106 00b8 00440040 		.word	1073759232
 3107 00bc 05010500 		.word	327941
 3108 00c0 07010700 		.word	459015
 3109              		.cfi_endproc
 3110              	.LFE137:
 3112              		.section	.text.vCurrent_CTRatio_ReadSet,"ax",%progbits
 3113              		.align	2
 3114              		.global	vCurrent_CTRatio_ReadSet
 3115              		.thumb
 3116              		.thumb_func
 3118              	vCurrent_CTRatio_ReadSet:
 3119              	.LFB138:
1705:../user/source/DLT645.c **** 
 3120              		.loc 1 1705 0
 3121              		.cfi_startproc
 3122              		@ args = 0, pretend = 0, frame = 0
 3123              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 108


 3124              	.LVL381:
 3125 0000 38B5     		push	{r3, r4, r5, lr}
 3126              	.LCFI30:
 3127              		.cfi_def_cfa_offset 16
 3128              		.cfi_offset 3, -16
 3129              		.cfi_offset 4, -12
 3130              		.cfi_offset 5, -8
 3131              		.cfi_offset 14, -4
 3132 0002 0446     		mov	r4, r0
1708:../user/source/DLT645.c ****     pucBuffer[9] = 0x06;
 3133              		.loc 1 1708 0
 3134 0004 9123     		movs	r3, #145
 3135 0006 0372     		strb	r3, [r0, #8]
1709:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(TransFormer.CTratio);
 3136              		.loc 1 1709 0
 3137 0008 0623     		movs	r3, #6
 3138 000a 4372     		strb	r3, [r0, #9]
1710:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(TransFormer.CTratio);
 3139              		.loc 1 1710 0
 3140 000c 204B     		ldr	r3, .L198
 3141 000e 9D68     		ldr	r5, [r3, #8]
 3142 0010 2846     		mov	r0, r5
 3143              	.LVL382:
 3144 0012 FFF7FEFF 		bl	GetLowByte
 3145              	.LVL383:
 3146 0016 A073     		strb	r0, [r4, #14]
1711:../user/source/DLT645.c ****     pucBuffer[16] = 0;
 3147              		.loc 1 1711 0
 3148 0018 2846     		mov	r0, r5
 3149 001a FFF7FEFF 		bl	GetHighByte
 3150              	.LVL384:
 3151 001e E073     		strb	r0, [r4, #15]
1712:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
 3152              		.loc 1 1712 0
 3153 0020 0023     		movs	r3, #0
 3154 0022 2374     		strb	r3, [r4, #16]
 3155              	.LVL385:
1713:../user/source/DLT645.c ****     {
 3156              		.loc 1 1713 0
 3157 0024 05E0     		b	.L193
 3158              	.LVL386:
 3159              	.L194:
1715:../user/source/DLT645.c ****     }
 3160              		.loc 1 1715 0 discriminator 3
 3161 0026 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3162 0028 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 3163 002a 0A44     		add	r2, r2, r1
 3164 002c 2274     		strb	r2, [r4, #16]
1713:../user/source/DLT645.c ****     {
 3165              		.loc 1 1713 0 discriminator 3
 3166 002e 0133     		adds	r3, r3, #1
 3167              	.LVL387:
 3168 0030 DBB2     		uxtb	r3, r3
 3169              	.LVL388:
 3170              	.L193:
1713:../user/source/DLT645.c ****     {
 3171              		.loc 1 1713 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 109


 3172 0032 0F2B     		cmp	r3, #15
 3173 0034 F7D9     		bls	.L194
1717:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 3174              		.loc 1 1717 0 is_stmt 1
 3175 0036 1623     		movs	r3, #22
 3176              	.LVL389:
 3177 0038 6374     		strb	r3, [r4, #17]
1719:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 18);
 3178              		.loc 1 1719 0
 3179 003a 0622     		movs	r2, #6
 3180 003c 154B     		ldr	r3, .L198+4
 3181 003e 1A70     		strb	r2, [r3]
1720:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 3182              		.loc 1 1720 0
 3183 0040 154D     		ldr	r5, .L198+8
 3184 0042 2B68     		ldr	r3, [r5]
 3185 0044 1222     		movs	r2, #18
 3186 0046 9968     		ldr	r1, [r3, #8]
 3187 0048 2046     		mov	r0, r4
 3188 004a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3189              	.LVL390:
1721:../user/source/DLT645.c ****     {
 3190              		.loc 1 1721 0
 3191 004e 2B68     		ldr	r3, [r5]
 3192 0050 9868     		ldr	r0, [r3, #8]
 3193 0052 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3194              	.LVL391:
 3195 0056 10B9     		cbnz	r0, .L195
1723:../user/source/DLT645.c ****     }
 3196              		.loc 1 1723 0
 3197 0058 1048     		ldr	r0, .L198+12
 3198 005a FFF7FEFF 		bl	Uart_DataPut
 3199              	.LVL392:
 3200              	.L195:
1726:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 3201              		.loc 1 1726 0
 3202 005e 104D     		ldr	r5, .L198+16
 3203 0060 2B68     		ldr	r3, [r5]
 3204 0062 1222     		movs	r2, #18
 3205 0064 9968     		ldr	r1, [r3, #8]
 3206 0066 2046     		mov	r0, r4
 3207 0068 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3208              	.LVL393:
1727:../user/source/DLT645.c ****     {
 3209              		.loc 1 1727 0
 3210 006c 2B68     		ldr	r3, [r5]
 3211 006e 9868     		ldr	r0, [r3, #8]
 3212 0070 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3213              	.LVL394:
 3214 0074 50B9     		cbnz	r0, .L192
1729:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3215              		.loc 1 1729 0
 3216 0076 0B4C     		ldr	r4, .L198+20
 3217              	.LVL395:
 3218 0078 0022     		movs	r2, #0
 3219 007a 0B49     		ldr	r1, .L198+24
 3220 007c 2046     		mov	r0, r4
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 110


 3221 007e FFF7FEFF 		bl	USART_ITConfig
 3222              	.LVL396:
1730:../user/source/DLT645.c ****     }
 3223              		.loc 1 1730 0
 3224 0082 0122     		movs	r2, #1
 3225 0084 0949     		ldr	r1, .L198+28
 3226 0086 2046     		mov	r0, r4
 3227 0088 FFF7FEFF 		bl	USART_ITConfig
 3228              	.LVL397:
 3229              	.L192:
 3230 008c 38BD     		pop	{r3, r4, r5, pc}
 3231              	.L199:
 3232 008e 00BF     		.align	2
 3233              	.L198:
 3234 0090 00000000 		.word	TransFormer
 3235 0094 00000000 		.word	.LANCHOR0
 3236 0098 00000000 		.word	.LANCHOR6
 3237 009c 00480040 		.word	1073760256
 3238 00a0 00000000 		.word	.LANCHOR7
 3239 00a4 00440040 		.word	1073759232
 3240 00a8 05010500 		.word	327941
 3241 00ac 07010700 		.word	459015
 3242              		.cfi_endproc
 3243              	.LFE138:
 3245              		.section	.text.vCurrent_TransFormer_Capacity_ReadSet,"ax",%progbits
 3246              		.align	2
 3247              		.global	vCurrent_TransFormer_Capacity_ReadSet
 3248              		.thumb
 3249              		.thumb_func
 3251              	vCurrent_TransFormer_Capacity_ReadSet:
 3252              	.LFB139:
1745:../user/source/DLT645.c ****     uint8_t i;
 3253              		.loc 1 1745 0
 3254              		.cfi_startproc
 3255              		@ args = 0, pretend = 0, frame = 0
 3256              		@ frame_needed = 0, uses_anonymous_args = 0
 3257              	.LVL398:
 3258 0000 38B5     		push	{r3, r4, r5, lr}
 3259              	.LCFI31:
 3260              		.cfi_def_cfa_offset 16
 3261              		.cfi_offset 3, -16
 3262              		.cfi_offset 4, -12
 3263              		.cfi_offset 5, -8
 3264              		.cfi_offset 14, -4
 3265 0002 0446     		mov	r4, r0
1747:../user/source/DLT645.c ****     pucBuffer[9] = 0x06;
 3266              		.loc 1 1747 0
 3267 0004 9123     		movs	r3, #145
 3268 0006 0372     		strb	r3, [r0, #8]
1748:../user/source/DLT645.c ****     pucBuffer[14] = GetLowByte(TransFormer.capacity);
 3269              		.loc 1 1748 0
 3270 0008 0623     		movs	r3, #6
 3271 000a 4372     		strb	r3, [r0, #9]
1749:../user/source/DLT645.c ****     pucBuffer[15] = GetHighByte(TransFormer.capacity);
 3272              		.loc 1 1749 0
 3273 000c 204B     		ldr	r3, .L206
 3274 000e 1D68     		ldr	r5, [r3]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 111


 3275 0010 2846     		mov	r0, r5
 3276              	.LVL399:
 3277 0012 FFF7FEFF 		bl	GetLowByte
 3278              	.LVL400:
 3279 0016 A073     		strb	r0, [r4, #14]
1750:../user/source/DLT645.c ****     pucBuffer[16] = 0;
 3280              		.loc 1 1750 0
 3281 0018 2846     		mov	r0, r5
 3282 001a FFF7FEFF 		bl	GetHighByte
 3283              	.LVL401:
 3284 001e E073     		strb	r0, [r4, #15]
1751:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
 3285              		.loc 1 1751 0
 3286 0020 0023     		movs	r3, #0
 3287 0022 2374     		strb	r3, [r4, #16]
 3288              	.LVL402:
1752:../user/source/DLT645.c ****     {
 3289              		.loc 1 1752 0
 3290 0024 05E0     		b	.L201
 3291              	.LVL403:
 3292              	.L202:
1754:../user/source/DLT645.c ****     }
 3293              		.loc 1 1754 0 discriminator 3
 3294 0026 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3295 0028 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 3296 002a 0A44     		add	r2, r2, r1
 3297 002c 2274     		strb	r2, [r4, #16]
1752:../user/source/DLT645.c ****     {
 3298              		.loc 1 1752 0 discriminator 3
 3299 002e 0133     		adds	r3, r3, #1
 3300              	.LVL404:
 3301 0030 DBB2     		uxtb	r3, r3
 3302              	.LVL405:
 3303              	.L201:
1752:../user/source/DLT645.c ****     {
 3304              		.loc 1 1752 0 is_stmt 0 discriminator 1
 3305 0032 0F2B     		cmp	r3, #15
 3306 0034 F7D9     		bls	.L202
1756:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 3307              		.loc 1 1756 0 is_stmt 1
 3308 0036 1623     		movs	r3, #22
 3309              	.LVL406:
 3310 0038 6374     		strb	r3, [r4, #17]
1758:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 18);
 3311              		.loc 1 1758 0
 3312 003a 0022     		movs	r2, #0
 3313 003c 154B     		ldr	r3, .L206+4
 3314 003e 1A70     		strb	r2, [r3]
1759:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 3315              		.loc 1 1759 0
 3316 0040 154D     		ldr	r5, .L206+8
 3317 0042 2B68     		ldr	r3, [r5]
 3318 0044 1222     		movs	r2, #18
 3319 0046 9968     		ldr	r1, [r3, #8]
 3320 0048 2046     		mov	r0, r4
 3321 004a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3322              	.LVL407:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 112


1760:../user/source/DLT645.c ****     {
 3323              		.loc 1 1760 0
 3324 004e 2B68     		ldr	r3, [r5]
 3325 0050 9868     		ldr	r0, [r3, #8]
 3326 0052 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3327              	.LVL408:
 3328 0056 10B9     		cbnz	r0, .L203
1762:../user/source/DLT645.c ****     }
 3329              		.loc 1 1762 0
 3330 0058 1048     		ldr	r0, .L206+12
 3331 005a FFF7FEFF 		bl	Uart_DataPut
 3332              	.LVL409:
 3333              	.L203:
1765:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 3334              		.loc 1 1765 0
 3335 005e 104D     		ldr	r5, .L206+16
 3336 0060 2B68     		ldr	r3, [r5]
 3337 0062 1222     		movs	r2, #18
 3338 0064 9968     		ldr	r1, [r3, #8]
 3339 0066 2046     		mov	r0, r4
 3340 0068 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3341              	.LVL410:
1766:../user/source/DLT645.c ****     {
 3342              		.loc 1 1766 0
 3343 006c 2B68     		ldr	r3, [r5]
 3344 006e 9868     		ldr	r0, [r3, #8]
 3345 0070 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3346              	.LVL411:
 3347 0074 50B9     		cbnz	r0, .L200
1768:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3348              		.loc 1 1768 0
 3349 0076 0B4C     		ldr	r4, .L206+20
 3350              	.LVL412:
 3351 0078 0022     		movs	r2, #0
 3352 007a 0B49     		ldr	r1, .L206+24
 3353 007c 2046     		mov	r0, r4
 3354 007e FFF7FEFF 		bl	USART_ITConfig
 3355              	.LVL413:
1769:../user/source/DLT645.c ****     }
 3356              		.loc 1 1769 0
 3357 0082 0122     		movs	r2, #1
 3358 0084 0949     		ldr	r1, .L206+28
 3359 0086 2046     		mov	r0, r4
 3360 0088 FFF7FEFF 		bl	USART_ITConfig
 3361              	.LVL414:
 3362              	.L200:
 3363 008c 38BD     		pop	{r3, r4, r5, pc}
 3364              	.L207:
 3365 008e 00BF     		.align	2
 3366              	.L206:
 3367 0090 00000000 		.word	TransFormer
 3368 0094 00000000 		.word	.LANCHOR0
 3369 0098 00000000 		.word	.LANCHOR6
 3370 009c 00480040 		.word	1073760256
 3371 00a0 00000000 		.word	.LANCHOR7
 3372 00a4 00440040 		.word	1073759232
 3373 00a8 05010500 		.word	327941
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 113


 3374 00ac 07010700 		.word	459015
 3375              		.cfi_endproc
 3376              	.LFE139:
 3378              		.section	.text.vEnergy_Modify_ReadSet,"ax",%progbits
 3379              		.align	2
 3380              		.global	vEnergy_Modify_ReadSet
 3381              		.thumb
 3382              		.thumb_func
 3384              	vEnergy_Modify_ReadSet:
 3385              	.LFB155:
2472:../user/source/DLT645.c ****     //68 AA AA AA AA AA AA 68 91 04 33 76 34 33 71 16
 3386              		.loc 1 2472 0
 3387              		.cfi_startproc
 3388              		@ args = 0, pretend = 0, frame = 0
 3389              		@ frame_needed = 0, uses_anonymous_args = 0
 3390              	.LVL415:
 3391 0000 38B5     		push	{r3, r4, r5, lr}
 3392              	.LCFI32:
 3393              		.cfi_def_cfa_offset 16
 3394              		.cfi_offset 3, -16
 3395              		.cfi_offset 4, -12
 3396              		.cfi_offset 5, -8
 3397              		.cfi_offset 14, -4
2476:../user/source/DLT645.c ****         return;
 3398              		.loc 1 2476 0
 3399 0002 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 3400 0004 912B     		cmp	r3, #145
 3401 0006 4CD1     		bne	.L208
2479:../user/source/DLT645.c ****     //ratio = EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR);
 3402              		.loc 1 2479 0
 3403 0008 0623     		movs	r3, #6
 3404 000a 4372     		strb	r3, [r0, #9]
2481:../user/source/DLT645.c **** 
 3405              		.loc 1 2481 0
 3406 000c 254B     		ldr	r3, .L214
 3407 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3408              	.LVL416:
2483:../user/source/DLT645.c ****     pucbuffer[15] = DEC2BCD(ratio / 100); //¸ßÎ»ÔÚºó
 3409              		.loc 1 2483 0
 3410 0010 2549     		ldr	r1, .L214+4
 3411 0012 A1FB0231 		umull	r3, r1, r1, r2
 3412 0016 4909     		lsrs	r1, r1, #5
 3413 0018 6423     		movs	r3, #100
 3414 001a 03FB1123 		mls	r3, r3, r1, r2
 3415 001e DBB2     		uxtb	r3, r3
 3416 0020 224A     		ldr	r2, .L214+8
 3417              	.LVL417:
 3418 0022 A2FB0342 		umull	r4, r2, r2, r3
 3419 0026 D208     		lsrs	r2, r2, #3
 3420 0028 02EB8205 		add	r5, r2, r2, lsl #2
 3421 002c 6C00     		lsls	r4, r5, #1
 3422 002e 1B1B     		subs	r3, r3, r4
 3423 0030 43EA0213 		orr	r3, r3, r2, lsl #4
 3424 0034 8373     		strb	r3, [r0, #14]
2484:../user/source/DLT645.c ****     pucbuffer[16] = 0;
 3425              		.loc 1 2484 0
 3426 0036 C173     		strb	r1, [r0, #15]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 114


2485:../user/source/DLT645.c ****     for (i = 0; i < 16; i++)
 3427              		.loc 1 2485 0
 3428 0038 0023     		movs	r3, #0
 3429 003a 0374     		strb	r3, [r0, #16]
 3430              	.LVL418:
2486:../user/source/DLT645.c ****     {
 3431              		.loc 1 2486 0
 3432 003c 04E0     		b	.L210
 3433              	.LVL419:
 3434              	.L211:
2488:../user/source/DLT645.c ****     }
 3435              		.loc 1 2488 0 discriminator 3
 3436 003e C15C     		ldrb	r1, [r0, r3]	@ zero_extendqisi2
 3437 0040 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 3438 0042 0A44     		add	r2, r2, r1
 3439 0044 0274     		strb	r2, [r0, #16]
2486:../user/source/DLT645.c ****     {
 3440              		.loc 1 2486 0 discriminator 3
 3441 0046 0133     		adds	r3, r3, #1
 3442              	.LVL420:
 3443              	.L210:
2486:../user/source/DLT645.c ****     {
 3444              		.loc 1 2486 0 is_stmt 0 discriminator 1
 3445 0048 0F2B     		cmp	r3, #15
 3446 004a F8D9     		bls	.L211
 3447 004c 0446     		mov	r4, r0
2490:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 3448              		.loc 1 2490 0 is_stmt 1
 3449 004e 1623     		movs	r3, #22
 3450              	.LVL421:
 3451 0050 4374     		strb	r3, [r0, #17]
2492:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, pUartDB->pSndbuf, 18);
 3452              		.loc 1 2492 0
 3453 0052 0422     		movs	r2, #4
 3454 0054 164B     		ldr	r3, .L214+12
 3455 0056 1A70     		strb	r2, [r3]
2493:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 3456              		.loc 1 2493 0
 3457 0058 164D     		ldr	r5, .L214+16
 3458 005a 2B68     		ldr	r3, [r5]
 3459 005c 1222     		movs	r2, #18
 3460 005e 9968     		ldr	r1, [r3, #8]
 3461 0060 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3462              	.LVL422:
2494:../user/source/DLT645.c ****     {
 3463              		.loc 1 2494 0
 3464 0064 2B68     		ldr	r3, [r5]
 3465 0066 9868     		ldr	r0, [r3, #8]
 3466 0068 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3467              	.LVL423:
 3468 006c 10B9     		cbnz	r0, .L212
2496:../user/source/DLT645.c ****     }
 3469              		.loc 1 2496 0
 3470 006e 1248     		ldr	r0, .L214+20
 3471 0070 FFF7FEFF 		bl	Uart_DataPut
 3472              	.LVL424:
 3473              	.L212:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 115


2499:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 3474              		.loc 1 2499 0
 3475 0074 114D     		ldr	r5, .L214+24
 3476 0076 2B68     		ldr	r3, [r5]
 3477 0078 1222     		movs	r2, #18
 3478 007a 9968     		ldr	r1, [r3, #8]
 3479 007c 2046     		mov	r0, r4
 3480 007e FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3481              	.LVL425:
2500:../user/source/DLT645.c ****     {
 3482              		.loc 1 2500 0
 3483 0082 2B68     		ldr	r3, [r5]
 3484 0084 9868     		ldr	r0, [r3, #8]
 3485 0086 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3486              	.LVL426:
 3487 008a 50B9     		cbnz	r0, .L208
2502:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3488              		.loc 1 2502 0
 3489 008c 0C4C     		ldr	r4, .L214+28
 3490              	.LVL427:
 3491 008e 0022     		movs	r2, #0
 3492 0090 0C49     		ldr	r1, .L214+32
 3493 0092 2046     		mov	r0, r4
 3494 0094 FFF7FEFF 		bl	USART_ITConfig
 3495              	.LVL428:
2503:../user/source/DLT645.c ****     }
 3496              		.loc 1 2503 0
 3497 0098 0122     		movs	r2, #1
 3498 009a 0B49     		ldr	r1, .L214+36
 3499 009c 2046     		mov	r0, r4
 3500 009e FFF7FEFF 		bl	USART_ITConfig
 3501              	.LVL429:
 3502              	.L208:
 3503 00a2 38BD     		pop	{r3, r4, r5, pc}
 3504              	.L215:
 3505              		.align	2
 3506              	.L214:
 3507 00a4 00000000 		.word	ucDayfrozen_Modify_Ratio
 3508 00a8 1F85EB51 		.word	1374389535
 3509 00ac CDCCCCCC 		.word	-858993459
 3510 00b0 00000000 		.word	.LANCHOR0
 3511 00b4 00000000 		.word	.LANCHOR6
 3512 00b8 00480040 		.word	1073760256
 3513 00bc 00000000 		.word	.LANCHOR7
 3514 00c0 00440040 		.word	1073759232
 3515 00c4 05010500 		.word	327941
 3516 00c8 07010700 		.word	459015
 3517              		.cfi_endproc
 3518              	.LFE155:
 3520              		.section	.text.vRead_Version,"ax",%progbits
 3521              		.align	2
 3522              		.global	vRead_Version
 3523              		.thumb
 3524              		.thumb_func
 3526              	vRead_Version:
 3527              	.LFB163:
2764:../user/source/DLT645.c ****     uint16_t n = 0; //Êı¾İ¿é¸öÊı
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 116


2765:../user/source/DLT645.c ****     uint16_t length = pucbuffer[9];
2766:../user/source/DLT645.c ****     uint16_t ID_length = 0;
2767:../user/source/DLT645.c ****     uint32_t current = 0;
2768:../user/source/DLT645.c ****     uint16_t i = 0;
2769:../user/source/DLT645.c ****     uint32_t ABCcurrent = 0;
2770:../user/source/DLT645.c **** 
2771:../user/source/DLT645.c ****     if (pucbuffer[8] == 0x91 || pucbuffer[8] == 0xB1) //ÎŞºóĞøÖ¡£¬»ò·ÖÖ¡µÄµÚÒ»Ö¡
2772:../user/source/DLT645.c ****     {
2773:../user/source/DLT645.c ****         ID_length = 9; //Êı¾İ±êÊ¶*4 + Ê±±ê*5
2774:../user/source/DLT645.c ****     }
2775:../user/source/DLT645.c ****     if (pucbuffer[8] == 0x92 || pucbuffer[8] == 0xB2)
2776:../user/source/DLT645.c ****     {
2777:../user/source/DLT645.c ****         ID_length = 4; //Êı¾İ±êÊ¶*4 £¬ºöÂÔºóÃæµÄSEQ*1£¬Ô­ÒòÎªÕû³ı2ºó½á¹ûÒ»Ñù
2778:../user/source/DLT645.c ****     }
2779:../user/source/DLT645.c **** 
2780:../user/source/DLT645.c ****     switch (pucbuffer[10])
2781:../user/source/DLT645.c ****     {
2782:../user/source/DLT645.c ****     /*AÏàµçÁ÷*/
2783:../user/source/DLT645.c ****     case 0x34:
2784:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
2785:../user/source/DLT645.c ****         n = (length - ID_length) / 3;
2786:../user/source/DLT645.c ****         while (n--)
2787:../user/source/DLT645.c ****         {
2788:../user/source/DLT645.c ****             if (pucbuffer[10 + ID_length + 3 * n] == 0x32 || //ÊÇ3²»ÊÇ9
2789:../user/source/DLT645.c ****                 pucbuffer[11 + ID_length + 3 * n] == 0x32 ||
2790:../user/source/DLT645.c ****                 pucbuffer[12 + ID_length + 3 * n] == 0x32)
2791:../user/source/DLT645.c ****                 continue;
2792:../user/source/DLT645.c ****             /*¶ÁÈ¡µçÁ÷*/
2793:../user/source/DLT645.c ****             vGet_Current(pucbuffer[10 + ID_length + 3 * n],
2794:../user/source/DLT645.c ****                          pucbuffer[11 + ID_length + 3 * n],
2795:../user/source/DLT645.c ****                          pucbuffer[12 + ID_length + 3 * n],
2796:../user/source/DLT645.c ****                          &Acurrent);
2797:../user/source/DLT645.c ****             /*ĞŞ¸ÄµçÁ÷*/
2798:../user/source/DLT645.c ****             Acurrent.value = (Acurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT
2799:../user/source/DLT645.c ****             /*»ØĞ´µçÁ÷*/
2800:../user/source/DLT645.c ****             vPut_Current(Acurrent,
2801:../user/source/DLT645.c ****                          &pucbuffer[10 + ID_length + 3 * n],
2802:../user/source/DLT645.c ****                          &pucbuffer[11 + ID_length + 3 * n],
2803:../user/source/DLT645.c ****                          &pucbuffer[12 + ID_length + 3 * n]);
2804:../user/source/DLT645.c ****         }
2805:../user/source/DLT645.c ****         pucbuffer[length + 10] = 0;
2806:../user/source/DLT645.c ****         for (i = 0; i < (length + 10); i++)
2807:../user/source/DLT645.c ****         {
2808:../user/source/DLT645.c ****             pucbuffer[length + 10] += pucbuffer[i];
2809:../user/source/DLT645.c ****         }
2810:../user/source/DLT645.c ****         pucbuffer[length + 11] = 16;
2811:../user/source/DLT645.c **** #endif
2812:../user/source/DLT645.c ****         break;
2813:../user/source/DLT645.c ****         /*BÏàµçÁ÷*/
2814:../user/source/DLT645.c ****     case 0x35:
2815:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
2816:../user/source/DLT645.c ****         n = (length - ID_length) / 3;
2817:../user/source/DLT645.c ****         while (n--)
2818:../user/source/DLT645.c ****         {
2819:../user/source/DLT645.c ****             if (pucbuffer[10 + ID_length + 3 * n] == 0x32 ||
2820:../user/source/DLT645.c ****                 pucbuffer[11 + ID_length + 3 * n] == 0x32 ||
2821:../user/source/DLT645.c ****                 pucbuffer[12 + ID_length + 3 * n] == 0x32)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 117


2822:../user/source/DLT645.c ****                 continue;
2823:../user/source/DLT645.c ****             /*¶ÁÈ¡µçÁ÷*/
2824:../user/source/DLT645.c ****             vGet_Current(pucbuffer[10 + ID_length + 3 * n],
2825:../user/source/DLT645.c ****                          pucbuffer[11 + ID_length + 3 * n],
2826:../user/source/DLT645.c ****                          pucbuffer[12 + ID_length + 3 * n],
2827:../user/source/DLT645.c ****                          &Bcurrent);
2828:../user/source/DLT645.c ****             /*ĞŞ¸ÄµçÁ÷*/
2829:../user/source/DLT645.c ****             Bcurrent.value = (Bcurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT
2830:../user/source/DLT645.c ****                                                                                   : Bcurrent.value)
2831:../user/source/DLT645.c ****             /*»ØĞ´µçÁ÷*/
2832:../user/source/DLT645.c ****             vPut_Current(Bcurrent,
2833:../user/source/DLT645.c ****                          &pucbuffer[10 + ID_length + 3 * n],
2834:../user/source/DLT645.c ****                          &pucbuffer[11 + ID_length + 3 * n],
2835:../user/source/DLT645.c ****                          &pucbuffer[12 + ID_length + 3 * n]);
2836:../user/source/DLT645.c ****         }
2837:../user/source/DLT645.c ****         pucbuffer[length + 10] = 0;
2838:../user/source/DLT645.c ****         for (i = 0; i < (length + 10); i++)
2839:../user/source/DLT645.c ****         {
2840:../user/source/DLT645.c ****             pucbuffer[length + 10] += pucbuffer[i];
2841:../user/source/DLT645.c ****         }
2842:../user/source/DLT645.c ****         pucbuffer[length + 11] = 16;
2843:../user/source/DLT645.c **** #endif
2844:../user/source/DLT645.c ****         break;
2845:../user/source/DLT645.c ****     case 0x36: //CÏàµçÁ÷
2846:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
2847:../user/source/DLT645.c ****         n = (length - ID_length) / 3;
2848:../user/source/DLT645.c ****         while (n--)
2849:../user/source/DLT645.c ****         {
2850:../user/source/DLT645.c ****             if (pucbuffer[10 + ID_length + 9 * n] == 0x32 ||
2851:../user/source/DLT645.c ****                 pucbuffer[11 + ID_length + 9 * n] == 0x32 ||
2852:../user/source/DLT645.c ****                 pucbuffer[12 + ID_length + 9 * n] == 0x32)
2853:../user/source/DLT645.c ****                 continue;
2854:../user/source/DLT645.c ****             /*¶ÁÈ¡µçÁ÷*/
2855:../user/source/DLT645.c ****             vGet_Current(pucbuffer[10 + ID_length + 3 * n],
2856:../user/source/DLT645.c ****                          pucbuffer[11 + ID_length + 3 * n],
2857:../user/source/DLT645.c ****                          pucbuffer[12 + ID_length + 3 * n],
2858:../user/source/DLT645.c ****                          &Ccurrent);
2859:../user/source/DLT645.c ****             /*ĞŞ¸ÄµçÁ÷*/
2860:../user/source/DLT645.c ****             Ccurrent.value = (Ccurrent.value > (TransFormer.CT2_CurrentLimit / 3) ? (TransFormer.CT
2861:../user/source/DLT645.c ****             /*»ØĞ´µçÁ÷*/
2862:../user/source/DLT645.c ****             vPut_Current(Ccurrent,
2863:../user/source/DLT645.c ****                          &pucbuffer[10 + ID_length + 3 * n],
2864:../user/source/DLT645.c ****                          &pucbuffer[11 + ID_length + 3 * n],
2865:../user/source/DLT645.c ****                          &pucbuffer[12 + ID_length + 3 * n]);
2866:../user/source/DLT645.c ****         }
2867:../user/source/DLT645.c ****         pucbuffer[length + 10] = 0;
2868:../user/source/DLT645.c ****         for (i = 0; i < (length + 10); i++)
2869:../user/source/DLT645.c ****         {
2870:../user/source/DLT645.c ****             pucbuffer[length + 10] += pucbuffer[i];
2871:../user/source/DLT645.c ****         }
2872:../user/source/DLT645.c ****         pucbuffer[length + 11] = 16;
2873:../user/source/DLT645.c **** #endif
2874:../user/source/DLT645.c ****         break;
2875:../user/source/DLT645.c ****     case 0x32: //¿éµçÁ÷
2876:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_DEVIATION
2877:../user/source/DLT645.c ****         n = (length - ID_length) / 9; //Êı¾İµã¸öÊı
2878:../user/source/DLT645.c ****         while (n--)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 118


2879:../user/source/DLT645.c ****         {
2880:../user/source/DLT645.c ****             vGet_Current(pucbuffer[10 + ID_length + 9 * n],
2881:../user/source/DLT645.c ****                          pucbuffer[11 + ID_length + 9 * n],
2882:../user/source/DLT645.c ****                          pucbuffer[12 + ID_length + 9 * n],
2883:../user/source/DLT645.c ****                          &Acurrent);
2884:../user/source/DLT645.c **** 
2885:../user/source/DLT645.c ****             vGet_Current(pucbuffer[13 + ID_length + 9 * n],
2886:../user/source/DLT645.c ****                          pucbuffer[14 + ID_length + 9 * n],
2887:../user/source/DLT645.c ****                          pucbuffer[15 + ID_length + 9 * n],
2888:../user/source/DLT645.c ****                          &Bcurrent);
2889:../user/source/DLT645.c **** 
2890:../user/source/DLT645.c ****             vGet_Current(pucbuffer[16 + ID_length + 9 * n],
2891:../user/source/DLT645.c ****                          pucbuffer[17 + ID_length + 9 * n],
2892:../user/source/DLT645.c ****                          pucbuffer[18 + ID_length + 9 * n],
2893:../user/source/DLT645.c ****                          &Ccurrent);
2894:../user/source/DLT645.c **** 
2895:../user/source/DLT645.c ****             //µçÁ÷Îª¸ºÖµ,²»ĞŞ¸ÄµçÁ÷
2896:../user/source/DLT645.c ****             if (Acurrent.isminus || Bcurrent.isminus || Ccurrent.isminus)
2897:../user/source/DLT645.c ****                 continue;
2898:../user/source/DLT645.c ****             //µçÁ÷Îª0£¬²»ĞŞ¸ÄµçÁ÷
2899:../user/source/DLT645.c ****             if ((Acurrent.value == 0) || (Bcurrent.value == 0) || (Ccurrent.value == 0))
2900:../user/source/DLT645.c ****                 continue;
2901:../user/source/DLT645.c ****             //µçÁ÷Ïà»¥Ö®¼ä²»³¬²î£¬²»ĞŞ¸ÄµçÁ÷
2902:../user/source/DLT645.c ****             if (CURRENT_MAX_DVALUE * MAX(Acurrent.value, MAX(Bcurrent.value, Ccurrent.value)) / 100
2903:../user/source/DLT645.c ****                 MIN(Acurrent.value, MIN(Bcurrent.value, Ccurrent.value)))
2904:../user/source/DLT645.c ****                 continue;
2905:../user/source/DLT645.c ****             else //ĞèÒªĞŞ¸Ä£¬×î´óÖµ¼õĞ¡£¬×îĞ¡ÖµÔö´ó£¬Ê£ÏÂµÄÊÇÖĞ¼äÖµ
2906:../user/source/DLT645.c ****             {
2907:../user/source/DLT645.c ****                 if ((Acurrent.value >= Bcurrent.value) &&
2908:../user/source/DLT645.c ****                     (Bcurrent.value >= Ccurrent.value))
2909:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Acurrent, &Bcurrent, &Ccurrent);
2910:../user/source/DLT645.c **** 
2911:../user/source/DLT645.c ****                 else if ((Acurrent.value >= Ccurrent.value) &&
2912:../user/source/DLT645.c ****                          (Ccurrent.value >= Bcurrent.value))
2913:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Acurrent, &Ccurrent, &Bcurrent);
2914:../user/source/DLT645.c **** 
2915:../user/source/DLT645.c ****                 else if ((Bcurrent.value >= Acurrent.value) &&
2916:../user/source/DLT645.c ****                          (Acurrent.value >= Ccurrent.value))
2917:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Bcurrent, &Acurrent, &Ccurrent);
2918:../user/source/DLT645.c **** 
2919:../user/source/DLT645.c ****                 else if ((Bcurrent.value >= Ccurrent.value) &&
2920:../user/source/DLT645.c ****                          (Ccurrent.value >= Acurrent.value))
2921:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Bcurrent, &Ccurrent, &Acurrent);
2922:../user/source/DLT645.c **** 
2923:../user/source/DLT645.c ****                 else if ((Ccurrent.value >= Acurrent.value) &&
2924:../user/source/DLT645.c ****                          (Acurrent.value >= Bcurrent.value))
2925:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Ccurrent, &Acurrent, &Bcurrent);
2926:../user/source/DLT645.c **** 
2927:../user/source/DLT645.c ****                 else if ((Ccurrent.value >= Bcurrent.value) &&
2928:../user/source/DLT645.c ****                          (Bcurrent.value >= Acurrent.value))
2929:../user/source/DLT645.c ****                     vCurrentTriple_Modify_Method(&Ccurrent, &Bcurrent, &Acurrent);
2930:../user/source/DLT645.c ****                 /*»ØĞ´µçÁ÷*/
2931:../user/source/DLT645.c ****                 vPut_Current(Acurrent,
2932:../user/source/DLT645.c ****                              &pucbuffer[10 + ID_length + 9 * n],
2933:../user/source/DLT645.c ****                              &pucbuffer[11 + ID_length + 9 * n],
2934:../user/source/DLT645.c ****                              &pucbuffer[12 + ID_length + 9 * n]);
2935:../user/source/DLT645.c **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 119


2936:../user/source/DLT645.c ****                 vPut_Current(Bcurrent,
2937:../user/source/DLT645.c ****                              &pucbuffer[14 + ID_length + 9 * n],
2938:../user/source/DLT645.c ****                              &pucbuffer[15 + ID_length + 9 * n],
2939:../user/source/DLT645.c ****                              &pucbuffer[16 + ID_length + 9 * n]);
2940:../user/source/DLT645.c **** 
2941:../user/source/DLT645.c ****                 vPut_Current(Ccurrent,
2942:../user/source/DLT645.c ****                              &pucbuffer[17 + ID_length + 9 * n],
2943:../user/source/DLT645.c ****                              &pucbuffer[18 + ID_length + 9 * n],
2944:../user/source/DLT645.c ****                              &pucbuffer[19 + ID_length + 9 * n]);
2945:../user/source/DLT645.c ****             }
2946:../user/source/DLT645.c ****         }
2947:../user/source/DLT645.c ****         pucbuffer[length + 10] = 0;
2948:../user/source/DLT645.c ****         for (i = 0; i < length + 10; i++)
2949:../user/source/DLT645.c ****         {
2950:../user/source/DLT645.c ****             pucbuffer[length + 10] += pucbuffer[i];
2951:../user/source/DLT645.c ****         }
2952:../user/source/DLT645.c ****         pucbuffer[length + 11] = 0x16;
2953:../user/source/DLT645.c **** #endif
2954:../user/source/DLT645.c **** #ifdef ENABLE_CURRENT_LIMIT
2955:../user/source/DLT645.c ****         n = (length - ID_length) / 9; //Êı¾İµã¸öÊı
2956:../user/source/DLT645.c ****         while (n--)
2957:../user/source/DLT645.c ****         {
2958:../user/source/DLT645.c ****             /*FFÎŞĞ§Êı¾İ*/
2959:../user/source/DLT645.c ****             if (pucbuffer[10 + ID_length + 9 * n] == 0x32 ||
2960:../user/source/DLT645.c ****                 pucbuffer[11 + ID_length + 9 * n] == 0x32 ||
2961:../user/source/DLT645.c ****                 pucbuffer[12 + ID_length + 9 * n] == 0x32 ||
2962:../user/source/DLT645.c ****                 pucbuffer[13 + ID_length + 9 * n] == 0x32 ||
2963:../user/source/DLT645.c ****                 pucbuffer[14 + ID_length + 9 * n] == 0x32 ||
2964:../user/source/DLT645.c ****                 pucbuffer[15 + ID_length + 9 * n] == 0x32 ||
2965:../user/source/DLT645.c ****                 pucbuffer[16 + ID_length + 9 * n] == 0x32 ||
2966:../user/source/DLT645.c ****                 pucbuffer[17 + ID_length + 9 * n] == 0x32 ||
2967:../user/source/DLT645.c ****                 pucbuffer[18 + ID_length + 9 * n] == 0x32)
2968:../user/source/DLT645.c ****                 continue;
2969:../user/source/DLT645.c **** 
2970:../user/source/DLT645.c ****             /*¶ÁÈ¡µçÁ÷*/
2971:../user/source/DLT645.c ****             vGet_Current(pucbuffer[10 + ID_length + 9 * n],
2972:../user/source/DLT645.c ****                          pucbuffer[11 + ID_length + 9 * n],
2973:../user/source/DLT645.c ****                          pucbuffer[12 + ID_length + 9 * n],
2974:../user/source/DLT645.c ****                          &Acurrent);
2975:../user/source/DLT645.c ****             vGet_Current(pucbuffer[13 + ID_length + 9 * n],
2976:../user/source/DLT645.c ****                          pucbuffer[14 + ID_length + 9 * n],
2977:../user/source/DLT645.c ****                          pucbuffer[15 + ID_length + 9 * n],
2978:../user/source/DLT645.c ****                          &Bcurrent);
2979:../user/source/DLT645.c ****             vGet_Current(pucbuffer[16 + ID_length + 9 * n],
2980:../user/source/DLT645.c ****                          pucbuffer[17 + ID_length + 9 * n],
2981:../user/source/DLT645.c ****                          pucbuffer[18 + ID_length + 9 * n],
2982:../user/source/DLT645.c ****                          &Ccurrent);
2983:../user/source/DLT645.c **** 
2984:../user/source/DLT645.c ****             ABCcurrent = Acurrent.value + Bcurrent.value + Ccurrent.value;
2985:../user/source/DLT645.c ****             if (ABCcurrent > TransFormer.CT2_CurrentLimit)
2986:../user/source/DLT645.c ****             {
2987:../user/source/DLT645.c ****                 Acurrent.value = TransFormer.CT2_CurrentLimit * Acurrent.value / ABCcurrent;
2988:../user/source/DLT645.c ****                 Bcurrent.value = TransFormer.CT2_CurrentLimit * Bcurrent.value / ABCcurrent;
2989:../user/source/DLT645.c ****                 Ccurrent.value = TransFormer.CT2_CurrentLimit * Ccurrent.value / ABCcurrent;
2990:../user/source/DLT645.c ****             }
2991:../user/source/DLT645.c ****             /*±£Ö¤Ã¿µ¥ÏàµçÁ÷²»ÖØÔØ*/
2992:../user/source/DLT645.c ****             Acurrent.value = (Acurrent.value > (TransFormer.CT2_CurrentLimit / 3)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 120


2993:../user/source/DLT645.c ****                                   ? (TransFormer.CT2_CurrentLimit / 3)
2994:../user/source/DLT645.c ****                                   : Acurrent.value);
2995:../user/source/DLT645.c ****             Bcurrent.value = (Bcurrent.value > (TransFormer.CT2_CurrentLimit / 3)
2996:../user/source/DLT645.c ****                                   ? (TransFormer.CT2_CurrentLimit / 3)
2997:../user/source/DLT645.c ****                                   : Bcurrent.value);
2998:../user/source/DLT645.c ****             Ccurrent.value = (Ccurrent.value > (TransFormer.CT2_CurrentLimit / 3)
2999:../user/source/DLT645.c ****                                   ? (TransFormer.CT2_CurrentLimit / 3)
3000:../user/source/DLT645.c ****                                   : Ccurrent.value);
3001:../user/source/DLT645.c ****             /*»ØĞ´µçÁ÷*/
3002:../user/source/DLT645.c ****             vPut_Current(Acurrent,
3003:../user/source/DLT645.c ****                          &pucbuffer[10 + ID_length + 9 * n],
3004:../user/source/DLT645.c ****                          &pucbuffer[11 + ID_length + 9 * n],
3005:../user/source/DLT645.c ****                          &pucbuffer[12 + ID_length + 9 * n]);
3006:../user/source/DLT645.c ****             vPut_Current(Bcurrent,
3007:../user/source/DLT645.c ****                          &pucbuffer[13 + ID_length + 9 * n],
3008:../user/source/DLT645.c ****                          &pucbuffer[14 + ID_length + 9 * n],
3009:../user/source/DLT645.c ****                          &pucbuffer[15 + ID_length + 9 * n]);
3010:../user/source/DLT645.c ****             vPut_Current(Ccurrent,
3011:../user/source/DLT645.c ****                          &pucbuffer[16 + ID_length + 9 * n],
3012:../user/source/DLT645.c ****                          &pucbuffer[17 + ID_length + 9 * n],
3013:../user/source/DLT645.c ****                          &pucbuffer[18 + ID_length + 9 * n]);
3014:../user/source/DLT645.c ****         }
3015:../user/source/DLT645.c ****         pucbuffer[length + 10] = 0;
3016:../user/source/DLT645.c ****         for (i = 0; i < length + 10; i++)
3017:../user/source/DLT645.c ****         {
3018:../user/source/DLT645.c ****             pucbuffer[length + 10] += pucbuffer[i];
3019:../user/source/DLT645.c ****         }
3020:../user/source/DLT645.c ****         pucbuffer[length + 11] = 0x16;
3021:../user/source/DLT645.c **** #endif
3022:../user/source/DLT645.c ****         break;
3023:../user/source/DLT645.c ****     default:
3024:../user/source/DLT645.c ****         break;
3025:../user/source/DLT645.c ****     }
3026:../user/source/DLT645.c **** }
3027:../user/source/DLT645.c **** 
3028:../user/source/DLT645.c **** /*
3029:../user/source/DLT645.c **** ½­Î÷£º01
3030:../user/source/DLT645.c **** É½¶«£º02
3031:../user/source/DLT645.c **** ÖØÇì£º03
3032:../user/source/DLT645.c **** */
3033:../user/source/DLT645.c **** void vRead_Version(uint8_t *pucbuffer)
3034:../user/source/DLT645.c **** {
 3528              		.loc 1 3034 0
 3529              		.cfi_startproc
 3530              		@ args = 0, pretend = 0, frame = 0
 3531              		@ frame_needed = 0, uses_anonymous_args = 0
 3532              	.LVL430:
 3533 0000 38B5     		push	{r3, r4, r5, lr}
 3534              	.LCFI33:
 3535              		.cfi_def_cfa_offset 16
 3536              		.cfi_offset 3, -16
 3537              		.cfi_offset 4, -12
 3538              		.cfi_offset 5, -8
 3539              		.cfi_offset 14, -4
 3540 0002 0446     		mov	r4, r0
3035:../user/source/DLT645.c ****     uint8_t i;
3036:../user/source/DLT645.c ****     pucbuffer[8] = 0x91;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 121


 3541              		.loc 1 3036 0
 3542 0004 9123     		movs	r3, #145
 3543 0006 0372     		strb	r3, [r0, #8]
3037:../user/source/DLT645.c ****     pucbuffer[9] = 0x08;
 3544              		.loc 1 3037 0
 3545 0008 0823     		movs	r3, #8
 3546 000a 4372     		strb	r3, [r0, #9]
3038:../user/source/DLT645.c ****     pucbuffer[14] = 0x03; //µØÇø
 3547              		.loc 1 3038 0
 3548 000c 0323     		movs	r3, #3
 3549 000e 8373     		strb	r3, [r0, #14]
3039:../user/source/DLT645.c ****     pucbuffer[15] = 0x05; //ÈÕÔÂÄê
 3550              		.loc 1 3039 0
 3551 0010 0523     		movs	r3, #5
 3552 0012 C373     		strb	r3, [r0, #15]
3040:../user/source/DLT645.c ****     pucbuffer[16] = 0x11;
 3553              		.loc 1 3040 0
 3554 0014 1123     		movs	r3, #17
 3555 0016 0374     		strb	r3, [r0, #16]
3041:../user/source/DLT645.c ****     pucbuffer[17] = 0x18;
 3556              		.loc 1 3041 0
 3557 0018 1823     		movs	r3, #24
 3558 001a 4374     		strb	r3, [r0, #17]
3042:../user/source/DLT645.c ****     pucbuffer[18] = 0;
 3559              		.loc 1 3042 0
 3560 001c 0023     		movs	r3, #0
 3561 001e 8374     		strb	r3, [r0, #18]
 3562              	.LVL431:
3043:../user/source/DLT645.c ****     for (i = 0; i < 18; i++)
 3563              		.loc 1 3043 0
 3564 0020 05E0     		b	.L217
 3565              	.LVL432:
 3566              	.L218:
3044:../user/source/DLT645.c ****     {
3045:../user/source/DLT645.c ****         pucbuffer[18] += pucbuffer[i];
 3567              		.loc 1 3045 0 discriminator 3
 3568 0022 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3569 0024 A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 3570 0026 0A44     		add	r2, r2, r1
 3571 0028 A274     		strb	r2, [r4, #18]
3043:../user/source/DLT645.c ****     for (i = 0; i < 18; i++)
 3572              		.loc 1 3043 0 discriminator 3
 3573 002a 0133     		adds	r3, r3, #1
 3574              	.LVL433:
 3575 002c DBB2     		uxtb	r3, r3
 3576              	.LVL434:
 3577              	.L217:
3043:../user/source/DLT645.c ****     for (i = 0; i < 18; i++)
 3578              		.loc 1 3043 0 is_stmt 0 discriminator 1
 3579 002e 112B     		cmp	r3, #17
 3580 0030 F7D9     		bls	.L218
3046:../user/source/DLT645.c ****     }
3047:../user/source/DLT645.c ****     pucbuffer[19] = 0x16;
 3581              		.loc 1 3047 0 is_stmt 1
 3582 0032 1623     		movs	r3, #22
 3583              	.LVL435:
 3584 0034 E374     		strb	r3, [r4, #19]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 122


3048:../user/source/DLT645.c ****     uc645DataDomainLength = 8;
 3585              		.loc 1 3048 0
 3586 0036 0822     		movs	r2, #8
 3587 0038 144B     		ldr	r3, .L222
 3588 003a 1A70     		strb	r2, [r3]
3049:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, pUartDB->pSndbuf, 20);
 3589              		.loc 1 3049 0
 3590 003c 144D     		ldr	r5, .L222+4
 3591 003e 2B68     		ldr	r3, [r5]
 3592 0040 1422     		movs	r2, #20
 3593 0042 9968     		ldr	r1, [r3, #8]
 3594 0044 2046     		mov	r0, r4
 3595              	.LVL436:
 3596 0046 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3597              	.LVL437:
3050:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 3598              		.loc 1 3050 0
 3599 004a 2B68     		ldr	r3, [r5]
 3600 004c 9868     		ldr	r0, [r3, #8]
 3601 004e FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3602              	.LVL438:
 3603 0052 10B9     		cbnz	r0, .L219
3051:../user/source/DLT645.c ****     {
3052:../user/source/DLT645.c ****         Uart_DataPut(USART3);
 3604              		.loc 1 3052 0
 3605 0054 0F48     		ldr	r0, .L222+8
 3606 0056 FFF7FEFF 		bl	Uart_DataPut
 3607              	.LVL439:
 3608              	.L219:
3053:../user/source/DLT645.c ****     }
3054:../user/source/DLT645.c ****     /*ºìÍâ¿Ú»Ø¸´*/
3055:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, pUartIR->pSndbuf, 20);
 3609              		.loc 1 3055 0
 3610 005a 0F4D     		ldr	r5, .L222+12
 3611 005c 2B68     		ldr	r3, [r5]
 3612 005e 1422     		movs	r2, #20
 3613 0060 9968     		ldr	r1, [r3, #8]
 3614 0062 2046     		mov	r0, r4
 3615 0064 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3616              	.LVL440:
3056:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 3617              		.loc 1 3056 0
 3618 0068 2B68     		ldr	r3, [r5]
 3619 006a 9868     		ldr	r0, [r3, #8]
 3620 006c FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3621              	.LVL441:
 3622 0070 50B9     		cbnz	r0, .L216
3057:../user/source/DLT645.c ****     {
3058:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
 3623              		.loc 1 3058 0
 3624 0072 0A4C     		ldr	r4, .L222+16
 3625              	.LVL442:
 3626 0074 0022     		movs	r2, #0
 3627 0076 0A49     		ldr	r1, .L222+20
 3628 0078 2046     		mov	r0, r4
 3629 007a FFF7FEFF 		bl	USART_ITConfig
 3630              	.LVL443:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 123


3059:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3631              		.loc 1 3059 0
 3632 007e 0122     		movs	r2, #1
 3633 0080 0849     		ldr	r1, .L222+24
 3634 0082 2046     		mov	r0, r4
 3635 0084 FFF7FEFF 		bl	USART_ITConfig
 3636              	.LVL444:
 3637              	.L216:
 3638 0088 38BD     		pop	{r3, r4, r5, pc}
 3639              	.L223:
 3640 008a 00BF     		.align	2
 3641              	.L222:
 3642 008c 00000000 		.word	.LANCHOR0
 3643 0090 00000000 		.word	.LANCHOR6
 3644 0094 00480040 		.word	1073760256
 3645 0098 00000000 		.word	.LANCHOR7
 3646 009c 00440040 		.word	1073759232
 3647 00a0 05010500 		.word	327941
 3648 00a4 07010700 		.word	459015
 3649              		.cfi_endproc
 3650              	.LFE163:
 3652              		.section	.text.vEnergy_Modify_RaitoSet,"ax",%progbits
 3653              		.align	2
 3654              		.global	vEnergy_Modify_RaitoSet
 3655              		.thumb
 3656              		.thumb_func
 3658              	vEnergy_Modify_RaitoSet:
 3659              	.LFB153:
2351:../user/source/DLT645.c ****     uint8_t ratio;
 3660              		.loc 1 2351 0
 3661              		.cfi_startproc
 3662              		@ args = 0, pretend = 0, frame = 0
 3663              		@ frame_needed = 0, uses_anonymous_args = 0
 3664              	.LVL445:
 3665 0000 70B5     		push	{r4, r5, r6, lr}
 3666              	.LCFI34:
 3667              		.cfi_def_cfa_offset 16
 3668              		.cfi_offset 4, -16
 3669              		.cfi_offset 5, -12
 3670              		.cfi_offset 6, -8
 3671              		.cfi_offset 14, -4
 3672 0002 0446     		mov	r4, r0
2358:../user/source/DLT645.c ****     ratioValid = (ratio > 0 && ratio <= 255);
 3673              		.loc 1 2358 0
 3674 0004 817B     		ldrb	r1, [r0, #14]	@ zero_extendqisi2
 3675 0006 0809     		lsrs	r0, r1, #4
 3676              	.LVL446:
 3677 0008 E27B     		ldrb	r2, [r4, #15]	@ zero_extendqisi2
 3678 000a 1509     		lsrs	r5, r2, #4
 3679 000c 05EB8505 		add	r5, r5, r5, lsl #2
 3680 0010 6B00     		lsls	r3, r5, #1
 3681 0012 02F00F02 		and	r2, r2, #15
 3682 0016 1344     		add	r3, r3, r2
 3683 0018 00EB8002 		add	r2, r0, r0, lsl #2
 3684 001c 5000     		lsls	r0, r2, #1
 3685 001e 03EB8303 		add	r3, r3, r3, lsl #2
 3686 0022 03EB8303 		add	r3, r3, r3, lsl #2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 124


 3687 0026 9A00     		lsls	r2, r3, #2
 3688 0028 8318     		adds	r3, r0, r2
 3689 002a 01F00F01 		and	r1, r1, #15
 3690 002e 0B44     		add	r3, r3, r1
 3691              	.LVL447:
2360:../user/source/DLT645.c ****     {
 3692              		.loc 1 2360 0
 3693 0030 13F0FF05 		ands	r5, r3, #255
 3694 0034 11D0     		beq	.L225
2362:../user/source/DLT645.c ****         ucDayfrozen_Modify_Ratio = ratio;
 3695              		.loc 1 2362 0
 3696 0036 264E     		ldr	r6, .L233
 3697 0038 2946     		mov	r1, r5
 3698 003a 3046     		mov	r0, r6
 3699 003c FFF7FEFF 		bl	Flash_Write_Word
 3700              	.LVL448:
2363:../user/source/DLT645.c ****         if (EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR) == ratio)
 3701              		.loc 1 2363 0
 3702 0040 244B     		ldr	r3, .L233+4
 3703 0042 1D70     		strb	r5, [r3]
2364:../user/source/DLT645.c ****         {
 3704              		.loc 1 2364 0
 3705 0044 3046     		mov	r0, r6
 3706 0046 FFF7FEFF 		bl	EEProm_Read
 3707              	.LVL449:
 3708 004a 8542     		cmp	r5, r0
 3709 004c 02D1     		bne	.L226
2366:../user/source/DLT645.c ****         }
 3710              		.loc 1 2366 0
 3711 004e 9423     		movs	r3, #148
 3712 0050 2372     		strb	r3, [r4, #8]
 3713 0052 04E0     		b	.L227
 3714              	.L226:
2370:../user/source/DLT645.c ****         }
 3715              		.loc 1 2370 0
 3716 0054 D423     		movs	r3, #212
 3717 0056 2372     		strb	r3, [r4, #8]
 3718 0058 01E0     		b	.L227
 3719              	.LVL450:
 3720              	.L225:
2375:../user/source/DLT645.c ****     }
 3721              		.loc 1 2375 0
 3722 005a D423     		movs	r3, #212
 3723              	.LVL451:
 3724 005c 2372     		strb	r3, [r4, #8]
 3725              	.LVL452:
 3726              	.L227:
2377:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 3727              		.loc 1 2377 0
 3728 005e 0023     		movs	r3, #0
 3729 0060 6372     		strb	r3, [r4, #9]
2378:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 3730              		.loc 1 2378 0
 3731 0062 A372     		strb	r3, [r4, #10]
 3732              	.LVL453:
2379:../user/source/DLT645.c ****     {
 3733              		.loc 1 2379 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 125


 3734 0064 05E0     		b	.L228
 3735              	.LVL454:
 3736              	.L229:
2381:../user/source/DLT645.c ****     }
 3737              		.loc 1 2381 0 discriminator 3
 3738 0066 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3739 0068 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 3740 006a 0A44     		add	r2, r2, r1
 3741 006c A272     		strb	r2, [r4, #10]
2379:../user/source/DLT645.c ****     {
 3742              		.loc 1 2379 0 discriminator 3
 3743 006e 0133     		adds	r3, r3, #1
 3744              	.LVL455:
 3745 0070 9BB2     		uxth	r3, r3
 3746              	.LVL456:
 3747              	.L228:
2379:../user/source/DLT645.c ****     {
 3748              		.loc 1 2379 0 is_stmt 0 discriminator 1
 3749 0072 092B     		cmp	r3, #9
 3750 0074 F7D9     		bls	.L229
2383:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 3751              		.loc 1 2383 0 is_stmt 1
 3752 0076 1623     		movs	r3, #22
 3753              	.LVL457:
 3754 0078 E372     		strb	r3, [r4, #11]
2385:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 3755              		.loc 1 2385 0
 3756 007a 0022     		movs	r2, #0
 3757 007c 164B     		ldr	r3, .L233+8
 3758 007e 1A70     		strb	r2, [r3]
2386:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 3759              		.loc 1 2386 0
 3760 0080 164D     		ldr	r5, .L233+12
 3761 0082 2B68     		ldr	r3, [r5]
 3762 0084 0C22     		movs	r2, #12
 3763 0086 9968     		ldr	r1, [r3, #8]
 3764 0088 2046     		mov	r0, r4
 3765 008a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3766              	.LVL458:
2387:../user/source/DLT645.c ****     {
 3767              		.loc 1 2387 0
 3768 008e 2B68     		ldr	r3, [r5]
 3769 0090 9868     		ldr	r0, [r3, #8]
 3770 0092 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3771              	.LVL459:
 3772 0096 10B9     		cbnz	r0, .L230
2389:../user/source/DLT645.c ****     }
 3773              		.loc 1 2389 0
 3774 0098 1148     		ldr	r0, .L233+16
 3775 009a FFF7FEFF 		bl	Uart_DataPut
 3776              	.LVL460:
 3777              	.L230:
2392:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 3778              		.loc 1 2392 0
 3779 009e 114D     		ldr	r5, .L233+20
 3780 00a0 2B68     		ldr	r3, [r5]
 3781 00a2 0C22     		movs	r2, #12
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 126


 3782 00a4 9968     		ldr	r1, [r3, #8]
 3783 00a6 2046     		mov	r0, r4
 3784 00a8 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3785              	.LVL461:
2393:../user/source/DLT645.c ****     {
 3786              		.loc 1 2393 0
 3787 00ac 2B68     		ldr	r3, [r5]
 3788 00ae 9868     		ldr	r0, [r3, #8]
 3789 00b0 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3790              	.LVL462:
 3791 00b4 50B9     		cbnz	r0, .L224
2395:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3792              		.loc 1 2395 0
 3793 00b6 0C4C     		ldr	r4, .L233+24
 3794              	.LVL463:
 3795 00b8 0022     		movs	r2, #0
 3796 00ba 0C49     		ldr	r1, .L233+28
 3797 00bc 2046     		mov	r0, r4
 3798 00be FFF7FEFF 		bl	USART_ITConfig
 3799              	.LVL464:
2396:../user/source/DLT645.c ****     }
 3800              		.loc 1 2396 0
 3801 00c2 0122     		movs	r2, #1
 3802 00c4 0A49     		ldr	r1, .L233+32
 3803 00c6 2046     		mov	r0, r4
 3804 00c8 FFF7FEFF 		bl	USART_ITConfig
 3805              	.LVL465:
 3806              	.L224:
 3807 00cc 70BD     		pop	{r4, r5, r6, pc}
 3808              	.L234:
 3809 00ce 00BF     		.align	2
 3810              	.L233:
 3811 00d0 10EF0108 		.word	134344464
 3812 00d4 00000000 		.word	ucDayfrozen_Modify_Ratio
 3813 00d8 00000000 		.word	.LANCHOR0
 3814 00dc 00000000 		.word	.LANCHOR6
 3815 00e0 00480040 		.word	1073760256
 3816 00e4 00000000 		.word	.LANCHOR7
 3817 00e8 00440040 		.word	1073759232
 3818 00ec 05010500 		.word	327941
 3819 00f0 07010700 		.word	459015
 3820              		.cfi_endproc
 3821              	.LFE153:
 3823              		.section	.text.vVoltage_SetMinValue,"ax",%progbits
 3824              		.align	2
 3825              		.global	vVoltage_SetMinValue
 3826              		.thumb
 3827              		.thumb_func
 3829              	vVoltage_SetMinValue:
 3830              	.LFB158:
2614:../user/source/DLT645.c ****     int VMIN = 0;
 3831              		.loc 1 2614 0
 3832              		.cfi_startproc
 3833              		@ args = 0, pretend = 0, frame = 0
 3834              		@ frame_needed = 0, uses_anonymous_args = 0
 3835              	.LVL466:
 3836 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 127


 3837              	.LCFI35:
 3838              		.cfi_def_cfa_offset 16
 3839              		.cfi_offset 4, -16
 3840              		.cfi_offset 5, -12
 3841              		.cfi_offset 6, -8
 3842              		.cfi_offset 14, -4
 3843 0002 0446     		mov	r4, r0
 3844              	.LVL467:
2617:../user/source/DLT645.c ****     if (VMIN < 2200)
 3845              		.loc 1 2617 0
 3846 0004 857B     		ldrb	r5, [r0, #14]	@ zero_extendqisi2
 3847 0006 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 3848 0008 2846     		mov	r0, r5
 3849              	.LVL468:
 3850 000a FFF7FEFF 		bl	Get_Voltage
 3851              	.LVL469:
2618:../user/source/DLT645.c ****     {
 3852              		.loc 1 2618 0
 3853 000e 40F69703 		movw	r3, #2199
 3854 0012 9842     		cmp	r0, r3
 3855 0014 1CDC     		bgt	.L236
2620:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN1_Addr, pucBuffer[14]);
 3856              		.loc 1 2620 0
 3857 0016 224B     		ldr	r3, .L243
 3858 0018 1860     		str	r0, [r3]
2621:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMIN2_Addr, pucBuffer[15]);
 3859              		.loc 1 2621 0
 3860 001a 224E     		ldr	r6, .L243+4
 3861 001c 2946     		mov	r1, r5
 3862 001e 3046     		mov	r0, r6
 3863              	.LVL470:
 3864 0020 FFF7FEFF 		bl	Flash_Write_Word
 3865              	.LVL471:
2622:../user/source/DLT645.c ****         if ((EEProm_Read(FLASH_VMIN1_Addr) == pucBuffer[14]) &&
 3866              		.loc 1 2622 0
 3867 0024 E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
 3868 0026 2048     		ldr	r0, .L243+8
 3869 0028 FFF7FEFF 		bl	Flash_Write_Word
 3870              	.LVL472:
2623:../user/source/DLT645.c ****             (EEProm_Read(FLASH_VMIN2_Addr) == pucBuffer[15]))
 3871              		.loc 1 2623 0
 3872 002c 3046     		mov	r0, r6
 3873 002e FFF7FEFF 		bl	EEProm_Read
 3874              	.LVL473:
 3875 0032 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 3876 0034 9842     		cmp	r0, r3
 3877 0036 08D1     		bne	.L237
2624:../user/source/DLT645.c ****         {
 3878              		.loc 1 2624 0 discriminator 1
 3879 0038 1B48     		ldr	r0, .L243+8
 3880 003a FFF7FEFF 		bl	EEProm_Read
 3881              	.LVL474:
 3882 003e E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
2623:../user/source/DLT645.c ****             (EEProm_Read(FLASH_VMIN2_Addr) == pucBuffer[15]))
 3883              		.loc 1 2623 0 discriminator 1
 3884 0040 9842     		cmp	r0, r3
 3885 0042 02D1     		bne	.L237
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 128


2626:../user/source/DLT645.c ****         }
 3886              		.loc 1 2626 0
 3887 0044 9423     		movs	r3, #148
 3888 0046 2372     		strb	r3, [r4, #8]
 3889 0048 04E0     		b	.L238
 3890              	.L237:
2630:../user/source/DLT645.c ****         }
 3891              		.loc 1 2630 0
 3892 004a D423     		movs	r3, #212
 3893 004c 2372     		strb	r3, [r4, #8]
 3894 004e 01E0     		b	.L238
 3895              	.LVL475:
 3896              	.L236:
2635:../user/source/DLT645.c ****     }
 3897              		.loc 1 2635 0
 3898 0050 D423     		movs	r3, #212
 3899 0052 2372     		strb	r3, [r4, #8]
 3900              	.LVL476:
 3901              	.L238:
2637:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 3902              		.loc 1 2637 0
 3903 0054 0023     		movs	r3, #0
 3904 0056 6372     		strb	r3, [r4, #9]
2638:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 3905              		.loc 1 2638 0
 3906 0058 A372     		strb	r3, [r4, #10]
2639:../user/source/DLT645.c ****     {
 3907              		.loc 1 2639 0
 3908 005a 05E0     		b	.L239
 3909              	.LVL477:
 3910              	.L240:
2641:../user/source/DLT645.c ****     }
 3911              		.loc 1 2641 0 discriminator 3
 3912 005c E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 3913 005e A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 3914 0060 0A44     		add	r2, r2, r1
 3915 0062 A272     		strb	r2, [r4, #10]
2639:../user/source/DLT645.c ****     {
 3916              		.loc 1 2639 0 discriminator 3
 3917 0064 0133     		adds	r3, r3, #1
 3918              	.LVL478:
 3919 0066 9BB2     		uxth	r3, r3
 3920              	.LVL479:
 3921              	.L239:
2639:../user/source/DLT645.c ****     {
 3922              		.loc 1 2639 0 is_stmt 0 discriminator 1
 3923 0068 092B     		cmp	r3, #9
 3924 006a F7D9     		bls	.L240
2643:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
 3925              		.loc 1 2643 0 is_stmt 1
 3926 006c 1623     		movs	r3, #22
 3927              	.LVL480:
 3928 006e E372     		strb	r3, [r4, #11]
2644:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 3929              		.loc 1 2644 0
 3930 0070 0E4D     		ldr	r5, .L243+12
 3931 0072 2B68     		ldr	r3, [r5]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 129


 3932 0074 0C22     		movs	r2, #12
 3933 0076 9968     		ldr	r1, [r3, #8]
 3934 0078 2046     		mov	r0, r4
 3935 007a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 3936              	.LVL481:
2645:../user/source/DLT645.c ****     {
 3937              		.loc 1 2645 0
 3938 007e 2B68     		ldr	r3, [r5]
 3939 0080 9868     		ldr	r0, [r3, #8]
 3940 0082 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 3941              	.LVL482:
 3942 0086 50B9     		cbnz	r0, .L235
2647:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 3943              		.loc 1 2647 0
 3944 0088 094C     		ldr	r4, .L243+16
 3945              	.LVL483:
 3946 008a 0022     		movs	r2, #0
 3947 008c 0949     		ldr	r1, .L243+20
 3948 008e 2046     		mov	r0, r4
 3949 0090 FFF7FEFF 		bl	USART_ITConfig
 3950              	.LVL484:
2648:../user/source/DLT645.c ****     }
 3951              		.loc 1 2648 0
 3952 0094 0122     		movs	r2, #1
 3953 0096 0849     		ldr	r1, .L243+24
 3954 0098 2046     		mov	r0, r4
 3955 009a FFF7FEFF 		bl	USART_ITConfig
 3956              	.LVL485:
 3957              	.L235:
 3958 009e 70BD     		pop	{r4, r5, r6, pc}
 3959              	.L244:
 3960              		.align	2
 3961              	.L243:
 3962 00a0 00000000 		.word	Voltage_MIN
 3963 00a4 08EF0108 		.word	134344456
 3964 00a8 0CEF0108 		.word	134344460
 3965 00ac 00000000 		.word	.LANCHOR7
 3966 00b0 00440040 		.word	1073759232
 3967 00b4 05010500 		.word	327941
 3968 00b8 07010700 		.word	459015
 3969              		.cfi_endproc
 3970              	.LFE158:
 3972              		.section	.text.vEnergy_Modify_ReadValue,"ax",%progbits
 3973              		.align	2
 3974              		.global	vEnergy_Modify_ReadValue
 3975              		.thumb
 3976              		.thumb_func
 3978              	vEnergy_Modify_ReadValue:
 3979              	.LFB156:
2516:../user/source/DLT645.c ****     uint8_t i;
 3980              		.loc 1 2516 0
 3981              		.cfi_startproc
 3982              		@ args = 0, pretend = 0, frame = 0
 3983              		@ frame_needed = 0, uses_anonymous_args = 0
 3984              	.LVL486:
 3985 0000 70B5     		push	{r4, r5, r6, lr}
 3986              	.LCFI36:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 130


 3987              		.cfi_def_cfa_offset 16
 3988              		.cfi_offset 4, -16
 3989              		.cfi_offset 5, -12
 3990              		.cfi_offset 6, -8
 3991              		.cfi_offset 14, -4
 3992 0002 82B0     		sub	sp, sp, #8
 3993              	.LCFI37:
 3994              		.cfi_def_cfa_offset 24
 3995 0004 0446     		mov	r4, r0
2522:../user/source/DLT645.c ****     pucbuffer[9] = 0x0C;
 3996              		.loc 1 2522 0
 3997 0006 9123     		movs	r3, #145
 3998 0008 0372     		strb	r3, [r0, #8]
2523:../user/source/DLT645.c **** 
 3999              		.loc 1 2523 0
 4000 000a 0C23     		movs	r3, #12
 4001 000c 4372     		strb	r3, [r0, #9]
2526:../user/source/DLT645.c ****     modifiedValue = Flash_Read_Word(FLASH_MODIFIED_1DAYFROZEN_ADDR);
 4002              		.loc 1 2526 0
 4003 000e 3048     		ldr	r0, .L255
 4004              	.LVL487:
 4005 0010 FFF7FEFF 		bl	Flash_Read_Word
 4006              	.LVL488:
 4007 0014 0646     		mov	r6, r0
 4008              	.LVL489:
2527:../user/source/DLT645.c ****     /*ÖÕ¶ËµÚÒ»´ÎÊ¹ÓÃ*/
 4009              		.loc 1 2527 0
 4010 0016 2F48     		ldr	r0, .L255+4
 4011              	.LVL490:
 4012 0018 FFF7FEFF 		bl	Flash_Read_Word
 4013              	.LVL491:
 4014 001c 0546     		mov	r5, r0
 4015              	.LVL492:
2529:../user/source/DLT645.c ****     {
 4016              		.loc 1 2529 0
 4017 001e B6F1FF3F 		cmp	r6, #-1
 4018 0022 00D1     		bne	.L246
2531:../user/source/DLT645.c ****     }
 4019              		.loc 1 2531 0
 4020 0024 0026     		movs	r6, #0
 4021              	.LVL493:
 4022              	.L246:
2533:../user/source/DLT645.c ****     if (modifiedValue == 0XFFFFFFFF)
 4023              		.loc 1 2533 0
 4024 0026 04F11103 		add	r3, r4, #17
 4025 002a 0093     		str	r3, [sp]
 4026 002c 04F11003 		add	r3, r4, #16
 4027 0030 04F10F02 		add	r2, r4, #15
 4028 0034 04F10E01 		add	r1, r4, #14
 4029 0038 3046     		mov	r0, r6
 4030              	.LVL494:
 4031 003a FFF7FEFF 		bl	Fill_Energy
 4032              	.LVL495:
2534:../user/source/DLT645.c ****     {
 4033              		.loc 1 2534 0
 4034 003e B5F1FF3F 		cmp	r5, #-1
 4035 0042 00D1     		bne	.L247
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 131


2536:../user/source/DLT645.c ****     }
 4036              		.loc 1 2536 0
 4037 0044 0025     		movs	r5, #0
 4038              	.LVL496:
 4039              	.L247:
2538:../user/source/DLT645.c ****     pucbuffer[22] = 0;
 4040              		.loc 1 2538 0
 4041 0046 04F11503 		add	r3, r4, #21
 4042 004a 0093     		str	r3, [sp]
 4043 004c 04F11403 		add	r3, r4, #20
 4044 0050 04F11302 		add	r2, r4, #19
 4045 0054 04F11201 		add	r1, r4, #18
 4046 0058 2846     		mov	r0, r5
 4047 005a FFF7FEFF 		bl	Fill_Energy
 4048              	.LVL497:
2539:../user/source/DLT645.c ****     for (i = 0; i < 22; i++)
 4049              		.loc 1 2539 0
 4050 005e 0023     		movs	r3, #0
 4051 0060 A375     		strb	r3, [r4, #22]
 4052              	.LVL498:
2540:../user/source/DLT645.c ****     {
 4053              		.loc 1 2540 0
 4054 0062 05E0     		b	.L248
 4055              	.LVL499:
 4056              	.L249:
2542:../user/source/DLT645.c ****     }
 4057              		.loc 1 2542 0 discriminator 3
 4058 0064 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 4059 0066 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
 4060 0068 0A44     		add	r2, r2, r1
 4061 006a A275     		strb	r2, [r4, #22]
2540:../user/source/DLT645.c ****     {
 4062              		.loc 1 2540 0 discriminator 3
 4063 006c 0133     		adds	r3, r3, #1
 4064              	.LVL500:
 4065 006e DBB2     		uxtb	r3, r3
 4066              	.LVL501:
 4067              	.L248:
2540:../user/source/DLT645.c ****     {
 4068              		.loc 1 2540 0 is_stmt 0 discriminator 1
 4069 0070 152B     		cmp	r3, #21
 4070 0072 F7D9     		bls	.L249
2544:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 4071              		.loc 1 2544 0 is_stmt 1
 4072 0074 1623     		movs	r3, #22
 4073              	.LVL502:
 4074 0076 E375     		strb	r3, [r4, #23]
2546:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucbuffer, pUartDB->pSndbuf, 24);
 4075              		.loc 1 2546 0
 4076 0078 0022     		movs	r2, #0
 4077 007a 174B     		ldr	r3, .L255+8
 4078 007c 1A70     		strb	r2, [r3]
2547:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 4079              		.loc 1 2547 0
 4080 007e 174D     		ldr	r5, .L255+12
 4081              	.LVL503:
 4082 0080 2B68     		ldr	r3, [r5]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 132


 4083 0082 1822     		movs	r2, #24
 4084 0084 9968     		ldr	r1, [r3, #8]
 4085 0086 2046     		mov	r0, r4
 4086 0088 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4087              	.LVL504:
2548:../user/source/DLT645.c ****     {
 4088              		.loc 1 2548 0
 4089 008c 2B68     		ldr	r3, [r5]
 4090 008e 9868     		ldr	r0, [r3, #8]
 4091 0090 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4092              	.LVL505:
 4093 0094 10B9     		cbnz	r0, .L250
2550:../user/source/DLT645.c ****     }
 4094              		.loc 1 2550 0
 4095 0096 1248     		ldr	r0, .L255+16
 4096 0098 FFF7FEFF 		bl	Uart_DataPut
 4097              	.LVL506:
 4098              	.L250:
2553:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 4099              		.loc 1 2553 0
 4100 009c 114D     		ldr	r5, .L255+20
 4101 009e 2B68     		ldr	r3, [r5]
 4102 00a0 1822     		movs	r2, #24
 4103 00a2 9968     		ldr	r1, [r3, #8]
 4104 00a4 2046     		mov	r0, r4
 4105 00a6 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4106              	.LVL507:
2554:../user/source/DLT645.c ****     {
 4107              		.loc 1 2554 0
 4108 00aa 2B68     		ldr	r3, [r5]
 4109 00ac 9868     		ldr	r0, [r3, #8]
 4110 00ae FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4111              	.LVL508:
 4112 00b2 50B9     		cbnz	r0, .L245
2556:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 4113              		.loc 1 2556 0
 4114 00b4 0C4C     		ldr	r4, .L255+24
 4115              	.LVL509:
 4116 00b6 0022     		movs	r2, #0
 4117 00b8 0C49     		ldr	r1, .L255+28
 4118 00ba 2046     		mov	r0, r4
 4119 00bc FFF7FEFF 		bl	USART_ITConfig
 4120              	.LVL510:
2557:../user/source/DLT645.c ****     }
 4121              		.loc 1 2557 0
 4122 00c0 0122     		movs	r2, #1
 4123 00c2 0B49     		ldr	r1, .L255+32
 4124 00c4 2046     		mov	r0, r4
 4125 00c6 FFF7FEFF 		bl	USART_ITConfig
 4126              	.LVL511:
 4127              	.L245:
2559:../user/source/DLT645.c **** 
 4128              		.loc 1 2559 0
 4129 00ca 02B0     		add	sp, sp, #8
 4130              	.LCFI38:
 4131              		.cfi_def_cfa_offset 16
 4132              		@ sp needed
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 133


 4133 00cc 70BD     		pop	{r4, r5, r6, pc}
 4134              	.LVL512:
 4135              	.L256:
 4136 00ce 00BF     		.align	2
 4137              	.L255:
 4138 00d0 00F00108 		.word	134344704
 4139 00d4 3CF00108 		.word	134344764
 4140 00d8 00000000 		.word	.LANCHOR0
 4141 00dc 00000000 		.word	.LANCHOR6
 4142 00e0 00480040 		.word	1073760256
 4143 00e4 00000000 		.word	.LANCHOR7
 4144 00e8 00440040 		.word	1073759232
 4145 00ec 05010500 		.word	327941
 4146 00f0 07010700 		.word	459015
 4147              		.cfi_endproc
 4148              	.LFE156:
 4150              		.section	.text.vVoltage_SetMaxValue,"ax",%progbits
 4151              		.align	2
 4152              		.global	vVoltage_SetMaxValue
 4153              		.thumb
 4154              		.thumb_func
 4156              	vVoltage_SetMaxValue:
 4157              	.LFB157:
2569:../user/source/DLT645.c ****     int VMAX = 0;
 4158              		.loc 1 2569 0
 4159              		.cfi_startproc
 4160              		@ args = 0, pretend = 0, frame = 0
 4161              		@ frame_needed = 0, uses_anonymous_args = 0
 4162              	.LVL513:
 4163 0000 70B5     		push	{r4, r5, r6, lr}
 4164              	.LCFI39:
 4165              		.cfi_def_cfa_offset 16
 4166              		.cfi_offset 4, -16
 4167              		.cfi_offset 5, -12
 4168              		.cfi_offset 6, -8
 4169              		.cfi_offset 14, -4
 4170 0002 0446     		mov	r4, r0
 4171              	.LVL514:
2572:../user/source/DLT645.c ****     if (VMAX > 2200)
 4172              		.loc 1 2572 0
 4173 0004 857B     		ldrb	r5, [r0, #14]	@ zero_extendqisi2
 4174 0006 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 4175 0008 2846     		mov	r0, r5
 4176              	.LVL515:
 4177 000a FFF7FEFF 		bl	Get_Voltage
 4178              	.LVL516:
2573:../user/source/DLT645.c ****     {
 4179              		.loc 1 2573 0
 4180 000e 40F69803 		movw	r3, #2200
 4181 0012 9842     		cmp	r0, r3
 4182 0014 1EDD     		ble	.L258
2575:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX1_Addr, pucBuffer[14]);
 4183              		.loc 1 2575 0
 4184 0016 234B     		ldr	r3, .L265
 4185 0018 1860     		str	r0, [r3]
2576:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_VMAX2_Addr, pucBuffer[15]);
 4186              		.loc 1 2576 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 134


 4187 001a 234E     		ldr	r6, .L265+4
 4188 001c 2946     		mov	r1, r5
 4189 001e 3046     		mov	r0, r6
 4190              	.LVL517:
 4191 0020 FFF7FEFF 		bl	Flash_Write_Word
 4192              	.LVL518:
2577:../user/source/DLT645.c ****         if (((uint8_t)Flash_Read_Word(FLASH_VMAX1_Addr) == pucBuffer[14]) &&
 4193              		.loc 1 2577 0
 4194 0024 E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
 4195 0026 2148     		ldr	r0, .L265+8
 4196 0028 FFF7FEFF 		bl	Flash_Write_Word
 4197              	.LVL519:
2578:../user/source/DLT645.c ****             ((uint8_t)Flash_Read_Word(FLASH_VMAX2_Addr) == pucBuffer[15]))
 4198              		.loc 1 2578 0
 4199 002c 3046     		mov	r0, r6
 4200 002e FFF7FEFF 		bl	Flash_Read_Word
 4201              	.LVL520:
 4202 0032 C0B2     		uxtb	r0, r0
 4203 0034 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 4204 0036 9842     		cmp	r0, r3
 4205 0038 09D1     		bne	.L259
2579:../user/source/DLT645.c ****         {
 4206              		.loc 1 2579 0 discriminator 1
 4207 003a 1C48     		ldr	r0, .L265+8
 4208 003c FFF7FEFF 		bl	Flash_Read_Word
 4209              	.LVL521:
 4210 0040 C0B2     		uxtb	r0, r0
 4211 0042 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
2578:../user/source/DLT645.c ****             ((uint8_t)Flash_Read_Word(FLASH_VMAX2_Addr) == pucBuffer[15]))
 4212              		.loc 1 2578 0 discriminator 1
 4213 0044 9842     		cmp	r0, r3
 4214 0046 02D1     		bne	.L259
2581:../user/source/DLT645.c ****         }
 4215              		.loc 1 2581 0
 4216 0048 9423     		movs	r3, #148
 4217 004a 2372     		strb	r3, [r4, #8]
 4218 004c 04E0     		b	.L260
 4219              	.L259:
2585:../user/source/DLT645.c ****         }
 4220              		.loc 1 2585 0
 4221 004e D423     		movs	r3, #212
 4222 0050 2372     		strb	r3, [r4, #8]
 4223 0052 01E0     		b	.L260
 4224              	.LVL522:
 4225              	.L258:
2590:../user/source/DLT645.c ****     }
 4226              		.loc 1 2590 0
 4227 0054 D423     		movs	r3, #212
 4228 0056 2372     		strb	r3, [r4, #8]
 4229              	.LVL523:
 4230              	.L260:
2592:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 4231              		.loc 1 2592 0
 4232 0058 0023     		movs	r3, #0
 4233 005a 6372     		strb	r3, [r4, #9]
2593:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 4234              		.loc 1 2593 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 135


 4235 005c A372     		strb	r3, [r4, #10]
2594:../user/source/DLT645.c ****     {
 4236              		.loc 1 2594 0
 4237 005e 05E0     		b	.L261
 4238              	.LVL524:
 4239              	.L262:
2596:../user/source/DLT645.c ****     }
 4240              		.loc 1 2596 0 discriminator 3
 4241 0060 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 4242 0062 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 4243 0064 0A44     		add	r2, r2, r1
 4244 0066 A272     		strb	r2, [r4, #10]
2594:../user/source/DLT645.c ****     {
 4245              		.loc 1 2594 0 discriminator 3
 4246 0068 0133     		adds	r3, r3, #1
 4247              	.LVL525:
 4248 006a 9BB2     		uxth	r3, r3
 4249              	.LVL526:
 4250              	.L261:
2594:../user/source/DLT645.c ****     {
 4251              		.loc 1 2594 0 is_stmt 0 discriminator 1
 4252 006c 092B     		cmp	r3, #9
 4253 006e F7D9     		bls	.L262
2598:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartIR->pSndbuf, 12);
 4254              		.loc 1 2598 0 is_stmt 1
 4255 0070 1623     		movs	r3, #22
 4256              	.LVL527:
 4257 0072 E372     		strb	r3, [r4, #11]
2599:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 4258              		.loc 1 2599 0
 4259 0074 0E4D     		ldr	r5, .L265+12
 4260 0076 2B68     		ldr	r3, [r5]
 4261 0078 0C22     		movs	r2, #12
 4262 007a 9968     		ldr	r1, [r3, #8]
 4263 007c 2046     		mov	r0, r4
 4264 007e FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4265              	.LVL528:
2600:../user/source/DLT645.c ****     {
 4266              		.loc 1 2600 0
 4267 0082 2B68     		ldr	r3, [r5]
 4268 0084 9868     		ldr	r0, [r3, #8]
 4269 0086 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4270              	.LVL529:
 4271 008a 50B9     		cbnz	r0, .L257
2602:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 4272              		.loc 1 2602 0
 4273 008c 094C     		ldr	r4, .L265+16
 4274              	.LVL530:
 4275 008e 0022     		movs	r2, #0
 4276 0090 0949     		ldr	r1, .L265+20
 4277 0092 2046     		mov	r0, r4
 4278 0094 FFF7FEFF 		bl	USART_ITConfig
 4279              	.LVL531:
2603:../user/source/DLT645.c ****     }
 4280              		.loc 1 2603 0
 4281 0098 0122     		movs	r2, #1
 4282 009a 0849     		ldr	r1, .L265+24
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 136


 4283 009c 2046     		mov	r0, r4
 4284 009e FFF7FEFF 		bl	USART_ITConfig
 4285              	.LVL532:
 4286              	.L257:
 4287 00a2 70BD     		pop	{r4, r5, r6, pc}
 4288              	.L266:
 4289              		.align	2
 4290              	.L265:
 4291 00a4 00000000 		.word	Voltage_MAX
 4292 00a8 00EF0108 		.word	134344448
 4293 00ac 04EF0108 		.word	134344452
 4294 00b0 00000000 		.word	.LANCHOR7
 4295 00b4 00440040 		.word	1073759232
 4296 00b8 05010500 		.word	327941
 4297 00bc 07010700 		.word	459015
 4298              		.cfi_endproc
 4299              	.LFE157:
 4301              		.section	.text.vEnergy_Modify_AbleSet,"ax",%progbits
 4302              		.align	2
 4303              		.global	vEnergy_Modify_AbleSet
 4304              		.thumb
 4305              		.thumb_func
 4307              	vEnergy_Modify_AbleSet:
 4308              	.LFB152:
2293:../user/source/DLT645.c ****     uint16_t i;
 4309              		.loc 1 2293 0
 4310              		.cfi_startproc
 4311              		@ args = 0, pretend = 0, frame = 0
 4312              		@ frame_needed = 0, uses_anonymous_args = 0
 4313              	.LVL533:
 4314 0000 70B5     		push	{r4, r5, r6, lr}
 4315              	.LCFI40:
 4316              		.cfi_def_cfa_offset 16
 4317              		.cfi_offset 4, -16
 4318              		.cfi_offset 5, -12
 4319              		.cfi_offset 6, -8
 4320              		.cfi_offset 14, -4
 4321 0002 0446     		mov	r4, r0
2295:../user/source/DLT645.c ****     {
 4322              		.loc 1 2295 0
 4323 0004 817B     		ldrb	r1, [r0, #14]	@ zero_extendqisi2
 4324 0006 FF29     		cmp	r1, #255
 4325 0008 10D1     		bne	.L268
2297:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZENCHANGESTATE_ADDR, Dayfrozen_Change_State);
 4326              		.loc 1 2297 0
 4327 000a 324D     		ldr	r5, .L280
 4328 000c 2970     		strb	r1, [r5]
2298:../user/source/DLT645.c ****         pucBuffer[8] = (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == Dayfrozen_Change_State
 4329              		.loc 1 2298 0
 4330 000e 324E     		ldr	r6, .L280+4
 4331 0010 3046     		mov	r0, r6
 4332              	.LVL534:
 4333 0012 FFF7FEFF 		bl	Flash_Write_Word
 4334              	.LVL535:
2299:../user/source/DLT645.c ****                             ? 0x94
 4335              		.loc 1 2299 0
 4336 0016 3046     		mov	r0, r6
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 137


 4337 0018 FFF7FEFF 		bl	EEProm_Read
 4338              	.LVL536:
 4339 001c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4340 001e 9842     		cmp	r0, r3
 4341 0020 01D1     		bne	.L277
 4342 0022 9423     		movs	r3, #148
 4343 0024 00E0     		b	.L269
 4344              	.L277:
 4345 0026 D423     		movs	r3, #212
 4346              	.L269:
2299:../user/source/DLT645.c ****                             ? 0x94
 4347              		.loc 1 2299 0 is_stmt 0 discriminator 4
 4348 0028 2372     		strb	r3, [r4, #8]
 4349 002a 1BE0     		b	.L270
 4350              	.LVL537:
 4351              	.L268:
2303:../user/source/DLT645.c ****     {
 4352              		.loc 1 2303 0 is_stmt 1
 4353 002c C1B9     		cbnz	r1, .L271
2306:../user/source/DLT645.c ****         FLASH_ErasePage(FLASH_ENERGY_PAGE);
 4354              		.loc 1 2306 0
 4355 002e FFF7FEFF 		bl	FLASH_Unlock
 4356              	.LVL538:
2307:../user/source/DLT645.c ****         FLASH_Lock();
 4357              		.loc 1 2307 0
 4358 0032 2A48     		ldr	r0, .L280+8
 4359 0034 FFF7FEFF 		bl	FLASH_ErasePage
 4360              	.LVL539:
2308:../user/source/DLT645.c ****         Dayfrozen_Change_State = pucBuffer[14];
 4361              		.loc 1 2308 0
 4362 0038 FFF7FEFF 		bl	FLASH_Lock
 4363              	.LVL540:
2309:../user/source/DLT645.c ****         Flash_Write_Word(FLASH_DAYFROZENCHANGESTATE_ADDR, Dayfrozen_Change_State);
 4364              		.loc 1 2309 0
 4365 003c A17B     		ldrb	r1, [r4, #14]	@ zero_extendqisi2
 4366 003e 254D     		ldr	r5, .L280
 4367 0040 2970     		strb	r1, [r5]
2310:../user/source/DLT645.c ****         pucBuffer[8] = (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == Dayfrozen_Change_State
 4368              		.loc 1 2310 0
 4369 0042 254E     		ldr	r6, .L280+4
 4370 0044 3046     		mov	r0, r6
 4371 0046 FFF7FEFF 		bl	Flash_Write_Word
 4372              	.LVL541:
2311:../user/source/DLT645.c ****                             ? 0x94
 4373              		.loc 1 2311 0
 4374 004a 3046     		mov	r0, r6
 4375 004c FFF7FEFF 		bl	EEProm_Read
 4376              	.LVL542:
 4377 0050 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4378 0052 9842     		cmp	r0, r3
 4379 0054 01D1     		bne	.L278
 4380 0056 9423     		movs	r3, #148
 4381 0058 00E0     		b	.L272
 4382              	.L278:
 4383 005a D423     		movs	r3, #212
 4384              	.L272:
2311:../user/source/DLT645.c ****                             ? 0x94
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 138


 4385              		.loc 1 2311 0 is_stmt 0 discriminator 4
 4386 005c 2372     		strb	r3, [r4, #8]
 4387 005e 01E0     		b	.L270
 4388              	.LVL543:
 4389              	.L271:
2317:../user/source/DLT645.c ****     }
 4390              		.loc 1 2317 0 is_stmt 1
 4391 0060 D423     		movs	r3, #212
 4392 0062 0372     		strb	r3, [r0, #8]
 4393              	.LVL544:
 4394              	.L270:
2319:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 4395              		.loc 1 2319 0
 4396 0064 0023     		movs	r3, #0
 4397 0066 6372     		strb	r3, [r4, #9]
2320:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 4398              		.loc 1 2320 0
 4399 0068 A372     		strb	r3, [r4, #10]
 4400              	.LVL545:
2321:../user/source/DLT645.c ****     {
 4401              		.loc 1 2321 0
 4402 006a 05E0     		b	.L273
 4403              	.LVL546:
 4404              	.L274:
2323:../user/source/DLT645.c ****     }
 4405              		.loc 1 2323 0 discriminator 3
 4406 006c E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 4407 006e A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 4408 0070 0A44     		add	r2, r2, r1
 4409 0072 A272     		strb	r2, [r4, #10]
2321:../user/source/DLT645.c ****     {
 4410              		.loc 1 2321 0 discriminator 3
 4411 0074 0133     		adds	r3, r3, #1
 4412              	.LVL547:
 4413 0076 9BB2     		uxth	r3, r3
 4414              	.LVL548:
 4415              	.L273:
2321:../user/source/DLT645.c ****     {
 4416              		.loc 1 2321 0 is_stmt 0 discriminator 1
 4417 0078 092B     		cmp	r3, #9
 4418 007a F7D9     		bls	.L274
2325:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 4419              		.loc 1 2325 0 is_stmt 1
 4420 007c 1623     		movs	r3, #22
 4421              	.LVL549:
 4422 007e E372     		strb	r3, [r4, #11]
2327:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 4423              		.loc 1 2327 0
 4424 0080 0022     		movs	r2, #0
 4425 0082 174B     		ldr	r3, .L280+12
 4426 0084 1A70     		strb	r2, [r3]
2328:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 4427              		.loc 1 2328 0
 4428 0086 174D     		ldr	r5, .L280+16
 4429 0088 2B68     		ldr	r3, [r5]
 4430 008a 0C22     		movs	r2, #12
 4431 008c 9968     		ldr	r1, [r3, #8]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 139


 4432 008e 2046     		mov	r0, r4
 4433 0090 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4434              	.LVL550:
2329:../user/source/DLT645.c ****     {
 4435              		.loc 1 2329 0
 4436 0094 2B68     		ldr	r3, [r5]
 4437 0096 9868     		ldr	r0, [r3, #8]
 4438 0098 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4439              	.LVL551:
 4440 009c 10B9     		cbnz	r0, .L275
2331:../user/source/DLT645.c ****     }
 4441              		.loc 1 2331 0
 4442 009e 1248     		ldr	r0, .L280+20
 4443 00a0 FFF7FEFF 		bl	Uart_DataPut
 4444              	.LVL552:
 4445              	.L275:
2334:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 4446              		.loc 1 2334 0
 4447 00a4 114D     		ldr	r5, .L280+24
 4448 00a6 2B68     		ldr	r3, [r5]
 4449 00a8 0C22     		movs	r2, #12
 4450 00aa 9968     		ldr	r1, [r3, #8]
 4451 00ac 2046     		mov	r0, r4
 4452 00ae FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4453              	.LVL553:
2335:../user/source/DLT645.c ****     {
 4454              		.loc 1 2335 0
 4455 00b2 2B68     		ldr	r3, [r5]
 4456 00b4 9868     		ldr	r0, [r3, #8]
 4457 00b6 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4458              	.LVL554:
 4459 00ba 50B9     		cbnz	r0, .L267
2337:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 4460              		.loc 1 2337 0
 4461 00bc 0C4C     		ldr	r4, .L280+28
 4462              	.LVL555:
 4463 00be 0022     		movs	r2, #0
 4464 00c0 0C49     		ldr	r1, .L280+32
 4465 00c2 2046     		mov	r0, r4
 4466 00c4 FFF7FEFF 		bl	USART_ITConfig
 4467              	.LVL556:
2338:../user/source/DLT645.c ****     }
 4468              		.loc 1 2338 0
 4469 00c8 0122     		movs	r2, #1
 4470 00ca 0B49     		ldr	r1, .L280+36
 4471 00cc 2046     		mov	r0, r4
 4472 00ce FFF7FEFF 		bl	USART_ITConfig
 4473              	.LVL557:
 4474              	.L267:
 4475 00d2 70BD     		pop	{r4, r5, r6, pc}
 4476              	.L281:
 4477              		.align	2
 4478              	.L280:
 4479 00d4 00000000 		.word	.LANCHOR10
 4480 00d8 18EF0108 		.word	134344472
 4481 00dc 00F00108 		.word	134344704
 4482 00e0 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 140


 4483 00e4 00000000 		.word	.LANCHOR6
 4484 00e8 00480040 		.word	1073760256
 4485 00ec 00000000 		.word	.LANCHOR7
 4486 00f0 00440040 		.word	1073759232
 4487 00f4 05010500 		.word	327941
 4488 00f8 07010700 		.word	459015
 4489              		.cfi_endproc
 4490              	.LFE152:
 4492              		.section	.text.vEnergy_Modify_Reset,"ax",%progbits
 4493              		.align	2
 4494              		.global	vEnergy_Modify_Reset
 4495              		.thumb
 4496              		.thumb_func
 4498              	vEnergy_Modify_Reset:
 4499              	.LFB154:
2409:../user/source/DLT645.c ****     bool cmdValid;
 4500              		.loc 1 2409 0
 4501              		.cfi_startproc
 4502              		@ args = 0, pretend = 0, frame = 0
 4503              		@ frame_needed = 0, uses_anonymous_args = 0
 4504              	.LVL558:
 4505 0000 38B5     		push	{r3, r4, r5, lr}
 4506              	.LCFI41:
 4507              		.cfi_def_cfa_offset 16
 4508              		.cfi_offset 3, -16
 4509              		.cfi_offset 4, -12
 4510              		.cfi_offset 5, -8
 4511              		.cfi_offset 14, -4
 4512 0002 0446     		mov	r4, r0
2413:../user/source/DLT645.c ****     if (cmdValid)
 4513              		.loc 1 2413 0
 4514 0004 837B     		ldrb	r3, [r0, #14]	@ zero_extendqisi2
 4515              	.LVL559:
2414:../user/source/DLT645.c ****     {
 4516              		.loc 1 2414 0
 4517 0006 CBB9     		cbnz	r3, .L283
2417:../user/source/DLT645.c ****         Dayfrozen_Change_State = 0xff;
 4518              		.loc 1 2417 0
 4519 0008 294D     		ldr	r5, .L291
 4520 000a FF21     		movs	r1, #255
 4521 000c 2846     		mov	r0, r5
 4522              	.LVL560:
 4523 000e FFF7FEFF 		bl	Flash_Write_Word
 4524              	.LVL561:
2418:../user/source/DLT645.c ****         /*ÈÕ¶³½áĞŞ¸Ä±ÈÀıÉèÖÃÎª90*/
 4525              		.loc 1 2418 0
 4526 0012 FF22     		movs	r2, #255
 4527 0014 274B     		ldr	r3, .L291+4
 4528 0016 1A70     		strb	r2, [r3]
2423:../user/source/DLT645.c ****         FLASH_ErasePage(FLASH_ENERGY_PAGE);
 4529              		.loc 1 2423 0
 4530 0018 FFF7FEFF 		bl	FLASH_Unlock
 4531              	.LVL562:
2424:../user/source/DLT645.c ****         FLASH_Lock();
 4532              		.loc 1 2424 0
 4533 001c 2648     		ldr	r0, .L291+8
 4534 001e FFF7FEFF 		bl	FLASH_ErasePage
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 141


 4535              	.LVL563:
2425:../user/source/DLT645.c ****         if ( //(EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR) == 90) &&
 4536              		.loc 1 2425 0
 4537 0022 FFF7FEFF 		bl	FLASH_Lock
 4538              	.LVL564:
2427:../user/source/DLT645.c ****         {
 4539              		.loc 1 2427 0
 4540 0026 2846     		mov	r0, r5
 4541 0028 FFF7FEFF 		bl	EEProm_Read
 4542              	.LVL565:
2426:../user/source/DLT645.c ****             (EEProm_Read(FLASH_DAYFROZENCHANGESTATE_ADDR) == 0xff))
 4543              		.loc 1 2426 0
 4544 002c FF28     		cmp	r0, #255
 4545 002e 02D1     		bne	.L284
2429:../user/source/DLT645.c ****         }
 4546              		.loc 1 2429 0
 4547 0030 9423     		movs	r3, #148
 4548 0032 2372     		strb	r3, [r4, #8]
 4549 0034 04E0     		b	.L285
 4550              	.L284:
2433:../user/source/DLT645.c ****         }
 4551              		.loc 1 2433 0
 4552 0036 D423     		movs	r3, #212
 4553 0038 2372     		strb	r3, [r4, #8]
 4554 003a 01E0     		b	.L285
 4555              	.LVL566:
 4556              	.L283:
2438:../user/source/DLT645.c ****     }
 4557              		.loc 1 2438 0
 4558 003c D423     		movs	r3, #212
 4559              	.LVL567:
 4560 003e 0372     		strb	r3, [r0, #8]
 4561              	.LVL568:
 4562              	.L285:
2440:../user/source/DLT645.c ****     pucBuffer[10] = 0;
 4563              		.loc 1 2440 0
 4564 0040 0023     		movs	r3, #0
 4565 0042 6372     		strb	r3, [r4, #9]
2441:../user/source/DLT645.c ****     for (i = 0; i < 10; i++)
 4566              		.loc 1 2441 0
 4567 0044 A372     		strb	r3, [r4, #10]
 4568              	.LVL569:
2442:../user/source/DLT645.c ****     {
 4569              		.loc 1 2442 0
 4570 0046 05E0     		b	.L286
 4571              	.LVL570:
 4572              	.L287:
2444:../user/source/DLT645.c ****     }
 4573              		.loc 1 2444 0 discriminator 3
 4574 0048 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 4575 004a A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 4576 004c 0A44     		add	r2, r2, r1
 4577 004e A272     		strb	r2, [r4, #10]
2442:../user/source/DLT645.c ****     {
 4578              		.loc 1 2442 0 discriminator 3
 4579 0050 0133     		adds	r3, r3, #1
 4580              	.LVL571:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 142


 4581 0052 9BB2     		uxth	r3, r3
 4582              	.LVL572:
 4583              	.L286:
2442:../user/source/DLT645.c ****     {
 4584              		.loc 1 2442 0 is_stmt 0 discriminator 1
 4585 0054 092B     		cmp	r3, #9
 4586 0056 F7D9     		bls	.L287
2446:../user/source/DLT645.c ****     /*µç±í¿Ú»Ø¸´*/
 4587              		.loc 1 2446 0 is_stmt 1
 4588 0058 1623     		movs	r3, #22
 4589              	.LVL573:
 4590 005a E372     		strb	r3, [r4, #11]
2448:../user/source/DLT645.c ****     ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, 12);
 4591              		.loc 1 2448 0
 4592 005c 0022     		movs	r2, #0
 4593 005e 174B     		ldr	r3, .L291+12
 4594 0060 1A70     		strb	r2, [r3]
2449:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
 4595              		.loc 1 2449 0
 4596 0062 174D     		ldr	r5, .L291+16
 4597 0064 2B68     		ldr	r3, [r5]
 4598 0066 0C22     		movs	r2, #12
 4599 0068 9968     		ldr	r1, [r3, #8]
 4600 006a 2046     		mov	r0, r4
 4601 006c FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4602              	.LVL574:
2450:../user/source/DLT645.c ****     {
 4603              		.loc 1 2450 0
 4604 0070 2B68     		ldr	r3, [r5]
 4605 0072 9868     		ldr	r0, [r3, #8]
 4606 0074 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4607              	.LVL575:
 4608 0078 10B9     		cbnz	r0, .L288
2452:../user/source/DLT645.c ****     }
 4609              		.loc 1 2452 0
 4610 007a 1248     		ldr	r0, .L291+20
 4611 007c FFF7FEFF 		bl	Uart_DataPut
 4612              	.LVL576:
 4613              	.L288:
2455:../user/source/DLT645.c ****     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 4614              		.loc 1 2455 0
 4615 0080 114D     		ldr	r5, .L291+24
 4616 0082 2B68     		ldr	r3, [r5]
 4617 0084 0C22     		movs	r2, #12
 4618 0086 9968     		ldr	r1, [r3, #8]
 4619 0088 2046     		mov	r0, r4
 4620 008a FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 4621              	.LVL577:
2456:../user/source/DLT645.c ****     {
 4622              		.loc 1 2456 0
 4623 008e 2B68     		ldr	r3, [r5]
 4624 0090 9868     		ldr	r0, [r3, #8]
 4625 0092 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 4626              	.LVL578:
 4627 0096 50B9     		cbnz	r0, .L282
2458:../user/source/DLT645.c ****         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 4628              		.loc 1 2458 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 143


 4629 0098 0C4C     		ldr	r4, .L291+28
 4630              	.LVL579:
 4631 009a 0022     		movs	r2, #0
 4632 009c 0C49     		ldr	r1, .L291+32
 4633 009e 2046     		mov	r0, r4
 4634 00a0 FFF7FEFF 		bl	USART_ITConfig
 4635              	.LVL580:
2459:../user/source/DLT645.c ****     }
 4636              		.loc 1 2459 0
 4637 00a4 0122     		movs	r2, #1
 4638 00a6 0B49     		ldr	r1, .L291+36
 4639 00a8 2046     		mov	r0, r4
 4640 00aa FFF7FEFF 		bl	USART_ITConfig
 4641              	.LVL581:
 4642              	.L282:
 4643 00ae 38BD     		pop	{r3, r4, r5, pc}
 4644              	.L292:
 4645              		.align	2
 4646              	.L291:
 4647 00b0 18EF0108 		.word	134344472
 4648 00b4 00000000 		.word	.LANCHOR10
 4649 00b8 00F00108 		.word	134344704
 4650 00bc 00000000 		.word	.LANCHOR0
 4651 00c0 00000000 		.word	.LANCHOR6
 4652 00c4 00480040 		.word	1073760256
 4653 00c8 00000000 		.word	.LANCHOR7
 4654 00cc 00440040 		.word	1073759232
 4655 00d0 05010500 		.word	327941
 4656 00d4 07010700 		.word	459015
 4657              		.cfi_endproc
 4658              	.LFE154:
 4660              		.section	.text.blRecvFrame,"ax",%progbits
 4661              		.align	2
 4662              		.global	blRecvFrame
 4663              		.thumb
 4664              		.thumb_func
 4666              	blRecvFrame:
 4667              	.LFB111:
 166:../user/source/DLT645.c ****     /*ÊÕÖ¡×´Ì¬*/
 4668              		.loc 1 166 0
 4669              		.cfi_startproc
 4670              		@ args = 0, pretend = 0, frame = 0
 4671              		@ frame_needed = 0, uses_anonymous_args = 0
 4672              	.LVL582:
 4673 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4674              	.LCFI42:
 4675              		.cfi_def_cfa_offset 24
 4676              		.cfi_offset 3, -24
 4677              		.cfi_offset 4, -20
 4678              		.cfi_offset 5, -16
 4679              		.cfi_offset 6, -12
 4680              		.cfi_offset 7, -8
 4681              		.cfi_offset 14, -4
 4682 0002 0646     		mov	r6, r0
 4683 0004 0D46     		mov	r5, r1
 168:../user/source/DLT645.c ****     {
 4684              		.loc 1 168 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 144


 4685 0006 3A4B     		ldr	r3, .L307
 4686 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4687 000a 012B     		cmp	r3, #1
 4688 000c 11D0     		beq	.L295
 4689 000e 13B1     		cbz	r3, .L296
 4690 0010 022B     		cmp	r3, #2
 4691 0012 41D0     		beq	.L297
 4692 0014 65E0     		b	.L305
 4693              	.L296:
 174:../user/source/DLT645.c ****         {
 4694              		.loc 1 174 0
 4695 0016 0122     		movs	r2, #1
 4696 0018 FFF7FEFF 		bl	ucDrv_Buf_GetBytes
 4697              	.LVL583:
 4698 001c 0446     		mov	r4, r0
 4699 001e 0028     		cmp	r0, #0
 4700 0020 64D0     		beq	.L294
 182:../user/source/DLT645.c ****             {
 4701              		.loc 1 182 0
 4702 0022 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4703 0024 682B     		cmp	r3, #104
 4704 0026 5ED1     		bne	.L303
 189:../user/source/DLT645.c ****                 blWordsCounterStatus = true;
 4705              		.loc 1 189 0
 4706 0028 0123     		movs	r3, #1
 4707 002a 314A     		ldr	r2, .L307
 4708 002c 1370     		strb	r3, [r2]
 190:../user/source/DLT645.c ****             }
 4709              		.loc 1 190 0
 4710 002e 314A     		ldr	r2, .L307+4
 4711 0030 1370     		strb	r3, [r2]
 4712              	.L295:
 197:../user/source/DLT645.c ****         {
 4713              		.loc 1 197 0
 4714 0032 0922     		movs	r2, #9
 4715 0034 691C     		adds	r1, r5, #1
 4716 0036 3046     		mov	r0, r6
 4717 0038 FFF7FEFF 		bl	ucDrv_Buf_GetBytes
 4718              	.LVL584:
 4719 003c 0746     		mov	r7, r0
 4720 003e 80B9     		cbnz	r0, .L298
 200:../user/source/DLT645.c ****             {
 4721              		.loc 1 200 0
 4722 0040 1421     		movs	r1, #20
 4723 0042 2D4B     		ldr	r3, .L307+8
 4724 0044 1888     		ldrh	r0, [r3]
 4725 0046 FFF7FEFF 		bl	blTime2_Update
 4726              	.LVL585:
 4727 004a 0446     		mov	r4, r0
 4728 004c 0028     		cmp	r0, #0
 4729 004e 4DD0     		beq	.L294
 203:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 4730              		.loc 1 203 0
 4731 0050 0023     		movs	r3, #0
 4732 0052 274A     		ldr	r2, .L307
 4733 0054 1370     		strb	r3, [r2]
 204:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 145


 4734              		.loc 1 204 0
 4735 0056 274A     		ldr	r2, .L307+4
 4736 0058 1370     		strb	r3, [r2]
 205:../user/source/DLT645.c ****             }
 4737              		.loc 1 205 0
 4738 005a 274A     		ldr	r2, .L307+8
 4739 005c 1380     		strh	r3, [r2]	@ movhi
 265:../user/source/DLT645.c **** }
 4740              		.loc 1 265 0
 4741 005e 3C46     		mov	r4, r7
 4742 0060 44E0     		b	.L294
 4743              	.L298:
 211:../user/source/DLT645.c ****             {
 4744              		.loc 1 211 0
 4745 0062 EB79     		ldrb	r3, [r5, #7]	@ zero_extendqisi2
 4746 0064 682B     		cmp	r3, #104
 4747 0066 04D1     		bne	.L299
 211:../user/source/DLT645.c ****             {
 4748              		.loc 1 211 0 is_stmt 0 discriminator 1
 4749 0068 6B7A     		ldrb	r3, [r5, #9]	@ zero_extendqisi2
 4750 006a 03F10C02 		add	r2, r3, #12
 4751 006e FE2A     		cmp	r2, #254
 4752 0070 07DD     		ble	.L300
 4753              	.L299:
 213:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 4754              		.loc 1 213 0 is_stmt 1
 4755 0072 0024     		movs	r4, #0
 4756 0074 1E4B     		ldr	r3, .L307
 4757 0076 1C70     		strb	r4, [r3]
 214:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 4758              		.loc 1 214 0
 4759 0078 1E4B     		ldr	r3, .L307+4
 4760 007a 1C70     		strb	r4, [r3]
 215:../user/source/DLT645.c ****                 break;
 4761              		.loc 1 215 0
 4762 007c 1E4B     		ldr	r3, .L307+8
 4763 007e 1C80     		strh	r4, [r3]	@ movhi
 216:../user/source/DLT645.c ****             }
 4764              		.loc 1 216 0
 4765 0080 34E0     		b	.L294
 4766              	.L300:
 220:../user/source/DLT645.c ****                 ucRcvStatus = RCV_DATA2;                   //Ö¸ÏòÏÂÒ»²¿·Ö
 4767              		.loc 1 220 0
 4768 0082 1E4A     		ldr	r2, .L307+12
 4769 0084 1370     		strb	r3, [r2]
 221:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 4770              		.loc 1 221 0
 4771 0086 0222     		movs	r2, #2
 4772 0088 194B     		ldr	r3, .L307
 4773 008a 1A70     		strb	r2, [r3]
 223:../user/source/DLT645.c ****                 blWordsCounterStatus = true;
 4774              		.loc 1 223 0
 4775 008c 1A4B     		ldr	r3, .L307+8
 4776 008e 0022     		movs	r2, #0
 4777 0090 1A80     		strh	r2, [r3]	@ movhi
 224:../user/source/DLT645.c ****             }
 4778              		.loc 1 224 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 146


 4779 0092 0122     		movs	r2, #1
 4780 0094 174B     		ldr	r3, .L307+4
 4781 0096 1A70     		strb	r2, [r3]
 4782              	.L297:
 230:../user/source/DLT645.c ****         {                                                                    //¶ÁºóĞø×Ö½ÚÊ§°Ü£¬Ìø³ö
 4783              		.loc 1 230 0
 4784 0098 184B     		ldr	r3, .L307+12
 4785 009a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4786 009c 0232     		adds	r2, r2, #2
 4787 009e 05F10A01 		add	r1, r5, #10
 4788 00a2 3046     		mov	r0, r6
 4789 00a4 FFF7FEFF 		bl	ucDrv_Buf_GetBytes
 4790              	.LVL586:
 4791 00a8 0446     		mov	r4, r0
 4792 00aa 68B9     		cbnz	r0, .L301
 232:../user/source/DLT645.c ****             {                                                                //Èç¹û³¬Ê±£¬ÔòÖØĞÂÕÒ68
 4793              		.loc 1 232 0
 4794 00ac 1421     		movs	r1, #20
 4795 00ae 124B     		ldr	r3, .L307+8
 4796 00b0 1888     		ldrh	r0, [r3]
 4797 00b2 FFF7FEFF 		bl	blTime2_Update
 4798              	.LVL587:
 4799 00b6 C0B1     		cbz	r0, .L304
 234:../user/source/DLT645.c ****                 blWordsCounterStatus = false;
 4800              		.loc 1 234 0
 4801 00b8 0023     		movs	r3, #0
 4802 00ba 0D4A     		ldr	r2, .L307
 4803 00bc 1370     		strb	r3, [r2]
 235:../user/source/DLT645.c ****                 uwTime2WordsCounter = 0;
 4804              		.loc 1 235 0
 4805 00be 0D4A     		ldr	r2, .L307+4
 4806 00c0 1370     		strb	r3, [r2]
 236:../user/source/DLT645.c ****             }
 4807              		.loc 1 236 0
 4808 00c2 0D4A     		ldr	r2, .L307+8
 4809 00c4 1380     		strh	r3, [r2]	@ movhi
 4810 00c6 11E0     		b	.L294
 4811              	.L301:
 242:../user/source/DLT645.c ****             blWordsCounterStatus = false;
 4812              		.loc 1 242 0
 4813 00c8 0023     		movs	r3, #0
 4814 00ca 094A     		ldr	r2, .L307
 4815 00cc 1370     		strb	r3, [r2]
 243:../user/source/DLT645.c ****             uwTime2WordsCounter = 0;
 4816              		.loc 1 243 0
 4817 00ce 094A     		ldr	r2, .L307+4
 4818 00d0 1370     		strb	r3, [r2]
 244:../user/source/DLT645.c ****             if (dwCheckFrame(ucdata_buf) != OK_1)
 4819              		.loc 1 244 0
 4820 00d2 094A     		ldr	r2, .L307+8
 4821 00d4 1380     		strh	r3, [r2]	@ movhi
 245:../user/source/DLT645.c ****             {
 4822              		.loc 1 245 0
 4823 00d6 2846     		mov	r0, r5
 4824 00d8 FFF7FEFF 		bl	dwCheckFrame
 4825              	.LVL588:
 4826 00dc 30B1     		cbz	r0, .L294
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 147


 251:../user/source/DLT645.c ****             }
 4827              		.loc 1 251 0
 4828 00de 0024     		movs	r4, #0
 4829 00e0 04E0     		b	.L294
 4830              	.LVL589:
 4831              	.L305:
 265:../user/source/DLT645.c **** }
 4832              		.loc 1 265 0
 4833 00e2 0024     		movs	r4, #0
 4834 00e4 02E0     		b	.L294
 4835              	.LVL590:
 4836              	.L303:
 4837 00e6 0024     		movs	r4, #0
 4838 00e8 00E0     		b	.L294
 4839              	.L304:
 4840 00ea 0446     		mov	r4, r0
 4841              	.L294:
 266:../user/source/DLT645.c **** 
 4842              		.loc 1 266 0
 4843 00ec 2046     		mov	r0, r4
 4844 00ee F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4845              	.LVL591:
 4846              	.L308:
 4847              		.align	2
 4848              	.L307:
 4849 00f0 00000000 		.word	.LANCHOR11
 4850 00f4 00000000 		.word	blWordsCounterStatus
 4851 00f8 00000000 		.word	uwTime2WordsCounter
 4852 00fc 00000000 		.word	.LANCHOR0
 4853              		.cfi_endproc
 4854              	.LFE111:
 4856              		.section	.text.vDBDataID_Handle,"ax",%progbits
 4857              		.align	2
 4858              		.global	vDBDataID_Handle
 4859              		.thumb
 4860              		.thumb_func
 4862              	vDBDataID_Handle:
 4863              	.LFB113:
 306:../user/source/DLT645.c ****     uint8_t i;
 4864              		.loc 1 306 0
 4865              		.cfi_startproc
 4866              		@ args = 0, pretend = 0, frame = 0
 4867              		@ frame_needed = 0, uses_anonymous_args = 0
 4868              	.LVL592:
 4869 0000 10B5     		push	{r4, lr}
 4870              	.LCFI43:
 4871              		.cfi_def_cfa_offset 8
 4872              		.cfi_offset 4, -8
 4873              		.cfi_offset 14, -4
 4874              	.LVL593:
 310:../user/source/DLT645.c ****     {
 4875              		.loc 1 310 0
 4876 0002 0023     		movs	r3, #0
 4877 0004 1CE0     		b	.L310
 4878              	.LVL594:
 4879              	.L313:
 312:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 148


 4880              		.loc 1 312 0
 4881 0006 214A     		ldr	r2, .L316
 4882 0008 12F83310 		ldrb	r1, [r2, r3, lsl #3]	@ zero_extendqisi2
 4883 000c 827A     		ldrb	r2, [r0, #10]	@ zero_extendqisi2
 4884 000e 9142     		cmp	r1, r2
 4885 0010 14D1     		bne	.L311
 313:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 4886              		.loc 1 313 0 discriminator 1
 4887 0012 1E4A     		ldr	r2, .L316
 4888 0014 02EBC302 		add	r2, r2, r3, lsl #3
 4889 0018 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 4890 001a C27A     		ldrb	r2, [r0, #11]	@ zero_extendqisi2
 312:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 4891              		.loc 1 312 0 discriminator 1
 4892 001c 9142     		cmp	r1, r2
 4893 001e 0DD1     		bne	.L311
 314:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 4894              		.loc 1 314 0
 4895 0020 1A4A     		ldr	r2, .L316
 4896 0022 02EBC302 		add	r2, r2, r3, lsl #3
 4897 0026 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 4898 0028 027B     		ldrb	r2, [r0, #12]	@ zero_extendqisi2
 313:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 4899              		.loc 1 313 0
 4900 002a 9142     		cmp	r1, r2
 4901 002c 06D1     		bne	.L311
 315:../user/source/DLT645.c ****             break;
 4902              		.loc 1 315 0
 4903 002e 174A     		ldr	r2, .L316
 4904 0030 02EBC304 		add	r4, r2, r3, lsl #3
 4905 0034 E178     		ldrb	r1, [r4, #3]	@ zero_extendqisi2
 4906 0036 427B     		ldrb	r2, [r0, #13]	@ zero_extendqisi2
 314:../user/source/DLT645.c ****             (DBDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 4907              		.loc 1 314 0
 4908 0038 9142     		cmp	r1, r2
 4909 003a 03D0     		beq	.L312
 4910              	.L311:
 310:../user/source/DLT645.c ****     {
 4911              		.loc 1 310 0 discriminator 2
 4912 003c 0133     		adds	r3, r3, #1
 4913              	.LVL595:
 4914 003e DBB2     		uxtb	r3, r3
 4915              	.LVL596:
 4916              	.L310:
 310:../user/source/DLT645.c ****     {
 4917              		.loc 1 310 0 is_stmt 0 discriminator 1
 4918 0040 152B     		cmp	r3, #21
 4919 0042 E0D9     		bls	.L313
 4920              	.L312:
 318:../user/source/DLT645.c ****     {
 4921              		.loc 1 318 0 is_stmt 1
 4922 0044 152B     		cmp	r3, #21
 4923 0046 1FD8     		bhi	.L309
 321:../user/source/DLT645.c ****             return;
 4924              		.loc 1 321 0
 4925 0048 104A     		ldr	r2, .L316
 4926 004a 02EBC303 		add	r3, r2, r3, lsl #3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 149


 4927              	.LVL597:
 4928 004e 5B68     		ldr	r3, [r3, #4]
 4929 0050 0F4A     		ldr	r2, .L316+4
 4930 0052 9342     		cmp	r3, r2
 4931 0054 18D0     		beq	.L309
 325:../user/source/DLT645.c ****             return;
 4932              		.loc 1 325 0
 4933 0056 0F4A     		ldr	r2, .L316+8
 4934 0058 9342     		cmp	r3, r2
 4935 005a 15D0     		beq	.L309
 329:../user/source/DLT645.c ****             return;
 4936              		.loc 1 329 0
 4937 005c 0E4A     		ldr	r2, .L316+12
 4938 005e 9342     		cmp	r3, r2
 4939 0060 12D0     		beq	.L309
 333:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vDayfrozen_Modifier)) ||
 4940              		.loc 1 333 0
 4941 0062 0E4A     		ldr	r2, .L316+16
 4942 0064 9342     		cmp	r3, r2
 4943 0066 0FD0     		beq	.L309
 333:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vDayfrozen_Modifier)) ||
 4944              		.loc 1 333 0 is_stmt 0 discriminator 1
 4945 0068 0D4A     		ldr	r2, .L316+20
 4946 006a 9342     		cmp	r3, r2
 4947 006c 0CD0     		beq	.L309
 334:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vAccountEnergy_Modify)) ||
 4948              		.loc 1 334 0 is_stmt 1
 4949 006e 0D4A     		ldr	r2, .L316+24
 4950 0070 9342     		cmp	r3, r2
 4951 0072 09D0     		beq	.L309
 335:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_AbleSet)) ||
 4952              		.loc 1 335 0
 4953 0074 0C4A     		ldr	r2, .L316+28
 4954 0076 9342     		cmp	r3, r2
 4955 0078 06D0     		beq	.L309
 336:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_RaitoSet)) ||
 4956              		.loc 1 336 0
 4957 007a 0C4A     		ldr	r2, .L316+32
 4958 007c 9342     		cmp	r3, r2
 4959 007e 03D0     		beq	.L309
 337:../user/source/DLT645.c ****             ((DBDataID_Handle_List[i].Handle == vEnergy_Modify_Reset)))
 4960              		.loc 1 337 0
 4961 0080 0B4A     		ldr	r2, .L316+36
 4962 0082 9342     		cmp	r3, r2
 4963 0084 00D0     		beq	.L309
 341:../user/source/DLT645.c ****     }
 4964              		.loc 1 341 0
 4965 0086 9847     		blx	r3
 4966              	.LVL598:
 4967              	.L309:
 4968 0088 10BD     		pop	{r4, pc}
 4969              	.L317:
 4970 008a 00BF     		.align	2
 4971              	.L316:
 4972 008c 00000000 		.word	.LANCHOR12
 4973 0090 00000000 		.word	vCurrent_Modify
 4974 0094 00000000 		.word	vCurrent_Limit_Modify
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 150


 4975 0098 00000000 		.word	Estatus_Modify_CurrentEvent
 4976 009c 00000000 		.word	vNowEnergy_Modifier
 4977 00a0 00000000 		.word	vDayfrozen_Modifier
 4978 00a4 00000000 		.word	vAccountEnergy_Modify
 4979 00a8 00000000 		.word	vEnergy_Modify_AbleSet
 4980 00ac 00000000 		.word	vEnergy_Modify_RaitoSet
 4981 00b0 00000000 		.word	vEnergy_Modify_Reset
 4982              		.cfi_endproc
 4983              	.LFE113:
 4985              		.section	.text.vINFRDataID_Handle,"ax",%progbits
 4986              		.align	2
 4987              		.global	vINFRDataID_Handle
 4988              		.thumb
 4989              		.thumb_func
 4991              	vINFRDataID_Handle:
 4992              	.LFB114:
 355:../user/source/DLT645.c ****     uint8_t i;
 4993              		.loc 1 355 0
 4994              		.cfi_startproc
 4995              		@ args = 0, pretend = 0, frame = 0
 4996              		@ frame_needed = 0, uses_anonymous_args = 0
 4997              	.LVL599:
 4998 0000 10B5     		push	{r4, lr}
 4999              	.LCFI44:
 5000              		.cfi_def_cfa_offset 8
 5001              		.cfi_offset 4, -8
 5002              		.cfi_offset 14, -4
 5003              	.LVL600:
 359:../user/source/DLT645.c ****     {
 5004              		.loc 1 359 0
 5005 0002 0023     		movs	r3, #0
 5006 0004 1CE0     		b	.L319
 5007              	.LVL601:
 5008              	.L322:
 361:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 5009              		.loc 1 361 0
 5010 0006 1B4A     		ldr	r2, .L325
 5011 0008 12F83310 		ldrb	r1, [r2, r3, lsl #3]	@ zero_extendqisi2
 5012 000c 827A     		ldrb	r2, [r0, #10]	@ zero_extendqisi2
 5013 000e 9142     		cmp	r1, r2
 5014 0010 14D1     		bne	.L320
 362:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 5015              		.loc 1 362 0 discriminator 1
 5016 0012 184A     		ldr	r2, .L325
 5017 0014 02EBC302 		add	r2, r2, r3, lsl #3
 5018 0018 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 5019 001a C27A     		ldrb	r2, [r0, #11]	@ zero_extendqisi2
 361:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[1] == pucBuffer[11]) &&
 5020              		.loc 1 361 0 discriminator 1
 5021 001c 9142     		cmp	r1, r2
 5022 001e 0DD1     		bne	.L320
 363:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 5023              		.loc 1 363 0
 5024 0020 144A     		ldr	r2, .L325
 5025 0022 02EBC302 		add	r2, r2, r3, lsl #3
 5026 0026 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 5027 0028 027B     		ldrb	r2, [r0, #12]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 151


 362:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[2] == pucBuffer[12]) &&
 5028              		.loc 1 362 0
 5029 002a 9142     		cmp	r1, r2
 5030 002c 06D1     		bne	.L320
 364:../user/source/DLT645.c ****             break;
 5031              		.loc 1 364 0
 5032 002e 114A     		ldr	r2, .L325
 5033 0030 02EBC304 		add	r4, r2, r3, lsl #3
 5034 0034 E178     		ldrb	r1, [r4, #3]	@ zero_extendqisi2
 5035 0036 427B     		ldrb	r2, [r0, #13]	@ zero_extendqisi2
 363:../user/source/DLT645.c ****             (INFRDataID_Handle_List[i].Data_ID[3] == pucBuffer[13]))
 5036              		.loc 1 363 0
 5037 0038 9142     		cmp	r1, r2
 5038 003a 03D0     		beq	.L321
 5039              	.L320:
 359:../user/source/DLT645.c ****     {
 5040              		.loc 1 359 0 discriminator 2
 5041 003c 0133     		adds	r3, r3, #1
 5042              	.LVL602:
 5043 003e DBB2     		uxtb	r3, r3
 5044              	.LVL603:
 5045              	.L319:
 359:../user/source/DLT645.c ****     {
 5046              		.loc 1 359 0 is_stmt 0 discriminator 1
 5047 0040 0C2B     		cmp	r3, #12
 5048 0042 E0D9     		bls	.L322
 5049              	.L321:
 367:../user/source/DLT645.c ****     {
 5050              		.loc 1 367 0 is_stmt 1
 5051 0044 0C2B     		cmp	r3, #12
 5052 0046 13D8     		bhi	.L318
 370:../user/source/DLT645.c ****             ((INFRDataID_Handle_List[i].Handle == vEnergy_Modify_RaitoSet)) ||
 5053              		.loc 1 370 0
 5054 0048 0A4A     		ldr	r2, .L325
 5055 004a 02EBC303 		add	r3, r2, r3, lsl #3
 5056              	.LVL604:
 5057 004e 5B68     		ldr	r3, [r3, #4]
 5058 0050 094A     		ldr	r2, .L325+4
 5059 0052 9342     		cmp	r3, r2
 5060 0054 0CD0     		beq	.L318
 370:../user/source/DLT645.c ****             ((INFRDataID_Handle_List[i].Handle == vEnergy_Modify_RaitoSet)) ||
 5061              		.loc 1 370 0 is_stmt 0 discriminator 1
 5062 0056 094A     		ldr	r2, .L325+8
 5063 0058 9342     		cmp	r3, r2
 5064 005a 09D0     		beq	.L318
 371:../user/source/DLT645.c ****             ((INFRDataID_Handle_List[i].Handle == vEnergy_Modify_Reset)) ||
 5065              		.loc 1 371 0 is_stmt 1
 5066 005c 084A     		ldr	r2, .L325+12
 5067 005e 9342     		cmp	r3, r2
 5068 0060 06D0     		beq	.L318
 372:../user/source/DLT645.c ****             ((INFRDataID_Handle_List[i].Handle == vEnergy_Modify_ReadSet)) ||
 5069              		.loc 1 372 0
 5070 0062 084A     		ldr	r2, .L325+16
 5071 0064 9342     		cmp	r3, r2
 5072 0066 03D0     		beq	.L318
 373:../user/source/DLT645.c ****             ((INFRDataID_Handle_List[i].Handle == vEnergy_Modify_ReadValue)))
 5073              		.loc 1 373 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 152


 5074 0068 074A     		ldr	r2, .L325+20
 5075 006a 9342     		cmp	r3, r2
 5076 006c 00D0     		beq	.L318
 377:../user/source/DLT645.c ****     }
 5077              		.loc 1 377 0
 5078 006e 9847     		blx	r3
 5079              	.LVL605:
 5080              	.L318:
 5081 0070 10BD     		pop	{r4, pc}
 5082              	.L326:
 5083 0072 00BF     		.align	2
 5084              	.L325:
 5085 0074 00000000 		.word	.LANCHOR13
 5086 0078 00000000 		.word	vEnergy_Modify_AbleSet
 5087 007c 00000000 		.word	vEnergy_Modify_RaitoSet
 5088 0080 00000000 		.word	vEnergy_Modify_Reset
 5089 0084 00000000 		.word	vEnergy_Modify_ReadSet
 5090 0088 00000000 		.word	vEnergy_Modify_ReadValue
 5091              		.cfi_endproc
 5092              	.LFE114:
 5094              		.section	.text.blVoltage_Create,"ax",%progbits
 5095              		.align	2
 5096              		.global	blVoltage_Create
 5097              		.thumb
 5098              		.thumb_func
 5100              	blVoltage_Create:
 5101              	.LFB121:
 695:../user/source/DLT645.c ****     uint8_t ucCheckData = 0;
 5102              		.loc 1 695 0
 5103              		.cfi_startproc
 5104              		@ args = 0, pretend = 0, frame = 0
 5105              		@ frame_needed = 0, uses_anonymous_args = 0
 5106              	.LVL606:
 5107 0000 70B5     		push	{r4, r5, r6, lr}
 5108              	.LCFI45:
 5109              		.cfi_def_cfa_offset 16
 5110              		.cfi_offset 4, -16
 5111              		.cfi_offset 5, -12
 5112              		.cfi_offset 6, -8
 5113              		.cfi_offset 14, -4
 5114 0002 0446     		mov	r4, r0
 5115              	.LVL607:
 698:../user/source/DLT645.c ****     {
 5116              		.loc 1 698 0
 5117 0004 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 5118 0006 323B     		subs	r3, r3, #50
 5119 0008 042B     		cmp	r3, #4
 5120 000a 00F2E580 		bhi	.L348
 5121 000e DFE813F0 		tbh	[pc, r3, lsl #1]
 5122              	.L330:
 5123 0012 0500     		.2byte	(.L329-.L330)/2
 5124 0014 E300     		.2byte	(.L348-.L330)/2
 5125 0016 5F00     		.2byte	(.L331-.L330)/2
 5126 0018 8B00     		.2byte	(.L332-.L330)/2
 5127 001a B700     		.2byte	(.L333-.L330)/2
 5128              		.p2align 1
 5129              	.L329:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 153


 702:../user/source/DLT645.c ****         pucBuffer[9] = 0x0A;
 5130              		.loc 1 702 0
 5131 001c 9123     		movs	r3, #145
 5132 001e 0372     		strb	r3, [r0, #8]
 703:../user/source/DLT645.c ****         //Ê¹ÓÃÉÏ´ÎĞŞ¸ÄµÄºÏ·¨µçÑ¹Öµ»ò1000 2017-10-25:
 5133              		.loc 1 703 0
 5134 0020 0A23     		movs	r3, #10
 5135 0022 4372     		strb	r3, [r0, #9]
 705:../user/source/DLT645.c ****                          ? A_Voltage
 5136              		.loc 1 705 0
 5137 0024 6D4B     		ldr	r3, .L356
 5138 0026 1D68     		ldr	r5, [r3]
 5139 0028 6D4B     		ldr	r3, .L356+4
 5140 002a 1E68     		ldr	r6, [r3]
 707:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 5141              		.loc 1 707 0
 5142 002c B542     		cmp	r5, r6
 5143 002e 06DC     		bgt	.L349
 705:../user/source/DLT645.c ****                          ? A_Voltage
 5144              		.loc 1 705 0
 5145 0030 6C4B     		ldr	r3, .L356+8
 5146 0032 1B68     		ldr	r3, [r3]
 5147 0034 9D42     		cmp	r5, r3
 5148 0036 04DA     		bge	.L334
 707:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 5149              		.loc 1 707 0
 5150 0038 40F69805 		movw	r5, #2200
 5151 003c 01E0     		b	.L334
 5152              	.L349:
 5153 003e 40F69805 		movw	r5, #2200
 5154              	.L334:
 705:../user/source/DLT645.c ****                          ? A_Voltage
 5155              		.loc 1 705 0
 5156 0042 664B     		ldr	r3, .L356
 5157 0044 1D60     		str	r5, [r3]
 708:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(A_Voltage);
 5158              		.loc 1 708 0
 5159 0046 2846     		mov	r0, r5
 5160              	.LVL608:
 5161 0048 FFF7FEFF 		bl	GetLowByte
 5162              	.LVL609:
 5163 004c A073     		strb	r0, [r4, #14]
 709:../user/source/DLT645.c ****         B_Voltage = ((B_Voltage <= Voltage_MAX) && (B_Voltage >= Voltage_MIN)
 5164              		.loc 1 709 0
 5165 004e 2846     		mov	r0, r5
 5166 0050 FFF7FEFF 		bl	GetHighByte
 5167              	.LVL610:
 5168 0054 E073     		strb	r0, [r4, #15]
 710:../user/source/DLT645.c ****                          ? B_Voltage
 5169              		.loc 1 710 0
 5170 0056 644B     		ldr	r3, .L356+12
 5171 0058 1D68     		ldr	r5, [r3]
 712:../user/source/DLT645.c ****         pucBuffer[16] = GetLowByte(B_Voltage);
 5172              		.loc 1 712 0
 5173 005a AE42     		cmp	r6, r5
 5174 005c 06DB     		blt	.L350
 710:../user/source/DLT645.c ****                          ? B_Voltage
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 154


 5175              		.loc 1 710 0
 5176 005e 614B     		ldr	r3, .L356+8
 5177 0060 1B68     		ldr	r3, [r3]
 5178 0062 9D42     		cmp	r5, r3
 5179 0064 04DA     		bge	.L335
 712:../user/source/DLT645.c ****         pucBuffer[16] = GetLowByte(B_Voltage);
 5180              		.loc 1 712 0
 5181 0066 40F69805 		movw	r5, #2200
 5182 006a 01E0     		b	.L335
 5183              	.L350:
 5184 006c 40F69805 		movw	r5, #2200
 5185              	.L335:
 710:../user/source/DLT645.c ****                          ? B_Voltage
 5186              		.loc 1 710 0
 5187 0070 5D4B     		ldr	r3, .L356+12
 5188 0072 1D60     		str	r5, [r3]
 713:../user/source/DLT645.c ****         pucBuffer[17] = GetHighByte(B_Voltage);
 5189              		.loc 1 713 0
 5190 0074 2846     		mov	r0, r5
 5191 0076 FFF7FEFF 		bl	GetLowByte
 5192              	.LVL611:
 5193 007a 2074     		strb	r0, [r4, #16]
 714:../user/source/DLT645.c ****         C_Voltage = ((C_Voltage <= Voltage_MAX) && (C_Voltage >= Voltage_MIN)
 5194              		.loc 1 714 0
 5195 007c 2846     		mov	r0, r5
 5196 007e FFF7FEFF 		bl	GetHighByte
 5197              	.LVL612:
 5198 0082 6074     		strb	r0, [r4, #17]
 715:../user/source/DLT645.c ****                          ? C_Voltage
 5199              		.loc 1 715 0
 5200 0084 594B     		ldr	r3, .L356+16
 5201 0086 1D68     		ldr	r5, [r3]
 717:../user/source/DLT645.c ****         pucBuffer[18] = GetLowByte(C_Voltage);
 5202              		.loc 1 717 0
 5203 0088 AE42     		cmp	r6, r5
 5204 008a 06DB     		blt	.L351
 715:../user/source/DLT645.c ****                          ? C_Voltage
 5205              		.loc 1 715 0
 5206 008c 554B     		ldr	r3, .L356+8
 5207 008e 1B68     		ldr	r3, [r3]
 5208 0090 9D42     		cmp	r5, r3
 5209 0092 04DA     		bge	.L336
 717:../user/source/DLT645.c ****         pucBuffer[18] = GetLowByte(C_Voltage);
 5210              		.loc 1 717 0
 5211 0094 40F69805 		movw	r5, #2200
 5212 0098 01E0     		b	.L336
 5213              	.L351:
 5214 009a 40F69805 		movw	r5, #2200
 5215              	.L336:
 715:../user/source/DLT645.c ****                          ? C_Voltage
 5216              		.loc 1 715 0
 5217 009e 534B     		ldr	r3, .L356+16
 5218 00a0 1D60     		str	r5, [r3]
 718:../user/source/DLT645.c ****         pucBuffer[19] = GetHighByte(C_Voltage);
 5219              		.loc 1 718 0
 5220 00a2 2846     		mov	r0, r5
 5221 00a4 FFF7FEFF 		bl	GetLowByte
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 155


 5222              	.LVL613:
 5223 00a8 A074     		strb	r0, [r4, #18]
 719:../user/source/DLT645.c ****         for (i = 0; i < 20; i++) //¹Ì¶¨Ö¡³¤22
 5224              		.loc 1 719 0
 5225 00aa 2846     		mov	r0, r5
 5226 00ac FFF7FEFF 		bl	GetHighByte
 5227              	.LVL614:
 5228 00b0 E074     		strb	r0, [r4, #19]
 720:../user/source/DLT645.c ****         {
 5229              		.loc 1 720 0
 5230 00b2 0023     		movs	r3, #0
 696:../user/source/DLT645.c ****     uint8_t i = 0;
 5231              		.loc 1 696 0
 5232 00b4 1A46     		mov	r2, r3
 720:../user/source/DLT645.c ****         {
 5233              		.loc 1 720 0
 5234 00b6 04E0     		b	.L337
 5235              	.LVL615:
 5236              	.L338:
 722:../user/source/DLT645.c ****         }
 5237              		.loc 1 722 0 discriminator 3
 5238 00b8 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 5239 00ba 0A44     		add	r2, r2, r1
 5240              	.LVL616:
 5241 00bc D2B2     		uxtb	r2, r2
 5242              	.LVL617:
 720:../user/source/DLT645.c ****         {
 5243              		.loc 1 720 0 discriminator 3
 5244 00be 0133     		adds	r3, r3, #1
 5245              	.LVL618:
 5246 00c0 DBB2     		uxtb	r3, r3
 5247              	.LVL619:
 5248              	.L337:
 720:../user/source/DLT645.c ****         {
 5249              		.loc 1 720 0 is_stmt 0 discriminator 1
 5250 00c2 132B     		cmp	r3, #19
 5251 00c4 F8D9     		bls	.L338
 724:../user/source/DLT645.c ****         pucBuffer[21] = 0x16;
 5252              		.loc 1 724 0 is_stmt 1
 5253 00c6 2275     		strb	r2, [r4, #20]
 725:../user/source/DLT645.c ****         return true;
 5254              		.loc 1 725 0
 5255 00c8 1623     		movs	r3, #22
 5256              	.LVL620:
 5257 00ca 6375     		strb	r3, [r4, #21]
 726:../user/source/DLT645.c ****     }
 5258              		.loc 1 726 0
 5259 00cc 0120     		movs	r0, #1
 5260 00ce 70BD     		pop	{r4, r5, r6, pc}
 5261              	.LVL621:
 5262              	.L331:
 730:../user/source/DLT645.c ****                          ? A_Voltage
 5263              		.loc 1 730 0
 5264 00d0 424B     		ldr	r3, .L356
 5265 00d2 1D68     		ldr	r5, [r3]
 5266 00d4 424B     		ldr	r3, .L356+4
 5267 00d6 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 156


 732:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5268              		.loc 1 732 0
 5269 00d8 9D42     		cmp	r5, r3
 5270 00da 06DC     		bgt	.L352
 730:../user/source/DLT645.c ****                          ? A_Voltage
 5271              		.loc 1 730 0
 5272 00dc 414B     		ldr	r3, .L356+8
 5273 00de 1B68     		ldr	r3, [r3]
 5274 00e0 9D42     		cmp	r5, r3
 5275 00e2 04DA     		bge	.L339
 732:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5276              		.loc 1 732 0
 5277 00e4 40F69805 		movw	r5, #2200
 5278 00e8 01E0     		b	.L339
 5279              	.L352:
 5280 00ea 40F69805 		movw	r5, #2200
 5281              	.L339:
 730:../user/source/DLT645.c ****                          ? A_Voltage
 5282              		.loc 1 730 0
 5283 00ee 3B4B     		ldr	r3, .L356
 5284 00f0 1D60     		str	r5, [r3]
 733:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 5285              		.loc 1 733 0
 5286 00f2 9123     		movs	r3, #145
 5287 00f4 2372     		strb	r3, [r4, #8]
 734:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(A_Voltage);
 5288              		.loc 1 734 0
 5289 00f6 0623     		movs	r3, #6
 5290 00f8 6372     		strb	r3, [r4, #9]
 735:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(A_Voltage);
 5291              		.loc 1 735 0
 5292 00fa 2846     		mov	r0, r5
 5293              	.LVL622:
 5294 00fc FFF7FEFF 		bl	GetLowByte
 5295              	.LVL623:
 5296 0100 A073     		strb	r0, [r4, #14]
 736:../user/source/DLT645.c ****         for (i = 0; i < 16; i++) //¹Ì¶¨Ö¡³¤18
 5297              		.loc 1 736 0
 5298 0102 2846     		mov	r0, r5
 5299 0104 FFF7FEFF 		bl	GetHighByte
 5300              	.LVL624:
 5301 0108 E073     		strb	r0, [r4, #15]
 737:../user/source/DLT645.c ****         {
 5302              		.loc 1 737 0
 5303 010a 0023     		movs	r3, #0
 696:../user/source/DLT645.c ****     uint8_t i = 0;
 5304              		.loc 1 696 0
 5305 010c 1A46     		mov	r2, r3
 737:../user/source/DLT645.c ****         {
 5306              		.loc 1 737 0
 5307 010e 04E0     		b	.L340
 5308              	.LVL625:
 5309              	.L341:
 739:../user/source/DLT645.c ****         }
 5310              		.loc 1 739 0 discriminator 3
 5311 0110 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 5312 0112 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 157


 5313              	.LVL626:
 5314 0114 D2B2     		uxtb	r2, r2
 5315              	.LVL627:
 737:../user/source/DLT645.c ****         {
 5316              		.loc 1 737 0 discriminator 3
 5317 0116 0133     		adds	r3, r3, #1
 5318              	.LVL628:
 5319 0118 DBB2     		uxtb	r3, r3
 5320              	.LVL629:
 5321              	.L340:
 737:../user/source/DLT645.c ****         {
 5322              		.loc 1 737 0 is_stmt 0 discriminator 1
 5323 011a 0F2B     		cmp	r3, #15
 5324 011c F8D9     		bls	.L341
 741:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 5325              		.loc 1 741 0 is_stmt 1
 5326 011e 2274     		strb	r2, [r4, #16]
 742:../user/source/DLT645.c ****         return true;
 5327              		.loc 1 742 0
 5328 0120 1623     		movs	r3, #22
 5329              	.LVL630:
 5330 0122 6374     		strb	r3, [r4, #17]
 743:../user/source/DLT645.c ****     }
 5331              		.loc 1 743 0
 5332 0124 0120     		movs	r0, #1
 5333 0126 70BD     		pop	{r4, r5, r6, pc}
 5334              	.LVL631:
 5335              	.L332:
 747:../user/source/DLT645.c ****                          ? B_Voltage
 5336              		.loc 1 747 0
 5337 0128 2F4B     		ldr	r3, .L356+12
 5338 012a 1D68     		ldr	r5, [r3]
 5339 012c 2C4B     		ldr	r3, .L356+4
 5340 012e 1B68     		ldr	r3, [r3]
 749:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5341              		.loc 1 749 0
 5342 0130 9D42     		cmp	r5, r3
 5343 0132 06DC     		bgt	.L353
 747:../user/source/DLT645.c ****                          ? B_Voltage
 5344              		.loc 1 747 0
 5345 0134 2B4B     		ldr	r3, .L356+8
 5346 0136 1B68     		ldr	r3, [r3]
 5347 0138 9D42     		cmp	r5, r3
 5348 013a 04DA     		bge	.L342
 749:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5349              		.loc 1 749 0
 5350 013c 40F69805 		movw	r5, #2200
 5351 0140 01E0     		b	.L342
 5352              	.L353:
 5353 0142 40F69805 		movw	r5, #2200
 5354              	.L342:
 747:../user/source/DLT645.c ****                          ? B_Voltage
 5355              		.loc 1 747 0
 5356 0146 284B     		ldr	r3, .L356+12
 5357 0148 1D60     		str	r5, [r3]
 750:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 5358              		.loc 1 750 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 158


 5359 014a 9123     		movs	r3, #145
 5360 014c 2372     		strb	r3, [r4, #8]
 751:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(B_Voltage);
 5361              		.loc 1 751 0
 5362 014e 0623     		movs	r3, #6
 5363 0150 6372     		strb	r3, [r4, #9]
 752:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(B_Voltage);
 5364              		.loc 1 752 0
 5365 0152 2846     		mov	r0, r5
 5366              	.LVL632:
 5367 0154 FFF7FEFF 		bl	GetLowByte
 5368              	.LVL633:
 5369 0158 A073     		strb	r0, [r4, #14]
 753:../user/source/DLT645.c ****         for (i = 0; i < 16; i++) //¹Ì¶¨Ö¡³¤18
 5370              		.loc 1 753 0
 5371 015a 2846     		mov	r0, r5
 5372 015c FFF7FEFF 		bl	GetHighByte
 5373              	.LVL634:
 5374 0160 E073     		strb	r0, [r4, #15]
 754:../user/source/DLT645.c ****         {
 5375              		.loc 1 754 0
 5376 0162 0023     		movs	r3, #0
 696:../user/source/DLT645.c ****     uint8_t i = 0;
 5377              		.loc 1 696 0
 5378 0164 1A46     		mov	r2, r3
 754:../user/source/DLT645.c ****         {
 5379              		.loc 1 754 0
 5380 0166 04E0     		b	.L343
 5381              	.LVL635:
 5382              	.L344:
 756:../user/source/DLT645.c ****         }
 5383              		.loc 1 756 0 discriminator 3
 5384 0168 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 5385 016a 0A44     		add	r2, r2, r1
 5386              	.LVL636:
 5387 016c D2B2     		uxtb	r2, r2
 5388              	.LVL637:
 754:../user/source/DLT645.c ****         {
 5389              		.loc 1 754 0 discriminator 3
 5390 016e 0133     		adds	r3, r3, #1
 5391              	.LVL638:
 5392 0170 DBB2     		uxtb	r3, r3
 5393              	.LVL639:
 5394              	.L343:
 754:../user/source/DLT645.c ****         {
 5395              		.loc 1 754 0 is_stmt 0 discriminator 1
 5396 0172 0F2B     		cmp	r3, #15
 5397 0174 F8D9     		bls	.L344
 758:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 5398              		.loc 1 758 0 is_stmt 1
 5399 0176 2274     		strb	r2, [r4, #16]
 759:../user/source/DLT645.c ****         return true;
 5400              		.loc 1 759 0
 5401 0178 1623     		movs	r3, #22
 5402              	.LVL640:
 5403 017a 6374     		strb	r3, [r4, #17]
 760:../user/source/DLT645.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 159


 5404              		.loc 1 760 0
 5405 017c 0120     		movs	r0, #1
 5406 017e 70BD     		pop	{r4, r5, r6, pc}
 5407              	.LVL641:
 5408              	.L333:
 764:../user/source/DLT645.c ****                          ? C_Voltage
 5409              		.loc 1 764 0
 5410 0180 1A4B     		ldr	r3, .L356+16
 5411 0182 1D68     		ldr	r5, [r3]
 5412 0184 164B     		ldr	r3, .L356+4
 5413 0186 1B68     		ldr	r3, [r3]
 766:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5414              		.loc 1 766 0
 5415 0188 9D42     		cmp	r5, r3
 5416 018a 06DC     		bgt	.L354
 764:../user/source/DLT645.c ****                          ? C_Voltage
 5417              		.loc 1 764 0
 5418 018c 154B     		ldr	r3, .L356+8
 5419 018e 1B68     		ldr	r3, [r3]
 5420 0190 9D42     		cmp	r5, r3
 5421 0192 04DA     		bge	.L345
 766:../user/source/DLT645.c ****         pucBuffer[8] = 0x91;
 5422              		.loc 1 766 0
 5423 0194 40F69805 		movw	r5, #2200
 5424 0198 01E0     		b	.L345
 5425              	.L354:
 5426 019a 40F69805 		movw	r5, #2200
 5427              	.L345:
 764:../user/source/DLT645.c ****                          ? C_Voltage
 5428              		.loc 1 764 0
 5429 019e 134B     		ldr	r3, .L356+16
 5430 01a0 1D60     		str	r5, [r3]
 767:../user/source/DLT645.c ****         pucBuffer[9] = 0x06;
 5431              		.loc 1 767 0
 5432 01a2 9123     		movs	r3, #145
 5433 01a4 2372     		strb	r3, [r4, #8]
 768:../user/source/DLT645.c ****         pucBuffer[14] = GetLowByte(C_Voltage);
 5434              		.loc 1 768 0
 5435 01a6 0623     		movs	r3, #6
 5436 01a8 6372     		strb	r3, [r4, #9]
 769:../user/source/DLT645.c ****         pucBuffer[15] = GetHighByte(C_Voltage);
 5437              		.loc 1 769 0
 5438 01aa 2846     		mov	r0, r5
 5439              	.LVL642:
 5440 01ac FFF7FEFF 		bl	GetLowByte
 5441              	.LVL643:
 5442 01b0 A073     		strb	r0, [r4, #14]
 770:../user/source/DLT645.c ****         for (i = 0; i < 16; i++)
 5443              		.loc 1 770 0
 5444 01b2 2846     		mov	r0, r5
 5445 01b4 FFF7FEFF 		bl	GetHighByte
 5446              	.LVL644:
 5447 01b8 E073     		strb	r0, [r4, #15]
 771:../user/source/DLT645.c ****         {
 5448              		.loc 1 771 0
 5449 01ba 0023     		movs	r3, #0
 696:../user/source/DLT645.c ****     uint8_t i = 0;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 160


 5450              		.loc 1 696 0
 5451 01bc 1A46     		mov	r2, r3
 771:../user/source/DLT645.c ****         {
 5452              		.loc 1 771 0
 5453 01be 04E0     		b	.L346
 5454              	.LVL645:
 5455              	.L347:
 773:../user/source/DLT645.c ****         }
 5456              		.loc 1 773 0 discriminator 3
 5457 01c0 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 5458 01c2 0A44     		add	r2, r2, r1
 5459              	.LVL646:
 5460 01c4 D2B2     		uxtb	r2, r2
 5461              	.LVL647:
 771:../user/source/DLT645.c ****         {
 5462              		.loc 1 771 0 discriminator 3
 5463 01c6 0133     		adds	r3, r3, #1
 5464              	.LVL648:
 5465 01c8 DBB2     		uxtb	r3, r3
 5466              	.LVL649:
 5467              	.L346:
 771:../user/source/DLT645.c ****         {
 5468              		.loc 1 771 0 is_stmt 0 discriminator 1
 5469 01ca 0F2B     		cmp	r3, #15
 5470 01cc F8D9     		bls	.L347
 775:../user/source/DLT645.c ****         pucBuffer[17] = 0x16;
 5471              		.loc 1 775 0 is_stmt 1
 5472 01ce 2274     		strb	r2, [r4, #16]
 776:../user/source/DLT645.c ****         return true;
 5473              		.loc 1 776 0
 5474 01d0 1623     		movs	r3, #22
 5475              	.LVL650:
 5476 01d2 6374     		strb	r3, [r4, #17]
 777:../user/source/DLT645.c ****     }
 5477              		.loc 1 777 0
 5478 01d4 0120     		movs	r0, #1
 5479 01d6 70BD     		pop	{r4, r5, r6, pc}
 5480              	.LVL651:
 5481              	.L348:
 780:../user/source/DLT645.c ****     }
 5482              		.loc 1 780 0
 5483 01d8 0020     		movs	r0, #0
 5484              	.LVL652:
 782:../user/source/DLT645.c **** /********************************************************************
 5485              		.loc 1 782 0
 5486 01da 70BD     		pop	{r4, r5, r6, pc}
 5487              	.LVL653:
 5488              	.L357:
 5489              		.align	2
 5490              	.L356:
 5491 01dc 00000000 		.word	.LANCHOR4
 5492 01e0 00000000 		.word	Voltage_MAX
 5493 01e4 00000000 		.word	Voltage_MIN
 5494 01e8 00000000 		.word	.LANCHOR8
 5495 01ec 00000000 		.word	.LANCHOR9
 5496              		.cfi_endproc
 5497              	.LFE121:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 161


 5499              		.section	.text.Voltage_Change_Init,"ax",%progbits
 5500              		.align	2
 5501              		.global	Voltage_Change_Init
 5502              		.thumb
 5503              		.thumb_func
 5505              	Voltage_Change_Init:
 5506              	.LFB126:
 901:../user/source/DLT645.c ****     uint8_t Vmax1;
 5507              		.loc 1 901 0
 5508              		.cfi_startproc
 5509              		@ args = 0, pretend = 0, frame = 0
 5510              		@ frame_needed = 0, uses_anonymous_args = 0
 5511 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5512              	.LCFI46:
 5513              		.cfi_def_cfa_offset 24
 5514              		.cfi_offset 3, -24
 5515              		.cfi_offset 4, -20
 5516              		.cfi_offset 5, -16
 5517              		.cfi_offset 6, -12
 5518              		.cfi_offset 7, -8
 5519              		.cfi_offset 14, -4
 907:../user/source/DLT645.c ****     /*µçÑ¹ĞŞ¸ÄÉÏÏÂÏŞ³õÊ¼»¯*/
 5520              		.loc 1 907 0
 5521 0002 1948     		ldr	r0, .L362
 5522 0004 FFF7FEFF 		bl	EEProm_Read
 5523              	.LVL654:
 5524 0008 184B     		ldr	r3, .L362+4
 5525 000a 1870     		strb	r0, [r3]
 909:../user/source/DLT645.c ****     Vmax2 = EEProm_Read(FLASH_VMAX2_Addr);
 5526              		.loc 1 909 0
 5527 000c 1848     		ldr	r0, .L362+8
 5528 000e FFF7FEFF 		bl	EEProm_Read
 5529              	.LVL655:
 5530 0012 0446     		mov	r4, r0
 5531              	.LVL656:
 910:../user/source/DLT645.c ****     Vmin1 = EEProm_Read(FLASH_VMIN1_Addr);
 5532              		.loc 1 910 0
 5533 0014 1748     		ldr	r0, .L362+12
 5534 0016 FFF7FEFF 		bl	EEProm_Read
 5535              	.LVL657:
 5536 001a 0546     		mov	r5, r0
 5537              	.LVL658:
 911:../user/source/DLT645.c ****     Vmin2 = EEProm_Read(FLASH_VMIN2_Addr);
 5538              		.loc 1 911 0
 5539 001c 1648     		ldr	r0, .L362+16
 5540 001e FFF7FEFF 		bl	EEProm_Read
 5541              	.LVL659:
 5542 0022 0646     		mov	r6, r0
 5543              	.LVL660:
 912:../user/source/DLT645.c **** 
 5544              		.loc 1 912 0
 5545 0024 1548     		ldr	r0, .L362+20
 5546 0026 FFF7FEFF 		bl	EEProm_Read
 5547              	.LVL661:
 5548 002a 0746     		mov	r7, r0
 5549              	.LVL662:
 914:../user/source/DLT645.c ****         (Vmax2 == 0xff) &&
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 162


 5550              		.loc 1 914 0
 5551 002c FF2C     		cmp	r4, #255
 5552 002e 0ED1     		bne	.L359
 914:../user/source/DLT645.c ****         (Vmax2 == 0xff) &&
 5553              		.loc 1 914 0 is_stmt 0 discriminator 1
 5554 0030 FF2D     		cmp	r5, #255
 5555 0032 0CD1     		bne	.L359
 915:../user/source/DLT645.c ****         (Vmin1 == 0xff) &&
 5556              		.loc 1 915 0 is_stmt 1
 5557 0034 FF2E     		cmp	r6, #255
 5558 0036 0AD1     		bne	.L359
 916:../user/source/DLT645.c ****         (Vmin2 == 0xff))
 5559              		.loc 1 916 0
 5560 0038 FF28     		cmp	r0, #255
 5561 003a 08D1     		bne	.L359
 919:../user/source/DLT645.c ****         Voltage_MIN = Voltage_MIN_Default;
 5562              		.loc 1 919 0
 5563 003c 40F62E12 		movw	r2, #2350
 5564 0040 0F4B     		ldr	r3, .L362+24
 5565 0042 1A60     		str	r2, [r3]
 920:../user/source/DLT645.c ****     }
 5566              		.loc 1 920 0
 5567 0044 40F2BC72 		movw	r2, #1980
 5568 0048 0E4B     		ldr	r3, .L362+28
 5569 004a 1A60     		str	r2, [r3]
 5570 004c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5571              	.LVL663:
 5572              	.L359:
 924:../user/source/DLT645.c ****         Voltage_MIN = Get_Voltage(Vmin1, Vmin2);
 5573              		.loc 1 924 0
 5574 004e 2946     		mov	r1, r5
 5575 0050 2046     		mov	r0, r4
 5576              	.LVL664:
 5577 0052 FFF7FEFF 		bl	Get_Voltage
 5578              	.LVL665:
 5579 0056 0A4B     		ldr	r3, .L362+24
 5580 0058 1860     		str	r0, [r3]
 925:../user/source/DLT645.c ****     }
 5581              		.loc 1 925 0
 5582 005a 3946     		mov	r1, r7
 5583 005c 3046     		mov	r0, r6
 5584 005e FFF7FEFF 		bl	Get_Voltage
 5585              	.LVL666:
 5586 0062 084B     		ldr	r3, .L362+28
 5587 0064 1860     		str	r0, [r3]
 5588 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5589              	.LVL667:
 5590              	.L363:
 5591              		.align	2
 5592              	.L362:
 5593 0068 14EF0108 		.word	134344468
 5594 006c 00000000 		.word	.LANCHOR5
 5595 0070 00EF0108 		.word	134344448
 5596 0074 04EF0108 		.word	134344452
 5597 0078 08EF0108 		.word	134344456
 5598 007c 0CEF0108 		.word	134344460
 5599 0080 00000000 		.word	Voltage_MAX
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 163


 5600 0084 00000000 		.word	Voltage_MIN
 5601              		.cfi_endproc
 5602              	.LFE126:
 5604              		.section	.text.Voltage_Modifier_Method,"ax",%progbits
 5605              		.align	2
 5606              		.global	Voltage_Modifier_Method
 5607              		.thumb
 5608              		.thumb_func
 5610              	Voltage_Modifier_Method:
 5611              	.LFB127:
 938:../user/source/DLT645.c ****     int n = 0;
 5612              		.loc 1 938 0
 5613              		.cfi_startproc
 5614              		@ args = 0, pretend = 0, frame = 0
 5615              		@ frame_needed = 0, uses_anonymous_args = 0
 5616              	.LVL668:
 5617 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5618              	.LCFI47:
 5619              		.cfi_def_cfa_offset 20
 5620              		.cfi_offset 4, -20
 5621              		.cfi_offset 5, -16
 5622              		.cfi_offset 6, -12
 5623              		.cfi_offset 7, -8
 5624              		.cfi_offset 14, -4
 5625              	.LVL669:
 942:../user/source/DLT645.c ****     m = (Voltage_MAX_MAX - Voltage_MAX) / (Voltage_MAX - Voltage_MIN) + 1; //(260-235)/(235-198)+1»
 5626              		.loc 1 942 0
 5627 0002 1F4B     		ldr	r3, .L376
 5628 0004 1E68     		ldr	r6, [r3]
 5629 0006 A6F59661 		sub	r1, r6, #1200
 5630 000a 1E4B     		ldr	r3, .L376+4
 5631 000c 1D68     		ldr	r5, [r3]
 5632 000e AA1B     		subs	r2, r5, r6
 5633 0010 91FBF2F1 		sdiv	r1, r1, r2
 5634 0014 0131     		adds	r1, r1, #1
 5635              	.LVL670:
 943:../user/source/DLT645.c ****     if ((Voltage > Voltage_MAX) && (Voltage <= Voltage_MAX_MAX))
 5636              		.loc 1 943 0
 5637 0016 C5F52F64 		rsb	r4, r5, #2800
 5638 001a 94FBF2F4 		sdiv	r4, r4, r2
 5639              	.LVL671:
 944:../user/source/DLT645.c ****     {
 5640              		.loc 1 944 0
 5641 001e 8542     		cmp	r5, r0
 5642 0020 16DA     		bge	.L365
 5643 0022 0134     		adds	r4, r4, #1
 5644              	.LVL672:
 944:../user/source/DLT645.c ****     {
 5645              		.loc 1 944 0 is_stmt 0 discriminator 1
 5646 0024 B0F52F6F 		cmp	r0, #2800
 5647 0028 12DC     		bgt	.L365
 946:../user/source/DLT645.c ****         {
 5648              		.loc 1 946 0 is_stmt 1
 5649 002a AB18     		adds	r3, r5, r2
 5650 002c 9842     		cmp	r0, r3
 5651 002e 0CDC     		bgt	.L371
 948:../user/source/DLT645.c ****             return Voltage;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 164


 5652              		.loc 1 948 0
 5653 0030 451B     		subs	r5, r0, r5
 5654 0032 A0EB4500 		sub	r0, r0, r5, lsl #1
 5655              	.LVL673:
 949:../user/source/DLT645.c ****         }
 5656              		.loc 1 949 0
 5657 0036 F0BD     		pop	{r4, r5, r6, r7, pc}
 5658              	.LVL674:
 5659              	.L368:
 955:../user/source/DLT645.c ****                 {
 5660              		.loc 1 955 0
 5661 0038 0133     		adds	r3, r3, #1
 5662              	.LVL675:
 5663 003a 03FB02F7 		mul	r7, r3, r2
 5664 003e 05EB070E 		add	lr, r5, r7
 5665 0042 7045     		cmp	r0, lr
 5666 0044 02DC     		bgt	.L366
 957:../user/source/DLT645.c ****                     return Voltage;
 5667              		.loc 1 957 0
 5668 0046 C01B     		subs	r0, r0, r7
 5669              	.LVL676:
 958:../user/source/DLT645.c ****                 }
 5670              		.loc 1 958 0
 5671 0048 F0BD     		pop	{r4, r5, r6, r7, pc}
 5672              	.LVL677:
 5673              	.L371:
 5674 004a 0123     		movs	r3, #1
 5675              	.LVL678:
 5676              	.L366:
 953:../user/source/DLT645.c ****             {
 5677              		.loc 1 953 0 discriminator 1
 5678 004c A342     		cmp	r3, r4
 5679 004e F3DB     		blt	.L368
 5680              	.LVL679:
 5681              	.L365:
 963:../user/source/DLT645.c ****     {
 5682              		.loc 1 963 0
 5683 0050 8642     		cmp	r6, r0
 5684 0052 14DD     		ble	.L367
 963:../user/source/DLT645.c ****     {
 5685              		.loc 1 963 0 is_stmt 0 discriminator 1
 5686 0054 B0F5966F 		cmp	r0, #1200
 5687 0058 11DB     		blt	.L367
 965:../user/source/DLT645.c ****         {
 5688              		.loc 1 965 0 is_stmt 1
 5689 005a B31A     		subs	r3, r6, r2
 5690 005c 9842     		cmp	r0, r3
 5691 005e 0BDB     		blt	.L374
 967:../user/source/DLT645.c ****             return Voltage;
 5692              		.loc 1 967 0
 5693 0060 361A     		subs	r6, r6, r0
 5694 0062 00EB4600 		add	r0, r0, r6, lsl #1
 5695              	.LVL680:
 968:../user/source/DLT645.c ****         }
 5696              		.loc 1 968 0
 5697 0066 F0BD     		pop	{r4, r5, r6, r7, pc}
 5698              	.LVL681:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 165


 5699              	.L370:
 974:../user/source/DLT645.c ****                 {
 5700              		.loc 1 974 0
 5701 0068 0133     		adds	r3, r3, #1
 5702              	.LVL682:
 5703 006a 03FB02F4 		mul	r4, r3, r2
 5704 006e 351B     		subs	r5, r6, r4
 5705 0070 A842     		cmp	r0, r5
 5706 0072 02DB     		blt	.L369
 976:../user/source/DLT645.c ****                     return Voltage;
 5707              		.loc 1 976 0
 5708 0074 2044     		add	r0, r0, r4
 5709              	.LVL683:
 977:../user/source/DLT645.c ****                 }
 5710              		.loc 1 977 0
 5711 0076 F0BD     		pop	{r4, r5, r6, r7, pc}
 5712              	.LVL684:
 5713              	.L374:
 5714 0078 0123     		movs	r3, #1
 5715              	.LVL685:
 5716              	.L369:
 972:../user/source/DLT645.c ****             {
 5717              		.loc 1 972 0 discriminator 1
 5718 007a 8B42     		cmp	r3, r1
 5719 007c F4DB     		blt	.L370
 5720              	.LVL686:
 5721              	.L367:
 983:../user/source/DLT645.c **** /*****************************************************
 5722              		.loc 1 983 0
 5723 007e F0BD     		pop	{r4, r5, r6, r7, pc}
 5724              	.L377:
 5725              		.align	2
 5726              	.L376:
 5727 0080 00000000 		.word	Voltage_MIN
 5728 0084 00000000 		.word	Voltage_MAX
 5729              		.cfi_endproc
 5730              	.LFE127:
 5732              		.section	.text.Voltage_Modifier,"ax",%progbits
 5733              		.align	2
 5734              		.global	Voltage_Modifier
 5735              		.thumb
 5736              		.thumb_func
 5738              	Voltage_Modifier:
 5739              	.LFB120:
 594:../user/source/DLT645.c **** 
 5740              		.loc 1 594 0
 5741              		.cfi_startproc
 5742              		@ args = 0, pretend = 0, frame = 0
 5743              		@ frame_needed = 0, uses_anonymous_args = 0
 5744              	.LVL687:
 5745 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5746              	.LCFI48:
 5747              		.cfi_def_cfa_offset 24
 5748              		.cfi_offset 3, -24
 5749              		.cfi_offset 4, -20
 5750              		.cfi_offset 5, -16
 5751              		.cfi_offset 6, -12
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 166


 5752              		.cfi_offset 7, -8
 5753              		.cfi_offset 14, -4
 5754              	.LVL688:
 599:../user/source/DLT645.c ****         return;
 5755              		.loc 1 599 0
 5756 0002 7A4B     		ldr	r3, .L395
 5757 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5758 0006 002B     		cmp	r3, #0
 5759 0008 00F0EF80 		beq	.L378
 601:../user/source/DLT645.c ****         (pucBuffer[10] == 0x33) &&
 5760              		.loc 1 601 0
 5761 000c 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 5762 000e 912B     		cmp	r3, #145
 5763 0010 40F0EB80 		bne	.L378
 602:../user/source/DLT645.c ****         (pucBuffer[12] == 0x34) &&
 5764              		.loc 1 602 0 discriminator 1
 5765 0014 837A     		ldrb	r3, [r0, #10]	@ zero_extendqisi2
 601:../user/source/DLT645.c ****         (pucBuffer[10] == 0x33) &&
 5766              		.loc 1 601 0 discriminator 1
 5767 0016 332B     		cmp	r3, #51
 5768 0018 40F0E780 		bne	.L378
 603:../user/source/DLT645.c ****         (pucBuffer[13] == 0x35))
 5769              		.loc 1 603 0
 5770 001c 037B     		ldrb	r3, [r0, #12]	@ zero_extendqisi2
 602:../user/source/DLT645.c ****         (pucBuffer[12] == 0x34) &&
 5771              		.loc 1 602 0
 5772 001e 342B     		cmp	r3, #52
 5773 0020 40F0E380 		bne	.L378
 604:../user/source/DLT645.c ****     {
 5774              		.loc 1 604 0
 5775 0024 437B     		ldrb	r3, [r0, #13]	@ zero_extendqisi2
 603:../user/source/DLT645.c ****         (pucBuffer[13] == 0x35))
 5776              		.loc 1 603 0
 5777 0026 352B     		cmp	r3, #53
 5778 0028 40F0DF80 		bne	.L378
 5779 002c 0446     		mov	r4, r0
 606:../user/source/DLT645.c ****         {
 5780              		.loc 1 606 0
 5781 002e C57A     		ldrb	r5, [r0, #11]	@ zero_extendqisi2
 5782 0030 322D     		cmp	r5, #50
 5783 0032 62D1     		bne	.L380
 608:../user/source/DLT645.c ****             {
 5784              		.loc 1 608 0
 5785 0034 867B     		ldrb	r6, [r0, #14]	@ zero_extendqisi2
 5786 0036 C77B     		ldrb	r7, [r0, #15]	@ zero_extendqisi2
 5787 0038 3946     		mov	r1, r7
 5788 003a 3046     		mov	r0, r6
 5789              	.LVL689:
 5790 003c FFF7FEFF 		bl	BCD_Verity
 5791              	.LVL690:
 5792 0040 C8B1     		cbz	r0, .L381
 610:../user/source/DLT645.c ****                 if ((A_Voltage > Voltage_MAX) || (A_Voltage < Voltage_MIN)) //ĞŞ¸ÄAÏàµçÑ¹
 5793              		.loc 1 610 0
 5794 0042 3946     		mov	r1, r7
 5795 0044 3046     		mov	r0, r6
 5796 0046 FFF7FEFF 		bl	Get_Voltage
 5797              	.LVL691:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 167


 5798 004a 694B     		ldr	r3, .L395+4
 5799 004c 1860     		str	r0, [r3]
 611:../user/source/DLT645.c ****                 {
 5800              		.loc 1 611 0
 5801 004e 694B     		ldr	r3, .L395+8
 5802 0050 1B68     		ldr	r3, [r3]
 5803 0052 9842     		cmp	r0, r3
 5804 0054 03DC     		bgt	.L382
 611:../user/source/DLT645.c ****                 {
 5805              		.loc 1 611 0 is_stmt 0 discriminator 1
 5806 0056 684B     		ldr	r3, .L395+12
 5807 0058 1B68     		ldr	r3, [r3]
 5808 005a 9842     		cmp	r0, r3
 5809 005c 0BDA     		bge	.L381
 5810              	.L382:
 613:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(A_Voltage);
 5811              		.loc 1 613 0 is_stmt 1
 5812 005e FFF7FEFF 		bl	Voltage_Modifier_Method
 5813              	.LVL692:
 5814 0062 0646     		mov	r6, r0
 5815 0064 624B     		ldr	r3, .L395+4
 5816 0066 1860     		str	r0, [r3]
 614:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(A_Voltage);
 5817              		.loc 1 614 0
 5818 0068 FFF7FEFF 		bl	GetLowByte
 5819              	.LVL693:
 5820 006c A073     		strb	r0, [r4, #14]
 615:../user/source/DLT645.c ****                 }
 5821              		.loc 1 615 0
 5822 006e 3046     		mov	r0, r6
 5823 0070 FFF7FEFF 		bl	GetHighByte
 5824              	.LVL694:
 5825 0074 E073     		strb	r0, [r4, #15]
 5826              	.L381:
 618:../user/source/DLT645.c ****             {
 5827              		.loc 1 618 0
 5828 0076 267C     		ldrb	r6, [r4, #16]	@ zero_extendqisi2
 5829 0078 677C     		ldrb	r7, [r4, #17]	@ zero_extendqisi2
 5830 007a 3946     		mov	r1, r7
 5831 007c 3046     		mov	r0, r6
 5832 007e FFF7FEFF 		bl	BCD_Verity
 5833              	.LVL695:
 5834 0082 C8B1     		cbz	r0, .L383
 620:../user/source/DLT645.c ****                 if ((B_Voltage > Voltage_MAX) || (B_Voltage < Voltage_MIN)) //ĞŞ¸ÄBÏàµçÑ¹
 5835              		.loc 1 620 0
 5836 0084 3946     		mov	r1, r7
 5837 0086 3046     		mov	r0, r6
 5838 0088 FFF7FEFF 		bl	Get_Voltage
 5839              	.LVL696:
 5840 008c 5B4B     		ldr	r3, .L395+16
 5841 008e 1860     		str	r0, [r3]
 621:../user/source/DLT645.c ****                 {
 5842              		.loc 1 621 0
 5843 0090 584B     		ldr	r3, .L395+8
 5844 0092 1B68     		ldr	r3, [r3]
 5845 0094 9842     		cmp	r0, r3
 5846 0096 03DC     		bgt	.L384
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 168


 621:../user/source/DLT645.c ****                 {
 5847              		.loc 1 621 0 is_stmt 0 discriminator 1
 5848 0098 574B     		ldr	r3, .L395+12
 5849 009a 1B68     		ldr	r3, [r3]
 5850 009c 9842     		cmp	r0, r3
 5851 009e 0BDA     		bge	.L383
 5852              	.L384:
 623:../user/source/DLT645.c ****                     pucBuffer[16] = GetLowByte(B_Voltage);
 5853              		.loc 1 623 0 is_stmt 1
 5854 00a0 FFF7FEFF 		bl	Voltage_Modifier_Method
 5855              	.LVL697:
 5856 00a4 0646     		mov	r6, r0
 5857 00a6 554B     		ldr	r3, .L395+16
 5858 00a8 1860     		str	r0, [r3]
 624:../user/source/DLT645.c ****                     pucBuffer[17] = GetHighByte(B_Voltage);
 5859              		.loc 1 624 0
 5860 00aa FFF7FEFF 		bl	GetLowByte
 5861              	.LVL698:
 5862 00ae 2074     		strb	r0, [r4, #16]
 625:../user/source/DLT645.c ****                 }
 5863              		.loc 1 625 0
 5864 00b0 3046     		mov	r0, r6
 5865 00b2 FFF7FEFF 		bl	GetHighByte
 5866              	.LVL699:
 5867 00b6 6074     		strb	r0, [r4, #17]
 5868              	.L383:
 628:../user/source/DLT645.c ****             {
 5869              		.loc 1 628 0
 5870 00b8 A67C     		ldrb	r6, [r4, #18]	@ zero_extendqisi2
 5871 00ba E77C     		ldrb	r7, [r4, #19]	@ zero_extendqisi2
 5872 00bc 3946     		mov	r1, r7
 5873 00be 3046     		mov	r0, r6
 5874 00c0 FFF7FEFF 		bl	BCD_Verity
 5875              	.LVL700:
 5876 00c4 C8B1     		cbz	r0, .L380
 630:../user/source/DLT645.c ****                 if ((C_Voltage > Voltage_MAX) || (C_Voltage < Voltage_MIN)) //ĞŞ¸ÄCÏàµçÑ¹
 5877              		.loc 1 630 0
 5878 00c6 3946     		mov	r1, r7
 5879 00c8 3046     		mov	r0, r6
 5880 00ca FFF7FEFF 		bl	Get_Voltage
 5881              	.LVL701:
 5882 00ce 4C4B     		ldr	r3, .L395+20
 5883 00d0 1860     		str	r0, [r3]
 631:../user/source/DLT645.c ****                 {
 5884              		.loc 1 631 0
 5885 00d2 484B     		ldr	r3, .L395+8
 5886 00d4 1B68     		ldr	r3, [r3]
 5887 00d6 9842     		cmp	r0, r3
 5888 00d8 03DC     		bgt	.L385
 631:../user/source/DLT645.c ****                 {
 5889              		.loc 1 631 0 is_stmt 0 discriminator 1
 5890 00da 474B     		ldr	r3, .L395+12
 5891 00dc 1B68     		ldr	r3, [r3]
 5892 00de 9842     		cmp	r0, r3
 5893 00e0 0BDA     		bge	.L380
 5894              	.L385:
 633:../user/source/DLT645.c ****                     pucBuffer[18] = GetLowByte(C_Voltage);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 169


 5895              		.loc 1 633 0 is_stmt 1
 5896 00e2 FFF7FEFF 		bl	Voltage_Modifier_Method
 5897              	.LVL702:
 5898 00e6 0646     		mov	r6, r0
 5899 00e8 454B     		ldr	r3, .L395+20
 5900 00ea 1860     		str	r0, [r3]
 634:../user/source/DLT645.c ****                     pucBuffer[19] = GetHighByte(C_Voltage);
 5901              		.loc 1 634 0
 5902 00ec FFF7FEFF 		bl	GetLowByte
 5903              	.LVL703:
 5904 00f0 A074     		strb	r0, [r4, #18]
 635:../user/source/DLT645.c ****                 }
 5905              		.loc 1 635 0
 5906 00f2 3046     		mov	r0, r6
 5907 00f4 FFF7FEFF 		bl	GetHighByte
 5908              	.LVL704:
 5909 00f8 E074     		strb	r0, [r4, #19]
 5910              	.L380:
 639:../user/source/DLT645.c ****         {
 5911              		.loc 1 639 0
 5912 00fa 342D     		cmp	r5, #52
 5913 00fc 20D1     		bne	.L386
 641:../user/source/DLT645.c ****             {
 5914              		.loc 1 641 0
 5915 00fe A67B     		ldrb	r6, [r4, #14]	@ zero_extendqisi2
 5916 0100 E77B     		ldrb	r7, [r4, #15]	@ zero_extendqisi2
 5917 0102 3946     		mov	r1, r7
 5918 0104 3046     		mov	r0, r6
 5919 0106 FFF7FEFF 		bl	BCD_Verity
 5920              	.LVL705:
 5921 010a C8B1     		cbz	r0, .L386
 643:../user/source/DLT645.c ****                 if ((A_Voltage > Voltage_MAX) || (A_Voltage < Voltage_MIN)) //ĞŞ¸ÄAÏàµçÑ¹
 5922              		.loc 1 643 0
 5923 010c 3946     		mov	r1, r7
 5924 010e 3046     		mov	r0, r6
 5925 0110 FFF7FEFF 		bl	Get_Voltage
 5926              	.LVL706:
 5927 0114 364B     		ldr	r3, .L395+4
 5928 0116 1860     		str	r0, [r3]
 644:../user/source/DLT645.c ****                 {
 5929              		.loc 1 644 0
 5930 0118 364B     		ldr	r3, .L395+8
 5931 011a 1B68     		ldr	r3, [r3]
 5932 011c 9842     		cmp	r0, r3
 5933 011e 03DC     		bgt	.L387
 644:../user/source/DLT645.c ****                 {
 5934              		.loc 1 644 0 is_stmt 0 discriminator 1
 5935 0120 354B     		ldr	r3, .L395+12
 5936 0122 1B68     		ldr	r3, [r3]
 5937 0124 9842     		cmp	r0, r3
 5938 0126 0BDA     		bge	.L386
 5939              	.L387:
 646:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(A_Voltage);
 5940              		.loc 1 646 0 is_stmt 1
 5941 0128 FFF7FEFF 		bl	Voltage_Modifier_Method
 5942              	.LVL707:
 5943 012c 0646     		mov	r6, r0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 170


 5944 012e 304B     		ldr	r3, .L395+4
 5945 0130 1860     		str	r0, [r3]
 647:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(A_Voltage);
 5946              		.loc 1 647 0
 5947 0132 FFF7FEFF 		bl	GetLowByte
 5948              	.LVL708:
 5949 0136 A073     		strb	r0, [r4, #14]
 648:../user/source/DLT645.c ****                 }
 5950              		.loc 1 648 0
 5951 0138 3046     		mov	r0, r6
 5952 013a FFF7FEFF 		bl	GetHighByte
 5953              	.LVL709:
 5954 013e E073     		strb	r0, [r4, #15]
 5955              	.L386:
 652:../user/source/DLT645.c ****         {
 5956              		.loc 1 652 0
 5957 0140 352D     		cmp	r5, #53
 5958 0142 20D1     		bne	.L388
 654:../user/source/DLT645.c ****             {
 5959              		.loc 1 654 0
 5960 0144 A67B     		ldrb	r6, [r4, #14]	@ zero_extendqisi2
 5961 0146 E77B     		ldrb	r7, [r4, #15]	@ zero_extendqisi2
 5962 0148 3946     		mov	r1, r7
 5963 014a 3046     		mov	r0, r6
 5964 014c FFF7FEFF 		bl	BCD_Verity
 5965              	.LVL710:
 5966 0150 C8B1     		cbz	r0, .L388
 656:../user/source/DLT645.c ****                 if ((B_Voltage > Voltage_MAX) || (B_Voltage < Voltage_MIN)) //ĞŞ¸ÄBÏàµçÑ¹
 5967              		.loc 1 656 0
 5968 0152 3946     		mov	r1, r7
 5969 0154 3046     		mov	r0, r6
 5970 0156 FFF7FEFF 		bl	Get_Voltage
 5971              	.LVL711:
 5972 015a 284B     		ldr	r3, .L395+16
 5973 015c 1860     		str	r0, [r3]
 657:../user/source/DLT645.c ****                 {
 5974              		.loc 1 657 0
 5975 015e 254B     		ldr	r3, .L395+8
 5976 0160 1B68     		ldr	r3, [r3]
 5977 0162 9842     		cmp	r0, r3
 5978 0164 03DC     		bgt	.L389
 657:../user/source/DLT645.c ****                 {
 5979              		.loc 1 657 0 is_stmt 0 discriminator 1
 5980 0166 244B     		ldr	r3, .L395+12
 5981 0168 1B68     		ldr	r3, [r3]
 5982 016a 9842     		cmp	r0, r3
 5983 016c 0BDA     		bge	.L388
 5984              	.L389:
 659:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(B_Voltage);
 5985              		.loc 1 659 0 is_stmt 1
 5986 016e FFF7FEFF 		bl	Voltage_Modifier_Method
 5987              	.LVL712:
 5988 0172 0646     		mov	r6, r0
 5989 0174 214B     		ldr	r3, .L395+16
 5990 0176 1860     		str	r0, [r3]
 660:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(B_Voltage);
 5991              		.loc 1 660 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 171


 5992 0178 FFF7FEFF 		bl	GetLowByte
 5993              	.LVL713:
 5994 017c A073     		strb	r0, [r4, #14]
 661:../user/source/DLT645.c ****                 }
 5995              		.loc 1 661 0
 5996 017e 3046     		mov	r0, r6
 5997 0180 FFF7FEFF 		bl	GetHighByte
 5998              	.LVL714:
 5999 0184 E073     		strb	r0, [r4, #15]
 6000              	.L388:
 665:../user/source/DLT645.c ****         {
 6001              		.loc 1 665 0
 6002 0186 362D     		cmp	r5, #54
 6003 0188 20D1     		bne	.L390
 667:../user/source/DLT645.c ****             {
 6004              		.loc 1 667 0
 6005 018a A57B     		ldrb	r5, [r4, #14]	@ zero_extendqisi2
 6006 018c E67B     		ldrb	r6, [r4, #15]	@ zero_extendqisi2
 6007 018e 3146     		mov	r1, r6
 6008 0190 2846     		mov	r0, r5
 6009 0192 FFF7FEFF 		bl	BCD_Verity
 6010              	.LVL715:
 6011 0196 C8B1     		cbz	r0, .L390
 669:../user/source/DLT645.c ****                 if ((C_Voltage > Voltage_MAX) || (C_Voltage < Voltage_MIN)) //ĞŞ¸ÄCÏàµçÑ¹
 6012              		.loc 1 669 0
 6013 0198 3146     		mov	r1, r6
 6014 019a 2846     		mov	r0, r5
 6015 019c FFF7FEFF 		bl	Get_Voltage
 6016              	.LVL716:
 6017 01a0 174B     		ldr	r3, .L395+20
 6018 01a2 1860     		str	r0, [r3]
 670:../user/source/DLT645.c ****                 {
 6019              		.loc 1 670 0
 6020 01a4 134B     		ldr	r3, .L395+8
 6021 01a6 1B68     		ldr	r3, [r3]
 6022 01a8 9842     		cmp	r0, r3
 6023 01aa 03DC     		bgt	.L391
 670:../user/source/DLT645.c ****                 {
 6024              		.loc 1 670 0 is_stmt 0 discriminator 1
 6025 01ac 124B     		ldr	r3, .L395+12
 6026 01ae 1B68     		ldr	r3, [r3]
 6027 01b0 9842     		cmp	r0, r3
 6028 01b2 0BDA     		bge	.L390
 6029              	.L391:
 672:../user/source/DLT645.c ****                     pucBuffer[14] = GetLowByte(C_Voltage);
 6030              		.loc 1 672 0 is_stmt 1
 6031 01b4 FFF7FEFF 		bl	Voltage_Modifier_Method
 6032              	.LVL717:
 6033 01b8 0546     		mov	r5, r0
 6034 01ba 114B     		ldr	r3, .L395+20
 6035 01bc 1860     		str	r0, [r3]
 673:../user/source/DLT645.c ****                     pucBuffer[15] = GetHighByte(C_Voltage);
 6036              		.loc 1 673 0
 6037 01be FFF7FEFF 		bl	GetLowByte
 6038              	.LVL718:
 6039 01c2 A073     		strb	r0, [r4, #14]
 674:../user/source/DLT645.c ****                 }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 172


 6040              		.loc 1 674 0
 6041 01c4 2846     		mov	r0, r5
 6042 01c6 FFF7FEFF 		bl	GetHighByte
 6043              	.LVL719:
 6044 01ca E073     		strb	r0, [r4, #15]
 6045              	.L390:
 679:../user/source/DLT645.c ****         {
 6046              		.loc 1 679 0
 6047 01cc 0023     		movs	r3, #0
 596:../user/source/DLT645.c ****     uint8_t i = 0;
 6048              		.loc 1 596 0
 6049 01ce 1A46     		mov	r2, r3
 679:../user/source/DLT645.c ****         {
 6050              		.loc 1 679 0
 6051 01d0 04E0     		b	.L392
 6052              	.LVL720:
 6053              	.L393:
 681:../user/source/DLT645.c ****         }
 6054              		.loc 1 681 0 discriminator 3
 6055 01d2 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 6056 01d4 0A44     		add	r2, r2, r1
 6057              	.LVL721:
 6058 01d6 D2B2     		uxtb	r2, r2
 6059              	.LVL722:
 679:../user/source/DLT645.c ****         {
 6060              		.loc 1 679 0 discriminator 3
 6061 01d8 0133     		adds	r3, r3, #1
 6062              	.LVL723:
 6063 01da DBB2     		uxtb	r3, r3
 6064              	.LVL724:
 6065              	.L392:
 679:../user/source/DLT645.c ****         {
 6066              		.loc 1 679 0 is_stmt 0 discriminator 1
 6067 01dc 0949     		ldr	r1, .L395+24
 6068 01de 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 6069 01e0 01F10A00 		add	r0, r1, #10
 6070 01e4 8342     		cmp	r3, r0
 6071 01e6 F4DB     		blt	.L393
 683:../user/source/DLT645.c ****     }
 6072              		.loc 1 683 0 is_stmt 1
 6073 01e8 2254     		strb	r2, [r4, r0]
 6074              	.LVL725:
 6075              	.L378:
 6076 01ea F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6077              	.L396:
 6078              		.align	2
 6079              	.L395:
 6080 01ec 00000000 		.word	.LANCHOR5
 6081 01f0 00000000 		.word	.LANCHOR4
 6082 01f4 00000000 		.word	Voltage_MAX
 6083 01f8 00000000 		.word	Voltage_MIN
 6084 01fc 00000000 		.word	.LANCHOR8
 6085 0200 00000000 		.word	.LANCHOR9
 6086 0204 00000000 		.word	.LANCHOR0
 6087              		.cfi_endproc
 6088              	.LFE120:
 6090              		.section	.text.vVoltageHandle,"ax",%progbits
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 173


 6091              		.align	2
 6092              		.global	vVoltageHandle
 6093              		.thumb
 6094              		.thumb_func
 6096              	vVoltageHandle:
 6097              	.LFB119:
 576:../user/source/DLT645.c ****     /*µÈ´ıµçÑ¹»ØÖ¡×´Ì¬ÇåÎ»*/
 6098              		.loc 1 576 0
 6099              		.cfi_startproc
 6100              		@ args = 0, pretend = 0, frame = 0
 6101              		@ frame_needed = 0, uses_anonymous_args = 0
 6102              	.LVL726:
 6103 0000 08B5     		push	{r3, lr}
 6104              	.LCFI49:
 6105              		.cfi_def_cfa_offset 8
 6106              		.cfi_offset 3, -8
 6107              		.cfi_offset 14, -4
 578:../user/source/DLT645.c ****     /*¼ÆÊ±Æ÷¸´Î»*/
 6108              		.loc 1 578 0
 6109 0002 0122     		movs	r2, #1
 6110 0004 044B     		ldr	r3, .L399
 6111 0006 1A70     		strb	r2, [r3]
 580:../user/source/DLT645.c ****     uwTime2FramesCounter = 0;
 6112              		.loc 1 580 0
 6113 0008 0023     		movs	r3, #0
 6114 000a 044A     		ldr	r2, .L399+4
 6115 000c 1370     		strb	r3, [r2]
 581:../user/source/DLT645.c ****     /*µçÑ¹Ö¡ÅĞ¶Ï´¦Àí*/
 6116              		.loc 1 581 0
 6117 000e 044A     		ldr	r2, .L399+8
 6118 0010 1380     		strh	r3, [r2]	@ movhi
 583:../user/source/DLT645.c **** }
 6119              		.loc 1 583 0
 6120 0012 FFF7FEFF 		bl	Voltage_Modifier
 6121              	.LVL727:
 6122 0016 08BD     		pop	{r3, pc}
 6123              	.L400:
 6124              		.align	2
 6125              	.L399:
 6126 0018 00000000 		.word	Voltage_Frame_Status
 6127 001c 00000000 		.word	blFramesCounterStatus
 6128 0020 00000000 		.word	uwTime2FramesCounter
 6129              		.cfi_endproc
 6130              	.LFE119:
 6132              		.section	.text.vCurrent_Limit_DefaultSet,"ax",%progbits
 6133              		.align	2
 6134              		.global	vCurrent_Limit_DefaultSet
 6135              		.thumb
 6136              		.thumb_func
 6138              	vCurrent_Limit_DefaultSet:
 6139              	.LFB132:
1315:../user/source/DLT645.c ****     uint32_t uwLimit;
 6140              		.loc 1 1315 0
 6141              		.cfi_startproc
 6142              		@ args = 0, pretend = 0, frame = 0
 6143              		@ frame_needed = 0, uses_anonymous_args = 0
 6144 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 174


 6145              	.LCFI50:
 6146              		.cfi_def_cfa_offset 8
 6147              		.cfi_offset 3, -8
 6148              		.cfi_offset 14, -4
1330:../user/source/DLT645.c ****     TransFormer.rated_current = 288000;
 6149              		.loc 1 1330 0
 6150 0002 174B     		ldr	r3, .L407
 6151 0004 C822     		movs	r2, #200
 6152 0006 1A60     		str	r2, [r3]
1331:../user/source/DLT645.c **** #endif
 6153              		.loc 1 1331 0
 6154 0008 164A     		ldr	r2, .L407+4
 6155 000a 5A60     		str	r2, [r3, #4]
1339:../user/source/DLT645.c ****     /*±ä±ÈÎŞĞ§ £¬ÔòÎª³õ´ÎÉÏµç*/
 6156              		.loc 1 1339 0
 6157 000c 1648     		ldr	r0, .L407+8
 6158 000e FFF7FEFF 		bl	Flash_Read_Word
 6159              	.LVL728:
1341:../user/source/DLT645.c ****     {
 6160              		.loc 1 1341 0
 6161 0012 B0F1FF3F 		cmp	r0, #-1
 6162 0016 06D1     		bne	.L402
1344:../user/source/DLT645.c ****         /*´æ´¢CTÖµ*/
 6163              		.loc 1 1344 0
 6164 0018 5021     		movs	r1, #80
 6165 001a 114B     		ldr	r3, .L407
 6166 001c 9960     		str	r1, [r3, #8]
1346:../user/source/DLT645.c ****     }
 6167              		.loc 1 1346 0
 6168 001e 1248     		ldr	r0, .L407+8
 6169              	.LVL729:
 6170 0020 FFF7FEFF 		bl	Flash_Write_Word
 6171              	.LVL730:
 6172 0024 01E0     		b	.L403
 6173              	.LVL731:
 6174              	.L402:
1351:../user/source/DLT645.c ****     }
 6175              		.loc 1 1351 0
 6176 0026 0E4B     		ldr	r3, .L407
 6177 0028 9860     		str	r0, [r3, #8]
 6178              	.LVL732:
 6179              	.L403:
1354:../user/source/DLT645.c ****     /*²ÎÊıÎŞĞ§£¬³õ´ÎÉÏµç*/
 6180              		.loc 1 1354 0
 6181 002a 1048     		ldr	r0, .L407+12
 6182 002c FFF7FEFF 		bl	Flash_Read_Word
 6183              	.LVL733:
1356:../user/source/DLT645.c ****     {
 6184              		.loc 1 1356 0
 6185 0030 B0F1FF3F 		cmp	r0, #-1
 6186 0034 10D1     		bne	.L404
1359:../user/source/DLT645.c ****         /*´æ´¢µçÁ÷ÉÏÏŞÖµ*/
 6187              		.loc 1 1359 0
 6188 0036 0A48     		ldr	r0, .L407
 6189              	.LVL734:
 6190 0038 4368     		ldr	r3, [r0, #4]
 6191 003a 8268     		ldr	r2, [r0, #8]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 175


 6192 003c B3FBF2F2 		udiv	r2, r3, r2
 6193 0040 02EB4202 		add	r2, r2, r2, lsl #1
 6194 0044 D300     		lsls	r3, r2, #3
 6195 0046 0A49     		ldr	r1, .L407+16
 6196 0048 A1FB0331 		umull	r3, r1, r1, r3
 6197 004c C908     		lsrs	r1, r1, #3
 6198 004e C160     		str	r1, [r0, #12]
1361:../user/source/DLT645.c ****     }
 6199              		.loc 1 1361 0
 6200 0050 0648     		ldr	r0, .L407+12
 6201 0052 FFF7FEFF 		bl	Flash_Write_Word
 6202              	.LVL735:
 6203 0056 08BD     		pop	{r3, pc}
 6204              	.LVL736:
 6205              	.L404:
1366:../user/source/DLT645.c ****     }
 6206              		.loc 1 1366 0
 6207 0058 014B     		ldr	r3, .L407
 6208 005a D860     		str	r0, [r3, #12]
 6209 005c 08BD     		pop	{r3, pc}
 6210              	.L408:
 6211 005e 00BF     		.align	2
 6212              	.L407:
 6213 0060 00000000 		.word	TransFormer
 6214 0064 00650400 		.word	288000
 6215 0068 20EF0108 		.word	134344480
 6216 006c 1CEF0108 		.word	134344476
 6217 0070 CDCCCCCC 		.word	-858993459
 6218              		.cfi_endproc
 6219              	.LFE132:
 6221              		.section	.text.vCurrentDirect_Modify,"ax",%progbits
 6222              		.align	2
 6223              		.global	vCurrentDirect_Modify
 6224              		.thumb
 6225              		.thumb_func
 6227              	vCurrentDirect_Modify:
 6228              	.LFB134:
1482:../user/source/DLT645.c ****     uint8_t i = 0;
 6229              		.loc 1 1482 0
 6230              		.cfi_startproc
 6231              		@ args = 0, pretend = 0, frame = 0
 6232              		@ frame_needed = 0, uses_anonymous_args = 0
 6233              		@ link register save eliminated.
 6234              	.LVL737:
1485:../user/source/DLT645.c ****     {
 6235              		.loc 1 1485 0
 6236 0000 C27A     		ldrb	r2, [r0, #11]	@ zero_extendqisi2
 6237 0002 323A     		subs	r2, r2, #50
 6238 0004 042A     		cmp	r2, #4
 6239 0006 5BD8     		bhi	.L409
 6240 0008 DFE802F0 		tbb	[pc, r2]
 6241              	.L412:
 6242 000c 03       		.byte	(.L411-.L412)/2
 6243 000d 5A       		.byte	(.L409-.L412)/2
 6244 000e 22       		.byte	(.L413-.L412)/2
 6245 000f 35       		.byte	(.L414-.L412)/2
 6246 0010 48       		.byte	(.L415-.L412)/2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 176


 6247 0011 00       		.p2align 1
 6248              	.L411:
1489:../user/source/DLT645.c ****         pucBuffer[19] = ((pucBuffer[19] - 0x33) & 0xEF) + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ
 6249              		.loc 1 1489 0
 6250 0012 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 6251 0014 333A     		subs	r2, r2, #51
 6252 0016 22F01002 		bic	r2, r2, #16
 6253 001a 3332     		adds	r2, r2, #51
 6254 001c 0274     		strb	r2, [r0, #16]
1490:../user/source/DLT645.c ****         pucBuffer[22] = ((pucBuffer[22] - 0x33) & 0xEF) + 0x33; //×î¸ßbitÎ»Îª1£¬±íÊ¾Îª¸ºÖµ£¬½«×î¸ßÎ
 6255              		.loc 1 1490 0
 6256 001e C27C     		ldrb	r2, [r0, #19]	@ zero_extendqisi2
 6257 0020 333A     		subs	r2, r2, #51
 6258 0022 22F01002 		bic	r2, r2, #16
 6259 0026 3332     		adds	r2, r2, #51
 6260 0028 C274     		strb	r2, [r0, #19]
1491:../user/source/DLT645.c ****         for (i = 0; i < 23; i++)                                //Êı¾İÓò³¤¶È23
 6261              		.loc 1 1491 0
 6262 002a 827D     		ldrb	r2, [r0, #22]	@ zero_extendqisi2
 6263 002c 333A     		subs	r2, r2, #51
 6264 002e 22F01002 		bic	r2, r2, #16
 6265 0032 3332     		adds	r2, r2, #51
 6266 0034 8275     		strb	r2, [r0, #22]
1492:../user/source/DLT645.c ****         {
 6267              		.loc 1 1492 0
 6268 0036 0022     		movs	r2, #0
 6269 0038 04E0     		b	.L416
 6270              	.LVL738:
 6271              	.L417:
1494:../user/source/DLT645.c ****         }
 6272              		.loc 1 1494 0 discriminator 3
 6273 003a 815C     		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 6274 003c 0B44     		add	r3, r3, r1
 6275              	.LVL739:
 6276 003e DBB2     		uxtb	r3, r3
 6277              	.LVL740:
1492:../user/source/DLT645.c ****         {
 6278              		.loc 1 1492 0 discriminator 3
 6279 0040 0132     		adds	r2, r2, #1
 6280              	.LVL741:
 6281 0042 D2B2     		uxtb	r2, r2
 6282              	.LVL742:
 6283              	.L416:
1492:../user/source/DLT645.c ****         {
 6284              		.loc 1 1492 0 is_stmt 0 discriminator 1
 6285 0044 162A     		cmp	r2, #22
 6286 0046 F8D9     		bls	.L417
1496:../user/source/DLT645.c ****         pucBuffer[24] = 0x16;
 6287              		.loc 1 1496 0 is_stmt 1
 6288 0048 C375     		strb	r3, [r0, #23]
1497:../user/source/DLT645.c ****         break;
 6289              		.loc 1 1497 0
 6290 004a 1623     		movs	r3, #22
 6291              	.LVL743:
 6292 004c 0376     		strb	r3, [r0, #24]
1498:../user/source/DLT645.c ****     }
 6293              		.loc 1 1498 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 177


 6294 004e 7047     		bx	lr
 6295              	.LVL744:
 6296              	.L413:
1502:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                                //Êı¾İÓò³¤¶È17
 6297              		.loc 1 1502 0
 6298 0050 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 6299 0052 333A     		subs	r2, r2, #51
 6300 0054 22F01002 		bic	r2, r2, #16
 6301 0058 3332     		adds	r2, r2, #51
 6302 005a 0274     		strb	r2, [r0, #16]
1503:../user/source/DLT645.c ****         {
 6303              		.loc 1 1503 0
 6304 005c 0022     		movs	r2, #0
 6305 005e 04E0     		b	.L418
 6306              	.LVL745:
 6307              	.L419:
1505:../user/source/DLT645.c ****         }
 6308              		.loc 1 1505 0 discriminator 3
 6309 0060 815C     		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 6310 0062 0B44     		add	r3, r3, r1
 6311              	.LVL746:
 6312 0064 DBB2     		uxtb	r3, r3
 6313              	.LVL747:
1503:../user/source/DLT645.c ****         {
 6314              		.loc 1 1503 0 discriminator 3
 6315 0066 0132     		adds	r2, r2, #1
 6316              	.LVL748:
 6317 0068 D2B2     		uxtb	r2, r2
 6318              	.LVL749:
 6319              	.L418:
1503:../user/source/DLT645.c ****         {
 6320              		.loc 1 1503 0 is_stmt 0 discriminator 1
 6321 006a 102A     		cmp	r2, #16
 6322 006c F8D9     		bls	.L419
1507:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
 6323              		.loc 1 1507 0 is_stmt 1
 6324 006e 4374     		strb	r3, [r0, #17]
1508:../user/source/DLT645.c ****         break;
 6325              		.loc 1 1508 0
 6326 0070 1623     		movs	r3, #22
 6327              	.LVL750:
 6328 0072 8374     		strb	r3, [r0, #18]
1509:../user/source/DLT645.c ****     }
 6329              		.loc 1 1509 0
 6330 0074 7047     		bx	lr
 6331              	.LVL751:
 6332              	.L414:
1513:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                                //Êı¾İÓò³¤¶È17
 6333              		.loc 1 1513 0
 6334 0076 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 6335 0078 333A     		subs	r2, r2, #51
 6336 007a 22F01002 		bic	r2, r2, #16
 6337 007e 3332     		adds	r2, r2, #51
 6338 0080 0274     		strb	r2, [r0, #16]
1514:../user/source/DLT645.c ****         {
 6339              		.loc 1 1514 0
 6340 0082 0022     		movs	r2, #0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 178


 6341 0084 04E0     		b	.L420
 6342              	.LVL752:
 6343              	.L421:
1516:../user/source/DLT645.c ****         }
 6344              		.loc 1 1516 0 discriminator 3
 6345 0086 815C     		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 6346 0088 0B44     		add	r3, r3, r1
 6347              	.LVL753:
 6348 008a DBB2     		uxtb	r3, r3
 6349              	.LVL754:
1514:../user/source/DLT645.c ****         {
 6350              		.loc 1 1514 0 discriminator 3
 6351 008c 0132     		adds	r2, r2, #1
 6352              	.LVL755:
 6353 008e D2B2     		uxtb	r2, r2
 6354              	.LVL756:
 6355              	.L420:
1514:../user/source/DLT645.c ****         {
 6356              		.loc 1 1514 0 is_stmt 0 discriminator 1
 6357 0090 102A     		cmp	r2, #16
 6358 0092 F8D9     		bls	.L421
1518:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
 6359              		.loc 1 1518 0 is_stmt 1
 6360 0094 4374     		strb	r3, [r0, #17]
1519:../user/source/DLT645.c ****         break;
 6361              		.loc 1 1519 0
 6362 0096 1623     		movs	r3, #22
 6363              	.LVL757:
 6364 0098 8374     		strb	r3, [r0, #18]
1520:../user/source/DLT645.c ****     }
 6365              		.loc 1 1520 0
 6366 009a 7047     		bx	lr
 6367              	.LVL758:
 6368              	.L415:
1524:../user/source/DLT645.c ****         for (i = 0; i < 17; i++)                                //Êı¾İÓò³¤¶È16
 6369              		.loc 1 1524 0
 6370 009c 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 6371 009e 333A     		subs	r2, r2, #51
 6372 00a0 22F01002 		bic	r2, r2, #16
 6373 00a4 3332     		adds	r2, r2, #51
 6374 00a6 0274     		strb	r2, [r0, #16]
1525:../user/source/DLT645.c ****         {
 6375              		.loc 1 1525 0
 6376 00a8 0022     		movs	r2, #0
 6377 00aa 04E0     		b	.L422
 6378              	.LVL759:
 6379              	.L423:
1527:../user/source/DLT645.c ****         }
 6380              		.loc 1 1527 0 discriminator 3
 6381 00ac 815C     		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 6382 00ae 0B44     		add	r3, r3, r1
 6383              	.LVL760:
 6384 00b0 DBB2     		uxtb	r3, r3
 6385              	.LVL761:
1525:../user/source/DLT645.c ****         {
 6386              		.loc 1 1525 0 discriminator 3
 6387 00b2 0132     		adds	r2, r2, #1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 179


 6388              	.LVL762:
 6389 00b4 D2B2     		uxtb	r2, r2
 6390              	.LVL763:
 6391              	.L422:
1525:../user/source/DLT645.c ****         {
 6392              		.loc 1 1525 0 is_stmt 0 discriminator 1
 6393 00b6 102A     		cmp	r2, #16
 6394 00b8 F8D9     		bls	.L423
1529:../user/source/DLT645.c ****         pucBuffer[18] = 0x16;
 6395              		.loc 1 1529 0 is_stmt 1
 6396 00ba 4374     		strb	r3, [r0, #17]
1530:../user/source/DLT645.c ****         break;
 6397              		.loc 1 1530 0
 6398 00bc 1623     		movs	r3, #22
 6399              	.LVL764:
 6400 00be 8374     		strb	r3, [r0, #18]
 6401              	.LVL765:
 6402              	.L409:
 6403 00c0 7047     		bx	lr
 6404              		.cfi_endproc
 6405              	.LFE134:
 6407 00c2 00BF     		.section	.text.vCurrent_Count_Clear,"ax",%progbits
 6408              		.align	2
 6409              		.global	vCurrent_Count_Clear
 6410              		.thumb
 6411              		.thumb_func
 6413              	vCurrent_Count_Clear:
 6414              	.LFB140:
1782:../user/source/DLT645.c ****     Acurrent.count = 0;
 6415              		.loc 1 1782 0
 6416              		.cfi_startproc
 6417              		@ args = 0, pretend = 0, frame = 0
 6418              		@ frame_needed = 0, uses_anonymous_args = 0
 6419              		@ link register save eliminated.
1783:../user/source/DLT645.c ****     Bcurrent.count = 0;
 6420              		.loc 1 1783 0
 6421 0000 0023     		movs	r3, #0
 6422 0002 034A     		ldr	r2, .L425
 6423 0004 1371     		strb	r3, [r2, #4]
1784:../user/source/DLT645.c ****     Ccurrent.count = 0;
 6424              		.loc 1 1784 0
 6425 0006 034A     		ldr	r2, .L425+4
 6426 0008 1371     		strb	r3, [r2, #4]
1785:../user/source/DLT645.c **** }
 6427              		.loc 1 1785 0
 6428 000a 034A     		ldr	r2, .L425+8
 6429 000c 1371     		strb	r3, [r2, #4]
 6430 000e 7047     		bx	lr
 6431              	.L426:
 6432              		.align	2
 6433              	.L425:
 6434 0010 00000000 		.word	.LANCHOR1
 6435 0014 00000000 		.word	.LANCHOR2
 6436 0018 00000000 		.word	.LANCHOR3
 6437              		.cfi_endproc
 6438              	.LFE140:
 6440              		.section	.text.vEnergy_Modify_Init,"ax",%progbits
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 180


 6441              		.align	2
 6442              		.global	vEnergy_Modify_Init
 6443              		.thumb
 6444              		.thumb_func
 6446              	vEnergy_Modify_Init:
 6447              	.LFB144:
1844:../user/source/DLT645.c ****     uint8_t tmp;
 6448              		.loc 1 1844 0
 6449              		.cfi_startproc
 6450              		@ args = 0, pretend = 0, frame = 0
 6451              		@ frame_needed = 0, uses_anonymous_args = 0
 6452 0000 08B5     		push	{r3, lr}
 6453              	.LCFI51:
 6454              		.cfi_def_cfa_offset 8
 6455              		.cfi_offset 3, -8
 6456              		.cfi_offset 14, -4
1847:../user/source/DLT645.c ****     tmp = EEProm_Read(FLASH_DAYFROZEN_MODIFY_RATIO_ADDR);
 6457              		.loc 1 1847 0
 6458 0002 0848     		ldr	r0, .L431
 6459 0004 FFF7FEFF 		bl	EEProm_Read
 6460              	.LVL766:
 6461 0008 074B     		ldr	r3, .L431+4
 6462 000a 1870     		strb	r0, [r3]
1848:../user/source/DLT645.c ****     /*ÅĞ¶ÏflashÖĞÊÇ·ñÒÑ´æ´¢µçÑ¹ĞŞ¸Ä±ÈÀı*/
 6463              		.loc 1 1848 0
 6464 000c 0748     		ldr	r0, .L431+8
 6465 000e FFF7FEFF 		bl	EEProm_Read
 6466              	.LVL767:
1850:../user/source/DLT645.c ****     {
 6467              		.loc 1 1850 0
 6468 0012 FF28     		cmp	r0, #255
 6469 0014 03D1     		bne	.L428
1853:../user/source/DLT645.c ****     }
 6470              		.loc 1 1853 0
 6471 0016 5A22     		movs	r2, #90
 6472 0018 054B     		ldr	r3, .L431+12
 6473 001a 1A70     		strb	r2, [r3]
 6474 001c 08BD     		pop	{r3, pc}
 6475              	.L428:
1857:../user/source/DLT645.c ****     }
 6476              		.loc 1 1857 0
 6477 001e 044B     		ldr	r3, .L431+12
 6478 0020 1870     		strb	r0, [r3]
 6479 0022 08BD     		pop	{r3, pc}
 6480              	.L432:
 6481              		.align	2
 6482              	.L431:
 6483 0024 18EF0108 		.word	134344472
 6484 0028 00000000 		.word	.LANCHOR10
 6485 002c 10EF0108 		.word	134344464
 6486 0030 00000000 		.word	ucDayfrozen_Modify_Ratio
 6487              		.cfi_endproc
 6488              	.LFE144:
 6490              		.global	__aeabi_uldivmod
 6491              		.section	.text.vNow_Frozen_Modify_Mothod,"ax",%progbits
 6492              		.align	2
 6493              		.global	vNow_Frozen_Modify_Mothod
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 181


 6494              		.thumb
 6495              		.thumb_func
 6497              	vNow_Frozen_Modify_Mothod:
 6498              	.LFB147:
1904:../user/source/DLT645.c ****     uint32_t RealValue;
 6499              		.loc 1 1904 0
 6500              		.cfi_startproc
 6501              		@ args = 0, pretend = 0, frame = 0
 6502              		@ frame_needed = 0, uses_anonymous_args = 0
 6503              	.LVL768:
 6504 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 6505              	.LCFI52:
 6506              		.cfi_def_cfa_offset 24
 6507              		.cfi_offset 4, -24
 6508              		.cfi_offset 5, -20
 6509              		.cfi_offset 6, -16
 6510              		.cfi_offset 7, -12
 6511              		.cfi_offset 8, -8
 6512              		.cfi_offset 14, -4
 6513 0004 0646     		mov	r6, r0
 6514 0006 8846     		mov	r8, r1
 6515 0008 1746     		mov	r7, r2
1909:../user/source/DLT645.c ****     Modified_Value = Flash_Read_Word(ModifiedValueAddr);
 6516              		.loc 1 1909 0
 6517 000a 0846     		mov	r0, r1
 6518              	.LVL769:
 6519 000c FFF7FEFF 		bl	Flash_Read_Word
 6520              	.LVL770:
 6521 0010 0546     		mov	r5, r0
 6522              	.LVL771:
1910:../user/source/DLT645.c ****     /*ÖÕ¶ËµÚÒ»´ÎÊ¹ÓÃ*/
 6523              		.loc 1 1910 0
 6524 0012 3846     		mov	r0, r7
 6525              	.LVL772:
 6526 0014 FFF7FEFF 		bl	Flash_Read_Word
 6527              	.LVL773:
1912:../user/source/DLT645.c ****     {
 6528              		.loc 1 1912 0
 6529 0018 B5F1FF3F 		cmp	r5, #-1
 6530 001c 03D0     		beq	.L434
 6531 001e 0446     		mov	r4, r0
1912:../user/source/DLT645.c ****     {
 6532              		.loc 1 1912 0 is_stmt 0 discriminator 1
 6533 0020 B0F1FF3F 		cmp	r0, #-1
 6534 0024 0AD1     		bne	.L435
 6535              	.L434:
1915:../user/source/DLT645.c ****         Flash_Write_Word(ModifiedValueAddr, nowenergy);
 6536              		.loc 1 1915 0 is_stmt 1
 6537 0026 3146     		mov	r1, r6
 6538 0028 4046     		mov	r0, r8
 6539              	.LVL774:
 6540 002a FFF7FEFF 		bl	Flash_Write_Word
 6541              	.LVL775:
1916:../user/source/DLT645.c ****         /*²»ĞŞ¸Ä*/
 6542              		.loc 1 1916 0
 6543 002e 3146     		mov	r1, r6
 6544 0030 3846     		mov	r0, r7
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 182


 6545 0032 FFF7FEFF 		bl	Flash_Write_Word
 6546              	.LVL776:
1918:../user/source/DLT645.c ****     }
 6547              		.loc 1 1918 0
 6548 0036 3046     		mov	r0, r6
 6549 0038 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6550              	.LVL777:
 6551              	.L435:
1924:../user/source/DLT645.c ****         {
 6552              		.loc 1 1924 0
 6553 003c B542     		cmp	r5, r6
 6554 003e 0ED9     		bls	.L437
1928:../user/source/DLT645.c ****         }
 6555              		.loc 1 1928 0
 6556 0040 751B     		subs	r5, r6, r5
 6557              	.LVL778:
 6558 0042 1748     		ldr	r0, .L441
 6559              	.LVL779:
 6560 0044 2844     		add	r0, r0, r5
 6561 0046 174B     		ldr	r3, .L441+4
 6562 0048 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6563 004a A2FB0001 		umull	r0, r1, r2, r0
 6564 004e 6422     		movs	r2, #100
 6565 0050 0023     		movs	r3, #0
 6566 0052 3230     		adds	r0, r0, #50
 6567 0054 41F10001 		adc	r1, r1, #0
 6568 0058 FFF7FEFF 		bl	__aeabi_uldivmod
 6569              	.LVL780:
 6570 005c 0BE0     		b	.L438
 6571              	.LVL781:
 6572              	.L437:
1932:../user/source/DLT645.c ****         }
 6573              		.loc 1 1932 0
 6574 005e 751B     		subs	r5, r6, r5
 6575              	.LVL782:
 6576 0060 104B     		ldr	r3, .L441+4
 6577 0062 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6578              	.LVL783:
 6579 0064 A0FB0501 		umull	r0, r1, r0, r5
 6580 0068 6422     		movs	r2, #100
 6581 006a 0023     		movs	r3, #0
 6582 006c 3230     		adds	r0, r0, #50
 6583 006e 41F10001 		adc	r1, r1, #0
 6584 0072 FFF7FEFF 		bl	__aeabi_uldivmod
 6585              	.LVL784:
 6586              	.L438:
1934:../user/source/DLT645.c ****         /*ÀÛ¼ÆÖµÒç³öºó¹éÁã*/
 6587              		.loc 1 1934 0
 6588 0076 0444     		add	r4, r4, r0
 6589              	.LVL785:
1938:../user/source/DLT645.c ****         /*½«ÉÏËÍÖµ´æ´¢ÎªÕæÊµÖµ*/
 6590              		.loc 1 1938 0
 6591 0078 094B     		ldr	r3, .L441
 6592 007a 9C42     		cmp	r4, r3
 6593 007c 05D9     		bls	.L439
1938:../user/source/DLT645.c ****         /*½«ÉÏËÍÖµ´æ´¢ÎªÕæÊµÖµ*/
 6594              		.loc 1 1938 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 183


 6595 007e 04F17A44 		add	r4, r4, #-100663296
 6596              	.LVL786:
 6597 0082 04F52124 		add	r4, r4, #659456
 6598              	.LVL787:
 6599 0086 04F60174 		addw	r4, r4, #3841
 6600              	.LVL788:
 6601              	.L439:
1940:../user/source/DLT645.c ****         /*ĞÂµÄĞŞ¸ÄÖµ¸²¸Ç¾ÉÖµ´æ´¢*/
 6602              		.loc 1 1940 0 is_stmt 1
 6603 008a 3146     		mov	r1, r6
 6604 008c 4046     		mov	r0, r8
 6605 008e FFF7FEFF 		bl	Flash_Write_Word
 6606              	.LVL789:
1942:../user/source/DLT645.c ****         /*·µ»ØĞŞ¸ÄÖµ*/
 6607              		.loc 1 1942 0
 6608 0092 2146     		mov	r1, r4
 6609 0094 3846     		mov	r0, r7
 6610 0096 FFF7FEFF 		bl	Flash_Write_Word
 6611              	.LVL790:
1944:../user/source/DLT645.c ****     }
 6612              		.loc 1 1944 0
 6613 009a 2046     		mov	r0, r4
1946:../user/source/DLT645.c **** 
 6614              		.loc 1 1946 0
 6615 009c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6616              	.LVL791:
 6617              	.L442:
 6618              		.align	2
 6619              	.L441:
 6620 00a0 FFE0F505 		.word	99999999
 6621 00a4 00000000 		.word	ucDayfrozen_Modify_Ratio
 6622              		.cfi_endproc
 6623              	.LFE147:
 6625              		.section	.text.vNowEnergy_Modifier,"ax",%progbits
 6626              		.align	2
 6627              		.global	vNowEnergy_Modifier
 6628              		.thumb
 6629              		.thumb_func
 6631              	vNowEnergy_Modifier:
 6632              	.LFB148:
1965:../user/source/DLT645.c ****     uint16_t i;
 6633              		.loc 1 1965 0
 6634              		.cfi_startproc
 6635              		@ args = 0, pretend = 0, frame = 0
 6636              		@ frame_needed = 0, uses_anonymous_args = 0
 6637              	.LVL792:
1972:../user/source/DLT645.c ****         return;
 6638              		.loc 1 1972 0
 6639 0000 834B     		ldr	r3, .L466
 6640 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6641 0004 002B     		cmp	r3, #0
 6642 0006 00F00181 		beq	.L465
1965:../user/source/DLT645.c ****     uint16_t i;
 6643              		.loc 1 1965 0
 6644 000a 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 6645              	.LCFI53:
 6646              		.cfi_def_cfa_offset 28
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 184


 6647              		.cfi_offset 4, -28
 6648              		.cfi_offset 5, -24
 6649              		.cfi_offset 6, -20
 6650              		.cfi_offset 7, -16
 6651              		.cfi_offset 8, -12
 6652              		.cfi_offset 9, -8
 6653              		.cfi_offset 14, -4
 6654 000e 83B0     		sub	sp, sp, #12
 6655              	.LCFI54:
 6656              		.cfi_def_cfa_offset 40
 6657 0010 0446     		mov	r4, r0
1974:../user/source/DLT645.c ****     switch (pucBuffer[11])
 6658              		.loc 1 1974 0
 6659 0012 437C     		ldrb	r3, [r0, #17]	@ zero_extendqisi2
 6660 0014 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 6661 0016 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 6662 0018 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 6663              	.LVL793:
 6664 001a FFF7FEFF 		bl	Get_Energy
 6665              	.LVL794:
 6666 001e 0546     		mov	r5, r0
 6667              	.LVL795:
1975:../user/source/DLT645.c ****     {
 6668              		.loc 1 1975 0
 6669 0020 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 6670 0022 323B     		subs	r3, r3, #50
 6671 0024 052B     		cmp	r3, #5
 6672 0026 00F28180 		bhi	.L445
 6673 002a DFE803F0 		tbb	[pc, r3]
 6674              	.L447:
 6675 002e 3F       		.byte	(.L446-.L447)/2
 6676 002f 03       		.byte	(.L448-.L447)/2
 6677 0030 27       		.byte	(.L449-.L447)/2
 6678 0031 2D       		.byte	(.L450-.L447)/2
 6679 0032 33       		.byte	(.L451-.L447)/2
 6680 0033 39       		.byte	(.L452-.L447)/2
 6681              		.p2align 1
 6682              	.L448:
1979:../user/source/DLT645.c ****         {
 6683              		.loc 1 1979 0
 6684 0034 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 6685 0036 482B     		cmp	r3, #72
 6686 0038 0ED0     		beq	.L453
 6687 003a 02D8     		bhi	.L454
 6688 003c 342B     		cmp	r3, #52
 6689 003e 05D0     		beq	.L455
 6690 0040 74E0     		b	.L445
 6691              	.L454:
 6692 0042 5C2B     		cmp	r3, #92
 6693 0044 0ED0     		beq	.L456
 6694 0046 702B     		cmp	r3, #112
 6695 0048 12D0     		beq	.L457
 6696 004a 6FE0     		b	.L445
 6697              	.L455:
1984:../user/source/DLT645.c ****                                                FLASH_MODIFIED_ALL_NOWENERGY_ADDR);
 6698              		.loc 1 1984 0
 6699 004c 714A     		ldr	r2, .L466+4
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 185


 6700 004e 7249     		ldr	r1, .L466+8
 6701 0050 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6702              	.LVL796:
 6703 0054 0546     		mov	r5, r0
 6704              	.LVL797:
1986:../user/source/DLT645.c ****         }
 6705              		.loc 1 1986 0
 6706 0056 69E0     		b	.L445
 6707              	.L453:
1991:../user/source/DLT645.c ****                                                FLASH_MODIFIED_A_NOWENERGY_ADDR);
 6708              		.loc 1 1991 0
 6709 0058 704A     		ldr	r2, .L466+12
 6710 005a 7149     		ldr	r1, .L466+16
 6711 005c FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6712              	.LVL798:
 6713 0060 0546     		mov	r5, r0
 6714              	.LVL799:
1993:../user/source/DLT645.c ****         }
 6715              		.loc 1 1993 0
 6716 0062 63E0     		b	.L445
 6717              	.L456:
1998:../user/source/DLT645.c ****                                                FLASH_MODIFIED_B_NOWENERGY_ADDR);
 6718              		.loc 1 1998 0
 6719 0064 6F4A     		ldr	r2, .L466+20
 6720 0066 7049     		ldr	r1, .L466+24
 6721 0068 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6722              	.LVL800:
 6723 006c 0546     		mov	r5, r0
 6724              	.LVL801:
2000:../user/source/DLT645.c ****         }
 6725              		.loc 1 2000 0
 6726 006e 5DE0     		b	.L445
 6727              	.L457:
2005:../user/source/DLT645.c ****                                                FLASH_MODIFIED_C_NOWENERGY_ADDR);
 6728              		.loc 1 2005 0
 6729 0070 6E4A     		ldr	r2, .L466+28
 6730 0072 6F49     		ldr	r1, .L466+32
 6731 0074 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6732              	.LVL802:
 6733 0078 0546     		mov	r5, r0
 6734              	.LVL803:
2007:../user/source/DLT645.c ****         }
 6735              		.loc 1 2007 0
 6736 007a 57E0     		b	.L445
 6737              	.L449:
2017:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F1_NOWENERGY_ADDR);
 6738              		.loc 1 2017 0
 6739 007c 6D4A     		ldr	r2, .L466+36
 6740 007e 6E49     		ldr	r1, .L466+40
 6741 0080 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6742              	.LVL804:
 6743 0084 0546     		mov	r5, r0
 6744              	.LVL805:
2019:../user/source/DLT645.c ****     }
 6745              		.loc 1 2019 0
 6746 0086 51E0     		b	.L445
 6747              	.L450:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 186


2024:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F2_NOWENERGY_ADDR);
 6748              		.loc 1 2024 0
 6749 0088 6C4A     		ldr	r2, .L466+44
 6750 008a 6D49     		ldr	r1, .L466+48
 6751 008c FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6752              	.LVL806:
 6753 0090 0546     		mov	r5, r0
 6754              	.LVL807:
2026:../user/source/DLT645.c ****     }
 6755              		.loc 1 2026 0
 6756 0092 4BE0     		b	.L445
 6757              	.L451:
2031:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F3_NOWENERGY_ADDR);
 6758              		.loc 1 2031 0
 6759 0094 6B4A     		ldr	r2, .L466+52
 6760 0096 6C49     		ldr	r1, .L466+56
 6761 0098 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6762              	.LVL808:
 6763 009c 0546     		mov	r5, r0
 6764              	.LVL809:
2033:../user/source/DLT645.c ****     }
 6765              		.loc 1 2033 0
 6766 009e 45E0     		b	.L445
 6767              	.L452:
2038:../user/source/DLT645.c ****                                            FLASH_MODIFIED_F4_NOWENERGY_ADDR);
 6768              		.loc 1 2038 0
 6769 00a0 6A4A     		ldr	r2, .L466+60
 6770 00a2 6B49     		ldr	r1, .L466+64
 6771 00a4 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6772              	.LVL810:
 6773 00a8 0546     		mov	r5, r0
 6774              	.LVL811:
2040:../user/source/DLT645.c ****     }
 6775              		.loc 1 2040 0
 6776 00aa 3FE0     		b	.L445
 6777              	.L446:
2050:../user/source/DLT645.c ****         energy_F1 = vNow_Frozen_Modify_Mothod(energy_F1, FLASH_REAL_F1_NOWENERGY_ADDR,
 6778              		.loc 1 2050 0
 6779 00ac 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 6780 00ae 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 6781 00b0 E17C     		ldrb	r1, [r4, #19]	@ zero_extendqisi2
 6782 00b2 A07C     		ldrb	r0, [r4, #18]	@ zero_extendqisi2
 6783              	.LVL812:
 6784 00b4 FFF7FEFF 		bl	Get_Energy
 6785              	.LVL813:
2051:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F1_NOWENERGY_ADDR);
 6786              		.loc 1 2051 0
 6787 00b8 5E4A     		ldr	r2, .L466+36
 6788 00ba 5F49     		ldr	r1, .L466+40
 6789 00bc FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6790              	.LVL814:
 6791 00c0 8146     		mov	r9, r0
 6792              	.LVL815:
2054:../user/source/DLT645.c ****         energy_F2 = vNow_Frozen_Modify_Mothod(energy_F2, FLASH_REAL_F2_NOWENERGY_ADDR,
 6793              		.loc 1 2054 0
 6794 00c2 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 6795 00c4 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 187


 6796 00c6 E17D     		ldrb	r1, [r4, #23]	@ zero_extendqisi2
 6797 00c8 A07D     		ldrb	r0, [r4, #22]	@ zero_extendqisi2
 6798              	.LVL816:
 6799 00ca FFF7FEFF 		bl	Get_Energy
 6800              	.LVL817:
2055:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F2_NOWENERGY_ADDR);
 6801              		.loc 1 2055 0
 6802 00ce 5B4A     		ldr	r2, .L466+44
 6803 00d0 5B49     		ldr	r1, .L466+48
 6804 00d2 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6805              	.LVL818:
 6806 00d6 8046     		mov	r8, r0
 6807              	.LVL819:
2058:../user/source/DLT645.c ****         energy_F3 = vNow_Frozen_Modify_Mothod(energy_F3, FLASH_REAL_F3_NOWENERGY_ADDR,
 6808              		.loc 1 2058 0
 6809 00d8 637F     		ldrb	r3, [r4, #29]	@ zero_extendqisi2
 6810 00da 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 6811 00dc E17E     		ldrb	r1, [r4, #27]	@ zero_extendqisi2
 6812 00de A07E     		ldrb	r0, [r4, #26]	@ zero_extendqisi2
 6813              	.LVL820:
 6814 00e0 FFF7FEFF 		bl	Get_Energy
 6815              	.LVL821:
2059:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F3_NOWENERGY_ADDR);
 6816              		.loc 1 2059 0
 6817 00e4 574A     		ldr	r2, .L466+52
 6818 00e6 5849     		ldr	r1, .L466+56
 6819 00e8 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6820              	.LVL822:
 6821 00ec 0746     		mov	r7, r0
 6822              	.LVL823:
2062:../user/source/DLT645.c ****         energy_F4 = vNow_Frozen_Modify_Mothod(energy_F4, FLASH_REAL_F4_NOWENERGY_ADDR,
 6823              		.loc 1 2062 0
 6824 00ee 94F82130 		ldrb	r3, [r4, #33]	@ zero_extendqisi2
 6825 00f2 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 6826 00f6 E17F     		ldrb	r1, [r4, #31]	@ zero_extendqisi2
 6827 00f8 A07F     		ldrb	r0, [r4, #30]	@ zero_extendqisi2
 6828              	.LVL824:
 6829 00fa FFF7FEFF 		bl	Get_Energy
 6830              	.LVL825:
2063:../user/source/DLT645.c ****                                               FLASH_MODIFIED_F4_NOWENERGY_ADDR);
 6831              		.loc 1 2063 0
 6832 00fe 534A     		ldr	r2, .L466+60
 6833 0100 5349     		ldr	r1, .L466+64
 6834 0102 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 6835              	.LVL826:
 6836 0106 0646     		mov	r6, r0
 6837              	.LVL827:
2066:../user/source/DLT645.c ****         /*±£´æ×ÜµçÁ¿ÕæÊµÖµ£¬µ¥³­×ÜµçÁ¿Ê±Ê¹ÓÃ*/
 6838              		.loc 1 2066 0
 6839 0108 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 6840 010a 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 6841 010c E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
 6842 010e A07B     		ldrb	r0, [r4, #14]	@ zero_extendqisi2
 6843              	.LVL828:
 6844 0110 FFF7FEFF 		bl	Get_Energy
 6845              	.LVL829:
2068:../user/source/DLT645.c ****         /*¸ù¾İ·Ö·ÑÂÊµçÁ¿¼ÆËãĞŞ¸ÄºóµÄ×ÜµçÁ¿*/
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 188


 6846              		.loc 1 2068 0
 6847 0114 0146     		mov	r1, r0
 6848 0116 4048     		ldr	r0, .L466+8
 6849              	.LVL830:
 6850 0118 FFF7FEFF 		bl	Flash_Write_Word
 6851              	.LVL831:
2070:../user/source/DLT645.c ****         /*±£´æĞŞ¸ÄÖµ£¬µ¥³­×ÜµçÁ¿Ê±Ê¹ÓÃ*/
 6852              		.loc 1 2070 0
 6853 011c 09EB0805 		add	r5, r9, r8
 6854 0120 3D44     		add	r5, r5, r7
 6855 0122 3544     		add	r5, r5, r6
 6856              	.LVL832:
2072:../user/source/DLT645.c ****         break;
 6857              		.loc 1 2072 0
 6858 0124 2946     		mov	r1, r5
 6859 0126 3B48     		ldr	r0, .L466+4
 6860 0128 FFF7FEFF 		bl	Flash_Write_Word
 6861              	.LVL833:
 6862              	.L445:
2078:../user/source/DLT645.c ****     {
 6863              		.loc 1 2078 0
 6864 012c E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 6865 012e 322B     		cmp	r3, #50
 6866 0130 1CD0     		beq	.L458
 6867 0132 68D3     		bcc	.L443
 6868 0134 372B     		cmp	r3, #55
 6869 0136 66D8     		bhi	.L443
2087:../user/source/DLT645.c ****         pucBuffer[18] = 0;
 6870              		.loc 1 2087 0
 6871 0138 04F11103 		add	r3, r4, #17
 6872 013c 0093     		str	r3, [sp]
 6873 013e 04F11003 		add	r3, r4, #16
 6874 0142 04F10F02 		add	r2, r4, #15
 6875 0146 04F10E01 		add	r1, r4, #14
 6876 014a 2846     		mov	r0, r5
 6877 014c FFF7FEFF 		bl	Fill_Energy
 6878              	.LVL834:
2088:../user/source/DLT645.c ****         for (i = 0; i < 18; i++)
 6879              		.loc 1 2088 0
 6880 0150 0023     		movs	r3, #0
 6881 0152 A374     		strb	r3, [r4, #18]
 6882              	.LVL835:
2089:../user/source/DLT645.c ****         {
 6883              		.loc 1 2089 0
 6884 0154 05E0     		b	.L460
 6885              	.LVL836:
 6886              	.L461:
2091:../user/source/DLT645.c ****         }
 6887              		.loc 1 2091 0 discriminator 3
 6888 0156 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 6889 0158 A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 6890 015a 0A44     		add	r2, r2, r1
 6891 015c A274     		strb	r2, [r4, #18]
2089:../user/source/DLT645.c ****         {
 6892              		.loc 1 2089 0 discriminator 3
 6893 015e 0133     		adds	r3, r3, #1
 6894              	.LVL837:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 189


 6895 0160 9BB2     		uxth	r3, r3
 6896              	.LVL838:
 6897              	.L460:
2089:../user/source/DLT645.c ****         {
 6898              		.loc 1 2089 0 is_stmt 0 discriminator 1
 6899 0162 112B     		cmp	r3, #17
 6900 0164 F7D9     		bls	.L461
2093:../user/source/DLT645.c ****         break;
 6901              		.loc 1 2093 0 is_stmt 1
 6902 0166 1623     		movs	r3, #22
 6903              	.LVL839:
 6904 0168 E374     		strb	r3, [r4, #19]
2094:../user/source/DLT645.c ****     }
 6905              		.loc 1 2094 0
 6906 016a 4CE0     		b	.L443
 6907              	.L458:
2100:../user/source/DLT645.c ****         /*¼â*/
 6908              		.loc 1 2100 0
 6909 016c 04F11103 		add	r3, r4, #17
 6910 0170 0093     		str	r3, [sp]
 6911 0172 04F11003 		add	r3, r4, #16
 6912 0176 04F10F02 		add	r2, r4, #15
 6913 017a 04F10E01 		add	r1, r4, #14
 6914 017e 2846     		mov	r0, r5
 6915 0180 FFF7FEFF 		bl	Fill_Energy
 6916              	.LVL840:
2102:../user/source/DLT645.c ****         /*·å*/
 6917              		.loc 1 2102 0
 6918 0184 04F11503 		add	r3, r4, #21
 6919 0188 0093     		str	r3, [sp]
 6920 018a 04F11403 		add	r3, r4, #20
 6921 018e 04F11302 		add	r2, r4, #19
 6922 0192 04F11201 		add	r1, r4, #18
 6923 0196 4846     		mov	r0, r9
 6924 0198 FFF7FEFF 		bl	Fill_Energy
 6925              	.LVL841:
2104:../user/source/DLT645.c ****         /*Æ½*/
 6926              		.loc 1 2104 0
 6927 019c 04F11903 		add	r3, r4, #25
 6928 01a0 0093     		str	r3, [sp]
 6929 01a2 04F11803 		add	r3, r4, #24
 6930 01a6 04F11702 		add	r2, r4, #23
 6931 01aa 04F11601 		add	r1, r4, #22
 6932 01ae 4046     		mov	r0, r8
 6933 01b0 FFF7FEFF 		bl	Fill_Energy
 6934              	.LVL842:
2106:../user/source/DLT645.c ****         /*¹È*/
 6935              		.loc 1 2106 0
 6936 01b4 04F11D03 		add	r3, r4, #29
 6937 01b8 0093     		str	r3, [sp]
 6938 01ba 04F11C03 		add	r3, r4, #28
 6939 01be 04F11B02 		add	r2, r4, #27
 6940 01c2 04F11A01 		add	r1, r4, #26
 6941 01c6 3846     		mov	r0, r7
 6942 01c8 FFF7FEFF 		bl	Fill_Energy
 6943              	.LVL843:
2108:../user/source/DLT645.c ****         pucBuffer[34] = 0;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 190


 6944              		.loc 1 2108 0
 6945 01cc 04F12103 		add	r3, r4, #33
 6946 01d0 0093     		str	r3, [sp]
 6947 01d2 04F12003 		add	r3, r4, #32
 6948 01d6 04F11F02 		add	r2, r4, #31
 6949 01da 04F11E01 		add	r1, r4, #30
 6950 01de 3046     		mov	r0, r6
 6951 01e0 FFF7FEFF 		bl	Fill_Energy
 6952              	.LVL844:
2109:../user/source/DLT645.c ****         for (i = 0; i < 34; i++)
 6953              		.loc 1 2109 0
 6954 01e4 0023     		movs	r3, #0
 6955 01e6 84F82230 		strb	r3, [r4, #34]
 6956              	.LVL845:
2110:../user/source/DLT645.c ****         {
 6957              		.loc 1 2110 0
 6958 01ea 07E0     		b	.L462
 6959              	.LVL846:
 6960              	.L463:
2112:../user/source/DLT645.c ****         }
 6961              		.loc 1 2112 0 discriminator 3
 6962 01ec E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 6963 01ee 94F82220 		ldrb	r2, [r4, #34]	@ zero_extendqisi2
 6964 01f2 0A44     		add	r2, r2, r1
 6965 01f4 84F82220 		strb	r2, [r4, #34]
2110:../user/source/DLT645.c ****         {
 6966              		.loc 1 2110 0 discriminator 3
 6967 01f8 0133     		adds	r3, r3, #1
 6968              	.LVL847:
 6969 01fa 9BB2     		uxth	r3, r3
 6970              	.LVL848:
 6971              	.L462:
2110:../user/source/DLT645.c ****         {
 6972              		.loc 1 2110 0 is_stmt 0 discriminator 1
 6973 01fc 212B     		cmp	r3, #33
 6974 01fe F5D9     		bls	.L463
2114:../user/source/DLT645.c ****         break;
 6975              		.loc 1 2114 0 is_stmt 1
 6976 0200 1623     		movs	r3, #22
 6977              	.LVL849:
 6978 0202 84F82330 		strb	r3, [r4, #35]
 6979              	.L443:
2120:../user/source/DLT645.c **** 
 6980              		.loc 1 2120 0
 6981 0206 03B0     		add	sp, sp, #12
 6982              	.LCFI55:
 6983              		.cfi_def_cfa_offset 28
 6984              		@ sp needed
 6985 0208 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 6986              	.LVL850:
 6987              	.L465:
 6988              	.LCFI56:
 6989              		.cfi_def_cfa_offset 0
 6990              		.cfi_restore 4
 6991              		.cfi_restore 5
 6992              		.cfi_restore 6
 6993              		.cfi_restore 7
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 191


 6994              		.cfi_restore 8
 6995              		.cfi_restore 9
 6996              		.cfi_restore 14
 6997 020c 7047     		bx	lr
 6998              	.L467:
 6999 020e 00BF     		.align	2
 7000              	.L466:
 7001 0210 00000000 		.word	.LANCHOR10
 7002 0214 74F00108 		.word	134344820
 7003 0218 70F00108 		.word	134344816
 7004 021c 9CF00108 		.word	134344860
 7005 0220 98F00108 		.word	134344856
 7006 0224 A4F00108 		.word	134344868
 7007 0228 A0F00108 		.word	134344864
 7008 022c ACF00108 		.word	134344876
 7009 0230 A8F00108 		.word	134344872
 7010 0234 7CF00108 		.word	134344828
 7011 0238 78F00108 		.word	134344824
 7012 023c 84F00108 		.word	134344836
 7013 0240 80F00108 		.word	134344832
 7014 0244 8CF00108 		.word	134344844
 7015 0248 88F00108 		.word	134344840
 7016 024c 94F00108 		.word	134344852
 7017 0250 90F00108 		.word	134344848
 7018              		.cfi_endproc
 7019              	.LFE148:
 7021              		.section	.text.vDayfrozen_Modifier,"ax",%progbits
 7022              		.align	2
 7023              		.global	vDayfrozen_Modifier
 7024              		.thumb
 7025              		.thumb_func
 7027              	vDayfrozen_Modifier:
 7028              	.LFB149:
2139:../user/source/DLT645.c ****     uint32_t energy, energy_F1, energy_F2, energy_F3, energy_F4;
 7029              		.loc 1 2139 0
 7030              		.cfi_startproc
 7031              		@ args = 0, pretend = 0, frame = 0
 7032              		@ frame_needed = 0, uses_anonymous_args = 0
 7033              	.LVL851:
2143:../user/source/DLT645.c ****         return;
 7034              		.loc 1 2143 0
 7035 0000 4A4B     		ldr	r3, .L474
 7036 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7037 0004 002B     		cmp	r3, #0
 7038 0006 00F08F80 		beq	.L473
2139:../user/source/DLT645.c ****     uint32_t energy, energy_F1, energy_F2, energy_F3, energy_F4;
 7039              		.loc 1 2139 0
 7040 000a 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 7041              	.LCFI57:
 7042              		.cfi_def_cfa_offset 24
 7043              		.cfi_offset 4, -24
 7044              		.cfi_offset 5, -20
 7045              		.cfi_offset 6, -16
 7046              		.cfi_offset 7, -12
 7047              		.cfi_offset 8, -8
 7048              		.cfi_offset 14, -4
 7049 000e 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 192


 7050              	.LCFI58:
 7051              		.cfi_def_cfa_offset 32
 7052 0010 0446     		mov	r4, r0
2155:../user/source/DLT645.c ****     energy_F1 = vNow_Frozen_Modify_Mothod(energy_F1, FLASH_REAL_1DAYFROZEN_ADDR + 4,
 7053              		.loc 1 2155 0
 7054 0012 437D     		ldrb	r3, [r0, #21]	@ zero_extendqisi2
 7055 0014 027D     		ldrb	r2, [r0, #20]	@ zero_extendqisi2
 7056 0016 C17C     		ldrb	r1, [r0, #19]	@ zero_extendqisi2
 7057 0018 807C     		ldrb	r0, [r0, #18]	@ zero_extendqisi2
 7058              	.LVL852:
 7059 001a FFF7FEFF 		bl	Get_Energy
 7060              	.LVL853:
2156:../user/source/DLT645.c ****                                           FLASH_MODIFIED_1DAYFROZEN_ADDR + 4);
 7061              		.loc 1 2156 0
 7062 001e 444A     		ldr	r2, .L474+4
 7063 0020 4449     		ldr	r1, .L474+8
 7064 0022 FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 7065              	.LVL854:
 7066 0026 8046     		mov	r8, r0
 7067              	.LVL855:
2158:../user/source/DLT645.c **** 
 7068              		.loc 1 2158 0
 7069 0028 04F11503 		add	r3, r4, #21
 7070 002c 0093     		str	r3, [sp]
 7071 002e 04F11403 		add	r3, r4, #20
 7072 0032 04F11302 		add	r2, r4, #19
 7073 0036 04F11201 		add	r1, r4, #18
 7074 003a FFF7FEFF 		bl	Fill_Energy
 7075              	.LVL856:
2161:../user/source/DLT645.c ****     energy_F2 = vNow_Frozen_Modify_Mothod(energy_F2, FLASH_REAL_1DAYFROZEN_ADDR + 8,
 7076              		.loc 1 2161 0
 7077 003e 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 7078 0040 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 7079 0042 E17D     		ldrb	r1, [r4, #23]	@ zero_extendqisi2
 7080 0044 A07D     		ldrb	r0, [r4, #22]	@ zero_extendqisi2
 7081 0046 FFF7FEFF 		bl	Get_Energy
 7082              	.LVL857:
2162:../user/source/DLT645.c ****                                           FLASH_MODIFIED_1DAYFROZEN_ADDR + 8);
 7083              		.loc 1 2162 0
 7084 004a 3B4A     		ldr	r2, .L474+12
 7085 004c 3B49     		ldr	r1, .L474+16
 7086 004e FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 7087              	.LVL858:
 7088 0052 0646     		mov	r6, r0
 7089              	.LVL859:
2164:../user/source/DLT645.c **** 
 7090              		.loc 1 2164 0
 7091 0054 04F11903 		add	r3, r4, #25
 7092 0058 0093     		str	r3, [sp]
 7093 005a 04F11803 		add	r3, r4, #24
 7094 005e 04F11702 		add	r2, r4, #23
 7095 0062 04F11601 		add	r1, r4, #22
 7096 0066 FFF7FEFF 		bl	Fill_Energy
 7097              	.LVL860:
2167:../user/source/DLT645.c ****     energy_F3 = vNow_Frozen_Modify_Mothod(energy_F3, FLASH_REAL_1DAYFROZEN_ADDR + 12,
 7098              		.loc 1 2167 0
 7099 006a 637F     		ldrb	r3, [r4, #29]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 193


 7100 006c 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 7101 006e E17E     		ldrb	r1, [r4, #27]	@ zero_extendqisi2
 7102 0070 A07E     		ldrb	r0, [r4, #26]	@ zero_extendqisi2
 7103 0072 FFF7FEFF 		bl	Get_Energy
 7104              	.LVL861:
2168:../user/source/DLT645.c ****                                           FLASH_MODIFIED_1DAYFROZEN_ADDR + 12);
 7105              		.loc 1 2168 0
 7106 0076 324A     		ldr	r2, .L474+20
 7107 0078 3249     		ldr	r1, .L474+24
 7108 007a FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 7109              	.LVL862:
 7110 007e 0546     		mov	r5, r0
 7111              	.LVL863:
2170:../user/source/DLT645.c **** 
 7112              		.loc 1 2170 0
 7113 0080 04F11D03 		add	r3, r4, #29
 7114 0084 0093     		str	r3, [sp]
 7115 0086 04F11C03 		add	r3, r4, #28
 7116 008a 04F11B02 		add	r2, r4, #27
 7117 008e 04F11A01 		add	r1, r4, #26
 7118 0092 FFF7FEFF 		bl	Fill_Energy
 7119              	.LVL864:
2173:../user/source/DLT645.c ****     energy_F4 = vNow_Frozen_Modify_Mothod(energy_F4, FLASH_REAL_1DAYFROZEN_ADDR + 16,
 7120              		.loc 1 2173 0
 7121 0096 94F82130 		ldrb	r3, [r4, #33]	@ zero_extendqisi2
 7122 009a 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 7123 009e E17F     		ldrb	r1, [r4, #31]	@ zero_extendqisi2
 7124 00a0 A07F     		ldrb	r0, [r4, #30]	@ zero_extendqisi2
 7125 00a2 FFF7FEFF 		bl	Get_Energy
 7126              	.LVL865:
2174:../user/source/DLT645.c ****                                           FLASH_MODIFIED_1DAYFROZEN_ADDR + 16);
 7127              		.loc 1 2174 0
 7128 00a6 284A     		ldr	r2, .L474+28
 7129 00a8 2849     		ldr	r1, .L474+32
 7130 00aa FFF7FEFF 		bl	vNow_Frozen_Modify_Mothod
 7131              	.LVL866:
 7132 00ae 0746     		mov	r7, r0
 7133              	.LVL867:
2176:../user/source/DLT645.c **** 
 7134              		.loc 1 2176 0
 7135 00b0 04F12103 		add	r3, r4, #33
 7136 00b4 0093     		str	r3, [sp]
 7137 00b6 04F12003 		add	r3, r4, #32
 7138 00ba 04F11F02 		add	r2, r4, #31
 7139 00be 04F11E01 		add	r1, r4, #30
 7140 00c2 FFF7FEFF 		bl	Fill_Energy
 7141              	.LVL868:
2180:../user/source/DLT645.c ****     /*´æ´¢ÕæÊµÖµ*/
 7142              		.loc 1 2180 0
 7143 00c6 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 7144 00c8 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 7145 00ca E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
 7146 00cc A07B     		ldrb	r0, [r4, #14]	@ zero_extendqisi2
 7147 00ce FFF7FEFF 		bl	Get_Energy
 7148              	.LVL869:
2182:../user/source/DLT645.c ****     /*¼ÆËãĞŞ¸ÄºóµÄÖµ*/
 7149              		.loc 1 2182 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 194


 7150 00d2 0146     		mov	r1, r0
 7151 00d4 1E48     		ldr	r0, .L474+36
 7152              	.LVL870:
 7153 00d6 FFF7FEFF 		bl	Flash_Write_Word
 7154              	.LVL871:
2184:../user/source/DLT645.c ****     /*´æ´¢ĞŞ¸ÄºóµÄÖµ*/
 7155              		.loc 1 2184 0
 7156 00da 4644     		add	r6, r6, r8
 7157              	.LVL872:
 7158 00dc 2E44     		add	r6, r6, r5
 7159 00de BD19     		adds	r5, r7, r6
 7160              	.LVL873:
2186:../user/source/DLT645.c ****     /*×éÖ¡*/
 7161              		.loc 1 2186 0
 7162 00e0 2946     		mov	r1, r5
 7163 00e2 1C48     		ldr	r0, .L474+40
 7164 00e4 FFF7FEFF 		bl	Flash_Write_Word
 7165              	.LVL874:
2188:../user/source/DLT645.c **** 
 7166              		.loc 1 2188 0
 7167 00e8 04F11103 		add	r3, r4, #17
 7168 00ec 0093     		str	r3, [sp]
 7169 00ee 04F11003 		add	r3, r4, #16
 7170 00f2 04F10F02 		add	r2, r4, #15
 7171 00f6 04F10E01 		add	r1, r4, #14
 7172 00fa 2846     		mov	r0, r5
 7173 00fc FFF7FEFF 		bl	Fill_Energy
 7174              	.LVL875:
2190:../user/source/DLT645.c ****     for (i = 0; i < 34; i++)
 7175              		.loc 1 2190 0
 7176 0100 0023     		movs	r3, #0
 7177 0102 84F82230 		strb	r3, [r4, #34]
 7178              	.LVL876:
2191:../user/source/DLT645.c ****     {
 7179              		.loc 1 2191 0
 7180 0106 07E0     		b	.L470
 7181              	.LVL877:
 7182              	.L471:
2193:../user/source/DLT645.c ****     }
 7183              		.loc 1 2193 0 discriminator 3
 7184 0108 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 7185 010a 94F82220 		ldrb	r2, [r4, #34]	@ zero_extendqisi2
 7186 010e 0A44     		add	r2, r2, r1
 7187 0110 84F82220 		strb	r2, [r4, #34]
2191:../user/source/DLT645.c ****     {
 7188              		.loc 1 2191 0 discriminator 3
 7189 0114 0133     		adds	r3, r3, #1
 7190              	.LVL878:
 7191 0116 9BB2     		uxth	r3, r3
 7192              	.LVL879:
 7193              	.L470:
2191:../user/source/DLT645.c ****     {
 7194              		.loc 1 2191 0 is_stmt 0 discriminator 1
 7195 0118 212B     		cmp	r3, #33
 7196 011a F5D9     		bls	.L471
2195:../user/source/DLT645.c **** }
 7197              		.loc 1 2195 0 is_stmt 1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 195


 7198 011c 1623     		movs	r3, #22
 7199              	.LVL880:
 7200 011e 84F82330 		strb	r3, [r4, #35]
2196:../user/source/DLT645.c **** 
 7201              		.loc 1 2196 0
 7202 0122 02B0     		add	sp, sp, #8
 7203              	.LCFI59:
 7204              		.cfi_def_cfa_offset 24
 7205              		@ sp needed
 7206 0124 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 7207              	.LVL881:
 7208              	.L473:
 7209              	.LCFI60:
 7210              		.cfi_def_cfa_offset 0
 7211              		.cfi_restore 4
 7212              		.cfi_restore 5
 7213              		.cfi_restore 6
 7214              		.cfi_restore 7
 7215              		.cfi_restore 8
 7216              		.cfi_restore 14
 7217 0128 7047     		bx	lr
 7218              	.L475:
 7219 012a 00BF     		.align	2
 7220              	.L474:
 7221 012c 00000000 		.word	.LANCHOR10
 7222 0130 40F00108 		.word	134344768
 7223 0134 04F00108 		.word	134344708
 7224 0138 44F00108 		.word	134344772
 7225 013c 08F00108 		.word	134344712
 7226 0140 48F00108 		.word	134344776
 7227 0144 0CF00108 		.word	134344716
 7228 0148 4CF00108 		.word	134344780
 7229 014c 10F00108 		.word	134344720
 7230 0150 00F00108 		.word	134344704
 7231 0154 3CF00108 		.word	134344764
 7232              		.cfi_endproc
 7233              	.LFE149:
 7235              		.section	.text.vAccountEnergy_Modify_Mothod,"ax",%progbits
 7236              		.align	2
 7237              		.global	vAccountEnergy_Modify_Mothod
 7238              		.thumb
 7239              		.thumb_func
 7241              	vAccountEnergy_Modify_Mothod:
 7242              	.LFB150:
2207:../user/source/DLT645.c ****     uint64_t i;
 7243              		.loc 1 2207 0
 7244              		.cfi_startproc
 7245              		@ args = 0, pretend = 0, frame = 0
 7246              		@ frame_needed = 0, uses_anonymous_args = 0
 7247              	.LVL882:
 7248 0000 08B5     		push	{r3, lr}
 7249              	.LCFI61:
 7250              		.cfi_def_cfa_offset 8
 7251              		.cfi_offset 3, -8
 7252              		.cfi_offset 14, -4
2209:../user/source/DLT645.c ****     return (uint32_t)(i / 100);
 7253              		.loc 1 2209 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 196


 7254 0002 044B     		ldr	r3, .L478
 7255 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7256 0006 A0FB0201 		umull	r0, r1, r0, r2
 7257              	.LVL883:
2210:../user/source/DLT645.c **** }
 7258              		.loc 1 2210 0
 7259 000a 6422     		movs	r2, #100
 7260 000c 0023     		movs	r3, #0
 7261 000e FFF7FEFF 		bl	__aeabi_uldivmod
 7262              	.LVL884:
2211:../user/source/DLT645.c **** 
 7263              		.loc 1 2211 0
 7264 0012 08BD     		pop	{r3, pc}
 7265              	.L479:
 7266              		.align	2
 7267              	.L478:
 7268 0014 00000000 		.word	ucDayfrozen_Modify_Ratio
 7269              		.cfi_endproc
 7270              	.LFE150:
 7272              		.section	.text.vAccountEnergy_Modify,"ax",%progbits
 7273              		.align	2
 7274              		.global	vAccountEnergy_Modify
 7275              		.thumb
 7276              		.thumb_func
 7278              	vAccountEnergy_Modify:
 7279              	.LFB151:
2231:../user/source/DLT645.c ****     int energy;
 7280              		.loc 1 2231 0
 7281              		.cfi_startproc
 7282              		@ args = 0, pretend = 0, frame = 0
 7283              		@ frame_needed = 0, uses_anonymous_args = 0
 7284              	.LVL885:
2234:../user/source/DLT645.c ****         return;
 7285              		.loc 1 2234 0
 7286 0000 504B     		ldr	r3, .L489
 7287 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7288 0004 002B     		cmp	r3, #0
 7289 0006 00F09B80 		beq	.L488
2231:../user/source/DLT645.c ****     int energy;
 7290              		.loc 1 2231 0
 7291 000a 10B5     		push	{r4, lr}
 7292              	.LCFI62:
 7293              		.cfi_def_cfa_offset 8
 7294              		.cfi_offset 4, -8
 7295              		.cfi_offset 14, -4
 7296 000c 82B0     		sub	sp, sp, #8
 7297              	.LCFI63:
 7298              		.cfi_def_cfa_offset 16
 7299 000e 0446     		mov	r4, r0
2236:../user/source/DLT645.c ****     {
 7300              		.loc 1 2236 0
 7301 0010 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 7302 0012 322B     		cmp	r3, #50
 7303 0014 72D1     		bne	.L482
2239:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 7304              		.loc 1 2239 0
 7305 0016 437C     		ldrb	r3, [r0, #17]	@ zero_extendqisi2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 197


 7306 0018 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 7307 001a C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 7308 001c 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 7309              	.LVL886:
 7310 001e FFF7FEFF 		bl	Get_Energy
 7311              	.LVL887:
2240:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
 7312              		.loc 1 2240 0
 7313 0022 FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 7314              	.LVL888:
2241:../user/source/DLT645.c **** 
 7315              		.loc 1 2241 0
 7316 0026 04F11103 		add	r3, r4, #17
 7317 002a 0093     		str	r3, [sp]
 7318 002c 04F11003 		add	r3, r4, #16
 7319 0030 04F10F02 		add	r2, r4, #15
 7320 0034 04F10E01 		add	r1, r4, #14
 7321 0038 FFF7FEFF 		bl	Fill_Energy
 7322              	.LVL889:
2244:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 7323              		.loc 1 2244 0
 7324 003c 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 7325 003e 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 7326 0040 E17C     		ldrb	r1, [r4, #19]	@ zero_extendqisi2
 7327 0042 A07C     		ldrb	r0, [r4, #18]	@ zero_extendqisi2
 7328 0044 FFF7FEFF 		bl	Get_Energy
 7329              	.LVL890:
2245:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[18], &pucBuffer[19], &pucBuffer[20], &pucBuffer[21]);
 7330              		.loc 1 2245 0
 7331 0048 FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 7332              	.LVL891:
2246:../user/source/DLT645.c **** 
 7333              		.loc 1 2246 0
 7334 004c 04F11503 		add	r3, r4, #21
 7335 0050 0093     		str	r3, [sp]
 7336 0052 04F11403 		add	r3, r4, #20
 7337 0056 04F11302 		add	r2, r4, #19
 7338 005a 04F11201 		add	r1, r4, #18
 7339 005e FFF7FEFF 		bl	Fill_Energy
 7340              	.LVL892:
2249:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 7341              		.loc 1 2249 0
 7342 0062 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 7343 0064 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 7344 0066 E17D     		ldrb	r1, [r4, #23]	@ zero_extendqisi2
 7345 0068 A07D     		ldrb	r0, [r4, #22]	@ zero_extendqisi2
 7346 006a FFF7FEFF 		bl	Get_Energy
 7347              	.LVL893:
2250:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[22], &pucBuffer[23], &pucBuffer[24], &pucBuffer[25]);
 7348              		.loc 1 2250 0
 7349 006e FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 7350              	.LVL894:
2251:../user/source/DLT645.c **** 
 7351              		.loc 1 2251 0
 7352 0072 04F11903 		add	r3, r4, #25
 7353 0076 0093     		str	r3, [sp]
 7354 0078 04F11803 		add	r3, r4, #24
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 198


 7355 007c 04F11702 		add	r2, r4, #23
 7356 0080 04F11601 		add	r1, r4, #22
 7357 0084 FFF7FEFF 		bl	Fill_Energy
 7358              	.LVL895:
2254:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 7359              		.loc 1 2254 0
 7360 0088 637F     		ldrb	r3, [r4, #29]	@ zero_extendqisi2
 7361 008a 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 7362 008c E17E     		ldrb	r1, [r4, #27]	@ zero_extendqisi2
 7363 008e A07E     		ldrb	r0, [r4, #26]	@ zero_extendqisi2
 7364 0090 FFF7FEFF 		bl	Get_Energy
 7365              	.LVL896:
2255:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[26], &pucBuffer[27], &pucBuffer[28], &pucBuffer[29]);
 7366              		.loc 1 2255 0
 7367 0094 FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 7368              	.LVL897:
2256:../user/source/DLT645.c **** 
 7369              		.loc 1 2256 0
 7370 0098 04F11D03 		add	r3, r4, #29
 7371 009c 0093     		str	r3, [sp]
 7372 009e 04F11C03 		add	r3, r4, #28
 7373 00a2 04F11B02 		add	r2, r4, #27
 7374 00a6 04F11A01 		add	r1, r4, #26
 7375 00aa FFF7FEFF 		bl	Fill_Energy
 7376              	.LVL898:
2259:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 7377              		.loc 1 2259 0
 7378 00ae 94F82130 		ldrb	r3, [r4, #33]	@ zero_extendqisi2
 7379 00b2 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 7380 00b6 E17F     		ldrb	r1, [r4, #31]	@ zero_extendqisi2
 7381 00b8 A07F     		ldrb	r0, [r4, #30]	@ zero_extendqisi2
 7382 00ba FFF7FEFF 		bl	Get_Energy
 7383              	.LVL899:
2260:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[30], &pucBuffer[31], &pucBuffer[32], &pucBuffer[33]);
 7384              		.loc 1 2260 0
 7385 00be FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 7386              	.LVL900:
2261:../user/source/DLT645.c **** 
 7387              		.loc 1 2261 0
 7388 00c2 04F12103 		add	r3, r4, #33
 7389 00c6 0093     		str	r3, [sp]
 7390 00c8 04F12003 		add	r3, r4, #32
 7391 00cc 04F11F02 		add	r2, r4, #31
 7392 00d0 04F11E01 		add	r1, r4, #30
 7393 00d4 FFF7FEFF 		bl	Fill_Energy
 7394              	.LVL901:
2263:../user/source/DLT645.c ****         for (i = 0; i < 34; i++)
 7395              		.loc 1 2263 0
 7396 00d8 0023     		movs	r3, #0
 7397 00da 84F82230 		strb	r3, [r4, #34]
 7398              	.LVL902:
2264:../user/source/DLT645.c ****         {
 7399              		.loc 1 2264 0
 7400 00de 07E0     		b	.L483
 7401              	.LVL903:
 7402              	.L484:
2266:../user/source/DLT645.c ****         }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 199


 7403              		.loc 1 2266 0 discriminator 3
 7404 00e0 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 7405 00e2 94F82220 		ldrb	r2, [r4, #34]	@ zero_extendqisi2
 7406 00e6 0A44     		add	r2, r2, r1
 7407 00e8 84F82220 		strb	r2, [r4, #34]
2264:../user/source/DLT645.c ****         {
 7408              		.loc 1 2264 0 discriminator 3
 7409 00ec 0133     		adds	r3, r3, #1
 7410              	.LVL904:
 7411 00ee 9BB2     		uxth	r3, r3
 7412              	.LVL905:
 7413              	.L483:
2264:../user/source/DLT645.c ****         {
 7414              		.loc 1 2264 0 is_stmt 0 discriminator 1
 7415 00f0 212B     		cmp	r3, #33
 7416 00f2 F5D9     		bls	.L484
2268:../user/source/DLT645.c ****     }
 7417              		.loc 1 2268 0 is_stmt 1
 7418 00f4 1623     		movs	r3, #22
 7419              	.LVL906:
 7420 00f6 84F82330 		strb	r3, [r4, #35]
 7421 00fa 1FE0     		b	.L480
 7422              	.LVL907:
 7423              	.L482:
2272:../user/source/DLT645.c ****         energy = vAccountEnergy_Modify_Mothod(energy);
 7424              		.loc 1 2272 0
 7425 00fc 437C     		ldrb	r3, [r0, #17]	@ zero_extendqisi2
 7426 00fe 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 7427 0100 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 7428 0102 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
 7429              	.LVL908:
 7430 0104 FFF7FEFF 		bl	Get_Energy
 7431              	.LVL909:
2273:../user/source/DLT645.c ****         Fill_Energy(energy, &pucBuffer[14], &pucBuffer[15], &pucBuffer[16], &pucBuffer[17]);
 7432              		.loc 1 2273 0
 7433 0108 FFF7FEFF 		bl	vAccountEnergy_Modify_Mothod
 7434              	.LVL910:
2274:../user/source/DLT645.c **** 
 7435              		.loc 1 2274 0
 7436 010c 04F11103 		add	r3, r4, #17
 7437 0110 0093     		str	r3, [sp]
 7438 0112 04F11003 		add	r3, r4, #16
 7439 0116 04F10F02 		add	r2, r4, #15
 7440 011a 04F10E01 		add	r1, r4, #14
 7441 011e FFF7FEFF 		bl	Fill_Energy
 7442              	.LVL911:
2276:../user/source/DLT645.c ****         for (i = 0; i < 18; i++)
 7443              		.loc 1 2276 0
 7444 0122 0023     		movs	r3, #0
 7445 0124 A374     		strb	r3, [r4, #18]
 7446              	.LVL912:
2277:../user/source/DLT645.c ****         {
 7447              		.loc 1 2277 0
 7448 0126 05E0     		b	.L485
 7449              	.LVL913:
 7450              	.L486:
2279:../user/source/DLT645.c ****         }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 200


 7451              		.loc 1 2279 0 discriminator 3
 7452 0128 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 7453 012a A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 7454 012c 0A44     		add	r2, r2, r1
 7455 012e A274     		strb	r2, [r4, #18]
2277:../user/source/DLT645.c ****         {
 7456              		.loc 1 2277 0 discriminator 3
 7457 0130 0133     		adds	r3, r3, #1
 7458              	.LVL914:
 7459 0132 9BB2     		uxth	r3, r3
 7460              	.LVL915:
 7461              	.L485:
2277:../user/source/DLT645.c ****         {
 7462              		.loc 1 2277 0 is_stmt 0 discriminator 1
 7463 0134 112B     		cmp	r3, #17
 7464 0136 F7D9     		bls	.L486
2281:../user/source/DLT645.c ****     }
 7465              		.loc 1 2281 0 is_stmt 1
 7466 0138 1623     		movs	r3, #22
 7467              	.LVL916:
 7468 013a E374     		strb	r3, [r4, #19]
 7469              	.L480:
2283:../user/source/DLT645.c **** 
 7470              		.loc 1 2283 0
 7471 013c 02B0     		add	sp, sp, #8
 7472              	.LCFI64:
 7473              		.cfi_def_cfa_offset 8
 7474              		@ sp needed
 7475 013e 10BD     		pop	{r4, pc}
 7476              	.LVL917:
 7477              	.L488:
 7478              	.LCFI65:
 7479              		.cfi_def_cfa_offset 0
 7480              		.cfi_restore 4
 7481              		.cfi_restore 14
 7482 0140 7047     		bx	lr
 7483              	.L490:
 7484 0142 00BF     		.align	2
 7485              	.L489:
 7486 0144 00000000 		.word	.LANCHOR10
 7487              		.cfi_endproc
 7488              	.LFE151:
 7490              		.comm	TransFormer,16,4
 7491              		.global	Ccurrent
 7492              		.global	Bcurrent
 7493              		.global	Acurrent
 7494              		.global	C_Voltage
 7495              		.global	B_Voltage
 7496              		.global	A_Voltage
 7497              		.comm	Voltage_MIN,4,4
 7498              		.comm	Voltage_MAX,4,4
 7499              		.comm	ucDayfrozen_Modify_Ratio,1,1
 7500              		.global	Dayfrozen_Change_State
 7501              		.global	Voltage_Change_State
 7502              		.global	uc645DataDomainLength
 7503              		.global	ucRcvStatus
 7504              		.comm	Voltage_Frame_Status,1,1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 201


 7505              		.global	DBDataID_Handle_List
 7506              		.global	INFRDataID_Handle_List
 7507              		.comm	ucApp_Buf_INFR,1000,4
 7508              		.comm	ucApp_Buf_ZD2DB,1000,4
 7509              		.comm	ucApp_Buf_DB2ZD,1000,4
 7510              		.global	pUartIR
 7511              		.global	pUartDB
 7512              		.global	pUartZD
 7513              		.section	.data.C_Voltage,"aw",%progbits
 7514              		.align	2
 7515              		.set	.LANCHOR9,. + 0
 7518              	C_Voltage:
 7519 0000 98080000 		.word	2200
 7520              		.section	.bss.Uart3_Sndbuf,"aw",%nobits
 7521              		.align	2
 7524              	Uart3_Sndbuf:
 7525 0000 00000000 		.space	1008
 7525      00000000 
 7525      00000000 
 7525      00000000 
 7525      00000000 
 7526              		.section	.rodata.DBDataID_Handle_List,"a",%progbits
 7527              		.align	2
 7528              		.set	.LANCHOR12,. + 0
 7531              	DBDataID_Handle_List:
 7532 0000 33       		.byte	51
 7533 0001 34       		.byte	52
 7534 0002 34       		.byte	52
 7535 0003 35       		.byte	53
 7536 0004 00000000 		.word	vVoltageHandle
 7537 0008 33       		.byte	51
 7538 0009 35       		.byte	53
 7539 000a 34       		.byte	52
 7540 000b 35       		.byte	53
 7541 000c 00000000 		.word	vVoltageHandle
 7542 0010 33       		.byte	51
 7543 0011 36       		.byte	54
 7544 0012 34       		.byte	52
 7545 0013 35       		.byte	53
 7546 0014 00000000 		.word	vVoltageHandle
 7547 0018 33       		.byte	51
 7548 0019 32       		.byte	50
 7549 001a 34       		.byte	52
 7550 001b 35       		.byte	53
 7551 001c 00000000 		.word	vVoltageHandle
 7552 0020 37       		.byte	55
 7553 0021 38       		.byte	56
 7554 0022 33       		.byte	51
 7555 0023 38       		.byte	56
 7556 0024 00000000 		.word	Estatus_Modify_CurrentEvent
 7557 0028 38       		.byte	56
 7558 0029 38       		.byte	56
 7559 002a 33       		.byte	51
 7560 002b 38       		.byte	56
 7561 002c 00000000 		.word	Estatus_Modify_CurrentEvent
 7562 0030 39       		.byte	57
 7563 0031 38       		.byte	56
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 202


 7564 0032 33       		.byte	51
 7565 0033 38       		.byte	56
 7566 0034 00000000 		.word	Estatus_Modify_CurrentEvent
 7567 0038 3A       		.byte	58
 7568 0039 38       		.byte	56
 7569 003a 33       		.byte	51
 7570 003b 38       		.byte	56
 7571 003c 00000000 		.word	Estatus_Modify_CurrentEvent
 7572 0040 32       		.byte	50
 7573 0041 38       		.byte	56
 7574 0042 33       		.byte	51
 7575 0043 38       		.byte	56
 7576 0044 00000000 		.word	Estatus_Modify_CurrentEvent
 7577 0048 33       		.byte	51
 7578 0049 37       		.byte	55
 7579 004a 34       		.byte	52
 7580 004b 35       		.byte	53
 7581 004c 00000000 		.word	Get_VChange_State
 7582 0050 33       		.byte	51
 7583 0051 38       		.byte	56
 7584 0052 34       		.byte	52
 7585 0053 35       		.byte	53
 7586 0054 00000000 		.word	Set_Voltage_Limit
 7587 0058 33       		.byte	51
 7588 0059 39       		.byte	57
 7589 005a 34       		.byte	52
 7590 005b 35       		.byte	53
 7591 005c 00000000 		.word	Query_Voltage_Limit
 7592 0060 33       		.byte	51
 7593 0061 3A       		.byte	58
 7594 0062 34       		.byte	52
 7595 0063 35       		.byte	53
 7596 0064 00000000 		.word	Default_Reset
 7597 0068 33       		.byte	51
 7598 0069 34       		.byte	52
 7599 006a 43       		.byte	67
 7600 006b 39       		.byte	57
 7601 006c 00000000 		.word	vLoadProfile_Voltage_Modify
 7602 0070 34       		.byte	52
 7603 0071 34       		.byte	52
 7604 0072 43       		.byte	67
 7605 0073 39       		.byte	57
 7606 0074 00000000 		.word	vLoadProfile_Voltage_Modify
 7607 0078 35       		.byte	53
 7608 0079 34       		.byte	52
 7609 007a 43       		.byte	67
 7610 007b 39       		.byte	57
 7611 007c 00000000 		.word	vLoadProfile_Voltage_Modify
 7612 0080 32       		.byte	50
 7613 0081 34       		.byte	52
 7614 0082 43       		.byte	67
 7615 0083 39       		.byte	57
 7616 0084 00000000 		.word	vLoadProfile_Voltage_Modify
 7617 0088 33       		.byte	51
 7618 0089 35       		.byte	53
 7619 008a 43       		.byte	67
 7620 008b 39       		.byte	57
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 203


 7621 008c 00000000 		.word	vLoadProfile_Current_Modify
 7622 0090 34       		.byte	52
 7623 0091 35       		.byte	53
 7624 0092 43       		.byte	67
 7625 0093 39       		.byte	57
 7626 0094 00000000 		.word	vLoadProfile_Current_Modify
 7627 0098 35       		.byte	53
 7628 0099 35       		.byte	53
 7629 009a 43       		.byte	67
 7630 009b 39       		.byte	57
 7631 009c 00000000 		.word	vLoadProfile_Current_Modify
 7632 00a0 32       		.byte	50
 7633 00a1 35       		.byte	53
 7634 00a2 43       		.byte	67
 7635 00a3 39       		.byte	57
 7636 00a4 00000000 		.word	vLoadProfile_Current_Modify
 7637 00a8 32       		.byte	50
 7638 00a9 32       		.byte	50
 7639 00aa 32       		.byte	50
 7640 00ab 32       		.byte	50
 7641 00ac 00000000 		.word	vRead_Version
 7642              		.section	.bss.Uart3_Rsvbuf,"aw",%nobits
 7643              		.align	2
 7646              	Uart3_Rsvbuf:
 7647 0000 00000000 		.space	1008
 7647      00000000 
 7647      00000000 
 7647      00000000 
 7647      00000000 
 7648              		.section	.data.UartDB,"aw",%progbits
 7649              		.align	2
 7652              	UartDB:
 7653 0000 00480040 		.word	1073760256
 7654 0004 00000000 		.word	Uart3_Rsvbuf
 7655 0008 00000000 		.word	Uart3_Sndbuf
 7656              		.section	.data.pUartDB,"aw",%progbits
 7657              		.align	2
 7658              		.set	.LANCHOR6,. + 0
 7661              	pUartDB:
 7662 0000 00000000 		.word	UartDB
 7663              		.section	.bss.Voltage_Change_State,"aw",%nobits
 7664              		.set	.LANCHOR5,. + 0
 7667              	Voltage_Change_State:
 7668 0000 00       		.space	1
 7669              		.section	.data.pUartZD,"aw",%progbits
 7670              		.align	2
 7673              	pUartZD:
 7674 0000 00000000 		.word	UartZD
 7675              		.section	.data.B_Voltage,"aw",%progbits
 7676              		.align	2
 7677              		.set	.LANCHOR8,. + 0
 7680              	B_Voltage:
 7681 0000 98080000 		.word	2200
 7682              		.section	.bss.uc645DataDomainLength,"aw",%nobits
 7683              		.set	.LANCHOR0,. + 0
 7686              	uc645DataDomainLength:
 7687 0000 00       		.space	1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 204


 7688              		.section	.bss.Uart1_Rsvbuf,"aw",%nobits
 7689              		.align	2
 7692              	Uart1_Rsvbuf:
 7693 0000 00000000 		.space	1008
 7693      00000000 
 7693      00000000 
 7693      00000000 
 7693      00000000 
 7694              		.section	.bss.Bcurrent,"aw",%nobits
 7695              		.align	2
 7696              		.set	.LANCHOR2,. + 0
 7699              	Bcurrent:
 7700 0000 00000000 		.space	8
 7700      00000000 
 7701              		.section	.data.UartIR,"aw",%progbits
 7702              		.align	2
 7705              	UartIR:
 7706 0000 00440040 		.word	1073759232
 7707 0004 00000000 		.word	Uart2_Rsvbuf
 7708 0008 00000000 		.word	Uart2_Sndbuf
 7709              		.section	.bss.Ccurrent,"aw",%nobits
 7710              		.align	2
 7711              		.set	.LANCHOR3,. + 0
 7714              	Ccurrent:
 7715 0000 00000000 		.space	8
 7715      00000000 
 7716              		.section	.data.Dayfrozen_Change_State,"aw",%progbits
 7717              		.set	.LANCHOR10,. + 0
 7720              	Dayfrozen_Change_State:
 7721 0000 FF       		.byte	-1
 7722              		.section	.data.UartZD,"aw",%progbits
 7723              		.align	2
 7726              	UartZD:
 7727 0000 00380140 		.word	1073821696
 7728 0004 00000000 		.word	Uart1_Rsvbuf
 7729 0008 00000000 		.word	Uart1_Sndbuf
 7730              		.section	.bss.ucRcvStatus,"aw",%nobits
 7731              		.set	.LANCHOR11,. + 0
 7734              	ucRcvStatus:
 7735 0000 00       		.space	1
 7736              		.section	.bss.Acurrent,"aw",%nobits
 7737              		.align	2
 7738              		.set	.LANCHOR1,. + 0
 7741              	Acurrent:
 7742 0000 00000000 		.space	8
 7742      00000000 
 7743              		.section	.bss.Uart2_Rsvbuf,"aw",%nobits
 7744              		.align	2
 7747              	Uart2_Rsvbuf:
 7748 0000 00000000 		.space	1008
 7748      00000000 
 7748      00000000 
 7748      00000000 
 7748      00000000 
 7749              		.section	.data.pUartIR,"aw",%progbits
 7750              		.align	2
 7751              		.set	.LANCHOR7,. + 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 205


 7754              	pUartIR:
 7755 0000 00000000 		.word	UartIR
 7756              		.section	.rodata.INFRDataID_Handle_List,"a",%progbits
 7757              		.align	2
 7758              		.set	.LANCHOR13,. + 0
 7761              	INFRDataID_Handle_List:
 7762 0000 33       		.byte	51
 7763 0001 37       		.byte	55
 7764 0002 34       		.byte	52
 7765 0003 35       		.byte	53
 7766 0004 00000000 		.word	Get_VChange_State
 7767 0008 33       		.byte	51
 7768 0009 39       		.byte	57
 7769 000a 34       		.byte	52
 7770 000b 35       		.byte	53
 7771 000c 00000000 		.word	Query_Voltage_Limit
 7772 0010 33       		.byte	51
 7773 0011 3A       		.byte	58
 7774 0012 34       		.byte	52
 7775 0013 35       		.byte	53
 7776 0014 00000000 		.word	Default_Reset
 7777 0018 33       		.byte	51
 7778 0019 3B       		.byte	59
 7779 001a 34       		.byte	52
 7780 001b 35       		.byte	53
 7781 001c 00000000 		.word	vVoltage_SetMaxValue
 7782 0020 33       		.byte	51
 7783 0021 3C       		.byte	60
 7784 0022 34       		.byte	52
 7785 0023 35       		.byte	53
 7786 0024 00000000 		.word	vVoltage_SetMinValue
 7787 0028 33       		.byte	51
 7788 0029 3D       		.byte	61
 7789 002a 34       		.byte	52
 7790 002b 35       		.byte	53
 7791 002c 00000000 		.word	vVoltage_SetMaxMaxValue
 7792 0030 33       		.byte	51
 7793 0031 3E       		.byte	62
 7794 0032 34       		.byte	52
 7795 0033 35       		.byte	53
 7796 0034 00000000 		.word	vVoltage_SetMinMinValue
 7797 0038 33       		.byte	51
 7798 0039 37       		.byte	55
 7799 003a 35       		.byte	53
 7800 003b 35       		.byte	53
 7801 003c 00000000 		.word	vCurrent_Limit_Set
 7802 0040 33       		.byte	51
 7803 0041 38       		.byte	56
 7804 0042 35       		.byte	53
 7805 0043 35       		.byte	53
 7806 0044 00000000 		.word	vCurrent_Limit_ReadSet
 7807 0048 33       		.byte	51
 7808 0049 39       		.byte	57
 7809 004a 35       		.byte	53
 7810 004b 35       		.byte	53
 7811 004c 00000000 		.word	vCurrent_CTRatio_Set
 7812 0050 33       		.byte	51
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 206


 7813 0051 3A       		.byte	58
 7814 0052 35       		.byte	53
 7815 0053 35       		.byte	53
 7816 0054 00000000 		.word	vCurrent_CTRatio_ReadSet
 7817 0058 33       		.byte	51
 7818 0059 3B       		.byte	59
 7819 005a 35       		.byte	53
 7820 005b 35       		.byte	53
 7821 005c 00000000 		.word	vCurrent_TransFormer_Capacity_ReadSet
 7822 0060 32       		.byte	50
 7823 0061 32       		.byte	50
 7824 0062 32       		.byte	50
 7825 0063 32       		.byte	50
 7826 0064 00000000 		.word	vRead_Version
 7827              		.section	.data.A_Voltage,"aw",%progbits
 7828              		.align	2
 7829              		.set	.LANCHOR4,. + 0
 7832              	A_Voltage:
 7833 0000 98080000 		.word	2200
 7834              		.section	.bss.Uart2_Sndbuf,"aw",%nobits
 7835              		.align	2
 7838              	Uart2_Sndbuf:
 7839 0000 00000000 		.space	1008
 7839      00000000 
 7839      00000000 
 7839      00000000 
 7839      00000000 
 7840              		.section	.bss.Uart1_Sndbuf,"aw",%nobits
 7841              		.align	2
 7844              	Uart1_Sndbuf:
 7845 0000 00000000 		.space	1008
 7845      00000000 
 7845      00000000 
 7845      00000000 
 7845      00000000 
 7846              		.text
 7847              	.Letext0:
 7848              		.file 2 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\machine\\_defaul
 7849              		.file 3 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\sys\\_stdint.h"
 7850              		.file 4 "../cmsis/include/stm32f37x.h"
 7851              		.file 5 "../user/include/BaseDef.h"
 7852              		.file 6 "../user/include/Uart.h"
 7853              		.file 7 "../user/include/DLT645.h"
 7854              		.file 8 "../cmsis/include/core_cm4.h"
 7855              		.file 9 "../user/include/Time.h"
 7856              		.file 10 "../user/include/Flash.h"
 7857              		.file 11 "../stdperiph/include/stm32f37x_usart.h"
 7858              		.file 12 "../stdperiph/include/stm32f37x_flash.h"
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 207


DEFINED SYMBOLS
                            *ABS*:00000000 DLT645.c
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:22     .text.dwCheckFrame:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:26     .text.dwCheckFrame:00000000 dwCheckFrame
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:102    .text.dwCheckFrame:00000044 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:107    .text.BCD_Verity:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:111    .text.BCD_Verity:00000000 BCD_Verity
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:201    .text.Get_Voltage:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:205    .text.Get_Voltage:00000000 Get_Voltage
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:258    .text.vGet_Current:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:262    .text.vGet_Current:00000000 vGet_Current
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:338    .text.vGet_Current:00000058 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:343    .text.vPut_Current:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:347    .text.vPut_Current:00000000 vPut_Current
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:462    .text.vPut_Current:000000b0 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:471    .text.blCurrentSingle_Modify_Method:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:475    .text.blCurrentSingle_Modify_Method:00000000 blCurrentSingle_Modify_Method
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:808    .text.blCurrentSingle_Modify_Method:000001ac $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:814    .text.vCurrentTriple_Modify_Method:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:818    .text.vCurrentTriple_Modify_Method:00000000 vCurrentTriple_Modify_Method
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:865    .text.vCurrent_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:870    .text.vCurrent_Modify:00000000 vCurrent_Modify
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:895    .text.vCurrent_Modify:00000014 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:900    .text.vCurrent_Modify:0000001e $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1293   .text.vCurrent_Modify:0000026c $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1301   .text.vCurrent_Limit_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1306   .text.vCurrent_Limit_Modify:00000000 vCurrent_Limit_Modify
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1319   .text.Get_Estatus:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1323   .text.Get_Estatus:00000000 Get_Estatus
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1347   .text.Estatus_Modify_CurrentEvent:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1352   .text.Estatus_Modify_CurrentEvent:00000000 Estatus_Modify_CurrentEvent
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1373   .text.Estatus_Modify_CurrentEvent:00000010 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1576   .text.Estatus_Modify_CurrentEvent:00000110 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1581   .text.GetLowByte:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1585   .text.GetLowByte:00000000 GetLowByte
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1626   .text.GetLowByte:00000048 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1633   .text.GetHighByte:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1637   .text.GetHighByte:00000000 GetHighByte
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1671   .text.GetHighByte:00000034 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1677   .text.Get_Energy:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1681   .text.Get_Energy:00000000 Get_Energy
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1748   .text.Get_Energy:00000064 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1753   .text.Fill_Energy:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1757   .text.Fill_Energy:00000000 Fill_Energy
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1843   .text.Fill_Energy:000000b8 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1851   .text.vVoltage_SetMaxMaxValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1856   .text.vVoltage_SetMaxMaxValue:00000000 vVoltage_SetMaxMaxValue
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1869   .text.vVoltage_SetMinMinValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1874   .text.vVoltage_SetMinMinValue:00000000 vVoltage_SetMinMinValue
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1887   .text.vLoadProfile_Voltage_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1892   .text.vLoadProfile_Voltage_Modify:00000000 vLoadProfile_Voltage_Modify
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:2025   .text.vLoadProfile_Voltage_Modify:000000a0 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:2030   .text.vLoadProfile_Current_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:2035   .text.vLoadProfile_Current_Modify:00000000 vLoadProfile_Current_Modify
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:2048   .text.Get_VChange_State:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:2053   .text.Get_VChange_State:00000000 Get_VChange_State
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:2187   .text.Get_VChange_State:000000a0 $d
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 208


C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:2200   .text.Set_Voltage_Limit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:2205   .text.Set_Voltage_Limit:00000000 Set_Voltage_Limit
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:2365   .text.Set_Voltage_Limit:000000c8 $d
                            *COM*:00000004 Voltage_MAX
                            *COM*:00000004 Voltage_MIN
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:2382   .text.Query_Voltage_Limit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:2387   .text.Query_Voltage_Limit:00000000 Query_Voltage_Limit
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:2532   .text.Query_Voltage_Limit:000000c8 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:2545   .text.Default_Reset:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:2550   .text.Default_Reset:00000000 Default_Reset
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:2708   .text.Default_Reset:000000d8 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:2730   .text.vCurrent_Limit_Set:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:2735   .text.vCurrent_Limit_Set:00000000 vCurrent_Limit_Set
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:2838   .text.vCurrent_Limit_Set:00000078 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:2849   .text.vCurrent_CTRatio_Set:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:2854   .text.vCurrent_CTRatio_Set:00000000 vCurrent_CTRatio_Set
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:2958   .text.vCurrent_CTRatio_Set:00000078 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:2969   .text.vCurrent_Limit_ReadSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:2974   .text.vCurrent_Limit_ReadSet:00000000 vCurrent_Limit_ReadSet
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:3101   .text.vCurrent_Limit_ReadSet:000000a4 $d
                            *COM*:00000010 TransFormer
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:3113   .text.vCurrent_CTRatio_ReadSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:3118   .text.vCurrent_CTRatio_ReadSet:00000000 vCurrent_CTRatio_ReadSet
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:3234   .text.vCurrent_CTRatio_ReadSet:00000090 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:3246   .text.vCurrent_TransFormer_Capacity_ReadSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:3251   .text.vCurrent_TransFormer_Capacity_ReadSet:00000000 vCurrent_TransFormer_Capacity_ReadSet
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:3367   .text.vCurrent_TransFormer_Capacity_ReadSet:00000090 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:3379   .text.vEnergy_Modify_ReadSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:3384   .text.vEnergy_Modify_ReadSet:00000000 vEnergy_Modify_ReadSet
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:3507   .text.vEnergy_Modify_ReadSet:000000a4 $d
                            *COM*:00000001 ucDayfrozen_Modify_Ratio
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:3521   .text.vRead_Version:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:3526   .text.vRead_Version:00000000 vRead_Version
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:3642   .text.vRead_Version:0000008c $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:3653   .text.vEnergy_Modify_RaitoSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:3658   .text.vEnergy_Modify_RaitoSet:00000000 vEnergy_Modify_RaitoSet
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:3811   .text.vEnergy_Modify_RaitoSet:000000d0 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:3824   .text.vVoltage_SetMinValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:3829   .text.vVoltage_SetMinValue:00000000 vVoltage_SetMinValue
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:3962   .text.vVoltage_SetMinValue:000000a0 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:3973   .text.vEnergy_Modify_ReadValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:3978   .text.vEnergy_Modify_ReadValue:00000000 vEnergy_Modify_ReadValue
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:4138   .text.vEnergy_Modify_ReadValue:000000d0 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:4151   .text.vVoltage_SetMaxValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:4156   .text.vVoltage_SetMaxValue:00000000 vVoltage_SetMaxValue
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:4291   .text.vVoltage_SetMaxValue:000000a4 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:4302   .text.vEnergy_Modify_AbleSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:4307   .text.vEnergy_Modify_AbleSet:00000000 vEnergy_Modify_AbleSet
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:4479   .text.vEnergy_Modify_AbleSet:000000d4 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:4493   .text.vEnergy_Modify_Reset:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:4498   .text.vEnergy_Modify_Reset:00000000 vEnergy_Modify_Reset
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:4647   .text.vEnergy_Modify_Reset:000000b0 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:4661   .text.blRecvFrame:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:4666   .text.blRecvFrame:00000000 blRecvFrame
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:4849   .text.blRecvFrame:000000f0 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:4857   .text.vDBDataID_Handle:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:4862   .text.vDBDataID_Handle:00000000 vDBDataID_Handle
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 209


C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:4972   .text.vDBDataID_Handle:0000008c $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:6631   .text.vNowEnergy_Modifier:00000000 vNowEnergy_Modifier
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7027   .text.vDayfrozen_Modifier:00000000 vDayfrozen_Modifier
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7278   .text.vAccountEnergy_Modify:00000000 vAccountEnergy_Modify
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:4986   .text.vINFRDataID_Handle:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:4991   .text.vINFRDataID_Handle:00000000 vINFRDataID_Handle
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:5085   .text.vINFRDataID_Handle:00000074 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:5095   .text.blVoltage_Create:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:5100   .text.blVoltage_Create:00000000 blVoltage_Create
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:5123   .text.blVoltage_Create:00000012 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:5128   .text.blVoltage_Create:0000001c $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:5491   .text.blVoltage_Create:000001dc $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:5500   .text.Voltage_Change_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:5505   .text.Voltage_Change_Init:00000000 Voltage_Change_Init
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:5593   .text.Voltage_Change_Init:00000068 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:5605   .text.Voltage_Modifier_Method:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:5610   .text.Voltage_Modifier_Method:00000000 Voltage_Modifier_Method
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:5727   .text.Voltage_Modifier_Method:00000080 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:5733   .text.Voltage_Modifier:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:5738   .text.Voltage_Modifier:00000000 Voltage_Modifier
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:6080   .text.Voltage_Modifier:000001ec $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:6091   .text.vVoltageHandle:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:6096   .text.vVoltageHandle:00000000 vVoltageHandle
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:6126   .text.vVoltageHandle:00000018 $d
                            *COM*:00000001 Voltage_Frame_Status
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:6133   .text.vCurrent_Limit_DefaultSet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:6138   .text.vCurrent_Limit_DefaultSet:00000000 vCurrent_Limit_DefaultSet
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:6213   .text.vCurrent_Limit_DefaultSet:00000060 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:6222   .text.vCurrentDirect_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:6227   .text.vCurrentDirect_Modify:00000000 vCurrentDirect_Modify
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:6242   .text.vCurrentDirect_Modify:0000000c $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:6408   .text.vCurrent_Count_Clear:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:6413   .text.vCurrent_Count_Clear:00000000 vCurrent_Count_Clear
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:6434   .text.vCurrent_Count_Clear:00000010 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:6441   .text.vEnergy_Modify_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:6446   .text.vEnergy_Modify_Init:00000000 vEnergy_Modify_Init
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:6483   .text.vEnergy_Modify_Init:00000024 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:6492   .text.vNow_Frozen_Modify_Mothod:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:6497   .text.vNow_Frozen_Modify_Mothod:00000000 vNow_Frozen_Modify_Mothod
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:6620   .text.vNow_Frozen_Modify_Mothod:000000a0 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:6626   .text.vNowEnergy_Modifier:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:6675   .text.vNowEnergy_Modifier:0000002e $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:6681   .text.vNowEnergy_Modifier:00000034 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7001   .text.vNowEnergy_Modifier:00000210 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7022   .text.vDayfrozen_Modifier:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7221   .text.vDayfrozen_Modifier:0000012c $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7236   .text.vAccountEnergy_Modify_Mothod:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7241   .text.vAccountEnergy_Modify_Mothod:00000000 vAccountEnergy_Modify_Mothod
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7268   .text.vAccountEnergy_Modify_Mothod:00000014 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7273   .text.vAccountEnergy_Modify:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7486   .text.vAccountEnergy_Modify:00000144 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7714   .bss.Ccurrent:00000000 Ccurrent
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7699   .bss.Bcurrent:00000000 Bcurrent
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7741   .bss.Acurrent:00000000 Acurrent
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7518   .data.C_Voltage:00000000 C_Voltage
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7680   .data.B_Voltage:00000000 B_Voltage
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7832   .data.A_Voltage:00000000 A_Voltage
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 210


C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7720   .data.Dayfrozen_Change_State:00000000 Dayfrozen_Change_State
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7667   .bss.Voltage_Change_State:00000000 Voltage_Change_State
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7686   .bss.uc645DataDomainLength:00000000 uc645DataDomainLength
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7734   .bss.ucRcvStatus:00000000 ucRcvStatus
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7531   .rodata.DBDataID_Handle_List:00000000 DBDataID_Handle_List
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7761   .rodata.INFRDataID_Handle_List:00000000 INFRDataID_Handle_List
                            *COM*:000003e8 ucApp_Buf_INFR
                            *COM*:000003e8 ucApp_Buf_ZD2DB
                            *COM*:000003e8 ucApp_Buf_DB2ZD
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7754   .data.pUartIR:00000000 pUartIR
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7661   .data.pUartDB:00000000 pUartDB
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7673   .data.pUartZD:00000000 pUartZD
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7514   .data.C_Voltage:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7521   .bss.Uart3_Sndbuf:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7524   .bss.Uart3_Sndbuf:00000000 Uart3_Sndbuf
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7527   .rodata.DBDataID_Handle_List:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7643   .bss.Uart3_Rsvbuf:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7646   .bss.Uart3_Rsvbuf:00000000 Uart3_Rsvbuf
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7649   .data.UartDB:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7652   .data.UartDB:00000000 UartDB
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7657   .data.pUartDB:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7668   .bss.Voltage_Change_State:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7670   .data.pUartZD:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7726   .data.UartZD:00000000 UartZD
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7676   .data.B_Voltage:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7687   .bss.uc645DataDomainLength:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7689   .bss.Uart1_Rsvbuf:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7692   .bss.Uart1_Rsvbuf:00000000 Uart1_Rsvbuf
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7695   .bss.Bcurrent:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7702   .data.UartIR:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7705   .data.UartIR:00000000 UartIR
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7747   .bss.Uart2_Rsvbuf:00000000 Uart2_Rsvbuf
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7838   .bss.Uart2_Sndbuf:00000000 Uart2_Sndbuf
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7710   .bss.Ccurrent:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7723   .data.UartZD:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7844   .bss.Uart1_Sndbuf:00000000 Uart1_Sndbuf
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7735   .bss.ucRcvStatus:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7737   .bss.Acurrent:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7744   .bss.Uart2_Rsvbuf:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7750   .data.pUartIR:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7757   .rodata.INFRDataID_Handle_List:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7828   .data.A_Voltage:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7835   .bss.Uart2_Sndbuf:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:7841   .bss.Uart1_Sndbuf:00000000 $d
                     .debug_frame:00000010 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1382   .text.Estatus_Modify_CurrentEvent:00000019 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:1382   .text.Estatus_Modify_CurrentEvent:0000001a $t
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:6247   .text.vCurrentDirect_Modify:00000011 $d
C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s:6247   .text.vCurrentDirect_Modify:00000012 $t

UNDEFINED SYMBOLS
Flash_Write_Word
ucDrv_Buf_PutBytes
blDrv_Buf_IsEmpty
Uart_DataPut
USART_ITConfig
EEProm_Read
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccFOHpHd.s 			page 211


Flash_Read_Word
FLASH_Unlock
FLASH_ErasePage
FLASH_Lock
ucDrv_Buf_GetBytes
blTime2_Update
blWordsCounterStatus
uwTime2WordsCounter
blFramesCounterStatus
uwTime2FramesCounter
__aeabi_uldivmod
