ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"main.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.RsvFrameHandle,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	RsvFrameHandle:
  27              	.LFB112:
  28              		.file 1 "../user/source/main.c"
   1:../user/source/main.c **** #include "main.h"
   2:../user/source/main.c **** #include "GPIO.h"
   3:../user/source/main.c **** #include "Uart.h"
   4:../user/source/main.c **** #include "DLT645.h"
   5:../user/source/main.c **** #include "Flash.h"
   6:../user/source/main.c **** #include "Time.h"
   7:../user/source/main.c **** #include "protocol.h"
   8:../user/source/main.c **** #include "DLT698.h"
   9:../user/source/main.c **** #include "DLT698_45.h"
  10:../user/source/main.c **** 
  11:../user/source/main.c **** /*698数据存储单元*/
  12:../user/source/main.c **** COLL_STORE_DATA stCollData;
  13:../user/source/main.c **** /*串口收帧标志*/
  14:../user/source/main.c **** bool FLAG_UartZD_HasData = false;
  15:../user/source/main.c **** bool FLAG_UartDB_HasData = false;
  16:../user/source/main.c **** 
  17:../user/source/main.c **** int main(void)
  18:../user/source/main.c **** {
  19:../user/source/main.c ****     ProtocolDef ProtocolType = none;
  20:../user/source/main.c ****     //uint8_t tmpAPDU[MAX_APDU_LENGTH];
  21:../user/source/main.c ****     //uint8_t *pAPDU = tmpAPDU;
  22:../user/source/main.c ****     uint8_t *pAPDU = NULL;
  23:../user/source/main.c ****     uint32_t dwLen = 0;
  24:../user/source/main.c ****     //uint8_t *pframe = NULL;
  25:../user/source/main.c ****     uint32_t i;
  26:../user/source/main.c ****     //uint32_t test;
  27:../user/source/main.c ****     DLT698_FRAME dlt698Frame;
  28:../user/source/main.c **** 
  29:../user/source/main.c ****     /*配置中断向量组*/
  30:../user/source/main.c ****     NVIC_PriorityGroupConfig(NVIC_PriorityGroup_1);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 2


  31:../user/source/main.c ****     SysTick_Config(SysTick_100Ms);
  32:../user/source/main.c ****     /*SysTick使用系统频率64M的8分频：8MHz*/
  33:../user/source/main.c ****     SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK_Div8);
  34:../user/source/main.c ****     NVIC_SetPriority(SysTick_IRQn, -1);
  35:../user/source/main.c ****     vInterFlash_Init();
  36:../user/source/main.c ****     vGPIO_Init();
  37:../user/source/main.c ****     vFeedExtWatchDog();
  38:../user/source/main.c ****     vUart_Init(); //RXNE中断使能
  39:../user/source/main.c ****     /*定时器2初始化*/
  40:../user/source/main.c ****     vTimer_Init();
  41:../user/source/main.c ****     /*电压修改的上下限值设为默认值；开启修改功能 */
  42:../user/source/main.c ****     Voltage_Change_Init();
  43:../user/source/main.c ****     /*电流重过载参数设置*/
  44:../user/source/main.c ****     vCurrent_Limit_DefaultSet();
  45:../user/source/main.c ****     /*电量修改的上下限值设为默认值；开启修改功能 */
  46:../user/source/main.c ****     vEnergy_Modify_Init();
  47:../user/source/main.c ****     /*点亮运行灯*/
  48:../user/source/main.c ****     vLed_Light();
  49:../user/source/main.c ****     while (1)
  50:../user/source/main.c ****     {
  51:../user/source/main.c ****         switch (ProtocolType)
  52:../user/source/main.c ****         {
  53:../user/source/main.c ****         case none:
  54:../user/source/main.c ****         {
  55:../user/source/main.c ****             /*识别规约类型*/
  56:../user/source/main.c ****             Uart_idleReadEnable(pUartZD);
  57:../user/source/main.c ****             Uart_idleReadEnable(pUartDB);
  58:../user/source/main.c ****             if (FLAG_UartZD_HasData)
  59:../user/source/main.c ****             {
  60:../user/source/main.c ****                 Uart_idleReadDisable(pUartZD);
  61:../user/source/main.c ****                 FLAG_UartZD_HasData = false;
  62:../user/source/main.c ****                 dwLen = dwUartCopy(pUartZD, ucApp_Buf_ZD2DB, pUartDB);
  63:../user/source/main.c ****                 ProtocolType = GetProtocolType(ucApp_Buf_ZD2DB, dwLen);
  64:../user/source/main.c ****             }
  65:../user/source/main.c ****             if (FLAG_UartDB_HasData)
  66:../user/source/main.c ****             {
  67:../user/source/main.c ****                 Uart_idleReadDisable(pUartDB);
  68:../user/source/main.c ****                 FLAG_UartDB_HasData = false;
  69:../user/source/main.c ****                 dwLen = dwUartCopy(pUartDB, ucApp_Buf_DB2ZD, pUartZD);
  70:../user/source/main.c ****                 ProtocolType = GetProtocolType(ucApp_Buf_DB2ZD, dwLen);
  71:../user/source/main.c ****             }
  72:../user/source/main.c ****             break;
  73:../user/source/main.c ****         }
  74:../user/source/main.c ****         case dlt698:
  75:../user/source/main.c ****         {
  76:../user/source/main.c ****             Uart_idleReadEnable(pUartZD);
  77:../user/source/main.c ****             Uart_idleReadEnable(pUartDB);
  78:../user/source/main.c ****             if (FLAG_UartZD_HasData)
  79:../user/source/main.c ****             {
  80:../user/source/main.c ****                 Uart_idleReadDisable(pUartZD);
  81:../user/source/main.c ****                 FLAG_UartZD_HasData = false;
  82:../user/source/main.c ****                 dwLen = dwUartCopy(pUartZD, ucApp_Buf_ZD2DB, pUartDB);
  83:../user/source/main.c ****                 //if (pframe = pGetpFrame(ucApp_Buf_ZD2DB, dwLen) == NULL)
  84:../user/source/main.c ****                 //break;
  85:../user/source/main.c ****             }
  86:../user/source/main.c ****             if (FLAG_UartDB_HasData)
  87:../user/source/main.c ****             {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 3


  88:../user/source/main.c ****                 Uart_idleReadDisable(pUartDB);
  89:../user/source/main.c ****                 FLAG_UartDB_HasData = false;
  90:../user/source/main.c ****                 dlt698Frame.pStart = NULL;
  91:../user/source/main.c ****                 //dwLen = 0;
  92:../user/source/main.c **** 
  93:../user/source/main.c ****                 /*电表口收帧*/
  94:../user/source/main.c ****                 if ((dwLen = Uart_Read(pUartDB, ucApp_Buf_DB2ZD, DRV_BUF_SIZE)) == 0)
  95:../user/source/main.c ****                     break;
  96:../user/source/main.c **** 
  97:../user/source/main.c ****                 if (Voltage_Change_State != Voltage_NOChange)
  98:../user/source/main.c ****                 {
  99:../user/source/main.c ****                     Uart_OnceWrite(pUartZD, ucApp_Buf_DB2ZD, dwLen + 2, TICKS_500MS);
 100:../user/source/main.c ****                     break;
 101:../user/source/main.c ****                 }
 102:../user/source/main.c **** 
 103:../user/source/main.c ****                 /*收帧处理*/
 104:../user/source/main.c ****                 if ((pGetpFrame(ucApp_Buf_DB2ZD, dwLen, &dlt698Frame)) == NULL)
 105:../user/source/main.c ****                     break;
 106:../user/source/main.c **** 
 107:../user/source/main.c ****                 /*电压读取部分*/
 108:../user/source/main.c ****                 if ((dwLen = dwGet698Apdu(&dlt698Frame, &pAPDU)) <= 0)
 109:../user/source/main.c ****                     break;
 110:../user/source/main.c **** 
 111:../user/source/main.c ****                 if (dwAPduAnalyze(pAPDU, dwLen, &stCollData) < 0)
 112:../user/source/main.c ****                     break;
 113:../user/source/main.c **** 
 114:../user/source/main.c ****                 for (i = 0; i < stCollData.ucDataNum; i++)
 115:../user/source/main.c ****                 {
 116:../user/source/main.c **** 
 117:../user/source/main.c ****                     if (stCollData.stDataUnit[i].stOAD.OI_date != 0x2000) /*电压OI*/
 118:../user/source/main.c ****                         continue;
 119:../user/source/main.c ****                     /*uwLen:
 120:../user/source/main.c ****                     ucPrt-> 01 ―― 类型=1，表示数组  
 121:../user/source/main.c ****                             03 ―― 数组元素个数=3
 122:../user/source/main.c ****                             12 09 6D ―― 元素1：类型18：long-unsigned 241.3V A相
 123:../user/source/main.c ****                             12 09 6D ―― 元素2：类型18：long-unsigned 241.3V B相
 124:../user/source/main.c ****                             12 09 6D ―― 元素3：类型18：long-unsigned 241.3V C相
 125:../user/source/main.c ****                     */
 126:../user/source/main.c ****                     //stCollData.stDataUnit[i].uwLen;
 127:../user/source/main.c ****                     if (stCollData.stDataUnit[i].ucVal == 0)
 128:../user/source/main.c ****                         continue;
 129:../user/source/main.c ****                     A_Voltage = MAKE_WORD(*(stCollData.stDataUnit[i].ucPtr + 3),
 130:../user/source/main.c ****                                           *(stCollData.stDataUnit[i].ucPtr + 4));
 131:../user/source/main.c ****                     B_Voltage = MAKE_WORD(*(stCollData.stDataUnit[i].ucPtr + 6),
 132:../user/source/main.c ****                                           *(stCollData.stDataUnit[i].ucPtr + 7));
 133:../user/source/main.c ****                     A_Voltage = MAKE_WORD(*(stCollData.stDataUnit[i].ucPtr + 9),
 134:../user/source/main.c ****                                           *(stCollData.stDataUnit[i].ucPtr + 10));
 135:../user/source/main.c **** 
 136:../user/source/main.c ****                     if ((A_Voltage <= Voltage_MAX) && (A_Voltage >= Voltage_MIN))
 137:../user/source/main.c ****                     {
 138:../user/source/main.c ****                         A_Voltage = Voltage_Modifier_Method(A_Voltage);
 139:../user/source/main.c ****                         /*ucPtr是指向APDU数据段的指针，以下直接修改APDU原始帧*/
 140:../user/source/main.c ****                         *(stCollData.stDataUnit[i].ucPtr + 3) = LSB(A_Voltage);
 141:../user/source/main.c ****                         *(stCollData.stDataUnit[i].ucPtr + 4) = MSB(A_Voltage);
 142:../user/source/main.c ****                     }
 143:../user/source/main.c **** 
 144:../user/source/main.c ****                     if ((B_Voltage <= Voltage_MAX) && (B_Voltage >= Voltage_MIN))
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 4


 145:../user/source/main.c ****                     {
 146:../user/source/main.c ****                         B_Voltage = Voltage_Modifier_Method(B_Voltage);
 147:../user/source/main.c ****                         *(stCollData.stDataUnit[i].ucPtr + 6) = LSB(B_Voltage);
 148:../user/source/main.c ****                         *(stCollData.stDataUnit[i].ucPtr + 7) = MSB(B_Voltage);
 149:../user/source/main.c ****                     }
 150:../user/source/main.c **** 
 151:../user/source/main.c ****                     if ((C_Voltage <= Voltage_MAX) && (C_Voltage >= Voltage_MIN))
 152:../user/source/main.c ****                     {
 153:../user/source/main.c ****                         C_Voltage = Voltage_Modifier_Method(C_Voltage);
 154:../user/source/main.c ****                         *(stCollData.stDataUnit[i].ucPtr + 9) = LSB(C_Voltage);
 155:../user/source/main.c ****                         *(stCollData.stDataUnit[i].ucPtr + 10) = MSB(C_Voltage);
 156:../user/source/main.c ****                     }
 157:../user/source/main.c ****                 }
 158:../user/source/main.c ****                 dwReCalculateFCS(&dlt698Frame);
 159:../user/source/main.c ****                 //frame -> UartBuf
 160:../user/source/main.c ****                 Uart_OnceWrite(pUartZD, dlt698Frame.pStart, dlt698Frame.uwFramelen + 2, TICKS_500MS
 161:../user/source/main.c ****             }
 162:../user/source/main.c ****             /*帧转发*/
 163:../user/source/main.c ****             break;
 164:../user/source/main.c ****         }
 165:../user/source/main.c ****         case dlt645:
 166:../user/source/main.c ****         {
 167:../user/source/main.c ****             /*串口无收发时喂狗间隔为1ms左右*/
 168:../user/source/main.c ****             vFeedExtWatchDog();
 169:../user/source/main.c ****             /*集中器侧数据帧收帧处理*/
 170:../user/source/main.c ****             if (blDrv_Buf_IsEmpty(pUartZD->pRsvbuf) == false)
 171:../user/source/main.c ****             {
 172:../user/source/main.c ****                 RsvFrameHandle(ucApp_Buf_ZD2DB);
 173:../user/source/main.c ****             }
 174:../user/source/main.c ****             /*电表侧收帧处理*/
 175:../user/source/main.c ****             /*未收到电表帧*/
 176:../user/source/main.c ****             if (blDrv_Buf_IsEmpty(pUartDB->pRsvbuf) == true)
 177:../user/source/main.c ****             {
 178:../user/source/main.c ****                 VoltageTimeOutHandle();
 179:../user/source/main.c ****             }
 180:../user/source/main.c ****             /*收到电表帧*/
 181:../user/source/main.c ****             else
 182:../user/source/main.c ****             {
 183:../user/source/main.c ****                 /*非法帧*/
 184:../user/source/main.c ****                 if (!blRecvFrame(pUartDB->pRsvbuf, ucApp_Buf_DB2ZD))
 185:../user/source/main.c ****                 {
 186:../user/source/main.c ****                     /*电压回帧超时*/
 187:../user/source/main.c ****                     if ((Voltage_Frame_Status == FrameAwaitingReply) &&
 188:../user/source/main.c ****                         (blTime2_Update(uwTime2FramesCounter, DLT645_FRAMES_DELAY_MAX)))
 189:../user/source/main.c ****                     {
 190:../user/source/main.c ****                         /*中继器使用上次的正确电压值替代回复*/
 191:../user/source/main.c ****                         if (blVoltage_Create(ucApp_Buf_ZD2DB))
 192:../user/source/main.c ****                         {
 193:../user/source/main.c ****                             ucDrv_Buf_PutBytes(ucApp_Buf_ZD2DB, pUartZD->pSndbuf, ucApp_Buf_ZD2DB[9
 194:../user/source/main.c ****                             /*发送电压帧*/
 195:../user/source/main.c ****                             if (!blDrv_Buf_IsEmpty(pUartZD->pSndbuf))
 196:../user/source/main.c ****                             {
 197:../user/source/main.c ****                                 Uart_DataPut(USART1);
 198:../user/source/main.c ****                                 /*等待电压回帧状态清位*/
 199:../user/source/main.c ****                                 Voltage_Frame_Status = FrameReplied;
 200:../user/source/main.c ****                                 /*计时器复位*/
 201:../user/source/main.c ****                                 blFramesCounterStatus = false;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 5


 202:../user/source/main.c ****                                 uwTime2FramesCounter = 0;
 203:../user/source/main.c ****                             }
 204:../user/source/main.c ****                         }
 205:../user/source/main.c ****                     }
 206:../user/source/main.c ****                 }
 207:../user/source/main.c ****                 /*合法帧*/
 208:../user/source/main.c ****                 else
 209:../user/source/main.c ****                 {
 210:../user/source/main.c ****                     vDBDataID_Handle(ucApp_Buf_DB2ZD);
 211:../user/source/main.c ****                     ucDrv_Buf_PutBytes(ucApp_Buf_DB2ZD, pUartZD->pSndbuf, uc645DataDomainLength + 1
 212:../user/source/main.c ****                     if (!blDrv_Buf_IsEmpty(pUartZD->pSndbuf))
 213:../user/source/main.c ****                     {
 214:../user/source/main.c ****                         Uart_DataPut(pUartZD->handler);
 215:../user/source/main.c ****                     }
 216:../user/source/main.c ****                 }
 217:../user/source/main.c ****             }
 218:../user/source/main.c ****             /*可选功能：红外设置参数*/
 219:../user/source/main.c **** #ifdef ENABLE_INFR
 220:../user/source/main.c ****             /*红外串口收帧处理 */
 221:../user/source/main.c ****             if (blDrv_Buf_IsEmpty(pUartIR->pRsvbuf) == false)
 222:../user/source/main.c ****             {
 223:../user/source/main.c ****                 if (blRecvFrame(pUartIR->pRsvbuf, ucApp_Buf_INFR))
 224:../user/source/main.c ****                 {
 225:../user/source/main.c ****                     if (ucApp_Buf_INFR[8] == 0X13)
 226:../user/source/main.c ****                     {
 227:../user/source/main.c ****                         ucApp_Buf_INFR[1] = 0x01;
 228:../user/source/main.c ****                         ucApp_Buf_INFR[2] = 0x01;
 229:../user/source/main.c ****                         ucApp_Buf_INFR[3] = 0x01;
 230:../user/source/main.c ****                         ucApp_Buf_INFR[4] = 0x01;
 231:../user/source/main.c ****                         ucApp_Buf_INFR[5] = 0x01;
 232:../user/source/main.c ****                         ucApp_Buf_INFR[6] = 0x01;
 233:../user/source/main.c ****                         ucApp_Buf_INFR[8] = 0x93;
 234:../user/source/main.c ****                         ucApp_Buf_INFR[9] = 0x06;
 235:../user/source/main.c ****                         ucApp_Buf_INFR[10] = 0x34;
 236:../user/source/main.c ****                         ucApp_Buf_INFR[11] = 0x34;
 237:../user/source/main.c ****                         ucApp_Buf_INFR[12] = 0x34;
 238:../user/source/main.c ****                         ucApp_Buf_INFR[13] = 0x34;
 239:../user/source/main.c ****                         ucApp_Buf_INFR[14] = 0x34;
 240:../user/source/main.c ****                         ucApp_Buf_INFR[15] = 0x34;
 241:../user/source/main.c ****                         ucApp_Buf_INFR[16] = 0xA7;
 242:../user/source/main.c ****                         ucApp_Buf_INFR[17] = 0x16;
 243:../user/source/main.c ****                         ucDrv_Buf_PutBytes(ucApp_Buf_INFR, pUartIR->pSndbuf, 18);
 244:../user/source/main.c ****                     }
 245:../user/source/main.c ****                     else
 246:../user/source/main.c ****                     {
 247:../user/source/main.c ****                         vINFRDataID_Handle(ucApp_Buf_INFR);
 248:../user/source/main.c ****                     }
 249:../user/source/main.c ****                     /*红外口回帧*/
 250:../user/source/main.c ****                     if (!blDrv_Buf_IsEmpty(pUartIR->pSndbuf))
 251:../user/source/main.c ****                     {
 252:../user/source/main.c ****                         USART_ITConfig(USART2, USART_IT_RXNE, DISABLE);
 253:../user/source/main.c ****                         //TIM_CCxCmd(TIM5, TIM_Channel_2, TIM_CCx_Enable);
 254:../user/source/main.c ****                         USART_ITConfig(USART2, USART_IT_TXE, ENABLE);
 255:../user/source/main.c ****                     }
 256:../user/source/main.c ****                 }
 257:../user/source/main.c ****             } //end 红外收帧处理
 258:../user/source/main.c **** #endif
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 6


 259:../user/source/main.c ****             break;
 260:../user/source/main.c ****         } //end while
 261:../user/source/main.c ****         default:
 262:../user/source/main.c ****         {
 263:../user/source/main.c ****             break;
 264:../user/source/main.c ****         }
 265:../user/source/main.c ****         } //end switch
 266:../user/source/main.c ****     }     //end while
 267:../user/source/main.c **** } //end main
 268:../user/source/main.c **** 
 269:../user/source/main.c **** static void RsvFrameHandle(uint8_t *pucBuffer)
 270:../user/source/main.c **** {
  29              		.loc 1 270 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34 0000 38B5     		push	{r3, r4, r5, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 3, -16
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41 0002 0446     		mov	r4, r0
 271:../user/source/main.c ****     /*帧合法性判断*/
 272:../user/source/main.c ****     if (blRecvFrame(pUartZD->pRsvbuf, pucBuffer))
  42              		.loc 1 272 0
  43 0004 154B     		ldr	r3, .L5
  44 0006 1B68     		ldr	r3, [r3]
  45 0008 0146     		mov	r1, r0
  46 000a 5868     		ldr	r0, [r3, #4]
  47              	.LVL1:
  48 000c FFF7FEFF 		bl	blRecvFrame
  49              	.LVL2:
  50 0010 18B3     		cbz	r0, .L1
 273:../user/source/main.c ****     {
 274:../user/source/main.c ****         /*是否召测电压*/
 275:../user/source/main.c ****         if ((pucBuffer[8] == 0X11) &&
  51              		.loc 1 275 0
  52 0012 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
  53 0014 112B     		cmp	r3, #17
  54 0016 0ED1     		bne	.L3
 276:../user/source/main.c ****             (pucBuffer[10] == 0x33) &&
  55              		.loc 1 276 0 discriminator 1
  56 0018 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 275:../user/source/main.c ****             (pucBuffer[10] == 0x33) &&
  57              		.loc 1 275 0 discriminator 1
  58 001a 332B     		cmp	r3, #51
  59 001c 0BD1     		bne	.L3
 277:../user/source/main.c ****             (pucBuffer[12] == 0x34) &&
  60              		.loc 1 277 0
  61 001e 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 276:../user/source/main.c ****             (pucBuffer[10] == 0x33) &&
  62              		.loc 1 276 0
  63 0020 342B     		cmp	r3, #52
  64 0022 08D1     		bne	.L3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 7


 278:../user/source/main.c ****             (pucBuffer[13] == 0x35))
  65              		.loc 1 278 0
  66 0024 637B     		ldrb	r3, [r4, #13]	@ zero_extendqisi2
 277:../user/source/main.c ****             (pucBuffer[12] == 0x34) &&
  67              		.loc 1 277 0
  68 0026 352B     		cmp	r3, #53
  69 0028 05D1     		bne	.L3
 279:../user/source/main.c ****         {
 280:../user/source/main.c ****             /*等待电压回帧状态置位*/
 281:../user/source/main.c ****             Voltage_Frame_Status = FrameAwaitingReply;
  70              		.loc 1 281 0
  71 002a 0022     		movs	r2, #0
  72 002c 0C4B     		ldr	r3, .L5+4
  73 002e 1A70     		strb	r2, [r3]
 282:../user/source/main.c ****             /*开始计时*/
 283:../user/source/main.c ****             blFramesCounterStatus = true;
  74              		.loc 1 283 0
  75 0030 0122     		movs	r2, #1
  76 0032 0C4B     		ldr	r3, .L5+8
  77 0034 1A70     		strb	r2, [r3]
  78              	.L3:
 284:../user/source/main.c ****         }
 285:../user/source/main.c ****         /*转发召测帧*/
 286:../user/source/main.c ****         ucDrv_Buf_PutBytes(pucBuffer, pUartDB->pSndbuf, uc645DataDomainLength + 12);
  79              		.loc 1 286 0
  80 0036 0C4D     		ldr	r5, .L5+12
  81 0038 2B68     		ldr	r3, [r5]
  82 003a 0C4A     		ldr	r2, .L5+16
  83 003c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
  84 003e 0C32     		adds	r2, r2, #12
  85 0040 9968     		ldr	r1, [r3, #8]
  86 0042 2046     		mov	r0, r4
  87 0044 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
  88              	.LVL3:
 287:../user/source/main.c ****         if (!blDrv_Buf_IsEmpty(pUartDB->pSndbuf))
  89              		.loc 1 287 0
  90 0048 2B68     		ldr	r3, [r5]
  91 004a 9868     		ldr	r0, [r3, #8]
  92 004c FFF7FEFF 		bl	blDrv_Buf_IsEmpty
  93              	.LVL4:
  94 0050 18B9     		cbnz	r0, .L1
 288:../user/source/main.c ****         {
 289:../user/source/main.c ****             Uart_DataPut(pUartDB->handler);
  95              		.loc 1 289 0
  96 0052 2B68     		ldr	r3, [r5]
  97 0054 1868     		ldr	r0, [r3]
  98 0056 FFF7FEFF 		bl	Uart_DataPut
  99              	.LVL5:
 100              	.L1:
 101 005a 38BD     		pop	{r3, r4, r5, pc}
 102              	.LVL6:
 103              	.L6:
 104              		.align	2
 105              	.L5:
 106 005c 00000000 		.word	pUartZD
 107 0060 00000000 		.word	Voltage_Frame_Status
 108 0064 00000000 		.word	blFramesCounterStatus
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 8


 109 0068 00000000 		.word	pUartDB
 110 006c 00000000 		.word	uc645DataDomainLength
 111              		.cfi_endproc
 112              	.LFE112:
 114              		.section	.text.VoltageTimeOutHandle,"ax",%progbits
 115              		.align	2
 116              		.thumb
 117              		.thumb_func
 119              	VoltageTimeOutHandle:
 120              	.LFB113:
 290:../user/source/main.c ****         }
 291:../user/source/main.c ****     }
 292:../user/source/main.c **** }
 293:../user/source/main.c **** 
 294:../user/source/main.c **** static void VoltageTimeOutHandle(void)
 295:../user/source/main.c **** {
 121              		.loc 1 295 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 296:../user/source/main.c ****     /*召测电压超时*/
 297:../user/source/main.c ****     if ((Voltage_Frame_Status == FrameAwaitingReply) &&
 125              		.loc 1 297 0
 126 0000 144B     		ldr	r3, .L11
 127 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 128 0004 23BB     		cbnz	r3, .L10
 295:../user/source/main.c ****     /*召测电压超时*/
 129              		.loc 1 295 0 discriminator 1
 130 0006 10B5     		push	{r4, lr}
 131              	.LCFI1:
 132              		.cfi_def_cfa_offset 8
 133              		.cfi_offset 4, -8
 134              		.cfi_offset 14, -4
 298:../user/source/main.c ****         (blTime2_Update(uwTime2FramesCounter, DLT645_FRAMES_DELAY_MAX)))
 135              		.loc 1 298 0 discriminator 1
 136 0008 1921     		movs	r1, #25
 137 000a 134B     		ldr	r3, .L11+4
 138 000c 1888     		ldrh	r0, [r3]
 139 000e FFF7FEFF 		bl	blTime2_Update
 140              	.LVL7:
 297:../user/source/main.c ****         (blTime2_Update(uwTime2FramesCounter, DLT645_FRAMES_DELAY_MAX)))
 141              		.loc 1 297 0 discriminator 1
 142 0012 E0B1     		cbz	r0, .L7
 299:../user/source/main.c ****     {
 300:../user/source/main.c ****         /*中继器使用上次的正确电压值替代回复*/
 301:../user/source/main.c ****         if (blVoltage_Create(ucApp_Buf_ZD2DB))
 143              		.loc 1 301 0
 144 0014 1148     		ldr	r0, .L11+8
 145 0016 FFF7FEFF 		bl	blVoltage_Create
 146              	.LVL8:
 147 001a C0B1     		cbz	r0, .L7
 302:../user/source/main.c ****         {
 303:../user/source/main.c ****             ucDrv_Buf_PutBytes(ucApp_Buf_ZD2DB, pUartZD->pSndbuf, ucApp_Buf_ZD2DB[9] + 12);
 148              		.loc 1 303 0
 149 001c 104C     		ldr	r4, .L11+12
 150 001e 2368     		ldr	r3, [r4]
 151 0020 0E48     		ldr	r0, .L11+8
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 9


 152 0022 427A     		ldrb	r2, [r0, #9]	@ zero_extendqisi2
 153 0024 0C32     		adds	r2, r2, #12
 154 0026 9968     		ldr	r1, [r3, #8]
 155 0028 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 156              	.LVL9:
 304:../user/source/main.c ****             if (!blDrv_Buf_IsEmpty(pUartZD->pSndbuf))
 157              		.loc 1 304 0
 158 002c 2368     		ldr	r3, [r4]
 159 002e 9868     		ldr	r0, [r3, #8]
 160 0030 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 161              	.LVL10:
 162 0034 58B9     		cbnz	r0, .L7
 305:../user/source/main.c ****             {
 306:../user/source/main.c ****                 Uart_DataPut(pUartZD->handler);
 163              		.loc 1 306 0
 164 0036 2368     		ldr	r3, [r4]
 165 0038 1868     		ldr	r0, [r3]
 166 003a FFF7FEFF 		bl	Uart_DataPut
 167              	.LVL11:
 307:../user/source/main.c ****                 /*等待电压回帧状态清位*/
 308:../user/source/main.c ****                 Voltage_Frame_Status = FrameReplied;
 168              		.loc 1 308 0
 169 003e 0122     		movs	r2, #1
 170 0040 044B     		ldr	r3, .L11
 171 0042 1A70     		strb	r2, [r3]
 309:../user/source/main.c ****                 /*计时器复位*/
 310:../user/source/main.c ****                 blFramesCounterStatus = false;
 172              		.loc 1 310 0
 173 0044 0023     		movs	r3, #0
 174 0046 074A     		ldr	r2, .L11+16
 175 0048 1370     		strb	r3, [r2]
 311:../user/source/main.c ****                 uwTime2FramesCounter = 0;
 176              		.loc 1 311 0
 177 004a 034A     		ldr	r2, .L11+4
 178 004c 1380     		strh	r3, [r2]	@ movhi
 179              	.L7:
 180 004e 10BD     		pop	{r4, pc}
 181              	.L10:
 182              	.LCFI2:
 183              		.cfi_def_cfa_offset 0
 184              		.cfi_restore 4
 185              		.cfi_restore 14
 186 0050 7047     		bx	lr
 187              	.L12:
 188 0052 00BF     		.align	2
 189              	.L11:
 190 0054 00000000 		.word	Voltage_Frame_Status
 191 0058 00000000 		.word	uwTime2FramesCounter
 192 005c 00000000 		.word	ucApp_Buf_ZD2DB
 193 0060 00000000 		.word	pUartZD
 194 0064 00000000 		.word	blFramesCounterStatus
 195              		.cfi_endproc
 196              	.LFE113:
 198              		.section	.text.main,"ax",%progbits
 199              		.align	2
 200              		.global	main
 201              		.thumb
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 10


 202              		.thumb_func
 204              	main:
 205              	.LFB111:
  18:../user/source/main.c ****     ProtocolDef ProtocolType = none;
 206              		.loc 1 18 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 24
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210 0000 70B5     		push	{r4, r5, r6, lr}
 211              	.LCFI3:
 212              		.cfi_def_cfa_offset 16
 213              		.cfi_offset 4, -16
 214              		.cfi_offset 5, -12
 215              		.cfi_offset 6, -8
 216              		.cfi_offset 14, -4
 217 0002 86B0     		sub	sp, sp, #24
 218              	.LCFI4:
 219              		.cfi_def_cfa_offset 40
 220              	.LVL12:
  22:../user/source/main.c ****     uint32_t dwLen = 0;
 221              		.loc 1 22 0
 222 0004 0023     		movs	r3, #0
 223 0006 0593     		str	r3, [sp, #20]
 224              	.LVL13:
  30:../user/source/main.c ****     SysTick_Config(SysTick_100Ms);
 225              		.loc 1 30 0
 226 0008 4FF4C060 		mov	r0, #1536
 227 000c FFF7FEFF 		bl	NVIC_PriorityGroupConfig
 228              	.LVL14:
  31:../user/source/main.c ****     /*SysTick使用系统频率64M的8分频：8MHz*/
 229              		.loc 1 31 0
 230 0010 A54B     		ldr	r3, .L36
 231 0012 1B68     		ldr	r3, [r3]
 232 0014 A54A     		ldr	r2, .L36+4
 233 0016 A2FB0323 		umull	r2, r3, r2, r3
 234 001a 9B09     		lsrs	r3, r3, #6
 235              	.LVL15:
 236              	.LBB10:
 237              	.LBB11:
 238              		.file 2 "../cmsis/include/core_cm4.h"
   1:../cmsis/include/core_cm4.h **** /**************************************************************************//**
   2:../cmsis/include/core_cm4.h ****  * @file     core_cm4.h
   3:../cmsis/include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:../cmsis/include/core_cm4.h ****  * @version  V3.00
   5:../cmsis/include/core_cm4.h ****  * @date     03. February 2012
   6:../cmsis/include/core_cm4.h ****  *
   7:../cmsis/include/core_cm4.h ****  * @note
   8:../cmsis/include/core_cm4.h ****  * Copyright (C) 2009-2012 ARM Limited. All rights reserved.
   9:../cmsis/include/core_cm4.h ****  *
  10:../cmsis/include/core_cm4.h ****  * @par
  11:../cmsis/include/core_cm4.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:../cmsis/include/core_cm4.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:../cmsis/include/core_cm4.h ****  * within development tools that are supporting such ARM based processors.
  14:../cmsis/include/core_cm4.h ****  *
  15:../cmsis/include/core_cm4.h ****  * @par
  16:../cmsis/include/core_cm4.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:../cmsis/include/core_cm4.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 11


  18:../cmsis/include/core_cm4.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:../cmsis/include/core_cm4.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:../cmsis/include/core_cm4.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:../cmsis/include/core_cm4.h ****  *
  22:../cmsis/include/core_cm4.h ****  ******************************************************************************/
  23:../cmsis/include/core_cm4.h **** #if defined ( __ICCARM__ )
  24:../cmsis/include/core_cm4.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  25:../cmsis/include/core_cm4.h **** #endif
  26:../cmsis/include/core_cm4.h **** 
  27:../cmsis/include/core_cm4.h **** #ifdef __cplusplus
  28:../cmsis/include/core_cm4.h ****  extern "C" {
  29:../cmsis/include/core_cm4.h **** #endif
  30:../cmsis/include/core_cm4.h **** 
  31:../cmsis/include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:../cmsis/include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:../cmsis/include/core_cm4.h **** 
  34:../cmsis/include/core_cm4.h **** /** \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  35:../cmsis/include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  36:../cmsis/include/core_cm4.h ****   
  37:../cmsis/include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  38:../cmsis/include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'. 
  39:../cmsis/include/core_cm4.h **** 
  40:../cmsis/include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  41:../cmsis/include/core_cm4.h ****      Unions are used for effective representation of core registers.
  42:../cmsis/include/core_cm4.h ****    
  43:../cmsis/include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  44:../cmsis/include/core_cm4.h ****      Function-like macros are used to allow more efficient code. 
  45:../cmsis/include/core_cm4.h ****  */
  46:../cmsis/include/core_cm4.h **** 
  47:../cmsis/include/core_cm4.h **** 
  48:../cmsis/include/core_cm4.h **** /*******************************************************************************
  49:../cmsis/include/core_cm4.h ****  *                 CMSIS definitions
  50:../cmsis/include/core_cm4.h ****  ******************************************************************************/
  51:../cmsis/include/core_cm4.h **** /** \ingroup Cortex_M4
  52:../cmsis/include/core_cm4.h ****   @{
  53:../cmsis/include/core_cm4.h ****  */
  54:../cmsis/include/core_cm4.h **** 
  55:../cmsis/include/core_cm4.h **** /*  CMSIS CM4 definitions */
  56:../cmsis/include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x03)                                   /*!< [31:16] CMSIS HAL m
  57:../cmsis/include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x00)                                   /*!< [15:0]  CMSIS HAL s
  58:../cmsis/include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16) | \
  59:../cmsis/include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB          )     /*!< CMSIS HAL version n
  60:../cmsis/include/core_cm4.h **** 
  61:../cmsis/include/core_cm4.h **** #define __CORTEX_M                (0x04)                                   /*!< Cortex-M Core      
  62:../cmsis/include/core_cm4.h **** 
  63:../cmsis/include/core_cm4.h **** 
  64:../cmsis/include/core_cm4.h **** #if   defined ( __CC_ARM )
  65:../cmsis/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  66:../cmsis/include/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  67:../cmsis/include/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  68:../cmsis/include/core_cm4.h **** 
  69:../cmsis/include/core_cm4.h **** #elif defined ( __ICCARM__ )
  70:../cmsis/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  71:../cmsis/include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
  72:../cmsis/include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  73:../cmsis/include/core_cm4.h **** 
  74:../cmsis/include/core_cm4.h **** #elif defined ( __TMS470__ )
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 12


  75:../cmsis/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
  76:../cmsis/include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  77:../cmsis/include/core_cm4.h **** 
  78:../cmsis/include/core_cm4.h **** #elif defined ( __GNUC__ )
  79:../cmsis/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  80:../cmsis/include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  81:../cmsis/include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  82:../cmsis/include/core_cm4.h **** 
  83:../cmsis/include/core_cm4.h **** #elif defined ( __TASKING__ )
  84:../cmsis/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
  85:../cmsis/include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
  86:../cmsis/include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  87:../cmsis/include/core_cm4.h **** 
  88:../cmsis/include/core_cm4.h **** #endif
  89:../cmsis/include/core_cm4.h **** 
  90:../cmsis/include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not. For this, __FPU_PRESENT has to be checked p
  91:../cmsis/include/core_cm4.h **** */
  92:../cmsis/include/core_cm4.h **** #if defined ( __CC_ARM )
  93:../cmsis/include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  94:../cmsis/include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
  95:../cmsis/include/core_cm4.h ****       #define __FPU_USED       1
  96:../cmsis/include/core_cm4.h ****     #else
  97:../cmsis/include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  98:../cmsis/include/core_cm4.h ****       #define __FPU_USED       0
  99:../cmsis/include/core_cm4.h ****     #endif
 100:../cmsis/include/core_cm4.h ****   #else
 101:../cmsis/include/core_cm4.h ****     #define __FPU_USED         0
 102:../cmsis/include/core_cm4.h ****   #endif
 103:../cmsis/include/core_cm4.h **** 
 104:../cmsis/include/core_cm4.h **** #elif defined ( __ICCARM__ )
 105:../cmsis/include/core_cm4.h ****   #if defined __ARMVFP__
 106:../cmsis/include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 107:../cmsis/include/core_cm4.h ****       #define __FPU_USED       1
 108:../cmsis/include/core_cm4.h ****     #else
 109:../cmsis/include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 110:../cmsis/include/core_cm4.h ****       #define __FPU_USED       0
 111:../cmsis/include/core_cm4.h ****     #endif
 112:../cmsis/include/core_cm4.h ****   #else
 113:../cmsis/include/core_cm4.h ****     #define __FPU_USED         0
 114:../cmsis/include/core_cm4.h ****   #endif
 115:../cmsis/include/core_cm4.h **** 
 116:../cmsis/include/core_cm4.h **** #elif defined ( __TMS470__ )
 117:../cmsis/include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 118:../cmsis/include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 119:../cmsis/include/core_cm4.h ****       #define __FPU_USED       1
 120:../cmsis/include/core_cm4.h ****     #else
 121:../cmsis/include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 122:../cmsis/include/core_cm4.h ****       #define __FPU_USED       0
 123:../cmsis/include/core_cm4.h ****     #endif
 124:../cmsis/include/core_cm4.h ****   #else
 125:../cmsis/include/core_cm4.h ****     #define __FPU_USED         0
 126:../cmsis/include/core_cm4.h ****   #endif
 127:../cmsis/include/core_cm4.h **** 
 128:../cmsis/include/core_cm4.h **** #elif defined ( __GNUC__ )
 129:../cmsis/include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 130:../cmsis/include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 131:../cmsis/include/core_cm4.h ****       #define __FPU_USED       1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 13


 132:../cmsis/include/core_cm4.h ****     #else
 133:../cmsis/include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 134:../cmsis/include/core_cm4.h ****       #define __FPU_USED       0
 135:../cmsis/include/core_cm4.h ****     #endif
 136:../cmsis/include/core_cm4.h ****   #else
 137:../cmsis/include/core_cm4.h ****     #define __FPU_USED         0
 138:../cmsis/include/core_cm4.h ****   #endif
 139:../cmsis/include/core_cm4.h **** 
 140:../cmsis/include/core_cm4.h **** #elif defined ( __TASKING__ )
 141:../cmsis/include/core_cm4.h ****     /* add preprocessor checks to define __FPU_USED */
 142:../cmsis/include/core_cm4.h ****     #define __FPU_USED         0
 143:../cmsis/include/core_cm4.h **** #endif
 144:../cmsis/include/core_cm4.h **** 
 145:../cmsis/include/core_cm4.h **** #include <stdint.h>                      /* standard types definitions                      */
 146:../cmsis/include/core_cm4.h **** #include <core_cmInstr.h>                /* Core Instruction Access                         */
 147:../cmsis/include/core_cm4.h **** #include <core_cmFunc.h>                 /* Core Function Access                            */
 148:../cmsis/include/core_cm4.h **** #include <core_cm4_simd.h>               /* Compiler specific SIMD Intrinsics               */
 149:../cmsis/include/core_cm4.h **** 
 150:../cmsis/include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 151:../cmsis/include/core_cm4.h **** 
 152:../cmsis/include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 153:../cmsis/include/core_cm4.h **** 
 154:../cmsis/include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 155:../cmsis/include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 156:../cmsis/include/core_cm4.h **** 
 157:../cmsis/include/core_cm4.h **** /* check device defines and use defaults */
 158:../cmsis/include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 159:../cmsis/include/core_cm4.h ****   #ifndef __CM4_REV
 160:../cmsis/include/core_cm4.h ****     #define __CM4_REV               0x0000
 161:../cmsis/include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 162:../cmsis/include/core_cm4.h ****   #endif
 163:../cmsis/include/core_cm4.h **** 
 164:../cmsis/include/core_cm4.h ****   #ifndef __FPU_PRESENT
 165:../cmsis/include/core_cm4.h ****     #define __FPU_PRESENT             0
 166:../cmsis/include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 167:../cmsis/include/core_cm4.h ****   #endif
 168:../cmsis/include/core_cm4.h **** 
 169:../cmsis/include/core_cm4.h ****   #ifndef __MPU_PRESENT
 170:../cmsis/include/core_cm4.h ****     #define __MPU_PRESENT             0
 171:../cmsis/include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 172:../cmsis/include/core_cm4.h ****   #endif
 173:../cmsis/include/core_cm4.h **** 
 174:../cmsis/include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 175:../cmsis/include/core_cm4.h ****     #define __NVIC_PRIO_BITS          4
 176:../cmsis/include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 177:../cmsis/include/core_cm4.h ****   #endif
 178:../cmsis/include/core_cm4.h **** 
 179:../cmsis/include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 180:../cmsis/include/core_cm4.h ****     #define __Vendor_SysTickConfig    0
 181:../cmsis/include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 182:../cmsis/include/core_cm4.h ****   #endif
 183:../cmsis/include/core_cm4.h **** #endif
 184:../cmsis/include/core_cm4.h **** 
 185:../cmsis/include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 186:../cmsis/include/core_cm4.h **** /**
 187:../cmsis/include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 188:../cmsis/include/core_cm4.h ****  
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 14


 189:../cmsis/include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 190:../cmsis/include/core_cm4.h ****     \li to specify the access to peripheral variables.
 191:../cmsis/include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 192:../cmsis/include/core_cm4.h **** */
 193:../cmsis/include/core_cm4.h **** #ifdef __cplusplus
 194:../cmsis/include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions                 */
 195:../cmsis/include/core_cm4.h **** #else
 196:../cmsis/include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
 197:../cmsis/include/core_cm4.h **** #endif
 198:../cmsis/include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions                */
 199:../cmsis/include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions              */
 200:../cmsis/include/core_cm4.h **** 
 201:../cmsis/include/core_cm4.h **** /*@} end of group Cortex_M4 */
 202:../cmsis/include/core_cm4.h **** 
 203:../cmsis/include/core_cm4.h **** 
 204:../cmsis/include/core_cm4.h **** 
 205:../cmsis/include/core_cm4.h **** /*******************************************************************************
 206:../cmsis/include/core_cm4.h ****  *                 Register Abstraction
 207:../cmsis/include/core_cm4.h ****   Core Register contain:
 208:../cmsis/include/core_cm4.h ****   - Core Register
 209:../cmsis/include/core_cm4.h ****   - Core NVIC Register
 210:../cmsis/include/core_cm4.h ****   - Core SCB Register
 211:../cmsis/include/core_cm4.h ****   - Core SysTick Register
 212:../cmsis/include/core_cm4.h ****   - Core Debug Register
 213:../cmsis/include/core_cm4.h ****   - Core MPU Register
 214:../cmsis/include/core_cm4.h ****   - Core FPU Register
 215:../cmsis/include/core_cm4.h ****  ******************************************************************************/
 216:../cmsis/include/core_cm4.h **** /** \defgroup CMSIS_core_register Defines and Type Definitions
 217:../cmsis/include/core_cm4.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
 218:../cmsis/include/core_cm4.h **** */
 219:../cmsis/include/core_cm4.h **** 
 220:../cmsis/include/core_cm4.h **** /** \ingroup    CMSIS_core_register
 221:../cmsis/include/core_cm4.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 222:../cmsis/include/core_cm4.h ****     \brief  Core Register type definitions.
 223:../cmsis/include/core_cm4.h ****   @{
 224:../cmsis/include/core_cm4.h ****  */
 225:../cmsis/include/core_cm4.h **** 
 226:../cmsis/include/core_cm4.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 227:../cmsis/include/core_cm4.h ****  */
 228:../cmsis/include/core_cm4.h **** typedef union
 229:../cmsis/include/core_cm4.h **** {
 230:../cmsis/include/core_cm4.h ****   struct
 231:../cmsis/include/core_cm4.h ****   {
 232:../cmsis/include/core_cm4.h **** #if (__CORTEX_M != 0x04)
 233:../cmsis/include/core_cm4.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved                           */
 234:../cmsis/include/core_cm4.h **** #else
 235:../cmsis/include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 236:../cmsis/include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 237:../cmsis/include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 238:../cmsis/include/core_cm4.h **** #endif
 239:../cmsis/include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 240:../cmsis/include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 241:../cmsis/include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 242:../cmsis/include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 243:../cmsis/include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 244:../cmsis/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 245:../cmsis/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 15


 246:../cmsis/include/core_cm4.h **** } APSR_Type;
 247:../cmsis/include/core_cm4.h **** 
 248:../cmsis/include/core_cm4.h **** 
 249:../cmsis/include/core_cm4.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 250:../cmsis/include/core_cm4.h ****  */
 251:../cmsis/include/core_cm4.h **** typedef union
 252:../cmsis/include/core_cm4.h **** {
 253:../cmsis/include/core_cm4.h ****   struct
 254:../cmsis/include/core_cm4.h ****   {
 255:../cmsis/include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 256:../cmsis/include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 257:../cmsis/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 258:../cmsis/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 259:../cmsis/include/core_cm4.h **** } IPSR_Type;
 260:../cmsis/include/core_cm4.h **** 
 261:../cmsis/include/core_cm4.h **** 
 262:../cmsis/include/core_cm4.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 263:../cmsis/include/core_cm4.h ****  */
 264:../cmsis/include/core_cm4.h **** typedef union
 265:../cmsis/include/core_cm4.h **** {
 266:../cmsis/include/core_cm4.h ****   struct
 267:../cmsis/include/core_cm4.h ****   {
 268:../cmsis/include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 269:../cmsis/include/core_cm4.h **** #if (__CORTEX_M != 0x04)
 270:../cmsis/include/core_cm4.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved                           */
 271:../cmsis/include/core_cm4.h **** #else
 272:../cmsis/include/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 273:../cmsis/include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 274:../cmsis/include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 275:../cmsis/include/core_cm4.h **** #endif
 276:../cmsis/include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 277:../cmsis/include/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 278:../cmsis/include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 279:../cmsis/include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 280:../cmsis/include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 281:../cmsis/include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 282:../cmsis/include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 283:../cmsis/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 284:../cmsis/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 285:../cmsis/include/core_cm4.h **** } xPSR_Type;
 286:../cmsis/include/core_cm4.h **** 
 287:../cmsis/include/core_cm4.h **** 
 288:../cmsis/include/core_cm4.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 289:../cmsis/include/core_cm4.h ****  */
 290:../cmsis/include/core_cm4.h **** typedef union
 291:../cmsis/include/core_cm4.h **** {
 292:../cmsis/include/core_cm4.h ****   struct
 293:../cmsis/include/core_cm4.h ****   {
 294:../cmsis/include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 295:../cmsis/include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 296:../cmsis/include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 297:../cmsis/include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 298:../cmsis/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 299:../cmsis/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 300:../cmsis/include/core_cm4.h **** } CONTROL_Type;
 301:../cmsis/include/core_cm4.h **** 
 302:../cmsis/include/core_cm4.h **** /*@} end of group CMSIS_CORE */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 16


 303:../cmsis/include/core_cm4.h **** 
 304:../cmsis/include/core_cm4.h **** 
 305:../cmsis/include/core_cm4.h **** /** \ingroup    CMSIS_core_register
 306:../cmsis/include/core_cm4.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 307:../cmsis/include/core_cm4.h ****     \brief      Type definitions for the NVIC Registers
 308:../cmsis/include/core_cm4.h ****   @{
 309:../cmsis/include/core_cm4.h ****  */
 310:../cmsis/include/core_cm4.h **** 
 311:../cmsis/include/core_cm4.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 312:../cmsis/include/core_cm4.h ****  */
 313:../cmsis/include/core_cm4.h **** typedef struct
 314:../cmsis/include/core_cm4.h **** {
 315:../cmsis/include/core_cm4.h ****   __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 316:../cmsis/include/core_cm4.h ****        uint32_t RESERVED0[24];
 317:../cmsis/include/core_cm4.h ****   __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 318:../cmsis/include/core_cm4.h ****        uint32_t RSERVED1[24];
 319:../cmsis/include/core_cm4.h ****   __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 320:../cmsis/include/core_cm4.h ****        uint32_t RESERVED2[24];
 321:../cmsis/include/core_cm4.h ****   __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 322:../cmsis/include/core_cm4.h ****        uint32_t RESERVED3[24];
 323:../cmsis/include/core_cm4.h ****   __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register   
 324:../cmsis/include/core_cm4.h ****        uint32_t RESERVED4[56];
 325:../cmsis/include/core_cm4.h ****   __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 326:../cmsis/include/core_cm4.h ****        uint32_t RESERVED5[644];
 327:../cmsis/include/core_cm4.h ****   __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 328:../cmsis/include/core_cm4.h **** }  NVIC_Type;
 329:../cmsis/include/core_cm4.h **** 
 330:../cmsis/include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 331:../cmsis/include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0                                          /*!< STIR: I
 332:../cmsis/include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL << NVIC_STIR_INTID_Pos)            /*!< STIR: I
 333:../cmsis/include/core_cm4.h **** 
 334:../cmsis/include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 335:../cmsis/include/core_cm4.h **** 
 336:../cmsis/include/core_cm4.h **** 
 337:../cmsis/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 338:../cmsis/include/core_cm4.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 339:../cmsis/include/core_cm4.h ****     \brief      Type definitions for the System Control Block Registers
 340:../cmsis/include/core_cm4.h ****   @{
 341:../cmsis/include/core_cm4.h ****  */
 342:../cmsis/include/core_cm4.h **** 
 343:../cmsis/include/core_cm4.h **** /** \brief  Structure type to access the System Control Block (SCB).
 344:../cmsis/include/core_cm4.h ****  */
 345:../cmsis/include/core_cm4.h **** typedef struct
 346:../cmsis/include/core_cm4.h **** {
 347:../cmsis/include/core_cm4.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register             
 348:../cmsis/include/core_cm4.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 349:../cmsis/include/core_cm4.h ****   __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register    
 350:../cmsis/include/core_cm4.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 351:../cmsis/include/core_cm4.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 352:../cmsis/include/core_cm4.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 353:../cmsis/include/core_cm4.h ****   __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 354:../cmsis/include/core_cm4.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 355:../cmsis/include/core_cm4.h ****   __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 356:../cmsis/include/core_cm4.h ****   __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  HardFault Status Register       
 357:../cmsis/include/core_cm4.h ****   __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register     
 358:../cmsis/include/core_cm4.h ****   __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 359:../cmsis/include/core_cm4.h ****   __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  BusFault Address Register       
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 17


 360:../cmsis/include/core_cm4.h ****   __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 361:../cmsis/include/core_cm4.h ****   __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register      
 362:../cmsis/include/core_cm4.h ****   __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register          
 363:../cmsis/include/core_cm4.h ****   __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register      
 364:../cmsis/include/core_cm4.h ****   __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register   
 365:../cmsis/include/core_cm4.h ****   __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 366:../cmsis/include/core_cm4.h ****        uint32_t RESERVED0[5];
 367:../cmsis/include/core_cm4.h ****   __IO uint32_t CPACR;                   /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 368:../cmsis/include/core_cm4.h **** } SCB_Type;
 369:../cmsis/include/core_cm4.h **** 
 370:../cmsis/include/core_cm4.h **** /* SCB CPUID Register Definitions */
 371:../cmsis/include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 372:../cmsis/include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 373:../cmsis/include/core_cm4.h **** 
 374:../cmsis/include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 375:../cmsis/include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 376:../cmsis/include/core_cm4.h **** 
 377:../cmsis/include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 378:../cmsis/include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 379:../cmsis/include/core_cm4.h **** 
 380:../cmsis/include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 381:../cmsis/include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 382:../cmsis/include/core_cm4.h **** 
 383:../cmsis/include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 384:../cmsis/include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 385:../cmsis/include/core_cm4.h **** 
 386:../cmsis/include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 387:../cmsis/include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 388:../cmsis/include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 389:../cmsis/include/core_cm4.h **** 
 390:../cmsis/include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 391:../cmsis/include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 392:../cmsis/include/core_cm4.h **** 
 393:../cmsis/include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 394:../cmsis/include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 395:../cmsis/include/core_cm4.h **** 
 396:../cmsis/include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 397:../cmsis/include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 398:../cmsis/include/core_cm4.h **** 
 399:../cmsis/include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 400:../cmsis/include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 401:../cmsis/include/core_cm4.h **** 
 402:../cmsis/include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 403:../cmsis/include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 404:../cmsis/include/core_cm4.h **** 
 405:../cmsis/include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 406:../cmsis/include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 407:../cmsis/include/core_cm4.h **** 
 408:../cmsis/include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 409:../cmsis/include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 410:../cmsis/include/core_cm4.h **** 
 411:../cmsis/include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 412:../cmsis/include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 413:../cmsis/include/core_cm4.h **** 
 414:../cmsis/include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 415:../cmsis/include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 416:../cmsis/include/core_cm4.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 18


 417:../cmsis/include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 418:../cmsis/include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 419:../cmsis/include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 420:../cmsis/include/core_cm4.h **** 
 421:../cmsis/include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 422:../cmsis/include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 423:../cmsis/include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 424:../cmsis/include/core_cm4.h **** 
 425:../cmsis/include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 426:../cmsis/include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 427:../cmsis/include/core_cm4.h **** 
 428:../cmsis/include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 429:../cmsis/include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 430:../cmsis/include/core_cm4.h **** 
 431:../cmsis/include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 432:../cmsis/include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 433:../cmsis/include/core_cm4.h **** 
 434:../cmsis/include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 435:../cmsis/include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 436:../cmsis/include/core_cm4.h **** 
 437:../cmsis/include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 438:../cmsis/include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 439:../cmsis/include/core_cm4.h **** 
 440:../cmsis/include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 441:../cmsis/include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 442:../cmsis/include/core_cm4.h **** 
 443:../cmsis/include/core_cm4.h **** /* SCB System Control Register Definitions */
 444:../cmsis/include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 445:../cmsis/include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 446:../cmsis/include/core_cm4.h **** 
 447:../cmsis/include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 448:../cmsis/include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 449:../cmsis/include/core_cm4.h **** 
 450:../cmsis/include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 451:../cmsis/include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 452:../cmsis/include/core_cm4.h **** 
 453:../cmsis/include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 454:../cmsis/include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 455:../cmsis/include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 456:../cmsis/include/core_cm4.h **** 
 457:../cmsis/include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 458:../cmsis/include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 459:../cmsis/include/core_cm4.h **** 
 460:../cmsis/include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 461:../cmsis/include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 462:../cmsis/include/core_cm4.h **** 
 463:../cmsis/include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 464:../cmsis/include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 465:../cmsis/include/core_cm4.h **** 
 466:../cmsis/include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 467:../cmsis/include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 468:../cmsis/include/core_cm4.h **** 
 469:../cmsis/include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 470:../cmsis/include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 471:../cmsis/include/core_cm4.h **** 
 472:../cmsis/include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 473:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 19


 474:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 475:../cmsis/include/core_cm4.h **** 
 476:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 477:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 478:../cmsis/include/core_cm4.h **** 
 479:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 480:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 481:../cmsis/include/core_cm4.h **** 
 482:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 483:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 484:../cmsis/include/core_cm4.h **** 
 485:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 486:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 487:../cmsis/include/core_cm4.h **** 
 488:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 489:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 490:../cmsis/include/core_cm4.h **** 
 491:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 492:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 493:../cmsis/include/core_cm4.h **** 
 494:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 495:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 496:../cmsis/include/core_cm4.h **** 
 497:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 498:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 499:../cmsis/include/core_cm4.h **** 
 500:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 501:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 502:../cmsis/include/core_cm4.h **** 
 503:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 504:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 505:../cmsis/include/core_cm4.h **** 
 506:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 507:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 508:../cmsis/include/core_cm4.h **** 
 509:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 510:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 511:../cmsis/include/core_cm4.h **** 
 512:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 513:../cmsis/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 514:../cmsis/include/core_cm4.h **** 
 515:../cmsis/include/core_cm4.h **** /* SCB Configurable Fault Status Registers Definitions */
 516:../cmsis/include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 517:../cmsis/include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 518:../cmsis/include/core_cm4.h **** 
 519:../cmsis/include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 520:../cmsis/include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 521:../cmsis/include/core_cm4.h **** 
 522:../cmsis/include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 523:../cmsis/include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 524:../cmsis/include/core_cm4.h **** 
 525:../cmsis/include/core_cm4.h **** /* SCB Hard Fault Status Registers Definitions */
 526:../cmsis/include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 527:../cmsis/include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 528:../cmsis/include/core_cm4.h **** 
 529:../cmsis/include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 530:../cmsis/include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 20


 531:../cmsis/include/core_cm4.h **** 
 532:../cmsis/include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 533:../cmsis/include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 534:../cmsis/include/core_cm4.h **** 
 535:../cmsis/include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 536:../cmsis/include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 537:../cmsis/include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 538:../cmsis/include/core_cm4.h **** 
 539:../cmsis/include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 540:../cmsis/include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 541:../cmsis/include/core_cm4.h **** 
 542:../cmsis/include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 543:../cmsis/include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 544:../cmsis/include/core_cm4.h **** 
 545:../cmsis/include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 546:../cmsis/include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 547:../cmsis/include/core_cm4.h **** 
 548:../cmsis/include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 549:../cmsis/include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 550:../cmsis/include/core_cm4.h **** 
 551:../cmsis/include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 552:../cmsis/include/core_cm4.h **** 
 553:../cmsis/include/core_cm4.h **** 
 554:../cmsis/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 555:../cmsis/include/core_cm4.h ****     \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 556:../cmsis/include/core_cm4.h ****     \brief      Type definitions for the System Control and ID Register not in the SCB
 557:../cmsis/include/core_cm4.h ****   @{
 558:../cmsis/include/core_cm4.h ****  */
 559:../cmsis/include/core_cm4.h **** 
 560:../cmsis/include/core_cm4.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 561:../cmsis/include/core_cm4.h ****  */
 562:../cmsis/include/core_cm4.h **** typedef struct
 563:../cmsis/include/core_cm4.h **** {
 564:../cmsis/include/core_cm4.h ****        uint32_t RESERVED0[1];
 565:../cmsis/include/core_cm4.h ****   __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 566:../cmsis/include/core_cm4.h ****   __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register      
 567:../cmsis/include/core_cm4.h **** } SCnSCB_Type;
 568:../cmsis/include/core_cm4.h **** 
 569:../cmsis/include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 570:../cmsis/include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0                                          /*!< ICTR: I
 571:../cmsis/include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL << SCnSCB_ICTR_INTLINESNUM_Pos)      /*!< ICTR: I
 572:../cmsis/include/core_cm4.h **** 
 573:../cmsis/include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 574:../cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9                                          /*!< ACTLR: 
 575:../cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 576:../cmsis/include/core_cm4.h **** 
 577:../cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8                                          /*!< ACTLR: 
 578:../cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 579:../cmsis/include/core_cm4.h **** 
 580:../cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2                                          /*!< ACTLR: 
 581:../cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 582:../cmsis/include/core_cm4.h **** 
 583:../cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1                                          /*!< ACTLR: 
 584:../cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 585:../cmsis/include/core_cm4.h **** 
 586:../cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0                                          /*!< ACTLR: 
 587:../cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL << SCnSCB_ACTLR_DISMCYCINT_Pos)        /*!< ACTLR: 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 21


 588:../cmsis/include/core_cm4.h **** 
 589:../cmsis/include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 590:../cmsis/include/core_cm4.h **** 
 591:../cmsis/include/core_cm4.h **** 
 592:../cmsis/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 593:../cmsis/include/core_cm4.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 594:../cmsis/include/core_cm4.h ****     \brief      Type definitions for the System Timer Registers.
 595:../cmsis/include/core_cm4.h ****   @{
 596:../cmsis/include/core_cm4.h ****  */
 597:../cmsis/include/core_cm4.h **** 
 598:../cmsis/include/core_cm4.h **** /** \brief  Structure type to access the System Timer (SysTick).
 599:../cmsis/include/core_cm4.h ****  */
 600:../cmsis/include/core_cm4.h **** typedef struct
 601:../cmsis/include/core_cm4.h **** {
 602:../cmsis/include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 603:../cmsis/include/core_cm4.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 604:../cmsis/include/core_cm4.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 605:../cmsis/include/core_cm4.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 606:../cmsis/include/core_cm4.h **** } SysTick_Type;
 607:../cmsis/include/core_cm4.h **** 
 608:../cmsis/include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 609:../cmsis/include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 610:../cmsis/include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 611:../cmsis/include/core_cm4.h **** 
 612:../cmsis/include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 613:../cmsis/include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 614:../cmsis/include/core_cm4.h **** 
 615:../cmsis/include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 616:../cmsis/include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 617:../cmsis/include/core_cm4.h **** 
 618:../cmsis/include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 619:../cmsis/include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 620:../cmsis/include/core_cm4.h **** 
 621:../cmsis/include/core_cm4.h **** /* SysTick Reload Register Definitions */
 622:../cmsis/include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 623:../cmsis/include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 624:../cmsis/include/core_cm4.h **** 
 625:../cmsis/include/core_cm4.h **** /* SysTick Current Register Definitions */
 626:../cmsis/include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 627:../cmsis/include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 628:../cmsis/include/core_cm4.h **** 
 629:../cmsis/include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 630:../cmsis/include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 631:../cmsis/include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 632:../cmsis/include/core_cm4.h **** 
 633:../cmsis/include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 634:../cmsis/include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 635:../cmsis/include/core_cm4.h **** 
 636:../cmsis/include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 637:../cmsis/include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 638:../cmsis/include/core_cm4.h **** 
 639:../cmsis/include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 640:../cmsis/include/core_cm4.h **** 
 641:../cmsis/include/core_cm4.h **** 
 642:../cmsis/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 643:../cmsis/include/core_cm4.h ****     \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 644:../cmsis/include/core_cm4.h ****     \brief      Type definitions for the Instrumentation Trace Macrocell (ITM)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 22


 645:../cmsis/include/core_cm4.h ****   @{
 646:../cmsis/include/core_cm4.h ****  */
 647:../cmsis/include/core_cm4.h **** 
 648:../cmsis/include/core_cm4.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 649:../cmsis/include/core_cm4.h ****  */
 650:../cmsis/include/core_cm4.h **** typedef struct
 651:../cmsis/include/core_cm4.h **** {
 652:../cmsis/include/core_cm4.h ****   __O  union
 653:../cmsis/include/core_cm4.h ****   {
 654:../cmsis/include/core_cm4.h ****     __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit         
 655:../cmsis/include/core_cm4.h ****     __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit        
 656:../cmsis/include/core_cm4.h ****     __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit        
 657:../cmsis/include/core_cm4.h ****   }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers     
 658:../cmsis/include/core_cm4.h ****        uint32_t RESERVED0[864];
 659:../cmsis/include/core_cm4.h ****   __IO uint32_t TER;                     /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register       
 660:../cmsis/include/core_cm4.h ****        uint32_t RESERVED1[15];
 661:../cmsis/include/core_cm4.h ****   __IO uint32_t TPR;                     /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register    
 662:../cmsis/include/core_cm4.h ****        uint32_t RESERVED2[15];
 663:../cmsis/include/core_cm4.h ****   __IO uint32_t TCR;                     /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register      
 664:../cmsis/include/core_cm4.h **** } ITM_Type;
 665:../cmsis/include/core_cm4.h **** 
 666:../cmsis/include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 667:../cmsis/include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0                                          /*!< ITM TPR
 668:../cmsis/include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL << ITM_TPR_PRIVMASK_Pos)             /*!< ITM TPR
 669:../cmsis/include/core_cm4.h **** 
 670:../cmsis/include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 671:../cmsis/include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23                                          /*!< ITM TCR
 672:../cmsis/include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                   /*!< ITM TCR
 673:../cmsis/include/core_cm4.h **** 
 674:../cmsis/include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16                                          /*!< ITM TCR
 675:../cmsis/include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)          /*!< ITM TCR
 676:../cmsis/include/core_cm4.h **** 
 677:../cmsis/include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10                                          /*!< ITM TCR
 678:../cmsis/include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                /*!< ITM TCR
 679:../cmsis/include/core_cm4.h **** 
 680:../cmsis/include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8                                          /*!< ITM TCR
 681:../cmsis/include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)             /*!< ITM TCR
 682:../cmsis/include/core_cm4.h **** 
 683:../cmsis/include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4                                          /*!< ITM TCR
 684:../cmsis/include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                 /*!< ITM TCR
 685:../cmsis/include/core_cm4.h **** 
 686:../cmsis/include/core_cm4.h **** #define ITM_TCR_TXENA_Pos                   3                                          /*!< ITM TCR
 687:../cmsis/include/core_cm4.h **** #define ITM_TCR_TXENA_Msk                  (1UL << ITM_TCR_TXENA_Pos)                  /*!< ITM TCR
 688:../cmsis/include/core_cm4.h **** 
 689:../cmsis/include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2                                          /*!< ITM TCR
 690:../cmsis/include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                /*!< ITM TCR
 691:../cmsis/include/core_cm4.h **** 
 692:../cmsis/include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1                                          /*!< ITM TCR
 693:../cmsis/include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                  /*!< ITM TCR
 694:../cmsis/include/core_cm4.h **** 
 695:../cmsis/include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0                                          /*!< ITM TCR
 696:../cmsis/include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL << ITM_TCR_ITMENA_Pos)                 /*!< ITM TCR
 697:../cmsis/include/core_cm4.h **** 
 698:../cmsis/include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 699:../cmsis/include/core_cm4.h **** 
 700:../cmsis/include/core_cm4.h **** 
 701:../cmsis/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 23


 702:../cmsis/include/core_cm4.h ****     \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 703:../cmsis/include/core_cm4.h ****     \brief      Type definitions for the Data Watchpoint and Trace (DWT)
 704:../cmsis/include/core_cm4.h ****   @{
 705:../cmsis/include/core_cm4.h ****  */
 706:../cmsis/include/core_cm4.h **** 
 707:../cmsis/include/core_cm4.h **** /** \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 708:../cmsis/include/core_cm4.h ****  */
 709:../cmsis/include/core_cm4.h **** typedef struct
 710:../cmsis/include/core_cm4.h **** {
 711:../cmsis/include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  Control Register                
 712:../cmsis/include/core_cm4.h ****   __IO uint32_t CYCCNT;                  /*!< Offset: 0x004 (R/W)  Cycle Count Register            
 713:../cmsis/include/core_cm4.h ****   __IO uint32_t CPICNT;                  /*!< Offset: 0x008 (R/W)  CPI Count Register              
 714:../cmsis/include/core_cm4.h ****   __IO uint32_t EXCCNT;                  /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 715:../cmsis/include/core_cm4.h ****   __IO uint32_t SLEEPCNT;                /*!< Offset: 0x010 (R/W)  Sleep Count Register            
 716:../cmsis/include/core_cm4.h ****   __IO uint32_t LSUCNT;                  /*!< Offset: 0x014 (R/W)  LSU Count Register              
 717:../cmsis/include/core_cm4.h ****   __IO uint32_t FOLDCNT;                 /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 718:../cmsis/include/core_cm4.h ****   __I  uint32_t PCSR;                    /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 719:../cmsis/include/core_cm4.h ****   __IO uint32_t COMP0;                   /*!< Offset: 0x020 (R/W)  Comparator Register 0           
 720:../cmsis/include/core_cm4.h ****   __IO uint32_t MASK0;                   /*!< Offset: 0x024 (R/W)  Mask Register 0                 
 721:../cmsis/include/core_cm4.h ****   __IO uint32_t FUNCTION0;               /*!< Offset: 0x028 (R/W)  Function Register 0             
 722:../cmsis/include/core_cm4.h ****        uint32_t RESERVED0[1];
 723:../cmsis/include/core_cm4.h ****   __IO uint32_t COMP1;                   /*!< Offset: 0x030 (R/W)  Comparator Register 1           
 724:../cmsis/include/core_cm4.h ****   __IO uint32_t MASK1;                   /*!< Offset: 0x034 (R/W)  Mask Register 1                 
 725:../cmsis/include/core_cm4.h ****   __IO uint32_t FUNCTION1;               /*!< Offset: 0x038 (R/W)  Function Register 1             
 726:../cmsis/include/core_cm4.h ****        uint32_t RESERVED1[1];
 727:../cmsis/include/core_cm4.h ****   __IO uint32_t COMP2;                   /*!< Offset: 0x040 (R/W)  Comparator Register 2           
 728:../cmsis/include/core_cm4.h ****   __IO uint32_t MASK2;                   /*!< Offset: 0x044 (R/W)  Mask Register 2                 
 729:../cmsis/include/core_cm4.h ****   __IO uint32_t FUNCTION2;               /*!< Offset: 0x048 (R/W)  Function Register 2             
 730:../cmsis/include/core_cm4.h ****        uint32_t RESERVED2[1];
 731:../cmsis/include/core_cm4.h ****   __IO uint32_t COMP3;                   /*!< Offset: 0x050 (R/W)  Comparator Register 3           
 732:../cmsis/include/core_cm4.h ****   __IO uint32_t MASK3;                   /*!< Offset: 0x054 (R/W)  Mask Register 3                 
 733:../cmsis/include/core_cm4.h ****   __IO uint32_t FUNCTION3;               /*!< Offset: 0x058 (R/W)  Function Register 3             
 734:../cmsis/include/core_cm4.h **** } DWT_Type;
 735:../cmsis/include/core_cm4.h **** 
 736:../cmsis/include/core_cm4.h **** /* DWT Control Register Definitions */
 737:../cmsis/include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28                                          /*!< DWT CTR
 738:../cmsis/include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 739:../cmsis/include/core_cm4.h **** 
 740:../cmsis/include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27                                          /*!< DWT CTR
 741:../cmsis/include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 742:../cmsis/include/core_cm4.h **** 
 743:../cmsis/include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26                                          /*!< DWT CTR
 744:../cmsis/include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 745:../cmsis/include/core_cm4.h **** 
 746:../cmsis/include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25                                          /*!< DWT CTR
 747:../cmsis/include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 748:../cmsis/include/core_cm4.h **** 
 749:../cmsis/include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24                                          /*!< DWT CTR
 750:../cmsis/include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 751:../cmsis/include/core_cm4.h **** 
 752:../cmsis/include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22                                          /*!< DWT CTR
 753:../cmsis/include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 754:../cmsis/include/core_cm4.h **** 
 755:../cmsis/include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21                                          /*!< DWT CTR
 756:../cmsis/include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 757:../cmsis/include/core_cm4.h **** 
 758:../cmsis/include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20                                          /*!< DWT CTR
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 24


 759:../cmsis/include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 760:../cmsis/include/core_cm4.h **** 
 761:../cmsis/include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19                                          /*!< DWT CTR
 762:../cmsis/include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 763:../cmsis/include/core_cm4.h **** 
 764:../cmsis/include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18                                          /*!< DWT CTR
 765:../cmsis/include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 766:../cmsis/include/core_cm4.h **** 
 767:../cmsis/include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17                                          /*!< DWT CTR
 768:../cmsis/include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 769:../cmsis/include/core_cm4.h **** 
 770:../cmsis/include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16                                          /*!< DWT CTR
 771:../cmsis/include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 772:../cmsis/include/core_cm4.h **** 
 773:../cmsis/include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12                                          /*!< DWT CTR
 774:../cmsis/include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 775:../cmsis/include/core_cm4.h **** 
 776:../cmsis/include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10                                          /*!< DWT CTR
 777:../cmsis/include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 778:../cmsis/include/core_cm4.h **** 
 779:../cmsis/include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9                                          /*!< DWT CTR
 780:../cmsis/include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 781:../cmsis/include/core_cm4.h **** 
 782:../cmsis/include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5                                          /*!< DWT CTR
 783:../cmsis/include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 784:../cmsis/include/core_cm4.h **** 
 785:../cmsis/include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1                                          /*!< DWT CTR
 786:../cmsis/include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 787:../cmsis/include/core_cm4.h **** 
 788:../cmsis/include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0                                          /*!< DWT CTR
 789:../cmsis/include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL << DWT_CTRL_CYCCNTENA_Pos)           /*!< DWT CTR
 790:../cmsis/include/core_cm4.h **** 
 791:../cmsis/include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 792:../cmsis/include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0                                          /*!< DWT CPI
 793:../cmsis/include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL << DWT_CPICNT_CPICNT_Pos)           /*!< DWT CPI
 794:../cmsis/include/core_cm4.h **** 
 795:../cmsis/include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 796:../cmsis/include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0                                          /*!< DWT EXC
 797:../cmsis/include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL << DWT_EXCCNT_EXCCNT_Pos)           /*!< DWT EXC
 798:../cmsis/include/core_cm4.h **** 
 799:../cmsis/include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 800:../cmsis/include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0                                          /*!< DWT SLE
 801:../cmsis/include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL << DWT_SLEEPCNT_SLEEPCNT_Pos)       /*!< DWT SLE
 802:../cmsis/include/core_cm4.h **** 
 803:../cmsis/include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 804:../cmsis/include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0                                          /*!< DWT LSU
 805:../cmsis/include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL << DWT_LSUCNT_LSUCNT_Pos)           /*!< DWT LSU
 806:../cmsis/include/core_cm4.h **** 
 807:../cmsis/include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 808:../cmsis/include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0                                          /*!< DWT FOL
 809:../cmsis/include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL << DWT_FOLDCNT_FOLDCNT_Pos)         /*!< DWT FOL
 810:../cmsis/include/core_cm4.h **** 
 811:../cmsis/include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
 812:../cmsis/include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0                                          /*!< DWT MAS
 813:../cmsis/include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL << DWT_MASK_MASK_Pos)               /*!< DWT MAS
 814:../cmsis/include/core_cm4.h **** 
 815:../cmsis/include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 25


 816:../cmsis/include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24                                          /*!< DWT FUN
 817:../cmsis/include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 818:../cmsis/include/core_cm4.h **** 
 819:../cmsis/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16                                          /*!< DWT FUN
 820:../cmsis/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 821:../cmsis/include/core_cm4.h **** 
 822:../cmsis/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12                                          /*!< DWT FUN
 823:../cmsis/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 824:../cmsis/include/core_cm4.h **** 
 825:../cmsis/include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10                                          /*!< DWT FUN
 826:../cmsis/include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 827:../cmsis/include/core_cm4.h **** 
 828:../cmsis/include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9                                          /*!< DWT FUN
 829:../cmsis/include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 830:../cmsis/include/core_cm4.h **** 
 831:../cmsis/include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8                                          /*!< DWT FUN
 832:../cmsis/include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 833:../cmsis/include/core_cm4.h **** 
 834:../cmsis/include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7                                          /*!< DWT FUN
 835:../cmsis/include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 836:../cmsis/include/core_cm4.h **** 
 837:../cmsis/include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5                                          /*!< DWT FUN
 838:../cmsis/include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 839:../cmsis/include/core_cm4.h **** 
 840:../cmsis/include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0                                          /*!< DWT FUN
 841:../cmsis/include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL << DWT_FUNCTION_FUNCTION_Pos)        /*!< DWT FUN
 842:../cmsis/include/core_cm4.h **** 
 843:../cmsis/include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
 844:../cmsis/include/core_cm4.h **** 
 845:../cmsis/include/core_cm4.h **** 
 846:../cmsis/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 847:../cmsis/include/core_cm4.h ****     \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 848:../cmsis/include/core_cm4.h ****     \brief      Type definitions for the Trace Port Interface (TPI)
 849:../cmsis/include/core_cm4.h ****   @{
 850:../cmsis/include/core_cm4.h ****  */
 851:../cmsis/include/core_cm4.h **** 
 852:../cmsis/include/core_cm4.h **** /** \brief  Structure type to access the Trace Port Interface Register (TPI).
 853:../cmsis/include/core_cm4.h ****  */
 854:../cmsis/include/core_cm4.h **** typedef struct
 855:../cmsis/include/core_cm4.h **** {
 856:../cmsis/include/core_cm4.h ****   __IO uint32_t SSPSR;                   /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 857:../cmsis/include/core_cm4.h ****   __IO uint32_t CSPSR;                   /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 858:../cmsis/include/core_cm4.h ****        uint32_t RESERVED0[2];
 859:../cmsis/include/core_cm4.h ****   __IO uint32_t ACPR;                    /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 860:../cmsis/include/core_cm4.h ****        uint32_t RESERVED1[55];
 861:../cmsis/include/core_cm4.h ****   __IO uint32_t SPPR;                    /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
 862:../cmsis/include/core_cm4.h ****        uint32_t RESERVED2[131];
 863:../cmsis/include/core_cm4.h ****   __I  uint32_t FFSR;                    /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
 864:../cmsis/include/core_cm4.h ****   __IO uint32_t FFCR;                    /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
 865:../cmsis/include/core_cm4.h ****   __I  uint32_t FSCR;                    /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
 866:../cmsis/include/core_cm4.h ****        uint32_t RESERVED3[759];
 867:../cmsis/include/core_cm4.h ****   __I  uint32_t TRIGGER;                 /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 868:../cmsis/include/core_cm4.h ****   __I  uint32_t FIFO0;                   /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
 869:../cmsis/include/core_cm4.h ****   __I  uint32_t ITATBCTR2;               /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
 870:../cmsis/include/core_cm4.h ****        uint32_t RESERVED4[1];
 871:../cmsis/include/core_cm4.h ****   __I  uint32_t ITATBCTR0;               /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
 872:../cmsis/include/core_cm4.h ****   __I  uint32_t FIFO1;                   /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 26


 873:../cmsis/include/core_cm4.h ****   __IO uint32_t ITCTRL;                  /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
 874:../cmsis/include/core_cm4.h ****        uint32_t RESERVED5[39];
 875:../cmsis/include/core_cm4.h ****   __IO uint32_t CLAIMSET;                /*!< Offset: 0xFA0 (R/W)  Claim tag set */
 876:../cmsis/include/core_cm4.h ****   __IO uint32_t CLAIMCLR;                /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
 877:../cmsis/include/core_cm4.h ****        uint32_t RESERVED7[8];
 878:../cmsis/include/core_cm4.h ****   __I  uint32_t DEVID;                   /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
 879:../cmsis/include/core_cm4.h ****   __I  uint32_t DEVTYPE;                 /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
 880:../cmsis/include/core_cm4.h **** } TPI_Type;
 881:../cmsis/include/core_cm4.h **** 
 882:../cmsis/include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
 883:../cmsis/include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0                                          /*!< TPI ACP
 884:../cmsis/include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL << TPI_ACPR_PRESCALER_Pos)        /*!< TPI ACP
 885:../cmsis/include/core_cm4.h **** 
 886:../cmsis/include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
 887:../cmsis/include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0                                          /*!< TPI SPP
 888:../cmsis/include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL << TPI_SPPR_TXMODE_Pos)              /*!< TPI SPP
 889:../cmsis/include/core_cm4.h **** 
 890:../cmsis/include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
 891:../cmsis/include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3                                          /*!< TPI FFS
 892:../cmsis/include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
 893:../cmsis/include/core_cm4.h **** 
 894:../cmsis/include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2                                          /*!< TPI FFS
 895:../cmsis/include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
 896:../cmsis/include/core_cm4.h **** 
 897:../cmsis/include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1                                          /*!< TPI FFS
 898:../cmsis/include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
 899:../cmsis/include/core_cm4.h **** 
 900:../cmsis/include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0                                          /*!< TPI FFS
 901:../cmsis/include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL << TPI_FFSR_FlInProg_Pos)            /*!< TPI FFS
 902:../cmsis/include/core_cm4.h **** 
 903:../cmsis/include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
 904:../cmsis/include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8                                          /*!< TPI FFC
 905:../cmsis/include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
 906:../cmsis/include/core_cm4.h **** 
 907:../cmsis/include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1                                          /*!< TPI FFC
 908:../cmsis/include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
 909:../cmsis/include/core_cm4.h **** 
 910:../cmsis/include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
 911:../cmsis/include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0                                          /*!< TPI TRI
 912:../cmsis/include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL << TPI_TRIGGER_TRIGGER_Pos)          /*!< TPI TRI
 913:../cmsis/include/core_cm4.h **** 
 914:../cmsis/include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
 915:../cmsis/include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
 916:../cmsis/include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
 917:../cmsis/include/core_cm4.h **** 
 918:../cmsis/include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27                                          /*!< TPI FIF
 919:../cmsis/include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
 920:../cmsis/include/core_cm4.h **** 
 921:../cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
 922:../cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
 923:../cmsis/include/core_cm4.h **** 
 924:../cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24                                          /*!< TPI FIF
 925:../cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
 926:../cmsis/include/core_cm4.h **** 
 927:../cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16                                          /*!< TPI FIF
 928:../cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
 929:../cmsis/include/core_cm4.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 27


 930:../cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8                                          /*!< TPI FIF
 931:../cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
 932:../cmsis/include/core_cm4.h **** 
 933:../cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0                                          /*!< TPI FIF
 934:../cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL << TPI_FIFO0_ETM0_Pos)              /*!< TPI FIF
 935:../cmsis/include/core_cm4.h **** 
 936:../cmsis/include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
 937:../cmsis/include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0                                          /*!< TPI ITA
 938:../cmsis/include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL << TPI_ITATBCTR2_ATREADY_Pos)        /*!< TPI ITA
 939:../cmsis/include/core_cm4.h **** 
 940:../cmsis/include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
 941:../cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
 942:../cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
 943:../cmsis/include/core_cm4.h **** 
 944:../cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27                                          /*!< TPI FIF
 945:../cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
 946:../cmsis/include/core_cm4.h **** 
 947:../cmsis/include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
 948:../cmsis/include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
 949:../cmsis/include/core_cm4.h **** 
 950:../cmsis/include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24                                          /*!< TPI FIF
 951:../cmsis/include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
 952:../cmsis/include/core_cm4.h **** 
 953:../cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16                                          /*!< TPI FIF
 954:../cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
 955:../cmsis/include/core_cm4.h **** 
 956:../cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8                                          /*!< TPI FIF
 957:../cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
 958:../cmsis/include/core_cm4.h **** 
 959:../cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0                                          /*!< TPI FIF
 960:../cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL << TPI_FIFO1_ITM0_Pos)              /*!< TPI FIF
 961:../cmsis/include/core_cm4.h **** 
 962:../cmsis/include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
 963:../cmsis/include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0                                          /*!< TPI ITA
 964:../cmsis/include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL << TPI_ITATBCTR0_ATREADY_Pos)        /*!< TPI ITA
 965:../cmsis/include/core_cm4.h **** 
 966:../cmsis/include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
 967:../cmsis/include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0                                          /*!< TPI ITC
 968:../cmsis/include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL << TPI_ITCTRL_Mode_Pos)              /*!< TPI ITC
 969:../cmsis/include/core_cm4.h **** 
 970:../cmsis/include/core_cm4.h **** /* TPI DEVID Register Definitions */
 971:../cmsis/include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11                                          /*!< TPI DEV
 972:../cmsis/include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
 973:../cmsis/include/core_cm4.h **** 
 974:../cmsis/include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10                                          /*!< TPI DEV
 975:../cmsis/include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
 976:../cmsis/include/core_cm4.h **** 
 977:../cmsis/include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9                                          /*!< TPI DEV
 978:../cmsis/include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
 979:../cmsis/include/core_cm4.h **** 
 980:../cmsis/include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6                                          /*!< TPI DEV
 981:../cmsis/include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
 982:../cmsis/include/core_cm4.h **** 
 983:../cmsis/include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5                                          /*!< TPI DEV
 984:../cmsis/include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
 985:../cmsis/include/core_cm4.h **** 
 986:../cmsis/include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0                                          /*!< TPI DEV
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 28


 987:../cmsis/include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL << TPI_DEVID_NrTraceInput_Pos)      /*!< TPI DEV
 988:../cmsis/include/core_cm4.h **** 
 989:../cmsis/include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
 990:../cmsis/include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0                                          /*!< TPI DEV
 991:../cmsis/include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL << TPI_DEVTYPE_SubType_Pos)          /*!< TPI DEV
 992:../cmsis/include/core_cm4.h **** 
 993:../cmsis/include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4                                          /*!< TPI DEV
 994:../cmsis/include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
 995:../cmsis/include/core_cm4.h **** 
 996:../cmsis/include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
 997:../cmsis/include/core_cm4.h **** 
 998:../cmsis/include/core_cm4.h **** 
 999:../cmsis/include/core_cm4.h **** #if (__MPU_PRESENT == 1)
1000:../cmsis/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
1001:../cmsis/include/core_cm4.h ****     \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1002:../cmsis/include/core_cm4.h ****     \brief      Type definitions for the Memory Protection Unit (MPU)
1003:../cmsis/include/core_cm4.h ****   @{
1004:../cmsis/include/core_cm4.h ****  */
1005:../cmsis/include/core_cm4.h **** 
1006:../cmsis/include/core_cm4.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
1007:../cmsis/include/core_cm4.h ****  */
1008:../cmsis/include/core_cm4.h **** typedef struct
1009:../cmsis/include/core_cm4.h **** {
1010:../cmsis/include/core_cm4.h ****   __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register               
1011:../cmsis/include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register            
1012:../cmsis/include/core_cm4.h ****   __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register      
1013:../cmsis/include/core_cm4.h ****   __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1014:../cmsis/include/core_cm4.h ****   __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1015:../cmsis/include/core_cm4.h ****   __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1016:../cmsis/include/core_cm4.h ****   __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1017:../cmsis/include/core_cm4.h ****   __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1018:../cmsis/include/core_cm4.h ****   __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1019:../cmsis/include/core_cm4.h ****   __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1020:../cmsis/include/core_cm4.h ****   __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1021:../cmsis/include/core_cm4.h **** } MPU_Type;
1022:../cmsis/include/core_cm4.h **** 
1023:../cmsis/include/core_cm4.h **** /* MPU Type Register */
1024:../cmsis/include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
1025:../cmsis/include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1026:../cmsis/include/core_cm4.h **** 
1027:../cmsis/include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
1028:../cmsis/include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1029:../cmsis/include/core_cm4.h **** 
1030:../cmsis/include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
1031:../cmsis/include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
1032:../cmsis/include/core_cm4.h **** 
1033:../cmsis/include/core_cm4.h **** /* MPU Control Register */
1034:../cmsis/include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
1035:../cmsis/include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1036:../cmsis/include/core_cm4.h **** 
1037:../cmsis/include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
1038:../cmsis/include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1039:../cmsis/include/core_cm4.h **** 
1040:../cmsis/include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
1041:../cmsis/include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
1042:../cmsis/include/core_cm4.h **** 
1043:../cmsis/include/core_cm4.h **** /* MPU Region Number Register */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 29


1044:../cmsis/include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
1045:../cmsis/include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL << MPU_RNR_REGION_Pos)                 /*!< MPU 
1046:../cmsis/include/core_cm4.h **** 
1047:../cmsis/include/core_cm4.h **** /* MPU Region Base Address Register */
1048:../cmsis/include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
1049:../cmsis/include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1050:../cmsis/include/core_cm4.h **** 
1051:../cmsis/include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
1052:../cmsis/include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1053:../cmsis/include/core_cm4.h **** 
1054:../cmsis/include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
1055:../cmsis/include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL << MPU_RBAR_REGION_Pos)                 /*!< MPU 
1056:../cmsis/include/core_cm4.h **** 
1057:../cmsis/include/core_cm4.h **** /* MPU Region Attribute and Size Register */
1058:../cmsis/include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16                                             /*!< MPU 
1059:../cmsis/include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1060:../cmsis/include/core_cm4.h **** 
1061:../cmsis/include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
1062:../cmsis/include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1063:../cmsis/include/core_cm4.h **** 
1064:../cmsis/include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
1065:../cmsis/include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1066:../cmsis/include/core_cm4.h **** 
1067:../cmsis/include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0                                             /*!< MPU 
1068:../cmsis/include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL << MPU_RASR_ENABLE_Pos)                   /*!< MPU 
1069:../cmsis/include/core_cm4.h **** 
1070:../cmsis/include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1071:../cmsis/include/core_cm4.h **** #endif
1072:../cmsis/include/core_cm4.h **** 
1073:../cmsis/include/core_cm4.h **** 
1074:../cmsis/include/core_cm4.h **** #if (__FPU_PRESENT == 1)
1075:../cmsis/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
1076:../cmsis/include/core_cm4.h ****     \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1077:../cmsis/include/core_cm4.h ****     \brief      Type definitions for the Floating Point Unit (FPU)
1078:../cmsis/include/core_cm4.h ****   @{
1079:../cmsis/include/core_cm4.h ****  */
1080:../cmsis/include/core_cm4.h **** 
1081:../cmsis/include/core_cm4.h **** /** \brief  Structure type to access the Floating Point Unit (FPU).
1082:../cmsis/include/core_cm4.h ****  */
1083:../cmsis/include/core_cm4.h **** typedef struct
1084:../cmsis/include/core_cm4.h **** {
1085:../cmsis/include/core_cm4.h ****        uint32_t RESERVED0[1];
1086:../cmsis/include/core_cm4.h ****   __IO uint32_t FPCCR;                   /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1087:../cmsis/include/core_cm4.h ****   __IO uint32_t FPCAR;                   /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1088:../cmsis/include/core_cm4.h ****   __IO uint32_t FPDSCR;                  /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1089:../cmsis/include/core_cm4.h ****   __I  uint32_t MVFR0;                   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1090:../cmsis/include/core_cm4.h ****   __I  uint32_t MVFR1;                   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1091:../cmsis/include/core_cm4.h **** } FPU_Type;
1092:../cmsis/include/core_cm4.h **** 
1093:../cmsis/include/core_cm4.h **** /* Floating-Point Context Control Register */
1094:../cmsis/include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31                                             /*!< FPCC
1095:../cmsis/include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1096:../cmsis/include/core_cm4.h **** 
1097:../cmsis/include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30                                             /*!< FPCC
1098:../cmsis/include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1099:../cmsis/include/core_cm4.h **** 
1100:../cmsis/include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8                                             /*!< FPCC
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 30


1101:../cmsis/include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1102:../cmsis/include/core_cm4.h **** 
1103:../cmsis/include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6                                             /*!< FPCC
1104:../cmsis/include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1105:../cmsis/include/core_cm4.h **** 
1106:../cmsis/include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5                                             /*!< FPCC
1107:../cmsis/include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1108:../cmsis/include/core_cm4.h **** 
1109:../cmsis/include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4                                             /*!< FPCC
1110:../cmsis/include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1111:../cmsis/include/core_cm4.h **** 
1112:../cmsis/include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3                                             /*!< FPCC
1113:../cmsis/include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1114:../cmsis/include/core_cm4.h **** 
1115:../cmsis/include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1                                             /*!< FPCC
1116:../cmsis/include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1117:../cmsis/include/core_cm4.h **** 
1118:../cmsis/include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0                                             /*!< FPCC
1119:../cmsis/include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL << FPU_FPCCR_LSPACT_Pos)                  /*!< FPCC
1120:../cmsis/include/core_cm4.h **** 
1121:../cmsis/include/core_cm4.h **** /* Floating-Point Context Address Register */
1122:../cmsis/include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3                                             /*!< FPCA
1123:../cmsis/include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1124:../cmsis/include/core_cm4.h **** 
1125:../cmsis/include/core_cm4.h **** /* Floating-Point Default Status Control Register */
1126:../cmsis/include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26                                             /*!< FPDS
1127:../cmsis/include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1128:../cmsis/include/core_cm4.h **** 
1129:../cmsis/include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25                                             /*!< FPDS
1130:../cmsis/include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1131:../cmsis/include/core_cm4.h **** 
1132:../cmsis/include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24                                             /*!< FPDS
1133:../cmsis/include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1134:../cmsis/include/core_cm4.h **** 
1135:../cmsis/include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22                                             /*!< FPDS
1136:../cmsis/include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1137:../cmsis/include/core_cm4.h **** 
1138:../cmsis/include/core_cm4.h **** /* Media and FP Feature Register 0 */
1139:../cmsis/include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28                                             /*!< MVFR
1140:../cmsis/include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1141:../cmsis/include/core_cm4.h **** 
1142:../cmsis/include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24                                             /*!< MVFR
1143:../cmsis/include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1144:../cmsis/include/core_cm4.h **** 
1145:../cmsis/include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20                                             /*!< MVFR
1146:../cmsis/include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1147:../cmsis/include/core_cm4.h **** 
1148:../cmsis/include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16                                             /*!< MVFR
1149:../cmsis/include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1150:../cmsis/include/core_cm4.h **** 
1151:../cmsis/include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12                                             /*!< MVFR
1152:../cmsis/include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1153:../cmsis/include/core_cm4.h **** 
1154:../cmsis/include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8                                             /*!< MVFR
1155:../cmsis/include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1156:../cmsis/include/core_cm4.h **** 
1157:../cmsis/include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4                                             /*!< MVFR
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 31


1158:../cmsis/include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1159:../cmsis/include/core_cm4.h **** 
1160:../cmsis/include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0                                             /*!< MVFR
1161:../cmsis/include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL << FPU_MVFR0_A_SIMD_registers_Pos)      /*!< MVFR
1162:../cmsis/include/core_cm4.h **** 
1163:../cmsis/include/core_cm4.h **** /* Media and FP Feature Register 1 */
1164:../cmsis/include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28                                             /*!< MVFR
1165:../cmsis/include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1166:../cmsis/include/core_cm4.h **** 
1167:../cmsis/include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24                                             /*!< MVFR
1168:../cmsis/include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1169:../cmsis/include/core_cm4.h **** 
1170:../cmsis/include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4                                             /*!< MVFR
1171:../cmsis/include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1172:../cmsis/include/core_cm4.h **** 
1173:../cmsis/include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0                                             /*!< MVFR
1174:../cmsis/include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL << FPU_MVFR1_FtZ_mode_Pos)              /*!< MVFR
1175:../cmsis/include/core_cm4.h **** 
1176:../cmsis/include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1177:../cmsis/include/core_cm4.h **** #endif
1178:../cmsis/include/core_cm4.h **** 
1179:../cmsis/include/core_cm4.h **** 
1180:../cmsis/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
1181:../cmsis/include/core_cm4.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1182:../cmsis/include/core_cm4.h ****     \brief      Type definitions for the Core Debug Registers
1183:../cmsis/include/core_cm4.h ****   @{
1184:../cmsis/include/core_cm4.h ****  */
1185:../cmsis/include/core_cm4.h **** 
1186:../cmsis/include/core_cm4.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
1187:../cmsis/include/core_cm4.h ****  */
1188:../cmsis/include/core_cm4.h **** typedef struct
1189:../cmsis/include/core_cm4.h **** {
1190:../cmsis/include/core_cm4.h ****   __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1191:../cmsis/include/core_cm4.h ****   __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1192:../cmsis/include/core_cm4.h ****   __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1193:../cmsis/include/core_cm4.h ****   __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1194:../cmsis/include/core_cm4.h **** } CoreDebug_Type;
1195:../cmsis/include/core_cm4.h **** 
1196:../cmsis/include/core_cm4.h **** /* Debug Halting Control and Status Register */
1197:../cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
1198:../cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1199:../cmsis/include/core_cm4.h **** 
1200:../cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
1201:../cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1202:../cmsis/include/core_cm4.h **** 
1203:../cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
1204:../cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1205:../cmsis/include/core_cm4.h **** 
1206:../cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
1207:../cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1208:../cmsis/include/core_cm4.h **** 
1209:../cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
1210:../cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1211:../cmsis/include/core_cm4.h **** 
1212:../cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
1213:../cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1214:../cmsis/include/core_cm4.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 32


1215:../cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
1216:../cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1217:../cmsis/include/core_cm4.h **** 
1218:../cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
1219:../cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1220:../cmsis/include/core_cm4.h **** 
1221:../cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
1222:../cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1223:../cmsis/include/core_cm4.h **** 
1224:../cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
1225:../cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1226:../cmsis/include/core_cm4.h **** 
1227:../cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
1228:../cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1229:../cmsis/include/core_cm4.h **** 
1230:../cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
1231:../cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
1232:../cmsis/include/core_cm4.h **** 
1233:../cmsis/include/core_cm4.h **** /* Debug Core Register Selector Register */
1234:../cmsis/include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
1235:../cmsis/include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1236:../cmsis/include/core_cm4.h **** 
1237:../cmsis/include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
1238:../cmsis/include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
1239:../cmsis/include/core_cm4.h **** 
1240:../cmsis/include/core_cm4.h **** /* Debug Exception and Monitor Control Register */
1241:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
1242:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1243:../cmsis/include/core_cm4.h **** 
1244:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
1245:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1246:../cmsis/include/core_cm4.h **** 
1247:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
1248:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1249:../cmsis/include/core_cm4.h **** 
1250:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
1251:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1252:../cmsis/include/core_cm4.h **** 
1253:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
1254:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1255:../cmsis/include/core_cm4.h **** 
1256:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
1257:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1258:../cmsis/include/core_cm4.h **** 
1259:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
1260:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1261:../cmsis/include/core_cm4.h **** 
1262:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
1263:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1264:../cmsis/include/core_cm4.h **** 
1265:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
1266:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1267:../cmsis/include/core_cm4.h **** 
1268:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
1269:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1270:../cmsis/include/core_cm4.h **** 
1271:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 33


1272:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1273:../cmsis/include/core_cm4.h **** 
1274:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
1275:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1276:../cmsis/include/core_cm4.h **** 
1277:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
1278:../cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
1279:../cmsis/include/core_cm4.h **** 
1280:../cmsis/include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1281:../cmsis/include/core_cm4.h **** 
1282:../cmsis/include/core_cm4.h **** 
1283:../cmsis/include/core_cm4.h **** /** \ingroup    CMSIS_core_register
1284:../cmsis/include/core_cm4.h ****     \defgroup   CMSIS_core_base     Core Definitions
1285:../cmsis/include/core_cm4.h ****     \brief      Definitions for base addresses, unions, and structures.
1286:../cmsis/include/core_cm4.h ****   @{
1287:../cmsis/include/core_cm4.h ****  */
1288:../cmsis/include/core_cm4.h **** 
1289:../cmsis/include/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1290:../cmsis/include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1291:../cmsis/include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
1292:../cmsis/include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address        
1293:../cmsis/include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address        
1294:../cmsis/include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1295:../cmsis/include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
1296:../cmsis/include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
1297:../cmsis/include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1298:../cmsis/include/core_cm4.h **** 
1299:../cmsis/include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1300:../cmsis/include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1301:../cmsis/include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1302:../cmsis/include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1303:../cmsis/include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1304:../cmsis/include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1305:../cmsis/include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1306:../cmsis/include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1307:../cmsis/include/core_cm4.h **** 
1308:../cmsis/include/core_cm4.h **** #if (__MPU_PRESENT == 1)
1309:../cmsis/include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
1310:../cmsis/include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit  
1311:../cmsis/include/core_cm4.h **** #endif
1312:../cmsis/include/core_cm4.h **** 
1313:../cmsis/include/core_cm4.h **** #if (__FPU_PRESENT == 1)
1314:../cmsis/include/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit     
1315:../cmsis/include/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit     
1316:../cmsis/include/core_cm4.h **** #endif
1317:../cmsis/include/core_cm4.h **** 
1318:../cmsis/include/core_cm4.h **** /*@} */
1319:../cmsis/include/core_cm4.h **** 
1320:../cmsis/include/core_cm4.h **** 
1321:../cmsis/include/core_cm4.h **** 
1322:../cmsis/include/core_cm4.h **** /*******************************************************************************
1323:../cmsis/include/core_cm4.h ****  *                Hardware Abstraction Layer
1324:../cmsis/include/core_cm4.h ****   Core Function Interface contains:
1325:../cmsis/include/core_cm4.h ****   - Core NVIC Functions
1326:../cmsis/include/core_cm4.h ****   - Core SysTick Functions
1327:../cmsis/include/core_cm4.h ****   - Core Debug Functions
1328:../cmsis/include/core_cm4.h ****   - Core Register Access Functions
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 34


1329:../cmsis/include/core_cm4.h ****  ******************************************************************************/
1330:../cmsis/include/core_cm4.h **** /** \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1331:../cmsis/include/core_cm4.h **** */
1332:../cmsis/include/core_cm4.h **** 
1333:../cmsis/include/core_cm4.h **** 
1334:../cmsis/include/core_cm4.h **** 
1335:../cmsis/include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1336:../cmsis/include/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1337:../cmsis/include/core_cm4.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1338:../cmsis/include/core_cm4.h ****     \brief      Functions that manage interrupts and exceptions via the NVIC.
1339:../cmsis/include/core_cm4.h ****     @{
1340:../cmsis/include/core_cm4.h ****  */
1341:../cmsis/include/core_cm4.h **** 
1342:../cmsis/include/core_cm4.h **** /** \brief  Set Priority Grouping
1343:../cmsis/include/core_cm4.h **** 
1344:../cmsis/include/core_cm4.h ****   The function sets the priority grouping field using the required unlock sequence.
1345:../cmsis/include/core_cm4.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1346:../cmsis/include/core_cm4.h ****   Only values from 0..7 are used.
1347:../cmsis/include/core_cm4.h ****   In case of a conflict between priority grouping and available
1348:../cmsis/include/core_cm4.h ****   priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1349:../cmsis/include/core_cm4.h **** 
1350:../cmsis/include/core_cm4.h ****     \param [in]      PriorityGroup  Priority grouping field.
1351:../cmsis/include/core_cm4.h ****  */
1352:../cmsis/include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1353:../cmsis/include/core_cm4.h **** {
1354:../cmsis/include/core_cm4.h ****   uint32_t reg_value;
1355:../cmsis/include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07);               /* only values 0..7 a
1356:../cmsis/include/core_cm4.h **** 
1357:../cmsis/include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1358:../cmsis/include/core_cm4.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1359:../cmsis/include/core_cm4.h ****   reg_value  =  (reg_value                                 |
1360:../cmsis/include/core_cm4.h ****                 ((uint32_t)0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1361:../cmsis/include/core_cm4.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1362:../cmsis/include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1363:../cmsis/include/core_cm4.h **** }
1364:../cmsis/include/core_cm4.h **** 
1365:../cmsis/include/core_cm4.h **** 
1366:../cmsis/include/core_cm4.h **** /** \brief  Get Priority Grouping
1367:../cmsis/include/core_cm4.h **** 
1368:../cmsis/include/core_cm4.h ****   The function reads the priority grouping field from the NVIC Interrupt Controller.
1369:../cmsis/include/core_cm4.h **** 
1370:../cmsis/include/core_cm4.h ****     \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1371:../cmsis/include/core_cm4.h ****  */
1372:../cmsis/include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1373:../cmsis/include/core_cm4.h **** {
1374:../cmsis/include/core_cm4.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1375:../cmsis/include/core_cm4.h **** }
1376:../cmsis/include/core_cm4.h **** 
1377:../cmsis/include/core_cm4.h **** 
1378:../cmsis/include/core_cm4.h **** /** \brief  Enable External Interrupt
1379:../cmsis/include/core_cm4.h **** 
1380:../cmsis/include/core_cm4.h ****     The function enables a device-specific interrupt in the NVIC interrupt controller.
1381:../cmsis/include/core_cm4.h **** 
1382:../cmsis/include/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1383:../cmsis/include/core_cm4.h ****  */
1384:../cmsis/include/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1385:../cmsis/include/core_cm4.h **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 35


1386:../cmsis/include/core_cm4.h **** /*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
1387:../cmsis/include/core_cm4.h ****   NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32
1388:../cmsis/include/core_cm4.h **** }
1389:../cmsis/include/core_cm4.h **** 
1390:../cmsis/include/core_cm4.h **** 
1391:../cmsis/include/core_cm4.h **** /** \brief  Disable External Interrupt
1392:../cmsis/include/core_cm4.h **** 
1393:../cmsis/include/core_cm4.h ****     The function disables a device-specific interrupt in the NVIC interrupt controller.
1394:../cmsis/include/core_cm4.h **** 
1395:../cmsis/include/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1396:../cmsis/include/core_cm4.h ****  */
1397:../cmsis/include/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1398:../cmsis/include/core_cm4.h **** {
1399:../cmsis/include/core_cm4.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1400:../cmsis/include/core_cm4.h **** }
1401:../cmsis/include/core_cm4.h **** 
1402:../cmsis/include/core_cm4.h **** 
1403:../cmsis/include/core_cm4.h **** /** \brief  Get Pending Interrupt
1404:../cmsis/include/core_cm4.h **** 
1405:../cmsis/include/core_cm4.h ****     The function reads the pending register in the NVIC and returns the pending bit
1406:../cmsis/include/core_cm4.h ****     for the specified interrupt.
1407:../cmsis/include/core_cm4.h **** 
1408:../cmsis/include/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1409:../cmsis/include/core_cm4.h ****     
1410:../cmsis/include/core_cm4.h ****     \return             0  Interrupt status is not pending.
1411:../cmsis/include/core_cm4.h ****     \return             1  Interrupt status is pending.
1412:../cmsis/include/core_cm4.h ****  */
1413:../cmsis/include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1414:../cmsis/include/core_cm4.h **** {
1415:../cmsis/include/core_cm4.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1416:../cmsis/include/core_cm4.h **** }
1417:../cmsis/include/core_cm4.h **** 
1418:../cmsis/include/core_cm4.h **** 
1419:../cmsis/include/core_cm4.h **** /** \brief  Set Pending Interrupt
1420:../cmsis/include/core_cm4.h **** 
1421:../cmsis/include/core_cm4.h ****     The function sets the pending bit of an external interrupt.
1422:../cmsis/include/core_cm4.h **** 
1423:../cmsis/include/core_cm4.h ****     \param [in]      IRQn  Interrupt number. Value cannot be negative.
1424:../cmsis/include/core_cm4.h ****  */
1425:../cmsis/include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1426:../cmsis/include/core_cm4.h **** {
1427:../cmsis/include/core_cm4.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1428:../cmsis/include/core_cm4.h **** }
1429:../cmsis/include/core_cm4.h **** 
1430:../cmsis/include/core_cm4.h **** 
1431:../cmsis/include/core_cm4.h **** /** \brief  Clear Pending Interrupt
1432:../cmsis/include/core_cm4.h **** 
1433:../cmsis/include/core_cm4.h ****     The function clears the pending bit of an external interrupt.
1434:../cmsis/include/core_cm4.h **** 
1435:../cmsis/include/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1436:../cmsis/include/core_cm4.h ****  */
1437:../cmsis/include/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1438:../cmsis/include/core_cm4.h **** {
1439:../cmsis/include/core_cm4.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
1440:../cmsis/include/core_cm4.h **** }
1441:../cmsis/include/core_cm4.h **** 
1442:../cmsis/include/core_cm4.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 36


1443:../cmsis/include/core_cm4.h **** /** \brief  Get Active Interrupt
1444:../cmsis/include/core_cm4.h **** 
1445:../cmsis/include/core_cm4.h ****     The function reads the active register in NVIC and returns the active bit.
1446:../cmsis/include/core_cm4.h ****     
1447:../cmsis/include/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1448:../cmsis/include/core_cm4.h ****     
1449:../cmsis/include/core_cm4.h ****     \return             0  Interrupt status is not active.
1450:../cmsis/include/core_cm4.h ****     \return             1  Interrupt status is active.
1451:../cmsis/include/core_cm4.h ****  */
1452:../cmsis/include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1453:../cmsis/include/core_cm4.h **** {
1454:../cmsis/include/core_cm4.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1455:../cmsis/include/core_cm4.h **** }
1456:../cmsis/include/core_cm4.h **** 
1457:../cmsis/include/core_cm4.h **** 
1458:../cmsis/include/core_cm4.h **** /** \brief  Set Interrupt Priority
1459:../cmsis/include/core_cm4.h **** 
1460:../cmsis/include/core_cm4.h ****     The function sets the priority of an interrupt. 
1461:../cmsis/include/core_cm4.h **** 
1462:../cmsis/include/core_cm4.h ****     \note The priority cannot be set for every core interrupt.
1463:../cmsis/include/core_cm4.h **** 
1464:../cmsis/include/core_cm4.h ****     \param [in]      IRQn  Interrupt number. 
1465:../cmsis/include/core_cm4.h ****     \param [in]  priority  Priority to set.
1466:../cmsis/include/core_cm4.h ****  */
1467:../cmsis/include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1468:../cmsis/include/core_cm4.h **** {
1469:../cmsis/include/core_cm4.h ****   if(IRQn < 0) {
1470:../cmsis/include/core_cm4.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
1471:../cmsis/include/core_cm4.h ****   else {
1472:../cmsis/include/core_cm4.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
1473:../cmsis/include/core_cm4.h **** }
1474:../cmsis/include/core_cm4.h **** 
1475:../cmsis/include/core_cm4.h **** 
1476:../cmsis/include/core_cm4.h **** /** \brief  Get Interrupt Priority
1477:../cmsis/include/core_cm4.h **** 
1478:../cmsis/include/core_cm4.h ****     The function reads the priority of an interrupt. The interrupt
1479:../cmsis/include/core_cm4.h ****     number can be positive to specify an external (device specific)
1480:../cmsis/include/core_cm4.h ****     interrupt, or negative to specify an internal (core) interrupt.
1481:../cmsis/include/core_cm4.h **** 
1482:../cmsis/include/core_cm4.h **** 
1483:../cmsis/include/core_cm4.h ****     \param [in]   IRQn  Interrupt number.
1484:../cmsis/include/core_cm4.h ****     \return             Interrupt Priority. Value is aligned automatically to the implemented
1485:../cmsis/include/core_cm4.h ****                         priority bits of the microcontroller.
1486:../cmsis/include/core_cm4.h ****  */
1487:../cmsis/include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1488:../cmsis/include/core_cm4.h **** {
1489:../cmsis/include/core_cm4.h **** 
1490:../cmsis/include/core_cm4.h ****   if(IRQn < 0) {
1491:../cmsis/include/core_cm4.h ****     return((uint32_t)(SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1492:../cmsis/include/core_cm4.h ****   else {
1493:../cmsis/include/core_cm4.h ****     return((uint32_t)(NVIC->IP[(uint32_t)(IRQn)]           >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1494:../cmsis/include/core_cm4.h **** }
1495:../cmsis/include/core_cm4.h **** 
1496:../cmsis/include/core_cm4.h **** 
1497:../cmsis/include/core_cm4.h **** /** \brief  Encode Priority
1498:../cmsis/include/core_cm4.h **** 
1499:../cmsis/include/core_cm4.h ****     The function encodes the priority for an interrupt with the given priority group,
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 37


1500:../cmsis/include/core_cm4.h ****     preemptive priority value, and subpriority value.
1501:../cmsis/include/core_cm4.h ****     In case of a conflict between priority grouping and available
1502:../cmsis/include/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS), the samllest possible priority group is set.
1503:../cmsis/include/core_cm4.h **** 
1504:../cmsis/include/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group.
1505:../cmsis/include/core_cm4.h ****     \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1506:../cmsis/include/core_cm4.h ****     \param [in]       SubPriority  Subpriority value (starting from 0).
1507:../cmsis/include/core_cm4.h ****     \return                        Encoded priority. Value can be used in the function \ref NVIC_Se
1508:../cmsis/include/core_cm4.h ****  */
1509:../cmsis/include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1510:../cmsis/include/core_cm4.h **** {
1511:../cmsis/include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1512:../cmsis/include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1513:../cmsis/include/core_cm4.h ****   uint32_t SubPriorityBits;
1514:../cmsis/include/core_cm4.h **** 
1515:../cmsis/include/core_cm4.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1516:../cmsis/include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1517:../cmsis/include/core_cm4.h **** 
1518:../cmsis/include/core_cm4.h ****   return (
1519:../cmsis/include/core_cm4.h ****            ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
1520:../cmsis/include/core_cm4.h ****            ((SubPriority     & ((1 << (SubPriorityBits    )) - 1)))
1521:../cmsis/include/core_cm4.h ****          );
1522:../cmsis/include/core_cm4.h **** }
1523:../cmsis/include/core_cm4.h **** 
1524:../cmsis/include/core_cm4.h **** 
1525:../cmsis/include/core_cm4.h **** /** \brief  Decode Priority
1526:../cmsis/include/core_cm4.h **** 
1527:../cmsis/include/core_cm4.h ****     The function decodes an interrupt priority value with a given priority group to
1528:../cmsis/include/core_cm4.h ****     preemptive priority value and subpriority value.
1529:../cmsis/include/core_cm4.h ****     In case of a conflict between priority grouping and available
1530:../cmsis/include/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1531:../cmsis/include/core_cm4.h **** 
1532:../cmsis/include/core_cm4.h ****     \param [in]         Priority   Priority value, which can be retrieved with the function \ref NV
1533:../cmsis/include/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group.
1534:../cmsis/include/core_cm4.h ****     \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1535:../cmsis/include/core_cm4.h ****     \param [out]     pSubPriority  Subpriority value (starting from 0).
1536:../cmsis/include/core_cm4.h ****  */
1537:../cmsis/include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* pPre
1538:../cmsis/include/core_cm4.h **** {
1539:../cmsis/include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1540:../cmsis/include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1541:../cmsis/include/core_cm4.h ****   uint32_t SubPriorityBits;
1542:../cmsis/include/core_cm4.h **** 
1543:../cmsis/include/core_cm4.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1544:../cmsis/include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1545:../cmsis/include/core_cm4.h **** 
1546:../cmsis/include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & ((1 << (PreemptPriorityBits)) - 1);
1547:../cmsis/include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & ((1 << (SubPriorityBits    )) - 1);
1548:../cmsis/include/core_cm4.h **** }
1549:../cmsis/include/core_cm4.h **** 
1550:../cmsis/include/core_cm4.h **** 
1551:../cmsis/include/core_cm4.h **** /** \brief  System Reset
1552:../cmsis/include/core_cm4.h **** 
1553:../cmsis/include/core_cm4.h ****     The function initiates a system reset request to reset the MCU.
1554:../cmsis/include/core_cm4.h ****  */
1555:../cmsis/include/core_cm4.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1556:../cmsis/include/core_cm4.h **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 38


1557:../cmsis/include/core_cm4.h ****   __DSB();                                                     /* Ensure all outstanding memory acc
1558:../cmsis/include/core_cm4.h ****                                                                   buffered write are completed befo
1559:../cmsis/include/core_cm4.h ****   SCB->AIRCR  = ((0x5FA << SCB_AIRCR_VECTKEY_Pos)      |
1560:../cmsis/include/core_cm4.h ****                  (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
1561:../cmsis/include/core_cm4.h ****                  SCB_AIRCR_SYSRESETREQ_Msk);                   /* Keep priority group unchanged */
1562:../cmsis/include/core_cm4.h ****   __DSB();                                                     /* Ensure completion of memory acces
1563:../cmsis/include/core_cm4.h ****   while(1);                                                    /* wait until reset */
1564:../cmsis/include/core_cm4.h **** }
1565:../cmsis/include/core_cm4.h **** 
1566:../cmsis/include/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1567:../cmsis/include/core_cm4.h **** 
1568:../cmsis/include/core_cm4.h **** 
1569:../cmsis/include/core_cm4.h **** 
1570:../cmsis/include/core_cm4.h **** /* ##################################    SysTick function  ########################################
1571:../cmsis/include/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1572:../cmsis/include/core_cm4.h ****     \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1573:../cmsis/include/core_cm4.h ****     \brief      Functions that configure the System.
1574:../cmsis/include/core_cm4.h ****   @{
1575:../cmsis/include/core_cm4.h ****  */
1576:../cmsis/include/core_cm4.h **** 
1577:../cmsis/include/core_cm4.h **** #if (__Vendor_SysTickConfig == 0)
1578:../cmsis/include/core_cm4.h **** 
1579:../cmsis/include/core_cm4.h **** /** \brief  System Tick Configuration
1580:../cmsis/include/core_cm4.h **** 
1581:../cmsis/include/core_cm4.h ****     The function initializes the System Timer and its interrupt, and starts the System Tick Timer.
1582:../cmsis/include/core_cm4.h ****     Counter is in free running mode to generate periodic interrupts.   
1583:../cmsis/include/core_cm4.h **** 
1584:../cmsis/include/core_cm4.h ****     \param [in]  ticks  Number of ticks between two interrupts.
1585:../cmsis/include/core_cm4.h ****     
1586:../cmsis/include/core_cm4.h ****     \return          0  Function succeeded.
1587:../cmsis/include/core_cm4.h ****     \return          1  Function failed.
1588:../cmsis/include/core_cm4.h ****     
1589:../cmsis/include/core_cm4.h ****     \note     When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the 
1590:../cmsis/include/core_cm4.h ****     function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b> 
1591:../cmsis/include/core_cm4.h ****     must contain a vendor-specific implementation of this function.
1592:../cmsis/include/core_cm4.h **** 
1593:../cmsis/include/core_cm4.h ****  */
1594:../cmsis/include/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
1595:../cmsis/include/core_cm4.h **** {
1596:../cmsis/include/core_cm4.h ****   if (ticks > SysTick_LOAD_RELOAD_Msk)  return (1);            /* Reload value impossible */
 239              		.loc 2 1596 0
 240 001c B3F1807F 		cmp	r3, #16777216
 241 0020 0CD2     		bcs	.L14
1597:../cmsis/include/core_cm4.h **** 
1598:../cmsis/include/core_cm4.h ****   SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */
 242              		.loc 2 1598 0
 243 0022 23F07F43 		bic	r3, r3, #-16777216
 244              	.LVL16:
 245 0026 013B     		subs	r3, r3, #1
 246 0028 A14A     		ldr	r2, .L36+8
 247 002a 5360     		str	r3, [r2, #4]
 248              	.LVL17:
 249              	.LBB12:
 250              	.LBB13:
1470:../cmsis/include/core_cm4.h ****   else {
 251              		.loc 2 1470 0
 252 002c F021     		movs	r1, #240
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 39


 253 002e A14B     		ldr	r3, .L36+12
 254 0030 83F82310 		strb	r1, [r3, #35]
 255              	.LVL18:
 256              	.LBE13:
 257              	.LBE12:
1599:../cmsis/include/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrup
1600:../cmsis/include/core_cm4.h ****   SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
 258              		.loc 2 1600 0
 259 0034 0023     		movs	r3, #0
 260 0036 9360     		str	r3, [r2, #8]
1601:../cmsis/include/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 261              		.loc 2 1601 0
 262 0038 0723     		movs	r3, #7
 263 003a 1360     		str	r3, [r2]
 264              	.L14:
 265              	.LBE11:
 266              	.LBE10:
  33:../user/source/main.c ****     NVIC_SetPriority(SysTick_IRQn, -1);
 267              		.loc 1 33 0
 268 003c 6FF00400 		mvn	r0, #4
 269 0040 FFF7FEFF 		bl	SysTick_CLKSourceConfig
 270              	.LVL19:
 271              	.LBB14:
 272              	.LBB15:
1470:../cmsis/include/core_cm4.h ****   else {
 273              		.loc 2 1470 0
 274 0044 F022     		movs	r2, #240
 275 0046 9B4B     		ldr	r3, .L36+12
 276 0048 83F82320 		strb	r2, [r3, #35]
 277              	.LVL20:
 278              	.LBE15:
 279              	.LBE14:
  35:../user/source/main.c ****     vGPIO_Init();
 280              		.loc 1 35 0
 281 004c FFF7FEFF 		bl	vInterFlash_Init
 282              	.LVL21:
  36:../user/source/main.c ****     vFeedExtWatchDog();
 283              		.loc 1 36 0
 284 0050 FFF7FEFF 		bl	vGPIO_Init
 285              	.LVL22:
  37:../user/source/main.c ****     vUart_Init(); //RXNE中断使能
 286              		.loc 1 37 0
 287 0054 FFF7FEFF 		bl	vFeedExtWatchDog
 288              	.LVL23:
  38:../user/source/main.c ****     /*定时器2初始化*/
 289              		.loc 1 38 0
 290 0058 FFF7FEFF 		bl	vUart_Init
 291              	.LVL24:
  40:../user/source/main.c ****     /*电压修改的上下限值设为默认值；开启修改功能 */
 292              		.loc 1 40 0
 293 005c FFF7FEFF 		bl	vTimer_Init
 294              	.LVL25:
  42:../user/source/main.c ****     /*电流重过载参数设置*/
 295              		.loc 1 42 0
 296 0060 FFF7FEFF 		bl	Voltage_Change_Init
 297              	.LVL26:
  44:../user/source/main.c ****     /*电量修改的上下限值设为默认值；开启修改功能 */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 40


 298              		.loc 1 44 0
 299 0064 FFF7FEFF 		bl	vCurrent_Limit_DefaultSet
 300              	.LVL27:
  46:../user/source/main.c ****     /*点亮运行灯*/
 301              		.loc 1 46 0
 302 0068 FFF7FEFF 		bl	vEnergy_Modify_Init
 303              	.LVL28:
  48:../user/source/main.c ****     while (1)
 304              		.loc 1 48 0
 305 006c FFF7FEFF 		bl	vLed_Light
 306              	.LVL29:
  19:../user/source/main.c ****     //uint8_t tmpAPDU[MAX_APDU_LENGTH];
 307              		.loc 1 19 0
 308 0070 0224     		movs	r4, #2
 309              	.LVL30:
 310              	.L16:
  51:../user/source/main.c ****         {
 311              		.loc 1 51 0
 312 0072 012C     		cmp	r4, #1
 313 0074 3AD0     		beq	.L17
 314 0076 002C     		cmp	r4, #0
 315 0078 00F00181 		beq	.L18
 316 007c 022C     		cmp	r4, #2
 317 007e F8D1     		bne	.L16
  56:../user/source/main.c ****             Uart_idleReadEnable(pUartDB);
 318              		.loc 1 56 0
 319 0080 8D4B     		ldr	r3, .L36+16
 320 0082 1868     		ldr	r0, [r3]
 321 0084 FFF7FEFF 		bl	Uart_idleReadEnable
 322              	.LVL31:
  57:../user/source/main.c ****             if (FLAG_UartZD_HasData)
 323              		.loc 1 57 0
 324 0088 8C4B     		ldr	r3, .L36+20
 325 008a 1868     		ldr	r0, [r3]
 326 008c FFF7FEFF 		bl	Uart_idleReadEnable
 327              	.LVL32:
  58:../user/source/main.c ****             {
 328              		.loc 1 58 0
 329 0090 8B4B     		ldr	r3, .L36+24
 330 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 331 0094 93B1     		cbz	r3, .L20
  60:../user/source/main.c ****                 FLAG_UartZD_HasData = false;
 332              		.loc 1 60 0
 333 0096 884D     		ldr	r5, .L36+16
 334 0098 2868     		ldr	r0, [r5]
 335 009a FFF7FEFF 		bl	Uart_idleReadDisable
 336              	.LVL33:
  61:../user/source/main.c ****                 dwLen = dwUartCopy(pUartZD, ucApp_Buf_ZD2DB, pUartDB);
 337              		.loc 1 61 0
 338 009e 0022     		movs	r2, #0
 339 00a0 874B     		ldr	r3, .L36+24
 340 00a2 1A70     		strb	r2, [r3]
  62:../user/source/main.c ****                 ProtocolType = GetProtocolType(ucApp_Buf_ZD2DB, dwLen);
 341              		.loc 1 62 0
 342 00a4 874C     		ldr	r4, .L36+28
 343              	.LVL34:
 344 00a6 854B     		ldr	r3, .L36+20
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 41


 345 00a8 1A68     		ldr	r2, [r3]
 346 00aa 2146     		mov	r1, r4
 347 00ac 2868     		ldr	r0, [r5]
 348 00ae FFF7FEFF 		bl	dwUartCopy
 349              	.LVL35:
  63:../user/source/main.c ****             }
 350              		.loc 1 63 0
 351 00b2 0146     		mov	r1, r0
 352 00b4 2046     		mov	r0, r4
 353              	.LVL36:
 354 00b6 FFF7FEFF 		bl	GetProtocolType
 355              	.LVL37:
 356 00ba 0446     		mov	r4, r0
 357              	.LVL38:
 358              	.L20:
  65:../user/source/main.c ****             {
 359              		.loc 1 65 0
 360 00bc 824B     		ldr	r3, .L36+32
 361 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 362 00c0 002B     		cmp	r3, #0
 363 00c2 D6D0     		beq	.L16
  67:../user/source/main.c ****                 FLAG_UartDB_HasData = false;
 364              		.loc 1 67 0
 365 00c4 7D4D     		ldr	r5, .L36+20
 366 00c6 2868     		ldr	r0, [r5]
 367 00c8 FFF7FEFF 		bl	Uart_idleReadDisable
 368              	.LVL39:
  68:../user/source/main.c ****                 dwLen = dwUartCopy(pUartDB, ucApp_Buf_DB2ZD, pUartZD);
 369              		.loc 1 68 0
 370 00cc 0022     		movs	r2, #0
 371 00ce 7E4B     		ldr	r3, .L36+32
 372 00d0 1A70     		strb	r2, [r3]
  69:../user/source/main.c ****                 ProtocolType = GetProtocolType(ucApp_Buf_DB2ZD, dwLen);
 373              		.loc 1 69 0
 374 00d2 7E4C     		ldr	r4, .L36+36
 375              	.LVL40:
 376 00d4 784B     		ldr	r3, .L36+16
 377 00d6 1A68     		ldr	r2, [r3]
 378 00d8 2146     		mov	r1, r4
 379 00da 2868     		ldr	r0, [r5]
 380 00dc FFF7FEFF 		bl	dwUartCopy
 381              	.LVL41:
  70:../user/source/main.c ****             }
 382              		.loc 1 70 0
 383 00e0 0146     		mov	r1, r0
 384 00e2 2046     		mov	r0, r4
 385              	.LVL42:
 386 00e4 FFF7FEFF 		bl	GetProtocolType
 387              	.LVL43:
 388 00e8 0446     		mov	r4, r0
 389              	.LVL44:
 390 00ea C2E7     		b	.L16
 391              	.L17:
  76:../user/source/main.c ****             Uart_idleReadEnable(pUartDB);
 392              		.loc 1 76 0
 393 00ec 724B     		ldr	r3, .L36+16
 394 00ee 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 42


 395 00f0 FFF7FEFF 		bl	Uart_idleReadEnable
 396              	.LVL45:
  77:../user/source/main.c ****             if (FLAG_UartZD_HasData)
 397              		.loc 1 77 0
 398 00f4 714B     		ldr	r3, .L36+20
 399 00f6 1868     		ldr	r0, [r3]
 400 00f8 FFF7FEFF 		bl	Uart_idleReadEnable
 401              	.LVL46:
  78:../user/source/main.c ****             {
 402              		.loc 1 78 0
 403 00fc 704B     		ldr	r3, .L36+24
 404 00fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 405 0100 63B1     		cbz	r3, .L22
  80:../user/source/main.c ****                 FLAG_UartZD_HasData = false;
 406              		.loc 1 80 0
 407 0102 6D4D     		ldr	r5, .L36+16
 408 0104 2868     		ldr	r0, [r5]
 409 0106 FFF7FEFF 		bl	Uart_idleReadDisable
 410              	.LVL47:
  81:../user/source/main.c ****                 dwLen = dwUartCopy(pUartZD, ucApp_Buf_ZD2DB, pUartDB);
 411              		.loc 1 81 0
 412 010a 0022     		movs	r2, #0
 413 010c 6C4B     		ldr	r3, .L36+24
 414 010e 1A70     		strb	r2, [r3]
  82:../user/source/main.c ****                 //if (pframe = pGetpFrame(ucApp_Buf_ZD2DB, dwLen) == NULL)
 415              		.loc 1 82 0
 416 0110 6A4B     		ldr	r3, .L36+20
 417 0112 1A68     		ldr	r2, [r3]
 418 0114 6B49     		ldr	r1, .L36+28
 419 0116 2868     		ldr	r0, [r5]
 420 0118 FFF7FEFF 		bl	dwUartCopy
 421              	.LVL48:
 422              	.L22:
  86:../user/source/main.c ****             {
 423              		.loc 1 86 0
 424 011c 6A4B     		ldr	r3, .L36+32
 425 011e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 426 0120 002B     		cmp	r3, #0
 427 0122 A6D0     		beq	.L16
  88:../user/source/main.c ****                 FLAG_UartDB_HasData = false;
 428              		.loc 1 88 0
 429 0124 654D     		ldr	r5, .L36+20
 430 0126 2868     		ldr	r0, [r5]
 431 0128 FFF7FEFF 		bl	Uart_idleReadDisable
 432              	.LVL49:
  89:../user/source/main.c ****                 dlt698Frame.pStart = NULL;
 433              		.loc 1 89 0
 434 012c 0023     		movs	r3, #0
 435 012e 664A     		ldr	r2, .L36+32
 436 0130 1370     		strb	r3, [r2]
  90:../user/source/main.c ****                 //dwLen = 0;
 437              		.loc 1 90 0
 438 0132 0193     		str	r3, [sp, #4]
  94:../user/source/main.c ****                     break;
 439              		.loc 1 94 0
 440 0134 4FF47A72 		mov	r2, #1000
 441 0138 6449     		ldr	r1, .L36+36
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 43


 442 013a 2868     		ldr	r0, [r5]
 443 013c FFF7FEFF 		bl	Uart_Read
 444              	.LVL50:
 445 0140 0146     		mov	r1, r0
 446 0142 0028     		cmp	r0, #0
 447 0144 95D0     		beq	.L16
  97:../user/source/main.c ****                 {
 448              		.loc 1 97 0
 449 0146 624B     		ldr	r3, .L36+40
 450 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 451 014a 3BB1     		cbz	r3, .L23
  99:../user/source/main.c ****                     break;
 452              		.loc 1 99 0
 453 014c 0623     		movs	r3, #6
 454 014e 821C     		adds	r2, r0, #2
 455 0150 5E49     		ldr	r1, .L36+36
 456 0152 5948     		ldr	r0, .L36+16
 457              	.LVL51:
 458 0154 0068     		ldr	r0, [r0]
 459 0156 FFF7FEFF 		bl	Uart_OnceWrite
 460              	.LVL52:
 100:../user/source/main.c ****                 }
 461              		.loc 1 100 0
 462 015a 8AE7     		b	.L16
 463              	.LVL53:
 464              	.L23:
 104:../user/source/main.c ****                     break;
 465              		.loc 1 104 0
 466 015c 01AA     		add	r2, sp, #4
 467 015e 5B48     		ldr	r0, .L36+36
 468              	.LVL54:
 469 0160 FFF7FEFF 		bl	pGetpFrame
 470              	.LVL55:
 471 0164 0028     		cmp	r0, #0
 472 0166 84D0     		beq	.L16
 108:../user/source/main.c ****                     break;
 473              		.loc 1 108 0
 474 0168 05A9     		add	r1, sp, #20
 475 016a 01A8     		add	r0, sp, #4
 476 016c FFF7FEFF 		bl	dwGet698Apdu
 477              	.LVL56:
 478 0170 0146     		mov	r1, r0
 479 0172 0028     		cmp	r0, #0
 480 0174 3FF47DAF 		beq	.L16
 111:../user/source/main.c ****                     break;
 481              		.loc 1 111 0
 482 0178 564A     		ldr	r2, .L36+44
 483 017a 0598     		ldr	r0, [sp, #20]
 484              	.LVL57:
 485 017c FFF7FEFF 		bl	dwAPduAnalyze
 486              	.LVL58:
 487 0180 0028     		cmp	r0, #0
 488 0182 FFF676AF 		blt	.L16
 489 0186 0025     		movs	r5, #0
 490 0188 68E0     		b	.L24
 491              	.LVL59:
 492              	.L28:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 44


 117:../user/source/main.c ****                         continue;
 493              		.loc 1 117 0
 494 018a 05EB4503 		add	r3, r5, r5, lsl #1
 495 018e 514A     		ldr	r2, .L36+44
 496 0190 02EB8303 		add	r3, r2, r3, lsl #2
 497 0194 1B89     		ldrh	r3, [r3, #8]
 498 0196 B3F5005F 		cmp	r3, #8192
 499 019a 5ED1     		bne	.L25
 127:../user/source/main.c ****                         continue;
 500              		.loc 1 127 0
 501 019c 05EB4503 		add	r3, r5, r5, lsl #1
 502 01a0 02EB8303 		add	r3, r2, r3, lsl #2
 503 01a4 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 504 01a6 002B     		cmp	r3, #0
 505 01a8 57D0     		beq	.L25
 129:../user/source/main.c ****                                           *(stCollData.stDataUnit[i].ucPtr + 4));
 506              		.loc 1 129 0
 507 01aa 05EB4503 		add	r3, r5, r5, lsl #1
 508 01ae 02EB8303 		add	r3, r2, r3, lsl #2
 509 01b2 1A69     		ldr	r2, [r3, #16]
 131:../user/source/main.c ****                                           *(stCollData.stDataUnit[i].ucPtr + 7));
 510              		.loc 1 131 0
 511 01b4 D379     		ldrb	r3, [r2, #7]	@ zero_extendqisi2
 512 01b6 9179     		ldrb	r1, [r2, #6]	@ zero_extendqisi2
 513 01b8 43EA0123 		orr	r3, r3, r1, lsl #8
 514 01bc 4649     		ldr	r1, .L36+48
 515 01be 0B60     		str	r3, [r1]
 133:../user/source/main.c ****                                           *(stCollData.stDataUnit[i].ucPtr + 10));
 516              		.loc 1 133 0
 517 01c0 937A     		ldrb	r3, [r2, #10]	@ zero_extendqisi2
 518 01c2 507A     		ldrb	r0, [r2, #9]	@ zero_extendqisi2
 519 01c4 43EA0020 		orr	r0, r3, r0, lsl #8
 520 01c8 444B     		ldr	r3, .L36+52
 521 01ca 1860     		str	r0, [r3]
 136:../user/source/main.c ****                     {
 522              		.loc 1 136 0
 523 01cc 444B     		ldr	r3, .L36+56
 524 01ce 1B68     		ldr	r3, [r3]
 525 01d0 9842     		cmp	r0, r3
 526 01d2 12DC     		bgt	.L26
 136:../user/source/main.c ****                     {
 527              		.loc 1 136 0 is_stmt 0 discriminator 1
 528 01d4 434B     		ldr	r3, .L36+60
 529 01d6 1B68     		ldr	r3, [r3]
 530 01d8 9842     		cmp	r0, r3
 531 01da 0EDB     		blt	.L26
 138:../user/source/main.c ****                         /*ucPtr是指向APDU数据段的指针，以下直接修改APDU原始帧*/
 532              		.loc 1 138 0 is_stmt 1
 533 01dc FFF7FEFF 		bl	Voltage_Modifier_Method
 534              	.LVL60:
 535 01e0 3E49     		ldr	r1, .L36+52
 536 01e2 0860     		str	r0, [r1]
 140:../user/source/main.c ****                         *(stCollData.stDataUnit[i].ucPtr + 4) = MSB(A_Voltage);
 537              		.loc 1 140 0
 538 01e4 05EB4503 		add	r3, r5, r5, lsl #1
 539 01e8 3A4A     		ldr	r2, .L36+44
 540 01ea 02EB8303 		add	r3, r2, r3, lsl #2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 45


 541 01ee 1A69     		ldr	r2, [r3, #16]
 542 01f0 D070     		strb	r0, [r2, #3]
 141:../user/source/main.c ****                     }
 543              		.loc 1 141 0
 544 01f2 1A69     		ldr	r2, [r3, #16]
 545 01f4 0B68     		ldr	r3, [r1]
 546 01f6 1B12     		asrs	r3, r3, #8
 547 01f8 1371     		strb	r3, [r2, #4]
 548              	.L26:
 144:../user/source/main.c ****                     {
 549              		.loc 1 144 0
 550 01fa 374B     		ldr	r3, .L36+48
 551 01fc 1868     		ldr	r0, [r3]
 552 01fe 384B     		ldr	r3, .L36+56
 553 0200 1B68     		ldr	r3, [r3]
 554 0202 9842     		cmp	r0, r3
 555 0204 11DC     		bgt	.L27
 144:../user/source/main.c ****                     {
 556              		.loc 1 144 0 is_stmt 0 discriminator 1
 557 0206 374B     		ldr	r3, .L36+60
 558 0208 1B68     		ldr	r3, [r3]
 559 020a 9842     		cmp	r0, r3
 560 020c 0DDB     		blt	.L27
 146:../user/source/main.c ****                         *(stCollData.stDataUnit[i].ucPtr + 6) = LSB(B_Voltage);
 561              		.loc 1 146 0 is_stmt 1
 562 020e FFF7FEFF 		bl	Voltage_Modifier_Method
 563              	.LVL61:
 564 0212 314B     		ldr	r3, .L36+48
 565 0214 1860     		str	r0, [r3]
 147:../user/source/main.c ****                         *(stCollData.stDataUnit[i].ucPtr + 7) = MSB(B_Voltage);
 566              		.loc 1 147 0
 567 0216 05EB4503 		add	r3, r5, r5, lsl #1
 568 021a 2E4A     		ldr	r2, .L36+44
 569 021c 02EB8303 		add	r3, r2, r3, lsl #2
 570 0220 1A69     		ldr	r2, [r3, #16]
 571 0222 9071     		strb	r0, [r2, #6]
 148:../user/source/main.c ****                     }
 572              		.loc 1 148 0
 573 0224 1B69     		ldr	r3, [r3, #16]
 574 0226 0012     		asrs	r0, r0, #8
 575 0228 D871     		strb	r0, [r3, #7]
 576              	.L27:
 151:../user/source/main.c ****                     {
 577              		.loc 1 151 0
 578 022a 2F4B     		ldr	r3, .L36+64
 579 022c 1868     		ldr	r0, [r3]
 580 022e 2C4B     		ldr	r3, .L36+56
 581 0230 1B68     		ldr	r3, [r3]
 582 0232 9842     		cmp	r0, r3
 583 0234 11DC     		bgt	.L25
 151:../user/source/main.c ****                     {
 584              		.loc 1 151 0 is_stmt 0 discriminator 1
 585 0236 2B4B     		ldr	r3, .L36+60
 586 0238 1B68     		ldr	r3, [r3]
 587 023a 9842     		cmp	r0, r3
 588 023c 0DDB     		blt	.L25
 153:../user/source/main.c ****                         *(stCollData.stDataUnit[i].ucPtr + 9) = LSB(C_Voltage);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 46


 589              		.loc 1 153 0 is_stmt 1
 590 023e FFF7FEFF 		bl	Voltage_Modifier_Method
 591              	.LVL62:
 592 0242 294B     		ldr	r3, .L36+64
 593 0244 1860     		str	r0, [r3]
 154:../user/source/main.c ****                         *(stCollData.stDataUnit[i].ucPtr + 10) = MSB(C_Voltage);
 594              		.loc 1 154 0
 595 0246 05EB4503 		add	r3, r5, r5, lsl #1
 596 024a 224A     		ldr	r2, .L36+44
 597 024c 02EB8303 		add	r3, r2, r3, lsl #2
 598 0250 1A69     		ldr	r2, [r3, #16]
 599 0252 5072     		strb	r0, [r2, #9]
 155:../user/source/main.c ****                     }
 600              		.loc 1 155 0
 601 0254 1B69     		ldr	r3, [r3, #16]
 602 0256 0012     		asrs	r0, r0, #8
 603 0258 9872     		strb	r0, [r3, #10]
 604              	.L25:
 114:../user/source/main.c ****                 {
 605              		.loc 1 114 0 discriminator 2
 606 025a 0135     		adds	r5, r5, #1
 607              	.LVL63:
 608              	.L24:
 114:../user/source/main.c ****                 {
 609              		.loc 1 114 0 is_stmt 0 discriminator 1
 610 025c 1D4B     		ldr	r3, .L36+44
 611 025e 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 612 0260 9D42     		cmp	r5, r3
 613 0262 92D3     		bcc	.L28
 158:../user/source/main.c ****                 //frame -> UartBuf
 614              		.loc 1 158 0 is_stmt 1
 615 0264 01A8     		add	r0, sp, #4
 616 0266 FFF7FEFF 		bl	dwReCalculateFCS
 617              	.LVL64:
 160:../user/source/main.c ****             }
 618              		.loc 1 160 0
 619 026a BDF81020 		ldrh	r2, [sp, #16]
 620 026e 0623     		movs	r3, #6
 621 0270 0232     		adds	r2, r2, #2
 622 0272 0199     		ldr	r1, [sp, #4]
 623 0274 1048     		ldr	r0, .L36+16
 624 0276 0068     		ldr	r0, [r0]
 625 0278 FFF7FEFF 		bl	Uart_OnceWrite
 626              	.LVL65:
 627 027c F9E6     		b	.L16
 628              	.LVL66:
 629              	.L18:
 168:../user/source/main.c ****             /*集中器侧数据帧收帧处理*/
 630              		.loc 1 168 0
 631 027e FFF7FEFF 		bl	vFeedExtWatchDog
 632              	.LVL67:
 170:../user/source/main.c ****             {
 633              		.loc 1 170 0
 634 0282 0D4B     		ldr	r3, .L36+16
 635 0284 1B68     		ldr	r3, [r3]
 636 0286 5868     		ldr	r0, [r3, #4]
 637 0288 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 47


 638              	.LVL68:
 639 028c 10B9     		cbnz	r0, .L29
 172:../user/source/main.c ****             }
 640              		.loc 1 172 0
 641 028e 0D48     		ldr	r0, .L36+28
 642 0290 FFF7FEFF 		bl	RsvFrameHandle
 643              	.LVL69:
 644              	.L29:
 176:../user/source/main.c ****             {
 645              		.loc 1 176 0
 646 0294 094B     		ldr	r3, .L36+20
 647 0296 1B68     		ldr	r3, [r3]
 648 0298 5868     		ldr	r0, [r3, #4]
 649 029a FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 650              	.LVL70:
 651 029e 28B3     		cbz	r0, .L30
 178:../user/source/main.c ****             }
 652              		.loc 1 178 0
 653 02a0 FFF7FEFF 		bl	VoltageTimeOutHandle
 654              	.LVL71:
 655 02a4 67E0     		b	.L31
 656              	.L37:
 657 02a6 00BF     		.align	2
 658              	.L36:
 659 02a8 00000000 		.word	SystemCoreClock
 660 02ac CDCCCCCC 		.word	-858993459
 661 02b0 10E000E0 		.word	-536813552
 662 02b4 00ED00E0 		.word	-536810240
 663 02b8 00000000 		.word	pUartZD
 664 02bc 00000000 		.word	pUartDB
 665 02c0 00000000 		.word	.LANCHOR0
 666 02c4 00000000 		.word	ucApp_Buf_ZD2DB
 667 02c8 00000000 		.word	.LANCHOR1
 668 02cc 00000000 		.word	ucApp_Buf_DB2ZD
 669 02d0 00000000 		.word	Voltage_Change_State
 670 02d4 00000000 		.word	stCollData
 671 02d8 00000000 		.word	B_Voltage
 672 02dc 00000000 		.word	A_Voltage
 673 02e0 00000000 		.word	Voltage_MAX
 674 02e4 00000000 		.word	Voltage_MIN
 675 02e8 00000000 		.word	C_Voltage
 676              	.L30:
 184:../user/source/main.c ****                 {
 677              		.loc 1 184 0
 678 02ec 474B     		ldr	r3, .L38
 679 02ee 1B68     		ldr	r3, [r3]
 680 02f0 4749     		ldr	r1, .L38+4
 681 02f2 5868     		ldr	r0, [r3, #4]
 682 02f4 FFF7FEFF 		bl	blRecvFrame
 683              	.LVL72:
 684 02f8 38BB     		cbnz	r0, .L32
 187:../user/source/main.c ****                         (blTime2_Update(uwTime2FramesCounter, DLT645_FRAMES_DELAY_MAX)))
 685              		.loc 1 187 0
 686 02fa 464B     		ldr	r3, .L38+8
 687 02fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 688 02fe 002B     		cmp	r3, #0
 689 0300 39D1     		bne	.L31
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 48


 188:../user/source/main.c ****                     {
 690              		.loc 1 188 0 discriminator 1
 691 0302 1921     		movs	r1, #25
 692 0304 444B     		ldr	r3, .L38+12
 693 0306 1888     		ldrh	r0, [r3]
 694 0308 FFF7FEFF 		bl	blTime2_Update
 695              	.LVL73:
 187:../user/source/main.c ****                         (blTime2_Update(uwTime2FramesCounter, DLT645_FRAMES_DELAY_MAX)))
 696              		.loc 1 187 0 discriminator 1
 697 030c 0028     		cmp	r0, #0
 698 030e 32D0     		beq	.L31
 191:../user/source/main.c ****                         {
 699              		.loc 1 191 0
 700 0310 4248     		ldr	r0, .L38+16
 701 0312 FFF7FEFF 		bl	blVoltage_Create
 702              	.LVL74:
 703 0316 0028     		cmp	r0, #0
 704 0318 2DD0     		beq	.L31
 193:../user/source/main.c ****                             /*发送电压帧*/
 705              		.loc 1 193 0
 706 031a 414D     		ldr	r5, .L38+20
 707 031c 2B68     		ldr	r3, [r5]
 708 031e 3F48     		ldr	r0, .L38+16
 709 0320 427A     		ldrb	r2, [r0, #9]	@ zero_extendqisi2
 710 0322 9968     		ldr	r1, [r3, #8]
 711 0324 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 712              	.LVL75:
 195:../user/source/main.c ****                             {
 713              		.loc 1 195 0
 714 0328 2B68     		ldr	r3, [r5]
 715 032a 9868     		ldr	r0, [r3, #8]
 716 032c FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 717              	.LVL76:
 718 0330 08BB     		cbnz	r0, .L31
 197:../user/source/main.c ****                                 /*等待电压回帧状态清位*/
 719              		.loc 1 197 0
 720 0332 3C48     		ldr	r0, .L38+24
 721 0334 FFF7FEFF 		bl	Uart_DataPut
 722              	.LVL77:
 199:../user/source/main.c ****                                 /*计时器复位*/
 723              		.loc 1 199 0
 724 0338 0122     		movs	r2, #1
 725 033a 364B     		ldr	r3, .L38+8
 726 033c 1A70     		strb	r2, [r3]
 201:../user/source/main.c ****                                 uwTime2FramesCounter = 0;
 727              		.loc 1 201 0
 728 033e 0023     		movs	r3, #0
 729 0340 394A     		ldr	r2, .L38+28
 730 0342 1370     		strb	r3, [r2]
 202:../user/source/main.c ****                             }
 731              		.loc 1 202 0
 732 0344 344A     		ldr	r2, .L38+12
 733 0346 1380     		strh	r3, [r2]	@ movhi
 734 0348 15E0     		b	.L31
 735              	.L32:
 210:../user/source/main.c ****                     ucDrv_Buf_PutBytes(ucApp_Buf_DB2ZD, pUartZD->pSndbuf, uc645DataDomainLength + 1
 736              		.loc 1 210 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 49


 737 034a 314E     		ldr	r6, .L38+4
 738 034c 3046     		mov	r0, r6
 739 034e FFF7FEFF 		bl	vDBDataID_Handle
 740              	.LVL78:
 211:../user/source/main.c ****                     if (!blDrv_Buf_IsEmpty(pUartZD->pSndbuf))
 741              		.loc 1 211 0
 742 0352 334D     		ldr	r5, .L38+20
 743 0354 2B68     		ldr	r3, [r5]
 744 0356 354A     		ldr	r2, .L38+32
 745 0358 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 746 035a 0C32     		adds	r2, r2, #12
 747 035c 9968     		ldr	r1, [r3, #8]
 748 035e 3046     		mov	r0, r6
 749 0360 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 750              	.LVL79:
 212:../user/source/main.c ****                     {
 751              		.loc 1 212 0
 752 0364 2B68     		ldr	r3, [r5]
 753 0366 9868     		ldr	r0, [r3, #8]
 754 0368 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 755              	.LVL80:
 756 036c 18B9     		cbnz	r0, .L31
 214:../user/source/main.c ****                     }
 757              		.loc 1 214 0
 758 036e 2B68     		ldr	r3, [r5]
 759 0370 1868     		ldr	r0, [r3]
 760 0372 FFF7FEFF 		bl	Uart_DataPut
 761              	.LVL81:
 762              	.L31:
 221:../user/source/main.c ****             {
 763              		.loc 1 221 0
 764 0376 2E4B     		ldr	r3, .L38+36
 765 0378 1B68     		ldr	r3, [r3]
 766 037a 5868     		ldr	r0, [r3, #4]
 767 037c FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 768              	.LVL82:
 769 0380 0028     		cmp	r0, #0
 770 0382 7FF476AE 		bne	.L16
 223:../user/source/main.c ****                 {
 771              		.loc 1 223 0
 772 0386 2A4B     		ldr	r3, .L38+36
 773 0388 1B68     		ldr	r3, [r3]
 774 038a 2A49     		ldr	r1, .L38+40
 775 038c 5868     		ldr	r0, [r3, #4]
 776 038e FFF7FEFF 		bl	blRecvFrame
 777              	.LVL83:
 778 0392 0028     		cmp	r0, #0
 779 0394 3FF46DAE 		beq	.L16
 225:../user/source/main.c ****                     {
 780              		.loc 1 225 0
 781 0398 264B     		ldr	r3, .L38+40
 782 039a 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 783 039c 132B     		cmp	r3, #19
 784 039e 1DD1     		bne	.L33
 227:../user/source/main.c ****                         ucApp_Buf_INFR[2] = 0x01;
 785              		.loc 1 227 0
 786 03a0 2448     		ldr	r0, .L38+40
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 50


 787 03a2 0123     		movs	r3, #1
 788 03a4 4370     		strb	r3, [r0, #1]
 228:../user/source/main.c ****                         ucApp_Buf_INFR[3] = 0x01;
 789              		.loc 1 228 0
 790 03a6 8370     		strb	r3, [r0, #2]
 229:../user/source/main.c ****                         ucApp_Buf_INFR[4] = 0x01;
 791              		.loc 1 229 0
 792 03a8 C370     		strb	r3, [r0, #3]
 230:../user/source/main.c ****                         ucApp_Buf_INFR[5] = 0x01;
 793              		.loc 1 230 0
 794 03aa 0371     		strb	r3, [r0, #4]
 231:../user/source/main.c ****                         ucApp_Buf_INFR[6] = 0x01;
 795              		.loc 1 231 0
 796 03ac 4371     		strb	r3, [r0, #5]
 232:../user/source/main.c ****                         ucApp_Buf_INFR[8] = 0x93;
 797              		.loc 1 232 0
 798 03ae 8371     		strb	r3, [r0, #6]
 233:../user/source/main.c ****                         ucApp_Buf_INFR[9] = 0x06;
 799              		.loc 1 233 0
 800 03b0 9323     		movs	r3, #147
 801 03b2 0372     		strb	r3, [r0, #8]
 234:../user/source/main.c ****                         ucApp_Buf_INFR[10] = 0x34;
 802              		.loc 1 234 0
 803 03b4 0623     		movs	r3, #6
 804 03b6 4372     		strb	r3, [r0, #9]
 235:../user/source/main.c ****                         ucApp_Buf_INFR[11] = 0x34;
 805              		.loc 1 235 0
 806 03b8 3423     		movs	r3, #52
 807 03ba 8372     		strb	r3, [r0, #10]
 236:../user/source/main.c ****                         ucApp_Buf_INFR[12] = 0x34;
 808              		.loc 1 236 0
 809 03bc C372     		strb	r3, [r0, #11]
 237:../user/source/main.c ****                         ucApp_Buf_INFR[13] = 0x34;
 810              		.loc 1 237 0
 811 03be 0373     		strb	r3, [r0, #12]
 238:../user/source/main.c ****                         ucApp_Buf_INFR[14] = 0x34;
 812              		.loc 1 238 0
 813 03c0 4373     		strb	r3, [r0, #13]
 239:../user/source/main.c ****                         ucApp_Buf_INFR[15] = 0x34;
 814              		.loc 1 239 0
 815 03c2 8373     		strb	r3, [r0, #14]
 240:../user/source/main.c ****                         ucApp_Buf_INFR[16] = 0xA7;
 816              		.loc 1 240 0
 817 03c4 C373     		strb	r3, [r0, #15]
 241:../user/source/main.c ****                         ucApp_Buf_INFR[17] = 0x16;
 818              		.loc 1 241 0
 819 03c6 A723     		movs	r3, #167
 820 03c8 0374     		strb	r3, [r0, #16]
 242:../user/source/main.c ****                         ucDrv_Buf_PutBytes(ucApp_Buf_INFR, pUartIR->pSndbuf, 18);
 821              		.loc 1 242 0
 822 03ca 1623     		movs	r3, #22
 823 03cc 4374     		strb	r3, [r0, #17]
 243:../user/source/main.c ****                     }
 824              		.loc 1 243 0
 825 03ce 184B     		ldr	r3, .L38+36
 826 03d0 1B68     		ldr	r3, [r3]
 827 03d2 1222     		movs	r2, #18
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 51


 828 03d4 9968     		ldr	r1, [r3, #8]
 829 03d6 FFF7FEFF 		bl	ucDrv_Buf_PutBytes
 830              	.LVL84:
 831 03da 02E0     		b	.L34
 832              	.L33:
 247:../user/source/main.c ****                     }
 833              		.loc 1 247 0
 834 03dc 1548     		ldr	r0, .L38+40
 835 03de FFF7FEFF 		bl	vINFRDataID_Handle
 836              	.LVL85:
 837              	.L34:
 250:../user/source/main.c ****                     {
 838              		.loc 1 250 0
 839 03e2 134B     		ldr	r3, .L38+36
 840 03e4 1B68     		ldr	r3, [r3]
 841 03e6 9868     		ldr	r0, [r3, #8]
 842 03e8 FFF7FEFF 		bl	blDrv_Buf_IsEmpty
 843              	.LVL86:
 844 03ec 0028     		cmp	r0, #0
 845 03ee 7FF440AE 		bne	.L16
 252:../user/source/main.c ****                         //TIM_CCxCmd(TIM5, TIM_Channel_2, TIM_CCx_Enable);
 846              		.loc 1 252 0
 847 03f2 114D     		ldr	r5, .L38+44
 848 03f4 0022     		movs	r2, #0
 849 03f6 1149     		ldr	r1, .L38+48
 850 03f8 2846     		mov	r0, r5
 851 03fa FFF7FEFF 		bl	USART_ITConfig
 852              	.LVL87:
 254:../user/source/main.c ****                     }
 853              		.loc 1 254 0
 854 03fe 0122     		movs	r2, #1
 855 0400 0F49     		ldr	r1, .L38+52
 856 0402 2846     		mov	r0, r5
 857 0404 FFF7FEFF 		bl	USART_ITConfig
 858              	.LVL88:
 859 0408 33E6     		b	.L16
 860              	.L39:
 861 040a 00BF     		.align	2
 862              	.L38:
 863 040c 00000000 		.word	pUartDB
 864 0410 00000000 		.word	ucApp_Buf_DB2ZD
 865 0414 00000000 		.word	Voltage_Frame_Status
 866 0418 00000000 		.word	uwTime2FramesCounter
 867 041c 00000000 		.word	ucApp_Buf_ZD2DB
 868 0420 00000000 		.word	pUartZD
 869 0424 00380140 		.word	1073821696
 870 0428 00000000 		.word	blFramesCounterStatus
 871 042c 00000000 		.word	uc645DataDomainLength
 872 0430 00000000 		.word	pUartIR
 873 0434 00000000 		.word	ucApp_Buf_INFR
 874 0438 00440040 		.word	1073759232
 875 043c 05010500 		.word	327941
 876 0440 07010700 		.word	459015
 877              		.cfi_endproc
 878              	.LFE111:
 880              		.global	FLAG_UartDB_HasData
 881              		.global	FLAG_UartZD_HasData
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 52


 882              		.comm	stCollData,1532,4
 883              		.section	.bss.FLAG_UartDB_HasData,"aw",%nobits
 884              		.set	.LANCHOR1,. + 0
 887              	FLAG_UartDB_HasData:
 888 0000 00       		.space	1
 889              		.section	.bss.FLAG_UartZD_HasData,"aw",%nobits
 890              		.set	.LANCHOR0,. + 0
 893              	FLAG_UartZD_HasData:
 894 0000 00       		.space	1
 895              		.text
 896              	.Letext0:
 897              		.file 3 "../cmsis/include/stm32f37x.h"
 898              		.file 4 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\machine\\_defaul
 899              		.file 5 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\sys\\_stdint.h"
 900              		.file 6 "../user/include/BaseDef.h"
 901              		.file 7 "../user/include/Uart.h"
 902              		.file 8 "../user/include/DLT645.h"
 903              		.file 9 "../user/include/DLT698_45.h"
 904              		.file 10 "../user/include/DLT698.h"
 905              		.file 11 "../user/include/protocol.h"
 906              		.file 12 "../cmsis/include/system_stm32f37x.h"
 907              		.file 13 "../user/include/Time.h"
 908              		.file 14 "../stdperiph/include/stm32f37x_misc.h"
 909              		.file 15 "../user/include/Flash.h"
 910              		.file 16 "../user/include/GPIO.h"
 911              		.file 17 "../stdperiph/include/stm32f37x_usart.h"
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 53


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s:22     .text.RsvFrameHandle:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s:26     .text.RsvFrameHandle:00000000 RsvFrameHandle
C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s:106    .text.RsvFrameHandle:0000005c $d
C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s:115    .text.VoltageTimeOutHandle:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s:119    .text.VoltageTimeOutHandle:00000000 VoltageTimeOutHandle
C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s:190    .text.VoltageTimeOutHandle:00000054 $d
C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s:199    .text.main:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s:204    .text.main:00000000 main
C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s:659    .text.main:000002a8 $d
                            *COM*:000005fc stCollData
C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s:678    .text.main:000002ec $t
C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s:863    .text.main:0000040c $d
C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s:887    .bss.FLAG_UartDB_HasData:00000000 FLAG_UartDB_HasData
C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s:893    .bss.FLAG_UartZD_HasData:00000000 FLAG_UartZD_HasData
C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s:888    .bss.FLAG_UartDB_HasData:00000000 $d
C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s:894    .bss.FLAG_UartZD_HasData:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
blRecvFrame
ucDrv_Buf_PutBytes
blDrv_Buf_IsEmpty
Uart_DataPut
pUartZD
Voltage_Frame_Status
blFramesCounterStatus
pUartDB
uc645DataDomainLength
blTime2_Update
blVoltage_Create
uwTime2FramesCounter
ucApp_Buf_ZD2DB
NVIC_PriorityGroupConfig
SysTick_CLKSourceConfig
vInterFlash_Init
vGPIO_Init
vFeedExtWatchDog
vUart_Init
vTimer_Init
Voltage_Change_Init
vCurrent_Limit_DefaultSet
vEnergy_Modify_Init
vLed_Light
Uart_idleReadEnable
Uart_idleReadDisable
dwUartCopy
GetProtocolType
Uart_Read
Uart_OnceWrite
pGetpFrame
dwGet698Apdu
dwAPduAnalyze
Voltage_Modifier_Method
dwReCalculateFCS
SystemCoreClock
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccVjEoqn.s 			page 54


ucApp_Buf_DB2ZD
Voltage_Change_State
B_Voltage
A_Voltage
Voltage_MAX
Voltage_MIN
C_Voltage
vDBDataID_Handle
vINFRDataID_Handle
USART_ITConfig
pUartIR
ucApp_Buf_INFR
