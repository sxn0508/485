ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f37x_i2c.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.I2C_DeInit,"ax",%progbits
  22              		.align	2
  23              		.global	I2C_DeInit
  24              		.thumb
  25              		.thumb_func
  27              	I2C_DeInit:
  28              	.LFB111:
  29              		.file 1 "../stdperiph/source/stm32f37x_i2c.c"
   1:../stdperiph/source/stm32f37x_i2c.c **** /**
   2:../stdperiph/source/stm32f37x_i2c.c ****   ******************************************************************************
   3:../stdperiph/source/stm32f37x_i2c.c ****   * @file    stm32f37x_i2c.c
   4:../stdperiph/source/stm32f37x_i2c.c ****   * @author  MCD Application Team
   5:../stdperiph/source/stm32f37x_i2c.c ****   * @version V1.0.0
   6:../stdperiph/source/stm32f37x_i2c.c ****   * @date    20-September-2012
   7:../stdperiph/source/stm32f37x_i2c.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../stdperiph/source/stm32f37x_i2c.c ****   *          functionalities of the Inter-Integrated circuit (I2C):
   9:../stdperiph/source/stm32f37x_i2c.c ****   *           + Initialization and Configuration
  10:../stdperiph/source/stm32f37x_i2c.c ****   *           + Communications handling
  11:../stdperiph/source/stm32f37x_i2c.c ****   *           + SMBUS management
  12:../stdperiph/source/stm32f37x_i2c.c ****   *           + I2C registers management
  13:../stdperiph/source/stm32f37x_i2c.c ****   *           + Data transfers management
  14:../stdperiph/source/stm32f37x_i2c.c ****   *           + DMA transfers management
  15:../stdperiph/source/stm32f37x_i2c.c ****   *           + Interrupts and flags management
  16:../stdperiph/source/stm32f37x_i2c.c ****   *
  17:../stdperiph/source/stm32f37x_i2c.c ****   *  @verbatim
  18:../stdperiph/source/stm32f37x_i2c.c ****  ============================================================================
  19:../stdperiph/source/stm32f37x_i2c.c ****                      ##### How to use this driver #####
  20:../stdperiph/source/stm32f37x_i2c.c ****  ============================================================================
  21:../stdperiph/source/stm32f37x_i2c.c ****    [..]
  22:../stdperiph/source/stm32f37x_i2c.c ****    (#) Enable peripheral clock using RCC_APB1PeriphClockCmd(RCC_APB1Periph_I2Cx, ENABLE)
  23:../stdperiph/source/stm32f37x_i2c.c ****        function for I2C1 or I2C2.
  24:../stdperiph/source/stm32f37x_i2c.c ****    (#) Enable SDA, SCL  and SMBA (when used) GPIO clocks using 
  25:../stdperiph/source/stm32f37x_i2c.c ****        RCC_AHBPeriphClockCmd() function. 
  26:../stdperiph/source/stm32f37x_i2c.c ****    (#) Peripherals alternate function: 
  27:../stdperiph/source/stm32f37x_i2c.c ****        (++) Connect the pin to the desired peripherals' Alternate 
  28:../stdperiph/source/stm32f37x_i2c.c ****             Function (AF) using GPIO_PinAFConfig() function.
  29:../stdperiph/source/stm32f37x_i2c.c ****        (++) Configure the desired pin in alternate function by:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 2


  30:../stdperiph/source/stm32f37x_i2c.c ****             GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  31:../stdperiph/source/stm32f37x_i2c.c ****        (++) Select the type, OpenDrain and speed via 
  32:../stdperiph/source/stm32f37x_i2c.c ****             GPIO_PuPd, GPIO_OType and GPIO_Speed members
  33:../stdperiph/source/stm32f37x_i2c.c ****        (++) Call GPIO_Init() function.
  34:../stdperiph/source/stm32f37x_i2c.c ****    (#) Program the Mode, Timing , Own address, Ack and Acknowledged Address 
  35:../stdperiph/source/stm32f37x_i2c.c ****        using the I2C_Init() function.
  36:../stdperiph/source/stm32f37x_i2c.c ****    (#) Optionally you can enable/configure the following parameters without
  37:../stdperiph/source/stm32f37x_i2c.c ****        re-initialization (i.e there is no need to call again I2C_Init() function):
  38:../stdperiph/source/stm32f37x_i2c.c ****        (++) Enable the acknowledge feature using I2C_AcknowledgeConfig() function.
  39:../stdperiph/source/stm32f37x_i2c.c ****        (++) Enable the dual addressing mode using I2C_DualAddressCmd() function.
  40:../stdperiph/source/stm32f37x_i2c.c ****        (++) Enable the general call using the I2C_GeneralCallCmd() function.
  41:../stdperiph/source/stm32f37x_i2c.c ****        (++) Enable the clock stretching using I2C_StretchClockCmd() function.
  42:../stdperiph/source/stm32f37x_i2c.c ****        (++) Enable the PEC Calculation using I2C_CalculatePEC() function.
  43:../stdperiph/source/stm32f37x_i2c.c ****        (++) For SMBus Mode:
  44:../stdperiph/source/stm32f37x_i2c.c ****             (+++) Enable the SMBusAlert pin using I2C_SMBusAlertCmd() function.
  45:../stdperiph/source/stm32f37x_i2c.c ****    (#) Enable the NVIC and the corresponding interrupt using the function
  46:../stdperiph/source/stm32f37x_i2c.c ****        I2C_ITConfig() if you need to use interrupt mode.
  47:../stdperiph/source/stm32f37x_i2c.c ****    (#) When using the DMA mode 
  48:../stdperiph/source/stm32f37x_i2c.c ****       (++) Configure the DMA using DMA_Init() function.
  49:../stdperiph/source/stm32f37x_i2c.c ****       (++) Active the needed channel Request using I2C_DMACmd() function.
  50:../stdperiph/source/stm32f37x_i2c.c ****    (#) Enable the I2C using the I2C_Cmd() function.
  51:../stdperiph/source/stm32f37x_i2c.c ****    (#) Enable the DMA using the DMA_Cmd() function when using DMA mode in the 
  52:../stdperiph/source/stm32f37x_i2c.c ****        transfers.
  53:../stdperiph/source/stm32f37x_i2c.c ****    [..]        
  54:../stdperiph/source/stm32f37x_i2c.c ****    (@) When using I2C in Fast Mode Plus, SCL and SDA pin 20mA current drive capability
  55:../stdperiph/source/stm32f37x_i2c.c ****        must be enabled by setting the driving capability control bit in SYSCFG.
  56:../stdperiph/source/stm32f37x_i2c.c ****        
  57:../stdperiph/source/stm32f37x_i2c.c ****     @endverbatim
  58:../stdperiph/source/stm32f37x_i2c.c ****   ******************************************************************************
  59:../stdperiph/source/stm32f37x_i2c.c ****   * @attention
  60:../stdperiph/source/stm32f37x_i2c.c ****   *
  61:../stdperiph/source/stm32f37x_i2c.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  62:../stdperiph/source/stm32f37x_i2c.c ****   *
  63:../stdperiph/source/stm32f37x_i2c.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  64:../stdperiph/source/stm32f37x_i2c.c ****   * You may not use this file except in compliance with the License.
  65:../stdperiph/source/stm32f37x_i2c.c ****   * You may obtain a copy of the License at:
  66:../stdperiph/source/stm32f37x_i2c.c ****   *
  67:../stdperiph/source/stm32f37x_i2c.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  68:../stdperiph/source/stm32f37x_i2c.c ****   *
  69:../stdperiph/source/stm32f37x_i2c.c ****   * Unless required by applicable law or agreed to in writing, software 
  70:../stdperiph/source/stm32f37x_i2c.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  71:../stdperiph/source/stm32f37x_i2c.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  72:../stdperiph/source/stm32f37x_i2c.c ****   * See the License for the specific language governing permissions and
  73:../stdperiph/source/stm32f37x_i2c.c ****   * limitations under the License.
  74:../stdperiph/source/stm32f37x_i2c.c ****   *
  75:../stdperiph/source/stm32f37x_i2c.c ****   ******************************************************************************
  76:../stdperiph/source/stm32f37x_i2c.c ****   */
  77:../stdperiph/source/stm32f37x_i2c.c **** 
  78:../stdperiph/source/stm32f37x_i2c.c **** /* Includes ------------------------------------------------------------------*/
  79:../stdperiph/source/stm32f37x_i2c.c **** #include "stm32f37x_i2c.h"
  80:../stdperiph/source/stm32f37x_i2c.c **** #include "stm32f37x_rcc.h"
  81:../stdperiph/source/stm32f37x_i2c.c **** 
  82:../stdperiph/source/stm32f37x_i2c.c **** /** @addtogroup STM32F37x_StdPeriph_Driver
  83:../stdperiph/source/stm32f37x_i2c.c ****   * @{
  84:../stdperiph/source/stm32f37x_i2c.c ****   */
  85:../stdperiph/source/stm32f37x_i2c.c **** 
  86:../stdperiph/source/stm32f37x_i2c.c **** /** @defgroup I2C 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 3


  87:../stdperiph/source/stm32f37x_i2c.c ****   * @brief I2C driver modules
  88:../stdperiph/source/stm32f37x_i2c.c ****   * @{
  89:../stdperiph/source/stm32f37x_i2c.c ****   */
  90:../stdperiph/source/stm32f37x_i2c.c **** 
  91:../stdperiph/source/stm32f37x_i2c.c **** /* Private typedef -----------------------------------------------------------*/
  92:../stdperiph/source/stm32f37x_i2c.c **** /* Private define ------------------------------------------------------------*/
  93:../stdperiph/source/stm32f37x_i2c.c **** 
  94:../stdperiph/source/stm32f37x_i2c.c **** #define CR1_CLEAR_MASK          ((uint32_t)0x00CFE0FF)  /*<! I2C CR1 clear register Mask */
  95:../stdperiph/source/stm32f37x_i2c.c **** #define CR2_CLEAR_MASK          ((uint32_t)0x07FF7FFF)  /*<! I2C CR2 clear register Mask */
  96:../stdperiph/source/stm32f37x_i2c.c **** #define TIMING_CLEAR_MASK       ((uint32_t)0xF0FFFFFF)  /*<! I2C TIMING clear register Mask */
  97:../stdperiph/source/stm32f37x_i2c.c **** #define ERROR_IT_MASK           ((uint32_t)0x00003F00)  /*<! I2C Error interrupt register Mask */
  98:../stdperiph/source/stm32f37x_i2c.c **** #define TC_IT_MASK              ((uint32_t)0x000000C0)  /*<! I2C TC interrupt register Mask */
  99:../stdperiph/source/stm32f37x_i2c.c **** 
 100:../stdperiph/source/stm32f37x_i2c.c **** /* Private macro -------------------------------------------------------------*/
 101:../stdperiph/source/stm32f37x_i2c.c **** /* Private variables ---------------------------------------------------------*/
 102:../stdperiph/source/stm32f37x_i2c.c **** /* Private function prototypes -----------------------------------------------*/
 103:../stdperiph/source/stm32f37x_i2c.c **** /* Private functions ---------------------------------------------------------*/
 104:../stdperiph/source/stm32f37x_i2c.c **** 
 105:../stdperiph/source/stm32f37x_i2c.c **** /** @defgroup I2C_Private_Functions
 106:../stdperiph/source/stm32f37x_i2c.c ****   * @{
 107:../stdperiph/source/stm32f37x_i2c.c ****   */
 108:../stdperiph/source/stm32f37x_i2c.c **** 
 109:../stdperiph/source/stm32f37x_i2c.c **** 
 110:../stdperiph/source/stm32f37x_i2c.c **** /** @defgroup I2C_Group1 Initialization and Configuration functions
 111:../stdperiph/source/stm32f37x_i2c.c ****  *  @brief   Initialization and Configuration functions 
 112:../stdperiph/source/stm32f37x_i2c.c ****  *
 113:../stdperiph/source/stm32f37x_i2c.c **** @verbatim   
 114:../stdperiph/source/stm32f37x_i2c.c ****  ===============================================================================
 115:../stdperiph/source/stm32f37x_i2c.c ****            ##### Initialization and Configuration functions #####
 116:../stdperiph/source/stm32f37x_i2c.c ****  ===============================================================================
 117:../stdperiph/source/stm32f37x_i2c.c ****     [..] This section provides a set of functions allowing to initialize the I2C Mode,
 118:../stdperiph/source/stm32f37x_i2c.c ****          I2C Timing, I2C filters, I2C Addressing mode, I2C OwnAddress1.
 119:../stdperiph/source/stm32f37x_i2c.c **** 
 120:../stdperiph/source/stm32f37x_i2c.c ****     [..] The I2C_Init() function follows the I2C configuration procedures (these procedures 
 121:../stdperiph/source/stm32f37x_i2c.c ****          are available in reference manual).
 122:../stdperiph/source/stm32f37x_i2c.c **** 
 123:../stdperiph/source/stm32f37x_i2c.c ****     [..] When the Software Reset is performed using I2C_SoftwareResetCmd() function, the internal
 124:../stdperiph/source/stm32f37x_i2c.c ****          states machines are reset and communication control bits, as well as status bits come 
 125:../stdperiph/source/stm32f37x_i2c.c ****          back to their reset value.
 126:../stdperiph/source/stm32f37x_i2c.c **** 
 127:../stdperiph/source/stm32f37x_i2c.c ****     [..] Before enabling Stop mode using I2C_StopModeCmd() I2C Clock source must be set to
 128:../stdperiph/source/stm32f37x_i2c.c ****          HSI and Digital filters must be disabled.
 129:../stdperiph/source/stm32f37x_i2c.c **** 
 130:../stdperiph/source/stm32f37x_i2c.c ****     [..] Before enabling Own Address 2 via I2C_DualAddressCmd() function, OA2 and mask should be
 131:../stdperiph/source/stm32f37x_i2c.c ****          configured using I2C_OwnAddress2Config() function.
 132:../stdperiph/source/stm32f37x_i2c.c **** 
 133:../stdperiph/source/stm32f37x_i2c.c ****     [..] I2C_SlaveByteControlCmd() enable Slave byte control that allow user to get control of 
 134:../stdperiph/source/stm32f37x_i2c.c ****          each byte in slave mode when NBYTES is set to 0x01.
 135:../stdperiph/source/stm32f37x_i2c.c **** 
 136:../stdperiph/source/stm32f37x_i2c.c **** @endverbatim
 137:../stdperiph/source/stm32f37x_i2c.c ****   * @{
 138:../stdperiph/source/stm32f37x_i2c.c ****   */
 139:../stdperiph/source/stm32f37x_i2c.c **** 
 140:../stdperiph/source/stm32f37x_i2c.c **** /**
 141:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Deinitializes the I2Cx peripheral registers to their default reset values.
 142:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 143:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 4


 144:../stdperiph/source/stm32f37x_i2c.c ****   */
 145:../stdperiph/source/stm32f37x_i2c.c **** void I2C_DeInit(I2C_TypeDef* I2Cx)
 146:../stdperiph/source/stm32f37x_i2c.c **** {
  30              		.loc 1 146 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 147:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
 148:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 149:../stdperiph/source/stm32f37x_i2c.c **** 
 150:../stdperiph/source/stm32f37x_i2c.c ****   if (I2Cx == I2C1)
  40              		.loc 1 150 0
  41 0002 0C4B     		ldr	r3, .L5
  42 0004 9842     		cmp	r0, r3
  43 0006 0AD1     		bne	.L2
 151:../stdperiph/source/stm32f37x_i2c.c ****   {
 152:../stdperiph/source/stm32f37x_i2c.c ****     /* Enable I2C1 reset state */
 153:../stdperiph/source/stm32f37x_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C1, ENABLE);
  44              		.loc 1 153 0
  45 0008 0121     		movs	r1, #1
  46 000a 4FF40010 		mov	r0, #2097152
  47              	.LVL1:
  48 000e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  49              	.LVL2:
 154:../stdperiph/source/stm32f37x_i2c.c ****     /* Release I2C1 from reset state */
 155:../stdperiph/source/stm32f37x_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C1, DISABLE);
  50              		.loc 1 155 0
  51 0012 0021     		movs	r1, #0
  52 0014 4FF40010 		mov	r0, #2097152
  53 0018 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  54              	.LVL3:
  55 001c 08BD     		pop	{r3, pc}
  56              	.LVL4:
  57              	.L2:
 156:../stdperiph/source/stm32f37x_i2c.c ****   }
 157:../stdperiph/source/stm32f37x_i2c.c ****   else
 158:../stdperiph/source/stm32f37x_i2c.c ****   {
 159:../stdperiph/source/stm32f37x_i2c.c ****     /* Enable I2C2 reset state */
 160:../stdperiph/source/stm32f37x_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C2, ENABLE);
  58              		.loc 1 160 0
  59 001e 0121     		movs	r1, #1
  60 0020 4FF48000 		mov	r0, #4194304
  61              	.LVL5:
  62 0024 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  63              	.LVL6:
 161:../stdperiph/source/stm32f37x_i2c.c ****     /* Release I2C2 from reset state */
 162:../stdperiph/source/stm32f37x_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C2, DISABLE);
  64              		.loc 1 162 0
  65 0028 0021     		movs	r1, #0
  66 002a 4FF48000 		mov	r0, #4194304
  67 002e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 5


  68              	.LVL7:
  69 0032 08BD     		pop	{r3, pc}
  70              	.L6:
  71              		.align	2
  72              	.L5:
  73 0034 00540040 		.word	1073763328
  74              		.cfi_endproc
  75              	.LFE111:
  77              		.section	.text.I2C_Init,"ax",%progbits
  78              		.align	2
  79              		.global	I2C_Init
  80              		.thumb
  81              		.thumb_func
  83              	I2C_Init:
  84              	.LFB112:
 163:../stdperiph/source/stm32f37x_i2c.c ****   }
 164:../stdperiph/source/stm32f37x_i2c.c **** }
 165:../stdperiph/source/stm32f37x_i2c.c **** 
 166:../stdperiph/source/stm32f37x_i2c.c **** /**
 167:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Initializes the I2Cx peripheral according to the specified
 168:../stdperiph/source/stm32f37x_i2c.c ****   *         parameters in the I2C_InitStruct.
 169:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 170:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2C_InitStruct: pointer to a I2C_InitTypeDef structure that
 171:../stdperiph/source/stm32f37x_i2c.c ****   *         contains the configuration information for the specified I2C peripheral.
 172:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
 173:../stdperiph/source/stm32f37x_i2c.c ****   */
 174:../stdperiph/source/stm32f37x_i2c.c **** void I2C_Init(I2C_TypeDef* I2Cx, I2C_InitTypeDef* I2C_InitStruct)
 175:../stdperiph/source/stm32f37x_i2c.c **** {
  85              		.loc 1 175 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		@ link register save eliminated.
  90              	.LVL8:
  91 0000 10B4     		push	{r4}
  92              	.LCFI1:
  93              		.cfi_def_cfa_offset 4
  94              		.cfi_offset 4, -4
  95              	.LVL9:
 176:../stdperiph/source/stm32f37x_i2c.c ****   uint32_t tmpreg = 0;
 177:../stdperiph/source/stm32f37x_i2c.c **** 
 178:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
 179:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 180:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ANALOG_FILTER(I2C_InitStruct->I2C_AnalogFilter));
 181:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_DIGITAL_FILTER(I2C_InitStruct->I2C_DigitalFilter));
 182:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_MODE(I2C_InitStruct->I2C_Mode));
 183:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS1(I2C_InitStruct->I2C_OwnAddress1));
 184:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ACK(I2C_InitStruct->I2C_Ack));
 185:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ACKNOWLEDGE_ADDRESS(I2C_InitStruct->I2C_AcknowledgedAddress));
 186:../stdperiph/source/stm32f37x_i2c.c **** 
 187:../stdperiph/source/stm32f37x_i2c.c ****   /* Disable I2Cx Peripheral */
 188:../stdperiph/source/stm32f37x_i2c.c ****   I2Cx->CR1 &= (uint32_t)~((uint32_t)I2C_CR1_PE);
  96              		.loc 1 188 0
  97 0002 0368     		ldr	r3, [r0]
  98 0004 23F00103 		bic	r3, r3, #1
  99 0008 0360     		str	r3, [r0]
 189:../stdperiph/source/stm32f37x_i2c.c **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 6


 190:../stdperiph/source/stm32f37x_i2c.c ****   /*---------------------------- I2Cx FILTERS Configuration ------------------*/
 191:../stdperiph/source/stm32f37x_i2c.c ****   /* Get the I2Cx CR1 value */
 192:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg = I2Cx->CR1;
 100              		.loc 1 192 0
 101 000a 0368     		ldr	r3, [r0]
 102              	.LVL10:
 193:../stdperiph/source/stm32f37x_i2c.c ****   /* Clear I2Cx CR1 register */
 194:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg &= CR1_CLEAR_MASK;
 103              		.loc 1 194 0
 104 000c 144A     		ldr	r2, .L9
 105 000e 1A40     		ands	r2, r2, r3
 106              	.LVL11:
 195:../stdperiph/source/stm32f37x_i2c.c ****   /* Configure I2Cx: analog and digital filter */
 196:../stdperiph/source/stm32f37x_i2c.c ****   /* Set ANFOFF bit according to I2C_AnalogFilter value */
 197:../stdperiph/source/stm32f37x_i2c.c ****   /* Set DFN bits according to I2C_DigitalFilter value */
 198:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg |= (uint32_t)I2C_InitStruct->I2C_AnalogFilter |(I2C_InitStruct->I2C_DigitalFilter << 8);
 107              		.loc 1 198 0
 108 0010 4B68     		ldr	r3, [r1, #4]
 109 0012 8C68     		ldr	r4, [r1, #8]
 110 0014 43EA0423 		orr	r3, r3, r4, lsl #8
 111 0018 1343     		orrs	r3, r3, r2
 112              	.LVL12:
 199:../stdperiph/source/stm32f37x_i2c.c ****   
 200:../stdperiph/source/stm32f37x_i2c.c ****   /* Write to I2Cx CR1 */
 201:../stdperiph/source/stm32f37x_i2c.c ****   I2Cx->CR1 = tmpreg;
 113              		.loc 1 201 0
 114 001a 0360     		str	r3, [r0]
 202:../stdperiph/source/stm32f37x_i2c.c **** 
 203:../stdperiph/source/stm32f37x_i2c.c ****   /*---------------------------- I2Cx TIMING Configuration -------------------*/
 204:../stdperiph/source/stm32f37x_i2c.c ****   /* Configure I2Cx: Timing */
 205:../stdperiph/source/stm32f37x_i2c.c ****   /* Set TIMINGR bits according to I2C_Timing */
 206:../stdperiph/source/stm32f37x_i2c.c ****   /* Write to I2Cx TIMING */
 207:../stdperiph/source/stm32f37x_i2c.c ****   I2Cx->TIMINGR = I2C_InitStruct->I2C_Timing & TIMING_CLEAR_MASK;
 115              		.loc 1 207 0
 116 001c 0B68     		ldr	r3, [r1]
 117              	.LVL13:
 118 001e 23F07063 		bic	r3, r3, #251658240
 119 0022 0361     		str	r3, [r0, #16]
 120              	.LVL14:
 208:../stdperiph/source/stm32f37x_i2c.c **** 
 209:../stdperiph/source/stm32f37x_i2c.c ****   /* Enable I2Cx Peripheral */
 210:../stdperiph/source/stm32f37x_i2c.c ****   I2Cx->CR1 |= I2C_CR1_PE;
 121              		.loc 1 210 0
 122 0024 0368     		ldr	r3, [r0]
 123 0026 43F00103 		orr	r3, r3, #1
 124 002a 0360     		str	r3, [r0]
 125              	.LVL15:
 211:../stdperiph/source/stm32f37x_i2c.c **** 
 212:../stdperiph/source/stm32f37x_i2c.c ****   /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
 213:../stdperiph/source/stm32f37x_i2c.c ****   /* Clear tmpreg local variable */
 214:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg = 0;
 215:../stdperiph/source/stm32f37x_i2c.c ****   /* Clear OAR1 register */
 216:../stdperiph/source/stm32f37x_i2c.c ****   I2Cx->OAR1 = (uint32_t)tmpreg;
 126              		.loc 1 216 0
 127 002c 0023     		movs	r3, #0
 128 002e 8360     		str	r3, [r0, #8]
 217:../stdperiph/source/stm32f37x_i2c.c ****   /* Clear OAR2 register */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 7


 218:../stdperiph/source/stm32f37x_i2c.c ****   I2Cx->OAR2 = (uint32_t)tmpreg;
 129              		.loc 1 218 0
 130 0030 C360     		str	r3, [r0, #12]
 219:../stdperiph/source/stm32f37x_i2c.c ****   /* Configure I2Cx: Own Address1 and acknowledged address */
 220:../stdperiph/source/stm32f37x_i2c.c ****   /* Set OA1MODE bit according to I2C_AcknowledgedAddress value */
 221:../stdperiph/source/stm32f37x_i2c.c ****   /* Set OA1 bits according to I2C_OwnAddress1 value */
 222:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg = (uint32_t)((uint32_t)I2C_InitStruct->I2C_AcknowledgedAddress | \
 131              		.loc 1 222 0
 132 0032 8A69     		ldr	r2, [r1, #24]
 223:../stdperiph/source/stm32f37x_i2c.c ****                       (uint32_t)I2C_InitStruct->I2C_OwnAddress1);
 133              		.loc 1 223 0
 134 0034 0B69     		ldr	r3, [r1, #16]
 222:../stdperiph/source/stm32f37x_i2c.c ****                       (uint32_t)I2C_InitStruct->I2C_OwnAddress1);
 135              		.loc 1 222 0
 136 0036 1343     		orrs	r3, r3, r2
 137              	.LVL16:
 224:../stdperiph/source/stm32f37x_i2c.c ****   /* Write to I2Cx OAR1 */
 225:../stdperiph/source/stm32f37x_i2c.c ****   I2Cx->OAR1 = tmpreg;
 138              		.loc 1 225 0
 139 0038 8360     		str	r3, [r0, #8]
 226:../stdperiph/source/stm32f37x_i2c.c ****   /* Enable Own Address1 acknowledgement */
 227:../stdperiph/source/stm32f37x_i2c.c ****   I2Cx->OAR1 |= I2C_OAR1_OA1EN;
 140              		.loc 1 227 0
 141 003a 8368     		ldr	r3, [r0, #8]
 142              	.LVL17:
 143 003c 43F40043 		orr	r3, r3, #32768
 144 0040 8360     		str	r3, [r0, #8]
 145              	.LVL18:
 228:../stdperiph/source/stm32f37x_i2c.c **** 
 229:../stdperiph/source/stm32f37x_i2c.c ****   /*---------------------------- I2Cx MODE Configuration ---------------------*/
 230:../stdperiph/source/stm32f37x_i2c.c ****   /* Configure I2Cx: mode */
 231:../stdperiph/source/stm32f37x_i2c.c ****   /* Set SMBDEN and SMBHEN bits according to I2C_Mode value */
 232:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg = I2C_InitStruct->I2C_Mode;
 146              		.loc 1 232 0
 147 0042 CA68     		ldr	r2, [r1, #12]
 148              	.LVL19:
 233:../stdperiph/source/stm32f37x_i2c.c ****   /* Write to I2Cx CR1 */
 234:../stdperiph/source/stm32f37x_i2c.c ****   I2Cx->CR1 |= tmpreg;
 149              		.loc 1 234 0
 150 0044 0368     		ldr	r3, [r0]
 151 0046 1343     		orrs	r3, r3, r2
 152 0048 0360     		str	r3, [r0]
 235:../stdperiph/source/stm32f37x_i2c.c **** 
 236:../stdperiph/source/stm32f37x_i2c.c ****   /*---------------------------- I2Cx ACK Configuration ----------------------*/
 237:../stdperiph/source/stm32f37x_i2c.c ****   /* Get the I2Cx CR2 value */
 238:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg = I2Cx->CR2;
 153              		.loc 1 238 0
 154 004a 4368     		ldr	r3, [r0, #4]
 155              	.LVL20:
 239:../stdperiph/source/stm32f37x_i2c.c ****   /* Clear I2Cx CR2 register */
 240:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg &= CR2_CLEAR_MASK;
 156              		.loc 1 240 0
 157 004c 23F07843 		bic	r3, r3, #-134217728
 158              	.LVL21:
 159 0050 23F40043 		bic	r3, r3, #32768
 160              	.LVL22:
 241:../stdperiph/source/stm32f37x_i2c.c ****   /* Configure I2Cx: acknowledgement */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 8


 242:../stdperiph/source/stm32f37x_i2c.c ****   /* Set NACK bit according to I2C_Ack value */
 243:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg |= I2C_InitStruct->I2C_Ack;
 161              		.loc 1 243 0
 162 0054 4A69     		ldr	r2, [r1, #20]
 163 0056 1343     		orrs	r3, r3, r2
 164              	.LVL23:
 244:../stdperiph/source/stm32f37x_i2c.c ****   /* Write to I2Cx CR2 */
 245:../stdperiph/source/stm32f37x_i2c.c ****   I2Cx->CR2 = tmpreg;
 165              		.loc 1 245 0
 166 0058 4360     		str	r3, [r0, #4]
 246:../stdperiph/source/stm32f37x_i2c.c **** }
 167              		.loc 1 246 0
 168 005a 5DF8044B 		ldr	r4, [sp], #4
 169              	.LCFI2:
 170              		.cfi_restore 4
 171              		.cfi_def_cfa_offset 0
 172 005e 7047     		bx	lr
 173              	.L10:
 174              		.align	2
 175              	.L9:
 176 0060 FFE0CF00 		.word	13623551
 177              		.cfi_endproc
 178              	.LFE112:
 180              		.section	.text.I2C_StructInit,"ax",%progbits
 181              		.align	2
 182              		.global	I2C_StructInit
 183              		.thumb
 184              		.thumb_func
 186              	I2C_StructInit:
 187              	.LFB113:
 247:../stdperiph/source/stm32f37x_i2c.c **** 
 248:../stdperiph/source/stm32f37x_i2c.c **** /**
 249:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Fills each I2C_InitStruct member with its default value.
 250:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2C_InitStruct: pointer to an I2C_InitTypeDef structure which will be initialized.
 251:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
 252:../stdperiph/source/stm32f37x_i2c.c ****   */
 253:../stdperiph/source/stm32f37x_i2c.c **** void I2C_StructInit(I2C_InitTypeDef* I2C_InitStruct)
 254:../stdperiph/source/stm32f37x_i2c.c **** {
 188              		.loc 1 254 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 193              	.LVL24:
 255:../stdperiph/source/stm32f37x_i2c.c ****   /*---------------- Reset I2C init structure parameters values --------------*/
 256:../stdperiph/source/stm32f37x_i2c.c ****   /* Initialize the I2C_Timing member */
 257:../stdperiph/source/stm32f37x_i2c.c ****   I2C_InitStruct->I2C_Timing = 0;
 194              		.loc 1 257 0
 195 0000 0023     		movs	r3, #0
 196 0002 0360     		str	r3, [r0]
 258:../stdperiph/source/stm32f37x_i2c.c ****   /* Initialize the I2C_AnalogFilter member */
 259:../stdperiph/source/stm32f37x_i2c.c ****   I2C_InitStruct->I2C_AnalogFilter = I2C_AnalogFilter_Enable;
 197              		.loc 1 259 0
 198 0004 4360     		str	r3, [r0, #4]
 260:../stdperiph/source/stm32f37x_i2c.c ****   /* Initialize the I2C_DigitalFilter member */
 261:../stdperiph/source/stm32f37x_i2c.c ****   I2C_InitStruct->I2C_DigitalFilter = 0;
 199              		.loc 1 261 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 9


 200 0006 8360     		str	r3, [r0, #8]
 262:../stdperiph/source/stm32f37x_i2c.c ****   /* Initialize the I2C_Mode member */
 263:../stdperiph/source/stm32f37x_i2c.c ****   I2C_InitStruct->I2C_Mode = I2C_Mode_I2C;
 201              		.loc 1 263 0
 202 0008 C360     		str	r3, [r0, #12]
 264:../stdperiph/source/stm32f37x_i2c.c ****   /* Initialize the I2C_OwnAddress1 member */
 265:../stdperiph/source/stm32f37x_i2c.c ****   I2C_InitStruct->I2C_OwnAddress1 = 0;
 203              		.loc 1 265 0
 204 000a 0361     		str	r3, [r0, #16]
 266:../stdperiph/source/stm32f37x_i2c.c ****   /* Initialize the I2C_Ack member */
 267:../stdperiph/source/stm32f37x_i2c.c ****   I2C_InitStruct->I2C_Ack = I2C_Ack_Disable;
 205              		.loc 1 267 0
 206 000c 4FF40042 		mov	r2, #32768
 207 0010 4261     		str	r2, [r0, #20]
 268:../stdperiph/source/stm32f37x_i2c.c ****   /* Initialize the I2C_AcknowledgedAddress member */
 269:../stdperiph/source/stm32f37x_i2c.c ****   I2C_InitStruct->I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit;
 208              		.loc 1 269 0
 209 0012 8361     		str	r3, [r0, #24]
 210 0014 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE113:
 214 0016 00BF     		.section	.text.I2C_Cmd,"ax",%progbits
 215              		.align	2
 216              		.global	I2C_Cmd
 217              		.thumb
 218              		.thumb_func
 220              	I2C_Cmd:
 221              	.LFB114:
 270:../stdperiph/source/stm32f37x_i2c.c **** }
 271:../stdperiph/source/stm32f37x_i2c.c **** 
 272:../stdperiph/source/stm32f37x_i2c.c **** /**
 273:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Enables or disables the specified I2C peripheral.
 274:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 275:../stdperiph/source/stm32f37x_i2c.c ****   * @param  NewState: new state of the I2Cx peripheral. 
 276:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 277:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
 278:../stdperiph/source/stm32f37x_i2c.c ****   */
 279:../stdperiph/source/stm32f37x_i2c.c **** void I2C_Cmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 280:../stdperiph/source/stm32f37x_i2c.c **** {
 222              		.loc 1 280 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226              		@ link register save eliminated.
 227              	.LVL25:
 281:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
 282:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 283:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 284:../stdperiph/source/stm32f37x_i2c.c ****   if (NewState != DISABLE)
 228              		.loc 1 284 0
 229 0000 21B1     		cbz	r1, .L13
 285:../stdperiph/source/stm32f37x_i2c.c ****   {
 286:../stdperiph/source/stm32f37x_i2c.c ****     /* Enable the selected I2C peripheral */
 287:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR1 |= I2C_CR1_PE;
 230              		.loc 1 287 0
 231 0002 0368     		ldr	r3, [r0]
 232 0004 43F00103 		orr	r3, r3, #1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 10


 233 0008 0360     		str	r3, [r0]
 234 000a 7047     		bx	lr
 235              	.L13:
 288:../stdperiph/source/stm32f37x_i2c.c ****   }
 289:../stdperiph/source/stm32f37x_i2c.c ****   else
 290:../stdperiph/source/stm32f37x_i2c.c ****   {
 291:../stdperiph/source/stm32f37x_i2c.c ****     /* Disable the selected I2C peripheral */
 292:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR1 &= (uint32_t)~((uint32_t)I2C_CR1_PE);
 236              		.loc 1 292 0
 237 000c 0368     		ldr	r3, [r0]
 238 000e 23F00103 		bic	r3, r3, #1
 239 0012 0360     		str	r3, [r0]
 240 0014 7047     		bx	lr
 241              		.cfi_endproc
 242              	.LFE114:
 244 0016 00BF     		.section	.text.I2C_SoftwareResetCmd,"ax",%progbits
 245              		.align	2
 246              		.global	I2C_SoftwareResetCmd
 247              		.thumb
 248              		.thumb_func
 250              	I2C_SoftwareResetCmd:
 251              	.LFB115:
 293:../stdperiph/source/stm32f37x_i2c.c ****   }
 294:../stdperiph/source/stm32f37x_i2c.c **** }
 295:../stdperiph/source/stm32f37x_i2c.c **** 
 296:../stdperiph/source/stm32f37x_i2c.c **** 
 297:../stdperiph/source/stm32f37x_i2c.c **** /**
 298:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Enables or disables the specified I2C software reset.
 299:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 300:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
 301:../stdperiph/source/stm32f37x_i2c.c ****   */
 302:../stdperiph/source/stm32f37x_i2c.c **** void I2C_SoftwareResetCmd(I2C_TypeDef* I2Cx)
 303:../stdperiph/source/stm32f37x_i2c.c **** {
 252              		.loc 1 303 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              		@ link register save eliminated.
 257              	.LVL26:
 304:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
 305:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 306:../stdperiph/source/stm32f37x_i2c.c **** 
 307:../stdperiph/source/stm32f37x_i2c.c ****   /* Disable peripheral */
 308:../stdperiph/source/stm32f37x_i2c.c ****   I2Cx->CR1 &= (uint32_t)~((uint32_t)I2C_CR1_PE);
 258              		.loc 1 308 0
 259 0000 0368     		ldr	r3, [r0]
 260 0002 23F00103 		bic	r3, r3, #1
 261 0006 0360     		str	r3, [r0]
 309:../stdperiph/source/stm32f37x_i2c.c **** 
 310:../stdperiph/source/stm32f37x_i2c.c ****   /* Perform a dummy read to delay the disable of peripheral for minimum
 311:../stdperiph/source/stm32f37x_i2c.c ****      3 APB clock cycles to perform the software reset functionality */
 312:../stdperiph/source/stm32f37x_i2c.c ****   *(__IO uint32_t *)(uint32_t)I2Cx; 
 262              		.loc 1 312 0
 263 0008 0368     		ldr	r3, [r0]
 313:../stdperiph/source/stm32f37x_i2c.c **** 
 314:../stdperiph/source/stm32f37x_i2c.c ****   /* Enable peripheral */
 315:../stdperiph/source/stm32f37x_i2c.c ****   I2Cx->CR1 |= I2C_CR1_PE;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 11


 264              		.loc 1 315 0
 265 000a 0368     		ldr	r3, [r0]
 266 000c 43F00103 		orr	r3, r3, #1
 267 0010 0360     		str	r3, [r0]
 268 0012 7047     		bx	lr
 269              		.cfi_endproc
 270              	.LFE115:
 272              		.section	.text.I2C_ITConfig,"ax",%progbits
 273              		.align	2
 274              		.global	I2C_ITConfig
 275              		.thumb
 276              		.thumb_func
 278              	I2C_ITConfig:
 279              	.LFB116:
 316:../stdperiph/source/stm32f37x_i2c.c **** }
 317:../stdperiph/source/stm32f37x_i2c.c **** 
 318:../stdperiph/source/stm32f37x_i2c.c **** /**
 319:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Enables or disables the specified I2C interrupts.
 320:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 321:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2C_IT: specifies the I2C interrupts sources to be enabled or disabled. 
 322:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be any combination of the following values:
 323:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_ERRI: Error interrupt mask
 324:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_TCI: Transfer Complete interrupt mask
 325:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_STOPI: Stop Detection interrupt mask
 326:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_NACKI: Not Acknowledge received interrupt mask
 327:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_ADDRI: Address Match interrupt mask  
 328:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_RXI: RX interrupt mask
 329:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_TXI: TX interrupt mask
 330:../stdperiph/source/stm32f37x_i2c.c ****   * @param  NewState: new state of the specified I2C interrupts.
 331:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 332:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
 333:../stdperiph/source/stm32f37x_i2c.c ****   */
 334:../stdperiph/source/stm32f37x_i2c.c **** void I2C_ITConfig(I2C_TypeDef* I2Cx, uint32_t I2C_IT, FunctionalState NewState)
 335:../stdperiph/source/stm32f37x_i2c.c **** {
 280              		.loc 1 335 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 285              	.LVL27:
 336:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
 337:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 338:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 339:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_CONFIG_IT(I2C_IT));
 340:../stdperiph/source/stm32f37x_i2c.c ****   
 341:../stdperiph/source/stm32f37x_i2c.c ****   if (NewState != DISABLE)
 286              		.loc 1 341 0
 287 0000 1AB1     		cbz	r2, .L17
 342:../stdperiph/source/stm32f37x_i2c.c ****   {
 343:../stdperiph/source/stm32f37x_i2c.c ****     /* Enable the selected I2C interrupts */
 344:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR1 |= I2C_IT;
 288              		.loc 1 344 0
 289 0002 0368     		ldr	r3, [r0]
 290 0004 1943     		orrs	r1, r1, r3
 291              	.LVL28:
 292 0006 0160     		str	r1, [r0]
 293 0008 7047     		bx	lr
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 12


 294              	.LVL29:
 295              	.L17:
 345:../stdperiph/source/stm32f37x_i2c.c ****   }
 346:../stdperiph/source/stm32f37x_i2c.c ****   else
 347:../stdperiph/source/stm32f37x_i2c.c ****   {
 348:../stdperiph/source/stm32f37x_i2c.c ****     /* Disable the selected I2C interrupts */
 349:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR1 &= (uint32_t)~((uint32_t)I2C_IT);
 296              		.loc 1 349 0
 297 000a 0368     		ldr	r3, [r0]
 298 000c 23EA0101 		bic	r1, r3, r1
 299              	.LVL30:
 300 0010 0160     		str	r1, [r0]
 301 0012 7047     		bx	lr
 302              		.cfi_endproc
 303              	.LFE116:
 305              		.section	.text.I2C_StretchClockCmd,"ax",%progbits
 306              		.align	2
 307              		.global	I2C_StretchClockCmd
 308              		.thumb
 309              		.thumb_func
 311              	I2C_StretchClockCmd:
 312              	.LFB117:
 350:../stdperiph/source/stm32f37x_i2c.c ****   }
 351:../stdperiph/source/stm32f37x_i2c.c **** }
 352:../stdperiph/source/stm32f37x_i2c.c **** 
 353:../stdperiph/source/stm32f37x_i2c.c **** /**
 354:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Enables or disables the I2C Clock stretching.
 355:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 356:../stdperiph/source/stm32f37x_i2c.c ****   * @param  NewState: new state of the I2Cx Clock stretching.
 357:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 358:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
 359:../stdperiph/source/stm32f37x_i2c.c ****   */
 360:../stdperiph/source/stm32f37x_i2c.c **** void I2C_StretchClockCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 361:../stdperiph/source/stm32f37x_i2c.c **** {
 313              		.loc 1 361 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              		@ link register save eliminated.
 318              	.LVL31:
 362:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
 363:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 364:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 365:../stdperiph/source/stm32f37x_i2c.c ****   
 366:../stdperiph/source/stm32f37x_i2c.c ****   if (NewState != DISABLE)
 319              		.loc 1 366 0
 320 0000 21B1     		cbz	r1, .L20
 367:../stdperiph/source/stm32f37x_i2c.c ****   {
 368:../stdperiph/source/stm32f37x_i2c.c ****     /* Enable clock stretching */
 369:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR1 &= (uint32_t)~((uint32_t)I2C_CR1_NOSTRETCH);    
 321              		.loc 1 369 0
 322 0002 0368     		ldr	r3, [r0]
 323 0004 23F40033 		bic	r3, r3, #131072
 324 0008 0360     		str	r3, [r0]
 325 000a 7047     		bx	lr
 326              	.L20:
 370:../stdperiph/source/stm32f37x_i2c.c ****   }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 13


 371:../stdperiph/source/stm32f37x_i2c.c ****   else
 372:../stdperiph/source/stm32f37x_i2c.c ****   {
 373:../stdperiph/source/stm32f37x_i2c.c ****     /* Disable clock stretching  */
 374:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR1 |= I2C_CR1_NOSTRETCH;
 327              		.loc 1 374 0
 328 000c 0368     		ldr	r3, [r0]
 329 000e 43F40033 		orr	r3, r3, #131072
 330 0012 0360     		str	r3, [r0]
 331 0014 7047     		bx	lr
 332              		.cfi_endproc
 333              	.LFE117:
 335 0016 00BF     		.section	.text.I2C_StopModeCmd,"ax",%progbits
 336              		.align	2
 337              		.global	I2C_StopModeCmd
 338              		.thumb
 339              		.thumb_func
 341              	I2C_StopModeCmd:
 342              	.LFB118:
 375:../stdperiph/source/stm32f37x_i2c.c ****   }
 376:../stdperiph/source/stm32f37x_i2c.c **** }
 377:../stdperiph/source/stm32f37x_i2c.c **** 
 378:../stdperiph/source/stm32f37x_i2c.c **** /**
 379:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Enables or disables I2C wakeup from stop mode.
 380:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 381:../stdperiph/source/stm32f37x_i2c.c ****   * @param  NewState: new state of the I2Cx stop mode.
 382:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 383:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
 384:../stdperiph/source/stm32f37x_i2c.c ****   */
 385:../stdperiph/source/stm32f37x_i2c.c **** void I2C_StopModeCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 386:../stdperiph/source/stm32f37x_i2c.c **** {
 343              		.loc 1 386 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347              		@ link register save eliminated.
 348              	.LVL32:
 387:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
 388:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 389:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 390:../stdperiph/source/stm32f37x_i2c.c ****   
 391:../stdperiph/source/stm32f37x_i2c.c ****   if (NewState != DISABLE)
 349              		.loc 1 391 0
 350 0000 21B1     		cbz	r1, .L23
 392:../stdperiph/source/stm32f37x_i2c.c ****   {
 393:../stdperiph/source/stm32f37x_i2c.c ****     /* Enable wakeup from stop mode */
 394:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR1 |= I2C_CR1_WUPEN;   
 351              		.loc 1 394 0
 352 0002 0368     		ldr	r3, [r0]
 353 0004 43F48023 		orr	r3, r3, #262144
 354 0008 0360     		str	r3, [r0]
 355 000a 7047     		bx	lr
 356              	.L23:
 395:../stdperiph/source/stm32f37x_i2c.c ****   }
 396:../stdperiph/source/stm32f37x_i2c.c ****   else
 397:../stdperiph/source/stm32f37x_i2c.c ****   {
 398:../stdperiph/source/stm32f37x_i2c.c ****     /* Disable wakeup from stop mode */    
 399:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR1 &= (uint32_t)~((uint32_t)I2C_CR1_WUPEN); 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 14


 357              		.loc 1 399 0
 358 000c 0368     		ldr	r3, [r0]
 359 000e 23F48023 		bic	r3, r3, #262144
 360 0012 0360     		str	r3, [r0]
 361 0014 7047     		bx	lr
 362              		.cfi_endproc
 363              	.LFE118:
 365 0016 00BF     		.section	.text.I2C_DualAddressCmd,"ax",%progbits
 366              		.align	2
 367              		.global	I2C_DualAddressCmd
 368              		.thumb
 369              		.thumb_func
 371              	I2C_DualAddressCmd:
 372              	.LFB119:
 400:../stdperiph/source/stm32f37x_i2c.c ****   }
 401:../stdperiph/source/stm32f37x_i2c.c **** }
 402:../stdperiph/source/stm32f37x_i2c.c **** 
 403:../stdperiph/source/stm32f37x_i2c.c **** /**
 404:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Enables or disables the I2C own address 2.
 405:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 406:../stdperiph/source/stm32f37x_i2c.c ****   * @param  NewState: new state of the I2C own address 2.
 407:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.  
 408:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
 409:../stdperiph/source/stm32f37x_i2c.c ****   */
 410:../stdperiph/source/stm32f37x_i2c.c **** void I2C_DualAddressCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 411:../stdperiph/source/stm32f37x_i2c.c **** {
 373              		.loc 1 411 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              		@ link register save eliminated.
 378              	.LVL33:
 412:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
 413:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 414:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 415:../stdperiph/source/stm32f37x_i2c.c ****   
 416:../stdperiph/source/stm32f37x_i2c.c ****   if (NewState != DISABLE)
 379              		.loc 1 416 0
 380 0000 21B1     		cbz	r1, .L26
 417:../stdperiph/source/stm32f37x_i2c.c ****   {
 418:../stdperiph/source/stm32f37x_i2c.c ****     /* Enable own address 2 */
 419:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->OAR2 |= I2C_OAR2_OA2EN;
 381              		.loc 1 419 0
 382 0002 C368     		ldr	r3, [r0, #12]
 383 0004 43F40043 		orr	r3, r3, #32768
 384 0008 C360     		str	r3, [r0, #12]
 385 000a 7047     		bx	lr
 386              	.L26:
 420:../stdperiph/source/stm32f37x_i2c.c ****   }
 421:../stdperiph/source/stm32f37x_i2c.c ****   else
 422:../stdperiph/source/stm32f37x_i2c.c ****   {
 423:../stdperiph/source/stm32f37x_i2c.c ****     /* Disable own address 2 */
 424:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->OAR2 &= (uint32_t)~((uint32_t)I2C_OAR2_OA2EN);
 387              		.loc 1 424 0
 388 000c C368     		ldr	r3, [r0, #12]
 389 000e 23F40043 		bic	r3, r3, #32768
 390 0012 C360     		str	r3, [r0, #12]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 15


 391 0014 7047     		bx	lr
 392              		.cfi_endproc
 393              	.LFE119:
 395 0016 00BF     		.section	.text.I2C_OwnAddress2Config,"ax",%progbits
 396              		.align	2
 397              		.global	I2C_OwnAddress2Config
 398              		.thumb
 399              		.thumb_func
 401              	I2C_OwnAddress2Config:
 402              	.LFB120:
 425:../stdperiph/source/stm32f37x_i2c.c ****   }
 426:../stdperiph/source/stm32f37x_i2c.c **** }    
 427:../stdperiph/source/stm32f37x_i2c.c **** 
 428:../stdperiph/source/stm32f37x_i2c.c **** /**
 429:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Configures the I2C slave own address 2 and mask.
 430:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 431:../stdperiph/source/stm32f37x_i2c.c ****   * @param  Address: specifies the slave address to be programmed.
 432:../stdperiph/source/stm32f37x_i2c.c ****   * @param  Mask: specifies own address 2 mask to be programmed.
 433:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be one of the following values:
 434:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_OA2_NoMask: no mask.
 435:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_OA2_Mask01: OA2[1] is masked and don't care.
 436:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_OA2_Mask02: OA2[2:1] are masked and don't care.
 437:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_OA2_Mask03: OA2[3:1] are masked and don't care.
 438:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_OA2_Mask04: OA2[4:1] are masked and don't care.
 439:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_OA2_Mask05: OA2[5:1] are masked and don't care.
 440:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_OA2_Mask06: OA2[6:1] are masked and don't care.
 441:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_OA2_Mask07: OA2[7:1] are masked and don't care.
 442:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
 443:../stdperiph/source/stm32f37x_i2c.c ****   */
 444:../stdperiph/source/stm32f37x_i2c.c **** void I2C_OwnAddress2Config(I2C_TypeDef* I2Cx, uint16_t Address, uint8_t Mask)
 445:../stdperiph/source/stm32f37x_i2c.c **** {
 403              		.loc 1 445 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              		@ link register save eliminated.
 408              	.LVL34:
 446:../stdperiph/source/stm32f37x_i2c.c ****   uint32_t tmpreg = 0;
 447:../stdperiph/source/stm32f37x_i2c.c **** 
 448:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
 449:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 450:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2(Address));
 451:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2_MASK(Mask));
 452:../stdperiph/source/stm32f37x_i2c.c ****   
 453:../stdperiph/source/stm32f37x_i2c.c ****   /* Get the old register value */
 454:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg = I2Cx->OAR2;
 409              		.loc 1 454 0
 410 0000 C368     		ldr	r3, [r0, #12]
 411              	.LVL35:
 455:../stdperiph/source/stm32f37x_i2c.c **** 
 456:../stdperiph/source/stm32f37x_i2c.c ****   /* Reset I2Cx OA2 bit [7:1] and OA2MSK bit [1:0]  */
 457:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg &= (uint32_t)~((uint32_t)(I2C_OAR2_OA2 | I2C_OAR2_OA2MSK));
 412              		.loc 1 457 0
 413 0002 23F4FF63 		bic	r3, r3, #2040
 414              	.LVL36:
 415 0006 23F00603 		bic	r3, r3, #6
 416              	.LVL37:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 16


 458:../stdperiph/source/stm32f37x_i2c.c **** 
 459:../stdperiph/source/stm32f37x_i2c.c ****   /* Set I2Cx SADD */
 460:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg |= (uint32_t)(((uint32_t)Address & I2C_OAR2_OA2) | \
 417              		.loc 1 460 0
 418 000a 01F0FE01 		and	r1, r1, #254
 419              	.LVL38:
 461:../stdperiph/source/stm32f37x_i2c.c ****             (((uint32_t)Mask << 8) & I2C_OAR2_OA2MSK)) ;
 420              		.loc 1 461 0
 421 000e 1202     		lsls	r2, r2, #8
 422              	.LVL39:
 423 0010 02F4E062 		and	r2, r2, #1792
 460:../stdperiph/source/stm32f37x_i2c.c ****             (((uint32_t)Mask << 8) & I2C_OAR2_OA2MSK)) ;
 424              		.loc 1 460 0
 425 0014 1143     		orrs	r1, r1, r2
 426 0016 1943     		orrs	r1, r1, r3
 427              	.LVL40:
 462:../stdperiph/source/stm32f37x_i2c.c **** 
 463:../stdperiph/source/stm32f37x_i2c.c ****   /* Store the new register value */
 464:../stdperiph/source/stm32f37x_i2c.c ****   I2Cx->OAR2 = tmpreg;
 428              		.loc 1 464 0
 429 0018 C160     		str	r1, [r0, #12]
 430 001a 7047     		bx	lr
 431              		.cfi_endproc
 432              	.LFE120:
 434              		.section	.text.I2C_GeneralCallCmd,"ax",%progbits
 435              		.align	2
 436              		.global	I2C_GeneralCallCmd
 437              		.thumb
 438              		.thumb_func
 440              	I2C_GeneralCallCmd:
 441              	.LFB121:
 465:../stdperiph/source/stm32f37x_i2c.c **** }
 466:../stdperiph/source/stm32f37x_i2c.c **** 
 467:../stdperiph/source/stm32f37x_i2c.c **** /**
 468:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Enables or disables the I2C general call mode.
 469:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 470:../stdperiph/source/stm32f37x_i2c.c ****   * @param  NewState: new state of the I2C general call mode.
 471:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.  
 472:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
 473:../stdperiph/source/stm32f37x_i2c.c ****   */
 474:../stdperiph/source/stm32f37x_i2c.c **** void I2C_GeneralCallCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 475:../stdperiph/source/stm32f37x_i2c.c **** {
 442              		.loc 1 475 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446              		@ link register save eliminated.
 447              	.LVL41:
 476:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
 477:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 478:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 479:../stdperiph/source/stm32f37x_i2c.c ****   
 480:../stdperiph/source/stm32f37x_i2c.c ****   if (NewState != DISABLE)
 448              		.loc 1 480 0
 449 0000 21B1     		cbz	r1, .L30
 481:../stdperiph/source/stm32f37x_i2c.c ****   {
 482:../stdperiph/source/stm32f37x_i2c.c ****     /* Enable general call mode */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 17


 483:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR1 |= I2C_CR1_GCEN;
 450              		.loc 1 483 0
 451 0002 0368     		ldr	r3, [r0]
 452 0004 43F40023 		orr	r3, r3, #524288
 453 0008 0360     		str	r3, [r0]
 454 000a 7047     		bx	lr
 455              	.L30:
 484:../stdperiph/source/stm32f37x_i2c.c ****   }
 485:../stdperiph/source/stm32f37x_i2c.c ****   else
 486:../stdperiph/source/stm32f37x_i2c.c ****   {
 487:../stdperiph/source/stm32f37x_i2c.c ****     /* Disable general call mode */
 488:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR1 &= (uint32_t)~((uint32_t)I2C_CR1_GCEN);
 456              		.loc 1 488 0
 457 000c 0368     		ldr	r3, [r0]
 458 000e 23F40023 		bic	r3, r3, #524288
 459 0012 0360     		str	r3, [r0]
 460 0014 7047     		bx	lr
 461              		.cfi_endproc
 462              	.LFE121:
 464 0016 00BF     		.section	.text.I2C_SlaveByteControlCmd,"ax",%progbits
 465              		.align	2
 466              		.global	I2C_SlaveByteControlCmd
 467              		.thumb
 468              		.thumb_func
 470              	I2C_SlaveByteControlCmd:
 471              	.LFB122:
 489:../stdperiph/source/stm32f37x_i2c.c ****   }
 490:../stdperiph/source/stm32f37x_i2c.c **** } 
 491:../stdperiph/source/stm32f37x_i2c.c **** 
 492:../stdperiph/source/stm32f37x_i2c.c **** /**
 493:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Enables or disables the I2C slave byte control.
 494:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 495:../stdperiph/source/stm32f37x_i2c.c ****   * @param  NewState: new state of the I2C slave byte control.
 496:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.  
 497:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
 498:../stdperiph/source/stm32f37x_i2c.c ****   */
 499:../stdperiph/source/stm32f37x_i2c.c **** void I2C_SlaveByteControlCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 500:../stdperiph/source/stm32f37x_i2c.c **** {
 472              		.loc 1 500 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476              		@ link register save eliminated.
 477              	.LVL42:
 501:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
 502:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 503:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 504:../stdperiph/source/stm32f37x_i2c.c ****   
 505:../stdperiph/source/stm32f37x_i2c.c ****   if (NewState != DISABLE)
 478              		.loc 1 505 0
 479 0000 21B1     		cbz	r1, .L33
 506:../stdperiph/source/stm32f37x_i2c.c ****   {
 507:../stdperiph/source/stm32f37x_i2c.c ****     /* Enable slave byte control */
 508:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR1 |= I2C_CR1_SBC;
 480              		.loc 1 508 0
 481 0002 0368     		ldr	r3, [r0]
 482 0004 43F48033 		orr	r3, r3, #65536
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 18


 483 0008 0360     		str	r3, [r0]
 484 000a 7047     		bx	lr
 485              	.L33:
 509:../stdperiph/source/stm32f37x_i2c.c ****   }
 510:../stdperiph/source/stm32f37x_i2c.c ****   else
 511:../stdperiph/source/stm32f37x_i2c.c ****   {
 512:../stdperiph/source/stm32f37x_i2c.c ****     /* Disable slave byte control */
 513:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR1 &= (uint32_t)~((uint32_t)I2C_CR1_SBC);
 486              		.loc 1 513 0
 487 000c 0368     		ldr	r3, [r0]
 488 000e 23F48033 		bic	r3, r3, #65536
 489 0012 0360     		str	r3, [r0]
 490 0014 7047     		bx	lr
 491              		.cfi_endproc
 492              	.LFE122:
 494 0016 00BF     		.section	.text.I2C_SlaveAddressConfig,"ax",%progbits
 495              		.align	2
 496              		.global	I2C_SlaveAddressConfig
 497              		.thumb
 498              		.thumb_func
 500              	I2C_SlaveAddressConfig:
 501              	.LFB123:
 514:../stdperiph/source/stm32f37x_i2c.c ****   }
 515:../stdperiph/source/stm32f37x_i2c.c **** }
 516:../stdperiph/source/stm32f37x_i2c.c **** 
 517:../stdperiph/source/stm32f37x_i2c.c **** /**
 518:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Configures the slave address to be transmitted after start generation.
 519:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 520:../stdperiph/source/stm32f37x_i2c.c ****   * @param  Address: specifies the slave address to be programmed.
 521:../stdperiph/source/stm32f37x_i2c.c ****   * @note   This function should be called before generating start condition.
 522:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
 523:../stdperiph/source/stm32f37x_i2c.c ****   */
 524:../stdperiph/source/stm32f37x_i2c.c **** void I2C_SlaveAddressConfig(I2C_TypeDef* I2Cx, uint16_t Address)
 525:../stdperiph/source/stm32f37x_i2c.c **** {
 502              		.loc 1 525 0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506              		@ link register save eliminated.
 507              	.LVL43:
 526:../stdperiph/source/stm32f37x_i2c.c ****   uint32_t tmpreg = 0;
 527:../stdperiph/source/stm32f37x_i2c.c **** 
 528:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
 529:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 530:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_SLAVE_ADDRESS(Address));
 531:../stdperiph/source/stm32f37x_i2c.c ****                
 532:../stdperiph/source/stm32f37x_i2c.c ****   /* Get the old register value */
 533:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg = I2Cx->CR2;
 508              		.loc 1 533 0
 509 0000 4368     		ldr	r3, [r0, #4]
 510              	.LVL44:
 534:../stdperiph/source/stm32f37x_i2c.c **** 
 535:../stdperiph/source/stm32f37x_i2c.c ****   /* Reset I2Cx SADD bit [9:0] */
 536:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg &= (uint32_t)~((uint32_t)I2C_CR2_SADD);
 511              		.loc 1 536 0
 512 0002 23F47F73 		bic	r3, r3, #1020
 513              	.LVL45:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 19


 514 0006 23F00303 		bic	r3, r3, #3
 515              	.LVL46:
 537:../stdperiph/source/stm32f37x_i2c.c **** 
 538:../stdperiph/source/stm32f37x_i2c.c ****   /* Set I2Cx SADD */
 539:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg |= (uint32_t)((uint32_t)Address & I2C_CR2_SADD);
 516              		.loc 1 539 0
 517 000a C1F30901 		ubfx	r1, r1, #0, #10
 518              	.LVL47:
 519 000e 0B43     		orrs	r3, r3, r1
 520              	.LVL48:
 540:../stdperiph/source/stm32f37x_i2c.c **** 
 541:../stdperiph/source/stm32f37x_i2c.c ****   /* Store the new register value */
 542:../stdperiph/source/stm32f37x_i2c.c ****   I2Cx->CR2 = tmpreg;
 521              		.loc 1 542 0
 522 0010 4360     		str	r3, [r0, #4]
 523 0012 7047     		bx	lr
 524              		.cfi_endproc
 525              	.LFE123:
 527              		.section	.text.I2C_10BitAddressingModeCmd,"ax",%progbits
 528              		.align	2
 529              		.global	I2C_10BitAddressingModeCmd
 530              		.thumb
 531              		.thumb_func
 533              	I2C_10BitAddressingModeCmd:
 534              	.LFB124:
 543:../stdperiph/source/stm32f37x_i2c.c **** }
 544:../stdperiph/source/stm32f37x_i2c.c ****   
 545:../stdperiph/source/stm32f37x_i2c.c **** /**
 546:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Enables or disables the I2C 10-bit addressing mode for the master.
 547:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 548:../stdperiph/source/stm32f37x_i2c.c ****   * @param  NewState: new state of the I2C 10-bit addressing mode.
 549:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 550:../stdperiph/source/stm32f37x_i2c.c ****   * @note   This function should be called before generating start condition.
 551:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
 552:../stdperiph/source/stm32f37x_i2c.c ****   */
 553:../stdperiph/source/stm32f37x_i2c.c **** void I2C_10BitAddressingModeCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 554:../stdperiph/source/stm32f37x_i2c.c **** {
 535              		.loc 1 554 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 0, uses_anonymous_args = 0
 539              		@ link register save eliminated.
 540              	.LVL49:
 555:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
 556:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 557:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 558:../stdperiph/source/stm32f37x_i2c.c ****   
 559:../stdperiph/source/stm32f37x_i2c.c ****   if (NewState != DISABLE)
 541              		.loc 1 559 0
 542 0000 21B1     		cbz	r1, .L37
 560:../stdperiph/source/stm32f37x_i2c.c ****   {
 561:../stdperiph/source/stm32f37x_i2c.c ****     /* Enable 10-bit addressing mode */
 562:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR2 |= I2C_CR2_ADD10;
 543              		.loc 1 562 0
 544 0002 4368     		ldr	r3, [r0, #4]
 545 0004 43F40063 		orr	r3, r3, #2048
 546 0008 4360     		str	r3, [r0, #4]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 20


 547 000a 7047     		bx	lr
 548              	.L37:
 563:../stdperiph/source/stm32f37x_i2c.c ****   }
 564:../stdperiph/source/stm32f37x_i2c.c ****   else
 565:../stdperiph/source/stm32f37x_i2c.c ****   {
 566:../stdperiph/source/stm32f37x_i2c.c ****     /* Disable 10-bit addressing mode */
 567:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR2 &= (uint32_t)~((uint32_t)I2C_CR2_ADD10);
 549              		.loc 1 567 0
 550 000c 4368     		ldr	r3, [r0, #4]
 551 000e 23F40063 		bic	r3, r3, #2048
 552 0012 4360     		str	r3, [r0, #4]
 553 0014 7047     		bx	lr
 554              		.cfi_endproc
 555              	.LFE124:
 557 0016 00BF     		.section	.text.I2C_AutoEndCmd,"ax",%progbits
 558              		.align	2
 559              		.global	I2C_AutoEndCmd
 560              		.thumb
 561              		.thumb_func
 563              	I2C_AutoEndCmd:
 564              	.LFB125:
 568:../stdperiph/source/stm32f37x_i2c.c ****   }
 569:../stdperiph/source/stm32f37x_i2c.c **** } 
 570:../stdperiph/source/stm32f37x_i2c.c **** 
 571:../stdperiph/source/stm32f37x_i2c.c **** /**
 572:../stdperiph/source/stm32f37x_i2c.c ****   * @}
 573:../stdperiph/source/stm32f37x_i2c.c ****   */
 574:../stdperiph/source/stm32f37x_i2c.c **** 
 575:../stdperiph/source/stm32f37x_i2c.c **** 
 576:../stdperiph/source/stm32f37x_i2c.c **** /** @defgroup I2C_Group2 Communications handling functions
 577:../stdperiph/source/stm32f37x_i2c.c ****  *  @brief   Communications handling functions 
 578:../stdperiph/source/stm32f37x_i2c.c ****  *
 579:../stdperiph/source/stm32f37x_i2c.c **** @verbatim
 580:../stdperiph/source/stm32f37x_i2c.c ****  ===============================================================================
 581:../stdperiph/source/stm32f37x_i2c.c ****                   ##### Communications handling functions #####
 582:../stdperiph/source/stm32f37x_i2c.c ****  ===============================================================================  
 583:../stdperiph/source/stm32f37x_i2c.c ****     [..] This section provides a set of functions that handles I2C communication.
 584:../stdperiph/source/stm32f37x_i2c.c **** 
 585:../stdperiph/source/stm32f37x_i2c.c ****     [..] Automatic End mode is enabled using I2C_AutoEndCmd() function. When Reload
 586:../stdperiph/source/stm32f37x_i2c.c ****          mode is enabled via I2C_ReloadCmd() AutoEnd bit has no effect.
 587:../stdperiph/source/stm32f37x_i2c.c **** 
 588:../stdperiph/source/stm32f37x_i2c.c ****     [..] I2C_NumberOfBytesConfig() function set the number of bytes to be transferred,
 589:../stdperiph/source/stm32f37x_i2c.c ****          this configuration should be done before generating start condition in master 
 590:../stdperiph/source/stm32f37x_i2c.c ****          mode.
 591:../stdperiph/source/stm32f37x_i2c.c **** 
 592:../stdperiph/source/stm32f37x_i2c.c ****     [..] When switching from master write operation to read operation in 10Bit addressing
 593:../stdperiph/source/stm32f37x_i2c.c ****          mode, master can only sends the 1st 7 bits of the 10 bit address, followed by 
 594:../stdperiph/source/stm32f37x_i2c.c ****          Read direction by enabling HEADR bit using I2C_10BitAddressHeader() function.
 595:../stdperiph/source/stm32f37x_i2c.c **** 
 596:../stdperiph/source/stm32f37x_i2c.c ****     [..] In master mode, when transferring more than 255 bytes Reload mode should be used
 597:../stdperiph/source/stm32f37x_i2c.c ****          to handle communication. In the first phase of transfer, Nbytes should be set to 
 598:../stdperiph/source/stm32f37x_i2c.c ****          255. After transferring these bytes TCR flag is set and I2C_TransferHandling()
 599:../stdperiph/source/stm32f37x_i2c.c ****          function should be called to handle remaining communication.
 600:../stdperiph/source/stm32f37x_i2c.c **** 
 601:../stdperiph/source/stm32f37x_i2c.c ****     [..] In master mode, when software end mode is selected when all data is transferred
 602:../stdperiph/source/stm32f37x_i2c.c ****          TC flag is set I2C_TransferHandling() function should be called to generate STOP
 603:../stdperiph/source/stm32f37x_i2c.c ****          or generate ReStart.
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 21


 604:../stdperiph/source/stm32f37x_i2c.c **** 
 605:../stdperiph/source/stm32f37x_i2c.c **** @endverbatim
 606:../stdperiph/source/stm32f37x_i2c.c ****   * @{
 607:../stdperiph/source/stm32f37x_i2c.c ****   */
 608:../stdperiph/source/stm32f37x_i2c.c ****   
 609:../stdperiph/source/stm32f37x_i2c.c **** /**
 610:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Enables or disables the I2C automatic end mode (stop condition is 
 611:../stdperiph/source/stm32f37x_i2c.c ****   *         automatically sent when nbytes data are transferred).
 612:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 613:../stdperiph/source/stm32f37x_i2c.c ****   * @param  NewState: new state of the I2C automatic end mode.
 614:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 615:../stdperiph/source/stm32f37x_i2c.c ****   * @note   This function has effect if Reload mode is disabled.
 616:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
 617:../stdperiph/source/stm32f37x_i2c.c ****   */
 618:../stdperiph/source/stm32f37x_i2c.c **** void I2C_AutoEndCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 619:../stdperiph/source/stm32f37x_i2c.c **** {
 565              		.loc 1 619 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              		@ link register save eliminated.
 570              	.LVL50:
 620:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
 621:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 622:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 623:../stdperiph/source/stm32f37x_i2c.c ****   
 624:../stdperiph/source/stm32f37x_i2c.c ****   if (NewState != DISABLE)
 571              		.loc 1 624 0
 572 0000 21B1     		cbz	r1, .L40
 625:../stdperiph/source/stm32f37x_i2c.c ****   {
 626:../stdperiph/source/stm32f37x_i2c.c ****     /* Enable Auto end mode */
 627:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR2 |= I2C_CR2_AUTOEND;
 573              		.loc 1 627 0
 574 0002 4368     		ldr	r3, [r0, #4]
 575 0004 43F00073 		orr	r3, r3, #33554432
 576 0008 4360     		str	r3, [r0, #4]
 577 000a 7047     		bx	lr
 578              	.L40:
 628:../stdperiph/source/stm32f37x_i2c.c ****   }
 629:../stdperiph/source/stm32f37x_i2c.c ****   else
 630:../stdperiph/source/stm32f37x_i2c.c ****   {
 631:../stdperiph/source/stm32f37x_i2c.c ****     /* Disable Auto end mode */
 632:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR2 &= (uint32_t)~((uint32_t)I2C_CR2_AUTOEND);
 579              		.loc 1 632 0
 580 000c 4368     		ldr	r3, [r0, #4]
 581 000e 23F00073 		bic	r3, r3, #33554432
 582 0012 4360     		str	r3, [r0, #4]
 583 0014 7047     		bx	lr
 584              		.cfi_endproc
 585              	.LFE125:
 587 0016 00BF     		.section	.text.I2C_ReloadCmd,"ax",%progbits
 588              		.align	2
 589              		.global	I2C_ReloadCmd
 590              		.thumb
 591              		.thumb_func
 593              	I2C_ReloadCmd:
 594              	.LFB126:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 22


 633:../stdperiph/source/stm32f37x_i2c.c ****   }
 634:../stdperiph/source/stm32f37x_i2c.c **** } 
 635:../stdperiph/source/stm32f37x_i2c.c **** 
 636:../stdperiph/source/stm32f37x_i2c.c **** /**
 637:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Enables or disables the I2C nbytes reload mode.
 638:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 639:../stdperiph/source/stm32f37x_i2c.c ****   * @param  NewState: new state of the nbytes reload mode.
 640:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 641:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
 642:../stdperiph/source/stm32f37x_i2c.c ****   */
 643:../stdperiph/source/stm32f37x_i2c.c **** void I2C_ReloadCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 644:../stdperiph/source/stm32f37x_i2c.c **** {
 595              		.loc 1 644 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 600              	.LVL51:
 645:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
 646:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 647:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 648:../stdperiph/source/stm32f37x_i2c.c ****   
 649:../stdperiph/source/stm32f37x_i2c.c ****   if (NewState != DISABLE)
 601              		.loc 1 649 0
 602 0000 21B1     		cbz	r1, .L43
 650:../stdperiph/source/stm32f37x_i2c.c ****   {
 651:../stdperiph/source/stm32f37x_i2c.c ****     /* Enable Auto Reload mode */
 652:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR2 |= I2C_CR2_RELOAD;
 603              		.loc 1 652 0
 604 0002 4368     		ldr	r3, [r0, #4]
 605 0004 43F08073 		orr	r3, r3, #16777216
 606 0008 4360     		str	r3, [r0, #4]
 607 000a 7047     		bx	lr
 608              	.L43:
 653:../stdperiph/source/stm32f37x_i2c.c ****   }
 654:../stdperiph/source/stm32f37x_i2c.c ****   else
 655:../stdperiph/source/stm32f37x_i2c.c ****   {
 656:../stdperiph/source/stm32f37x_i2c.c ****     /* Disable Auto Reload mode */
 657:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR2 &= (uint32_t)~((uint32_t)I2C_CR2_RELOAD);
 609              		.loc 1 657 0
 610 000c 4368     		ldr	r3, [r0, #4]
 611 000e 23F08073 		bic	r3, r3, #16777216
 612 0012 4360     		str	r3, [r0, #4]
 613 0014 7047     		bx	lr
 614              		.cfi_endproc
 615              	.LFE126:
 617 0016 00BF     		.section	.text.I2C_NumberOfBytesConfig,"ax",%progbits
 618              		.align	2
 619              		.global	I2C_NumberOfBytesConfig
 620              		.thumb
 621              		.thumb_func
 623              	I2C_NumberOfBytesConfig:
 624              	.LFB127:
 658:../stdperiph/source/stm32f37x_i2c.c ****   }
 659:../stdperiph/source/stm32f37x_i2c.c **** }
 660:../stdperiph/source/stm32f37x_i2c.c **** 
 661:../stdperiph/source/stm32f37x_i2c.c **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 23


 662:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Configures the number of bytes to be transmitted/received.
 663:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 664:../stdperiph/source/stm32f37x_i2c.c ****   * @param  Number_Bytes: specifies the number of bytes to be programmed.
 665:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
 666:../stdperiph/source/stm32f37x_i2c.c ****   */
 667:../stdperiph/source/stm32f37x_i2c.c **** void I2C_NumberOfBytesConfig(I2C_TypeDef* I2Cx, uint8_t Number_Bytes)
 668:../stdperiph/source/stm32f37x_i2c.c **** {
 625              		.loc 1 668 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 0
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 629              		@ link register save eliminated.
 630              	.LVL52:
 669:../stdperiph/source/stm32f37x_i2c.c ****   uint32_t tmpreg = 0;
 670:../stdperiph/source/stm32f37x_i2c.c **** 
 671:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
 672:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 673:../stdperiph/source/stm32f37x_i2c.c **** 
 674:../stdperiph/source/stm32f37x_i2c.c ****   /* Get the old register value */
 675:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg = I2Cx->CR2;
 631              		.loc 1 675 0
 632 0000 4368     		ldr	r3, [r0, #4]
 633              	.LVL53:
 676:../stdperiph/source/stm32f37x_i2c.c **** 
 677:../stdperiph/source/stm32f37x_i2c.c ****   /* Reset I2Cx Nbytes bit [7:0] */
 678:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg &= (uint32_t)~((uint32_t)I2C_CR2_NBYTES);
 634              		.loc 1 678 0
 635 0002 23F47F03 		bic	r3, r3, #16711680
 636              	.LVL54:
 679:../stdperiph/source/stm32f37x_i2c.c **** 
 680:../stdperiph/source/stm32f37x_i2c.c ****   /* Set I2Cx Nbytes */
 681:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg |= (uint32_t)(((uint32_t)Number_Bytes << 16 ) & I2C_CR2_NBYTES);
 637              		.loc 1 681 0
 638 0006 43EA0141 		orr	r1, r3, r1, lsl #16
 639              	.LVL55:
 682:../stdperiph/source/stm32f37x_i2c.c **** 
 683:../stdperiph/source/stm32f37x_i2c.c ****   /* Store the new register value */
 684:../stdperiph/source/stm32f37x_i2c.c ****   I2Cx->CR2 = tmpreg;
 640              		.loc 1 684 0
 641 000a 4160     		str	r1, [r0, #4]
 642 000c 7047     		bx	lr
 643              		.cfi_endproc
 644              	.LFE127:
 646 000e 00BF     		.section	.text.I2C_MasterRequestConfig,"ax",%progbits
 647              		.align	2
 648              		.global	I2C_MasterRequestConfig
 649              		.thumb
 650              		.thumb_func
 652              	I2C_MasterRequestConfig:
 653              	.LFB128:
 685:../stdperiph/source/stm32f37x_i2c.c **** }  
 686:../stdperiph/source/stm32f37x_i2c.c ****   
 687:../stdperiph/source/stm32f37x_i2c.c **** /**
 688:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Configures the type of transfer request for the master.
 689:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 690:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2C_Direction: specifies the transfer request direction to be programmed.
 691:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be one of the following values:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 24


 692:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_Direction_Transmitter: Master request a write transfer
 693:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_Direction_Receiver: Master request a read transfer 
 694:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
 695:../stdperiph/source/stm32f37x_i2c.c ****   */
 696:../stdperiph/source/stm32f37x_i2c.c **** void I2C_MasterRequestConfig(I2C_TypeDef* I2Cx, uint16_t I2C_Direction)
 697:../stdperiph/source/stm32f37x_i2c.c **** {
 654              		.loc 1 697 0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 0
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658              		@ link register save eliminated.
 659              	.LVL56:
 698:../stdperiph/source/stm32f37x_i2c.c **** /* Check the parameters */
 699:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 700:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_DIRECTION(I2C_Direction));
 701:../stdperiph/source/stm32f37x_i2c.c ****   
 702:../stdperiph/source/stm32f37x_i2c.c ****   /* Test on the direction to set/reset the read/write bit */
 703:../stdperiph/source/stm32f37x_i2c.c ****   if (I2C_Direction == I2C_Direction_Transmitter)
 660              		.loc 1 703 0
 661 0000 21B9     		cbnz	r1, .L47
 704:../stdperiph/source/stm32f37x_i2c.c ****   {
 705:../stdperiph/source/stm32f37x_i2c.c ****     /* Request a write Transfer */
 706:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR2 &= (uint32_t)~((uint32_t)I2C_CR2_RD_WRN);
 662              		.loc 1 706 0
 663 0002 4368     		ldr	r3, [r0, #4]
 664 0004 23F48063 		bic	r3, r3, #1024
 665 0008 4360     		str	r3, [r0, #4]
 666 000a 7047     		bx	lr
 667              	.L47:
 707:../stdperiph/source/stm32f37x_i2c.c ****   }
 708:../stdperiph/source/stm32f37x_i2c.c ****   else
 709:../stdperiph/source/stm32f37x_i2c.c ****   {
 710:../stdperiph/source/stm32f37x_i2c.c ****     /* Request a read Transfer */
 711:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR2 |= I2C_CR2_RD_WRN;
 668              		.loc 1 711 0
 669 000c 4368     		ldr	r3, [r0, #4]
 670 000e 43F48063 		orr	r3, r3, #1024
 671 0012 4360     		str	r3, [r0, #4]
 672 0014 7047     		bx	lr
 673              		.cfi_endproc
 674              	.LFE128:
 676 0016 00BF     		.section	.text.I2C_GenerateSTART,"ax",%progbits
 677              		.align	2
 678              		.global	I2C_GenerateSTART
 679              		.thumb
 680              		.thumb_func
 682              	I2C_GenerateSTART:
 683              	.LFB129:
 712:../stdperiph/source/stm32f37x_i2c.c ****   }
 713:../stdperiph/source/stm32f37x_i2c.c **** }  
 714:../stdperiph/source/stm32f37x_i2c.c ****   
 715:../stdperiph/source/stm32f37x_i2c.c **** /**
 716:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Generates I2Cx communication START condition.
 717:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 718:../stdperiph/source/stm32f37x_i2c.c ****   * @param  NewState: new state of the I2C START condition generation.
 719:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 720:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 25


 721:../stdperiph/source/stm32f37x_i2c.c ****   */
 722:../stdperiph/source/stm32f37x_i2c.c **** void I2C_GenerateSTART(I2C_TypeDef* I2Cx, FunctionalState NewState)
 723:../stdperiph/source/stm32f37x_i2c.c **** {
 684              		.loc 1 723 0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 0
 687              		@ frame_needed = 0, uses_anonymous_args = 0
 688              		@ link register save eliminated.
 689              	.LVL57:
 724:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
 725:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 726:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 727:../stdperiph/source/stm32f37x_i2c.c ****   
 728:../stdperiph/source/stm32f37x_i2c.c ****   if (NewState != DISABLE)
 690              		.loc 1 728 0
 691 0000 21B1     		cbz	r1, .L50
 729:../stdperiph/source/stm32f37x_i2c.c ****   {
 730:../stdperiph/source/stm32f37x_i2c.c ****     /* Generate a START condition */
 731:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR2 |= I2C_CR2_START;
 692              		.loc 1 731 0
 693 0002 4368     		ldr	r3, [r0, #4]
 694 0004 43F40053 		orr	r3, r3, #8192
 695 0008 4360     		str	r3, [r0, #4]
 696 000a 7047     		bx	lr
 697              	.L50:
 732:../stdperiph/source/stm32f37x_i2c.c ****   }
 733:../stdperiph/source/stm32f37x_i2c.c ****   else
 734:../stdperiph/source/stm32f37x_i2c.c ****   {
 735:../stdperiph/source/stm32f37x_i2c.c ****     /* Disable the START condition generation */
 736:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR2 &= (uint32_t)~((uint32_t)I2C_CR2_START);
 698              		.loc 1 736 0
 699 000c 4368     		ldr	r3, [r0, #4]
 700 000e 23F40053 		bic	r3, r3, #8192
 701 0012 4360     		str	r3, [r0, #4]
 702 0014 7047     		bx	lr
 703              		.cfi_endproc
 704              	.LFE129:
 706 0016 00BF     		.section	.text.I2C_GenerateSTOP,"ax",%progbits
 707              		.align	2
 708              		.global	I2C_GenerateSTOP
 709              		.thumb
 710              		.thumb_func
 712              	I2C_GenerateSTOP:
 713              	.LFB130:
 737:../stdperiph/source/stm32f37x_i2c.c ****   }
 738:../stdperiph/source/stm32f37x_i2c.c **** }  
 739:../stdperiph/source/stm32f37x_i2c.c ****   
 740:../stdperiph/source/stm32f37x_i2c.c **** /**
 741:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Generates I2Cx communication STOP condition.
 742:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 743:../stdperiph/source/stm32f37x_i2c.c ****   * @param  NewState: new state of the I2C STOP condition generation.
 744:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 745:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
 746:../stdperiph/source/stm32f37x_i2c.c ****   */
 747:../stdperiph/source/stm32f37x_i2c.c **** void I2C_GenerateSTOP(I2C_TypeDef* I2Cx, FunctionalState NewState)
 748:../stdperiph/source/stm32f37x_i2c.c **** {
 714              		.loc 1 748 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 26


 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 0
 717              		@ frame_needed = 0, uses_anonymous_args = 0
 718              		@ link register save eliminated.
 719              	.LVL58:
 749:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
 750:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 751:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 752:../stdperiph/source/stm32f37x_i2c.c ****   
 753:../stdperiph/source/stm32f37x_i2c.c ****   if (NewState != DISABLE)
 720              		.loc 1 753 0
 721 0000 21B1     		cbz	r1, .L53
 754:../stdperiph/source/stm32f37x_i2c.c ****   {
 755:../stdperiph/source/stm32f37x_i2c.c ****     /* Generate a STOP condition */
 756:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR2 |= I2C_CR2_STOP;
 722              		.loc 1 756 0
 723 0002 4368     		ldr	r3, [r0, #4]
 724 0004 43F48043 		orr	r3, r3, #16384
 725 0008 4360     		str	r3, [r0, #4]
 726 000a 7047     		bx	lr
 727              	.L53:
 757:../stdperiph/source/stm32f37x_i2c.c ****   }
 758:../stdperiph/source/stm32f37x_i2c.c ****   else
 759:../stdperiph/source/stm32f37x_i2c.c ****   {
 760:../stdperiph/source/stm32f37x_i2c.c ****     /* Disable the STOP condition generation */
 761:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR2 &= (uint32_t)~((uint32_t)I2C_CR2_STOP);
 728              		.loc 1 761 0
 729 000c 4368     		ldr	r3, [r0, #4]
 730 000e 23F48043 		bic	r3, r3, #16384
 731 0012 4360     		str	r3, [r0, #4]
 732 0014 7047     		bx	lr
 733              		.cfi_endproc
 734              	.LFE130:
 736 0016 00BF     		.section	.text.I2C_10BitAddressHeaderCmd,"ax",%progbits
 737              		.align	2
 738              		.global	I2C_10BitAddressHeaderCmd
 739              		.thumb
 740              		.thumb_func
 742              	I2C_10BitAddressHeaderCmd:
 743              	.LFB131:
 762:../stdperiph/source/stm32f37x_i2c.c ****   }
 763:../stdperiph/source/stm32f37x_i2c.c **** }  
 764:../stdperiph/source/stm32f37x_i2c.c **** 
 765:../stdperiph/source/stm32f37x_i2c.c **** /**
 766:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Enables or disables the I2C 10-bit header only mode with read direction.
 767:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 768:../stdperiph/source/stm32f37x_i2c.c ****   * @param  NewState: new state of the I2C 10-bit header only mode.
 769:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 770:../stdperiph/source/stm32f37x_i2c.c ****   * @note   This mode can be used only when switching from master transmitter mode 
 771:../stdperiph/source/stm32f37x_i2c.c ****   *         to master receiver mode.
 772:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
 773:../stdperiph/source/stm32f37x_i2c.c ****   */
 774:../stdperiph/source/stm32f37x_i2c.c **** void I2C_10BitAddressHeaderCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 775:../stdperiph/source/stm32f37x_i2c.c **** {
 744              		.loc 1 775 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 27


 747              		@ frame_needed = 0, uses_anonymous_args = 0
 748              		@ link register save eliminated.
 749              	.LVL59:
 776:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
 777:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 778:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 779:../stdperiph/source/stm32f37x_i2c.c ****   
 780:../stdperiph/source/stm32f37x_i2c.c ****   if (NewState != DISABLE)
 750              		.loc 1 780 0
 751 0000 21B1     		cbz	r1, .L56
 781:../stdperiph/source/stm32f37x_i2c.c ****   {
 782:../stdperiph/source/stm32f37x_i2c.c ****     /* Enable 10-bit header only mode */
 783:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR2 |= I2C_CR2_HEAD10R;
 752              		.loc 1 783 0
 753 0002 4368     		ldr	r3, [r0, #4]
 754 0004 43F48053 		orr	r3, r3, #4096
 755 0008 4360     		str	r3, [r0, #4]
 756 000a 7047     		bx	lr
 757              	.L56:
 784:../stdperiph/source/stm32f37x_i2c.c ****   }
 785:../stdperiph/source/stm32f37x_i2c.c ****   else
 786:../stdperiph/source/stm32f37x_i2c.c ****   {
 787:../stdperiph/source/stm32f37x_i2c.c ****     /* Disable 10-bit header only mode */
 788:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR2 &= (uint32_t)~((uint32_t)I2C_CR2_HEAD10R);
 758              		.loc 1 788 0
 759 000c 4368     		ldr	r3, [r0, #4]
 760 000e 23F48053 		bic	r3, r3, #4096
 761 0012 4360     		str	r3, [r0, #4]
 762 0014 7047     		bx	lr
 763              		.cfi_endproc
 764              	.LFE131:
 766 0016 00BF     		.section	.text.I2C_AcknowledgeConfig,"ax",%progbits
 767              		.align	2
 768              		.global	I2C_AcknowledgeConfig
 769              		.thumb
 770              		.thumb_func
 772              	I2C_AcknowledgeConfig:
 773              	.LFB132:
 789:../stdperiph/source/stm32f37x_i2c.c ****   }
 790:../stdperiph/source/stm32f37x_i2c.c **** }    
 791:../stdperiph/source/stm32f37x_i2c.c **** 
 792:../stdperiph/source/stm32f37x_i2c.c **** /**
 793:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Generates I2C communication Acknowledge.
 794:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 795:../stdperiph/source/stm32f37x_i2c.c ****   * @param  NewState: new state of the Acknowledge.
 796:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.  
 797:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
 798:../stdperiph/source/stm32f37x_i2c.c ****   */
 799:../stdperiph/source/stm32f37x_i2c.c **** void I2C_AcknowledgeConfig(I2C_TypeDef* I2Cx, FunctionalState NewState)
 800:../stdperiph/source/stm32f37x_i2c.c **** {
 774              		.loc 1 800 0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 0, uses_anonymous_args = 0
 778              		@ link register save eliminated.
 779              	.LVL60:
 801:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 28


 802:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 803:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 804:../stdperiph/source/stm32f37x_i2c.c ****   
 805:../stdperiph/source/stm32f37x_i2c.c ****   if (NewState != DISABLE)
 780              		.loc 1 805 0
 781 0000 21B1     		cbz	r1, .L59
 806:../stdperiph/source/stm32f37x_i2c.c ****   {
 807:../stdperiph/source/stm32f37x_i2c.c ****     /* Enable ACK generation */
 808:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR2 &= (uint32_t)~((uint32_t)I2C_CR2_NACK);    
 782              		.loc 1 808 0
 783 0002 4368     		ldr	r3, [r0, #4]
 784 0004 23F40043 		bic	r3, r3, #32768
 785 0008 4360     		str	r3, [r0, #4]
 786 000a 7047     		bx	lr
 787              	.L59:
 809:../stdperiph/source/stm32f37x_i2c.c ****   }
 810:../stdperiph/source/stm32f37x_i2c.c ****   else
 811:../stdperiph/source/stm32f37x_i2c.c ****   {
 812:../stdperiph/source/stm32f37x_i2c.c ****     /* Enable NACK generation */
 813:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR2 |= I2C_CR2_NACK;
 788              		.loc 1 813 0
 789 000c 4368     		ldr	r3, [r0, #4]
 790 000e 43F40043 		orr	r3, r3, #32768
 791 0012 4360     		str	r3, [r0, #4]
 792 0014 7047     		bx	lr
 793              		.cfi_endproc
 794              	.LFE132:
 796 0016 00BF     		.section	.text.I2C_GetAddressMatched,"ax",%progbits
 797              		.align	2
 798              		.global	I2C_GetAddressMatched
 799              		.thumb
 800              		.thumb_func
 802              	I2C_GetAddressMatched:
 803              	.LFB133:
 814:../stdperiph/source/stm32f37x_i2c.c ****   }
 815:../stdperiph/source/stm32f37x_i2c.c **** }
 816:../stdperiph/source/stm32f37x_i2c.c **** 
 817:../stdperiph/source/stm32f37x_i2c.c **** /**
 818:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Returns the I2C slave matched address .
 819:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 820:../stdperiph/source/stm32f37x_i2c.c ****   * @retval The value of the slave matched address .
 821:../stdperiph/source/stm32f37x_i2c.c ****   */
 822:../stdperiph/source/stm32f37x_i2c.c **** uint8_t I2C_GetAddressMatched(I2C_TypeDef* I2Cx)
 823:../stdperiph/source/stm32f37x_i2c.c **** {
 804              		.loc 1 823 0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 0
 807              		@ frame_needed = 0, uses_anonymous_args = 0
 808              		@ link register save eliminated.
 809              	.LVL61:
 824:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
 825:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 826:../stdperiph/source/stm32f37x_i2c.c ****   
 827:../stdperiph/source/stm32f37x_i2c.c ****   /* Return the slave matched address in the SR1 register */
 828:../stdperiph/source/stm32f37x_i2c.c ****   return (uint8_t)(((uint32_t)I2Cx->ISR & I2C_ISR_ADDCODE) >> 16) ;
 810              		.loc 1 828 0
 811 0000 8069     		ldr	r0, [r0, #24]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 29


 812              	.LVL62:
 813 0002 000C     		lsrs	r0, r0, #16
 829:../stdperiph/source/stm32f37x_i2c.c **** }
 814              		.loc 1 829 0
 815 0004 00F0FE00 		and	r0, r0, #254
 816 0008 7047     		bx	lr
 817              		.cfi_endproc
 818              	.LFE133:
 820 000a 00BF     		.section	.text.I2C_GetTransferDirection,"ax",%progbits
 821              		.align	2
 822              		.global	I2C_GetTransferDirection
 823              		.thumb
 824              		.thumb_func
 826              	I2C_GetTransferDirection:
 827              	.LFB134:
 830:../stdperiph/source/stm32f37x_i2c.c **** 
 831:../stdperiph/source/stm32f37x_i2c.c **** /**
 832:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Returns the I2C slave received request.
 833:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 834:../stdperiph/source/stm32f37x_i2c.c ****   * @retval The value of the received request.
 835:../stdperiph/source/stm32f37x_i2c.c ****   */
 836:../stdperiph/source/stm32f37x_i2c.c **** uint16_t I2C_GetTransferDirection(I2C_TypeDef* I2Cx)
 837:../stdperiph/source/stm32f37x_i2c.c **** {
 828              		.loc 1 837 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 0
 831              		@ frame_needed = 0, uses_anonymous_args = 0
 832              		@ link register save eliminated.
 833              	.LVL63:
 838:../stdperiph/source/stm32f37x_i2c.c ****   uint32_t tmpreg = 0;
 839:../stdperiph/source/stm32f37x_i2c.c ****   uint16_t direction = 0;
 840:../stdperiph/source/stm32f37x_i2c.c ****   
 841:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
 842:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 843:../stdperiph/source/stm32f37x_i2c.c ****   
 844:../stdperiph/source/stm32f37x_i2c.c ****   /* Return the slave matched address in the SR1 register */
 845:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg = (uint32_t)(I2Cx->ISR & I2C_ISR_DIR);
 834              		.loc 1 845 0
 835 0000 8369     		ldr	r3, [r0, #24]
 836              	.LVL64:
 846:../stdperiph/source/stm32f37x_i2c.c ****   
 847:../stdperiph/source/stm32f37x_i2c.c ****   /* If write transfer is requested */
 848:../stdperiph/source/stm32f37x_i2c.c ****   if (tmpreg == 0)
 837              		.loc 1 848 0
 838 0002 13F4803F 		tst	r3, #65536
 839 0006 01D1     		bne	.L64
 849:../stdperiph/source/stm32f37x_i2c.c ****   {
 850:../stdperiph/source/stm32f37x_i2c.c ****     /* write transfer is requested */
 851:../stdperiph/source/stm32f37x_i2c.c ****     direction = I2C_Direction_Transmitter;
 840              		.loc 1 851 0
 841 0008 0020     		movs	r0, #0
 842              	.LVL65:
 843 000a 7047     		bx	lr
 844              	.LVL66:
 845              	.L64:
 852:../stdperiph/source/stm32f37x_i2c.c ****   }
 853:../stdperiph/source/stm32f37x_i2c.c ****   else
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 30


 854:../stdperiph/source/stm32f37x_i2c.c ****   {
 855:../stdperiph/source/stm32f37x_i2c.c ****     /* Read transfer is requested */
 856:../stdperiph/source/stm32f37x_i2c.c ****     direction = I2C_Direction_Receiver;
 846              		.loc 1 856 0
 847 000c 4FF48060 		mov	r0, #1024
 848              	.LVL67:
 857:../stdperiph/source/stm32f37x_i2c.c ****   }  
 858:../stdperiph/source/stm32f37x_i2c.c ****   return direction;
 859:../stdperiph/source/stm32f37x_i2c.c **** }
 849              		.loc 1 859 0
 850 0010 7047     		bx	lr
 851              		.cfi_endproc
 852              	.LFE134:
 854 0012 00BF     		.section	.text.I2C_TransferHandling,"ax",%progbits
 855              		.align	2
 856              		.global	I2C_TransferHandling
 857              		.thumb
 858              		.thumb_func
 860              	I2C_TransferHandling:
 861              	.LFB135:
 860:../stdperiph/source/stm32f37x_i2c.c **** 
 861:../stdperiph/source/stm32f37x_i2c.c **** /**
 862:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Handles I2Cx communication when starting transfer or during transfer (TC or TCR flag ar
 863:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 864:../stdperiph/source/stm32f37x_i2c.c ****   * @param  Address: specifies the slave address to be programmed.
 865:../stdperiph/source/stm32f37x_i2c.c ****   * @param  Number_Bytes: specifies the number of bytes to be programmed.
 866:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter must be a value between 0 and 255.
 867:../stdperiph/source/stm32f37x_i2c.c ****   * @param  ReloadEndMode: new state of the I2C START condition generation.
 868:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be one of the following values:
 869:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_Reload_Mode: Enable Reload mode .
 870:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_AutoEnd_Mode: Enable Automatic end mode.
 871:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_SoftEnd_Mode: Enable Software end mode.
 872:../stdperiph/source/stm32f37x_i2c.c ****   * @param  StartStopMode: new state of the I2C START condition generation.
 873:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be one of the following values:
 874:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_No_StartStop: Don't Generate stop and start condition.
 875:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_Generate_Stop: Generate stop condition (Number_Bytes should be set to 0).
 876:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_Generate_Start_Read: Generate Restart for read request.
 877:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_Generate_Start_Write: Generate Restart for write request.
 878:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
 879:../stdperiph/source/stm32f37x_i2c.c ****   */
 880:../stdperiph/source/stm32f37x_i2c.c **** void I2C_TransferHandling(I2C_TypeDef* I2Cx, uint16_t Address, uint8_t Number_Bytes, uint32_t Reloa
 881:../stdperiph/source/stm32f37x_i2c.c **** {
 862              		.loc 1 881 0
 863              		.cfi_startproc
 864              		@ args = 4, pretend = 0, frame = 0
 865              		@ frame_needed = 0, uses_anonymous_args = 0
 866              		@ link register save eliminated.
 867              	.LVL68:
 868 0000 30B4     		push	{r4, r5}
 869              	.LCFI3:
 870              		.cfi_def_cfa_offset 8
 871              		.cfi_offset 4, -8
 872              		.cfi_offset 5, -4
 873              	.LVL69:
 882:../stdperiph/source/stm32f37x_i2c.c ****   uint32_t tmpreg = 0;
 883:../stdperiph/source/stm32f37x_i2c.c ****   
 884:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 31


 885:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 886:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_SLAVE_ADDRESS(Address));  
 887:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_RELOAD_END_MODE(ReloadEndMode));
 888:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_START_STOP_MODE(StartStopMode));
 889:../stdperiph/source/stm32f37x_i2c.c ****     
 890:../stdperiph/source/stm32f37x_i2c.c ****   /* Get the CR2 register value */
 891:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg = I2Cx->CR2;
 874              		.loc 1 891 0
 875 0002 4468     		ldr	r4, [r0, #4]
 876              	.LVL70:
 892:../stdperiph/source/stm32f37x_i2c.c ****   
 893:../stdperiph/source/stm32f37x_i2c.c ****   /* clear tmpreg specific bits */
 894:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg &= (uint32_t)~((uint32_t)(I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND
 877              		.loc 1 894 0
 878 0004 064D     		ldr	r5, .L67
 879 0006 2540     		ands	r5, r5, r4
 880              	.LVL71:
 895:../stdperiph/source/stm32f37x_i2c.c ****   
 896:../stdperiph/source/stm32f37x_i2c.c ****   /* update tmpreg */
 897:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg |= (uint32_t)(((uint32_t)Address & I2C_CR2_SADD) | (((uint32_t)Number_Bytes << 16 ) & I2C_
 881              		.loc 1 897 0
 882 0008 C1F30901 		ubfx	r1, r1, #0, #10
 883              	.LVL72:
 884 000c 41EA0242 		orr	r2, r1, r2, lsl #16
 885              	.LVL73:
 886 0010 1343     		orrs	r3, r3, r2
 887              	.LVL74:
 888 0012 029C     		ldr	r4, [sp, #8]
 889 0014 1C43     		orrs	r4, r4, r3
 890 0016 2C43     		orrs	r4, r4, r5
 891              	.LVL75:
 898:../stdperiph/source/stm32f37x_i2c.c ****             (uint32_t)ReloadEndMode | (uint32_t)StartStopMode);
 899:../stdperiph/source/stm32f37x_i2c.c ****   
 900:../stdperiph/source/stm32f37x_i2c.c ****   /* update CR2 register */
 901:../stdperiph/source/stm32f37x_i2c.c ****   I2Cx->CR2 = tmpreg;  
 892              		.loc 1 901 0
 893 0018 4460     		str	r4, [r0, #4]
 902:../stdperiph/source/stm32f37x_i2c.c **** }  
 894              		.loc 1 902 0
 895 001a 30BC     		pop	{r4, r5}
 896              	.LCFI4:
 897              		.cfi_restore 5
 898              		.cfi_restore 4
 899              		.cfi_def_cfa_offset 0
 900              	.LVL76:
 901 001c 7047     		bx	lr
 902              	.L68:
 903 001e 00BF     		.align	2
 904              	.L67:
 905 0020 009800FC 		.word	-67069952
 906              		.cfi_endproc
 907              	.LFE135:
 909              		.section	.text.I2C_SMBusAlertCmd,"ax",%progbits
 910              		.align	2
 911              		.global	I2C_SMBusAlertCmd
 912              		.thumb
 913              		.thumb_func
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 32


 915              	I2C_SMBusAlertCmd:
 916              	.LFB136:
 903:../stdperiph/source/stm32f37x_i2c.c **** 
 904:../stdperiph/source/stm32f37x_i2c.c **** /**
 905:../stdperiph/source/stm32f37x_i2c.c ****   * @}
 906:../stdperiph/source/stm32f37x_i2c.c ****   */
 907:../stdperiph/source/stm32f37x_i2c.c **** 
 908:../stdperiph/source/stm32f37x_i2c.c **** 
 909:../stdperiph/source/stm32f37x_i2c.c **** /** @defgroup I2C_Group3 SMBUS management functions
 910:../stdperiph/source/stm32f37x_i2c.c ****  *  @brief   SMBUS management functions 
 911:../stdperiph/source/stm32f37x_i2c.c ****  *
 912:../stdperiph/source/stm32f37x_i2c.c **** @verbatim
 913:../stdperiph/source/stm32f37x_i2c.c ****  ===============================================================================
 914:../stdperiph/source/stm32f37x_i2c.c ****                       ##### SMBUS management functions #####
 915:../stdperiph/source/stm32f37x_i2c.c ****  ===============================================================================  
 916:../stdperiph/source/stm32f37x_i2c.c ****     [..] This section provides a set of functions that handles SMBus communication
 917:../stdperiph/source/stm32f37x_i2c.c ****          and timeouts detection.
 918:../stdperiph/source/stm32f37x_i2c.c **** 
 919:../stdperiph/source/stm32f37x_i2c.c ****     [..] The SMBus Device default address (0b1100 001) is enabled by calling I2C_Init()
 920:../stdperiph/source/stm32f37x_i2c.c ****          function and setting I2C_Mode member of I2C_InitTypeDef() structure to 
 921:../stdperiph/source/stm32f37x_i2c.c ****          I2C_Mode_SMBusDevice.
 922:../stdperiph/source/stm32f37x_i2c.c **** 
 923:../stdperiph/source/stm32f37x_i2c.c ****     [..] The SMBus Host address (0b0001 000) is enabled by calling I2C_Init()
 924:../stdperiph/source/stm32f37x_i2c.c ****          function and setting I2C_Mode member of I2C_InitTypeDef() structure to 
 925:../stdperiph/source/stm32f37x_i2c.c ****          I2C_Mode_SMBusHost.
 926:../stdperiph/source/stm32f37x_i2c.c **** 
 927:../stdperiph/source/stm32f37x_i2c.c ****     [..] The Alert Response Address (0b0001 100) is enabled using I2C_SMBusAlertCmd()
 928:../stdperiph/source/stm32f37x_i2c.c ****          function.
 929:../stdperiph/source/stm32f37x_i2c.c **** 
 930:../stdperiph/source/stm32f37x_i2c.c ****     [..] To detect cumulative SCL stretch in master and slave mode, TIMEOUTB should be 
 931:../stdperiph/source/stm32f37x_i2c.c ****          configured (in accordance to SMBus specification) using I2C_TimeoutBConfig() 
 932:../stdperiph/source/stm32f37x_i2c.c ****          function then I2C_ExtendedClockTimeoutCmd() function should be called to enable
 933:../stdperiph/source/stm32f37x_i2c.c ****          the detection.
 934:../stdperiph/source/stm32f37x_i2c.c **** 
 935:../stdperiph/source/stm32f37x_i2c.c ****     [..] SCL low timeout is detected by configuring TIMEOUTB using I2C_TimeoutBConfig()
 936:../stdperiph/source/stm32f37x_i2c.c ****          function followed by the call of I2C_ClockTimeoutCmd(). When adding to this 
 937:../stdperiph/source/stm32f37x_i2c.c ****          procedure the call of I2C_IdleClockTimeoutCmd() function, Bus Idle condition 
 938:../stdperiph/source/stm32f37x_i2c.c ****          (both SCL and SDA high) is detected also.
 939:../stdperiph/source/stm32f37x_i2c.c **** 
 940:../stdperiph/source/stm32f37x_i2c.c **** @endverbatim
 941:../stdperiph/source/stm32f37x_i2c.c ****   * @{
 942:../stdperiph/source/stm32f37x_i2c.c ****   */
 943:../stdperiph/source/stm32f37x_i2c.c **** 
 944:../stdperiph/source/stm32f37x_i2c.c **** /**
 945:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Enables or disables I2C SMBus alert.
 946:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 947:../stdperiph/source/stm32f37x_i2c.c ****   * @param  NewState: new state of the I2Cx SMBus alert.
 948:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 949:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
 950:../stdperiph/source/stm32f37x_i2c.c ****   */
 951:../stdperiph/source/stm32f37x_i2c.c **** void I2C_SMBusAlertCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 952:../stdperiph/source/stm32f37x_i2c.c **** {
 917              		.loc 1 952 0
 918              		.cfi_startproc
 919              		@ args = 0, pretend = 0, frame = 0
 920              		@ frame_needed = 0, uses_anonymous_args = 0
 921              		@ link register save eliminated.
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 33


 922              	.LVL77:
 953:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
 954:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 955:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 956:../stdperiph/source/stm32f37x_i2c.c ****   
 957:../stdperiph/source/stm32f37x_i2c.c ****   if (NewState != DISABLE)
 923              		.loc 1 957 0
 924 0000 21B1     		cbz	r1, .L70
 958:../stdperiph/source/stm32f37x_i2c.c ****   {
 959:../stdperiph/source/stm32f37x_i2c.c ****     /* Enable SMBus alert */
 960:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ALERTEN;   
 925              		.loc 1 960 0
 926 0002 0368     		ldr	r3, [r0]
 927 0004 43F48003 		orr	r3, r3, #4194304
 928 0008 0360     		str	r3, [r0]
 929 000a 7047     		bx	lr
 930              	.L70:
 961:../stdperiph/source/stm32f37x_i2c.c ****   }
 962:../stdperiph/source/stm32f37x_i2c.c ****   else
 963:../stdperiph/source/stm32f37x_i2c.c ****   {
 964:../stdperiph/source/stm32f37x_i2c.c ****     /* Disable SMBus alert */    
 965:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR1 &= (uint32_t)~((uint32_t)I2C_CR1_ALERTEN); 
 931              		.loc 1 965 0
 932 000c 0368     		ldr	r3, [r0]
 933 000e 23F48003 		bic	r3, r3, #4194304
 934 0012 0360     		str	r3, [r0]
 935 0014 7047     		bx	lr
 936              		.cfi_endproc
 937              	.LFE136:
 939 0016 00BF     		.section	.text.I2C_ClockTimeoutCmd,"ax",%progbits
 940              		.align	2
 941              		.global	I2C_ClockTimeoutCmd
 942              		.thumb
 943              		.thumb_func
 945              	I2C_ClockTimeoutCmd:
 946              	.LFB137:
 966:../stdperiph/source/stm32f37x_i2c.c ****   }
 967:../stdperiph/source/stm32f37x_i2c.c **** }
 968:../stdperiph/source/stm32f37x_i2c.c **** 
 969:../stdperiph/source/stm32f37x_i2c.c **** /**
 970:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Enables or disables I2C Clock Timeout (SCL Timeout detection).
 971:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 972:../stdperiph/source/stm32f37x_i2c.c ****   * @param  NewState: new state of the I2Cx clock Timeout.
 973:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 974:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
 975:../stdperiph/source/stm32f37x_i2c.c ****   */
 976:../stdperiph/source/stm32f37x_i2c.c **** void I2C_ClockTimeoutCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 977:../stdperiph/source/stm32f37x_i2c.c **** {
 947              		.loc 1 977 0
 948              		.cfi_startproc
 949              		@ args = 0, pretend = 0, frame = 0
 950              		@ frame_needed = 0, uses_anonymous_args = 0
 951              		@ link register save eliminated.
 952              	.LVL78:
 978:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
 979:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 980:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 34


 981:../stdperiph/source/stm32f37x_i2c.c ****   
 982:../stdperiph/source/stm32f37x_i2c.c ****   if (NewState != DISABLE)
 953              		.loc 1 982 0
 954 0000 21B1     		cbz	r1, .L73
 983:../stdperiph/source/stm32f37x_i2c.c ****   {
 984:../stdperiph/source/stm32f37x_i2c.c ****     /* Enable Clock Timeout */
 985:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->TIMEOUTR |= I2C_TIMEOUTR_TIMOUTEN;   
 955              		.loc 1 985 0
 956 0002 4369     		ldr	r3, [r0, #20]
 957 0004 43F40043 		orr	r3, r3, #32768
 958 0008 4361     		str	r3, [r0, #20]
 959 000a 7047     		bx	lr
 960              	.L73:
 986:../stdperiph/source/stm32f37x_i2c.c ****   }
 987:../stdperiph/source/stm32f37x_i2c.c ****   else
 988:../stdperiph/source/stm32f37x_i2c.c ****   {
 989:../stdperiph/source/stm32f37x_i2c.c ****     /* Disable Clock Timeout */    
 990:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->TIMEOUTR &= (uint32_t)~((uint32_t)I2C_TIMEOUTR_TIMOUTEN); 
 961              		.loc 1 990 0
 962 000c 4369     		ldr	r3, [r0, #20]
 963 000e 23F40043 		bic	r3, r3, #32768
 964 0012 4361     		str	r3, [r0, #20]
 965 0014 7047     		bx	lr
 966              		.cfi_endproc
 967              	.LFE137:
 969 0016 00BF     		.section	.text.I2C_ExtendedClockTimeoutCmd,"ax",%progbits
 970              		.align	2
 971              		.global	I2C_ExtendedClockTimeoutCmd
 972              		.thumb
 973              		.thumb_func
 975              	I2C_ExtendedClockTimeoutCmd:
 976              	.LFB138:
 991:../stdperiph/source/stm32f37x_i2c.c ****   }
 992:../stdperiph/source/stm32f37x_i2c.c **** }
 993:../stdperiph/source/stm32f37x_i2c.c **** 
 994:../stdperiph/source/stm32f37x_i2c.c **** /**
 995:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Enables or disables I2C Extended Clock Timeout (SCL cumulative Timeout detection).
 996:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
 997:../stdperiph/source/stm32f37x_i2c.c ****   * @param  NewState: new state of the I2Cx Extended clock Timeout.
 998:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 999:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
1000:../stdperiph/source/stm32f37x_i2c.c ****   */
1001:../stdperiph/source/stm32f37x_i2c.c **** void I2C_ExtendedClockTimeoutCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
1002:../stdperiph/source/stm32f37x_i2c.c **** {
 977              		.loc 1 1002 0
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 0
 980              		@ frame_needed = 0, uses_anonymous_args = 0
 981              		@ link register save eliminated.
 982              	.LVL79:
1003:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
1004:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1005:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1006:../stdperiph/source/stm32f37x_i2c.c ****   
1007:../stdperiph/source/stm32f37x_i2c.c ****   if (NewState != DISABLE)
 983              		.loc 1 1007 0
 984 0000 21B1     		cbz	r1, .L76
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 35


1008:../stdperiph/source/stm32f37x_i2c.c ****   {
1009:../stdperiph/source/stm32f37x_i2c.c ****     /* Enable Clock Timeout */
1010:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->TIMEOUTR |= I2C_TIMEOUTR_TEXTEN;   
 985              		.loc 1 1010 0
 986 0002 4369     		ldr	r3, [r0, #20]
 987 0004 43F00043 		orr	r3, r3, #-2147483648
 988 0008 4361     		str	r3, [r0, #20]
 989 000a 7047     		bx	lr
 990              	.L76:
1011:../stdperiph/source/stm32f37x_i2c.c ****   }
1012:../stdperiph/source/stm32f37x_i2c.c ****   else
1013:../stdperiph/source/stm32f37x_i2c.c ****   {
1014:../stdperiph/source/stm32f37x_i2c.c ****     /* Disable Clock Timeout */    
1015:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->TIMEOUTR &= (uint32_t)~((uint32_t)I2C_TIMEOUTR_TEXTEN); 
 991              		.loc 1 1015 0
 992 000c 4369     		ldr	r3, [r0, #20]
 993 000e 23F00043 		bic	r3, r3, #-2147483648
 994 0012 4361     		str	r3, [r0, #20]
 995 0014 7047     		bx	lr
 996              		.cfi_endproc
 997              	.LFE138:
 999 0016 00BF     		.section	.text.I2C_IdleClockTimeoutCmd,"ax",%progbits
 1000              		.align	2
 1001              		.global	I2C_IdleClockTimeoutCmd
 1002              		.thumb
 1003              		.thumb_func
 1005              	I2C_IdleClockTimeoutCmd:
 1006              	.LFB139:
1016:../stdperiph/source/stm32f37x_i2c.c ****   }
1017:../stdperiph/source/stm32f37x_i2c.c **** }
1018:../stdperiph/source/stm32f37x_i2c.c **** 
1019:../stdperiph/source/stm32f37x_i2c.c **** /**
1020:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Enables or disables I2C Idle Clock Timeout (Bus idle SCL and SDA 
1021:../stdperiph/source/stm32f37x_i2c.c ****   *         high detection).
1022:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
1023:../stdperiph/source/stm32f37x_i2c.c ****   * @param  NewState: new state of the I2Cx Idle clock Timeout.
1024:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
1025:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
1026:../stdperiph/source/stm32f37x_i2c.c ****   */
1027:../stdperiph/source/stm32f37x_i2c.c **** void I2C_IdleClockTimeoutCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
1028:../stdperiph/source/stm32f37x_i2c.c **** {
 1007              		.loc 1 1028 0
 1008              		.cfi_startproc
 1009              		@ args = 0, pretend = 0, frame = 0
 1010              		@ frame_needed = 0, uses_anonymous_args = 0
 1011              		@ link register save eliminated.
 1012              	.LVL80:
1029:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
1030:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1031:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1032:../stdperiph/source/stm32f37x_i2c.c ****   
1033:../stdperiph/source/stm32f37x_i2c.c ****   if (NewState != DISABLE)
 1013              		.loc 1 1033 0
 1014 0000 21B1     		cbz	r1, .L79
1034:../stdperiph/source/stm32f37x_i2c.c ****   {
1035:../stdperiph/source/stm32f37x_i2c.c ****     /* Enable Clock Timeout */
1036:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->TIMEOUTR |= I2C_TIMEOUTR_TIDLE;   
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 36


 1015              		.loc 1 1036 0
 1016 0002 4369     		ldr	r3, [r0, #20]
 1017 0004 43F48053 		orr	r3, r3, #4096
 1018 0008 4361     		str	r3, [r0, #20]
 1019 000a 7047     		bx	lr
 1020              	.L79:
1037:../stdperiph/source/stm32f37x_i2c.c ****   }
1038:../stdperiph/source/stm32f37x_i2c.c ****   else
1039:../stdperiph/source/stm32f37x_i2c.c ****   {
1040:../stdperiph/source/stm32f37x_i2c.c ****     /* Disable Clock Timeout */    
1041:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->TIMEOUTR &= (uint32_t)~((uint32_t)I2C_TIMEOUTR_TIDLE); 
 1021              		.loc 1 1041 0
 1022 000c 4369     		ldr	r3, [r0, #20]
 1023 000e 23F48053 		bic	r3, r3, #4096
 1024 0012 4361     		str	r3, [r0, #20]
 1025 0014 7047     		bx	lr
 1026              		.cfi_endproc
 1027              	.LFE139:
 1029 0016 00BF     		.section	.text.I2C_TimeoutAConfig,"ax",%progbits
 1030              		.align	2
 1031              		.global	I2C_TimeoutAConfig
 1032              		.thumb
 1033              		.thumb_func
 1035              	I2C_TimeoutAConfig:
 1036              	.LFB140:
1042:../stdperiph/source/stm32f37x_i2c.c ****   }
1043:../stdperiph/source/stm32f37x_i2c.c **** }
1044:../stdperiph/source/stm32f37x_i2c.c **** 
1045:../stdperiph/source/stm32f37x_i2c.c **** /**
1046:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Configures the I2C Bus Timeout A (SCL Timeout when TIDLE = 0 or Bus 
1047:../stdperiph/source/stm32f37x_i2c.c ****   *         idle SCL and SDA high when TIDLE = 1).
1048:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
1049:../stdperiph/source/stm32f37x_i2c.c ****   * @param  Timeout: specifies the TimeoutA to be programmed. 
1050:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
1051:../stdperiph/source/stm32f37x_i2c.c ****   */
1052:../stdperiph/source/stm32f37x_i2c.c **** void I2C_TimeoutAConfig(I2C_TypeDef* I2Cx, uint16_t Timeout)
1053:../stdperiph/source/stm32f37x_i2c.c **** {
 1037              		.loc 1 1053 0
 1038              		.cfi_startproc
 1039              		@ args = 0, pretend = 0, frame = 0
 1040              		@ frame_needed = 0, uses_anonymous_args = 0
 1041              		@ link register save eliminated.
 1042              	.LVL81:
1054:../stdperiph/source/stm32f37x_i2c.c ****   uint32_t tmpreg = 0;
1055:../stdperiph/source/stm32f37x_i2c.c **** 
1056:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
1057:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1058:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_TIMEOUT(Timeout));
1059:../stdperiph/source/stm32f37x_i2c.c ****     
1060:../stdperiph/source/stm32f37x_i2c.c ****   /* Get the old register value */
1061:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg = I2Cx->TIMEOUTR;
 1043              		.loc 1 1061 0
 1044 0000 4369     		ldr	r3, [r0, #20]
 1045              	.LVL82:
1062:../stdperiph/source/stm32f37x_i2c.c **** 
1063:../stdperiph/source/stm32f37x_i2c.c ****   /* Reset I2Cx TIMEOUTA bit [11:0] */
1064:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg &= (uint32_t)~((uint32_t)I2C_TIMEOUTR_TIMEOUTA);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 37


 1046              		.loc 1 1064 0
 1047 0002 23F47F63 		bic	r3, r3, #4080
 1048              	.LVL83:
 1049 0006 23F00F03 		bic	r3, r3, #15
 1050              	.LVL84:
1065:../stdperiph/source/stm32f37x_i2c.c **** 
1066:../stdperiph/source/stm32f37x_i2c.c ****   /* Set I2Cx TIMEOUTA */
1067:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg |= (uint32_t)((uint32_t)Timeout & I2C_TIMEOUTR_TIMEOUTA) ;
 1051              		.loc 1 1067 0
 1052 000a C1F30B01 		ubfx	r1, r1, #0, #12
 1053              	.LVL85:
 1054 000e 0B43     		orrs	r3, r3, r1
 1055              	.LVL86:
1068:../stdperiph/source/stm32f37x_i2c.c **** 
1069:../stdperiph/source/stm32f37x_i2c.c ****   /* Store the new register value */
1070:../stdperiph/source/stm32f37x_i2c.c ****   I2Cx->TIMEOUTR = tmpreg;
 1056              		.loc 1 1070 0
 1057 0010 4361     		str	r3, [r0, #20]
 1058 0012 7047     		bx	lr
 1059              		.cfi_endproc
 1060              	.LFE140:
 1062              		.section	.text.I2C_TimeoutBConfig,"ax",%progbits
 1063              		.align	2
 1064              		.global	I2C_TimeoutBConfig
 1065              		.thumb
 1066              		.thumb_func
 1068              	I2C_TimeoutBConfig:
 1069              	.LFB141:
1071:../stdperiph/source/stm32f37x_i2c.c **** }
1072:../stdperiph/source/stm32f37x_i2c.c **** 
1073:../stdperiph/source/stm32f37x_i2c.c **** /**
1074:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Configures the I2C Bus Timeout B (SCL cumulative Timeout).
1075:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
1076:../stdperiph/source/stm32f37x_i2c.c ****   * @param  Timeout: specifies the TimeoutB to be programmed. 
1077:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
1078:../stdperiph/source/stm32f37x_i2c.c ****   */
1079:../stdperiph/source/stm32f37x_i2c.c **** void I2C_TimeoutBConfig(I2C_TypeDef* I2Cx, uint16_t Timeout)
1080:../stdperiph/source/stm32f37x_i2c.c **** {
 1070              		.loc 1 1080 0
 1071              		.cfi_startproc
 1072              		@ args = 0, pretend = 0, frame = 0
 1073              		@ frame_needed = 0, uses_anonymous_args = 0
 1074              		@ link register save eliminated.
 1075              	.LVL87:
1081:../stdperiph/source/stm32f37x_i2c.c ****   uint32_t tmpreg = 0;
1082:../stdperiph/source/stm32f37x_i2c.c **** 
1083:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
1084:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1085:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_TIMEOUT(Timeout));
1086:../stdperiph/source/stm32f37x_i2c.c **** 
1087:../stdperiph/source/stm32f37x_i2c.c ****   /* Get the old register value */
1088:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg = I2Cx->TIMEOUTR;
 1076              		.loc 1 1088 0
 1077 0000 4269     		ldr	r2, [r0, #20]
 1078              	.LVL88:
1089:../stdperiph/source/stm32f37x_i2c.c **** 
1090:../stdperiph/source/stm32f37x_i2c.c ****   /* Reset I2Cx TIMEOUTB bit [11:0] */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 38


1091:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg &= (uint32_t)~((uint32_t)I2C_TIMEOUTR_TIMEOUTB);
 1079              		.loc 1 1091 0
 1080 0002 22F07F62 		bic	r2, r2, #267386880
 1081              	.LVL89:
 1082 0006 22F47022 		bic	r2, r2, #983040
 1083              	.LVL90:
1092:../stdperiph/source/stm32f37x_i2c.c **** 
1093:../stdperiph/source/stm32f37x_i2c.c ****   /* Set I2Cx TIMEOUTB */
1094:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg |= (uint32_t)(((uint32_t)Timeout << 16) & I2C_TIMEOUTR_TIMEOUTB) ;
 1084              		.loc 1 1094 0
 1085 000a 034B     		ldr	r3, .L83
 1086 000c 03EA0141 		and	r1, r3, r1, lsl #16
 1087              	.LVL91:
 1088 0010 1143     		orrs	r1, r1, r2
 1089              	.LVL92:
1095:../stdperiph/source/stm32f37x_i2c.c **** 
1096:../stdperiph/source/stm32f37x_i2c.c ****   /* Store the new register value */
1097:../stdperiph/source/stm32f37x_i2c.c ****   I2Cx->TIMEOUTR = tmpreg;
 1090              		.loc 1 1097 0
 1091 0012 4161     		str	r1, [r0, #20]
 1092 0014 7047     		bx	lr
 1093              	.L84:
 1094 0016 00BF     		.align	2
 1095              	.L83:
 1096 0018 0000FF0F 		.word	268369920
 1097              		.cfi_endproc
 1098              	.LFE141:
 1100              		.section	.text.I2C_CalculatePEC,"ax",%progbits
 1101              		.align	2
 1102              		.global	I2C_CalculatePEC
 1103              		.thumb
 1104              		.thumb_func
 1106              	I2C_CalculatePEC:
 1107              	.LFB142:
1098:../stdperiph/source/stm32f37x_i2c.c **** }
1099:../stdperiph/source/stm32f37x_i2c.c **** 
1100:../stdperiph/source/stm32f37x_i2c.c **** /**
1101:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Enables or disables I2C PEC calculation.
1102:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
1103:../stdperiph/source/stm32f37x_i2c.c ****   * @param  NewState: new state of the I2Cx PEC calculation.
1104:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
1105:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
1106:../stdperiph/source/stm32f37x_i2c.c ****   */
1107:../stdperiph/source/stm32f37x_i2c.c **** void I2C_CalculatePEC(I2C_TypeDef* I2Cx, FunctionalState NewState)
1108:../stdperiph/source/stm32f37x_i2c.c **** {
 1108              		.loc 1 1108 0
 1109              		.cfi_startproc
 1110              		@ args = 0, pretend = 0, frame = 0
 1111              		@ frame_needed = 0, uses_anonymous_args = 0
 1112              		@ link register save eliminated.
 1113              	.LVL93:
1109:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
1110:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1111:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1112:../stdperiph/source/stm32f37x_i2c.c ****   
1113:../stdperiph/source/stm32f37x_i2c.c ****   if (NewState != DISABLE)
 1114              		.loc 1 1113 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 39


 1115 0000 21B1     		cbz	r1, .L86
1114:../stdperiph/source/stm32f37x_i2c.c ****   {
1115:../stdperiph/source/stm32f37x_i2c.c ****     /* Enable PEC calculation */
1116:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR1 |= I2C_CR1_PECEN;   
 1116              		.loc 1 1116 0
 1117 0002 0368     		ldr	r3, [r0]
 1118 0004 43F40003 		orr	r3, r3, #8388608
 1119 0008 0360     		str	r3, [r0]
 1120 000a 7047     		bx	lr
 1121              	.L86:
1117:../stdperiph/source/stm32f37x_i2c.c ****   }
1118:../stdperiph/source/stm32f37x_i2c.c ****   else
1119:../stdperiph/source/stm32f37x_i2c.c ****   {
1120:../stdperiph/source/stm32f37x_i2c.c ****     /* Disable PEC calculation */    
1121:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR1 &= (uint32_t)~((uint32_t)I2C_CR1_PECEN); 
 1122              		.loc 1 1121 0
 1123 000c 0368     		ldr	r3, [r0]
 1124 000e 23F40003 		bic	r3, r3, #8388608
 1125 0012 0360     		str	r3, [r0]
 1126 0014 7047     		bx	lr
 1127              		.cfi_endproc
 1128              	.LFE142:
 1130 0016 00BF     		.section	.text.I2C_PECRequestCmd,"ax",%progbits
 1131              		.align	2
 1132              		.global	I2C_PECRequestCmd
 1133              		.thumb
 1134              		.thumb_func
 1136              	I2C_PECRequestCmd:
 1137              	.LFB143:
1122:../stdperiph/source/stm32f37x_i2c.c ****   }
1123:../stdperiph/source/stm32f37x_i2c.c **** }
1124:../stdperiph/source/stm32f37x_i2c.c **** 
1125:../stdperiph/source/stm32f37x_i2c.c **** /**
1126:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Enables or disables I2C PEC transmission/reception request.
1127:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
1128:../stdperiph/source/stm32f37x_i2c.c ****   * @param  NewState: new state of the I2Cx PEC request.
1129:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
1130:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
1131:../stdperiph/source/stm32f37x_i2c.c ****   */
1132:../stdperiph/source/stm32f37x_i2c.c **** void I2C_PECRequestCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
1133:../stdperiph/source/stm32f37x_i2c.c **** {
 1138              		.loc 1 1133 0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 0
 1141              		@ frame_needed = 0, uses_anonymous_args = 0
 1142              		@ link register save eliminated.
 1143              	.LVL94:
1134:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
1135:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1136:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1137:../stdperiph/source/stm32f37x_i2c.c ****   
1138:../stdperiph/source/stm32f37x_i2c.c ****   if (NewState != DISABLE)
 1144              		.loc 1 1138 0
 1145 0000 21B1     		cbz	r1, .L89
1139:../stdperiph/source/stm32f37x_i2c.c ****   {
1140:../stdperiph/source/stm32f37x_i2c.c ****     /* Enable PEC transmission/reception request */
1141:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR1 |= I2C_CR2_PECBYTE;   
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 40


 1146              		.loc 1 1141 0
 1147 0002 0368     		ldr	r3, [r0]
 1148 0004 43F08063 		orr	r3, r3, #67108864
 1149 0008 0360     		str	r3, [r0]
 1150 000a 7047     		bx	lr
 1151              	.L89:
1142:../stdperiph/source/stm32f37x_i2c.c ****   }
1143:../stdperiph/source/stm32f37x_i2c.c ****   else
1144:../stdperiph/source/stm32f37x_i2c.c ****   {
1145:../stdperiph/source/stm32f37x_i2c.c ****     /* Disable PEC transmission/reception request */    
1146:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR1 &= (uint32_t)~((uint32_t)I2C_CR2_PECBYTE); 
 1152              		.loc 1 1146 0
 1153 000c 0368     		ldr	r3, [r0]
 1154 000e 23F08063 		bic	r3, r3, #67108864
 1155 0012 0360     		str	r3, [r0]
 1156 0014 7047     		bx	lr
 1157              		.cfi_endproc
 1158              	.LFE143:
 1160 0016 00BF     		.section	.text.I2C_GetPEC,"ax",%progbits
 1161              		.align	2
 1162              		.global	I2C_GetPEC
 1163              		.thumb
 1164              		.thumb_func
 1166              	I2C_GetPEC:
 1167              	.LFB144:
1147:../stdperiph/source/stm32f37x_i2c.c ****   }
1148:../stdperiph/source/stm32f37x_i2c.c **** }
1149:../stdperiph/source/stm32f37x_i2c.c **** 
1150:../stdperiph/source/stm32f37x_i2c.c **** /**
1151:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Returns the I2C PEC.
1152:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
1153:../stdperiph/source/stm32f37x_i2c.c ****   * @retval The value of the PEC .
1154:../stdperiph/source/stm32f37x_i2c.c ****   */
1155:../stdperiph/source/stm32f37x_i2c.c **** uint8_t I2C_GetPEC(I2C_TypeDef* I2Cx)
1156:../stdperiph/source/stm32f37x_i2c.c **** {
 1168              		.loc 1 1156 0
 1169              		.cfi_startproc
 1170              		@ args = 0, pretend = 0, frame = 0
 1171              		@ frame_needed = 0, uses_anonymous_args = 0
 1172              		@ link register save eliminated.
 1173              	.LVL95:
1157:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
1158:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1159:../stdperiph/source/stm32f37x_i2c.c ****   
1160:../stdperiph/source/stm32f37x_i2c.c ****   /* Return the slave matched address in the SR1 register */
1161:../stdperiph/source/stm32f37x_i2c.c ****   return (uint8_t)((uint32_t)I2Cx->PECR & I2C_PECR_PEC);
 1174              		.loc 1 1161 0
 1175 0000 006A     		ldr	r0, [r0, #32]
 1176              	.LVL96:
1162:../stdperiph/source/stm32f37x_i2c.c **** }
 1177              		.loc 1 1162 0
 1178 0002 C0B2     		uxtb	r0, r0
 1179 0004 7047     		bx	lr
 1180              		.cfi_endproc
 1181              	.LFE144:
 1183 0006 00BF     		.section	.text.I2C_ReadRegister,"ax",%progbits
 1184              		.align	2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 41


 1185              		.global	I2C_ReadRegister
 1186              		.thumb
 1187              		.thumb_func
 1189              	I2C_ReadRegister:
 1190              	.LFB145:
1163:../stdperiph/source/stm32f37x_i2c.c **** 
1164:../stdperiph/source/stm32f37x_i2c.c **** /**
1165:../stdperiph/source/stm32f37x_i2c.c ****   * @}
1166:../stdperiph/source/stm32f37x_i2c.c ****   */  
1167:../stdperiph/source/stm32f37x_i2c.c **** 
1168:../stdperiph/source/stm32f37x_i2c.c **** 
1169:../stdperiph/source/stm32f37x_i2c.c **** /** @defgroup I2C_Group4 I2C registers management functions
1170:../stdperiph/source/stm32f37x_i2c.c ****  *  @brief   I2C registers management functions 
1171:../stdperiph/source/stm32f37x_i2c.c ****  *
1172:../stdperiph/source/stm32f37x_i2c.c **** @verbatim
1173:../stdperiph/source/stm32f37x_i2c.c ****  ===============================================================================
1174:../stdperiph/source/stm32f37x_i2c.c ****                 ##### I2C registers management functions #####
1175:../stdperiph/source/stm32f37x_i2c.c ****  ===============================================================================  
1176:../stdperiph/source/stm32f37x_i2c.c ****     [..] This section provides a functions that allow user the management of 
1177:../stdperiph/source/stm32f37x_i2c.c ****          I2C registers.
1178:../stdperiph/source/stm32f37x_i2c.c **** 
1179:../stdperiph/source/stm32f37x_i2c.c **** @endverbatim
1180:../stdperiph/source/stm32f37x_i2c.c ****   * @{
1181:../stdperiph/source/stm32f37x_i2c.c ****   */
1182:../stdperiph/source/stm32f37x_i2c.c **** 
1183:../stdperiph/source/stm32f37x_i2c.c ****   /**
1184:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Reads the specified I2C register and returns its value.
1185:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
1186:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2C_Register: specifies the register to read.
1187:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be one of the following values:
1188:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_Register_CR1: CR1 register.
1189:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_Register_CR2: CR2 register.
1190:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_Register_OAR1: OAR1 register.
1191:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_Register_OAR2: OAR2 register.
1192:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_Register_TIMINGR: TIMING register.
1193:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_Register_TIMEOUTR: TIMEOUTR register.
1194:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_Register_ISR: ISR register.
1195:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_Register_ICR: ICR register.
1196:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_Register_PECR: PECR register.
1197:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_Register_RXDR: RXDR register.
1198:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_Register_TXDR: TXDR register.
1199:../stdperiph/source/stm32f37x_i2c.c ****   * @retval The value of the read register.
1200:../stdperiph/source/stm32f37x_i2c.c ****   */
1201:../stdperiph/source/stm32f37x_i2c.c **** uint32_t I2C_ReadRegister(I2C_TypeDef* I2Cx, uint8_t I2C_Register)
1202:../stdperiph/source/stm32f37x_i2c.c **** {
 1191              		.loc 1 1202 0
 1192              		.cfi_startproc
 1193              		@ args = 0, pretend = 0, frame = 8
 1194              		@ frame_needed = 0, uses_anonymous_args = 0
 1195              		@ link register save eliminated.
 1196              	.LVL97:
 1197 0000 82B0     		sub	sp, sp, #8
 1198              	.LCFI5:
 1199              		.cfi_def_cfa_offset 8
1203:../stdperiph/source/stm32f37x_i2c.c ****   __IO uint32_t tmp = 0;
 1200              		.loc 1 1203 0
 1201 0002 0023     		movs	r3, #0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 42


 1202 0004 0193     		str	r3, [sp, #4]
1204:../stdperiph/source/stm32f37x_i2c.c **** 
1205:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
1206:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1207:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_REGISTER(I2C_Register));
1208:../stdperiph/source/stm32f37x_i2c.c **** 
1209:../stdperiph/source/stm32f37x_i2c.c ****   tmp = (uint32_t)I2Cx;
 1203              		.loc 1 1209 0
 1204 0006 0190     		str	r0, [sp, #4]
1210:../stdperiph/source/stm32f37x_i2c.c ****   tmp += I2C_Register;
 1205              		.loc 1 1210 0
 1206 0008 019B     		ldr	r3, [sp, #4]
 1207 000a 1944     		add	r1, r1, r3
 1208              	.LVL98:
 1209 000c 0191     		str	r1, [sp, #4]
1211:../stdperiph/source/stm32f37x_i2c.c **** 
1212:../stdperiph/source/stm32f37x_i2c.c ****   /* Return the selected register value */
1213:../stdperiph/source/stm32f37x_i2c.c ****   return (*(__IO uint32_t *) tmp);
 1210              		.loc 1 1213 0
 1211 000e 019B     		ldr	r3, [sp, #4]
 1212 0010 1868     		ldr	r0, [r3]
 1213              	.LVL99:
1214:../stdperiph/source/stm32f37x_i2c.c **** }
 1214              		.loc 1 1214 0
 1215 0012 02B0     		add	sp, sp, #8
 1216              	.LCFI6:
 1217              		.cfi_def_cfa_offset 0
 1218              		@ sp needed
 1219 0014 7047     		bx	lr
 1220              		.cfi_endproc
 1221              	.LFE145:
 1223 0016 00BF     		.section	.text.I2C_SendData,"ax",%progbits
 1224              		.align	2
 1225              		.global	I2C_SendData
 1226              		.thumb
 1227              		.thumb_func
 1229              	I2C_SendData:
 1230              	.LFB146:
1215:../stdperiph/source/stm32f37x_i2c.c **** 
1216:../stdperiph/source/stm32f37x_i2c.c **** /**
1217:../stdperiph/source/stm32f37x_i2c.c ****   * @}
1218:../stdperiph/source/stm32f37x_i2c.c ****   */  
1219:../stdperiph/source/stm32f37x_i2c.c ****   
1220:../stdperiph/source/stm32f37x_i2c.c **** /** @defgroup I2C_Group5 Data transfers management functions
1221:../stdperiph/source/stm32f37x_i2c.c ****  *  @brief   Data transfers management functions 
1222:../stdperiph/source/stm32f37x_i2c.c ****  *
1223:../stdperiph/source/stm32f37x_i2c.c **** @verbatim
1224:../stdperiph/source/stm32f37x_i2c.c ****  ===============================================================================
1225:../stdperiph/source/stm32f37x_i2c.c ****                 ##### Data transfers management functions #####
1226:../stdperiph/source/stm32f37x_i2c.c ****  =============================================================================== 
1227:../stdperiph/source/stm32f37x_i2c.c ****     [..] This subsection provides a set of functions allowing to manage 
1228:../stdperiph/source/stm32f37x_i2c.c ****          the I2C data transfers.
1229:../stdperiph/source/stm32f37x_i2c.c **** 
1230:../stdperiph/source/stm32f37x_i2c.c ****     [..] The read access of the I2C_RXDR register can be done using 
1231:../stdperiph/source/stm32f37x_i2c.c ****          the I2C_ReceiveData() function and returns the received value.
1232:../stdperiph/source/stm32f37x_i2c.c ****          Whereas a write access to the I2C_TXDR can be done using I2C_SendData()
1233:../stdperiph/source/stm32f37x_i2c.c ****          function and stores the written data into TXDR.
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 43


1234:../stdperiph/source/stm32f37x_i2c.c **** @endverbatim
1235:../stdperiph/source/stm32f37x_i2c.c ****   * @{
1236:../stdperiph/source/stm32f37x_i2c.c ****   */  
1237:../stdperiph/source/stm32f37x_i2c.c ****   
1238:../stdperiph/source/stm32f37x_i2c.c **** /**
1239:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Sends a data byte through the I2Cx peripheral.
1240:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
1241:../stdperiph/source/stm32f37x_i2c.c ****   * @param  Data: Byte to be transmitted..
1242:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
1243:../stdperiph/source/stm32f37x_i2c.c ****   */
1244:../stdperiph/source/stm32f37x_i2c.c **** void I2C_SendData(I2C_TypeDef* I2Cx, uint8_t Data)
1245:../stdperiph/source/stm32f37x_i2c.c **** {
 1231              		.loc 1 1245 0
 1232              		.cfi_startproc
 1233              		@ args = 0, pretend = 0, frame = 0
 1234              		@ frame_needed = 0, uses_anonymous_args = 0
 1235              		@ link register save eliminated.
 1236              	.LVL100:
1246:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
1247:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1248:../stdperiph/source/stm32f37x_i2c.c ****   
1249:../stdperiph/source/stm32f37x_i2c.c ****   /* Write in the DR register the data to be sent */
1250:../stdperiph/source/stm32f37x_i2c.c ****   I2Cx->TXDR = (uint8_t)Data;
 1237              		.loc 1 1250 0
 1238 0000 8162     		str	r1, [r0, #40]
 1239 0002 7047     		bx	lr
 1240              		.cfi_endproc
 1241              	.LFE146:
 1243              		.section	.text.I2C_ReceiveData,"ax",%progbits
 1244              		.align	2
 1245              		.global	I2C_ReceiveData
 1246              		.thumb
 1247              		.thumb_func
 1249              	I2C_ReceiveData:
 1250              	.LFB147:
1251:../stdperiph/source/stm32f37x_i2c.c **** }
1252:../stdperiph/source/stm32f37x_i2c.c **** 
1253:../stdperiph/source/stm32f37x_i2c.c **** /**
1254:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Returns the most recent received data by the I2Cx peripheral.
1255:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
1256:../stdperiph/source/stm32f37x_i2c.c ****   * @retval The value of the received data.
1257:../stdperiph/source/stm32f37x_i2c.c ****   */
1258:../stdperiph/source/stm32f37x_i2c.c **** uint8_t I2C_ReceiveData(I2C_TypeDef* I2Cx)
1259:../stdperiph/source/stm32f37x_i2c.c **** {
 1251              		.loc 1 1259 0
 1252              		.cfi_startproc
 1253              		@ args = 0, pretend = 0, frame = 0
 1254              		@ frame_needed = 0, uses_anonymous_args = 0
 1255              		@ link register save eliminated.
 1256              	.LVL101:
1260:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
1261:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1262:../stdperiph/source/stm32f37x_i2c.c ****   
1263:../stdperiph/source/stm32f37x_i2c.c ****   /* Return the data in the DR register */
1264:../stdperiph/source/stm32f37x_i2c.c ****   return (uint8_t)I2Cx->RXDR;
 1257              		.loc 1 1264 0
 1258 0000 406A     		ldr	r0, [r0, #36]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 44


 1259              	.LVL102:
1265:../stdperiph/source/stm32f37x_i2c.c **** }  
 1260              		.loc 1 1265 0
 1261 0002 C0B2     		uxtb	r0, r0
 1262 0004 7047     		bx	lr
 1263              		.cfi_endproc
 1264              	.LFE147:
 1266 0006 00BF     		.section	.text.I2C_DMACmd,"ax",%progbits
 1267              		.align	2
 1268              		.global	I2C_DMACmd
 1269              		.thumb
 1270              		.thumb_func
 1272              	I2C_DMACmd:
 1273              	.LFB148:
1266:../stdperiph/source/stm32f37x_i2c.c **** 
1267:../stdperiph/source/stm32f37x_i2c.c **** /**
1268:../stdperiph/source/stm32f37x_i2c.c ****   * @}
1269:../stdperiph/source/stm32f37x_i2c.c ****   */ 
1270:../stdperiph/source/stm32f37x_i2c.c **** 
1271:../stdperiph/source/stm32f37x_i2c.c **** 
1272:../stdperiph/source/stm32f37x_i2c.c **** /** @defgroup I2C_Group6 DMA transfers management functions
1273:../stdperiph/source/stm32f37x_i2c.c ****  *  @brief   DMA transfers management functions 
1274:../stdperiph/source/stm32f37x_i2c.c ****  *
1275:../stdperiph/source/stm32f37x_i2c.c **** @verbatim
1276:../stdperiph/source/stm32f37x_i2c.c ****  ===============================================================================
1277:../stdperiph/source/stm32f37x_i2c.c ****                 ##### DMA transfers management functions #####
1278:../stdperiph/source/stm32f37x_i2c.c ****  ===============================================================================  
1279:../stdperiph/source/stm32f37x_i2c.c ****     [..] This section provides two functions that can be used only in DMA mode.
1280:../stdperiph/source/stm32f37x_i2c.c ****     [..] In DMA Mode, the I2C communication can be managed by 2 DMA Channel 
1281:../stdperiph/source/stm32f37x_i2c.c ****          requests:
1282:../stdperiph/source/stm32f37x_i2c.c ****          (#) I2C_DMAReq_Tx: specifies the Tx buffer DMA transfer request.
1283:../stdperiph/source/stm32f37x_i2c.c ****          (#) I2C_DMAReq_Rx: specifies the Rx buffer DMA transfer request.
1284:../stdperiph/source/stm32f37x_i2c.c ****     [..] In this Mode it is advised to use the following function:
1285:../stdperiph/source/stm32f37x_i2c.c ****          (+) I2C_DMACmd(I2C_TypeDef* I2Cx, uint32_t I2C_DMAReq, FunctionalState NewState);
1286:../stdperiph/source/stm32f37x_i2c.c **** @endverbatim
1287:../stdperiph/source/stm32f37x_i2c.c ****   * @{
1288:../stdperiph/source/stm32f37x_i2c.c ****   */  
1289:../stdperiph/source/stm32f37x_i2c.c ****     
1290:../stdperiph/source/stm32f37x_i2c.c **** /**
1291:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Enables or disables the I2C DMA interface.
1292:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
1293:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2C_DMAReq: specifies the I2C DMA transfer request to be enabled or disabled. 
1294:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be any combination of the following values:
1295:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_DMAReq_Tx: Tx DMA transfer request
1296:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_DMAReq_Rx: Rx DMA transfer request
1297:../stdperiph/source/stm32f37x_i2c.c ****   * @param  NewState: new state of the selected I2C DMA transfer request.
1298:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
1299:../stdperiph/source/stm32f37x_i2c.c ****   * @retval None
1300:../stdperiph/source/stm32f37x_i2c.c ****   */
1301:../stdperiph/source/stm32f37x_i2c.c **** void I2C_DMACmd(I2C_TypeDef* I2Cx, uint32_t I2C_DMAReq, FunctionalState NewState)
1302:../stdperiph/source/stm32f37x_i2c.c **** {
 1274              		.loc 1 1302 0
 1275              		.cfi_startproc
 1276              		@ args = 0, pretend = 0, frame = 0
 1277              		@ frame_needed = 0, uses_anonymous_args = 0
 1278              		@ link register save eliminated.
 1279              	.LVL103:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 45


1303:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
1304:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1305:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1306:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_DMA_REQ(I2C_DMAReq));
1307:../stdperiph/source/stm32f37x_i2c.c **** 
1308:../stdperiph/source/stm32f37x_i2c.c ****   if (NewState != DISABLE)
 1280              		.loc 1 1308 0
 1281 0000 1AB1     		cbz	r2, .L97
1309:../stdperiph/source/stm32f37x_i2c.c ****   {
1310:../stdperiph/source/stm32f37x_i2c.c ****     /* Enable the selected I2C DMA requests */
1311:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR1 |= I2C_DMAReq;
 1282              		.loc 1 1311 0
 1283 0002 0368     		ldr	r3, [r0]
 1284 0004 1943     		orrs	r1, r1, r3
 1285              	.LVL104:
 1286 0006 0160     		str	r1, [r0]
 1287 0008 7047     		bx	lr
 1288              	.LVL105:
 1289              	.L97:
1312:../stdperiph/source/stm32f37x_i2c.c ****   }
1313:../stdperiph/source/stm32f37x_i2c.c ****   else
1314:../stdperiph/source/stm32f37x_i2c.c ****   {
1315:../stdperiph/source/stm32f37x_i2c.c ****     /* Disable the selected I2C DMA requests */
1316:../stdperiph/source/stm32f37x_i2c.c ****     I2Cx->CR1 &= (uint32_t)~I2C_DMAReq;
 1290              		.loc 1 1316 0
 1291 000a 0368     		ldr	r3, [r0]
 1292 000c 23EA0101 		bic	r1, r3, r1
 1293              	.LVL106:
 1294 0010 0160     		str	r1, [r0]
 1295 0012 7047     		bx	lr
 1296              		.cfi_endproc
 1297              	.LFE148:
 1299              		.section	.text.I2C_GetFlagStatus,"ax",%progbits
 1300              		.align	2
 1301              		.global	I2C_GetFlagStatus
 1302              		.thumb
 1303              		.thumb_func
 1305              	I2C_GetFlagStatus:
 1306              	.LFB149:
1317:../stdperiph/source/stm32f37x_i2c.c ****   }
1318:../stdperiph/source/stm32f37x_i2c.c **** }
1319:../stdperiph/source/stm32f37x_i2c.c **** /**
1320:../stdperiph/source/stm32f37x_i2c.c ****   * @}
1321:../stdperiph/source/stm32f37x_i2c.c ****   */  
1322:../stdperiph/source/stm32f37x_i2c.c **** 
1323:../stdperiph/source/stm32f37x_i2c.c **** 
1324:../stdperiph/source/stm32f37x_i2c.c **** /** @defgroup I2C_Group7 Interrupts and flags management functions
1325:../stdperiph/source/stm32f37x_i2c.c ****  *  @brief   Interrupts and flags management functions 
1326:../stdperiph/source/stm32f37x_i2c.c ****  *
1327:../stdperiph/source/stm32f37x_i2c.c **** @verbatim
1328:../stdperiph/source/stm32f37x_i2c.c ****  ===============================================================================
1329:../stdperiph/source/stm32f37x_i2c.c ****              ##### Interrupts and flags management functions  #####
1330:../stdperiph/source/stm32f37x_i2c.c ****  =============================================================================== 
1331:../stdperiph/source/stm32f37x_i2c.c ****     [..] This section provides functions allowing to configure the I2C Interrupts 
1332:../stdperiph/source/stm32f37x_i2c.c ****          sources and check or clear the flags or pending bits status.
1333:../stdperiph/source/stm32f37x_i2c.c ****          The user should identify which mode will be used in his application to manage 
1334:../stdperiph/source/stm32f37x_i2c.c ****          the communication: Polling mode, Interrupt mode or DMA mode(refer I2C_Group6).
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 46


1335:../stdperiph/source/stm32f37x_i2c.c **** 
1336:../stdperiph/source/stm32f37x_i2c.c ****   *** Polling Mode ***
1337:../stdperiph/source/stm32f37x_i2c.c ****   ====================
1338:../stdperiph/source/stm32f37x_i2c.c ****     [..] In Polling Mode, the I2C communication can be managed by 15 flags:
1339:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_FLAG_TXE: to indicate the status of Transmit data register empty flag.
1340:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_FLAG_TXIS: to indicate the status of Transmit interrupt status flag .
1341:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_FLAG_RXNE: to indicate the status of Receive data register not empty flag.
1342:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_FLAG_ADDR: to indicate the status of Address matched flag (slave mode).
1343:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_FLAG_NACKF: to indicate the status of NACK received flag.
1344:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_FLAG_STOPF: to indicate the status of STOP detection flag.
1345:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_FLAG_TC: to indicate the status of Transfer complete flag(master mode).
1346:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_FLAG_TCR: to indicate the status of Transfer complete reload flag.
1347:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_FLAG_BERR: to indicate the status of Bus error flag.
1348:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_FLAG_ARLO: to indicate the status of Arbitration lost flag.
1349:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_FLAG_OVR: to indicate the status of Overrun/Underrun flag.
1350:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_FLAG_PECERR: to indicate the status of PEC error in reception flag.
1351:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_FLAG_TIMEOUT: to indicate the status of Timeout or Tlow detection flag.
1352:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_FLAG_ALERT: to indicate the status of SMBus Alert flag.
1353:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_FLAG_BUSY: to indicate the status of Bus busy flag.
1354:../stdperiph/source/stm32f37x_i2c.c **** 
1355:../stdperiph/source/stm32f37x_i2c.c ****     [..] In this Mode it is advised to use the following functions:
1356:../stdperiph/source/stm32f37x_i2c.c ****         (+) FlagStatus I2C_GetFlagStatus(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG);
1357:../stdperiph/source/stm32f37x_i2c.c ****         (+) void I2C_ClearFlag(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG);
1358:../stdperiph/source/stm32f37x_i2c.c **** 
1359:../stdperiph/source/stm32f37x_i2c.c ****     [..]
1360:../stdperiph/source/stm32f37x_i2c.c ****         (@)Do not use the BUSY flag to handle each data transmission or reception.It is 
1361:../stdperiph/source/stm32f37x_i2c.c ****            better to use the TXIS and RXNE flags instead.
1362:../stdperiph/source/stm32f37x_i2c.c **** 
1363:../stdperiph/source/stm32f37x_i2c.c ****   *** Interrupt Mode ***
1364:../stdperiph/source/stm32f37x_i2c.c ****   ======================
1365:../stdperiph/source/stm32f37x_i2c.c ****     [..] In Interrupt Mode, the I2C communication can be managed by 7 interrupt sources
1366:../stdperiph/source/stm32f37x_i2c.c ****          and 15 pending bits: 
1367:../stdperiph/source/stm32f37x_i2c.c ****     [..] Interrupt Source:
1368:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_IT_ERRI: specifies the interrupt source for the Error interrupt.
1369:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_IT_TCI: specifies the interrupt source for the Transfer Complete interrupt.
1370:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_IT_STOPI: specifies the interrupt source for the Stop Detection interrupt.
1371:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_IT_NACKI: specifies the interrupt source for the Not Acknowledge received interrupt
1372:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_IT_ADDRI: specifies the interrupt source for the Address Match interrupt.
1373:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_IT_RXI: specifies the interrupt source for the RX interrupt.
1374:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_IT_TXI: specifies the interrupt source for the TX interrupt.
1375:../stdperiph/source/stm32f37x_i2c.c **** 
1376:../stdperiph/source/stm32f37x_i2c.c ****     [..] Pending Bits:
1377:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_IT_TXIS: to indicate the status of Transmit interrupt status flag.
1378:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_IT_RXNE: to indicate the status of Receive data register not empty flag.
1379:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_IT_ADDR: to indicate the status of Address matched flag (slave mode).
1380:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_IT_NACKF: to indicate the status of NACK received flag.
1381:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_IT_STOPF: to indicate the status of STOP detection flag.
1382:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_IT_TC: to indicate the status of Transfer complete flag (master mode).
1383:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_IT_TCR: to indicate the status of Transfer complete reload flag.
1384:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_IT_BERR: to indicate the status of Bus error flag.
1385:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_IT_ARLO: to indicate the status of Arbitration lost flag.
1386:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_IT_OVR: to indicate the status of Overrun/Underrun flag.
1387:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_IT_PECERR: to indicate the status of PEC error in reception flag.
1388:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_IT_TIMEOUT: to indicate the status of Timeout or Tlow detection flag.
1389:../stdperiph/source/stm32f37x_i2c.c ****         (#) I2C_IT_ALERT: to indicate the status of SMBus Alert flag.
1390:../stdperiph/source/stm32f37x_i2c.c **** 
1391:../stdperiph/source/stm32f37x_i2c.c ****     [..] In this Mode it is advised to use the following functions:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 47


1392:../stdperiph/source/stm32f37x_i2c.c ****         (+) void I2C_ClearITPendingBit(I2C_TypeDef* I2Cx, uint32_t I2C_IT);
1393:../stdperiph/source/stm32f37x_i2c.c ****         (+) ITStatus I2C_GetITStatus(I2C_TypeDef* I2Cx, uint32_t I2C_IT);
1394:../stdperiph/source/stm32f37x_i2c.c **** 
1395:../stdperiph/source/stm32f37x_i2c.c **** @endverbatim
1396:../stdperiph/source/stm32f37x_i2c.c ****   * @{
1397:../stdperiph/source/stm32f37x_i2c.c ****   */  
1398:../stdperiph/source/stm32f37x_i2c.c **** 
1399:../stdperiph/source/stm32f37x_i2c.c **** /**
1400:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Checks whether the specified I2C flag is set or not.
1401:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
1402:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2C_FLAG: specifies the flag to check. 
1403:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be one of the following values:
1404:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_FLAG_TXE: Transmit data register empty
1405:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_FLAG_TXIS: Transmit interrupt status
1406:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_FLAG_RXNE: Receive data register not empty
1407:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_FLAG_ADDR: Address matched (slave mode)
1408:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_FLAG_NACKF: NACK received flag
1409:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_FLAG_STOPF: STOP detection flag
1410:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_FLAG_TC: Transfer complete (master mode)
1411:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_FLAG_TCR: Transfer complete reload
1412:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_FLAG_BERR: Bus error
1413:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_FLAG_ARLO: Arbitration lost
1414:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_FLAG_OVR: Overrun/Underrun
1415:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_FLAG_PECERR: PEC error in reception
1416:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_FLAG_TIMEOUT: Timeout or Tlow detection flag
1417:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_FLAG_ALERT: SMBus Alert
1418:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_FLAG_BUSY: Bus busy
1419:../stdperiph/source/stm32f37x_i2c.c ****   * @retval The new state of I2C_FLAG (SET or RESET).
1420:../stdperiph/source/stm32f37x_i2c.c ****   */
1421:../stdperiph/source/stm32f37x_i2c.c **** FlagStatus I2C_GetFlagStatus(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG)
1422:../stdperiph/source/stm32f37x_i2c.c **** {
 1307              		.loc 1 1422 0
 1308              		.cfi_startproc
 1309              		@ args = 0, pretend = 0, frame = 0
 1310              		@ frame_needed = 0, uses_anonymous_args = 0
 1311              		@ link register save eliminated.
 1312              	.LVL107:
1423:../stdperiph/source/stm32f37x_i2c.c ****   uint32_t tmpreg = 0;
1424:../stdperiph/source/stm32f37x_i2c.c ****   FlagStatus bitstatus = RESET;
1425:../stdperiph/source/stm32f37x_i2c.c ****   
1426:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
1427:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1428:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_GET_FLAG(I2C_FLAG));
1429:../stdperiph/source/stm32f37x_i2c.c ****   
1430:../stdperiph/source/stm32f37x_i2c.c ****   /* Get the ISR register value */
1431:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg = I2Cx->ISR;
 1313              		.loc 1 1431 0
 1314 0000 8369     		ldr	r3, [r0, #24]
 1315              	.LVL108:
1432:../stdperiph/source/stm32f37x_i2c.c ****   
1433:../stdperiph/source/stm32f37x_i2c.c ****   /* Get flag status */
1434:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg &= I2C_FLAG;
1435:../stdperiph/source/stm32f37x_i2c.c ****   
1436:../stdperiph/source/stm32f37x_i2c.c ****   if(tmpreg != 0)
 1316              		.loc 1 1436 0
 1317 0002 0B42     		tst	r3, r1
 1318 0004 01D0     		beq	.L101
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 48


1437:../stdperiph/source/stm32f37x_i2c.c ****   {
1438:../stdperiph/source/stm32f37x_i2c.c ****     /* I2C_FLAG is set */
1439:../stdperiph/source/stm32f37x_i2c.c ****     bitstatus = SET;
 1319              		.loc 1 1439 0
 1320 0006 0120     		movs	r0, #1
 1321              	.LVL109:
 1322 0008 7047     		bx	lr
 1323              	.LVL110:
 1324              	.L101:
1440:../stdperiph/source/stm32f37x_i2c.c ****   }
1441:../stdperiph/source/stm32f37x_i2c.c ****   else
1442:../stdperiph/source/stm32f37x_i2c.c ****   {
1443:../stdperiph/source/stm32f37x_i2c.c ****     /* I2C_FLAG is reset */
1444:../stdperiph/source/stm32f37x_i2c.c ****     bitstatus = RESET;
 1325              		.loc 1 1444 0
 1326 000a 0020     		movs	r0, #0
 1327              	.LVL111:
1445:../stdperiph/source/stm32f37x_i2c.c ****   }
1446:../stdperiph/source/stm32f37x_i2c.c ****   return bitstatus;
1447:../stdperiph/source/stm32f37x_i2c.c **** } 
 1328              		.loc 1 1447 0
 1329 000c 7047     		bx	lr
 1330              		.cfi_endproc
 1331              	.LFE149:
 1333 000e 00BF     		.section	.text.I2C_ClearFlag,"ax",%progbits
 1334              		.align	2
 1335              		.global	I2C_ClearFlag
 1336              		.thumb
 1337              		.thumb_func
 1339              	I2C_ClearFlag:
 1340              	.LFB150:
1448:../stdperiph/source/stm32f37x_i2c.c **** 
1449:../stdperiph/source/stm32f37x_i2c.c **** /**
1450:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Clears the I2Cx's pending flags.
1451:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
1452:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2C_FLAG: specifies the flag to clear. 
1453:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be any combination of the following values:
1454:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_FLAG_ADDR: Address matched (slave mode)
1455:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_FLAG_NACKF: NACK received flag
1456:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_FLAG_STOPF: STOP detection flag
1457:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_FLAG_BERR: Bus error
1458:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_FLAG_ARLO: Arbitration lost
1459:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_FLAG_OVR: Overrun/Underrun
1460:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_FLAG_PECERR: PEC error in reception
1461:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_FLAG_TIMEOUT: Timeout or Tlow detection flag
1462:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_FLAG_ALERT: SMBus Alert
1463:../stdperiph/source/stm32f37x_i2c.c ****   * @retval The new state of I2C_FLAG (SET or RESET).
1464:../stdperiph/source/stm32f37x_i2c.c ****   */
1465:../stdperiph/source/stm32f37x_i2c.c **** void I2C_ClearFlag(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG)
1466:../stdperiph/source/stm32f37x_i2c.c **** { 
 1341              		.loc 1 1466 0
 1342              		.cfi_startproc
 1343              		@ args = 0, pretend = 0, frame = 0
 1344              		@ frame_needed = 0, uses_anonymous_args = 0
 1345              		@ link register save eliminated.
 1346              	.LVL112:
1467:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 49


1468:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1469:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_CLEAR_FLAG(I2C_FLAG));
1470:../stdperiph/source/stm32f37x_i2c.c **** 
1471:../stdperiph/source/stm32f37x_i2c.c ****   /* Clear the selected flag */
1472:../stdperiph/source/stm32f37x_i2c.c ****   I2Cx->ICR = I2C_FLAG;
 1347              		.loc 1 1472 0
 1348 0000 C161     		str	r1, [r0, #28]
 1349 0002 7047     		bx	lr
 1350              		.cfi_endproc
 1351              	.LFE150:
 1353              		.section	.text.I2C_GetITStatus,"ax",%progbits
 1354              		.align	2
 1355              		.global	I2C_GetITStatus
 1356              		.thumb
 1357              		.thumb_func
 1359              	I2C_GetITStatus:
 1360              	.LFB151:
1473:../stdperiph/source/stm32f37x_i2c.c ****   }
1474:../stdperiph/source/stm32f37x_i2c.c **** 
1475:../stdperiph/source/stm32f37x_i2c.c **** /**
1476:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Checks whether the specified I2C interrupt has occurred or not.
1477:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
1478:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2C_IT: specifies the interrupt source to check.
1479:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be one of the following values:
1480:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_TXIS: Transmit interrupt status
1481:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_RXNE: Receive data register not empty
1482:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_ADDR: Address matched (slave mode)
1483:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_NACKF: NACK received flag
1484:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_STOPF: STOP detection flag
1485:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_TC: Transfer complete (master mode)
1486:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_TCR: Transfer complete reload
1487:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_BERR: Bus error
1488:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_ARLO: Arbitration lost
1489:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_OVR: Overrun/Underrun
1490:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_PECERR: PEC error in reception
1491:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_TIMEOUT: Timeout or Tlow detection flag
1492:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_ALERT: SMBus Alert
1493:../stdperiph/source/stm32f37x_i2c.c ****   * @retval The new state of I2C_IT (SET or RESET).
1494:../stdperiph/source/stm32f37x_i2c.c ****   */
1495:../stdperiph/source/stm32f37x_i2c.c **** ITStatus I2C_GetITStatus(I2C_TypeDef* I2Cx, uint32_t I2C_IT)
1496:../stdperiph/source/stm32f37x_i2c.c **** {
 1361              		.loc 1 1496 0
 1362              		.cfi_startproc
 1363              		@ args = 0, pretend = 0, frame = 0
 1364              		@ frame_needed = 0, uses_anonymous_args = 0
 1365              		@ link register save eliminated.
 1366              	.LVL113:
1497:../stdperiph/source/stm32f37x_i2c.c ****   uint32_t tmpreg = 0;
1498:../stdperiph/source/stm32f37x_i2c.c ****   ITStatus bitstatus = RESET;
1499:../stdperiph/source/stm32f37x_i2c.c ****   uint32_t enablestatus = 0;
1500:../stdperiph/source/stm32f37x_i2c.c **** 
1501:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
1502:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1503:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_GET_IT(I2C_IT));
1504:../stdperiph/source/stm32f37x_i2c.c **** 
1505:../stdperiph/source/stm32f37x_i2c.c ****   /* Check if the interrupt source is enabled or not */
1506:../stdperiph/source/stm32f37x_i2c.c ****   /* If Error interrupt */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 50


1507:../stdperiph/source/stm32f37x_i2c.c ****   if ((uint32_t)(I2C_IT & ERROR_IT_MASK))
 1367              		.loc 1 1507 0
 1368 0000 11F47C5F 		tst	r1, #16128
 1369 0004 03D0     		beq	.L104
1508:../stdperiph/source/stm32f37x_i2c.c ****   {
1509:../stdperiph/source/stm32f37x_i2c.c ****     enablestatus = (uint32_t)((I2C_CR1_ERRIE) & (I2Cx->CR1));
 1370              		.loc 1 1509 0
 1371 0006 0368     		ldr	r3, [r0]
 1372 0008 03F08003 		and	r3, r3, #128
 1373              	.LVL114:
 1374 000c 08E0     		b	.L105
 1375              	.LVL115:
 1376              	.L104:
1510:../stdperiph/source/stm32f37x_i2c.c ****   }
1511:../stdperiph/source/stm32f37x_i2c.c ****   /* If TC interrupt */
1512:../stdperiph/source/stm32f37x_i2c.c ****   else if ((uint32_t)(I2C_IT & TC_IT_MASK))
 1377              		.loc 1 1512 0
 1378 000e 11F0C00F 		tst	r1, #192
 1379 0012 03D0     		beq	.L106
1513:../stdperiph/source/stm32f37x_i2c.c ****   {
1514:../stdperiph/source/stm32f37x_i2c.c ****     enablestatus = (uint32_t)((I2C_CR1_TCIE) & (I2Cx->CR1));
 1380              		.loc 1 1514 0
 1381 0014 0368     		ldr	r3, [r0]
 1382 0016 03F04003 		and	r3, r3, #64
 1383              	.LVL116:
 1384 001a 01E0     		b	.L105
 1385              	.LVL117:
 1386              	.L106:
1515:../stdperiph/source/stm32f37x_i2c.c ****   }
1516:../stdperiph/source/stm32f37x_i2c.c ****   else
1517:../stdperiph/source/stm32f37x_i2c.c ****   {
1518:../stdperiph/source/stm32f37x_i2c.c ****     enablestatus = (uint32_t)((I2C_IT) & (I2Cx->CR1));
 1387              		.loc 1 1518 0
 1388 001c 0368     		ldr	r3, [r0]
 1389 001e 0B40     		ands	r3, r3, r1
 1390              	.LVL118:
 1391              	.L105:
1519:../stdperiph/source/stm32f37x_i2c.c ****   }
1520:../stdperiph/source/stm32f37x_i2c.c ****   
1521:../stdperiph/source/stm32f37x_i2c.c ****   /* Get the ISR register value */
1522:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg = I2Cx->ISR;
 1392              		.loc 1 1522 0
 1393 0020 8269     		ldr	r2, [r0, #24]
 1394              	.LVL119:
1523:../stdperiph/source/stm32f37x_i2c.c **** 
1524:../stdperiph/source/stm32f37x_i2c.c ****   /* Get flag status */
1525:../stdperiph/source/stm32f37x_i2c.c ****   tmpreg &= I2C_IT;
1526:../stdperiph/source/stm32f37x_i2c.c **** 
1527:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the status of the specified I2C flag */
1528:../stdperiph/source/stm32f37x_i2c.c ****   if((tmpreg != RESET) && enablestatus)
 1395              		.loc 1 1528 0
 1396 0022 1142     		tst	r1, r2
 1397 0024 02D0     		beq	.L108
 1398              		.loc 1 1528 0 is_stmt 0 discriminator 1
 1399 0026 1BB9     		cbnz	r3, .L109
1529:../stdperiph/source/stm32f37x_i2c.c ****   {
1530:../stdperiph/source/stm32f37x_i2c.c ****     /* I2C_IT is set */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 51


1531:../stdperiph/source/stm32f37x_i2c.c ****     bitstatus = SET;
1532:../stdperiph/source/stm32f37x_i2c.c ****   }
1533:../stdperiph/source/stm32f37x_i2c.c ****   else
1534:../stdperiph/source/stm32f37x_i2c.c ****   {
1535:../stdperiph/source/stm32f37x_i2c.c ****     /* I2C_IT is reset */
1536:../stdperiph/source/stm32f37x_i2c.c ****     bitstatus = RESET;
 1400              		.loc 1 1536 0 is_stmt 1
 1401 0028 0020     		movs	r0, #0
 1402              	.LVL120:
 1403 002a 7047     		bx	lr
 1404              	.LVL121:
 1405              	.L108:
 1406 002c 0020     		movs	r0, #0
 1407              	.LVL122:
 1408 002e 7047     		bx	lr
 1409              	.LVL123:
 1410              	.L109:
1531:../stdperiph/source/stm32f37x_i2c.c ****   }
 1411              		.loc 1 1531 0
 1412 0030 0120     		movs	r0, #1
 1413              	.LVL124:
1537:../stdperiph/source/stm32f37x_i2c.c ****   }
1538:../stdperiph/source/stm32f37x_i2c.c **** 
1539:../stdperiph/source/stm32f37x_i2c.c ****   /* Return the I2C_IT status */
1540:../stdperiph/source/stm32f37x_i2c.c ****   return bitstatus;
1541:../stdperiph/source/stm32f37x_i2c.c **** }
 1414              		.loc 1 1541 0
 1415 0032 7047     		bx	lr
 1416              		.cfi_endproc
 1417              	.LFE151:
 1419              		.section	.text.I2C_ClearITPendingBit,"ax",%progbits
 1420              		.align	2
 1421              		.global	I2C_ClearITPendingBit
 1422              		.thumb
 1423              		.thumb_func
 1425              	I2C_ClearITPendingBit:
 1426              	.LFB152:
1542:../stdperiph/source/stm32f37x_i2c.c **** 
1543:../stdperiph/source/stm32f37x_i2c.c **** /**
1544:../stdperiph/source/stm32f37x_i2c.c ****   * @brief  Clears the I2Cx's interrupt pending bits.
1545:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2Cx: where x can be 1 or 2 to select the I2C peripheral.
1546:../stdperiph/source/stm32f37x_i2c.c ****   * @param  I2C_IT: specifies the interrupt pending bit to clear.
1547:../stdperiph/source/stm32f37x_i2c.c ****   *          This parameter can be any combination of the following values:
1548:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_ADDR: Address matched (slave mode)
1549:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_NACKF: NACK received flag
1550:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_STOPF: STOP detection flag
1551:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_BERR: Bus error
1552:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_ARLO: Arbitration lost
1553:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_OVR: Overrun/Underrun
1554:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_PECERR: PEC error in reception
1555:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_TIMEOUT: Timeout or Tlow detection flag
1556:../stdperiph/source/stm32f37x_i2c.c ****   *            @arg I2C_IT_ALERT: SMBus Alert
1557:../stdperiph/source/stm32f37x_i2c.c ****   * @retval The new state of I2C_IT (SET or RESET).
1558:../stdperiph/source/stm32f37x_i2c.c ****   */
1559:../stdperiph/source/stm32f37x_i2c.c **** void I2C_ClearITPendingBit(I2C_TypeDef* I2Cx, uint32_t I2C_IT)
1560:../stdperiph/source/stm32f37x_i2c.c **** {
 1427              		.loc 1 1560 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 52


 1428              		.cfi_startproc
 1429              		@ args = 0, pretend = 0, frame = 0
 1430              		@ frame_needed = 0, uses_anonymous_args = 0
 1431              		@ link register save eliminated.
 1432              	.LVL125:
1561:../stdperiph/source/stm32f37x_i2c.c ****   /* Check the parameters */
1562:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1563:../stdperiph/source/stm32f37x_i2c.c ****   assert_param(IS_I2C_CLEAR_IT(I2C_IT));
1564:../stdperiph/source/stm32f37x_i2c.c **** 
1565:../stdperiph/source/stm32f37x_i2c.c ****   /* Clear the selected flag */
1566:../stdperiph/source/stm32f37x_i2c.c ****   I2Cx->ICR = I2C_IT;
 1433              		.loc 1 1566 0
 1434 0000 C161     		str	r1, [r0, #28]
 1435 0002 7047     		bx	lr
 1436              		.cfi_endproc
 1437              	.LFE152:
 1439              		.text
 1440              	.Letext0:
 1441              		.file 2 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\machine\\_defaul
 1442              		.file 3 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\sys\\_stdint.h"
 1443              		.file 4 "../cmsis/include/stm32f37x.h"
 1444              		.file 5 "../stdperiph/include/stm32f37x_i2c.h"
 1445              		.file 6 "../cmsis/include/core_cm4.h"
 1446              		.file 7 "../stdperiph/include/stm32f37x_rcc.h"
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 53


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f37x_i2c.c
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:22     .text.I2C_DeInit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:27     .text.I2C_DeInit:00000000 I2C_DeInit
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:73     .text.I2C_DeInit:00000034 $d
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:78     .text.I2C_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:83     .text.I2C_Init:00000000 I2C_Init
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:176    .text.I2C_Init:00000060 $d
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:181    .text.I2C_StructInit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:186    .text.I2C_StructInit:00000000 I2C_StructInit
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:215    .text.I2C_Cmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:220    .text.I2C_Cmd:00000000 I2C_Cmd
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:245    .text.I2C_SoftwareResetCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:250    .text.I2C_SoftwareResetCmd:00000000 I2C_SoftwareResetCmd
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:273    .text.I2C_ITConfig:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:278    .text.I2C_ITConfig:00000000 I2C_ITConfig
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:306    .text.I2C_StretchClockCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:311    .text.I2C_StretchClockCmd:00000000 I2C_StretchClockCmd
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:336    .text.I2C_StopModeCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:341    .text.I2C_StopModeCmd:00000000 I2C_StopModeCmd
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:366    .text.I2C_DualAddressCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:371    .text.I2C_DualAddressCmd:00000000 I2C_DualAddressCmd
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:396    .text.I2C_OwnAddress2Config:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:401    .text.I2C_OwnAddress2Config:00000000 I2C_OwnAddress2Config
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:435    .text.I2C_GeneralCallCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:440    .text.I2C_GeneralCallCmd:00000000 I2C_GeneralCallCmd
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:465    .text.I2C_SlaveByteControlCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:470    .text.I2C_SlaveByteControlCmd:00000000 I2C_SlaveByteControlCmd
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:495    .text.I2C_SlaveAddressConfig:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:500    .text.I2C_SlaveAddressConfig:00000000 I2C_SlaveAddressConfig
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:528    .text.I2C_10BitAddressingModeCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:533    .text.I2C_10BitAddressingModeCmd:00000000 I2C_10BitAddressingModeCmd
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:558    .text.I2C_AutoEndCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:563    .text.I2C_AutoEndCmd:00000000 I2C_AutoEndCmd
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:588    .text.I2C_ReloadCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:593    .text.I2C_ReloadCmd:00000000 I2C_ReloadCmd
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:618    .text.I2C_NumberOfBytesConfig:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:623    .text.I2C_NumberOfBytesConfig:00000000 I2C_NumberOfBytesConfig
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:647    .text.I2C_MasterRequestConfig:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:652    .text.I2C_MasterRequestConfig:00000000 I2C_MasterRequestConfig
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:677    .text.I2C_GenerateSTART:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:682    .text.I2C_GenerateSTART:00000000 I2C_GenerateSTART
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:707    .text.I2C_GenerateSTOP:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:712    .text.I2C_GenerateSTOP:00000000 I2C_GenerateSTOP
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:737    .text.I2C_10BitAddressHeaderCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:742    .text.I2C_10BitAddressHeaderCmd:00000000 I2C_10BitAddressHeaderCmd
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:767    .text.I2C_AcknowledgeConfig:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:772    .text.I2C_AcknowledgeConfig:00000000 I2C_AcknowledgeConfig
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:797    .text.I2C_GetAddressMatched:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:802    .text.I2C_GetAddressMatched:00000000 I2C_GetAddressMatched
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:821    .text.I2C_GetTransferDirection:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:826    .text.I2C_GetTransferDirection:00000000 I2C_GetTransferDirection
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:855    .text.I2C_TransferHandling:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:860    .text.I2C_TransferHandling:00000000 I2C_TransferHandling
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:905    .text.I2C_TransferHandling:00000020 $d
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:910    .text.I2C_SMBusAlertCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:915    .text.I2C_SMBusAlertCmd:00000000 I2C_SMBusAlertCmd
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccjaYggv.s 			page 54


C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:940    .text.I2C_ClockTimeoutCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:945    .text.I2C_ClockTimeoutCmd:00000000 I2C_ClockTimeoutCmd
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:970    .text.I2C_ExtendedClockTimeoutCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:975    .text.I2C_ExtendedClockTimeoutCmd:00000000 I2C_ExtendedClockTimeoutCmd
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1000   .text.I2C_IdleClockTimeoutCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1005   .text.I2C_IdleClockTimeoutCmd:00000000 I2C_IdleClockTimeoutCmd
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1030   .text.I2C_TimeoutAConfig:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1035   .text.I2C_TimeoutAConfig:00000000 I2C_TimeoutAConfig
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1063   .text.I2C_TimeoutBConfig:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1068   .text.I2C_TimeoutBConfig:00000000 I2C_TimeoutBConfig
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1096   .text.I2C_TimeoutBConfig:00000018 $d
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1101   .text.I2C_CalculatePEC:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1106   .text.I2C_CalculatePEC:00000000 I2C_CalculatePEC
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1131   .text.I2C_PECRequestCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1136   .text.I2C_PECRequestCmd:00000000 I2C_PECRequestCmd
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1161   .text.I2C_GetPEC:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1166   .text.I2C_GetPEC:00000000 I2C_GetPEC
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1184   .text.I2C_ReadRegister:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1189   .text.I2C_ReadRegister:00000000 I2C_ReadRegister
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1224   .text.I2C_SendData:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1229   .text.I2C_SendData:00000000 I2C_SendData
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1244   .text.I2C_ReceiveData:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1249   .text.I2C_ReceiveData:00000000 I2C_ReceiveData
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1267   .text.I2C_DMACmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1272   .text.I2C_DMACmd:00000000 I2C_DMACmd
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1300   .text.I2C_GetFlagStatus:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1305   .text.I2C_GetFlagStatus:00000000 I2C_GetFlagStatus
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1334   .text.I2C_ClearFlag:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1339   .text.I2C_ClearFlag:00000000 I2C_ClearFlag
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1354   .text.I2C_GetITStatus:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1359   .text.I2C_GetITStatus:00000000 I2C_GetITStatus
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1420   .text.I2C_ClearITPendingBit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccjaYggv.s:1425   .text.I2C_ClearITPendingBit:00000000 I2C_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
