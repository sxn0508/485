ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f37x_spi.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.SPI_I2S_DeInit,"ax",%progbits
  22              		.align	2
  23              		.global	SPI_I2S_DeInit
  24              		.thumb
  25              		.thumb_func
  27              	SPI_I2S_DeInit:
  28              	.LFB111:
  29              		.file 1 "../stdperiph/source/stm32f37x_spi.c"
   1:../stdperiph/source/stm32f37x_spi.c **** /**
   2:../stdperiph/source/stm32f37x_spi.c ****   ******************************************************************************
   3:../stdperiph/source/stm32f37x_spi.c ****   * @file    stm32f37x_spi.c
   4:../stdperiph/source/stm32f37x_spi.c ****   * @author  MCD Application Team
   5:../stdperiph/source/stm32f37x_spi.c ****   * @version V1.0.0
   6:../stdperiph/source/stm32f37x_spi.c ****   * @date    20-September-2012
   7:../stdperiph/source/stm32f37x_spi.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../stdperiph/source/stm32f37x_spi.c ****   *          functionalities of the Serial peripheral interface (SPI):
   9:../stdperiph/source/stm32f37x_spi.c ****   *           + Initialization and Configuration
  10:../stdperiph/source/stm32f37x_spi.c ****   *           + Data transfers functions
  11:../stdperiph/source/stm32f37x_spi.c ****   *           + Hardware CRC Calculation
  12:../stdperiph/source/stm32f37x_spi.c ****   *           + DMA transfers management
  13:../stdperiph/source/stm32f37x_spi.c ****   *           + Interrupts and flags management 
  14:../stdperiph/source/stm32f37x_spi.c ****   *
  15:../stdperiph/source/stm32f37x_spi.c ****   *  @verbatim
  16:../stdperiph/source/stm32f37x_spi.c **** 
  17:../stdperiph/source/stm32f37x_spi.c ****  ===============================================================================
  18:../stdperiph/source/stm32f37x_spi.c ****                        ##### How to use this driver #####
  19:../stdperiph/source/stm32f37x_spi.c ****  ===============================================================================
  20:../stdperiph/source/stm32f37x_spi.c ****     [..]
  21:../stdperiph/source/stm32f37x_spi.c ****         (#) Enable peripheral clock using RCC_APB2PeriphClockCmd(RCC_APB2Periph_SPI1, ENABLE)
  22:../stdperiph/source/stm32f37x_spi.c ****             function for SPI1 or using RCC_APB1PeriphClockCmd(RCC_APB1Periph_SPI2, ENABLE)
  23:../stdperiph/source/stm32f37x_spi.c ****             function for SPI2 or using RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE)
  24:../stdperiph/source/stm32f37x_spi.c ****             for SPI3.
  25:../stdperiph/source/stm32f37x_spi.c ****   
  26:../stdperiph/source/stm32f37x_spi.c ****         (#) Enable SCK, MOSI, MISO and NSS GPIO clocks using 
  27:../stdperiph/source/stm32f37x_spi.c ****             RCC_AHBPeriphClockCmd() function. 
  28:../stdperiph/source/stm32f37x_spi.c ****   
  29:../stdperiph/source/stm32f37x_spi.c ****         (#) Peripherals alternate function: 
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 2


  30:../stdperiph/source/stm32f37x_spi.c ****            (++) Connect the pin to the desired peripherals' Alternate 
  31:../stdperiph/source/stm32f37x_spi.c ****                  Function (AF) using GPIO_PinAFConfig() function.
  32:../stdperiph/source/stm32f37x_spi.c ****            (++) Configure the desired pin in alternate function by:
  33:../stdperiph/source/stm32f37x_spi.c ****                  GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF.
  34:../stdperiph/source/stm32f37x_spi.c ****            (++) Select the type, pull-up/pull-down and output speed via 
  35:../stdperiph/source/stm32f37x_spi.c ****                  GPIO_PuPd, GPIO_OType and GPIO_Speed members.
  36:../stdperiph/source/stm32f37x_spi.c ****            (++) Call GPIO_Init() function.
  37:../stdperiph/source/stm32f37x_spi.c ****   
  38:../stdperiph/source/stm32f37x_spi.c ****         (#) Program the Polarity, Phase, First Data, Baud Rate Prescaler, Slave 
  39:../stdperiph/source/stm32f37x_spi.c ****             Management, Peripheral Mode and CRC Polynomial values using the SPI_Init()
  40:../stdperiph/source/stm32f37x_spi.c ****             function.In I2S mode, program the Mode, Standard, Data Format, MCLK 
  41:../stdperiph/source/stm32f37x_spi.c ****             Output, Audio frequency and Polarity using I2S_Init() function.
  42:../stdperiph/source/stm32f37x_spi.c ****   
  43:../stdperiph/source/stm32f37x_spi.c ****         (#) Configure the FIFO threshold using SPI_RxFIFOThresholdConfig() to select 
  44:../stdperiph/source/stm32f37x_spi.c ****             at which threshold the RXNE event is generated.
  45:../stdperiph/source/stm32f37x_spi.c **** 
  46:../stdperiph/source/stm32f37x_spi.c ****         (#) Enable the NVIC and the corresponding interrupt using the function 
  47:../stdperiph/source/stm32f37x_spi.c ****             SPI_ITConfig() if you need to use interrupt mode. 
  48:../stdperiph/source/stm32f37x_spi.c ****   
  49:../stdperiph/source/stm32f37x_spi.c ****         (#) When using the DMA mode 
  50:../stdperiph/source/stm32f37x_spi.c ****            (++) Configure the DMA using DMA_Init() function.
  51:../stdperiph/source/stm32f37x_spi.c ****            (++) Active the needed channel Request using SPI_I2S_DMACmd() function.
  52:../stdperiph/source/stm32f37x_spi.c ****    
  53:../stdperiph/source/stm32f37x_spi.c ****         (#) Enable the SPI using the SPI_Cmd() function or enable the I2S using
  54:../stdperiph/source/stm32f37x_spi.c ****             I2S_Cmd().
  55:../stdperiph/source/stm32f37x_spi.c ****    
  56:../stdperiph/source/stm32f37x_spi.c ****         (#) Enable the DMA using the DMA_Cmd() function when using DMA mode. 
  57:../stdperiph/source/stm32f37x_spi.c ****   
  58:../stdperiph/source/stm32f37x_spi.c ****         (#) Optionally, you can enable/configure the following parameters without
  59:../stdperiph/source/stm32f37x_spi.c ****             re-initialization (i.e there is no need to call again SPI_Init() function):
  60:../stdperiph/source/stm32f37x_spi.c ****            (++) When bidirectional mode (SPI_Direction_1Line_Rx or SPI_Direction_1Line_Tx)
  61:../stdperiph/source/stm32f37x_spi.c ****                  is programmed as Data direction parameter using the SPI_Init() 
  62:../stdperiph/source/stm32f37x_spi.c ****                  function it can be possible to switch between SPI_Direction_Tx 
  63:../stdperiph/source/stm32f37x_spi.c ****                  or SPI_Direction_Rx using the SPI_BiDirectionalLineConfig() function.
  64:../stdperiph/source/stm32f37x_spi.c ****            (++) When SPI_NSS_Soft is selected as Slave Select Management parameter 
  65:../stdperiph/source/stm32f37x_spi.c ****                  using the SPI_Init() function it can be possible to manage the 
  66:../stdperiph/source/stm32f37x_spi.c ****                  NSS internal signal using the SPI_NSSInternalSoftwareConfig() function.
  67:../stdperiph/source/stm32f37x_spi.c ****            (++) Reconfigure the data size using the SPI_DataSizeConfig() function.
  68:../stdperiph/source/stm32f37x_spi.c ****            (++) Enable or disable the SS output using the SPI_SSOutputCmd() function.  
  69:../stdperiph/source/stm32f37x_spi.c ****   
  70:../stdperiph/source/stm32f37x_spi.c ****         (#) To use the CRC Hardware calculation feature refer to the Peripheral 
  71:../stdperiph/source/stm32f37x_spi.c ****             CRC hardware Calculation subsection.
  72:../stdperiph/source/stm32f37x_spi.c ****   
  73:../stdperiph/source/stm32f37x_spi.c ****     @endverbatim 
  74:../stdperiph/source/stm32f37x_spi.c ****   ******************************************************************************
  75:../stdperiph/source/stm32f37x_spi.c ****   * @attention
  76:../stdperiph/source/stm32f37x_spi.c ****   *
  77:../stdperiph/source/stm32f37x_spi.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  78:../stdperiph/source/stm32f37x_spi.c ****   *
  79:../stdperiph/source/stm32f37x_spi.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  80:../stdperiph/source/stm32f37x_spi.c ****   * You may not use this file except in compliance with the License.
  81:../stdperiph/source/stm32f37x_spi.c ****   * You may obtain a copy of the License at:
  82:../stdperiph/source/stm32f37x_spi.c ****   *
  83:../stdperiph/source/stm32f37x_spi.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  84:../stdperiph/source/stm32f37x_spi.c ****   *
  85:../stdperiph/source/stm32f37x_spi.c ****   * Unless required by applicable law or agreed to in writing, software 
  86:../stdperiph/source/stm32f37x_spi.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 3


  87:../stdperiph/source/stm32f37x_spi.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  88:../stdperiph/source/stm32f37x_spi.c ****   * See the License for the specific language governing permissions and
  89:../stdperiph/source/stm32f37x_spi.c ****   * limitations under the License.
  90:../stdperiph/source/stm32f37x_spi.c ****   *
  91:../stdperiph/source/stm32f37x_spi.c ****   ******************************************************************************
  92:../stdperiph/source/stm32f37x_spi.c ****   */
  93:../stdperiph/source/stm32f37x_spi.c **** 
  94:../stdperiph/source/stm32f37x_spi.c **** /* Includes ------------------------------------------------------------------*/
  95:../stdperiph/source/stm32f37x_spi.c **** #include "stm32f37x_spi.h"
  96:../stdperiph/source/stm32f37x_spi.c **** #include "stm32f37x_rcc.h"
  97:../stdperiph/source/stm32f37x_spi.c **** 
  98:../stdperiph/source/stm32f37x_spi.c **** /** @addtogroup STM32F37x_StdPeriph_Driver
  99:../stdperiph/source/stm32f37x_spi.c ****   * @{
 100:../stdperiph/source/stm32f37x_spi.c ****   */
 101:../stdperiph/source/stm32f37x_spi.c **** 
 102:../stdperiph/source/stm32f37x_spi.c **** /** @defgroup SPI
 103:../stdperiph/source/stm32f37x_spi.c ****   * @brief SPI driver modules
 104:../stdperiph/source/stm32f37x_spi.c ****   * @{
 105:../stdperiph/source/stm32f37x_spi.c ****   */
 106:../stdperiph/source/stm32f37x_spi.c **** 
 107:../stdperiph/source/stm32f37x_spi.c **** /* Private typedef -----------------------------------------------------------*/
 108:../stdperiph/source/stm32f37x_spi.c **** /* Private define ------------------------------------------------------------*/
 109:../stdperiph/source/stm32f37x_spi.c **** /* SPI registers Masks */
 110:../stdperiph/source/stm32f37x_spi.c **** #define CR1_CLEAR_MASK       ((uint16_t)0x3040)
 111:../stdperiph/source/stm32f37x_spi.c **** #define CR1_CLEAR_MASK2      ((uint16_t)0xFFFB)
 112:../stdperiph/source/stm32f37x_spi.c **** #define CR2_LDMA_MASK        ((uint16_t)0x9FFF)
 113:../stdperiph/source/stm32f37x_spi.c **** 
 114:../stdperiph/source/stm32f37x_spi.c **** #define I2SCFGR_CLEAR_Mask   ((uint16_t)0xF040)
 115:../stdperiph/source/stm32f37x_spi.c **** 
 116:../stdperiph/source/stm32f37x_spi.c **** /* Private macro -------------------------------------------------------------*/
 117:../stdperiph/source/stm32f37x_spi.c **** /* Private variables ---------------------------------------------------------*/
 118:../stdperiph/source/stm32f37x_spi.c **** /* Private function prototypes -----------------------------------------------*/
 119:../stdperiph/source/stm32f37x_spi.c **** /* Private functions ---------------------------------------------------------*/
 120:../stdperiph/source/stm32f37x_spi.c **** 
 121:../stdperiph/source/stm32f37x_spi.c **** /** @defgroup SPI_Private_Functions
 122:../stdperiph/source/stm32f37x_spi.c ****   * @{
 123:../stdperiph/source/stm32f37x_spi.c ****   */
 124:../stdperiph/source/stm32f37x_spi.c **** 
 125:../stdperiph/source/stm32f37x_spi.c **** /** @defgroup SPI_Group1 Initialization and Configuration functions
 126:../stdperiph/source/stm32f37x_spi.c ****  *  @brief   Initialization and Configuration functions 
 127:../stdperiph/source/stm32f37x_spi.c ****  *
 128:../stdperiph/source/stm32f37x_spi.c **** @verbatim   
 129:../stdperiph/source/stm32f37x_spi.c ****  ===============================================================================
 130:../stdperiph/source/stm32f37x_spi.c ****            ##### Initialization and Configuration functions #####
 131:../stdperiph/source/stm32f37x_spi.c ****  ===============================================================================
 132:../stdperiph/source/stm32f37x_spi.c ****     [..] This section provides a set of functions allowing to initialize the SPI Direction,
 133:../stdperiph/source/stm32f37x_spi.c ****          SPI Mode, SPI Data Size, SPI Polarity, SPI Phase, SPI NSS Management, SPI Baud
 134:../stdperiph/source/stm32f37x_spi.c ****          Rate Prescaler, SPI First Bit and SPI CRC Polynomial.
 135:../stdperiph/source/stm32f37x_spi.c **** 
 136:../stdperiph/source/stm32f37x_spi.c ****     [..] The SPI_Init() function follows the SPI configuration procedures for Master mode
 137:../stdperiph/source/stm32f37x_spi.c ****          and Slave mode (details for these procedures are available in reference manual).
 138:../stdperiph/source/stm32f37x_spi.c ****          
 139:../stdperiph/source/stm32f37x_spi.c ****     [..] When the Software NSS management (SPI_InitStruct->SPI_NSS = SPI_NSS_Soft) is selected,
 140:../stdperiph/source/stm32f37x_spi.c ****          use the following function to manage the NSS bit:
 141:../stdperiph/source/stm32f37x_spi.c ****          void SPI_NSSInternalSoftwareConfig(SPI_TypeDef* SPIx, uint16_t SPI_NSSInternalSoft);
 142:../stdperiph/source/stm32f37x_spi.c **** 
 143:../stdperiph/source/stm32f37x_spi.c ****     [..] In Master mode, when the Hardware NSS management (SPI_InitStruct->SPI_NSS = SPI_NSS_Hard)
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 4


 144:../stdperiph/source/stm32f37x_spi.c ****          is selected, use the follwoing function to enable the NSS output feature.
 145:../stdperiph/source/stm32f37x_spi.c ****          void SPI_SSOutputCmd(SPI_TypeDef* SPIx, FunctionalState NewState);
 146:../stdperiph/source/stm32f37x_spi.c **** 
 147:../stdperiph/source/stm32f37x_spi.c ****     [..] The NSS pulse mode can be managed by the SPI TI mode when enabling it using the following 
 148:../stdperiph/source/stm32f37x_spi.c ****          void SPI_TIModeCmd(SPI_TypeDef* SPIx, FunctionalState NewState);
 149:../stdperiph/source/stm32f37x_spi.c ****          And it can be managed by software in the SPI Motorola mode using this function: 
 150:../stdperiph/source/stm32f37x_spi.c ****          void SPI_NSSPulseModeCmd(SPI_TypeDef* SPIx, FunctionalState NewState);
 151:../stdperiph/source/stm32f37x_spi.c **** 
 152:../stdperiph/source/stm32f37x_spi.c ****     [..] This section provides also functions to initialize the I2S Mode, Standard, 
 153:../stdperiph/source/stm32f37x_spi.c ****          Data Format, MCLK Output, Audio frequency and Polarity.
 154:../stdperiph/source/stm32f37x_spi.c ****   
 155:../stdperiph/source/stm32f37x_spi.c ****     [..] The I2S_Init() function follows the I2S configuration procedures for Master mode
 156:../stdperiph/source/stm32f37x_spi.c ****          and Slave mode.
 157:../stdperiph/source/stm32f37x_spi.c **** 
 158:../stdperiph/source/stm32f37x_spi.c **** @endverbatim
 159:../stdperiph/source/stm32f37x_spi.c ****   * @{
 160:../stdperiph/source/stm32f37x_spi.c ****   */
 161:../stdperiph/source/stm32f37x_spi.c **** 
 162:../stdperiph/source/stm32f37x_spi.c **** /**
 163:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Deinitializes the SPIx peripheral registers to their default
 164:../stdperiph/source/stm32f37x_spi.c ****   *         reset values.
 165:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 166:../stdperiph/source/stm32f37x_spi.c ****   * @retval None
 167:../stdperiph/source/stm32f37x_spi.c ****   */
 168:../stdperiph/source/stm32f37x_spi.c **** void SPI_I2S_DeInit(SPI_TypeDef* SPIx)
 169:../stdperiph/source/stm32f37x_spi.c **** {
  30              		.loc 1 169 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 170:../stdperiph/source/stm32f37x_spi.c ****   /* Check the parameters */
 171:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 172:../stdperiph/source/stm32f37x_spi.c **** 
 173:../stdperiph/source/stm32f37x_spi.c ****   if (SPIx == SPI1)
  40              		.loc 1 173 0
  41 0002 154B     		ldr	r3, .L6
  42 0004 9842     		cmp	r0, r3
  43 0006 0AD1     		bne	.L2
 174:../stdperiph/source/stm32f37x_spi.c ****   {
 175:../stdperiph/source/stm32f37x_spi.c ****     /* Enable SPI1 reset state */
 176:../stdperiph/source/stm32f37x_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, ENABLE);
  44              		.loc 1 176 0
  45 0008 0121     		movs	r1, #1
  46 000a 4FF48050 		mov	r0, #4096
  47              	.LVL1:
  48 000e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  49              	.LVL2:
 177:../stdperiph/source/stm32f37x_spi.c ****     /* Release SPI1 from reset state */
 178:../stdperiph/source/stm32f37x_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, DISABLE);
  50              		.loc 1 178 0
  51 0012 0021     		movs	r1, #0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 5


  52 0014 4FF48050 		mov	r0, #4096
  53 0018 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  54              	.LVL3:
  55 001c 08BD     		pop	{r3, pc}
  56              	.LVL4:
  57              	.L2:
 179:../stdperiph/source/stm32f37x_spi.c ****   }
 180:../stdperiph/source/stm32f37x_spi.c ****   else if (SPIx == SPI2)
  58              		.loc 1 180 0
  59 001e 0F4B     		ldr	r3, .L6+4
  60 0020 9842     		cmp	r0, r3
  61 0022 0AD1     		bne	.L4
 181:../stdperiph/source/stm32f37x_spi.c ****   {
 182:../stdperiph/source/stm32f37x_spi.c ****     /* Enable SPI2 reset state */
 183:../stdperiph/source/stm32f37x_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, ENABLE);
  62              		.loc 1 183 0
  63 0024 0121     		movs	r1, #1
  64 0026 4FF48040 		mov	r0, #16384
  65              	.LVL5:
  66 002a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  67              	.LVL6:
 184:../stdperiph/source/stm32f37x_spi.c ****     /* Release SPI2 from reset state */
 185:../stdperiph/source/stm32f37x_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, DISABLE);
  68              		.loc 1 185 0
  69 002e 0021     		movs	r1, #0
  70 0030 4FF48040 		mov	r0, #16384
  71 0034 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  72              	.LVL7:
  73 0038 08BD     		pop	{r3, pc}
  74              	.LVL8:
  75              	.L4:
 186:../stdperiph/source/stm32f37x_spi.c ****   }
 187:../stdperiph/source/stm32f37x_spi.c ****   else
 188:../stdperiph/source/stm32f37x_spi.c ****   {
 189:../stdperiph/source/stm32f37x_spi.c ****     if (SPIx == SPI3)
  76              		.loc 1 189 0
  77 003a 094B     		ldr	r3, .L6+8
  78 003c 9842     		cmp	r0, r3
  79 003e 09D1     		bne	.L1
 190:../stdperiph/source/stm32f37x_spi.c ****     {
 191:../stdperiph/source/stm32f37x_spi.c ****       /* Enable SPI3 reset state */
 192:../stdperiph/source/stm32f37x_spi.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE);
  80              		.loc 1 192 0
  81 0040 0121     		movs	r1, #1
  82 0042 4FF40040 		mov	r0, #32768
  83              	.LVL9:
  84 0046 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  85              	.LVL10:
 193:../stdperiph/source/stm32f37x_spi.c ****       /* Release SPI3 from reset state */
 194:../stdperiph/source/stm32f37x_spi.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, DISABLE);
  86              		.loc 1 194 0
  87 004a 0021     		movs	r1, #0
  88 004c 4FF40040 		mov	r0, #32768
  89 0050 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  90              	.LVL11:
  91              	.L1:
  92 0054 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 6


  93              	.L7:
  94 0056 00BF     		.align	2
  95              	.L6:
  96 0058 00300140 		.word	1073819648
  97 005c 00380040 		.word	1073756160
  98 0060 003C0040 		.word	1073757184
  99              		.cfi_endproc
 100              	.LFE111:
 102              		.section	.text.SPI_StructInit,"ax",%progbits
 103              		.align	2
 104              		.global	SPI_StructInit
 105              		.thumb
 106              		.thumb_func
 108              	SPI_StructInit:
 109              	.LFB112:
 195:../stdperiph/source/stm32f37x_spi.c ****     }
 196:../stdperiph/source/stm32f37x_spi.c ****   }
 197:../stdperiph/source/stm32f37x_spi.c **** }
 198:../stdperiph/source/stm32f37x_spi.c **** 
 199:../stdperiph/source/stm32f37x_spi.c **** /**
 200:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Fills each SPI_InitStruct member with its default value.
 201:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPI_InitStruct: pointer to a SPI_InitTypeDef structure which will be initialized.
 202:../stdperiph/source/stm32f37x_spi.c ****   * @retval None
 203:../stdperiph/source/stm32f37x_spi.c ****   */
 204:../stdperiph/source/stm32f37x_spi.c **** void SPI_StructInit(SPI_InitTypeDef* SPI_InitStruct)
 205:../stdperiph/source/stm32f37x_spi.c **** {
 110              		.loc 1 205 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114              		@ link register save eliminated.
 115              	.LVL12:
 206:../stdperiph/source/stm32f37x_spi.c **** /*--------------- Reset SPI init structure parameters values -----------------*/
 207:../stdperiph/source/stm32f37x_spi.c ****   /* Initialize the SPI_Direction member */
 208:../stdperiph/source/stm32f37x_spi.c ****   SPI_InitStruct->SPI_Direction = SPI_Direction_2Lines_FullDuplex;
 116              		.loc 1 208 0
 117 0000 0023     		movs	r3, #0
 118 0002 0380     		strh	r3, [r0]	@ movhi
 209:../stdperiph/source/stm32f37x_spi.c ****   /* Initialize the SPI_Mode member */
 210:../stdperiph/source/stm32f37x_spi.c ****   SPI_InitStruct->SPI_Mode = SPI_Mode_Slave;
 119              		.loc 1 210 0
 120 0004 4380     		strh	r3, [r0, #2]	@ movhi
 211:../stdperiph/source/stm32f37x_spi.c ****   /* Initialize the SPI_DataSize member */
 212:../stdperiph/source/stm32f37x_spi.c ****   SPI_InitStruct->SPI_DataSize = SPI_DataSize_8b;
 121              		.loc 1 212 0
 122 0006 4FF4E062 		mov	r2, #1792
 123 000a 8280     		strh	r2, [r0, #4]	@ movhi
 213:../stdperiph/source/stm32f37x_spi.c ****   /* Initialize the SPI_CPOL member */
 214:../stdperiph/source/stm32f37x_spi.c ****   SPI_InitStruct->SPI_CPOL = SPI_CPOL_Low;
 124              		.loc 1 214 0
 125 000c C380     		strh	r3, [r0, #6]	@ movhi
 215:../stdperiph/source/stm32f37x_spi.c ****   /* Initialize the SPI_CPHA member */
 216:../stdperiph/source/stm32f37x_spi.c ****   SPI_InitStruct->SPI_CPHA = SPI_CPHA_1Edge;
 126              		.loc 1 216 0
 127 000e 0381     		strh	r3, [r0, #8]	@ movhi
 217:../stdperiph/source/stm32f37x_spi.c ****   /* Initialize the SPI_NSS member */
 218:../stdperiph/source/stm32f37x_spi.c ****   SPI_InitStruct->SPI_NSS = SPI_NSS_Hard;
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 7


 128              		.loc 1 218 0
 129 0010 4381     		strh	r3, [r0, #10]	@ movhi
 219:../stdperiph/source/stm32f37x_spi.c ****   /* Initialize the SPI_BaudRatePrescaler member */
 220:../stdperiph/source/stm32f37x_spi.c ****   SPI_InitStruct->SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_2;
 130              		.loc 1 220 0
 131 0012 8381     		strh	r3, [r0, #12]	@ movhi
 221:../stdperiph/source/stm32f37x_spi.c ****   /* Initialize the SPI_FirstBit member */
 222:../stdperiph/source/stm32f37x_spi.c ****   SPI_InitStruct->SPI_FirstBit = SPI_FirstBit_MSB;
 132              		.loc 1 222 0
 133 0014 C381     		strh	r3, [r0, #14]	@ movhi
 223:../stdperiph/source/stm32f37x_spi.c ****   /* Initialize the SPI_CRCPolynomial member */
 224:../stdperiph/source/stm32f37x_spi.c ****   SPI_InitStruct->SPI_CRCPolynomial = 7;
 134              		.loc 1 224 0
 135 0016 0723     		movs	r3, #7
 136 0018 0382     		strh	r3, [r0, #16]	@ movhi
 137 001a 7047     		bx	lr
 138              		.cfi_endproc
 139              	.LFE112:
 141              		.section	.text.SPI_Init,"ax",%progbits
 142              		.align	2
 143              		.global	SPI_Init
 144              		.thumb
 145              		.thumb_func
 147              	SPI_Init:
 148              	.LFB113:
 225:../stdperiph/source/stm32f37x_spi.c **** }
 226:../stdperiph/source/stm32f37x_spi.c **** 
 227:../stdperiph/source/stm32f37x_spi.c **** /**
 228:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Initializes the SPIx peripheral according to the specified 
 229:../stdperiph/source/stm32f37x_spi.c ****   *         parameters in the SPI_InitStruct.
 230:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 231:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPI_InitStruct: pointer to a SPI_InitTypeDef structure that
 232:../stdperiph/source/stm32f37x_spi.c ****   *         contains the configuration information for the specified SPI peripheral.
 233:../stdperiph/source/stm32f37x_spi.c ****   * @retval None
 234:../stdperiph/source/stm32f37x_spi.c ****   */
 235:../stdperiph/source/stm32f37x_spi.c **** void SPI_Init(SPI_TypeDef* SPIx, SPI_InitTypeDef* SPI_InitStruct)
 236:../stdperiph/source/stm32f37x_spi.c **** {
 149              		.loc 1 236 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              	.LVL13:
 154 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 155              	.LCFI1:
 156              		.cfi_def_cfa_offset 20
 157              		.cfi_offset 4, -20
 158              		.cfi_offset 5, -16
 159              		.cfi_offset 6, -12
 160              		.cfi_offset 7, -8
 161              		.cfi_offset 14, -4
 162              	.LVL14:
 237:../stdperiph/source/stm32f37x_spi.c ****   uint16_t tmpreg = 0;
 238:../stdperiph/source/stm32f37x_spi.c ****   
 239:../stdperiph/source/stm32f37x_spi.c ****   /* check the parameters */
 240:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 241:../stdperiph/source/stm32f37x_spi.c ****   
 242:../stdperiph/source/stm32f37x_spi.c ****   /* Check the SPI parameters */
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 8


 243:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_DIRECTION_MODE(SPI_InitStruct->SPI_Direction));
 244:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_MODE(SPI_InitStruct->SPI_Mode));
 245:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_DATA_SIZE(SPI_InitStruct->SPI_DataSize));
 246:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_CPOL(SPI_InitStruct->SPI_CPOL));
 247:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_CPHA(SPI_InitStruct->SPI_CPHA));
 248:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_NSS(SPI_InitStruct->SPI_NSS));
 249:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(SPI_InitStruct->SPI_BaudRatePrescaler));
 250:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_FIRST_BIT(SPI_InitStruct->SPI_FirstBit));
 251:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_CRC_POLYNOMIAL(SPI_InitStruct->SPI_CRCPolynomial));
 252:../stdperiph/source/stm32f37x_spi.c ****   
 253:../stdperiph/source/stm32f37x_spi.c ****   /*---------------------------- SPIx CR1 Configuration ------------------------*/
 254:../stdperiph/source/stm32f37x_spi.c ****   /* Get the SPIx CR1 value */
 255:../stdperiph/source/stm32f37x_spi.c ****   tmpreg = SPIx->CR1;
 163              		.loc 1 255 0
 164 0002 0388     		ldrh	r3, [r0]
 165              	.LVL15:
 256:../stdperiph/source/stm32f37x_spi.c ****   /* Clear BIDIMode, BIDIOE, RxONLY, SSM, SSI, LSBFirst, BR, CPOL and CPHA bits */
 257:../stdperiph/source/stm32f37x_spi.c ****   tmpreg &= CR1_CLEAR_MASK;
 166              		.loc 1 257 0
 167 0004 03F44156 		and	r6, r3, #12352
 168              	.LVL16:
 258:../stdperiph/source/stm32f37x_spi.c ****   /* Configure SPIx: direction, NSS management, first transmitted bit, BaudRate prescaler
 259:../stdperiph/source/stm32f37x_spi.c ****   master/slave mode, CPOL and CPHA */
 260:../stdperiph/source/stm32f37x_spi.c ****   /* Set BIDImode, BIDIOE and RxONLY bits according to SPI_Direction value */
 261:../stdperiph/source/stm32f37x_spi.c ****   /* Set SSM, SSI bit according to SPI_NSS values */
 262:../stdperiph/source/stm32f37x_spi.c ****   /* Set LSBFirst bit according to SPI_FirstBit value */
 263:../stdperiph/source/stm32f37x_spi.c ****   /* Set BR bits according to SPI_BaudRatePrescaler value */
 264:../stdperiph/source/stm32f37x_spi.c ****   /* Set CPOL bit according to SPI_CPOL value */
 265:../stdperiph/source/stm32f37x_spi.c ****   /* Set CPHA bit according to SPI_CPHA value */
 266:../stdperiph/source/stm32f37x_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_FirstBit |
 169              		.loc 1 266 0
 170 0008 0C88     		ldrh	r4, [r1]
 171 000a CD89     		ldrh	r5, [r1, #14]
 267:../stdperiph/source/stm32f37x_spi.c ****                       SPI_InitStruct->SPI_CPOL | SPI_InitStruct->SPI_CPHA |
 172              		.loc 1 267 0
 173 000c CA88     		ldrh	r2, [r1, #6]
 174 000e B1F808E0 		ldrh	lr, [r1, #8]
 268:../stdperiph/source/stm32f37x_spi.c ****                       SPI_InitStruct->SPI_NSS | SPI_InitStruct->SPI_BaudRatePrescaler);  
 175              		.loc 1 268 0
 176 0012 4B89     		ldrh	r3, [r1, #10]
 177 0014 8F89     		ldrh	r7, [r1, #12]
 266:../stdperiph/source/stm32f37x_spi.c ****                       SPI_InitStruct->SPI_CPOL | SPI_InitStruct->SPI_CPHA |
 178              		.loc 1 266 0
 179 0016 2C43     		orrs	r4, r4, r5
 180 0018 1443     		orrs	r4, r4, r2
 181 001a 4EEA0402 		orr	r2, lr, r4
 182 001e 1A43     		orrs	r2, r2, r3
 183 0020 47EA0203 		orr	r3, r7, r2
 184 0024 3343     		orrs	r3, r3, r6
 185              	.LVL17:
 269:../stdperiph/source/stm32f37x_spi.c ****   /* Write to SPIx CR1 */
 270:../stdperiph/source/stm32f37x_spi.c ****   SPIx->CR1 = tmpreg;
 186              		.loc 1 270 0
 187 0026 0380     		strh	r3, [r0]	@ movhi
 271:../stdperiph/source/stm32f37x_spi.c ****   /*-------------------------Data Size Configuration -----------------------*/
 272:../stdperiph/source/stm32f37x_spi.c ****   /* Get the SPIx CR2 value */
 273:../stdperiph/source/stm32f37x_spi.c ****   tmpreg = SPIx->CR2;
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 9


 188              		.loc 1 273 0
 189 0028 8388     		ldrh	r3, [r0, #4]
 190              	.LVL18:
 191 002a 9BB2     		uxth	r3, r3
 192              	.LVL19:
 274:../stdperiph/source/stm32f37x_spi.c ****   /* Clear DS[3:0] bits */
 275:../stdperiph/source/stm32f37x_spi.c ****   tmpreg &=(uint16_t)~SPI_CR2_DS;
 193              		.loc 1 275 0
 194 002c 23F47063 		bic	r3, r3, #3840
 195              	.LVL20:
 276:../stdperiph/source/stm32f37x_spi.c ****   /* Configure SPIx: Data Size */
 277:../stdperiph/source/stm32f37x_spi.c ****   tmpreg |= (uint16_t)(SPI_InitStruct->SPI_DataSize);
 196              		.loc 1 277 0
 197 0030 8A88     		ldrh	r2, [r1, #4]
 198 0032 1343     		orrs	r3, r3, r2
 199              	.LVL21:
 278:../stdperiph/source/stm32f37x_spi.c ****   /* Write to SPIx CR2 */
 279:../stdperiph/source/stm32f37x_spi.c ****   SPIx->CR2 = tmpreg;
 200              		.loc 1 279 0
 201 0034 8380     		strh	r3, [r0, #4]	@ movhi
 280:../stdperiph/source/stm32f37x_spi.c ****   
 281:../stdperiph/source/stm32f37x_spi.c ****   /*---------------------------- SPIx CRCPOLY Configuration --------------------*/
 282:../stdperiph/source/stm32f37x_spi.c ****   /* Write to SPIx CRCPOLY */
 283:../stdperiph/source/stm32f37x_spi.c ****   SPIx->CRCPR = SPI_InitStruct->SPI_CRCPolynomial;
 202              		.loc 1 283 0
 203 0036 0B8A     		ldrh	r3, [r1, #16]
 204              	.LVL22:
 205 0038 0382     		strh	r3, [r0, #16]	@ movhi
 206              	.LVL23:
 284:../stdperiph/source/stm32f37x_spi.c ****   
 285:../stdperiph/source/stm32f37x_spi.c ****   /*---------------------------- SPIx CR1 Configuration ------------------------*/
 286:../stdperiph/source/stm32f37x_spi.c ****   /* Get the SPIx CR1 value */
 287:../stdperiph/source/stm32f37x_spi.c ****   tmpreg = SPIx->CR1;
 207              		.loc 1 287 0
 208 003a 0388     		ldrh	r3, [r0]
 209 003c 9BB2     		uxth	r3, r3
 210              	.LVL24:
 288:../stdperiph/source/stm32f37x_spi.c ****   /* Clear MSTR bit */
 289:../stdperiph/source/stm32f37x_spi.c ****   tmpreg &= CR1_CLEAR_MASK2;
 211              		.loc 1 289 0
 212 003e 23F00403 		bic	r3, r3, #4
 213              	.LVL25:
 290:../stdperiph/source/stm32f37x_spi.c ****   /* Configure SPIx: master/slave mode */  
 291:../stdperiph/source/stm32f37x_spi.c ****   /* Set MSTR bit according to SPI_Mode */
 292:../stdperiph/source/stm32f37x_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Mode);  
 214              		.loc 1 292 0
 215 0042 4A88     		ldrh	r2, [r1, #2]
 216 0044 1343     		orrs	r3, r3, r2
 217              	.LVL26:
 293:../stdperiph/source/stm32f37x_spi.c ****   /* Write to SPIx CR1 */
 294:../stdperiph/source/stm32f37x_spi.c ****   SPIx->CR1 = tmpreg;  
 218              		.loc 1 294 0
 219 0046 0380     		strh	r3, [r0]	@ movhi
 295:../stdperiph/source/stm32f37x_spi.c ****   
 296:../stdperiph/source/stm32f37x_spi.c ****   /* Activate the SPI mode (Reset I2SMOD bit in I2SCFGR register) */
 297:../stdperiph/source/stm32f37x_spi.c ****   SPIx->I2SCFGR &= (uint16_t)~((uint16_t)SPI_I2SCFGR_I2SMOD);
 220              		.loc 1 297 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 10


 221 0048 838B     		ldrh	r3, [r0, #28]
 222              	.LVL27:
 223 004a 9BB2     		uxth	r3, r3
 224 004c 23F40063 		bic	r3, r3, #2048
 225 0050 9BB2     		uxth	r3, r3
 226 0052 8383     		strh	r3, [r0, #28]	@ movhi
 227              	.LVL28:
 228 0054 F0BD     		pop	{r4, r5, r6, r7, pc}
 229              		.cfi_endproc
 230              	.LFE113:
 232 0056 00BF     		.section	.text.I2S_StructInit,"ax",%progbits
 233              		.align	2
 234              		.global	I2S_StructInit
 235              		.thumb
 236              		.thumb_func
 238              	I2S_StructInit:
 239              	.LFB114:
 298:../stdperiph/source/stm32f37x_spi.c **** }
 299:../stdperiph/source/stm32f37x_spi.c **** 
 300:../stdperiph/source/stm32f37x_spi.c **** /**
 301:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Fills each I2S_InitStruct member with its default value.
 302:../stdperiph/source/stm32f37x_spi.c ****   * @param  I2S_InitStruct: pointer to a I2S_InitTypeDef structure which will be initialized.
 303:../stdperiph/source/stm32f37x_spi.c ****   * @retval None
 304:../stdperiph/source/stm32f37x_spi.c ****   */
 305:../stdperiph/source/stm32f37x_spi.c **** void I2S_StructInit(I2S_InitTypeDef* I2S_InitStruct)
 306:../stdperiph/source/stm32f37x_spi.c **** {
 240              		.loc 1 306 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244              		@ link register save eliminated.
 245              	.LVL29:
 307:../stdperiph/source/stm32f37x_spi.c **** /*--------------- Reset I2S init structure parameters values -----------------*/
 308:../stdperiph/source/stm32f37x_spi.c ****   /* Initialize the I2S_Mode member */
 309:../stdperiph/source/stm32f37x_spi.c ****   I2S_InitStruct->I2S_Mode = I2S_Mode_SlaveTx;
 246              		.loc 1 309 0
 247 0000 0023     		movs	r3, #0
 248 0002 0380     		strh	r3, [r0]	@ movhi
 310:../stdperiph/source/stm32f37x_spi.c **** 
 311:../stdperiph/source/stm32f37x_spi.c ****   /* Initialize the I2S_Standard member */
 312:../stdperiph/source/stm32f37x_spi.c ****   I2S_InitStruct->I2S_Standard = I2S_Standard_Phillips;
 249              		.loc 1 312 0
 250 0004 4380     		strh	r3, [r0, #2]	@ movhi
 313:../stdperiph/source/stm32f37x_spi.c **** 
 314:../stdperiph/source/stm32f37x_spi.c ****   /* Initialize the I2S_DataFormat member */
 315:../stdperiph/source/stm32f37x_spi.c ****   I2S_InitStruct->I2S_DataFormat = I2S_DataFormat_16b;
 251              		.loc 1 315 0
 252 0006 8380     		strh	r3, [r0, #4]	@ movhi
 316:../stdperiph/source/stm32f37x_spi.c **** 
 317:../stdperiph/source/stm32f37x_spi.c ****   /* Initialize the I2S_MCLKOutput member */
 318:../stdperiph/source/stm32f37x_spi.c ****   I2S_InitStruct->I2S_MCLKOutput = I2S_MCLKOutput_Disable;
 253              		.loc 1 318 0
 254 0008 C380     		strh	r3, [r0, #6]	@ movhi
 319:../stdperiph/source/stm32f37x_spi.c **** 
 320:../stdperiph/source/stm32f37x_spi.c ****   /* Initialize the I2S_AudioFreq member */
 321:../stdperiph/source/stm32f37x_spi.c ****   I2S_InitStruct->I2S_AudioFreq = I2S_AudioFreq_Default;
 255              		.loc 1 321 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 11


 256 000a 0222     		movs	r2, #2
 257 000c 8260     		str	r2, [r0, #8]
 322:../stdperiph/source/stm32f37x_spi.c **** 
 323:../stdperiph/source/stm32f37x_spi.c ****   /* Initialize the I2S_CPOL member */
 324:../stdperiph/source/stm32f37x_spi.c ****   I2S_InitStruct->I2S_CPOL = I2S_CPOL_Low;
 258              		.loc 1 324 0
 259 000e 8381     		strh	r3, [r0, #12]	@ movhi
 260 0010 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE114:
 264 0012 00BF     		.section	.text.I2S_Init,"ax",%progbits
 265              		.align	2
 266              		.global	I2S_Init
 267              		.thumb
 268              		.thumb_func
 270              	I2S_Init:
 271              	.LFB115:
 325:../stdperiph/source/stm32f37x_spi.c **** }
 326:../stdperiph/source/stm32f37x_spi.c **** 
 327:../stdperiph/source/stm32f37x_spi.c **** /**
 328:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Initializes the SPIx peripheral according to the specified 
 329:../stdperiph/source/stm32f37x_spi.c ****   *         parameters in the I2S_InitStruct.
 330:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 331:../stdperiph/source/stm32f37x_spi.c ****   * @param  I2S_InitStruct: pointer to an I2S_InitTypeDef structure that
 332:../stdperiph/source/stm32f37x_spi.c ****   *         contains the configuration information for the specified SPI peripheral
 333:../stdperiph/source/stm32f37x_spi.c ****   *         configured in I2S mode.
 334:../stdperiph/source/stm32f37x_spi.c ****   * @note   This function calculates the optimal prescaler needed to obtain the most 
 335:../stdperiph/source/stm32f37x_spi.c ****   *         accurate audio frequency (depending on the I2S clock source, the PLL values 
 336:../stdperiph/source/stm32f37x_spi.c ****   *         and the product configuration). But in case the prescaler value is greater 
 337:../stdperiph/source/stm32f37x_spi.c ****   *         than 511, the default value (0x02) will be configured instead.
 338:../stdperiph/source/stm32f37x_spi.c ****   * @retval None
 339:../stdperiph/source/stm32f37x_spi.c ****   */
 340:../stdperiph/source/stm32f37x_spi.c **** void I2S_Init(SPI_TypeDef* SPIx, I2S_InitTypeDef* I2S_InitStruct)
 341:../stdperiph/source/stm32f37x_spi.c **** {
 272              		.loc 1 341 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 48
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276              	.LVL30:
 277 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 278              	.LCFI2:
 279              		.cfi_def_cfa_offset 20
 280              		.cfi_offset 4, -20
 281              		.cfi_offset 5, -16
 282              		.cfi_offset 6, -12
 283              		.cfi_offset 7, -8
 284              		.cfi_offset 14, -4
 285 0002 8DB0     		sub	sp, sp, #52
 286              	.LCFI3:
 287              		.cfi_def_cfa_offset 72
 288 0004 0546     		mov	r5, r0
 289 0006 0C46     		mov	r4, r1
 290              	.LVL31:
 342:../stdperiph/source/stm32f37x_spi.c ****   uint16_t tmpreg = 0, i2sdiv = 2, i2sodd = 0, packetlength = 1;
 343:../stdperiph/source/stm32f37x_spi.c ****   uint32_t tmp = 0;
 344:../stdperiph/source/stm32f37x_spi.c ****   RCC_ClocksTypeDef RCC_Clocks;
 345:../stdperiph/source/stm32f37x_spi.c ****   uint32_t sourceclock = 0;
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 12


 346:../stdperiph/source/stm32f37x_spi.c **** 
 347:../stdperiph/source/stm32f37x_spi.c ****   /* Check the I2S parameters */
 348:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 349:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_I2S_MODE(I2S_InitStruct->I2S_Mode));
 350:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_I2S_STANDARD(I2S_InitStruct->I2S_Standard));
 351:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_I2S_DATA_FORMAT(I2S_InitStruct->I2S_DataFormat));
 352:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_I2S_MCLK_OUTPUT(I2S_InitStruct->I2S_MCLKOutput));
 353:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_I2S_AUDIO_FREQ(I2S_InitStruct->I2S_AudioFreq));
 354:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_I2S_CPOL(I2S_InitStruct->I2S_CPOL));  
 355:../stdperiph/source/stm32f37x_spi.c **** 
 356:../stdperiph/source/stm32f37x_spi.c **** /*----------------------- SPIx I2SCFGR & I2SPR Configuration -----------------*/
 357:../stdperiph/source/stm32f37x_spi.c ****   /* Clear I2SMOD, I2SE, I2SCFG, PCMSYNC, I2SSTD, CKPOL, DATLEN and CHLEN bits */
 358:../stdperiph/source/stm32f37x_spi.c ****   SPIx->I2SCFGR &= I2SCFGR_CLEAR_Mask; 
 291              		.loc 1 358 0
 292 0008 838B     		ldrh	r3, [r0, #28]
 293 000a 9BB2     		uxth	r3, r3
 294 000c 23F47B63 		bic	r3, r3, #4016
 295 0010 23F00F03 		bic	r3, r3, #15
 296 0014 9BB2     		uxth	r3, r3
 297 0016 8383     		strh	r3, [r0, #28]	@ movhi
 359:../stdperiph/source/stm32f37x_spi.c ****   SPIx->I2SPR = 0x0002;
 298              		.loc 1 359 0
 299 0018 0223     		movs	r3, #2
 300 001a 0384     		strh	r3, [r0, #32]	@ movhi
 360:../stdperiph/source/stm32f37x_spi.c **** 
 361:../stdperiph/source/stm32f37x_spi.c ****   /* Get the I2SCFGR register value */
 362:../stdperiph/source/stm32f37x_spi.c ****   tmpreg = SPIx->I2SCFGR;
 301              		.loc 1 362 0
 302 001c 868B     		ldrh	r6, [r0, #28]
 303 001e B6B2     		uxth	r6, r6
 304              	.LVL32:
 363:../stdperiph/source/stm32f37x_spi.c **** 
 364:../stdperiph/source/stm32f37x_spi.c ****   /* If the default value has to be written, reinitialize i2sdiv and i2sodd*/
 365:../stdperiph/source/stm32f37x_spi.c ****   if(I2S_InitStruct->I2S_AudioFreq == I2S_AudioFreq_Default)
 305              		.loc 1 365 0
 306 0020 8B68     		ldr	r3, [r1, #8]
 307 0022 022B     		cmp	r3, #2
 308 0024 2DD0     		beq	.L18
 366:../stdperiph/source/stm32f37x_spi.c ****   {
 367:../stdperiph/source/stm32f37x_spi.c ****     i2sodd = (uint16_t)0;
 368:../stdperiph/source/stm32f37x_spi.c ****     i2sdiv = (uint16_t)2;   
 369:../stdperiph/source/stm32f37x_spi.c ****   }
 370:../stdperiph/source/stm32f37x_spi.c ****   /* If the requested audio frequency is not the default, compute the prescaler */
 371:../stdperiph/source/stm32f37x_spi.c ****   else
 372:../stdperiph/source/stm32f37x_spi.c ****   {
 373:../stdperiph/source/stm32f37x_spi.c ****     /* Check the frame length (For the Prescaler computing) */
 374:../stdperiph/source/stm32f37x_spi.c ****     if(I2S_InitStruct->I2S_DataFormat == I2S_DataFormat_16b)
 309              		.loc 1 374 0
 310 0026 8B88     		ldrh	r3, [r1, #4]
 311 0028 0BB9     		cbnz	r3, .L19
 375:../stdperiph/source/stm32f37x_spi.c ****     {
 376:../stdperiph/source/stm32f37x_spi.c ****       /* Packet length is 16 bits */
 377:../stdperiph/source/stm32f37x_spi.c ****       packetlength = 1;
 312              		.loc 1 377 0
 313 002a 0127     		movs	r7, #1
 314 002c 00E0     		b	.L14
 315              	.L19:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 13


 378:../stdperiph/source/stm32f37x_spi.c ****     }
 379:../stdperiph/source/stm32f37x_spi.c ****     else
 380:../stdperiph/source/stm32f37x_spi.c ****     {
 381:../stdperiph/source/stm32f37x_spi.c ****       /* Packet length is 32 bits */
 382:../stdperiph/source/stm32f37x_spi.c ****       packetlength = 2;
 316              		.loc 1 382 0
 317 002e 0227     		movs	r7, #2
 318              	.L14:
 319              	.LVL33:
 383:../stdperiph/source/stm32f37x_spi.c ****     }
 384:../stdperiph/source/stm32f37x_spi.c **** 
 385:../stdperiph/source/stm32f37x_spi.c ****     /* I2S Clock source is System clock: Get System Clock frequency */
 386:../stdperiph/source/stm32f37x_spi.c ****     RCC_GetClocksFreq(&RCC_Clocks);      
 320              		.loc 1 386 0
 321 0030 6846     		mov	r0, sp
 322              	.LVL34:
 323 0032 FFF7FEFF 		bl	RCC_GetClocksFreq
 324              	.LVL35:
 387:../stdperiph/source/stm32f37x_spi.c **** 
 388:../stdperiph/source/stm32f37x_spi.c ****     /* Get the source clock value: based on System Clock value */
 389:../stdperiph/source/stm32f37x_spi.c ****     sourceclock = RCC_Clocks.SYSCLK_Frequency;    
 325              		.loc 1 389 0
 326 0036 009B     		ldr	r3, [sp]
 327              	.LVL36:
 390:../stdperiph/source/stm32f37x_spi.c **** 
 391:../stdperiph/source/stm32f37x_spi.c ****     /* Compute the Real divider depending on the MCLK output state with a floating point */
 392:../stdperiph/source/stm32f37x_spi.c ****     if(I2S_InitStruct->I2S_MCLKOutput == I2S_MCLKOutput_Enable)
 328              		.loc 1 392 0
 329 0038 E288     		ldrh	r2, [r4, #6]
 330 003a B2F5007F 		cmp	r2, #512
 331 003e 09D1     		bne	.L15
 393:../stdperiph/source/stm32f37x_spi.c ****     {
 394:../stdperiph/source/stm32f37x_spi.c ****       /* MCLK output is enabled */
 395:../stdperiph/source/stm32f37x_spi.c ****       tmp = (uint16_t)(((((sourceclock / 256) * 10) / I2S_InitStruct->I2S_AudioFreq)) + 5);
 332              		.loc 1 395 0
 333 0040 1A0A     		lsrs	r2, r3, #8
 334 0042 02EB8202 		add	r2, r2, r2, lsl #2
 335 0046 5300     		lsls	r3, r2, #1
 336              	.LVL37:
 337 0048 A268     		ldr	r2, [r4, #8]
 338 004a B3FBF2F3 		udiv	r3, r3, r2
 339 004e 0533     		adds	r3, r3, #5
 340 0050 9BB2     		uxth	r3, r3
 341              	.LVL38:
 342 0052 0AE0     		b	.L16
 343              	.LVL39:
 344              	.L15:
 396:../stdperiph/source/stm32f37x_spi.c ****     }
 397:../stdperiph/source/stm32f37x_spi.c ****     else
 398:../stdperiph/source/stm32f37x_spi.c ****     {
 399:../stdperiph/source/stm32f37x_spi.c ****       /* MCLK output is disabled */
 400:../stdperiph/source/stm32f37x_spi.c ****       tmp = (uint16_t)(((((sourceclock / (32 * packetlength)) *10 ) / I2S_InitStruct->I2S_AudioFreq
 345              		.loc 1 400 0
 346 0054 7A01     		lsls	r2, r7, #5
 347 0056 B3FBF2F2 		udiv	r2, r3, r2
 348 005a 02EB8202 		add	r2, r2, r2, lsl #2
 349 005e 5300     		lsls	r3, r2, #1
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 14


 350              	.LVL40:
 351 0060 A268     		ldr	r2, [r4, #8]
 352 0062 B3FBF2F3 		udiv	r3, r3, r2
 353 0066 0533     		adds	r3, r3, #5
 354 0068 9BB2     		uxth	r3, r3
 355              	.LVL41:
 356              	.L16:
 401:../stdperiph/source/stm32f37x_spi.c ****     }
 402:../stdperiph/source/stm32f37x_spi.c ****     
 403:../stdperiph/source/stm32f37x_spi.c ****     /* Remove the floating point */
 404:../stdperiph/source/stm32f37x_spi.c ****     tmp = tmp / 10;
 357              		.loc 1 404 0
 358 006a 124A     		ldr	r2, .L22
 359 006c A2FB0323 		umull	r2, r3, r2, r3
 360              	.LVL42:
 361 0070 DB08     		lsrs	r3, r3, #3
 362              	.LVL43:
 405:../stdperiph/source/stm32f37x_spi.c **** 
 406:../stdperiph/source/stm32f37x_spi.c ****     /* Check the parity of the divider */
 407:../stdperiph/source/stm32f37x_spi.c ****     i2sodd = (uint16_t)(tmp & (uint16_t)0x0001);
 363              		.loc 1 407 0
 364 0072 03F00102 		and	r2, r3, #1
 365              	.LVL44:
 408:../stdperiph/source/stm32f37x_spi.c **** 
 409:../stdperiph/source/stm32f37x_spi.c ****     /* Compute the i2sdiv prescaler */
 410:../stdperiph/source/stm32f37x_spi.c ****     i2sdiv = (uint16_t)((tmp - i2sodd) / 2);
 366              		.loc 1 410 0
 367 0076 9B1A     		subs	r3, r3, r2
 368              	.LVL45:
 369 0078 C3F34F03 		ubfx	r3, r3, #1, #16
 370              	.LVL46:
 411:../stdperiph/source/stm32f37x_spi.c **** 
 412:../stdperiph/source/stm32f37x_spi.c ****     /* Get the Mask for the Odd bit (SPI_I2SPR[8]) register */
 413:../stdperiph/source/stm32f37x_spi.c ****     i2sodd = (uint16_t) (i2sodd << 8);
 371              		.loc 1 413 0
 372 007c 1202     		lsls	r2, r2, #8
 373              	.LVL47:
 374 007e 92B2     		uxth	r2, r2
 375              	.LVL48:
 376 0080 01E0     		b	.L13
 377              	.LVL49:
 378              	.L18:
 367:../stdperiph/source/stm32f37x_spi.c ****     i2sdiv = (uint16_t)2;   
 379              		.loc 1 367 0
 380 0082 0022     		movs	r2, #0
 368:../stdperiph/source/stm32f37x_spi.c ****   }
 381              		.loc 1 368 0
 382 0084 0223     		movs	r3, #2
 383              	.LVL50:
 384              	.L13:
 414:../stdperiph/source/stm32f37x_spi.c ****   }
 415:../stdperiph/source/stm32f37x_spi.c **** 
 416:../stdperiph/source/stm32f37x_spi.c ****   /* Test if the divider is 1 or 0 or greater than 0xFF */
 417:../stdperiph/source/stm32f37x_spi.c ****   if ((i2sdiv < 2) || (i2sdiv > 0xFF))
 385              		.loc 1 417 0
 386 0086 991E     		subs	r1, r3, #2
 387 0088 89B2     		uxth	r1, r1
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 15


 388 008a FD29     		cmp	r1, #253
 389 008c 01D9     		bls	.L17
 418:../stdperiph/source/stm32f37x_spi.c ****   {
 419:../stdperiph/source/stm32f37x_spi.c ****     /* Set the default values */
 420:../stdperiph/source/stm32f37x_spi.c ****     i2sdiv = 2;
 421:../stdperiph/source/stm32f37x_spi.c ****     i2sodd = 0;
 390              		.loc 1 421 0
 391 008e 0022     		movs	r2, #0
 392              	.LVL51:
 420:../stdperiph/source/stm32f37x_spi.c ****     i2sodd = 0;
 393              		.loc 1 420 0
 394 0090 0223     		movs	r3, #2
 395              	.LVL52:
 396              	.L17:
 422:../stdperiph/source/stm32f37x_spi.c ****   }
 423:../stdperiph/source/stm32f37x_spi.c **** 
 424:../stdperiph/source/stm32f37x_spi.c ****   /* Write to SPIx I2SPR register the computed value */
 425:../stdperiph/source/stm32f37x_spi.c ****   SPIx->I2SPR = (uint16_t)(i2sdiv | (uint16_t)(i2sodd | (uint16_t)I2S_InitStruct->I2S_MCLKOutput));
 397              		.loc 1 425 0
 398 0092 E188     		ldrh	r1, [r4, #6]
 399 0094 0A43     		orrs	r2, r2, r1
 400              	.LVL53:
 401 0096 1343     		orrs	r3, r3, r2
 402              	.LVL54:
 403 0098 2B84     		strh	r3, [r5, #32]	@ movhi
 426:../stdperiph/source/stm32f37x_spi.c **** 
 427:../stdperiph/source/stm32f37x_spi.c ****   /* Configure the I2S with the SPI_InitStruct values */
 428:../stdperiph/source/stm32f37x_spi.c ****   tmpreg |= (uint16_t)(SPI_I2SCFGR_I2SMOD | (uint16_t)(I2S_InitStruct->I2S_Mode | \
 404              		.loc 1 428 0
 405 009a 2188     		ldrh	r1, [r4]
 429:../stdperiph/source/stm32f37x_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 406              		.loc 1 429 0
 407 009c 6388     		ldrh	r3, [r4, #2]
 408 009e A088     		ldrh	r0, [r4, #4]
 430:../stdperiph/source/stm32f37x_spi.c ****                   (uint16_t)I2S_InitStruct->I2S_CPOL))));
 409              		.loc 1 430 0
 410 00a0 A289     		ldrh	r2, [r4, #12]
 429:../stdperiph/source/stm32f37x_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 411              		.loc 1 429 0
 412 00a2 0243     		orrs	r2, r2, r0
 413 00a4 1343     		orrs	r3, r3, r2
 428:../stdperiph/source/stm32f37x_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 414              		.loc 1 428 0
 415 00a6 0B43     		orrs	r3, r3, r1
 416 00a8 1E43     		orrs	r6, r6, r3
 417              	.LVL55:
 418 00aa 46F40066 		orr	r6, r6, #2048
 419              	.LVL56:
 431:../stdperiph/source/stm32f37x_spi.c **** 
 432:../stdperiph/source/stm32f37x_spi.c ****   /* Write to SPIx I2SCFGR */
 433:../stdperiph/source/stm32f37x_spi.c ****   SPIx->I2SCFGR = tmpreg;
 420              		.loc 1 433 0
 421 00ae AE83     		strh	r6, [r5, #28]	@ movhi
 434:../stdperiph/source/stm32f37x_spi.c **** }
 422              		.loc 1 434 0
 423 00b0 0DB0     		add	sp, sp, #52
 424              	.LCFI4:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 16


 425              		.cfi_def_cfa_offset 20
 426              		@ sp needed
 427 00b2 F0BD     		pop	{r4, r5, r6, r7, pc}
 428              	.LVL57:
 429              	.L23:
 430              		.align	2
 431              	.L22:
 432 00b4 CDCCCCCC 		.word	-858993459
 433              		.cfi_endproc
 434              	.LFE115:
 436              		.section	.text.SPI_Cmd,"ax",%progbits
 437              		.align	2
 438              		.global	SPI_Cmd
 439              		.thumb
 440              		.thumb_func
 442              	SPI_Cmd:
 443              	.LFB116:
 435:../stdperiph/source/stm32f37x_spi.c **** 
 436:../stdperiph/source/stm32f37x_spi.c **** /**
 437:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Enables or disables the specified SPI peripheral.
 438:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 439:../stdperiph/source/stm32f37x_spi.c ****   * @param  NewState: new state of the SPIx peripheral. 
 440:../stdperiph/source/stm32f37x_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 441:../stdperiph/source/stm32f37x_spi.c ****   * @retval None
 442:../stdperiph/source/stm32f37x_spi.c ****   */
 443:../stdperiph/source/stm32f37x_spi.c **** void SPI_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 444:../stdperiph/source/stm32f37x_spi.c **** {
 444              		.loc 1 444 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448              		@ link register save eliminated.
 449              	.LVL58:
 445:../stdperiph/source/stm32f37x_spi.c ****   /* Check the parameters */
 446:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 447:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 448:../stdperiph/source/stm32f37x_spi.c **** 
 449:../stdperiph/source/stm32f37x_spi.c ****   if (NewState != DISABLE)
 450              		.loc 1 449 0
 451 0000 29B1     		cbz	r1, .L25
 450:../stdperiph/source/stm32f37x_spi.c ****   {
 451:../stdperiph/source/stm32f37x_spi.c ****     /* Enable the selected SPI peripheral */
 452:../stdperiph/source/stm32f37x_spi.c ****     SPIx->CR1 |= SPI_CR1_SPE;
 452              		.loc 1 452 0
 453 0002 0388     		ldrh	r3, [r0]
 454 0004 9BB2     		uxth	r3, r3
 455 0006 43F04003 		orr	r3, r3, #64
 456 000a 0380     		strh	r3, [r0]	@ movhi
 457 000c 7047     		bx	lr
 458              	.L25:
 453:../stdperiph/source/stm32f37x_spi.c ****   }
 454:../stdperiph/source/stm32f37x_spi.c ****   else
 455:../stdperiph/source/stm32f37x_spi.c ****   {
 456:../stdperiph/source/stm32f37x_spi.c ****     /* Disable the selected SPI peripheral */
 457:../stdperiph/source/stm32f37x_spi.c ****     SPIx->CR1 &= (uint16_t)~((uint16_t)SPI_CR1_SPE);
 459              		.loc 1 457 0
 460 000e 0388     		ldrh	r3, [r0]
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 17


 461 0010 9BB2     		uxth	r3, r3
 462 0012 23F04003 		bic	r3, r3, #64
 463 0016 9BB2     		uxth	r3, r3
 464 0018 0380     		strh	r3, [r0]	@ movhi
 465 001a 7047     		bx	lr
 466              		.cfi_endproc
 467              	.LFE116:
 469              		.section	.text.SPI_TIModeCmd,"ax",%progbits
 470              		.align	2
 471              		.global	SPI_TIModeCmd
 472              		.thumb
 473              		.thumb_func
 475              	SPI_TIModeCmd:
 476              	.LFB117:
 458:../stdperiph/source/stm32f37x_spi.c ****   }
 459:../stdperiph/source/stm32f37x_spi.c **** }
 460:../stdperiph/source/stm32f37x_spi.c **** 
 461:../stdperiph/source/stm32f37x_spi.c **** /**
 462:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Enables or disables the TI Mode.
 463:../stdperiph/source/stm32f37x_spi.c ****   *
 464:../stdperiph/source/stm32f37x_spi.c ****   * @note   This function can be called only after the SPI_Init() function has 
 465:../stdperiph/source/stm32f37x_spi.c ****   *         been called. 
 466:../stdperiph/source/stm32f37x_spi.c ****   * @note   When TI mode is selected, the control bits SSM, SSI, CPOL and CPHA 
 467:../stdperiph/source/stm32f37x_spi.c ****   *         are not taken into consideration and are configured by hardware 
 468:../stdperiph/source/stm32f37x_spi.c ****   *         respectively to the TI mode requirements.
 469:../stdperiph/source/stm32f37x_spi.c ****   *
 470:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 471:../stdperiph/source/stm32f37x_spi.c ****   * @param  NewState: new state of the selected SPI TI communication mode.
 472:../stdperiph/source/stm32f37x_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 473:../stdperiph/source/stm32f37x_spi.c ****   * @retval None
 474:../stdperiph/source/stm32f37x_spi.c ****   */
 475:../stdperiph/source/stm32f37x_spi.c **** void SPI_TIModeCmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 476:../stdperiph/source/stm32f37x_spi.c **** {
 477              		.loc 1 476 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481              		@ link register save eliminated.
 482              	.LVL59:
 477:../stdperiph/source/stm32f37x_spi.c ****   /* Check the parameters */
 478:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 479:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 480:../stdperiph/source/stm32f37x_spi.c **** 
 481:../stdperiph/source/stm32f37x_spi.c ****   if (NewState != DISABLE)
 483              		.loc 1 481 0
 484 0000 29B1     		cbz	r1, .L28
 482:../stdperiph/source/stm32f37x_spi.c ****   {
 483:../stdperiph/source/stm32f37x_spi.c ****     /* Enable the TI mode for the selected SPI peripheral */
 484:../stdperiph/source/stm32f37x_spi.c ****     SPIx->CR2 |= SPI_CR2_FRF;
 485              		.loc 1 484 0
 486 0002 8388     		ldrh	r3, [r0, #4]
 487 0004 9BB2     		uxth	r3, r3
 488 0006 43F01003 		orr	r3, r3, #16
 489 000a 8380     		strh	r3, [r0, #4]	@ movhi
 490 000c 7047     		bx	lr
 491              	.L28:
 485:../stdperiph/source/stm32f37x_spi.c ****   }
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 18


 486:../stdperiph/source/stm32f37x_spi.c ****   else
 487:../stdperiph/source/stm32f37x_spi.c ****   {
 488:../stdperiph/source/stm32f37x_spi.c ****     /* Disable the TI mode for the selected SPI peripheral */
 489:../stdperiph/source/stm32f37x_spi.c ****     SPIx->CR2 &= (uint16_t)~((uint16_t)SPI_CR2_FRF);
 492              		.loc 1 489 0
 493 000e 8388     		ldrh	r3, [r0, #4]
 494 0010 9BB2     		uxth	r3, r3
 495 0012 23F01003 		bic	r3, r3, #16
 496 0016 9BB2     		uxth	r3, r3
 497 0018 8380     		strh	r3, [r0, #4]	@ movhi
 498 001a 7047     		bx	lr
 499              		.cfi_endproc
 500              	.LFE117:
 502              		.section	.text.I2S_Cmd,"ax",%progbits
 503              		.align	2
 504              		.global	I2S_Cmd
 505              		.thumb
 506              		.thumb_func
 508              	I2S_Cmd:
 509              	.LFB118:
 490:../stdperiph/source/stm32f37x_spi.c ****   }
 491:../stdperiph/source/stm32f37x_spi.c **** }
 492:../stdperiph/source/stm32f37x_spi.c **** 
 493:../stdperiph/source/stm32f37x_spi.c **** /**
 494:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Enables or disables the specified SPI peripheral (in I2S mode).
 495:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 496:../stdperiph/source/stm32f37x_spi.c ****   * @param  NewState: new state of the SPIx peripheral. 
 497:../stdperiph/source/stm32f37x_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 498:../stdperiph/source/stm32f37x_spi.c ****   * @retval None
 499:../stdperiph/source/stm32f37x_spi.c ****   */
 500:../stdperiph/source/stm32f37x_spi.c **** void I2S_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 501:../stdperiph/source/stm32f37x_spi.c **** {
 510              		.loc 1 501 0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 0
 513              		@ frame_needed = 0, uses_anonymous_args = 0
 514              		@ link register save eliminated.
 515              	.LVL60:
 502:../stdperiph/source/stm32f37x_spi.c ****   /* Check the parameters */
 503:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 504:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 505:../stdperiph/source/stm32f37x_spi.c ****   if (NewState != DISABLE)
 516              		.loc 1 505 0
 517 0000 29B1     		cbz	r1, .L31
 506:../stdperiph/source/stm32f37x_spi.c ****   {
 507:../stdperiph/source/stm32f37x_spi.c ****     /* Enable the selected SPI peripheral in I2S mode */
 508:../stdperiph/source/stm32f37x_spi.c ****     SPIx->I2SCFGR |= SPI_I2SCFGR_I2SE;
 518              		.loc 1 508 0
 519 0002 838B     		ldrh	r3, [r0, #28]
 520 0004 9BB2     		uxth	r3, r3
 521 0006 43F48063 		orr	r3, r3, #1024
 522 000a 8383     		strh	r3, [r0, #28]	@ movhi
 523 000c 7047     		bx	lr
 524              	.L31:
 509:../stdperiph/source/stm32f37x_spi.c ****   }
 510:../stdperiph/source/stm32f37x_spi.c ****   else
 511:../stdperiph/source/stm32f37x_spi.c ****   {
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 19


 512:../stdperiph/source/stm32f37x_spi.c ****     /* Disable the selected SPI peripheral in I2S mode */
 513:../stdperiph/source/stm32f37x_spi.c ****     SPIx->I2SCFGR &= (uint16_t)~((uint16_t)SPI_I2SCFGR_I2SE);
 525              		.loc 1 513 0
 526 000e 838B     		ldrh	r3, [r0, #28]
 527 0010 9BB2     		uxth	r3, r3
 528 0012 23F48063 		bic	r3, r3, #1024
 529 0016 9BB2     		uxth	r3, r3
 530 0018 8383     		strh	r3, [r0, #28]	@ movhi
 531 001a 7047     		bx	lr
 532              		.cfi_endproc
 533              	.LFE118:
 535              		.section	.text.SPI_DataSizeConfig,"ax",%progbits
 536              		.align	2
 537              		.global	SPI_DataSizeConfig
 538              		.thumb
 539              		.thumb_func
 541              	SPI_DataSizeConfig:
 542              	.LFB119:
 514:../stdperiph/source/stm32f37x_spi.c ****   }
 515:../stdperiph/source/stm32f37x_spi.c **** }
 516:../stdperiph/source/stm32f37x_spi.c **** 
 517:../stdperiph/source/stm32f37x_spi.c **** /**
 518:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Configures the data size for the selected SPI.
 519:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3  to select the SPI peripheral.
 520:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPI_DataSize: specifies the SPI data size.
 521:../stdperiph/source/stm32f37x_spi.c ****   *         For the SPIx peripheral this parameter can be one of the following values:
 522:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_DataSize_4b: Set data size to 4 bits
 523:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_DataSize_5b: Set data size to 5 bits
 524:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_DataSize_6b: Set data size to 6 bits
 525:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_DataSize_7b: Set data size to 7 bits
 526:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_DataSize_8b: Set data size to 8 bits
 527:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_DataSize_9b: Set data size to 9 bits
 528:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_DataSize_10b: Set data size to 10 bits
 529:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_DataSize_11b: Set data size to 11 bits
 530:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_DataSize_12b: Set data size to 12 bits
 531:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_DataSize_13b: Set data size to 13 bits
 532:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_DataSize_14b: Set data size to 14 bits
 533:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_DataSize_15b: Set data size to 15 bits
 534:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_DataSize_16b: Set data size to 16 bits
 535:../stdperiph/source/stm32f37x_spi.c ****   * @retval None
 536:../stdperiph/source/stm32f37x_spi.c ****   */
 537:../stdperiph/source/stm32f37x_spi.c **** void SPI_DataSizeConfig(SPI_TypeDef* SPIx, uint16_t SPI_DataSize)
 538:../stdperiph/source/stm32f37x_spi.c **** {
 543              		.loc 1 538 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547              		@ link register save eliminated.
 548              	.LVL61:
 539:../stdperiph/source/stm32f37x_spi.c ****   uint16_t tmpreg = 0;
 540:../stdperiph/source/stm32f37x_spi.c ****   
 541:../stdperiph/source/stm32f37x_spi.c ****   /* Check the parameters */
 542:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 543:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_DATA_SIZE(SPI_DataSize));
 544:../stdperiph/source/stm32f37x_spi.c ****   /* Read the CR2 register */
 545:../stdperiph/source/stm32f37x_spi.c ****   tmpreg = SPIx->CR2;
 549              		.loc 1 545 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 20


 550 0000 8388     		ldrh	r3, [r0, #4]
 551 0002 9BB2     		uxth	r3, r3
 552              	.LVL62:
 546:../stdperiph/source/stm32f37x_spi.c ****   /* Clear DS[3:0] bits */
 547:../stdperiph/source/stm32f37x_spi.c ****   tmpreg &= (uint16_t)~SPI_CR2_DS;
 553              		.loc 1 547 0
 554 0004 23F47063 		bic	r3, r3, #3840
 555              	.LVL63:
 548:../stdperiph/source/stm32f37x_spi.c ****   /* Set new DS[3:0] bits value */
 549:../stdperiph/source/stm32f37x_spi.c ****   tmpreg |= SPI_DataSize;
 556              		.loc 1 549 0
 557 0008 1943     		orrs	r1, r1, r3
 558              	.LVL64:
 550:../stdperiph/source/stm32f37x_spi.c ****   SPIx->CR2 = tmpreg;
 559              		.loc 1 550 0
 560 000a 8180     		strh	r1, [r0, #4]	@ movhi
 561 000c 7047     		bx	lr
 562              		.cfi_endproc
 563              	.LFE119:
 565 000e 00BF     		.section	.text.SPI_RxFIFOThresholdConfig,"ax",%progbits
 566              		.align	2
 567              		.global	SPI_RxFIFOThresholdConfig
 568              		.thumb
 569              		.thumb_func
 571              	SPI_RxFIFOThresholdConfig:
 572              	.LFB120:
 551:../stdperiph/source/stm32f37x_spi.c **** }
 552:../stdperiph/source/stm32f37x_spi.c **** 
 553:../stdperiph/source/stm32f37x_spi.c **** /**
 554:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Configures the FIFO reception threshold for the selected SPI.
 555:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 556:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPI_RxFIFOThreshold: specifies the FIFO reception threshold.
 557:../stdperiph/source/stm32f37x_spi.c ****   *          This parameter can be one of the following values:
 558:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_RxFIFOThreshold_HF: RXNE event is generated if the FIFO 
 559:../stdperiph/source/stm32f37x_spi.c ****   *                                         level is greater or equal to 1/2. 
 560:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_RxFIFOThreshold_QF: RXNE event is generated if the FIFO 
 561:../stdperiph/source/stm32f37x_spi.c ****   *                                         level is greater or equal to 1/4. 
 562:../stdperiph/source/stm32f37x_spi.c ****   * @retval None
 563:../stdperiph/source/stm32f37x_spi.c ****   */
 564:../stdperiph/source/stm32f37x_spi.c **** void SPI_RxFIFOThresholdConfig(SPI_TypeDef* SPIx, uint16_t SPI_RxFIFOThreshold)
 565:../stdperiph/source/stm32f37x_spi.c **** {
 573              		.loc 1 565 0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 0
 576              		@ frame_needed = 0, uses_anonymous_args = 0
 577              		@ link register save eliminated.
 578              	.LVL65:
 566:../stdperiph/source/stm32f37x_spi.c ****   /* Check the parameters */
 567:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 568:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_RX_FIFO_THRESHOLD(SPI_RxFIFOThreshold));
 569:../stdperiph/source/stm32f37x_spi.c **** 
 570:../stdperiph/source/stm32f37x_spi.c ****   /* Clear FRXTH bit */
 571:../stdperiph/source/stm32f37x_spi.c ****   SPIx->CR2 &= (uint16_t)~((uint16_t)SPI_CR2_FRXTH);
 579              		.loc 1 571 0
 580 0000 8388     		ldrh	r3, [r0, #4]
 581 0002 9BB2     		uxth	r3, r3
 582 0004 23F48053 		bic	r3, r3, #4096
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 21


 583 0008 9BB2     		uxth	r3, r3
 584 000a 8380     		strh	r3, [r0, #4]	@ movhi
 572:../stdperiph/source/stm32f37x_spi.c **** 
 573:../stdperiph/source/stm32f37x_spi.c ****   /* Set new FRXTH bit value */
 574:../stdperiph/source/stm32f37x_spi.c ****   SPIx->CR2 |= SPI_RxFIFOThreshold;
 585              		.loc 1 574 0
 586 000c 8388     		ldrh	r3, [r0, #4]
 587 000e 9BB2     		uxth	r3, r3
 588 0010 1943     		orrs	r1, r1, r3
 589              	.LVL66:
 590 0012 8180     		strh	r1, [r0, #4]	@ movhi
 591 0014 7047     		bx	lr
 592              		.cfi_endproc
 593              	.LFE120:
 595 0016 00BF     		.section	.text.SPI_BiDirectionalLineConfig,"ax",%progbits
 596              		.align	2
 597              		.global	SPI_BiDirectionalLineConfig
 598              		.thumb
 599              		.thumb_func
 601              	SPI_BiDirectionalLineConfig:
 602              	.LFB121:
 575:../stdperiph/source/stm32f37x_spi.c **** }
 576:../stdperiph/source/stm32f37x_spi.c **** 
 577:../stdperiph/source/stm32f37x_spi.c **** /**
 578:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Selects the data transfer direction in bidirectional mode for the specified SPI.
 579:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3  to select the SPI peripheral.
 580:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPI_Direction: specifies the data transfer direction in bidirectional mode. 
 581:../stdperiph/source/stm32f37x_spi.c ****   *          This parameter can be one of the following values:
 582:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_Direction_Tx: Selects Tx transmission direction
 583:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_Direction_Rx: Selects Rx receive direction
 584:../stdperiph/source/stm32f37x_spi.c ****   * @retval None
 585:../stdperiph/source/stm32f37x_spi.c ****   */
 586:../stdperiph/source/stm32f37x_spi.c **** void SPI_BiDirectionalLineConfig(SPI_TypeDef* SPIx, uint16_t SPI_Direction)
 587:../stdperiph/source/stm32f37x_spi.c **** {
 603              		.loc 1 587 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607              		@ link register save eliminated.
 608              	.LVL67:
 588:../stdperiph/source/stm32f37x_spi.c ****   /* Check the parameters */
 589:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 590:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_DIRECTION(SPI_Direction));
 591:../stdperiph/source/stm32f37x_spi.c ****   if (SPI_Direction == SPI_Direction_Tx)
 609              		.loc 1 591 0
 610 0000 B1F5804F 		cmp	r1, #16384
 611 0004 05D1     		bne	.L36
 592:../stdperiph/source/stm32f37x_spi.c ****   {
 593:../stdperiph/source/stm32f37x_spi.c ****     /* Set the Tx only mode */
 594:../stdperiph/source/stm32f37x_spi.c ****     SPIx->CR1 |= SPI_Direction_Tx;
 612              		.loc 1 594 0
 613 0006 0388     		ldrh	r3, [r0]
 614 0008 9BB2     		uxth	r3, r3
 615 000a 43F48043 		orr	r3, r3, #16384
 616 000e 0380     		strh	r3, [r0]	@ movhi
 617 0010 7047     		bx	lr
 618              	.L36:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 22


 595:../stdperiph/source/stm32f37x_spi.c ****   }
 596:../stdperiph/source/stm32f37x_spi.c ****   else
 597:../stdperiph/source/stm32f37x_spi.c ****   {
 598:../stdperiph/source/stm32f37x_spi.c ****     /* Set the Rx only mode */
 599:../stdperiph/source/stm32f37x_spi.c ****     SPIx->CR1 &= SPI_Direction_Rx;
 619              		.loc 1 599 0
 620 0012 0388     		ldrh	r3, [r0]
 621 0014 9BB2     		uxth	r3, r3
 622 0016 23F48043 		bic	r3, r3, #16384
 623 001a 9BB2     		uxth	r3, r3
 624 001c 0380     		strh	r3, [r0]	@ movhi
 625 001e 7047     		bx	lr
 626              		.cfi_endproc
 627              	.LFE121:
 629              		.section	.text.SPI_NSSInternalSoftwareConfig,"ax",%progbits
 630              		.align	2
 631              		.global	SPI_NSSInternalSoftwareConfig
 632              		.thumb
 633              		.thumb_func
 635              	SPI_NSSInternalSoftwareConfig:
 636              	.LFB122:
 600:../stdperiph/source/stm32f37x_spi.c ****   }
 601:../stdperiph/source/stm32f37x_spi.c **** }
 602:../stdperiph/source/stm32f37x_spi.c **** 
 603:../stdperiph/source/stm32f37x_spi.c **** /**
 604:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Configures internally by software the NSS pin for the selected SPI.
 605:../stdperiph/source/stm32f37x_spi.c ****   * @note   This function can be called only after the SPI_Init() function has 
 606:../stdperiph/source/stm32f37x_spi.c ****   *         been called.  
 607:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 608:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPI_NSSInternalSoft: specifies the SPI NSS internal state.
 609:../stdperiph/source/stm32f37x_spi.c ****   *          This parameter can be one of the following values:
 610:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_NSSInternalSoft_Set: Set NSS pin internally
 611:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_NSSInternalSoft_Reset: Reset NSS pin internally
 612:../stdperiph/source/stm32f37x_spi.c ****   * @retval None
 613:../stdperiph/source/stm32f37x_spi.c ****   */
 614:../stdperiph/source/stm32f37x_spi.c **** void SPI_NSSInternalSoftwareConfig(SPI_TypeDef* SPIx, uint16_t SPI_NSSInternalSoft)
 615:../stdperiph/source/stm32f37x_spi.c **** {
 637              		.loc 1 615 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 0
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641              		@ link register save eliminated.
 642              	.LVL68:
 616:../stdperiph/source/stm32f37x_spi.c ****   /* Check the parameters */
 617:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 618:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_NSS_INTERNAL(SPI_NSSInternalSoft));
 619:../stdperiph/source/stm32f37x_spi.c **** 
 620:../stdperiph/source/stm32f37x_spi.c ****   if (SPI_NSSInternalSoft != SPI_NSSInternalSoft_Reset)
 643              		.loc 1 620 0
 644 0000 4FF6FF63 		movw	r3, #65279
 645 0004 9942     		cmp	r1, r3
 646 0006 05D0     		beq	.L39
 621:../stdperiph/source/stm32f37x_spi.c ****   {
 622:../stdperiph/source/stm32f37x_spi.c ****     /* Set NSS pin internally by software */
 623:../stdperiph/source/stm32f37x_spi.c ****     SPIx->CR1 |= SPI_NSSInternalSoft_Set;
 647              		.loc 1 623 0
 648 0008 0388     		ldrh	r3, [r0]
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 23


 649 000a 9BB2     		uxth	r3, r3
 650 000c 43F48073 		orr	r3, r3, #256
 651 0010 0380     		strh	r3, [r0]	@ movhi
 652 0012 7047     		bx	lr
 653              	.L39:
 624:../stdperiph/source/stm32f37x_spi.c ****   }
 625:../stdperiph/source/stm32f37x_spi.c ****   else
 626:../stdperiph/source/stm32f37x_spi.c ****   {
 627:../stdperiph/source/stm32f37x_spi.c ****     /* Reset NSS pin internally by software */
 628:../stdperiph/source/stm32f37x_spi.c ****     SPIx->CR1 &= SPI_NSSInternalSoft_Reset;
 654              		.loc 1 628 0
 655 0014 0388     		ldrh	r3, [r0]
 656 0016 9BB2     		uxth	r3, r3
 657 0018 23F48073 		bic	r3, r3, #256
 658 001c 9BB2     		uxth	r3, r3
 659 001e 0380     		strh	r3, [r0]	@ movhi
 660 0020 7047     		bx	lr
 661              		.cfi_endproc
 662              	.LFE122:
 664 0022 00BF     		.section	.text.SPI_SSOutputCmd,"ax",%progbits
 665              		.align	2
 666              		.global	SPI_SSOutputCmd
 667              		.thumb
 668              		.thumb_func
 670              	SPI_SSOutputCmd:
 671              	.LFB123:
 629:../stdperiph/source/stm32f37x_spi.c ****   }
 630:../stdperiph/source/stm32f37x_spi.c **** }
 631:../stdperiph/source/stm32f37x_spi.c **** 
 632:../stdperiph/source/stm32f37x_spi.c **** /**
 633:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Enables or disables the SS output for the selected SPI.
 634:../stdperiph/source/stm32f37x_spi.c ****   * @note   This function can be called only after the SPI_Init() function has 
 635:../stdperiph/source/stm32f37x_spi.c ****   *         been called and the NSS hardware management mode is selected. 
 636:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 637:../stdperiph/source/stm32f37x_spi.c ****   * @param  NewState: new state of the SPIx SS output. 
 638:../stdperiph/source/stm32f37x_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 639:../stdperiph/source/stm32f37x_spi.c ****   * @retval None
 640:../stdperiph/source/stm32f37x_spi.c ****   */
 641:../stdperiph/source/stm32f37x_spi.c **** void SPI_SSOutputCmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 642:../stdperiph/source/stm32f37x_spi.c **** {
 672              		.loc 1 642 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 0
 675              		@ frame_needed = 0, uses_anonymous_args = 0
 676              		@ link register save eliminated.
 677              	.LVL69:
 643:../stdperiph/source/stm32f37x_spi.c ****   /* Check the parameters */
 644:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 645:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 646:../stdperiph/source/stm32f37x_spi.c ****   if (NewState != DISABLE)
 678              		.loc 1 646 0
 679 0000 29B1     		cbz	r1, .L42
 647:../stdperiph/source/stm32f37x_spi.c ****   {
 648:../stdperiph/source/stm32f37x_spi.c ****     /* Enable the selected SPI SS output */
 649:../stdperiph/source/stm32f37x_spi.c ****     SPIx->CR2 |= SPI_CR2_SSOE;
 680              		.loc 1 649 0
 681 0002 8388     		ldrh	r3, [r0, #4]
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 24


 682 0004 9BB2     		uxth	r3, r3
 683 0006 43F00403 		orr	r3, r3, #4
 684 000a 8380     		strh	r3, [r0, #4]	@ movhi
 685 000c 7047     		bx	lr
 686              	.L42:
 650:../stdperiph/source/stm32f37x_spi.c ****   }
 651:../stdperiph/source/stm32f37x_spi.c ****   else
 652:../stdperiph/source/stm32f37x_spi.c ****   {
 653:../stdperiph/source/stm32f37x_spi.c ****     /* Disable the selected SPI SS output */
 654:../stdperiph/source/stm32f37x_spi.c ****     SPIx->CR2 &= (uint16_t)~((uint16_t)SPI_CR2_SSOE);
 687              		.loc 1 654 0
 688 000e 8388     		ldrh	r3, [r0, #4]
 689 0010 9BB2     		uxth	r3, r3
 690 0012 23F00403 		bic	r3, r3, #4
 691 0016 9BB2     		uxth	r3, r3
 692 0018 8380     		strh	r3, [r0, #4]	@ movhi
 693 001a 7047     		bx	lr
 694              		.cfi_endproc
 695              	.LFE123:
 697              		.section	.text.SPI_NSSPulseModeCmd,"ax",%progbits
 698              		.align	2
 699              		.global	SPI_NSSPulseModeCmd
 700              		.thumb
 701              		.thumb_func
 703              	SPI_NSSPulseModeCmd:
 704              	.LFB124:
 655:../stdperiph/source/stm32f37x_spi.c ****   }
 656:../stdperiph/source/stm32f37x_spi.c **** }
 657:../stdperiph/source/stm32f37x_spi.c **** 
 658:../stdperiph/source/stm32f37x_spi.c **** /**
 659:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Enables or disables the NSS pulse management mode.
 660:../stdperiph/source/stm32f37x_spi.c ****   * @note   This function can be called only after the SPI_Init() function has 
 661:../stdperiph/source/stm32f37x_spi.c ****   *         been called. 
 662:../stdperiph/source/stm32f37x_spi.c ****   * @note   When TI mode is selected, the control bits NSSP is not taken into 
 663:../stdperiph/source/stm32f37x_spi.c ****   *         consideration and are configured by hardware respectively to the 
 664:../stdperiph/source/stm32f37x_spi.c ****   *         TI mode requirements. 
 665:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 666:../stdperiph/source/stm32f37x_spi.c ****   * @param  NewState: new state of the NSS pulse management mode.
 667:../stdperiph/source/stm32f37x_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 668:../stdperiph/source/stm32f37x_spi.c ****   * @retval None
 669:../stdperiph/source/stm32f37x_spi.c ****   */
 670:../stdperiph/source/stm32f37x_spi.c **** void SPI_NSSPulseModeCmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 671:../stdperiph/source/stm32f37x_spi.c **** {
 705              		.loc 1 671 0
 706              		.cfi_startproc
 707              		@ args = 0, pretend = 0, frame = 0
 708              		@ frame_needed = 0, uses_anonymous_args = 0
 709              		@ link register save eliminated.
 710              	.LVL70:
 672:../stdperiph/source/stm32f37x_spi.c ****   /* Check the parameters */
 673:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 674:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 675:../stdperiph/source/stm32f37x_spi.c **** 
 676:../stdperiph/source/stm32f37x_spi.c ****   if (NewState != DISABLE)
 711              		.loc 1 676 0
 712 0000 29B1     		cbz	r1, .L45
 677:../stdperiph/source/stm32f37x_spi.c ****   {
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 25


 678:../stdperiph/source/stm32f37x_spi.c ****     /* Enable the NSS pulse management mode */
 679:../stdperiph/source/stm32f37x_spi.c ****     SPIx->CR2 |= SPI_CR2_NSSP;
 713              		.loc 1 679 0
 714 0002 8388     		ldrh	r3, [r0, #4]
 715 0004 9BB2     		uxth	r3, r3
 716 0006 43F00803 		orr	r3, r3, #8
 717 000a 8380     		strh	r3, [r0, #4]	@ movhi
 718 000c 7047     		bx	lr
 719              	.L45:
 680:../stdperiph/source/stm32f37x_spi.c ****   }
 681:../stdperiph/source/stm32f37x_spi.c ****   else
 682:../stdperiph/source/stm32f37x_spi.c ****   {
 683:../stdperiph/source/stm32f37x_spi.c ****     /* Disable the NSS pulse management mode */
 684:../stdperiph/source/stm32f37x_spi.c ****     SPIx->CR2 &= (uint16_t)~((uint16_t)SPI_CR2_NSSP);    
 720              		.loc 1 684 0
 721 000e 8388     		ldrh	r3, [r0, #4]
 722 0010 9BB2     		uxth	r3, r3
 723 0012 23F00803 		bic	r3, r3, #8
 724 0016 9BB2     		uxth	r3, r3
 725 0018 8380     		strh	r3, [r0, #4]	@ movhi
 726 001a 7047     		bx	lr
 727              		.cfi_endproc
 728              	.LFE124:
 730              		.section	.text.SPI_SendData8,"ax",%progbits
 731              		.align	2
 732              		.global	SPI_SendData8
 733              		.thumb
 734              		.thumb_func
 736              	SPI_SendData8:
 737              	.LFB125:
 685:../stdperiph/source/stm32f37x_spi.c ****   }
 686:../stdperiph/source/stm32f37x_spi.c **** }
 687:../stdperiph/source/stm32f37x_spi.c **** 
 688:../stdperiph/source/stm32f37x_spi.c **** /**
 689:../stdperiph/source/stm32f37x_spi.c ****   * @}
 690:../stdperiph/source/stm32f37x_spi.c ****   */
 691:../stdperiph/source/stm32f37x_spi.c **** 
 692:../stdperiph/source/stm32f37x_spi.c **** /** @defgroup SPI_Group2 Data transfers functions
 693:../stdperiph/source/stm32f37x_spi.c ****  *  @brief   Data transfers functions
 694:../stdperiph/source/stm32f37x_spi.c ****  *
 695:../stdperiph/source/stm32f37x_spi.c **** @verbatim
 696:../stdperiph/source/stm32f37x_spi.c ****  ===============================================================================
 697:../stdperiph/source/stm32f37x_spi.c ****                     ##### Data transfers functions #####
 698:../stdperiph/source/stm32f37x_spi.c ****  ===============================================================================
 699:../stdperiph/source/stm32f37x_spi.c ****     [..] This section provides a set of functions allowing to manage the SPI or I2S 
 700:../stdperiph/source/stm32f37x_spi.c ****          data transfers.
 701:../stdperiph/source/stm32f37x_spi.c **** 
 702:../stdperiph/source/stm32f37x_spi.c ****     [..] In reception, data are received and then stored into an internal Rx buffer while 
 703:../stdperiph/source/stm32f37x_spi.c ****          In transmission, data are first stored into an internal Tx buffer before being 
 704:../stdperiph/source/stm32f37x_spi.c ****          transmitted.
 705:../stdperiph/source/stm32f37x_spi.c **** 
 706:../stdperiph/source/stm32f37x_spi.c ****     [..] The read access of the SPI_DR register can be done using 
 707:../stdperiph/source/stm32f37x_spi.c ****          SPI_ReceiveData8() (when data size is equal or inferior than 8bits) and.
 708:../stdperiph/source/stm32f37x_spi.c ****          SPI_I2S_ReceiveData16() (when data size is superior than 8bits)function
 709:../stdperiph/source/stm32f37x_spi.c ****          and returns the Rx buffered value. Whereas a write access to the SPI_DR 
 710:../stdperiph/source/stm32f37x_spi.c ****          can be done using SPI_SendData8() (when data size is equal or inferior than 8bits)
 711:../stdperiph/source/stm32f37x_spi.c ****          and SPI_I2S_SendData16() (when data size is superior than 8bits) function 
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 26


 712:../stdperiph/source/stm32f37x_spi.c ****          and stores the written data into Tx buffer.
 713:../stdperiph/source/stm32f37x_spi.c **** 
 714:../stdperiph/source/stm32f37x_spi.c **** @endverbatim
 715:../stdperiph/source/stm32f37x_spi.c ****   * @{
 716:../stdperiph/source/stm32f37x_spi.c ****   */
 717:../stdperiph/source/stm32f37x_spi.c **** 
 718:../stdperiph/source/stm32f37x_spi.c **** /**
 719:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Transmits a Data through the SPIx/I2Sx peripheral.
 720:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 721:../stdperiph/source/stm32f37x_spi.c ****   * @param  Data: Data to be transmitted.
 722:../stdperiph/source/stm32f37x_spi.c ****   * @retval None
 723:../stdperiph/source/stm32f37x_spi.c ****   */
 724:../stdperiph/source/stm32f37x_spi.c **** void SPI_SendData8(SPI_TypeDef* SPIx, uint8_t Data)
 725:../stdperiph/source/stm32f37x_spi.c **** {
 738              		.loc 1 725 0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 0
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 742              		@ link register save eliminated.
 743              	.LVL71:
 726:../stdperiph/source/stm32f37x_spi.c ****   uint32_t spixbase = 0x00;
 727:../stdperiph/source/stm32f37x_spi.c **** 
 728:../stdperiph/source/stm32f37x_spi.c ****   /* Check the parameters */
 729:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 730:../stdperiph/source/stm32f37x_spi.c **** 
 731:../stdperiph/source/stm32f37x_spi.c ****   spixbase = (uint32_t)SPIx; 
 732:../stdperiph/source/stm32f37x_spi.c ****   spixbase += 0x0C;
 733:../stdperiph/source/stm32f37x_spi.c ****   
 734:../stdperiph/source/stm32f37x_spi.c ****   *(__IO uint8_t *) spixbase = Data;
 744              		.loc 1 734 0
 745 0000 0173     		strb	r1, [r0, #12]
 746 0002 7047     		bx	lr
 747              		.cfi_endproc
 748              	.LFE125:
 750              		.section	.text.SPI_I2S_SendData16,"ax",%progbits
 751              		.align	2
 752              		.global	SPI_I2S_SendData16
 753              		.thumb
 754              		.thumb_func
 756              	SPI_I2S_SendData16:
 757              	.LFB126:
 735:../stdperiph/source/stm32f37x_spi.c **** }
 736:../stdperiph/source/stm32f37x_spi.c **** 
 737:../stdperiph/source/stm32f37x_spi.c **** /**
 738:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Transmits a Data through the SPIx/I2Sx peripheral.
 739:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 740:../stdperiph/source/stm32f37x_spi.c ****   * @param  Data: Data to be transmitted.
 741:../stdperiph/source/stm32f37x_spi.c ****   * @retval None
 742:../stdperiph/source/stm32f37x_spi.c ****   */
 743:../stdperiph/source/stm32f37x_spi.c **** void SPI_I2S_SendData16(SPI_TypeDef* SPIx, uint16_t Data)
 744:../stdperiph/source/stm32f37x_spi.c **** {
 758              		.loc 1 744 0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 0, uses_anonymous_args = 0
 762              		@ link register save eliminated.
 763              	.LVL72:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 27


 745:../stdperiph/source/stm32f37x_spi.c ****   /* Check the parameters */
 746:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 747:../stdperiph/source/stm32f37x_spi.c ****   
 748:../stdperiph/source/stm32f37x_spi.c ****   SPIx->DR = (uint16_t)Data;
 764              		.loc 1 748 0
 765 0000 8181     		strh	r1, [r0, #12]	@ movhi
 766 0002 7047     		bx	lr
 767              		.cfi_endproc
 768              	.LFE126:
 770              		.section	.text.SPI_ReceiveData8,"ax",%progbits
 771              		.align	2
 772              		.global	SPI_ReceiveData8
 773              		.thumb
 774              		.thumb_func
 776              	SPI_ReceiveData8:
 777              	.LFB127:
 749:../stdperiph/source/stm32f37x_spi.c **** }
 750:../stdperiph/source/stm32f37x_spi.c **** 
 751:../stdperiph/source/stm32f37x_spi.c **** /**
 752:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Returns the most recent received data by the SPIx/I2Sx peripheral. 
 753:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 754:../stdperiph/source/stm32f37x_spi.c ****   * @retval The value of the received data.
 755:../stdperiph/source/stm32f37x_spi.c ****   */
 756:../stdperiph/source/stm32f37x_spi.c **** uint8_t SPI_ReceiveData8(SPI_TypeDef* SPIx)
 757:../stdperiph/source/stm32f37x_spi.c **** {
 778              		.loc 1 757 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782              		@ link register save eliminated.
 783              	.LVL73:
 758:../stdperiph/source/stm32f37x_spi.c ****   uint32_t spixbase = 0x00;
 759:../stdperiph/source/stm32f37x_spi.c ****   
 760:../stdperiph/source/stm32f37x_spi.c ****   spixbase = (uint32_t)SPIx; 
 761:../stdperiph/source/stm32f37x_spi.c ****   spixbase += 0x0C;
 762:../stdperiph/source/stm32f37x_spi.c ****   
 763:../stdperiph/source/stm32f37x_spi.c ****   return *(__IO uint8_t *) spixbase;
 784              		.loc 1 763 0
 785 0000 007B     		ldrb	r0, [r0, #12]	@ zero_extendqisi2
 786              	.LVL74:
 764:../stdperiph/source/stm32f37x_spi.c **** }
 787              		.loc 1 764 0
 788 0002 7047     		bx	lr
 789              		.cfi_endproc
 790              	.LFE127:
 792              		.section	.text.SPI_I2S_ReceiveData16,"ax",%progbits
 793              		.align	2
 794              		.global	SPI_I2S_ReceiveData16
 795              		.thumb
 796              		.thumb_func
 798              	SPI_I2S_ReceiveData16:
 799              	.LFB128:
 765:../stdperiph/source/stm32f37x_spi.c **** 
 766:../stdperiph/source/stm32f37x_spi.c **** /**
 767:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Returns the most recent received data by the SPIx peripheral. 
 768:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 769:../stdperiph/source/stm32f37x_spi.c ****   * @retval The value of the received data.
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 28


 770:../stdperiph/source/stm32f37x_spi.c ****   */
 771:../stdperiph/source/stm32f37x_spi.c **** uint16_t SPI_I2S_ReceiveData16(SPI_TypeDef* SPIx)
 772:../stdperiph/source/stm32f37x_spi.c **** {
 800              		.loc 1 772 0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 804              		@ link register save eliminated.
 805              	.LVL75:
 773:../stdperiph/source/stm32f37x_spi.c ****   return SPIx->DR;
 806              		.loc 1 773 0
 807 0000 8089     		ldrh	r0, [r0, #12]
 808              	.LVL76:
 774:../stdperiph/source/stm32f37x_spi.c **** }
 809              		.loc 1 774 0
 810 0002 80B2     		uxth	r0, r0
 811 0004 7047     		bx	lr
 812              		.cfi_endproc
 813              	.LFE128:
 815 0006 00BF     		.section	.text.SPI_CRCLengthConfig,"ax",%progbits
 816              		.align	2
 817              		.global	SPI_CRCLengthConfig
 818              		.thumb
 819              		.thumb_func
 821              	SPI_CRCLengthConfig:
 822              	.LFB129:
 775:../stdperiph/source/stm32f37x_spi.c **** /**
 776:../stdperiph/source/stm32f37x_spi.c ****   * @}
 777:../stdperiph/source/stm32f37x_spi.c ****   */
 778:../stdperiph/source/stm32f37x_spi.c **** 
 779:../stdperiph/source/stm32f37x_spi.c **** /** @defgroup SPI_Group3 Hardware CRC Calculation functions
 780:../stdperiph/source/stm32f37x_spi.c ****  *  @brief   Hardware CRC Calculation functions
 781:../stdperiph/source/stm32f37x_spi.c ****  *
 782:../stdperiph/source/stm32f37x_spi.c **** @verbatim   
 783:../stdperiph/source/stm32f37x_spi.c ****  ===============================================================================
 784:../stdperiph/source/stm32f37x_spi.c ****                 ##### Hardware CRC Calculation functions #####
 785:../stdperiph/source/stm32f37x_spi.c ****  ===============================================================================
 786:../stdperiph/source/stm32f37x_spi.c ****     [..] This section provides a set of functions allowing to manage the SPI CRC hardware 
 787:../stdperiph/source/stm32f37x_spi.c ****          calculation.SPI communication using CRC is possible through the following procedure:
 788:../stdperiph/source/stm32f37x_spi.c **** 
 789:../stdperiph/source/stm32f37x_spi.c ****          (#) Program the Data direction, Polarity, Phase, First Data, Baud Rate Prescaler, 
 790:../stdperiph/source/stm32f37x_spi.c ****              Slave Management, Peripheral Mode and CRC Polynomial values using the SPI_Init()
 791:../stdperiph/source/stm32f37x_spi.c ****              function.
 792:../stdperiph/source/stm32f37x_spi.c ****          (#) Enable the CRC calculation using the SPI_CalculateCRC() function.
 793:../stdperiph/source/stm32f37x_spi.c ****          (#) Enable the SPI using the SPI_Cmd() function
 794:../stdperiph/source/stm32f37x_spi.c ****          (#) Before writing the last data to the TX buffer, set the CRCNext bit using the 
 795:../stdperiph/source/stm32f37x_spi.c ****              SPI_TransmitCRC() function to indicate that after transmission of the last 
 796:../stdperiph/source/stm32f37x_spi.c ****              data, the CRC should be transmitted.
 797:../stdperiph/source/stm32f37x_spi.c ****          (#) After transmitting the last data, the SPI transmits the CRC. The SPI_CR1_CRCNEXT
 798:../stdperiph/source/stm32f37x_spi.c ****              bit is reset. The CRC is also received and compared against the SPI_RXCRCR 
 799:../stdperiph/source/stm32f37x_spi.c ****              value. 
 800:../stdperiph/source/stm32f37x_spi.c ****              If the value does not match, the SPI_FLAG_CRCERR flag is set and an interrupt
 801:../stdperiph/source/stm32f37x_spi.c ****              can be generated when the SPI_I2S_IT_ERR interrupt is enabled.
 802:../stdperiph/source/stm32f37x_spi.c **** 
 803:../stdperiph/source/stm32f37x_spi.c ****     -@-
 804:../stdperiph/source/stm32f37x_spi.c ****        (+@) It is advised to don't read the calculate CRC values during the communication.
 805:../stdperiph/source/stm32f37x_spi.c ****        (+@) When the SPI is in slave mode, be careful to enable CRC calculation only 
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 29


 806:../stdperiph/source/stm32f37x_spi.c ****        when the clock is stable, that is, when the clock is in the steady state. 
 807:../stdperiph/source/stm32f37x_spi.c ****        If not, a wrong CRC calculation may be done. In fact, the CRC is sensitive 
 808:../stdperiph/source/stm32f37x_spi.c ****        to the SCK slave input clock as soon as CRCEN is set, and this, whatever 
 809:../stdperiph/source/stm32f37x_spi.c ****        the value of the SPE bit.
 810:../stdperiph/source/stm32f37x_spi.c ****        (+@) With high bitrate frequencies, be careful when transmitting the CRC.
 811:../stdperiph/source/stm32f37x_spi.c ****        As the number of used CPU cycles has to be as low as possible in the CRC 
 812:../stdperiph/source/stm32f37x_spi.c ****        transfer phase, it is forbidden to call software functions in the CRC 
 813:../stdperiph/source/stm32f37x_spi.c ****        transmission sequence to avoid errors in the last data and CRC reception. 
 814:../stdperiph/source/stm32f37x_spi.c ****        In fact, CRCNEXT bit has to be written before the end of the transmission/reception 
 815:../stdperiph/source/stm32f37x_spi.c ****        of the last data.
 816:../stdperiph/source/stm32f37x_spi.c ****        (+@) For high bit rate frequencies, it is advised to use the DMA mode to avoid the
 817:../stdperiph/source/stm32f37x_spi.c ****        degradation of the SPI speed performance due to CPU accesses impacting the 
 818:../stdperiph/source/stm32f37x_spi.c ****        SPI bandwidth.
 819:../stdperiph/source/stm32f37x_spi.c ****        (+@) When the STM32F37x are configured as slaves and the NSS hardware mode is 
 820:../stdperiph/source/stm32f37x_spi.c ****        used, the NSS pin needs to be kept low between the data phase and the CRC 
 821:../stdperiph/source/stm32f37x_spi.c ****        phase.
 822:../stdperiph/source/stm32f37x_spi.c ****        (+@) When the SPI is configured in slave mode with the CRC feature enabled, CRC
 823:../stdperiph/source/stm32f37x_spi.c ****        calculation takes place even if a high level is applied on the NSS pin. 
 824:../stdperiph/source/stm32f37x_spi.c ****        This may happen for example in case of a multislave environment where the 
 825:../stdperiph/source/stm32f37x_spi.c ****        communication master addresses slaves alternately.
 826:../stdperiph/source/stm32f37x_spi.c ****        (+@) Between a slave deselection (high level on NSS) and a new slave selection 
 827:../stdperiph/source/stm32f37x_spi.c ****        (low level on NSS), the CRC value should be cleared on both master and slave
 828:../stdperiph/source/stm32f37x_spi.c ****        sides in order to resynchronize the master and slave for their respective 
 829:../stdperiph/source/stm32f37x_spi.c ****        CRC calculation.
 830:../stdperiph/source/stm32f37x_spi.c **** 
 831:../stdperiph/source/stm32f37x_spi.c ****     -@- To clear the CRC, follow the procedure below:
 832:../stdperiph/source/stm32f37x_spi.c ****        (#@) Disable SPI using the SPI_Cmd() function
 833:../stdperiph/source/stm32f37x_spi.c ****        (#@) Disable the CRC calculation using the SPI_CalculateCRC() function.
 834:../stdperiph/source/stm32f37x_spi.c ****        (#@) Enable the CRC calculation using the SPI_CalculateCRC() function.
 835:../stdperiph/source/stm32f37x_spi.c ****        (#@) Enable SPI using the SPI_Cmd() function.
 836:../stdperiph/source/stm32f37x_spi.c **** 
 837:../stdperiph/source/stm32f37x_spi.c **** @endverbatim
 838:../stdperiph/source/stm32f37x_spi.c ****   * @{
 839:../stdperiph/source/stm32f37x_spi.c ****   */
 840:../stdperiph/source/stm32f37x_spi.c **** 
 841:../stdperiph/source/stm32f37x_spi.c **** /**
 842:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Configures the CRC calculation length for the selected SPI.
 843:../stdperiph/source/stm32f37x_spi.c ****   * @note   This function can be called only after the SPI_Init() function has 
 844:../stdperiph/source/stm32f37x_spi.c ****   *         been called.  
 845:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 846:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPI_CRCLength: specifies the SPI CRC calculation length.
 847:../stdperiph/source/stm32f37x_spi.c ****   *          This parameter can be one of the following values:
 848:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_CRCLength_8b: Set CRC Calculation to 8 bits
 849:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_CRCLength_16b: Set CRC Calculation to 16 bits
 850:../stdperiph/source/stm32f37x_spi.c ****   * @retval None
 851:../stdperiph/source/stm32f37x_spi.c ****   */
 852:../stdperiph/source/stm32f37x_spi.c **** void SPI_CRCLengthConfig(SPI_TypeDef* SPIx, uint16_t SPI_CRCLength)
 853:../stdperiph/source/stm32f37x_spi.c **** {
 823              		.loc 1 853 0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 0
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 827              		@ link register save eliminated.
 828              	.LVL77:
 854:../stdperiph/source/stm32f37x_spi.c ****   /* Check the parameters */
 855:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 856:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_CRC_LENGTH(SPI_CRCLength));
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 30


 857:../stdperiph/source/stm32f37x_spi.c **** 
 858:../stdperiph/source/stm32f37x_spi.c ****   /* Clear CRCL bit */
 859:../stdperiph/source/stm32f37x_spi.c ****   SPIx->CR1 &= (uint16_t)~((uint16_t)SPI_CR1_CRCL);
 829              		.loc 1 859 0
 830 0000 0388     		ldrh	r3, [r0]
 831 0002 9BB2     		uxth	r3, r3
 832 0004 23F40063 		bic	r3, r3, #2048
 833 0008 9BB2     		uxth	r3, r3
 834 000a 0380     		strh	r3, [r0]	@ movhi
 860:../stdperiph/source/stm32f37x_spi.c **** 
 861:../stdperiph/source/stm32f37x_spi.c ****   /* Set new CRCL bit value */
 862:../stdperiph/source/stm32f37x_spi.c ****   SPIx->CR1 |= SPI_CRCLength;
 835              		.loc 1 862 0
 836 000c 0388     		ldrh	r3, [r0]
 837 000e 9BB2     		uxth	r3, r3
 838 0010 1943     		orrs	r1, r1, r3
 839              	.LVL78:
 840 0012 0180     		strh	r1, [r0]	@ movhi
 841 0014 7047     		bx	lr
 842              		.cfi_endproc
 843              	.LFE129:
 845 0016 00BF     		.section	.text.SPI_CalculateCRC,"ax",%progbits
 846              		.align	2
 847              		.global	SPI_CalculateCRC
 848              		.thumb
 849              		.thumb_func
 851              	SPI_CalculateCRC:
 852              	.LFB130:
 863:../stdperiph/source/stm32f37x_spi.c **** }
 864:../stdperiph/source/stm32f37x_spi.c **** 
 865:../stdperiph/source/stm32f37x_spi.c **** /**
 866:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Enables or disables the CRC value calculation of the transferred bytes.
 867:../stdperiph/source/stm32f37x_spi.c ****   * @note   This function can be called only after the SPI_Init() function has 
 868:../stdperiph/source/stm32f37x_spi.c ****   *         been called.   
 869:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral..
 870:../stdperiph/source/stm32f37x_spi.c ****   * @param  NewState: new state of the SPIx CRC value calculation.
 871:../stdperiph/source/stm32f37x_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 872:../stdperiph/source/stm32f37x_spi.c ****   * @retval None
 873:../stdperiph/source/stm32f37x_spi.c ****   */
 874:../stdperiph/source/stm32f37x_spi.c **** void SPI_CalculateCRC(SPI_TypeDef* SPIx, FunctionalState NewState)
 875:../stdperiph/source/stm32f37x_spi.c **** {
 853              		.loc 1 875 0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 0
 856              		@ frame_needed = 0, uses_anonymous_args = 0
 857              		@ link register save eliminated.
 858              	.LVL79:
 876:../stdperiph/source/stm32f37x_spi.c ****   /* Check the parameters */
 877:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 878:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 879:../stdperiph/source/stm32f37x_spi.c **** 
 880:../stdperiph/source/stm32f37x_spi.c ****   if (NewState != DISABLE)
 859              		.loc 1 880 0
 860 0000 29B1     		cbz	r1, .L53
 881:../stdperiph/source/stm32f37x_spi.c ****   {
 882:../stdperiph/source/stm32f37x_spi.c ****     /* Enable the selected SPI CRC calculation */
 883:../stdperiph/source/stm32f37x_spi.c ****     SPIx->CR1 |= SPI_CR1_CRCEN;
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 31


 861              		.loc 1 883 0
 862 0002 0388     		ldrh	r3, [r0]
 863 0004 9BB2     		uxth	r3, r3
 864 0006 43F40053 		orr	r3, r3, #8192
 865 000a 0380     		strh	r3, [r0]	@ movhi
 866 000c 7047     		bx	lr
 867              	.L53:
 884:../stdperiph/source/stm32f37x_spi.c ****   }
 885:../stdperiph/source/stm32f37x_spi.c ****   else
 886:../stdperiph/source/stm32f37x_spi.c ****   {
 887:../stdperiph/source/stm32f37x_spi.c ****     /* Disable the selected SPI CRC calculation */
 888:../stdperiph/source/stm32f37x_spi.c ****     SPIx->CR1 &= (uint16_t)~((uint16_t)SPI_CR1_CRCEN);
 868              		.loc 1 888 0
 869 000e 0388     		ldrh	r3, [r0]
 870 0010 9BB2     		uxth	r3, r3
 871 0012 23F40053 		bic	r3, r3, #8192
 872 0016 9BB2     		uxth	r3, r3
 873 0018 0380     		strh	r3, [r0]	@ movhi
 874 001a 7047     		bx	lr
 875              		.cfi_endproc
 876              	.LFE130:
 878              		.section	.text.SPI_TransmitCRC,"ax",%progbits
 879              		.align	2
 880              		.global	SPI_TransmitCRC
 881              		.thumb
 882              		.thumb_func
 884              	SPI_TransmitCRC:
 885              	.LFB131:
 889:../stdperiph/source/stm32f37x_spi.c ****   }
 890:../stdperiph/source/stm32f37x_spi.c **** }
 891:../stdperiph/source/stm32f37x_spi.c **** 
 892:../stdperiph/source/stm32f37x_spi.c **** /**
 893:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Transmit the SPIx CRC value.
 894:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 895:../stdperiph/source/stm32f37x_spi.c ****   * @retval None
 896:../stdperiph/source/stm32f37x_spi.c ****   */
 897:../stdperiph/source/stm32f37x_spi.c **** void SPI_TransmitCRC(SPI_TypeDef* SPIx)
 898:../stdperiph/source/stm32f37x_spi.c **** {
 886              		.loc 1 898 0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 0
 889              		@ frame_needed = 0, uses_anonymous_args = 0
 890              		@ link register save eliminated.
 891              	.LVL80:
 899:../stdperiph/source/stm32f37x_spi.c ****   /* Check the parameters */
 900:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 901:../stdperiph/source/stm32f37x_spi.c **** 
 902:../stdperiph/source/stm32f37x_spi.c ****   /* Enable the selected SPI CRC transmission */
 903:../stdperiph/source/stm32f37x_spi.c ****   SPIx->CR1 |= SPI_CR1_CRCNEXT;
 892              		.loc 1 903 0
 893 0000 0388     		ldrh	r3, [r0]
 894 0002 9BB2     		uxth	r3, r3
 895 0004 43F48053 		orr	r3, r3, #4096
 896 0008 0380     		strh	r3, [r0]	@ movhi
 897 000a 7047     		bx	lr
 898              		.cfi_endproc
 899              	.LFE131:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 32


 901              		.section	.text.SPI_GetCRC,"ax",%progbits
 902              		.align	2
 903              		.global	SPI_GetCRC
 904              		.thumb
 905              		.thumb_func
 907              	SPI_GetCRC:
 908              	.LFB132:
 904:../stdperiph/source/stm32f37x_spi.c **** }
 905:../stdperiph/source/stm32f37x_spi.c **** 
 906:../stdperiph/source/stm32f37x_spi.c **** /**
 907:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Returns the transmit or the receive CRC register value for the specified SPI.
 908:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 909:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPI_CRC: specifies the CRC register to be read.
 910:../stdperiph/source/stm32f37x_spi.c ****   *          This parameter can be one of the following values:
 911:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_CRC_Tx: Selects Tx CRC register
 912:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_CRC_Rx: Selects Rx CRC register
 913:../stdperiph/source/stm32f37x_spi.c ****   * @retval The selected CRC register value..
 914:../stdperiph/source/stm32f37x_spi.c ****   */
 915:../stdperiph/source/stm32f37x_spi.c **** uint16_t SPI_GetCRC(SPI_TypeDef* SPIx, uint8_t SPI_CRC)
 916:../stdperiph/source/stm32f37x_spi.c **** {
 909              		.loc 1 916 0
 910              		.cfi_startproc
 911              		@ args = 0, pretend = 0, frame = 0
 912              		@ frame_needed = 0, uses_anonymous_args = 0
 913              		@ link register save eliminated.
 914              	.LVL81:
 917:../stdperiph/source/stm32f37x_spi.c ****   uint16_t crcreg = 0;
 918:../stdperiph/source/stm32f37x_spi.c ****   /* Check the parameters */
 919:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 920:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_CRC(SPI_CRC));
 921:../stdperiph/source/stm32f37x_spi.c **** 
 922:../stdperiph/source/stm32f37x_spi.c ****   if (SPI_CRC != SPI_CRC_Rx)
 915              		.loc 1 922 0
 916 0000 0129     		cmp	r1, #1
 917 0002 02D0     		beq	.L57
 923:../stdperiph/source/stm32f37x_spi.c ****   {
 924:../stdperiph/source/stm32f37x_spi.c ****     /* Get the Tx CRC register */
 925:../stdperiph/source/stm32f37x_spi.c ****     crcreg = SPIx->TXCRCR;
 918              		.loc 1 925 0
 919 0004 008B     		ldrh	r0, [r0, #24]
 920              	.LVL82:
 921 0006 80B2     		uxth	r0, r0
 922              	.LVL83:
 923 0008 7047     		bx	lr
 924              	.LVL84:
 925              	.L57:
 926:../stdperiph/source/stm32f37x_spi.c ****   }
 927:../stdperiph/source/stm32f37x_spi.c ****   else
 928:../stdperiph/source/stm32f37x_spi.c ****   {
 929:../stdperiph/source/stm32f37x_spi.c ****     /* Get the Rx CRC register */
 930:../stdperiph/source/stm32f37x_spi.c ****     crcreg = SPIx->RXCRCR;
 926              		.loc 1 930 0
 927 000a 808A     		ldrh	r0, [r0, #20]
 928              	.LVL85:
 929 000c 80B2     		uxth	r0, r0
 930              	.LVL86:
 931:../stdperiph/source/stm32f37x_spi.c ****   }
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 33


 932:../stdperiph/source/stm32f37x_spi.c ****   /* Return the selected CRC register */
 933:../stdperiph/source/stm32f37x_spi.c ****   return crcreg;
 934:../stdperiph/source/stm32f37x_spi.c **** }
 931              		.loc 1 934 0
 932 000e 7047     		bx	lr
 933              		.cfi_endproc
 934              	.LFE132:
 936              		.section	.text.SPI_GetCRCPolynomial,"ax",%progbits
 937              		.align	2
 938              		.global	SPI_GetCRCPolynomial
 939              		.thumb
 940              		.thumb_func
 942              	SPI_GetCRCPolynomial:
 943              	.LFB133:
 935:../stdperiph/source/stm32f37x_spi.c **** 
 936:../stdperiph/source/stm32f37x_spi.c **** /**
 937:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Returns the CRC Polynomial register value for the specified SPI.
 938:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 939:../stdperiph/source/stm32f37x_spi.c ****   * @retval The CRC Polynomial register value.
 940:../stdperiph/source/stm32f37x_spi.c ****   */
 941:../stdperiph/source/stm32f37x_spi.c **** uint16_t SPI_GetCRCPolynomial(SPI_TypeDef* SPIx)
 942:../stdperiph/source/stm32f37x_spi.c **** {
 944              		.loc 1 942 0
 945              		.cfi_startproc
 946              		@ args = 0, pretend = 0, frame = 0
 947              		@ frame_needed = 0, uses_anonymous_args = 0
 948              		@ link register save eliminated.
 949              	.LVL87:
 943:../stdperiph/source/stm32f37x_spi.c ****   /* Check the parameters */
 944:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 945:../stdperiph/source/stm32f37x_spi.c **** 
 946:../stdperiph/source/stm32f37x_spi.c ****   /* Return the CRC polynomial register */
 947:../stdperiph/source/stm32f37x_spi.c ****   return SPIx->CRCPR;
 950              		.loc 1 947 0
 951 0000 008A     		ldrh	r0, [r0, #16]
 952              	.LVL88:
 948:../stdperiph/source/stm32f37x_spi.c **** }
 953              		.loc 1 948 0
 954 0002 80B2     		uxth	r0, r0
 955 0004 7047     		bx	lr
 956              		.cfi_endproc
 957              	.LFE133:
 959 0006 00BF     		.section	.text.SPI_I2S_DMACmd,"ax",%progbits
 960              		.align	2
 961              		.global	SPI_I2S_DMACmd
 962              		.thumb
 963              		.thumb_func
 965              	SPI_I2S_DMACmd:
 966              	.LFB134:
 949:../stdperiph/source/stm32f37x_spi.c **** 
 950:../stdperiph/source/stm32f37x_spi.c **** /**
 951:../stdperiph/source/stm32f37x_spi.c ****   * @}
 952:../stdperiph/source/stm32f37x_spi.c ****   */
 953:../stdperiph/source/stm32f37x_spi.c **** 
 954:../stdperiph/source/stm32f37x_spi.c **** /** @defgroup SPI_Group4 DMA transfers management functions
 955:../stdperiph/source/stm32f37x_spi.c ****  *  @brief   DMA transfers management functions
 956:../stdperiph/source/stm32f37x_spi.c ****   *
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 34


 957:../stdperiph/source/stm32f37x_spi.c **** @verbatim   
 958:../stdperiph/source/stm32f37x_spi.c ****  ===============================================================================
 959:../stdperiph/source/stm32f37x_spi.c ****                 ##### DMA transfers management functions #####
 960:../stdperiph/source/stm32f37x_spi.c ****  ===============================================================================
 961:../stdperiph/source/stm32f37x_spi.c ****     [..] This section provides two functions that can be used only in DMA mode.
 962:../stdperiph/source/stm32f37x_spi.c **** 
 963:../stdperiph/source/stm32f37x_spi.c **** @endverbatim
 964:../stdperiph/source/stm32f37x_spi.c ****   * @{
 965:../stdperiph/source/stm32f37x_spi.c ****   */
 966:../stdperiph/source/stm32f37x_spi.c **** 
 967:../stdperiph/source/stm32f37x_spi.c **** /**
 968:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Enables or disables the SPIx/I2Sx DMA interface.
 969:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 970:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPI_I2S_DMAReq: specifies the SPI DMA transfer request to be enabled or disabled. 
 971:../stdperiph/source/stm32f37x_spi.c ****   *          This parameter can be any combination of the following values:
 972:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_I2S_DMAReq_Tx: Tx buffer DMA transfer request
 973:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_I2S_DMAReq_Rx: Rx buffer DMA transfer request
 974:../stdperiph/source/stm32f37x_spi.c ****   * @param  NewState: new state of the selected SPI DMA transfer request.
 975:../stdperiph/source/stm32f37x_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 976:../stdperiph/source/stm32f37x_spi.c ****   * @retval None
 977:../stdperiph/source/stm32f37x_spi.c ****   */
 978:../stdperiph/source/stm32f37x_spi.c **** void SPI_I2S_DMACmd(SPI_TypeDef* SPIx, uint16_t SPI_I2S_DMAReq, FunctionalState NewState)
 979:../stdperiph/source/stm32f37x_spi.c **** {
 967              		.loc 1 979 0
 968              		.cfi_startproc
 969              		@ args = 0, pretend = 0, frame = 0
 970              		@ frame_needed = 0, uses_anonymous_args = 0
 971              		@ link register save eliminated.
 972              	.LVL89:
 980:../stdperiph/source/stm32f37x_spi.c ****   /* Check the parameters */
 981:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 982:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 983:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_I2S_DMA_REQ(SPI_I2S_DMAReq));
 984:../stdperiph/source/stm32f37x_spi.c **** 
 985:../stdperiph/source/stm32f37x_spi.c ****   if (NewState != DISABLE)
 973              		.loc 1 985 0
 974 0000 22B1     		cbz	r2, .L61
 986:../stdperiph/source/stm32f37x_spi.c ****   {
 987:../stdperiph/source/stm32f37x_spi.c ****     /* Enable the selected SPI DMA requests */
 988:../stdperiph/source/stm32f37x_spi.c ****     SPIx->CR2 |= SPI_I2S_DMAReq;
 975              		.loc 1 988 0
 976 0002 8388     		ldrh	r3, [r0, #4]
 977 0004 9BB2     		uxth	r3, r3
 978 0006 1943     		orrs	r1, r1, r3
 979              	.LVL90:
 980 0008 8180     		strh	r1, [r0, #4]	@ movhi
 981 000a 7047     		bx	lr
 982              	.LVL91:
 983              	.L61:
 989:../stdperiph/source/stm32f37x_spi.c ****   }
 990:../stdperiph/source/stm32f37x_spi.c ****   else
 991:../stdperiph/source/stm32f37x_spi.c ****   {
 992:../stdperiph/source/stm32f37x_spi.c ****     /* Disable the selected SPI DMA requests */
 993:../stdperiph/source/stm32f37x_spi.c ****     SPIx->CR2 &= (uint16_t)~SPI_I2S_DMAReq;
 984              		.loc 1 993 0
 985 000c 8388     		ldrh	r3, [r0, #4]
 986 000e C943     		mvns	r1, r1
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 35


 987              	.LVL92:
 988 0010 89B2     		uxth	r1, r1
 989 0012 1940     		ands	r1, r1, r3
 990 0014 8180     		strh	r1, [r0, #4]	@ movhi
 991 0016 7047     		bx	lr
 992              		.cfi_endproc
 993              	.LFE134:
 995              		.section	.text.SPI_LastDMATransferCmd,"ax",%progbits
 996              		.align	2
 997              		.global	SPI_LastDMATransferCmd
 998              		.thumb
 999              		.thumb_func
 1001              	SPI_LastDMATransferCmd:
 1002              	.LFB135:
 994:../stdperiph/source/stm32f37x_spi.c ****   }
 995:../stdperiph/source/stm32f37x_spi.c **** }
 996:../stdperiph/source/stm32f37x_spi.c **** 
 997:../stdperiph/source/stm32f37x_spi.c **** /**
 998:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Configures the number of data to transfer type(Even/Odd) for the DMA
 999:../stdperiph/source/stm32f37x_spi.c ****   *         last transfers and for the selected SPI.
1000:../stdperiph/source/stm32f37x_spi.c ****   * @note   This function have a meaning only if DMA mode is selected and if 
1001:../stdperiph/source/stm32f37x_spi.c ****   *         the packing mode is used (data length <= 8 and DMA transfer size halfword)  
1002:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
1003:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPI_LastDMATransfer: specifies the SPI last DMA transfers state.
1004:../stdperiph/source/stm32f37x_spi.c ****   *          This parameter can be one of the following values:
1005:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_LastDMATransfer_TxEvenRxEven: Number of data for transmission Even
1006:../stdperiph/source/stm32f37x_spi.c ****   *                                                   and number of data for reception Even.
1007:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_LastDMATransfer_TxOddRxEven: Number of data for transmission Odd
1008:../stdperiph/source/stm32f37x_spi.c ****   *                                                  and number of data for reception Even.
1009:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_LastDMATransfer_TxEvenRxOdd: Number of data for transmission Even
1010:../stdperiph/source/stm32f37x_spi.c ****   *                                                  and number of data for reception Odd.
1011:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_LastDMATransfer_TxOddRxOdd: Number of data for transmission Odd
1012:../stdperiph/source/stm32f37x_spi.c ****   *                                                 and number of data for reception Odd.
1013:../stdperiph/source/stm32f37x_spi.c ****   * @retval None
1014:../stdperiph/source/stm32f37x_spi.c ****   */
1015:../stdperiph/source/stm32f37x_spi.c **** void SPI_LastDMATransferCmd(SPI_TypeDef* SPIx, uint16_t SPI_LastDMATransfer)
1016:../stdperiph/source/stm32f37x_spi.c **** {
 1003              		.loc 1 1016 0
 1004              		.cfi_startproc
 1005              		@ args = 0, pretend = 0, frame = 0
 1006              		@ frame_needed = 0, uses_anonymous_args = 0
 1007              		@ link register save eliminated.
 1008              	.LVL93:
1017:../stdperiph/source/stm32f37x_spi.c ****   /* Check the parameters */
1018:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
1019:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_LAST_DMA_TRANSFER(SPI_LastDMATransfer));
1020:../stdperiph/source/stm32f37x_spi.c **** 
1021:../stdperiph/source/stm32f37x_spi.c ****   /* Clear LDMA_TX and LDMA_RX bits */
1022:../stdperiph/source/stm32f37x_spi.c ****   SPIx->CR2 &= CR2_LDMA_MASK;
 1009              		.loc 1 1022 0
 1010 0000 8388     		ldrh	r3, [r0, #4]
 1011 0002 9BB2     		uxth	r3, r3
 1012 0004 23F4C043 		bic	r3, r3, #24576
 1013 0008 9BB2     		uxth	r3, r3
 1014 000a 8380     		strh	r3, [r0, #4]	@ movhi
1023:../stdperiph/source/stm32f37x_spi.c **** 
1024:../stdperiph/source/stm32f37x_spi.c ****   /* Set new LDMA_TX and LDMA_RX bits value */
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 36


1025:../stdperiph/source/stm32f37x_spi.c ****   SPIx->CR2 |= SPI_LastDMATransfer; 
 1015              		.loc 1 1025 0
 1016 000c 8388     		ldrh	r3, [r0, #4]
 1017 000e 9BB2     		uxth	r3, r3
 1018 0010 1943     		orrs	r1, r1, r3
 1019              	.LVL94:
 1020 0012 8180     		strh	r1, [r0, #4]	@ movhi
 1021 0014 7047     		bx	lr
 1022              		.cfi_endproc
 1023              	.LFE135:
 1025 0016 00BF     		.section	.text.SPI_I2S_ITConfig,"ax",%progbits
 1026              		.align	2
 1027              		.global	SPI_I2S_ITConfig
 1028              		.thumb
 1029              		.thumb_func
 1031              	SPI_I2S_ITConfig:
 1032              	.LFB136:
1026:../stdperiph/source/stm32f37x_spi.c **** }
1027:../stdperiph/source/stm32f37x_spi.c **** 
1028:../stdperiph/source/stm32f37x_spi.c **** /**
1029:../stdperiph/source/stm32f37x_spi.c ****   * @}
1030:../stdperiph/source/stm32f37x_spi.c ****   */
1031:../stdperiph/source/stm32f37x_spi.c **** 
1032:../stdperiph/source/stm32f37x_spi.c **** /** @defgroup SPI_Group5 Interrupts and flags management functions
1033:../stdperiph/source/stm32f37x_spi.c ****  *  @brief   Interrupts and flags management functions
1034:../stdperiph/source/stm32f37x_spi.c ****   *
1035:../stdperiph/source/stm32f37x_spi.c **** @verbatim   
1036:../stdperiph/source/stm32f37x_spi.c ****  ===============================================================================
1037:../stdperiph/source/stm32f37x_spi.c ****              ##### Interrupts and flags management functions #####
1038:../stdperiph/source/stm32f37x_spi.c ****  ===============================================================================
1039:../stdperiph/source/stm32f37x_spi.c ****     [..] This section provides a set of functions allowing to configure the SPI/I2S Interrupts 
1040:../stdperiph/source/stm32f37x_spi.c ****          sources and check or clear the flags or pending bits status.
1041:../stdperiph/source/stm32f37x_spi.c ****          The user should identify which mode will be used in his application to manage 
1042:../stdperiph/source/stm32f37x_spi.c ****          the communication: Polling mode, Interrupt mode or DMA mode. 
1043:../stdperiph/source/stm32f37x_spi.c **** 
1044:../stdperiph/source/stm32f37x_spi.c ****   *** Polling Mode ***
1045:../stdperiph/source/stm32f37x_spi.c ****   ====================
1046:../stdperiph/source/stm32f37x_spi.c ****     [..] In Polling Mode, the SPI/I2S communication can be managed by 9 flags:
1047:../stdperiph/source/stm32f37x_spi.c ****         (#) SPI_I2S_FLAG_TXE : to indicate the status of the transmit buffer register
1048:../stdperiph/source/stm32f37x_spi.c ****         (#) SPI_I2S_FLAG_RXNE : to indicate the status of the receive buffer register
1049:../stdperiph/source/stm32f37x_spi.c ****         (#) SPI_I2S_FLAG_BSY : to indicate the state of the communication layer of the SPI.
1050:../stdperiph/source/stm32f37x_spi.c ****         (#) SPI_FLAG_CRCERR : to indicate if a CRC Calculation error occur              
1051:../stdperiph/source/stm32f37x_spi.c ****         (#) SPI_FLAG_MODF : to indicate if a Mode Fault error occur
1052:../stdperiph/source/stm32f37x_spi.c ****         (#) SPI_I2S_FLAG_OVR : to indicate if an Overrun error occur
1053:../stdperiph/source/stm32f37x_spi.c ****         (#) SPI_I2S_FLAG_FRE: to indicate a Frame Format error occurs.
1054:../stdperiph/source/stm32f37x_spi.c ****         (#) I2S_FLAG_UDR: to indicate an Underrun error occurs.
1055:../stdperiph/source/stm32f37x_spi.c ****         (#) I2S_FLAG_CHSIDE: to indicate Channel Side.
1056:../stdperiph/source/stm32f37x_spi.c **** 
1057:../stdperiph/source/stm32f37x_spi.c ****     [..]
1058:../stdperiph/source/stm32f37x_spi.c ****         (@)Do not use the BSY flag to handle each data transmission or reception. It is better 
1059:../stdperiph/source/stm32f37x_spi.c ****            to use the TXE and RXNE flags instead.
1060:../stdperiph/source/stm32f37x_spi.c **** 
1061:../stdperiph/source/stm32f37x_spi.c ****     [..] In this Mode it is advised to use the following functions:
1062:../stdperiph/source/stm32f37x_spi.c ****         (+) FlagStatus SPI_I2S_GetFlagStatus(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG);
1063:../stdperiph/source/stm32f37x_spi.c ****         (+) void SPI_I2S_ClearFlag(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG);
1064:../stdperiph/source/stm32f37x_spi.c **** 
1065:../stdperiph/source/stm32f37x_spi.c ****   *** Interrupt Mode ***
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 37


1066:../stdperiph/source/stm32f37x_spi.c ****   ======================
1067:../stdperiph/source/stm32f37x_spi.c ****     [..] In Interrupt Mode, the SPI/I2S communication can be managed by 3 interrupt sources
1068:../stdperiph/source/stm32f37x_spi.c ****          and 5 pending bits: 
1069:../stdperiph/source/stm32f37x_spi.c ****     [..] Pending Bits:
1070:../stdperiph/source/stm32f37x_spi.c ****         (#) SPI_I2S_IT_TXE : to indicate the status of the transmit buffer register
1071:../stdperiph/source/stm32f37x_spi.c ****         (#) SPI_I2S_IT_RXNE : to indicate the status of the receive buffer register
1072:../stdperiph/source/stm32f37x_spi.c ****         (#) SPI_I2S_IT_OVR : to indicate if an Overrun error occur
1073:../stdperiph/source/stm32f37x_spi.c ****         (#) I2S_IT_UDR : to indicate an Underrun Error occurs.
1074:../stdperiph/source/stm32f37x_spi.c ****         (#) SPI_I2S_FLAG_FRE : to indicate a Frame Format error occurs.
1075:../stdperiph/source/stm32f37x_spi.c **** 
1076:../stdperiph/source/stm32f37x_spi.c ****     [..] Interrupt Source:
1077:../stdperiph/source/stm32f37x_spi.c ****         (#) SPI_I2S_IT_TXE: specifies the interrupt source for the Tx buffer empty 
1078:../stdperiph/source/stm32f37x_spi.c ****             interrupt.  
1079:../stdperiph/source/stm32f37x_spi.c ****         (#) SPI_I2S_IT_RXNE : specifies the interrupt source for the Rx buffer not 
1080:../stdperiph/source/stm32f37x_spi.c ****             empty interrupt.
1081:../stdperiph/source/stm32f37x_spi.c ****         (#) SPI_I2S_IT_ERR : specifies the interrupt source for the errors interrupt.
1082:../stdperiph/source/stm32f37x_spi.c **** 
1083:../stdperiph/source/stm32f37x_spi.c ****     [..] In this Mode it is advised to use the following functions:
1084:../stdperiph/source/stm32f37x_spi.c ****          (+) void SPI_I2S_ITConfig(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT, FunctionalState NewState)
1085:../stdperiph/source/stm32f37x_spi.c ****          (+) ITStatus SPI_I2S_GetITStatus(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT);
1086:../stdperiph/source/stm32f37x_spi.c **** 
1087:../stdperiph/source/stm32f37x_spi.c ****   *** FIFO Status ***
1088:../stdperiph/source/stm32f37x_spi.c ****   ===================
1089:../stdperiph/source/stm32f37x_spi.c ****     [..] It is possible to monitor the FIFO status when a transfer is ongoing using the
1090:../stdperiph/source/stm32f37x_spi.c ****          following function:
1091:../stdperiph/source/stm32f37x_spi.c ****          (+) uint32_t SPI_GetFIFOStatus(uint8_t SPI_FIFO_Direction); 
1092:../stdperiph/source/stm32f37x_spi.c **** 
1093:../stdperiph/source/stm32f37x_spi.c ****   *** DMA Mode ***
1094:../stdperiph/source/stm32f37x_spi.c ****   ================
1095:../stdperiph/source/stm32f37x_spi.c ****     [..] In DMA Mode, the SPI communication can be managed by 2 DMA Channel 
1096:../stdperiph/source/stm32f37x_spi.c ****          requests:
1097:../stdperiph/source/stm32f37x_spi.c ****         (#) SPI_I2S_DMAReq_Tx: specifies the Tx buffer DMA transfer request.
1098:../stdperiph/source/stm32f37x_spi.c ****         (#) SPI_I2S_DMAReq_Rx: specifies the Rx buffer DMA transfer request.
1099:../stdperiph/source/stm32f37x_spi.c **** 
1100:../stdperiph/source/stm32f37x_spi.c ****     [..] In this Mode it is advised to use the following function:
1101:../stdperiph/source/stm32f37x_spi.c ****         (+) void SPI_I2S_DMACmd(SPI_TypeDef* SPIx, uint16_t SPI_I2S_DMAReq, FunctionalState NewStat
1102:../stdperiph/source/stm32f37x_spi.c **** 
1103:../stdperiph/source/stm32f37x_spi.c **** @endverbatim
1104:../stdperiph/source/stm32f37x_spi.c ****   * @{
1105:../stdperiph/source/stm32f37x_spi.c ****   */
1106:../stdperiph/source/stm32f37x_spi.c **** 
1107:../stdperiph/source/stm32f37x_spi.c **** /**
1108:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Enables or disables the specified SPI/I2S interrupts.
1109:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
1110:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI interrupt source to be enabled or disabled. 
1111:../stdperiph/source/stm32f37x_spi.c ****   *          This parameter can be one of the following values:
1112:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_I2S_IT_TXE: Tx buffer empty interrupt mask
1113:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_I2S_IT_RXNE: Rx buffer not empty interrupt mask
1114:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_I2S_IT_ERR: Error interrupt mask
1115:../stdperiph/source/stm32f37x_spi.c ****   * @param  NewState: new state of the specified SPI interrupt.
1116:../stdperiph/source/stm32f37x_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
1117:../stdperiph/source/stm32f37x_spi.c ****   * @retval None
1118:../stdperiph/source/stm32f37x_spi.c ****   */
1119:../stdperiph/source/stm32f37x_spi.c **** void SPI_I2S_ITConfig(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT, FunctionalState NewState)
1120:../stdperiph/source/stm32f37x_spi.c **** {
 1033              		.loc 1 1120 0
 1034              		.cfi_startproc
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 38


 1035              		@ args = 0, pretend = 0, frame = 0
 1036              		@ frame_needed = 0, uses_anonymous_args = 0
 1037              		@ link register save eliminated.
 1038              	.LVL95:
1121:../stdperiph/source/stm32f37x_spi.c ****   uint16_t itpos = 0, itmask = 0 ;
1122:../stdperiph/source/stm32f37x_spi.c **** 
1123:../stdperiph/source/stm32f37x_spi.c ****   /* Check the parameters */
1124:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
1125:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1126:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_I2S_CONFIG_IT(SPI_I2S_IT));
1127:../stdperiph/source/stm32f37x_spi.c **** 
1128:../stdperiph/source/stm32f37x_spi.c ****   /* Get the SPI IT index */
1129:../stdperiph/source/stm32f37x_spi.c ****   itpos = SPI_I2S_IT >> 4;
 1039              		.loc 1 1129 0
 1040 0000 0909     		lsrs	r1, r1, #4
 1041              	.LVL96:
1130:../stdperiph/source/stm32f37x_spi.c **** 
1131:../stdperiph/source/stm32f37x_spi.c ****   /* Set the IT mask */
1132:../stdperiph/source/stm32f37x_spi.c ****   itmask = (uint16_t)1 << (uint16_t)itpos;
 1042              		.loc 1 1132 0
 1043 0002 0123     		movs	r3, #1
 1044 0004 03FA01F1 		lsl	r1, r3, r1
 1045              	.LVL97:
 1046 0008 89B2     		uxth	r1, r1
 1047              	.LVL98:
1133:../stdperiph/source/stm32f37x_spi.c **** 
1134:../stdperiph/source/stm32f37x_spi.c ****   if (NewState != DISABLE)
 1048              		.loc 1 1134 0
 1049 000a 22B1     		cbz	r2, .L65
1135:../stdperiph/source/stm32f37x_spi.c ****   {
1136:../stdperiph/source/stm32f37x_spi.c ****     /* Enable the selected SPI interrupt */
1137:../stdperiph/source/stm32f37x_spi.c ****     SPIx->CR2 |= itmask;
 1050              		.loc 1 1137 0
 1051 000c 8388     		ldrh	r3, [r0, #4]
 1052 000e 9BB2     		uxth	r3, r3
 1053 0010 1943     		orrs	r1, r1, r3
 1054              	.LVL99:
 1055 0012 8180     		strh	r1, [r0, #4]	@ movhi
 1056 0014 7047     		bx	lr
 1057              	.LVL100:
 1058              	.L65:
1138:../stdperiph/source/stm32f37x_spi.c ****   }
1139:../stdperiph/source/stm32f37x_spi.c ****   else
1140:../stdperiph/source/stm32f37x_spi.c ****   {
1141:../stdperiph/source/stm32f37x_spi.c ****     /* Disable the selected SPI interrupt */
1142:../stdperiph/source/stm32f37x_spi.c ****     SPIx->CR2 &= (uint16_t)~itmask;
 1059              		.loc 1 1142 0
 1060 0016 8388     		ldrh	r3, [r0, #4]
 1061 0018 C943     		mvns	r1, r1
 1062              	.LVL101:
 1063 001a 89B2     		uxth	r1, r1
 1064              	.LVL102:
 1065 001c 1940     		ands	r1, r1, r3
 1066 001e 8180     		strh	r1, [r0, #4]	@ movhi
 1067 0020 7047     		bx	lr
 1068              		.cfi_endproc
 1069              	.LFE136:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 39


 1071 0022 00BF     		.section	.text.SPI_GetTransmissionFIFOStatus,"ax",%progbits
 1072              		.align	2
 1073              		.global	SPI_GetTransmissionFIFOStatus
 1074              		.thumb
 1075              		.thumb_func
 1077              	SPI_GetTransmissionFIFOStatus:
 1078              	.LFB137:
1143:../stdperiph/source/stm32f37x_spi.c ****   }
1144:../stdperiph/source/stm32f37x_spi.c **** }
1145:../stdperiph/source/stm32f37x_spi.c **** 
1146:../stdperiph/source/stm32f37x_spi.c **** /**
1147:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Returns the current SPIx Transmission FIFO filled level.
1148:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
1149:../stdperiph/source/stm32f37x_spi.c ****   * @retval The Transmission FIFO filling state.
1150:../stdperiph/source/stm32f37x_spi.c ****   *          - SPI_TransmissionFIFOStatus_Empty: when FIFO is empty
1151:../stdperiph/source/stm32f37x_spi.c ****   *          - SPI_TransmissionFIFOStatus_1QuarterFull: if more than 1 quarter-full.
1152:../stdperiph/source/stm32f37x_spi.c ****   *          - SPI_TransmissionFIFOStatus_HalfFull: if more than 1 half-full.
1153:../stdperiph/source/stm32f37x_spi.c ****   *          - SPI_TransmissionFIFOStatus_Full: when FIFO is full.
1154:../stdperiph/source/stm32f37x_spi.c ****   */
1155:../stdperiph/source/stm32f37x_spi.c **** uint16_t SPI_GetTransmissionFIFOStatus(SPI_TypeDef* SPIx)
1156:../stdperiph/source/stm32f37x_spi.c **** {
 1079              		.loc 1 1156 0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 0
 1082              		@ frame_needed = 0, uses_anonymous_args = 0
 1083              		@ link register save eliminated.
 1084              	.LVL103:
1157:../stdperiph/source/stm32f37x_spi.c ****   /* Get the SPIx Transmission FIFO level bits */
1158:../stdperiph/source/stm32f37x_spi.c ****   return (uint16_t)((SPIx->SR & SPI_SR_FTLVL));
 1085              		.loc 1 1158 0
 1086 0000 0089     		ldrh	r0, [r0, #8]
 1087              	.LVL104:
1159:../stdperiph/source/stm32f37x_spi.c **** }
 1088              		.loc 1 1159 0
 1089 0002 00F4C050 		and	r0, r0, #6144
 1090 0006 7047     		bx	lr
 1091              		.cfi_endproc
 1092              	.LFE137:
 1094              		.section	.text.SPI_GetReceptionFIFOStatus,"ax",%progbits
 1095              		.align	2
 1096              		.global	SPI_GetReceptionFIFOStatus
 1097              		.thumb
 1098              		.thumb_func
 1100              	SPI_GetReceptionFIFOStatus:
 1101              	.LFB138:
1160:../stdperiph/source/stm32f37x_spi.c **** 
1161:../stdperiph/source/stm32f37x_spi.c **** /**
1162:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Returns the current SPIx Reception FIFO filled level.
1163:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
1164:../stdperiph/source/stm32f37x_spi.c ****   * @retval The Reception FIFO filling state.
1165:../stdperiph/source/stm32f37x_spi.c ****   *          - SPI_ReceptionFIFOStatus_Empty: when FIFO is empty
1166:../stdperiph/source/stm32f37x_spi.c ****   *          - SPI_ReceptionFIFOStatus_1QuarterFull: if more than 1 quarter-full.
1167:../stdperiph/source/stm32f37x_spi.c ****   *          - SPI_ReceptionFIFOStatus_HalfFull: if more than 1 half-full.
1168:../stdperiph/source/stm32f37x_spi.c ****   *          - SPI_ReceptionFIFOStatus_Full: when FIFO is full.
1169:../stdperiph/source/stm32f37x_spi.c ****   */
1170:../stdperiph/source/stm32f37x_spi.c **** uint16_t SPI_GetReceptionFIFOStatus(SPI_TypeDef* SPIx)
1171:../stdperiph/source/stm32f37x_spi.c **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 40


 1102              		.loc 1 1171 0
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 0
 1105              		@ frame_needed = 0, uses_anonymous_args = 0
 1106              		@ link register save eliminated.
 1107              	.LVL105:
1172:../stdperiph/source/stm32f37x_spi.c ****   /* Get the SPIx Reception FIFO level bits */
1173:../stdperiph/source/stm32f37x_spi.c ****   return (uint16_t)((SPIx->SR & SPI_SR_FRLVL));
 1108              		.loc 1 1173 0
 1109 0000 0089     		ldrh	r0, [r0, #8]
 1110              	.LVL106:
1174:../stdperiph/source/stm32f37x_spi.c **** }
 1111              		.loc 1 1174 0
 1112 0002 00F4C060 		and	r0, r0, #1536
 1113 0006 7047     		bx	lr
 1114              		.cfi_endproc
 1115              	.LFE138:
 1117              		.section	.text.SPI_I2S_GetFlagStatus,"ax",%progbits
 1118              		.align	2
 1119              		.global	SPI_I2S_GetFlagStatus
 1120              		.thumb
 1121              		.thumb_func
 1123              	SPI_I2S_GetFlagStatus:
 1124              	.LFB139:
1175:../stdperiph/source/stm32f37x_spi.c **** 
1176:../stdperiph/source/stm32f37x_spi.c **** /**
1177:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Checks whether the specified SPI flag is set or not.
1178:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.  
1179:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPI_I2S_FLAG: specifies the SPI flag to check. 
1180:../stdperiph/source/stm32f37x_spi.c ****   *          This parameter can be one of the following values:
1181:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_I2S_FLAG_TXE: Transmit buffer empty flag.
1182:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_I2S_FLAG_RXNE: Receive buffer not empty flag.
1183:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_I2S_FLAG_BSY: Busy flag.
1184:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_I2S_FLAG_OVR: Overrun flag.
1185:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_FLAG_MODF: Mode Fault flag.
1186:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_FLAG_CRCERR: CRC Error flag.
1187:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_I2S_FLAG_FRE: TI frame format error flag.
1188:../stdperiph/source/stm32f37x_spi.c ****   *            @arg I2S_FLAG_UDR: Underrun Error flag.
1189:../stdperiph/source/stm32f37x_spi.c ****   *            @arg I2S_FLAG_CHSIDE: Channel Side flag.   
1190:../stdperiph/source/stm32f37x_spi.c ****   * @retval The new state of SPI_I2S_FLAG (SET or RESET).
1191:../stdperiph/source/stm32f37x_spi.c ****   */
1192:../stdperiph/source/stm32f37x_spi.c **** FlagStatus SPI_I2S_GetFlagStatus(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
1193:../stdperiph/source/stm32f37x_spi.c **** {
 1125              		.loc 1 1193 0
 1126              		.cfi_startproc
 1127              		@ args = 0, pretend = 0, frame = 0
 1128              		@ frame_needed = 0, uses_anonymous_args = 0
 1129              		@ link register save eliminated.
 1130              	.LVL107:
1194:../stdperiph/source/stm32f37x_spi.c ****   FlagStatus bitstatus = RESET;
1195:../stdperiph/source/stm32f37x_spi.c ****   /* Check the parameters */
1196:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
1197:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_I2S_GET_FLAG(SPI_I2S_FLAG));
1198:../stdperiph/source/stm32f37x_spi.c **** 
1199:../stdperiph/source/stm32f37x_spi.c ****   /* Check the status of the specified SPI flag */
1200:../stdperiph/source/stm32f37x_spi.c ****   if ((SPIx->SR & SPI_I2S_FLAG) != (uint16_t)RESET)
 1131              		.loc 1 1200 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 41


 1132 0000 0389     		ldrh	r3, [r0, #8]
 1133 0002 1942     		tst	r1, r3
 1134 0004 01D0     		beq	.L71
1201:../stdperiph/source/stm32f37x_spi.c ****   {
1202:../stdperiph/source/stm32f37x_spi.c ****     /* SPI_I2S_FLAG is set */
1203:../stdperiph/source/stm32f37x_spi.c ****     bitstatus = SET;
 1135              		.loc 1 1203 0
 1136 0006 0120     		movs	r0, #1
 1137              	.LVL108:
 1138 0008 7047     		bx	lr
 1139              	.LVL109:
 1140              	.L71:
1204:../stdperiph/source/stm32f37x_spi.c ****   }
1205:../stdperiph/source/stm32f37x_spi.c ****   else
1206:../stdperiph/source/stm32f37x_spi.c ****   {
1207:../stdperiph/source/stm32f37x_spi.c ****     /* SPI_I2S_FLAG is reset */
1208:../stdperiph/source/stm32f37x_spi.c ****     bitstatus = RESET;
 1141              		.loc 1 1208 0
 1142 000a 0020     		movs	r0, #0
 1143              	.LVL110:
1209:../stdperiph/source/stm32f37x_spi.c ****   }
1210:../stdperiph/source/stm32f37x_spi.c ****   /* Return the SPI_I2S_FLAG status */
1211:../stdperiph/source/stm32f37x_spi.c ****   return  bitstatus;
1212:../stdperiph/source/stm32f37x_spi.c **** }
 1144              		.loc 1 1212 0
 1145 000c 7047     		bx	lr
 1146              		.cfi_endproc
 1147              	.LFE139:
 1149 000e 00BF     		.section	.text.SPI_I2S_ClearFlag,"ax",%progbits
 1150              		.align	2
 1151              		.global	SPI_I2S_ClearFlag
 1152              		.thumb
 1153              		.thumb_func
 1155              	SPI_I2S_ClearFlag:
 1156              	.LFB140:
1213:../stdperiph/source/stm32f37x_spi.c **** 
1214:../stdperiph/source/stm32f37x_spi.c **** /**
1215:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Clears the SPIx CRC Error (CRCERR) flag.
1216:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
1217:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPI_I2S_FLAG: specifies the SPI flag to clear. 
1218:../stdperiph/source/stm32f37x_spi.c ****   *         This function clears only CRCERR flag.
1219:../stdperiph/source/stm32f37x_spi.c ****   * @note   OVR (OverRun error) flag is cleared by software sequence: a read 
1220:../stdperiph/source/stm32f37x_spi.c ****   *         operation to SPI_DR register (SPI_I2S_ReceiveData()) followed by  
1221:../stdperiph/source/stm32f37x_spi.c ****   *         a read operation to SPI_SR register (SPI_I2S_GetFlagStatus()).
1222:../stdperiph/source/stm32f37x_spi.c ****   * @note   MODF (Mode Fault) flag is cleared by software sequence: a read/write 
1223:../stdperiph/source/stm32f37x_spi.c ****   *         operation to SPI_SR register (SPI_I2S_GetFlagStatus()) followed by
1224:../stdperiph/source/stm32f37x_spi.c ****   *         a write operation to SPI_CR1 register (SPI_Cmd() to enable the SPI).
1225:../stdperiph/source/stm32f37x_spi.c ****   * @retval None
1226:../stdperiph/source/stm32f37x_spi.c ****   */
1227:../stdperiph/source/stm32f37x_spi.c **** void SPI_I2S_ClearFlag(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
1228:../stdperiph/source/stm32f37x_spi.c **** {
 1157              		.loc 1 1228 0
 1158              		.cfi_startproc
 1159              		@ args = 0, pretend = 0, frame = 0
 1160              		@ frame_needed = 0, uses_anonymous_args = 0
 1161              		@ link register save eliminated.
 1162              	.LVL111:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 42


1229:../stdperiph/source/stm32f37x_spi.c ****   /* Check the parameters */
1230:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
1231:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_CLEAR_FLAG(SPI_I2S_FLAG));
1232:../stdperiph/source/stm32f37x_spi.c **** 
1233:../stdperiph/source/stm32f37x_spi.c ****   /* Clear the selected SPI CRC Error (CRCERR) flag */
1234:../stdperiph/source/stm32f37x_spi.c ****   SPIx->SR = (uint16_t)~SPI_I2S_FLAG;
 1163              		.loc 1 1234 0
 1164 0000 C943     		mvns	r1, r1
 1165              	.LVL112:
 1166 0002 89B2     		uxth	r1, r1
 1167 0004 0181     		strh	r1, [r0, #8]	@ movhi
 1168 0006 7047     		bx	lr
 1169              		.cfi_endproc
 1170              	.LFE140:
 1172              		.section	.text.SPI_I2S_GetITStatus,"ax",%progbits
 1173              		.align	2
 1174              		.global	SPI_I2S_GetITStatus
 1175              		.thumb
 1176              		.thumb_func
 1178              	SPI_I2S_GetITStatus:
 1179              	.LFB141:
1235:../stdperiph/source/stm32f37x_spi.c **** }
1236:../stdperiph/source/stm32f37x_spi.c **** 
1237:../stdperiph/source/stm32f37x_spi.c **** /**
1238:../stdperiph/source/stm32f37x_spi.c ****   * @brief  Checks whether the specified SPI/I2S interrupt has occurred or not.
1239:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
1240:../stdperiph/source/stm32f37x_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI interrupt source to check. 
1241:../stdperiph/source/stm32f37x_spi.c ****   *          This parameter can be one of the following values:
1242:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_I2S_IT_TXE: Transmit buffer empty interrupt.
1243:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_I2S_IT_RXNE: Receive buffer not empty interrupt.
1244:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_IT_MODF: Mode Fault interrupt.
1245:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_I2S_IT_OVR: Overrun interrupt.
1246:../stdperiph/source/stm32f37x_spi.c ****   *            @arg I2S_IT_UDR: Underrun interrupt.  
1247:../stdperiph/source/stm32f37x_spi.c ****   *            @arg SPI_I2S_IT_FRE: Format Error interrupt.  
1248:../stdperiph/source/stm32f37x_spi.c ****   * @retval The new state of SPI_I2S_IT (SET or RESET).
1249:../stdperiph/source/stm32f37x_spi.c ****   */
1250:../stdperiph/source/stm32f37x_spi.c **** ITStatus SPI_I2S_GetITStatus(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
1251:../stdperiph/source/stm32f37x_spi.c **** {
 1180              		.loc 1 1251 0
 1181              		.cfi_startproc
 1182              		@ args = 0, pretend = 0, frame = 0
 1183              		@ frame_needed = 0, uses_anonymous_args = 0
 1184              		@ link register save eliminated.
 1185              	.LVL113:
 1186 0000 10B4     		push	{r4}
 1187              	.LCFI5:
 1188              		.cfi_def_cfa_offset 4
 1189              		.cfi_offset 4, -4
 1190              	.LVL114:
1252:../stdperiph/source/stm32f37x_spi.c ****   ITStatus bitstatus = RESET;
1253:../stdperiph/source/stm32f37x_spi.c ****   uint16_t itpos = 0, itmask = 0, enablestatus = 0;
1254:../stdperiph/source/stm32f37x_spi.c **** 
1255:../stdperiph/source/stm32f37x_spi.c ****   /* Check the parameters */
1256:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
1257:../stdperiph/source/stm32f37x_spi.c ****   assert_param(IS_SPI_I2S_GET_IT(SPI_I2S_IT));
1258:../stdperiph/source/stm32f37x_spi.c **** 
1259:../stdperiph/source/stm32f37x_spi.c ****   /* Get the SPI_I2S_IT index */
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 43


1260:../stdperiph/source/stm32f37x_spi.c ****   itpos = 0x01 << (SPI_I2S_IT & 0x0F);
 1191              		.loc 1 1260 0
 1192 0002 01F00F04 		and	r4, r1, #15
 1193 0006 0122     		movs	r2, #1
 1194 0008 02FA04F4 		lsl	r4, r2, r4
 1195              	.LVL115:
1261:../stdperiph/source/stm32f37x_spi.c **** 
1262:../stdperiph/source/stm32f37x_spi.c ****   /* Get the SPI_I2S_IT IT mask */
1263:../stdperiph/source/stm32f37x_spi.c ****   itmask = SPI_I2S_IT >> 4;
 1196              		.loc 1 1263 0
 1197 000c 0B09     		lsrs	r3, r1, #4
 1198              	.LVL116:
1264:../stdperiph/source/stm32f37x_spi.c **** 
1265:../stdperiph/source/stm32f37x_spi.c ****   /* Set the IT mask */
1266:../stdperiph/source/stm32f37x_spi.c ****   itmask = 0x01 << itmask;
 1199              		.loc 1 1266 0
 1200 000e 9A40     		lsls	r2, r2, r3
 1201              	.LVL117:
1267:../stdperiph/source/stm32f37x_spi.c **** 
1268:../stdperiph/source/stm32f37x_spi.c ****   /* Get the SPI_I2S_IT enable bit status */
1269:../stdperiph/source/stm32f37x_spi.c ****   enablestatus = (SPIx->CR2 & itmask) ;
 1202              		.loc 1 1269 0
 1203 0010 8388     		ldrh	r3, [r0, #4]
 1204 0012 9BB2     		uxth	r3, r3
 1205 0014 1340     		ands	r3, r3, r2
 1206              	.LVL118:
1270:../stdperiph/source/stm32f37x_spi.c **** 
1271:../stdperiph/source/stm32f37x_spi.c ****   /* Check the status of the specified SPI interrupt */
1272:../stdperiph/source/stm32f37x_spi.c ****   if (((SPIx->SR & itpos) != (uint16_t)RESET) && enablestatus)
 1207              		.loc 1 1272 0
 1208 0016 0289     		ldrh	r2, [r0, #8]
 1209              	.LVL119:
 1210 0018 92B2     		uxth	r2, r2
 1211 001a 1442     		tst	r4, r2
 1212 001c 02D0     		beq	.L75
 1213              		.loc 1 1272 0 is_stmt 0 discriminator 1
 1214 001e 1BB9     		cbnz	r3, .L76
1273:../stdperiph/source/stm32f37x_spi.c ****   {
1274:../stdperiph/source/stm32f37x_spi.c ****     /* SPI_I2S_IT is set */
1275:../stdperiph/source/stm32f37x_spi.c ****     bitstatus = SET;
1276:../stdperiph/source/stm32f37x_spi.c ****   }
1277:../stdperiph/source/stm32f37x_spi.c ****   else
1278:../stdperiph/source/stm32f37x_spi.c ****   {
1279:../stdperiph/source/stm32f37x_spi.c ****     /* SPI_I2S_IT is reset */
1280:../stdperiph/source/stm32f37x_spi.c ****     bitstatus = RESET;
 1215              		.loc 1 1280 0 is_stmt 1
 1216 0020 0020     		movs	r0, #0
 1217              	.LVL120:
 1218 0022 02E0     		b	.L74
 1219              	.LVL121:
 1220              	.L75:
 1221 0024 0020     		movs	r0, #0
 1222              	.LVL122:
 1223 0026 00E0     		b	.L74
 1224              	.LVL123:
 1225              	.L76:
1275:../stdperiph/source/stm32f37x_spi.c ****   }
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 44


 1226              		.loc 1 1275 0
 1227 0028 0120     		movs	r0, #1
 1228              	.LVL124:
 1229              	.L74:
1281:../stdperiph/source/stm32f37x_spi.c ****   }
1282:../stdperiph/source/stm32f37x_spi.c ****   /* Return the SPI_I2S_IT status */
1283:../stdperiph/source/stm32f37x_spi.c ****   return bitstatus;
1284:../stdperiph/source/stm32f37x_spi.c **** }
 1230              		.loc 1 1284 0
 1231 002a 5DF8044B 		ldr	r4, [sp], #4
 1232              	.LCFI6:
 1233              		.cfi_restore 4
 1234              		.cfi_def_cfa_offset 0
 1235              	.LVL125:
 1236 002e 7047     		bx	lr
 1237              		.cfi_endproc
 1238              	.LFE141:
 1240              		.text
 1241              	.Letext0:
 1242              		.file 2 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\machine\\_defaul
 1243              		.file 3 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\sys\\_stdint.h"
 1244              		.file 4 "../cmsis/include/stm32f37x.h"
 1245              		.file 5 "../stdperiph/include/stm32f37x_rcc.h"
 1246              		.file 6 "../stdperiph/include/stm32f37x_spi.h"
 1247              		.file 7 "../cmsis/include/core_cm4.h"
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 45


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f37x_spi.c
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:22     .text.SPI_I2S_DeInit:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:27     .text.SPI_I2S_DeInit:00000000 SPI_I2S_DeInit
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:96     .text.SPI_I2S_DeInit:00000058 $d
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:103    .text.SPI_StructInit:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:108    .text.SPI_StructInit:00000000 SPI_StructInit
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:142    .text.SPI_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:147    .text.SPI_Init:00000000 SPI_Init
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:233    .text.I2S_StructInit:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:238    .text.I2S_StructInit:00000000 I2S_StructInit
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:265    .text.I2S_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:270    .text.I2S_Init:00000000 I2S_Init
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:432    .text.I2S_Init:000000b4 $d
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:437    .text.SPI_Cmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:442    .text.SPI_Cmd:00000000 SPI_Cmd
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:470    .text.SPI_TIModeCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:475    .text.SPI_TIModeCmd:00000000 SPI_TIModeCmd
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:503    .text.I2S_Cmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:508    .text.I2S_Cmd:00000000 I2S_Cmd
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:536    .text.SPI_DataSizeConfig:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:541    .text.SPI_DataSizeConfig:00000000 SPI_DataSizeConfig
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:566    .text.SPI_RxFIFOThresholdConfig:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:571    .text.SPI_RxFIFOThresholdConfig:00000000 SPI_RxFIFOThresholdConfig
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:596    .text.SPI_BiDirectionalLineConfig:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:601    .text.SPI_BiDirectionalLineConfig:00000000 SPI_BiDirectionalLineConfig
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:630    .text.SPI_NSSInternalSoftwareConfig:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:635    .text.SPI_NSSInternalSoftwareConfig:00000000 SPI_NSSInternalSoftwareConfig
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:665    .text.SPI_SSOutputCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:670    .text.SPI_SSOutputCmd:00000000 SPI_SSOutputCmd
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:698    .text.SPI_NSSPulseModeCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:703    .text.SPI_NSSPulseModeCmd:00000000 SPI_NSSPulseModeCmd
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:731    .text.SPI_SendData8:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:736    .text.SPI_SendData8:00000000 SPI_SendData8
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:751    .text.SPI_I2S_SendData16:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:756    .text.SPI_I2S_SendData16:00000000 SPI_I2S_SendData16
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:771    .text.SPI_ReceiveData8:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:776    .text.SPI_ReceiveData8:00000000 SPI_ReceiveData8
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:793    .text.SPI_I2S_ReceiveData16:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:798    .text.SPI_I2S_ReceiveData16:00000000 SPI_I2S_ReceiveData16
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:816    .text.SPI_CRCLengthConfig:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:821    .text.SPI_CRCLengthConfig:00000000 SPI_CRCLengthConfig
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:846    .text.SPI_CalculateCRC:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:851    .text.SPI_CalculateCRC:00000000 SPI_CalculateCRC
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:879    .text.SPI_TransmitCRC:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:884    .text.SPI_TransmitCRC:00000000 SPI_TransmitCRC
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:902    .text.SPI_GetCRC:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:907    .text.SPI_GetCRC:00000000 SPI_GetCRC
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:937    .text.SPI_GetCRCPolynomial:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:942    .text.SPI_GetCRCPolynomial:00000000 SPI_GetCRCPolynomial
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:960    .text.SPI_I2S_DMACmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:965    .text.SPI_I2S_DMACmd:00000000 SPI_I2S_DMACmd
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:996    .text.SPI_LastDMATransferCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:1001   .text.SPI_LastDMATransferCmd:00000000 SPI_LastDMATransferCmd
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:1026   .text.SPI_I2S_ITConfig:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:1031   .text.SPI_I2S_ITConfig:00000000 SPI_I2S_ITConfig
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:1072   .text.SPI_GetTransmissionFIFOStatus:00000000 $t
ARM GAS  C:\Users\strag\AppData\Local\Temp\cczH8bm6.s 			page 46


C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:1077   .text.SPI_GetTransmissionFIFOStatus:00000000 SPI_GetTransmissionFIFOStatus
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:1095   .text.SPI_GetReceptionFIFOStatus:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:1100   .text.SPI_GetReceptionFIFOStatus:00000000 SPI_GetReceptionFIFOStatus
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:1118   .text.SPI_I2S_GetFlagStatus:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:1123   .text.SPI_I2S_GetFlagStatus:00000000 SPI_I2S_GetFlagStatus
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:1150   .text.SPI_I2S_ClearFlag:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:1155   .text.SPI_I2S_ClearFlag:00000000 SPI_I2S_ClearFlag
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:1173   .text.SPI_I2S_GetITStatus:00000000 $t
C:\Users\strag\AppData\Local\Temp\cczH8bm6.s:1178   .text.SPI_I2S_GetITStatus:00000000 SPI_I2S_GetITStatus
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
RCC_GetClocksFreq
