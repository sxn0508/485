ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1jt39y.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f37x_comp.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.COMP_DeInit,"ax",%progbits
  22              		.align	2
  23              		.global	COMP_DeInit
  24              		.thumb
  25              		.thumb_func
  27              	COMP_DeInit:
  28              	.LFB111:
  29              		.file 1 "../stdperiph/source/stm32f37x_comp.c"
   1:../stdperiph/source/stm32f37x_comp.c **** /**
   2:../stdperiph/source/stm32f37x_comp.c ****   ******************************************************************************
   3:../stdperiph/source/stm32f37x_comp.c ****   * @file    stm32f37x_comp.c
   4:../stdperiph/source/stm32f37x_comp.c ****   * @author  MCD Application Team
   5:../stdperiph/source/stm32f37x_comp.c ****   * @version V1.0.0
   6:../stdperiph/source/stm32f37x_comp.c ****   * @date    20-September-2012
   7:../stdperiph/source/stm32f37x_comp.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../stdperiph/source/stm32f37x_comp.c ****   *          functionalities of the comparators (COMP1 and COMP2) peripheral: 
   9:../stdperiph/source/stm32f37x_comp.c ****   *           + Comparators configuration
  10:../stdperiph/source/stm32f37x_comp.c ****   *           + Window mode control
  11:../stdperiph/source/stm32f37x_comp.c ****   *
  12:../stdperiph/source/stm32f37x_comp.c ****   *  @verbatim
  13:../stdperiph/source/stm32f37x_comp.c ****   *    
  14:../stdperiph/source/stm32f37x_comp.c ****  ===============================================================================
  15:../stdperiph/source/stm32f37x_comp.c ****                      ##### How to use this driver #####
  16:../stdperiph/source/stm32f37x_comp.c ****  ===============================================================================
  17:../stdperiph/source/stm32f37x_comp.c ****     [..]           
  18:../stdperiph/source/stm32f37x_comp.c ****          The device integrates two analog comparators COMP1 and COMP2:
  19:../stdperiph/source/stm32f37x_comp.c ****    
  20:../stdperiph/source/stm32f37x_comp.c ****          (+) The non inverting input is set to PA1 for COMP1 and to PA3
  21:../stdperiph/source/stm32f37x_comp.c ****              for COMP2.
  22:../stdperiph/source/stm32f37x_comp.c ****   
  23:../stdperiph/source/stm32f37x_comp.c ****          (+) The inverting input can be selected among: DAC_OUT1, 
  24:../stdperiph/source/stm32f37x_comp.c ****              1/4 VREFINT, 1/2 VERFINT, 3/4 VREFINT, VREFINT,
  25:../stdperiph/source/stm32f37x_comp.c ****              I/O (PA0 for COMP1 and PA2 for COMP2)
  26:../stdperiph/source/stm32f37x_comp.c ****   
  27:../stdperiph/source/stm32f37x_comp.c ****          (+) The COMP output is internally is available using COMP_GetOutputLevel()
  28:../stdperiph/source/stm32f37x_comp.c ****              and can be set on GPIO pins: PA0, PA6, PA11 for COMP1
  29:../stdperiph/source/stm32f37x_comp.c ****              and PA2, PA7, PA12 for COMP2
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1jt39y.s 			page 2


  30:../stdperiph/source/stm32f37x_comp.c ****   
  31:../stdperiph/source/stm32f37x_comp.c ****          (+) The COMP output can be redirected to embedded timers (TIM1, TIM2
  32:../stdperiph/source/stm32f37x_comp.c ****              and TIM3)
  33:../stdperiph/source/stm32f37x_comp.c ****   
  34:../stdperiph/source/stm32f37x_comp.c ****          (+) The two comparators COMP1 and COMP2 can be combined in window
  35:../stdperiph/source/stm32f37x_comp.c ****              mode and only COMP1 non inverting (PA1) can be used as non-
  36:../stdperiph/source/stm32f37x_comp.c ****              inverting input.
  37:../stdperiph/source/stm32f37x_comp.c ****   
  38:../stdperiph/source/stm32f37x_comp.c ****          (+) The two comparators COMP1 and COMP2 have interrupt capability 
  39:../stdperiph/source/stm32f37x_comp.c ****              with wake-up from Sleep and Stop modes (through the EXTI controller).
  40:../stdperiph/source/stm32f37x_comp.c ****              COMP1 and COMP2 outputs are internally connected to EXTI Line 21
  41:../stdperiph/source/stm32f37x_comp.c ****              and EXTI Line 22 respectively.
  42:../stdperiph/source/stm32f37x_comp.c ****                    
  43:../stdperiph/source/stm32f37x_comp.c **** 
  44:../stdperiph/source/stm32f37x_comp.c ****                      ##### How to configure the comparator #####
  45:../stdperiph/source/stm32f37x_comp.c ****  ===============================================================================
  46:../stdperiph/source/stm32f37x_comp.c ****     [..] 
  47:../stdperiph/source/stm32f37x_comp.c ****            This driver provides functions to configure and program the Comparators 
  48:../stdperiph/source/stm32f37x_comp.c ****            of all STM32F37x devices.
  49:../stdperiph/source/stm32f37x_comp.c ****              
  50:../stdperiph/source/stm32f37x_comp.c ****     [..]   To use the comparator, perform the following steps:
  51:../stdperiph/source/stm32f37x_comp.c ****   
  52:../stdperiph/source/stm32f37x_comp.c ****          (#) Enable the SYSCFG APB clock to get write access to comparator
  53:../stdperiph/source/stm32f37x_comp.c ****              register using RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
  54:../stdperiph/source/stm32f37x_comp.c ****   
  55:../stdperiph/source/stm32f37x_comp.c ****          (#) Configure the comparator input in analog mode using GPIO_Init()
  56:../stdperiph/source/stm32f37x_comp.c ****   
  57:../stdperiph/source/stm32f37x_comp.c ****          (#) Configure the comparator output in alternate function mode
  58:../stdperiph/source/stm32f37x_comp.c ****              using GPIO_Init() and use GPIO_PinAFConfig() function to map the
  59:../stdperiph/source/stm32f37x_comp.c ****              comparator output to the GPIO pin
  60:../stdperiph/source/stm32f37x_comp.c ****   
  61:../stdperiph/source/stm32f37x_comp.c ****          (#) Configure the comparator using COMP_Init() function:
  62:../stdperiph/source/stm32f37x_comp.c ****                  (++)  Select the inverting input
  63:../stdperiph/source/stm32f37x_comp.c ****                  (++)  Select the output polarity  
  64:../stdperiph/source/stm32f37x_comp.c ****                  (++)  Select the output redirection
  65:../stdperiph/source/stm32f37x_comp.c ****                  (++)  Select the hysteresis level
  66:../stdperiph/source/stm32f37x_comp.c ****                  (++)  Select the power mode
  67:../stdperiph/source/stm32f37x_comp.c ****     
  68:../stdperiph/source/stm32f37x_comp.c ****          (#) Enable the comparator using COMP_Cmd() function
  69:../stdperiph/source/stm32f37x_comp.c ****   
  70:../stdperiph/source/stm32f37x_comp.c ****          (#) If required enable the COMP interrupt by configuring and enabling
  71:../stdperiph/source/stm32f37x_comp.c ****              EXTI line in Interrupt mode and selecting the desired sensitivity
  72:../stdperiph/source/stm32f37x_comp.c ****              level using EXTI_Init() function. After that enable the comparator
  73:../stdperiph/source/stm32f37x_comp.c ****              interrupt vector using NVIC_Init() function.
  74:../stdperiph/source/stm32f37x_comp.c ****   
  75:../stdperiph/source/stm32f37x_comp.c ****      @endverbatim
  76:../stdperiph/source/stm32f37x_comp.c ****   *    
  77:../stdperiph/source/stm32f37x_comp.c ****   ******************************************************************************
  78:../stdperiph/source/stm32f37x_comp.c ****   * @attention
  79:../stdperiph/source/stm32f37x_comp.c ****   *
  80:../stdperiph/source/stm32f37x_comp.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  81:../stdperiph/source/stm32f37x_comp.c ****   *
  82:../stdperiph/source/stm32f37x_comp.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  83:../stdperiph/source/stm32f37x_comp.c ****   * You may not use this file except in compliance with the License.
  84:../stdperiph/source/stm32f37x_comp.c ****   * You may obtain a copy of the License at:
  85:../stdperiph/source/stm32f37x_comp.c ****   *
  86:../stdperiph/source/stm32f37x_comp.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1jt39y.s 			page 3


  87:../stdperiph/source/stm32f37x_comp.c ****   *
  88:../stdperiph/source/stm32f37x_comp.c ****   * Unless required by applicable law or agreed to in writing, software 
  89:../stdperiph/source/stm32f37x_comp.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  90:../stdperiph/source/stm32f37x_comp.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  91:../stdperiph/source/stm32f37x_comp.c ****   * See the License for the specific language governing permissions and
  92:../stdperiph/source/stm32f37x_comp.c ****   * limitations under the License.
  93:../stdperiph/source/stm32f37x_comp.c ****   *
  94:../stdperiph/source/stm32f37x_comp.c ****   ******************************************************************************
  95:../stdperiph/source/stm32f37x_comp.c ****   */ 
  96:../stdperiph/source/stm32f37x_comp.c **** 
  97:../stdperiph/source/stm32f37x_comp.c **** /* Includes ------------------------------------------------------------------*/
  98:../stdperiph/source/stm32f37x_comp.c **** #include "stm32f37x_comp.h"
  99:../stdperiph/source/stm32f37x_comp.c **** 
 100:../stdperiph/source/stm32f37x_comp.c **** /** @addtogroup STM32F37x_StdPeriph_Driver
 101:../stdperiph/source/stm32f37x_comp.c ****   * @{
 102:../stdperiph/source/stm32f37x_comp.c ****   */
 103:../stdperiph/source/stm32f37x_comp.c **** 
 104:../stdperiph/source/stm32f37x_comp.c **** /** @defgroup COMP 
 105:../stdperiph/source/stm32f37x_comp.c ****   * @brief COMP driver modules
 106:../stdperiph/source/stm32f37x_comp.c ****   * @{
 107:../stdperiph/source/stm32f37x_comp.c ****   */ 
 108:../stdperiph/source/stm32f37x_comp.c **** 
 109:../stdperiph/source/stm32f37x_comp.c **** /* Private typedef -----------------------------------------------------------*/
 110:../stdperiph/source/stm32f37x_comp.c **** /* Private define ------------------------------------------------------------*/
 111:../stdperiph/source/stm32f37x_comp.c **** /* CSR register Mask */
 112:../stdperiph/source/stm32f37x_comp.c **** #define COMP_CSR_CLEAR_MASK              ((uint32_t)0x00003FFE)
 113:../stdperiph/source/stm32f37x_comp.c **** 
 114:../stdperiph/source/stm32f37x_comp.c **** /* Private macro -------------------------------------------------------------*/
 115:../stdperiph/source/stm32f37x_comp.c **** /* Private variables ---------------------------------------------------------*/
 116:../stdperiph/source/stm32f37x_comp.c **** /* Private function prototypes -----------------------------------------------*/
 117:../stdperiph/source/stm32f37x_comp.c **** /* Private functions ---------------------------------------------------------*/
 118:../stdperiph/source/stm32f37x_comp.c **** 
 119:../stdperiph/source/stm32f37x_comp.c **** /** @defgroup COMP_Private_Functions
 120:../stdperiph/source/stm32f37x_comp.c ****   * @{
 121:../stdperiph/source/stm32f37x_comp.c ****   */
 122:../stdperiph/source/stm32f37x_comp.c **** 
 123:../stdperiph/source/stm32f37x_comp.c **** /** @defgroup COMP_Group1 Initialization and Configuration functions
 124:../stdperiph/source/stm32f37x_comp.c ****  *  @brief   Initialization and Configuration functions 
 125:../stdperiph/source/stm32f37x_comp.c ****  *
 126:../stdperiph/source/stm32f37x_comp.c **** @verbatim   
 127:../stdperiph/source/stm32f37x_comp.c ****  ===============================================================================
 128:../stdperiph/source/stm32f37x_comp.c ****                ##### Initialization and Configuration functions #####
 129:../stdperiph/source/stm32f37x_comp.c ****  ===============================================================================  
 130:../stdperiph/source/stm32f37x_comp.c **** 
 131:../stdperiph/source/stm32f37x_comp.c **** @endverbatim
 132:../stdperiph/source/stm32f37x_comp.c ****   * @{
 133:../stdperiph/source/stm32f37x_comp.c ****   */
 134:../stdperiph/source/stm32f37x_comp.c ****    
 135:../stdperiph/source/stm32f37x_comp.c **** /**
 136:../stdperiph/source/stm32f37x_comp.c ****   * @brief  Deinitializes COMP peripheral registers to their default reset values.
 137:../stdperiph/source/stm32f37x_comp.c ****   * @note   Deinitialization can't be performed if the COMP configuration is locked.
 138:../stdperiph/source/stm32f37x_comp.c ****   *         To unlock the configuration, perform a system reset.
 139:../stdperiph/source/stm32f37x_comp.c ****   * @param  None
 140:../stdperiph/source/stm32f37x_comp.c ****   * @retval None
 141:../stdperiph/source/stm32f37x_comp.c ****   */
 142:../stdperiph/source/stm32f37x_comp.c **** void COMP_DeInit(void)
 143:../stdperiph/source/stm32f37x_comp.c **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1jt39y.s 			page 4


  30              		.loc 1 143 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 144:../stdperiph/source/stm32f37x_comp.c ****   COMP->CSR = ((uint32_t)0x00000000);    /*!< Set COMP_CSR register to reset value */
  35              		.loc 1 144 0
  36 0000 0022     		movs	r2, #0
  37 0002 014B     		ldr	r3, .L2
  38 0004 1A60     		str	r2, [r3]
  39 0006 7047     		bx	lr
  40              	.L3:
  41              		.align	2
  42              	.L2:
  43 0008 1C000140 		.word	1073807388
  44              		.cfi_endproc
  45              	.LFE111:
  47              		.section	.text.COMP_Init,"ax",%progbits
  48              		.align	2
  49              		.global	COMP_Init
  50              		.thumb
  51              		.thumb_func
  53              	COMP_Init:
  54              	.LFB112:
 145:../stdperiph/source/stm32f37x_comp.c **** }
 146:../stdperiph/source/stm32f37x_comp.c **** 
 147:../stdperiph/source/stm32f37x_comp.c **** /**
 148:../stdperiph/source/stm32f37x_comp.c ****   * @brief  Initializes the COMP peripheral according to the specified parameters
 149:../stdperiph/source/stm32f37x_comp.c ****   *         in COMP_InitStruct
 150:../stdperiph/source/stm32f37x_comp.c ****   * @note   If the selected comparator is locked, initialization can't be performed.
 151:../stdperiph/source/stm32f37x_comp.c ****   *         To unlock the configuration, perform a system reset.
 152:../stdperiph/source/stm32f37x_comp.c ****   * @note   By default, PA1 is selected as COMP1 non inverting input.
 153:../stdperiph/source/stm32f37x_comp.c ****   *         To use PA4 as COMP1 non inverting input call COMP_SwitchCmd() after COMP_Init()
 154:../stdperiph/source/stm32f37x_comp.c ****   * @param  COMP_Selection: the selected comparator. 
 155:../stdperiph/source/stm32f37x_comp.c ****   *          This parameter can be one of the following values:
 156:../stdperiph/source/stm32f37x_comp.c ****   *            @arg COMP_Selection_COMP1: COMP1 selected
 157:../stdperiph/source/stm32f37x_comp.c ****   *            @arg COMP_Selection_COMP2: COMP2 selected
 158:../stdperiph/source/stm32f37x_comp.c ****   * @param  COMP_InitStruct: pointer to an COMP_InitTypeDef structure that contains 
 159:../stdperiph/source/stm32f37x_comp.c ****   *         the configuration information for the specified COMP peripheral.
 160:../stdperiph/source/stm32f37x_comp.c ****   * @retval None
 161:../stdperiph/source/stm32f37x_comp.c ****   */
 162:../stdperiph/source/stm32f37x_comp.c **** void COMP_Init(uint32_t COMP_Selection, COMP_InitTypeDef* COMP_InitStruct)
 163:../stdperiph/source/stm32f37x_comp.c **** {
  55              		.loc 1 163 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL0:
  61 0000 30B4     		push	{r4, r5}
  62              	.LCFI0:
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 4, -8
  65              		.cfi_offset 5, -4
  66              	.LVL1:
 164:../stdperiph/source/stm32f37x_comp.c ****   uint32_t tmpreg = 0;
 165:../stdperiph/source/stm32f37x_comp.c **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1jt39y.s 			page 5


 166:../stdperiph/source/stm32f37x_comp.c ****   /* Check the parameters */
 167:../stdperiph/source/stm32f37x_comp.c ****   assert_param(IS_COMP_ALL_PERIPH(COMP_Selection));
 168:../stdperiph/source/stm32f37x_comp.c ****   assert_param(IS_COMP_INVERTING_INPUT(COMP_InitStruct->COMP_InvertingInput));
 169:../stdperiph/source/stm32f37x_comp.c ****   assert_param(IS_COMP_OUTPUT(COMP_InitStruct->COMP_Output));
 170:../stdperiph/source/stm32f37x_comp.c ****   assert_param(IS_COMP_OUTPUT_POL(COMP_InitStruct->COMP_OutputPol));
 171:../stdperiph/source/stm32f37x_comp.c ****   assert_param(IS_COMP_HYSTERESIS(COMP_InitStruct->COMP_Hysteresis));
 172:../stdperiph/source/stm32f37x_comp.c ****   assert_param(IS_COMP_MODE(COMP_InitStruct->COMP_Mode));
 173:../stdperiph/source/stm32f37x_comp.c **** 
 174:../stdperiph/source/stm32f37x_comp.c ****   /*!< Get the COMP_CSR register value */
 175:../stdperiph/source/stm32f37x_comp.c ****   tmpreg = COMP->CSR;
  67              		.loc 1 175 0
  68 0002 0B4D     		ldr	r5, .L6
  69 0004 2B68     		ldr	r3, [r5]
  70              	.LVL2:
 176:../stdperiph/source/stm32f37x_comp.c **** 
 177:../stdperiph/source/stm32f37x_comp.c ****   /*!< Clear the COMP1SW1, COMPx_IN_SEL, COMPx_OUT_TIM_SEL, COMPx_POL, COMPx_HYST and COMPx_PWR_MOD
 178:../stdperiph/source/stm32f37x_comp.c ****   tmpreg &= (uint32_t) ~(COMP_CSR_CLEAR_MASK<<COMP_Selection);
  71              		.loc 1 178 0
  72 0006 43F6FE72 		movw	r2, #16382
  73 000a 8240     		lsls	r2, r2, r0
  74 000c 23EA0202 		bic	r2, r3, r2
  75              	.LVL3:
 179:../stdperiph/source/stm32f37x_comp.c **** 
 180:../stdperiph/source/stm32f37x_comp.c ****   /*!< Configure COMP: inverting input, output redirection, hysteresis value and power mode */
 181:../stdperiph/source/stm32f37x_comp.c ****   /*!< Set COMPxINSEL bits according to COMP_InitStruct->COMP_InvertingInput value */
 182:../stdperiph/source/stm32f37x_comp.c ****   /*!< Set COMPxOUTSEL bits according to COMP_InitStruct->COMP_Output value */
 183:../stdperiph/source/stm32f37x_comp.c ****   /*!< Set COMPxPOL bit according to COMP_InitStruct->COMP_OutputPol value */
 184:../stdperiph/source/stm32f37x_comp.c ****   /*!< Set COMPxHYST bits according to COMP_InitStruct->COMP_Hysteresis value */
 185:../stdperiph/source/stm32f37x_comp.c ****   /*!< Set COMPxMODE bits according to COMP_InitStruct->COMP_Mode value */   
 186:../stdperiph/source/stm32f37x_comp.c ****   tmpreg |= (uint32_t)((COMP_InitStruct->COMP_InvertingInput | COMP_InitStruct->COMP_Output |
  76              		.loc 1 186 0
  77 0010 0C68     		ldr	r4, [r1]
  78 0012 4B68     		ldr	r3, [r1, #4]
  79 0014 1C43     		orrs	r4, r4, r3
 187:../stdperiph/source/stm32f37x_comp.c ****                        COMP_InitStruct->COMP_OutputPol | COMP_InitStruct->COMP_Hysteresis |
  80              		.loc 1 187 0
  81 0016 8B68     		ldr	r3, [r1, #8]
 186:../stdperiph/source/stm32f37x_comp.c ****                        COMP_InitStruct->COMP_OutputPol | COMP_InitStruct->COMP_Hysteresis |
  82              		.loc 1 186 0
  83 0018 1C43     		orrs	r4, r4, r3
  84              		.loc 1 187 0
  85 001a CB68     		ldr	r3, [r1, #12]
  86 001c 1C43     		orrs	r4, r4, r3
 188:../stdperiph/source/stm32f37x_comp.c ****                        COMP_InitStruct->COMP_Mode)<<COMP_Selection);
  87              		.loc 1 188 0
  88 001e 0B69     		ldr	r3, [r1, #16]
 187:../stdperiph/source/stm32f37x_comp.c ****                        COMP_InitStruct->COMP_OutputPol | COMP_InitStruct->COMP_Hysteresis |
  89              		.loc 1 187 0
  90 0020 2343     		orrs	r3, r3, r4
  91              		.loc 1 188 0
  92 0022 03FA00F0 		lsl	r0, r3, r0
  93              	.LVL4:
 186:../stdperiph/source/stm32f37x_comp.c ****                        COMP_InitStruct->COMP_OutputPol | COMP_InitStruct->COMP_Hysteresis |
  94              		.loc 1 186 0
  95 0026 1043     		orrs	r0, r0, r2
  96              	.LVL5:
 189:../stdperiph/source/stm32f37x_comp.c **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1jt39y.s 			page 6


 190:../stdperiph/source/stm32f37x_comp.c ****   /*!< Write to COMP_CSR register */
 191:../stdperiph/source/stm32f37x_comp.c ****   COMP->CSR = tmpreg;  
  97              		.loc 1 191 0
  98 0028 2860     		str	r0, [r5]
 192:../stdperiph/source/stm32f37x_comp.c **** }
  99              		.loc 1 192 0
 100 002a 30BC     		pop	{r4, r5}
 101              	.LCFI1:
 102              		.cfi_restore 5
 103              		.cfi_restore 4
 104              		.cfi_def_cfa_offset 0
 105 002c 7047     		bx	lr
 106              	.L7:
 107 002e 00BF     		.align	2
 108              	.L6:
 109 0030 1C000140 		.word	1073807388
 110              		.cfi_endproc
 111              	.LFE112:
 113              		.section	.text.COMP_StructInit,"ax",%progbits
 114              		.align	2
 115              		.global	COMP_StructInit
 116              		.thumb
 117              		.thumb_func
 119              	COMP_StructInit:
 120              	.LFB113:
 193:../stdperiph/source/stm32f37x_comp.c **** 
 194:../stdperiph/source/stm32f37x_comp.c **** /**
 195:../stdperiph/source/stm32f37x_comp.c ****   * @brief  Fills each COMP_InitStruct member with its default value.
 196:../stdperiph/source/stm32f37x_comp.c ****   * @param  COMP_InitStruct: pointer to an COMP_InitTypeDef structure which will 
 197:../stdperiph/source/stm32f37x_comp.c ****   *         be initialized.
 198:../stdperiph/source/stm32f37x_comp.c ****   * @retval None
 199:../stdperiph/source/stm32f37x_comp.c ****   */
 200:../stdperiph/source/stm32f37x_comp.c **** void COMP_StructInit(COMP_InitTypeDef* COMP_InitStruct)
 201:../stdperiph/source/stm32f37x_comp.c **** {
 121              		.loc 1 201 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126              	.LVL6:
 202:../stdperiph/source/stm32f37x_comp.c ****   COMP_InitStruct->COMP_InvertingInput = COMP_InvertingInput_1_4VREFINT;
 127              		.loc 1 202 0
 128 0000 0023     		movs	r3, #0
 129 0002 0360     		str	r3, [r0]
 203:../stdperiph/source/stm32f37x_comp.c ****   COMP_InitStruct->COMP_Output = COMP_Output_None;
 130              		.loc 1 203 0
 131 0004 4360     		str	r3, [r0, #4]
 204:../stdperiph/source/stm32f37x_comp.c ****   COMP_InitStruct->COMP_OutputPol = COMP_OutputPol_NonInverted;
 132              		.loc 1 204 0
 133 0006 8360     		str	r3, [r0, #8]
 205:../stdperiph/source/stm32f37x_comp.c ****   COMP_InitStruct->COMP_Hysteresis = COMP_Hysteresis_No;
 134              		.loc 1 205 0
 135 0008 C360     		str	r3, [r0, #12]
 206:../stdperiph/source/stm32f37x_comp.c ****   COMP_InitStruct->COMP_Mode = COMP_Mode_UltraLowPower;
 136              		.loc 1 206 0
 137 000a 0C23     		movs	r3, #12
 138 000c 0361     		str	r3, [r0, #16]
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1jt39y.s 			page 7


 139 000e 7047     		bx	lr
 140              		.cfi_endproc
 141              	.LFE113:
 143              		.section	.text.COMP_Cmd,"ax",%progbits
 144              		.align	2
 145              		.global	COMP_Cmd
 146              		.thumb
 147              		.thumb_func
 149              	COMP_Cmd:
 150              	.LFB114:
 207:../stdperiph/source/stm32f37x_comp.c **** }
 208:../stdperiph/source/stm32f37x_comp.c **** 
 209:../stdperiph/source/stm32f37x_comp.c **** /**
 210:../stdperiph/source/stm32f37x_comp.c ****   * @brief  Enable or disable the COMP peripheral.
 211:../stdperiph/source/stm32f37x_comp.c ****   * @note   If the selected comparator is locked, enable/disable can't be performed.
 212:../stdperiph/source/stm32f37x_comp.c ****   *         To unlock the configuration, perform a system reset.
 213:../stdperiph/source/stm32f37x_comp.c ****   * @param  COMP_Selection: the selected comparator.
 214:../stdperiph/source/stm32f37x_comp.c ****   *          This parameter can be one of the following values:
 215:../stdperiph/source/stm32f37x_comp.c ****   *            @arg COMP_Selection_COMP1: COMP1 selected
 216:../stdperiph/source/stm32f37x_comp.c ****   *            @arg COMP_Selection_COMP2: COMP2 selected
 217:../stdperiph/source/stm32f37x_comp.c ****   * @param  NewState: new state of the COMP peripheral.
 218:../stdperiph/source/stm32f37x_comp.c ****   *          This parameter can be: ENABLE or DISABLE.
 219:../stdperiph/source/stm32f37x_comp.c ****   * @note   When enabled, the comparator compares the non inverting input with 
 220:../stdperiph/source/stm32f37x_comp.c ****   *         the inverting input and the comparison result is available on comparator output.
 221:../stdperiph/source/stm32f37x_comp.c ****   * @note   When disabled, the comparator doesn't perform comparison and the 
 222:../stdperiph/source/stm32f37x_comp.c ****   *         output level is low.
 223:../stdperiph/source/stm32f37x_comp.c ****   * @retval None
 224:../stdperiph/source/stm32f37x_comp.c ****   */
 225:../stdperiph/source/stm32f37x_comp.c **** void COMP_Cmd(uint32_t COMP_Selection, FunctionalState NewState)
 226:../stdperiph/source/stm32f37x_comp.c **** {
 151              		.loc 1 226 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              		@ link register save eliminated.
 156              	.LVL7:
 227:../stdperiph/source/stm32f37x_comp.c ****   /* Check the parameters */
 228:../stdperiph/source/stm32f37x_comp.c ****   assert_param(IS_COMP_ALL_PERIPH(COMP_Selection));
 229:../stdperiph/source/stm32f37x_comp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 230:../stdperiph/source/stm32f37x_comp.c **** 
 231:../stdperiph/source/stm32f37x_comp.c ****   if (NewState != DISABLE)
 157              		.loc 1 231 0
 158 0000 39B1     		cbz	r1, .L10
 232:../stdperiph/source/stm32f37x_comp.c ****   {
 233:../stdperiph/source/stm32f37x_comp.c ****     /* Enable the selected COMP peripheral */
 234:../stdperiph/source/stm32f37x_comp.c ****     COMP->CSR |= (uint32_t) (1<<COMP_Selection);
 159              		.loc 1 234 0
 160 0002 084A     		ldr	r2, .L12
 161 0004 1168     		ldr	r1, [r2]
 162              	.LVL8:
 163 0006 0123     		movs	r3, #1
 164 0008 03FA00F0 		lsl	r0, r3, r0
 165              	.LVL9:
 166 000c 0843     		orrs	r0, r0, r1
 167 000e 1060     		str	r0, [r2]
 168 0010 7047     		bx	lr
 169              	.LVL10:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1jt39y.s 			page 8


 170              	.L10:
 235:../stdperiph/source/stm32f37x_comp.c ****   }
 236:../stdperiph/source/stm32f37x_comp.c ****   else
 237:../stdperiph/source/stm32f37x_comp.c ****   {
 238:../stdperiph/source/stm32f37x_comp.c ****     /* Disable the selected COMP peripheral  */
 239:../stdperiph/source/stm32f37x_comp.c ****     COMP->CSR &= (uint32_t)(~((uint32_t)1<<COMP_Selection));
 171              		.loc 1 239 0
 172 0012 0449     		ldr	r1, .L12
 173              	.LVL11:
 174 0014 0B68     		ldr	r3, [r1]
 175 0016 0122     		movs	r2, #1
 176 0018 02FA00F0 		lsl	r0, r2, r0
 177              	.LVL12:
 178 001c 23EA0000 		bic	r0, r3, r0
 179 0020 0860     		str	r0, [r1]
 180 0022 7047     		bx	lr
 181              	.L13:
 182              		.align	2
 183              	.L12:
 184 0024 1C000140 		.word	1073807388
 185              		.cfi_endproc
 186              	.LFE114:
 188              		.section	.text.COMP_SwitchCmd,"ax",%progbits
 189              		.align	2
 190              		.global	COMP_SwitchCmd
 191              		.thumb
 192              		.thumb_func
 194              	COMP_SwitchCmd:
 195              	.LFB115:
 240:../stdperiph/source/stm32f37x_comp.c ****   }
 241:../stdperiph/source/stm32f37x_comp.c **** }
 242:../stdperiph/source/stm32f37x_comp.c **** 
 243:../stdperiph/source/stm32f37x_comp.c **** /**
 244:../stdperiph/source/stm32f37x_comp.c ****   * @brief  Close or Open the SW1 switch.
 245:../stdperiph/source/stm32f37x_comp.c ****   * @note   This switch is solely intended to redirect signals onto high
 246:../stdperiph/source/stm32f37x_comp.c ****   *         impedance input, such as COMP1 non-inverting input (highly resistive switch)
 247:../stdperiph/source/stm32f37x_comp.c ****   * @param  NewState: New state of the analog switch.
 248:../stdperiph/source/stm32f37x_comp.c ****   *          This parameter can be: ENABLE or DISABLE. 
 249:../stdperiph/source/stm32f37x_comp.c ****   * @note   When enabled, the SW1 is closed; PA1 is connected to PA4
 250:../stdperiph/source/stm32f37x_comp.c ****   * @note   When disabled, the SW1 switch is open; PA1 is disconnected from PA4
 251:../stdperiph/source/stm32f37x_comp.c ****   * @retval None
 252:../stdperiph/source/stm32f37x_comp.c ****   */
 253:../stdperiph/source/stm32f37x_comp.c **** void COMP_SwitchCmd(FunctionalState NewState)
 254:../stdperiph/source/stm32f37x_comp.c **** {
 196              		.loc 1 254 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              	.LVL13:
 255:../stdperiph/source/stm32f37x_comp.c ****   /* Check the parameter */
 256:../stdperiph/source/stm32f37x_comp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 257:../stdperiph/source/stm32f37x_comp.c **** 
 258:../stdperiph/source/stm32f37x_comp.c ****   if (NewState != DISABLE)
 202              		.loc 1 258 0
 203 0000 28B1     		cbz	r0, .L15
 259:../stdperiph/source/stm32f37x_comp.c ****   {
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1jt39y.s 			page 9


 260:../stdperiph/source/stm32f37x_comp.c ****     /* Close SW1 switch */
 261:../stdperiph/source/stm32f37x_comp.c ****     COMP->CSR |= (uint32_t) (COMP_CSR_COMP1SW1);
 204              		.loc 1 261 0
 205 0002 064A     		ldr	r2, .L17
 206 0004 1368     		ldr	r3, [r2]
 207 0006 43F00203 		orr	r3, r3, #2
 208 000a 1360     		str	r3, [r2]
 209 000c 7047     		bx	lr
 210              	.L15:
 262:../stdperiph/source/stm32f37x_comp.c ****   }
 263:../stdperiph/source/stm32f37x_comp.c ****   else
 264:../stdperiph/source/stm32f37x_comp.c ****   {
 265:../stdperiph/source/stm32f37x_comp.c ****     /* Open SW1 switch */
 266:../stdperiph/source/stm32f37x_comp.c ****     COMP->CSR &= (uint32_t)(~COMP_CSR_COMP1SW1);
 211              		.loc 1 266 0
 212 000e 034A     		ldr	r2, .L17
 213 0010 1368     		ldr	r3, [r2]
 214 0012 23F00203 		bic	r3, r3, #2
 215 0016 1360     		str	r3, [r2]
 216 0018 7047     		bx	lr
 217              	.L18:
 218 001a 00BF     		.align	2
 219              	.L17:
 220 001c 1C000140 		.word	1073807388
 221              		.cfi_endproc
 222              	.LFE115:
 224              		.section	.text.COMP_GetOutputLevel,"ax",%progbits
 225              		.align	2
 226              		.global	COMP_GetOutputLevel
 227              		.thumb
 228              		.thumb_func
 230              	COMP_GetOutputLevel:
 231              	.LFB116:
 267:../stdperiph/source/stm32f37x_comp.c ****   }
 268:../stdperiph/source/stm32f37x_comp.c **** }
 269:../stdperiph/source/stm32f37x_comp.c **** 
 270:../stdperiph/source/stm32f37x_comp.c **** /**
 271:../stdperiph/source/stm32f37x_comp.c ****   * @brief  Return the output level (high or low) of the selected comparator. 
 272:../stdperiph/source/stm32f37x_comp.c ****   * @note   The output level depends on the selected polarity.
 273:../stdperiph/source/stm32f37x_comp.c ****   * @note   If the polarity is not inverted:
 274:../stdperiph/source/stm32f37x_comp.c ****   *          - Comparator output is low when the non-inverting input is at a lower
 275:../stdperiph/source/stm32f37x_comp.c ****   *            voltage than the inverting input
 276:../stdperiph/source/stm32f37x_comp.c ****   *          - Comparator output is high when the non-inverting input is at a higher
 277:../stdperiph/source/stm32f37x_comp.c ****   *            voltage than the inverting input
 278:../stdperiph/source/stm32f37x_comp.c ****   * @note   If the polarity is inverted:
 279:../stdperiph/source/stm32f37x_comp.c ****   *          - Comparator output is high when the non-inverting input is at a lower
 280:../stdperiph/source/stm32f37x_comp.c ****   *            voltage than the inverting input
 281:../stdperiph/source/stm32f37x_comp.c ****   *          - Comparator output is low when the non-inverting input is at a higher
 282:../stdperiph/source/stm32f37x_comp.c ****   *            voltage than the inverting input
 283:../stdperiph/source/stm32f37x_comp.c ****   * @param  COMP_Selection: the selected comparator. 
 284:../stdperiph/source/stm32f37x_comp.c ****   *          This parameter can be one of the following values:
 285:../stdperiph/source/stm32f37x_comp.c ****   *            @arg COMP_Selection_COMP1: COMP1 selected
 286:../stdperiph/source/stm32f37x_comp.c ****   *            @arg COMP_Selection_COMP2: COMP2 selected  
 287:../stdperiph/source/stm32f37x_comp.c ****   * @retval Returns the selected comparator output level: low or high.
 288:../stdperiph/source/stm32f37x_comp.c ****   *       
 289:../stdperiph/source/stm32f37x_comp.c ****   */
 290:../stdperiph/source/stm32f37x_comp.c **** uint32_t COMP_GetOutputLevel(uint32_t COMP_Selection)
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1jt39y.s 			page 10


 291:../stdperiph/source/stm32f37x_comp.c **** {
 232              		.loc 1 291 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              		@ link register save eliminated.
 237              	.LVL14:
 292:../stdperiph/source/stm32f37x_comp.c ****   uint32_t compout = 0x0;
 293:../stdperiph/source/stm32f37x_comp.c **** 
 294:../stdperiph/source/stm32f37x_comp.c ****   /* Check the parameters */
 295:../stdperiph/source/stm32f37x_comp.c ****   assert_param(IS_COMP_ALL_PERIPH(COMP_Selection));
 296:../stdperiph/source/stm32f37x_comp.c **** 
 297:../stdperiph/source/stm32f37x_comp.c ****   /* Check if selected comparator output is high */
 298:../stdperiph/source/stm32f37x_comp.c ****   if ((COMP->CSR & (COMP_CSR_COMP1OUT<<COMP_Selection)) != 0)
 238              		.loc 1 298 0
 239 0000 054B     		ldr	r3, .L22
 240 0002 1A68     		ldr	r2, [r3]
 241 0004 4FF48043 		mov	r3, #16384
 242 0008 03FA00F0 		lsl	r0, r3, r0
 243              	.LVL15:
 244 000c 0242     		tst	r2, r0
 245 000e 01D0     		beq	.L21
 299:../stdperiph/source/stm32f37x_comp.c ****   {
 300:../stdperiph/source/stm32f37x_comp.c ****     compout = COMP_OutputLevel_High;
 246              		.loc 1 300 0
 247 0010 1846     		mov	r0, r3
 248 0012 7047     		bx	lr
 249              	.L21:
 301:../stdperiph/source/stm32f37x_comp.c ****   }
 302:../stdperiph/source/stm32f37x_comp.c ****   else
 303:../stdperiph/source/stm32f37x_comp.c ****   {
 304:../stdperiph/source/stm32f37x_comp.c ****     compout = COMP_OutputLevel_Low;
 250              		.loc 1 304 0
 251 0014 0020     		movs	r0, #0
 252              	.LVL16:
 305:../stdperiph/source/stm32f37x_comp.c ****   }
 306:../stdperiph/source/stm32f37x_comp.c **** 
 307:../stdperiph/source/stm32f37x_comp.c ****   /* Return the comparator output level */
 308:../stdperiph/source/stm32f37x_comp.c ****   return (uint32_t)(compout);
 309:../stdperiph/source/stm32f37x_comp.c **** }
 253              		.loc 1 309 0
 254 0016 7047     		bx	lr
 255              	.L23:
 256              		.align	2
 257              	.L22:
 258 0018 1C000140 		.word	1073807388
 259              		.cfi_endproc
 260              	.LFE116:
 262              		.section	.text.COMP_WindowCmd,"ax",%progbits
 263              		.align	2
 264              		.global	COMP_WindowCmd
 265              		.thumb
 266              		.thumb_func
 268              	COMP_WindowCmd:
 269              	.LFB117:
 310:../stdperiph/source/stm32f37x_comp.c **** 
 311:../stdperiph/source/stm32f37x_comp.c **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1jt39y.s 			page 11


 312:../stdperiph/source/stm32f37x_comp.c ****   * @}
 313:../stdperiph/source/stm32f37x_comp.c ****   */
 314:../stdperiph/source/stm32f37x_comp.c **** 
 315:../stdperiph/source/stm32f37x_comp.c **** /** @defgroup COMP_Group2 Window mode control function
 316:../stdperiph/source/stm32f37x_comp.c ****  *  @brief   Window mode control function 
 317:../stdperiph/source/stm32f37x_comp.c ****  *
 318:../stdperiph/source/stm32f37x_comp.c **** @verbatim   
 319:../stdperiph/source/stm32f37x_comp.c ****  ===============================================================================
 320:../stdperiph/source/stm32f37x_comp.c ****                      ##### Window mode control function #####
 321:../stdperiph/source/stm32f37x_comp.c ****  ===============================================================================  
 322:../stdperiph/source/stm32f37x_comp.c **** 
 323:../stdperiph/source/stm32f37x_comp.c **** @endverbatim
 324:../stdperiph/source/stm32f37x_comp.c ****   * @{
 325:../stdperiph/source/stm32f37x_comp.c ****   */
 326:../stdperiph/source/stm32f37x_comp.c **** 
 327:../stdperiph/source/stm32f37x_comp.c **** /**
 328:../stdperiph/source/stm32f37x_comp.c ****   * @brief  Enables or disables the window mode.
 329:../stdperiph/source/stm32f37x_comp.c ****   * @note   In window mode, COMP1 and COMP2 non inverting inputs are connected
 330:../stdperiph/source/stm32f37x_comp.c ****   *         together and only COMP1 non inverting input (PA1) can be used.
 331:../stdperiph/source/stm32f37x_comp.c ****   * @param  NewState: new state of the window mode.
 332:../stdperiph/source/stm32f37x_comp.c ****   *          This parameter can be :
 333:../stdperiph/source/stm32f37x_comp.c ****   *           @arg ENABLE: COMP1 and COMP2 non inverting inputs are connected together.
 334:../stdperiph/source/stm32f37x_comp.c ****   *           @arg DISABLE: OMP1 and COMP2 non inverting inputs are disconnected.
 335:../stdperiph/source/stm32f37x_comp.c ****   * @retval None
 336:../stdperiph/source/stm32f37x_comp.c ****   */
 337:../stdperiph/source/stm32f37x_comp.c **** void COMP_WindowCmd(FunctionalState NewState)
 338:../stdperiph/source/stm32f37x_comp.c **** {
 270              		.loc 1 338 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274              		@ link register save eliminated.
 275              	.LVL17:
 339:../stdperiph/source/stm32f37x_comp.c ****   /* Check the parameters */
 340:../stdperiph/source/stm32f37x_comp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 341:../stdperiph/source/stm32f37x_comp.c ****   
 342:../stdperiph/source/stm32f37x_comp.c ****   if (NewState != DISABLE)
 276              		.loc 1 342 0
 277 0000 28B1     		cbz	r0, .L25
 343:../stdperiph/source/stm32f37x_comp.c ****   {
 344:../stdperiph/source/stm32f37x_comp.c ****     /* Enable the window mode */
 345:../stdperiph/source/stm32f37x_comp.c ****     COMP->CSR |= (uint32_t) COMP_CSR_WNDWEN;
 278              		.loc 1 345 0
 279 0002 064A     		ldr	r2, .L27
 280 0004 1368     		ldr	r3, [r2]
 281 0006 43F40003 		orr	r3, r3, #8388608
 282 000a 1360     		str	r3, [r2]
 283 000c 7047     		bx	lr
 284              	.L25:
 346:../stdperiph/source/stm32f37x_comp.c ****   }
 347:../stdperiph/source/stm32f37x_comp.c ****   else
 348:../stdperiph/source/stm32f37x_comp.c ****   {
 349:../stdperiph/source/stm32f37x_comp.c ****     /* Disable the window mode */
 350:../stdperiph/source/stm32f37x_comp.c ****     COMP->CSR &= (uint32_t)(~COMP_CSR_WNDWEN);
 285              		.loc 1 350 0
 286 000e 034A     		ldr	r2, .L27
 287 0010 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1jt39y.s 			page 12


 288 0012 23F40003 		bic	r3, r3, #8388608
 289 0016 1360     		str	r3, [r2]
 290 0018 7047     		bx	lr
 291              	.L28:
 292 001a 00BF     		.align	2
 293              	.L27:
 294 001c 1C000140 		.word	1073807388
 295              		.cfi_endproc
 296              	.LFE117:
 298              		.section	.text.COMP_LockConfig,"ax",%progbits
 299              		.align	2
 300              		.global	COMP_LockConfig
 301              		.thumb
 302              		.thumb_func
 304              	COMP_LockConfig:
 305              	.LFB118:
 351:../stdperiph/source/stm32f37x_comp.c ****   }
 352:../stdperiph/source/stm32f37x_comp.c **** }
 353:../stdperiph/source/stm32f37x_comp.c **** 
 354:../stdperiph/source/stm32f37x_comp.c **** /**
 355:../stdperiph/source/stm32f37x_comp.c ****   * @}
 356:../stdperiph/source/stm32f37x_comp.c ****   */
 357:../stdperiph/source/stm32f37x_comp.c **** 
 358:../stdperiph/source/stm32f37x_comp.c **** /** @defgroup COMP_Group3 COMP configuration locking function
 359:../stdperiph/source/stm32f37x_comp.c ****  *  @brief   COMP1 and COMP2 configuration locking function
 360:../stdperiph/source/stm32f37x_comp.c ****  *           COMP1 and COMP2 configuration can be locked each separately.
 361:../stdperiph/source/stm32f37x_comp.c ****  *           Unlocking is performed by system reset.
 362:../stdperiph/source/stm32f37x_comp.c ****  *
 363:../stdperiph/source/stm32f37x_comp.c **** @verbatim   
 364:../stdperiph/source/stm32f37x_comp.c ****  ===============================================================================
 365:../stdperiph/source/stm32f37x_comp.c ****                      ##### Configuration Lock function #####
 366:../stdperiph/source/stm32f37x_comp.c ****  ===============================================================================  
 367:../stdperiph/source/stm32f37x_comp.c **** 
 368:../stdperiph/source/stm32f37x_comp.c **** @endverbatim
 369:../stdperiph/source/stm32f37x_comp.c ****   * @{
 370:../stdperiph/source/stm32f37x_comp.c ****   */
 371:../stdperiph/source/stm32f37x_comp.c **** 
 372:../stdperiph/source/stm32f37x_comp.c **** /**
 373:../stdperiph/source/stm32f37x_comp.c ****   * @brief  Lock the selected comparator (COMP1/COMP2) configuration.
 374:../stdperiph/source/stm32f37x_comp.c ****   * @note   Locking the configuration means that all control bits are read-only.
 375:../stdperiph/source/stm32f37x_comp.c ****   *         To unlock the comparator configuration, perform a system reset.
 376:../stdperiph/source/stm32f37x_comp.c ****   * @param  COMP_Selection: selects the comparator to be locked 
 377:../stdperiph/source/stm32f37x_comp.c ****   *          This parameter can be a value of the following values:
 378:../stdperiph/source/stm32f37x_comp.c ****   *            @arg COMP_Selection_COMP1: COMP1 configuration is locked.
 379:../stdperiph/source/stm32f37x_comp.c ****   *            @arg COMP_Selection_COMP2: COMP2 configuration is locked.  
 380:../stdperiph/source/stm32f37x_comp.c ****   * @retval None
 381:../stdperiph/source/stm32f37x_comp.c ****   */
 382:../stdperiph/source/stm32f37x_comp.c **** void COMP_LockConfig(uint32_t COMP_Selection)
 383:../stdperiph/source/stm32f37x_comp.c **** {
 306              		.loc 1 383 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310              		@ link register save eliminated.
 311              	.LVL18:
 384:../stdperiph/source/stm32f37x_comp.c ****   /* Check the parameter */
 385:../stdperiph/source/stm32f37x_comp.c ****   assert_param(IS_COMP_ALL_PERIPH(COMP_Selection));
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1jt39y.s 			page 13


 386:../stdperiph/source/stm32f37x_comp.c **** 
 387:../stdperiph/source/stm32f37x_comp.c ****   /* Set the lock bit corresponding to selected comparator */
 388:../stdperiph/source/stm32f37x_comp.c ****   COMP->CSR |= (uint32_t) (COMP_CSR_COMP1LOCK<<COMP_Selection);
 312              		.loc 1 388 0
 313 0000 044A     		ldr	r2, .L30
 314 0002 1168     		ldr	r1, [r2]
 315 0004 4FF40043 		mov	r3, #32768
 316 0008 03FA00F0 		lsl	r0, r3, r0
 317              	.LVL19:
 318 000c 0843     		orrs	r0, r0, r1
 319 000e 1060     		str	r0, [r2]
 320 0010 7047     		bx	lr
 321              	.L31:
 322 0012 00BF     		.align	2
 323              	.L30:
 324 0014 1C000140 		.word	1073807388
 325              		.cfi_endproc
 326              	.LFE118:
 328              		.text
 329              	.Letext0:
 330              		.file 2 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\machine\\_defaul
 331              		.file 3 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\sys\\_stdint.h"
 332              		.file 4 "../cmsis/include/stm32f37x.h"
 333              		.file 5 "../stdperiph/include/stm32f37x_comp.h"
 334              		.file 6 "../cmsis/include/core_cm4.h"
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc1jt39y.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f37x_comp.c
C:\Users\strag\AppData\Local\Temp\cc1jt39y.s:22     .text.COMP_DeInit:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1jt39y.s:27     .text.COMP_DeInit:00000000 COMP_DeInit
C:\Users\strag\AppData\Local\Temp\cc1jt39y.s:43     .text.COMP_DeInit:00000008 $d
C:\Users\strag\AppData\Local\Temp\cc1jt39y.s:48     .text.COMP_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1jt39y.s:53     .text.COMP_Init:00000000 COMP_Init
C:\Users\strag\AppData\Local\Temp\cc1jt39y.s:109    .text.COMP_Init:00000030 $d
C:\Users\strag\AppData\Local\Temp\cc1jt39y.s:114    .text.COMP_StructInit:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1jt39y.s:119    .text.COMP_StructInit:00000000 COMP_StructInit
C:\Users\strag\AppData\Local\Temp\cc1jt39y.s:144    .text.COMP_Cmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1jt39y.s:149    .text.COMP_Cmd:00000000 COMP_Cmd
C:\Users\strag\AppData\Local\Temp\cc1jt39y.s:184    .text.COMP_Cmd:00000024 $d
C:\Users\strag\AppData\Local\Temp\cc1jt39y.s:189    .text.COMP_SwitchCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1jt39y.s:194    .text.COMP_SwitchCmd:00000000 COMP_SwitchCmd
C:\Users\strag\AppData\Local\Temp\cc1jt39y.s:220    .text.COMP_SwitchCmd:0000001c $d
C:\Users\strag\AppData\Local\Temp\cc1jt39y.s:225    .text.COMP_GetOutputLevel:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1jt39y.s:230    .text.COMP_GetOutputLevel:00000000 COMP_GetOutputLevel
C:\Users\strag\AppData\Local\Temp\cc1jt39y.s:258    .text.COMP_GetOutputLevel:00000018 $d
C:\Users\strag\AppData\Local\Temp\cc1jt39y.s:263    .text.COMP_WindowCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1jt39y.s:268    .text.COMP_WindowCmd:00000000 COMP_WindowCmd
C:\Users\strag\AppData\Local\Temp\cc1jt39y.s:294    .text.COMP_WindowCmd:0000001c $d
C:\Users\strag\AppData\Local\Temp\cc1jt39y.s:299    .text.COMP_LockConfig:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc1jt39y.s:304    .text.COMP_LockConfig:00000000 COMP_LockConfig
C:\Users\strag\AppData\Local\Temp\cc1jt39y.s:324    .text.COMP_LockConfig:00000014 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
