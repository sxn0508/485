ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f37x_sdadc.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.SDADC_DeInit,"ax",%progbits
  22              		.align	2
  23              		.global	SDADC_DeInit
  24              		.thumb
  25              		.thumb_func
  27              	SDADC_DeInit:
  28              	.LFB111:
  29              		.file 1 "../stdperiph/source/stm32f37x_sdadc.c"
   1:../stdperiph/source/stm32f37x_sdadc.c **** /**
   2:../stdperiph/source/stm32f37x_sdadc.c ****   ******************************************************************************
   3:../stdperiph/source/stm32f37x_sdadc.c ****   * @file    stm32f37x_sdadc.c
   4:../stdperiph/source/stm32f37x_sdadc.c ****   * @author  MCD Application Team
   5:../stdperiph/source/stm32f37x_sdadc.c ****   * @version V1.0.0
   6:../stdperiph/source/stm32f37x_sdadc.c ****   * @date    20-September-2012
   7:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../stdperiph/source/stm32f37x_sdadc.c ****   *          functionalities of the Sigma-Delta Analog to Digital Convertor
   9:../stdperiph/source/stm32f37x_sdadc.c ****   *          (SDADC) peripherals:
  10:../stdperiph/source/stm32f37x_sdadc.c ****   *           + Initialization and Configuration
  11:../stdperiph/source/stm32f37x_sdadc.c ****   *           + Regular Channels Configuration
  12:../stdperiph/source/stm32f37x_sdadc.c ****   *           + Injected channels Configuration
  13:../stdperiph/source/stm32f37x_sdadc.c ****   *           + Power saving
  14:../stdperiph/source/stm32f37x_sdadc.c ****   *           + Regular/Injected Channels DMA Configuration
  15:../stdperiph/source/stm32f37x_sdadc.c ****   *           + Interrupts and flags management
  16:../stdperiph/source/stm32f37x_sdadc.c ****   *         
  17:../stdperiph/source/stm32f37x_sdadc.c ****   *  @verbatim
  18:../stdperiph/source/stm32f37x_sdadc.c **** ================================================================================
  19:../stdperiph/source/stm32f37x_sdadc.c ****                       ##### How to use this driver #####
  20:../stdperiph/source/stm32f37x_sdadc.c **** ================================================================================
  21:../stdperiph/source/stm32f37x_sdadc.c ****     [..]
  22:../stdperiph/source/stm32f37x_sdadc.c ****     (#) Enable the SDADC analog interface by calling
  23:../stdperiph/source/stm32f37x_sdadc.c ****         PWR_SDADCAnalogCmd(PWR_SDADCAnalog_x, Enable);
  24:../stdperiph/source/stm32f37x_sdadc.c ****     (#) Enable the SDADC APB clock to get write access to SDADC registers using
  25:../stdperiph/source/stm32f37x_sdadc.c ****         RCC_APB1PeriphClockCmd() function
  26:../stdperiph/source/stm32f37x_sdadc.c ****         e.g.  To enable access to SDADC1 registers use
  27:../stdperiph/source/stm32f37x_sdadc.c ****         RCC_APB1PeriphClockCmd(RCC_APB1Periph_SDADC1, ENABLE);
  28:../stdperiph/source/stm32f37x_sdadc.c ****     (#) The SDADCs are clocked by APB1.
  29:../stdperiph/source/stm32f37x_sdadc.c ****         In order to get the SDADC running at the typical frequency (6 MHz
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 2


  30:../stdperiph/source/stm32f37x_sdadc.c ****         in fast mode), use SDADC prescaler by calling RCC_SDADCCLKConfig() function
  31:../stdperiph/source/stm32f37x_sdadc.c ****         e.g. if APB1 is clocked at 72MHz, to get the SDADC running at 6MHz
  32:../stdperiph/source/stm32f37x_sdadc.c ****         configure the SDADC prescaler at 12 by calling 
  33:../stdperiph/source/stm32f37x_sdadc.c ****         RCC_SDADCCLKConfig(RCC_SDADCCLK_SYSCLK_Div12);
  34:../stdperiph/source/stm32f37x_sdadc.c ****     (#) If required, perform the following configurations:
  35:../stdperiph/source/stm32f37x_sdadc.c ****         (++) Select the reference voltage using SDADC_VREFSelect() function
  36:../stdperiph/source/stm32f37x_sdadc.c ****         (++) Enable the power-down and standby modes using SDADC_PowerDownCmd()
  37:../stdperiph/source/stm32f37x_sdadc.c ****              and SDADC_StandbyCmd() functions respectively
  38:../stdperiph/source/stm32f37x_sdadc.c ****         (++) Enable the slow clock mode (SDADC running at 1.5 MHz) using
  39:../stdperiph/source/stm32f37x_sdadc.c ****              RCC_SDADCCLKConfig() and SDADC_SlowClockCmd() function
  40:../stdperiph/source/stm32f37x_sdadc.c ****              -@@- These configurations are allowed only when the SDADC is disabled.
  41:../stdperiph/source/stm32f37x_sdadc.c **** 
  42:../stdperiph/source/stm32f37x_sdadc.c ****     (#) Enable the SDADC peripheral using SDADC_Cmd() function.
  43:../stdperiph/source/stm32f37x_sdadc.c ****     (#) Enter initialization mode using SDADC_InitModeCmd() function
  44:../stdperiph/source/stm32f37x_sdadc.c ****         then wait for INITRDY flag to be set to confirm that the SDADC
  45:../stdperiph/source/stm32f37x_sdadc.c ****         is in initialization mode.
  46:../stdperiph/source/stm32f37x_sdadc.c ****     (#) Configure the analog inputs: gain, single ended mode, offset value and
  47:../stdperiph/source/stm32f37x_sdadc.c ****         commmon mode using SDADC_AINInit().
  48:../stdperiph/source/stm32f37x_sdadc.c ****         There are three possible configuration: SDADC_Conf_0, SDADC_Conf_1 and SDADC_Conf_2
  49:../stdperiph/source/stm32f37x_sdadc.c ****     (#) Associate the selected configuration to the channel using SDADC_ChannelConfig()
  50:../stdperiph/source/stm32f37x_sdadc.c ****     (#) For Regular channels group configuration
  51:../stdperiph/source/stm32f37x_sdadc.c ****         (++) use SDADC_Init() function to select the SDADC channel to be used
  52:../stdperiph/source/stm32f37x_sdadc.c ****              for regular conversion, the continuous mode...
  53:../stdperiph/source/stm32f37x_sdadc.c ****              -@@- Only software trigger or synchro with SDADC1 are possible
  54:../stdperiph/source/stm32f37x_sdadc.c ****                   for regular conversion
  55:../stdperiph/source/stm32f37x_sdadc.c ****     (#) For Injected channels group configuration
  56:../stdperiph/source/stm32f37x_sdadc.c ****         (++) Select the SDADC channel to be used for injected conversion 
  57:../stdperiph/source/stm32f37x_sdadc.c ****              using SDADC_InjectedChannelSelect()
  58:../stdperiph/source/stm32f37x_sdadc.c ****         (++) Select the external trigger SDADC_ExternalTrigInjectedConvConfig()
  59:../stdperiph/source/stm32f37x_sdadc.c ****              and the edge (rising, falling or both) using
  60:../stdperiph/source/stm32f37x_sdadc.c ****              SDADC_ExternalTrigInjectedConvEdgeConfig()
  61:../stdperiph/source/stm32f37x_sdadc.c ****              -@@- Software trigger and synchro with SDADC1 are possible
  62:../stdperiph/source/stm32f37x_sdadc.c ****     (#)  Exit initialization mode using SDADC_InitModeCmd() function
  63:../stdperiph/source/stm32f37x_sdadc.c **** 
  64:../stdperiph/source/stm32f37x_sdadc.c ****   *  @endverbatim
  65:../stdperiph/source/stm32f37x_sdadc.c ****   *         
  66:../stdperiph/source/stm32f37x_sdadc.c ****   ******************************************************************************
  67:../stdperiph/source/stm32f37x_sdadc.c ****   * @attention
  68:../stdperiph/source/stm32f37x_sdadc.c ****   *
  69:../stdperiph/source/stm32f37x_sdadc.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  70:../stdperiph/source/stm32f37x_sdadc.c ****   *
  71:../stdperiph/source/stm32f37x_sdadc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  72:../stdperiph/source/stm32f37x_sdadc.c ****   * You may not use this file except in compliance with the License.
  73:../stdperiph/source/stm32f37x_sdadc.c ****   * You may obtain a copy of the License at:
  74:../stdperiph/source/stm32f37x_sdadc.c ****   *
  75:../stdperiph/source/stm32f37x_sdadc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  76:../stdperiph/source/stm32f37x_sdadc.c ****   *
  77:../stdperiph/source/stm32f37x_sdadc.c ****   * Unless required by applicable law or agreed to in writing, software 
  78:../stdperiph/source/stm32f37x_sdadc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  79:../stdperiph/source/stm32f37x_sdadc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  80:../stdperiph/source/stm32f37x_sdadc.c ****   * See the License for the specific language governing permissions and
  81:../stdperiph/source/stm32f37x_sdadc.c ****   * limitations under the License.
  82:../stdperiph/source/stm32f37x_sdadc.c ****   *
  83:../stdperiph/source/stm32f37x_sdadc.c ****   ******************************************************************************
  84:../stdperiph/source/stm32f37x_sdadc.c ****   */ 
  85:../stdperiph/source/stm32f37x_sdadc.c **** 
  86:../stdperiph/source/stm32f37x_sdadc.c **** /* Includes ------------------------------------------------------------------*/
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 3


  87:../stdperiph/source/stm32f37x_sdadc.c **** #include "stm32f37x_sdadc.h"
  88:../stdperiph/source/stm32f37x_sdadc.c **** #include "stm32f37x_rcc.h"
  89:../stdperiph/source/stm32f37x_sdadc.c **** 
  90:../stdperiph/source/stm32f37x_sdadc.c **** /** @addtogroup STM32F37x_StdPeriph_Driver
  91:../stdperiph/source/stm32f37x_sdadc.c ****   * @{
  92:../stdperiph/source/stm32f37x_sdadc.c ****   */
  93:../stdperiph/source/stm32f37x_sdadc.c **** 
  94:../stdperiph/source/stm32f37x_sdadc.c **** /** @defgroup SDADC 
  95:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief SDADC driver modules
  96:../stdperiph/source/stm32f37x_sdadc.c ****   * @{
  97:../stdperiph/source/stm32f37x_sdadc.c ****   */
  98:../stdperiph/source/stm32f37x_sdadc.c **** 
  99:../stdperiph/source/stm32f37x_sdadc.c **** /* Private typedef -----------------------------------------------------------*/
 100:../stdperiph/source/stm32f37x_sdadc.c **** /* Private define ------------------------------------------------------------*/
 101:../stdperiph/source/stm32f37x_sdadc.c **** /* CR2 register Mask */
 102:../stdperiph/source/stm32f37x_sdadc.c **** #define CR2_CLEAR_MASK            ((uint32_t)0xFE30FFFF)
 103:../stdperiph/source/stm32f37x_sdadc.c **** 
 104:../stdperiph/source/stm32f37x_sdadc.c **** /* Private macro -------------------------------------------------------------*/
 105:../stdperiph/source/stm32f37x_sdadc.c **** /* Private variables ---------------------------------------------------------*/
 106:../stdperiph/source/stm32f37x_sdadc.c **** /* Private function prototypes -----------------------------------------------*/
 107:../stdperiph/source/stm32f37x_sdadc.c **** /* Private functions ---------------------------------------------------------*/
 108:../stdperiph/source/stm32f37x_sdadc.c **** 
 109:../stdperiph/source/stm32f37x_sdadc.c **** /** @defgroup SDADC_Private_Functions
 110:../stdperiph/source/stm32f37x_sdadc.c ****   * @{
 111:../stdperiph/source/stm32f37x_sdadc.c ****   */
 112:../stdperiph/source/stm32f37x_sdadc.c **** 
 113:../stdperiph/source/stm32f37x_sdadc.c **** /** @defgroup SDADC_Group1 Initialization and Configuration functions
 114:../stdperiph/source/stm32f37x_sdadc.c ****  *  @brief   Initialization and Configuration functions 
 115:../stdperiph/source/stm32f37x_sdadc.c ****  *
 116:../stdperiph/source/stm32f37x_sdadc.c **** @verbatim    
 117:../stdperiph/source/stm32f37x_sdadc.c ****  ===============================================================================
 118:../stdperiph/source/stm32f37x_sdadc.c ****           ##### Initialization and Configuration functions #####
 119:../stdperiph/source/stm32f37x_sdadc.c ****  ===============================================================================
 120:../stdperiph/source/stm32f37x_sdadc.c ****     [..] This section provides functions allowing to:
 121:../stdperiph/source/stm32f37x_sdadc.c ****         (+) Configure the SDADC analog inputs (gain, offset, single ended...)
 122:../stdperiph/source/stm32f37x_sdadc.c ****         (+) Select the SDADC regular conversion channels
 123:../stdperiph/source/stm32f37x_sdadc.c ****         (+) Enter/Exit the SDADC initialization mode
 124:../stdperiph/source/stm32f37x_sdadc.c ****         (+) SDADC fast conversion conversion mode configuration
 125:../stdperiph/source/stm32f37x_sdadc.c ****         (+) Select the reference voltage
 126:../stdperiph/source/stm32f37x_sdadc.c ****         (+) Enable/disable the SDADC peripheral
 127:../stdperiph/source/stm32f37x_sdadc.c ****         (+) Configure and start the SDADC calibration
 128:../stdperiph/source/stm32f37x_sdadc.c **** 
 129:../stdperiph/source/stm32f37x_sdadc.c **** @endverbatim
 130:../stdperiph/source/stm32f37x_sdadc.c ****   * @{
 131:../stdperiph/source/stm32f37x_sdadc.c ****   */
 132:../stdperiph/source/stm32f37x_sdadc.c **** 
 133:../stdperiph/source/stm32f37x_sdadc.c **** /**
 134:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Deinitializes SDADCx peripheral registers to their default reset values.
 135:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
 136:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
 137:../stdperiph/source/stm32f37x_sdadc.c ****   */
 138:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_DeInit(SDADC_TypeDef* SDADCx)
 139:../stdperiph/source/stm32f37x_sdadc.c **** {
  30              		.loc 1 139 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 4


  34              	.LVL0:
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 140:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
 141:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
 142:../stdperiph/source/stm32f37x_sdadc.c **** 
 143:../stdperiph/source/stm32f37x_sdadc.c ****   if(SDADCx == SDADC1)
  40              		.loc 1 143 0
  41 0002 134B     		ldr	r3, .L6
  42 0004 9842     		cmp	r0, r3
  43 0006 0AD1     		bne	.L2
 144:../stdperiph/source/stm32f37x_sdadc.c ****   {
 145:../stdperiph/source/stm32f37x_sdadc.c ****     /* Enable SDADC1 reset state */
 146:../stdperiph/source/stm32f37x_sdadc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDADC1, ENABLE);
  44              		.loc 1 146 0
  45 0008 0121     		movs	r1, #1
  46 000a 4FF08070 		mov	r0, #16777216
  47              	.LVL1:
  48 000e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  49              	.LVL2:
 147:../stdperiph/source/stm32f37x_sdadc.c ****     /* Release SDADC1 from reset state */
 148:../stdperiph/source/stm32f37x_sdadc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDADC1, DISABLE);
  50              		.loc 1 148 0
  51 0012 0021     		movs	r1, #0
  52 0014 4FF08070 		mov	r0, #16777216
  53 0018 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  54              	.LVL3:
  55 001c 08BD     		pop	{r3, pc}
  56              	.LVL4:
  57              	.L2:
 149:../stdperiph/source/stm32f37x_sdadc.c ****   }
 150:../stdperiph/source/stm32f37x_sdadc.c ****   else if(SDADCx == SDADC2)
  58              		.loc 1 150 0
  59 001e 0D4B     		ldr	r3, .L6+4
  60 0020 9842     		cmp	r0, r3
  61 0022 0AD1     		bne	.L4
 151:../stdperiph/source/stm32f37x_sdadc.c ****   {
 152:../stdperiph/source/stm32f37x_sdadc.c ****     /* Enable SDADC2 reset state */
 153:../stdperiph/source/stm32f37x_sdadc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDADC2, ENABLE);
  62              		.loc 1 153 0
  63 0024 0121     		movs	r1, #1
  64 0026 4FF00070 		mov	r0, #33554432
  65              	.LVL5:
  66 002a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  67              	.LVL6:
 154:../stdperiph/source/stm32f37x_sdadc.c ****     /* Release SDADC2 from reset state */
 155:../stdperiph/source/stm32f37x_sdadc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDADC2, DISABLE);
  68              		.loc 1 155 0
  69 002e 0021     		movs	r1, #0
  70 0030 4FF00070 		mov	r0, #33554432
  71 0034 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  72              	.LVL7:
  73 0038 08BD     		pop	{r3, pc}
  74              	.LVL8:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 5


  75              	.L4:
 156:../stdperiph/source/stm32f37x_sdadc.c ****   }
 157:../stdperiph/source/stm32f37x_sdadc.c ****   else
 158:../stdperiph/source/stm32f37x_sdadc.c ****   {
 159:../stdperiph/source/stm32f37x_sdadc.c ****     /* Enable SDADC3 reset state */
 160:../stdperiph/source/stm32f37x_sdadc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDADC3, ENABLE);
  76              		.loc 1 160 0
  77 003a 0121     		movs	r1, #1
  78 003c 4FF08060 		mov	r0, #67108864
  79              	.LVL9:
  80 0040 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  81              	.LVL10:
 161:../stdperiph/source/stm32f37x_sdadc.c ****     /* Release SDADC3 from reset state */
 162:../stdperiph/source/stm32f37x_sdadc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDADC3, DISABLE);
  82              		.loc 1 162 0
  83 0044 0021     		movs	r1, #0
  84 0046 4FF08060 		mov	r0, #67108864
  85 004a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  86              	.LVL11:
  87 004e 08BD     		pop	{r3, pc}
  88              	.L7:
  89              		.align	2
  90              	.L6:
  91 0050 00600140 		.word	1073831936
  92 0054 00640140 		.word	1073832960
  93              		.cfi_endproc
  94              	.LFE111:
  96              		.section	.text.SDADC_Init,"ax",%progbits
  97              		.align	2
  98              		.global	SDADC_Init
  99              		.thumb
 100              		.thumb_func
 102              	SDADC_Init:
 103              	.LFB112:
 163:../stdperiph/source/stm32f37x_sdadc.c ****   }
 164:../stdperiph/source/stm32f37x_sdadc.c **** }
 165:../stdperiph/source/stm32f37x_sdadc.c **** 
 166:../stdperiph/source/stm32f37x_sdadc.c **** /**
 167:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Initializes the SDADCx peripheral according to the specified parameters
 168:../stdperiph/source/stm32f37x_sdadc.c ****   *         in the SDADC_InitStruct.
 169:../stdperiph/source/stm32f37x_sdadc.c ****   * @note   SDADC_FastConversionMode can be modified only if the SDADC is disabled
 170:../stdperiph/source/stm32f37x_sdadc.c ****   *         or the INITRDY flag is set. Otherwise the configuration can't be modified.
 171:../stdperiph/source/stm32f37x_sdadc.c ****   * @note   Channel selection and continuous mode configuration affect only the 
 172:../stdperiph/source/stm32f37x_sdadc.c ****   *         regular channel.
 173:../stdperiph/source/stm32f37x_sdadc.c ****   * @note   Fast conversion mode is regardless of regular/injected conversion mode.
 174:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
 175:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADC_InitStruct: pointer to an SDADC_InitTypeDef structure that contains
 176:../stdperiph/source/stm32f37x_sdadc.c ****   *         the configuration information for the specified SDADC peripheral.
 177:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
 178:../stdperiph/source/stm32f37x_sdadc.c ****   */
 179:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_Init(SDADC_TypeDef* SDADCx, SDADC_InitTypeDef* SDADC_InitStruct)
 180:../stdperiph/source/stm32f37x_sdadc.c **** {
 104              		.loc 1 180 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 6


 109              	.LVL12:
 110 0000 10B4     		push	{r4}
 111              	.LCFI1:
 112              		.cfi_def_cfa_offset 4
 113              		.cfi_offset 4, -4
 114              	.LVL13:
 181:../stdperiph/source/stm32f37x_sdadc.c ****   uint32_t tmpcr2 = 0;
 182:../stdperiph/source/stm32f37x_sdadc.c **** 
 183:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
 184:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
 185:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_REGULAR_CHANNEL(SDADC_InitStruct->SDADC_Channel)); 
 186:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_FUNCTIONAL_STATE(SDADC_InitStruct->SDADC_ContinuousConvMode)); 
 187:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_FUNCTIONAL_STATE(SDADC_InitStruct->SDADC_FastConversionMode));
 188:../stdperiph/source/stm32f37x_sdadc.c **** 
 189:../stdperiph/source/stm32f37x_sdadc.c ****   /*---------------------------- SDADCx CR2 Configuration --------------------*/
 190:../stdperiph/source/stm32f37x_sdadc.c ****   /* Get the SDADCx_CR2 value */
 191:../stdperiph/source/stm32f37x_sdadc.c ****   tmpcr2 = SDADCx->CR2;
 115              		.loc 1 191 0
 116 0002 4368     		ldr	r3, [r0, #4]
 117              	.LVL14:
 192:../stdperiph/source/stm32f37x_sdadc.c **** 
 193:../stdperiph/source/stm32f37x_sdadc.c ****   /* Clear FAST, RCONT and RCH bits */
 194:../stdperiph/source/stm32f37x_sdadc.c ****   tmpcr2 &= CR2_CLEAR_MASK;
 118              		.loc 1 194 0
 119 0004 23F0E774 		bic	r4, r3, #30277632
 120 0008 24F48034 		bic	r4, r4, #65536
 121              	.LVL15:
 195:../stdperiph/source/stm32f37x_sdadc.c ****   /* Configure SDADCx: continuous mode for regular conversion, 
 196:../stdperiph/source/stm32f37x_sdadc.c ****      regular channel and fast conversion mode */
 197:../stdperiph/source/stm32f37x_sdadc.c ****   /* Set RCONT bit according to SDADC_ContinuousConvMode value */
 198:../stdperiph/source/stm32f37x_sdadc.c ****   /* Set FAST bit according to SDADC_FastConversionMode value */
 199:../stdperiph/source/stm32f37x_sdadc.c ****   /* Select the regular channel according to SDADC_Channel value */
 200:../stdperiph/source/stm32f37x_sdadc.c ****   tmpcr2 |= (uint32_t)(((uint32_t)SDADC_InitStruct->SDADC_ContinuousConvMode<<22) |
 122              		.loc 1 200 0
 123 000c 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 201:../stdperiph/source/stm32f37x_sdadc.c ****                        (SDADC_InitStruct->SDADC_FastConversionMode<<(uint32_t)24) |
 124              		.loc 1 201 0
 125 000e 4B79     		ldrb	r3, [r1, #5]	@ zero_extendqisi2
 126 0010 1B06     		lsls	r3, r3, #24
 200:../stdperiph/source/stm32f37x_sdadc.c ****                        (SDADC_InitStruct->SDADC_FastConversionMode<<(uint32_t)24) |
 127              		.loc 1 200 0
 128 0012 43EA8253 		orr	r3, r3, r2, lsl #22
 202:../stdperiph/source/stm32f37x_sdadc.c ****                        (SDADC_InitStruct->SDADC_Channel & SDADC_CR2_RCH));
 129              		.loc 1 202 0
 130 0016 0A68     		ldr	r2, [r1]
 131 0018 02F47022 		and	r2, r2, #983040
 200:../stdperiph/source/stm32f37x_sdadc.c ****                        (SDADC_InitStruct->SDADC_FastConversionMode<<(uint32_t)24) |
 132              		.loc 1 200 0
 133 001c 1343     		orrs	r3, r3, r2
 134 001e 2343     		orrs	r3, r3, r4
 135              	.LVL16:
 203:../stdperiph/source/stm32f37x_sdadc.c **** 
 204:../stdperiph/source/stm32f37x_sdadc.c ****   /* Write to SDADCx_CR2 */
 205:../stdperiph/source/stm32f37x_sdadc.c ****   SDADCx->CR2 = tmpcr2;
 136              		.loc 1 205 0
 137 0020 4360     		str	r3, [r0, #4]
 206:../stdperiph/source/stm32f37x_sdadc.c **** }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 7


 138              		.loc 1 206 0
 139 0022 5DF8044B 		ldr	r4, [sp], #4
 140              	.LCFI2:
 141              		.cfi_restore 4
 142              		.cfi_def_cfa_offset 0
 143 0026 7047     		bx	lr
 144              		.cfi_endproc
 145              	.LFE112:
 147              		.section	.text.SDADC_StructInit,"ax",%progbits
 148              		.align	2
 149              		.global	SDADC_StructInit
 150              		.thumb
 151              		.thumb_func
 153              	SDADC_StructInit:
 154              	.LFB113:
 207:../stdperiph/source/stm32f37x_sdadc.c **** 
 208:../stdperiph/source/stm32f37x_sdadc.c **** /**
 209:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Fills each SDADC_InitStruct member with its default value.  
 210:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADC_InitStruct: pointer to an SDADC_InitTypeDef structure which will 
 211:../stdperiph/source/stm32f37x_sdadc.c ****   *         be initialized.
 212:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
 213:../stdperiph/source/stm32f37x_sdadc.c ****   */
 214:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_StructInit(SDADC_InitTypeDef* SDADC_InitStruct)                            
 215:../stdperiph/source/stm32f37x_sdadc.c **** {
 155              		.loc 1 215 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              		@ link register save eliminated.
 160              	.LVL17:
 216:../stdperiph/source/stm32f37x_sdadc.c ****   /* Reset SDADC init structure parameters values */
 217:../stdperiph/source/stm32f37x_sdadc.c **** 
 218:../stdperiph/source/stm32f37x_sdadc.c ****   /* Initialize the SDADC_Channel member */
 219:../stdperiph/source/stm32f37x_sdadc.c ****   SDADC_InitStruct->SDADC_Channel = SDADC_Channel_0;
 161              		.loc 1 219 0
 162 0000 0123     		movs	r3, #1
 163 0002 0360     		str	r3, [r0]
 220:../stdperiph/source/stm32f37x_sdadc.c **** 
 221:../stdperiph/source/stm32f37x_sdadc.c ****   /* Initialize the SDADC_ContinuousConvMode member */
 222:../stdperiph/source/stm32f37x_sdadc.c ****   SDADC_InitStruct->SDADC_ContinuousConvMode = DISABLE;
 164              		.loc 1 222 0
 165 0004 0023     		movs	r3, #0
 166 0006 0371     		strb	r3, [r0, #4]
 223:../stdperiph/source/stm32f37x_sdadc.c **** 
 224:../stdperiph/source/stm32f37x_sdadc.c ****   /* Initialize the SDADC_FastConversionMode member */
 225:../stdperiph/source/stm32f37x_sdadc.c ****   SDADC_InitStruct->SDADC_FastConversionMode = DISABLE;
 167              		.loc 1 225 0
 168 0008 4371     		strb	r3, [r0, #5]
 169 000a 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE113:
 173              		.section	.text.SDADC_AINInit,"ax",%progbits
 174              		.align	2
 175              		.global	SDADC_AINInit
 176              		.thumb
 177              		.thumb_func
 179              	SDADC_AINInit:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 8


 180              	.LFB114:
 226:../stdperiph/source/stm32f37x_sdadc.c **** }
 227:../stdperiph/source/stm32f37x_sdadc.c **** 
 228:../stdperiph/source/stm32f37x_sdadc.c **** /**
 229:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Configures the analog input mode.
 230:../stdperiph/source/stm32f37x_sdadc.c ****   * @note   This function can be used only if the SDADC is disabled 
 231:../stdperiph/source/stm32f37x_sdadc.c ****   *         or the INITRDY flag is set. Otherwise the configuration can't be modified.
 232:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
 233:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADC_AINStruct: pointer to an SDADC_AINStructTypeDef structure that contains 
 234:../stdperiph/source/stm32f37x_sdadc.c ****   *         the analog inputs configuration information for the specified SDADC peripheral.
 235:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
 236:../stdperiph/source/stm32f37x_sdadc.c ****   */
 237:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_AINInit(SDADC_TypeDef* SDADCx, uint32_t SDADC_Conf, SDADC_AINStructTypeDef* SDADC_AINStr
 238:../stdperiph/source/stm32f37x_sdadc.c **** {
 181              		.loc 1 238 0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185              		@ link register save eliminated.
 186              	.LVL18:
 187 0000 10B4     		push	{r4}
 188              	.LCFI3:
 189              		.cfi_def_cfa_offset 4
 190              		.cfi_offset 4, -4
 191              	.LVL19:
 239:../stdperiph/source/stm32f37x_sdadc.c ****   uint32_t tmp = 0;
 240:../stdperiph/source/stm32f37x_sdadc.c **** 
 241:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
 242:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
 243:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_CONF(SDADC_Conf));
 244:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_INPUT_MODE(SDADC_AINStruct->SDADC_InputMode));
 245:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_GAIN(SDADC_AINStruct->SDADC_Gain));
 246:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_COMMON_MODE(SDADC_AINStruct->SDADC_CommonMode));
 247:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_OFFSET_VALUE(SDADC_AINStruct->SDADC_Offset));
 248:../stdperiph/source/stm32f37x_sdadc.c **** 
 249:../stdperiph/source/stm32f37x_sdadc.c ****   /* Get the ASDACx address */
 250:../stdperiph/source/stm32f37x_sdadc.c ****   tmp = (uint32_t)((uint32_t)SDADCx + 0x00000020);
 192              		.loc 1 250 0
 193 0002 2030     		adds	r0, r0, #32
 194              	.LVL20:
 251:../stdperiph/source/stm32f37x_sdadc.c ****   /* Get the ASDACx CONFxR value: depending SDADC_Conf, analog input configuration
 252:../stdperiph/source/stm32f37x_sdadc.c ****      is set to CONF0R, CONF1R or CONF2R register */
 253:../stdperiph/source/stm32f37x_sdadc.c ****   tmp = (uint32_t)(SDADC_Conf << 2) + tmp;
 254:../stdperiph/source/stm32f37x_sdadc.c **** 
 255:../stdperiph/source/stm32f37x_sdadc.c ****   /* Set the analog input configuration to the selected CONFxR register */
 256:../stdperiph/source/stm32f37x_sdadc.c ****   *(__IO uint32_t *) (tmp) = (uint32_t) (SDADC_AINStruct->SDADC_InputMode |
 195              		.loc 1 256 0
 196 0004 1468     		ldr	r4, [r2]
 257:../stdperiph/source/stm32f37x_sdadc.c ****                                          SDADC_AINStruct->SDADC_Gain |
 197              		.loc 1 257 0
 198 0006 5368     		ldr	r3, [r2, #4]
 256:../stdperiph/source/stm32f37x_sdadc.c ****                                          SDADC_AINStruct->SDADC_Gain |
 199              		.loc 1 256 0
 200 0008 1C43     		orrs	r4, r4, r3
 258:../stdperiph/source/stm32f37x_sdadc.c ****                                          SDADC_AINStruct->SDADC_CommonMode |
 201              		.loc 1 258 0
 202 000a 9368     		ldr	r3, [r2, #8]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 9


 257:../stdperiph/source/stm32f37x_sdadc.c ****                                          SDADC_AINStruct->SDADC_Gain |
 203              		.loc 1 257 0
 204 000c 1C43     		orrs	r4, r4, r3
 259:../stdperiph/source/stm32f37x_sdadc.c ****                                          SDADC_AINStruct->SDADC_Offset);
 205              		.loc 1 259 0
 206 000e D368     		ldr	r3, [r2, #12]
 258:../stdperiph/source/stm32f37x_sdadc.c ****                                          SDADC_AINStruct->SDADC_CommonMode |
 207              		.loc 1 258 0
 208 0010 2343     		orrs	r3, r3, r4
 256:../stdperiph/source/stm32f37x_sdadc.c ****                                          SDADC_AINStruct->SDADC_Gain |
 209              		.loc 1 256 0
 210 0012 40F82130 		str	r3, [r0, r1, lsl #2]
 260:../stdperiph/source/stm32f37x_sdadc.c **** }
 211              		.loc 1 260 0
 212 0016 5DF8044B 		ldr	r4, [sp], #4
 213              	.LCFI4:
 214              		.cfi_restore 4
 215              		.cfi_def_cfa_offset 0
 216 001a 7047     		bx	lr
 217              		.cfi_endproc
 218              	.LFE114:
 220              		.section	.text.SDADC_AINStructInit,"ax",%progbits
 221              		.align	2
 222              		.global	SDADC_AINStructInit
 223              		.thumb
 224              		.thumb_func
 226              	SDADC_AINStructInit:
 227              	.LFB115:
 261:../stdperiph/source/stm32f37x_sdadc.c **** 
 262:../stdperiph/source/stm32f37x_sdadc.c **** /**
 263:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Fills each SDADC_AINStruct member with its default value.
 264:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADC_AINStruct: pointer to an SDADC_AINStructTypeDef structure which will 
 265:../stdperiph/source/stm32f37x_sdadc.c ****   *         be initialized.
 266:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
 267:../stdperiph/source/stm32f37x_sdadc.c ****   */
 268:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_AINStructInit(SDADC_AINStructTypeDef* SDADC_AINStruct)
 269:../stdperiph/source/stm32f37x_sdadc.c **** {
 228              		.loc 1 269 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              		@ link register save eliminated.
 233              	.LVL21:
 270:../stdperiph/source/stm32f37x_sdadc.c ****   /* Reset SDADC AIN configuration parameters values */
 271:../stdperiph/source/stm32f37x_sdadc.c **** 
 272:../stdperiph/source/stm32f37x_sdadc.c ****   /* Initialize the SDADC_Input member */
 273:../stdperiph/source/stm32f37x_sdadc.c ****   SDADC_AINStruct->SDADC_InputMode = SDADC_InputMode_Diff;
 234              		.loc 1 273 0
 235 0000 0023     		movs	r3, #0
 236 0002 0360     		str	r3, [r0]
 274:../stdperiph/source/stm32f37x_sdadc.c **** 
 275:../stdperiph/source/stm32f37x_sdadc.c ****   /* Initialize the SDADC_Gain member */
 276:../stdperiph/source/stm32f37x_sdadc.c ****   SDADC_AINStruct->SDADC_Gain = SDADC_Gain_1;
 237              		.loc 1 276 0
 238 0004 4360     		str	r3, [r0, #4]
 277:../stdperiph/source/stm32f37x_sdadc.c **** 
 278:../stdperiph/source/stm32f37x_sdadc.c ****   /* Initialize the SDADC_CommonMode member */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 10


 279:../stdperiph/source/stm32f37x_sdadc.c ****   SDADC_AINStruct->SDADC_CommonMode = SDADC_CommonMode_VSSA;
 239              		.loc 1 279 0
 240 0006 8360     		str	r3, [r0, #8]
 280:../stdperiph/source/stm32f37x_sdadc.c **** 
 281:../stdperiph/source/stm32f37x_sdadc.c ****   /* Initialize the SDADC_Offset member */
 282:../stdperiph/source/stm32f37x_sdadc.c ****   SDADC_AINStruct->SDADC_Offset = 0;
 241              		.loc 1 282 0
 242 0008 C360     		str	r3, [r0, #12]
 243 000a 7047     		bx	lr
 244              		.cfi_endproc
 245              	.LFE115:
 247              		.section	.text.SDADC_ChannelConfig,"ax",%progbits
 248              		.align	2
 249              		.global	SDADC_ChannelConfig
 250              		.thumb
 251              		.thumb_func
 253              	SDADC_ChannelConfig:
 254              	.LFB116:
 283:../stdperiph/source/stm32f37x_sdadc.c **** }
 284:../stdperiph/source/stm32f37x_sdadc.c **** 
 285:../stdperiph/source/stm32f37x_sdadc.c **** /**
 286:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Configures the SDADCx channel.
 287:../stdperiph/source/stm32f37x_sdadc.c ****   * @note   SDADC channel configuration can be modified only if the SDADC is disabled
 288:../stdperiph/source/stm32f37x_sdadc.c ****   *         or the INITRDY flag is set. Otherwise the configuration can't be modified.  
 289:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
 290:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADC_Channel: The SDADC injected channel.
 291:../stdperiph/source/stm32f37x_sdadc.c ****   *          This parameter can be one of the following values:
 292:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_0: SDADC Channel 0 selected
 293:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_1: SDADC Channel 1 selected
 294:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_2: SDADC Channel 2 selected
 295:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_3: SDADC Channel 3 selected
 296:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_4: SDADC Channel 4 selected
 297:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_5: SDADC Channel 5 selected
 298:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_6: SDADC Channel 6 selected
 299:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_7: SDADC Channel 7 selected
 300:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_8: SDADC Channel 8 selected
 301:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADC_Conf: The SDADC input configuration.
 302:../stdperiph/source/stm32f37x_sdadc.c ****   *          This parameter can be one of the following values:
 303:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Conf_0: SDADC Conf 0 selected
 304:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Conf_1: SDADC Conf 1 selected
 305:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Conf_2: SDADC Conf 2 selected
 306:../stdperiph/source/stm32f37x_sdadc.c ****   * @note   The SDADC configuration (Conf 0, Conf 1, Conf 2) should be performed
 307:../stdperiph/source/stm32f37x_sdadc.c ****   *         using SDADC_AINInit()
 308:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
 309:../stdperiph/source/stm32f37x_sdadc.c ****   */
 310:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_ChannelConfig(SDADC_TypeDef* SDADCx, uint32_t SDADC_Channel, uint32_t SDADC_Conf)
 311:../stdperiph/source/stm32f37x_sdadc.c **** {
 255              		.loc 1 311 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259              		@ link register save eliminated.
 260              	.LVL22:
 312:../stdperiph/source/stm32f37x_sdadc.c ****   uint32_t channelnum = 0;
 313:../stdperiph/source/stm32f37x_sdadc.c **** 
 314:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
 315:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 11


 316:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_INJECTED_CHANNEL(SDADC_Channel));
 317:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_CONF(SDADC_Conf));
 318:../stdperiph/source/stm32f37x_sdadc.c **** 
 319:../stdperiph/source/stm32f37x_sdadc.c ****   /*----------------------- SDADCx CONFCHRx Configuration --------------------*/
 320:../stdperiph/source/stm32f37x_sdadc.c ****   if(SDADC_Channel != SDADC_Channel_8)
 261              		.loc 1 320 0
 262 0000 064B     		ldr	r3, .L17
 263 0002 9942     		cmp	r1, r3
 264 0004 07D0     		beq	.L15
 321:../stdperiph/source/stm32f37x_sdadc.c ****   {
 322:../stdperiph/source/stm32f37x_sdadc.c ****     /* Get channel number */
 323:../stdperiph/source/stm32f37x_sdadc.c ****     channelnum = (uint32_t)(SDADC_Channel>>16);
 265              		.loc 1 323 0
 266 0006 090C     		lsrs	r1, r1, #16
 267              	.LVL23:
 324:../stdperiph/source/stm32f37x_sdadc.c ****     /* Set the channel configuration */
 325:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CONFCHR1 |= (uint32_t) (SDADC_Conf << (channelnum << 2));
 268              		.loc 1 325 0
 269 0008 036C     		ldr	r3, [r0, #64]
 270 000a 8900     		lsls	r1, r1, #2
 271              	.LVL24:
 272 000c 02FA01F1 		lsl	r1, r2, r1
 273 0010 1943     		orrs	r1, r1, r3
 274 0012 0164     		str	r1, [r0, #64]
 275 0014 7047     		bx	lr
 276              	.LVL25:
 277              	.L15:
 326:../stdperiph/source/stm32f37x_sdadc.c ****   }
 327:../stdperiph/source/stm32f37x_sdadc.c ****   else
 328:../stdperiph/source/stm32f37x_sdadc.c ****   {
 329:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CONFCHR2 = (uint32_t) (SDADC_Conf);
 278              		.loc 1 329 0
 279 0016 4264     		str	r2, [r0, #68]
 280 0018 7047     		bx	lr
 281              	.L18:
 282 001a 00BF     		.align	2
 283              	.L17:
 284 001c 00010800 		.word	524544
 285              		.cfi_endproc
 286              	.LFE116:
 288              		.section	.text.SDADC_Cmd,"ax",%progbits
 289              		.align	2
 290              		.global	SDADC_Cmd
 291              		.thumb
 292              		.thumb_func
 294              	SDADC_Cmd:
 295              	.LFB117:
 330:../stdperiph/source/stm32f37x_sdadc.c ****   }
 331:../stdperiph/source/stm32f37x_sdadc.c **** }
 332:../stdperiph/source/stm32f37x_sdadc.c **** 
 333:../stdperiph/source/stm32f37x_sdadc.c **** /**
 334:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Enables or disables the specified SDADC peripheral.
 335:../stdperiph/source/stm32f37x_sdadc.c ****   * @note   When disabled, power down mode is entered, the flags and the data
 336:../stdperiph/source/stm32f37x_sdadc.c ****   *         are cleared.
 337:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
 338:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  NewState: new state of the SDADCx peripheral.
 339:../stdperiph/source/stm32f37x_sdadc.c ****   *          This parameter can be: ENABLE or DISABLE.
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 12


 340:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
 341:../stdperiph/source/stm32f37x_sdadc.c ****   */
 342:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_Cmd(SDADC_TypeDef* SDADCx, FunctionalState NewState)
 343:../stdperiph/source/stm32f37x_sdadc.c **** {
 296              		.loc 1 343 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              		@ link register save eliminated.
 301              	.LVL26:
 344:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
 345:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
 346:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 347:../stdperiph/source/stm32f37x_sdadc.c **** 
 348:../stdperiph/source/stm32f37x_sdadc.c ****   if (NewState != DISABLE)
 302              		.loc 1 348 0
 303 0000 21B1     		cbz	r1, .L20
 349:../stdperiph/source/stm32f37x_sdadc.c ****   {
 350:../stdperiph/source/stm32f37x_sdadc.c ****     /* Set the ADON bit to enable the SDADC */
 351:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR2 |= (uint32_t)SDADC_CR2_ADON;
 304              		.loc 1 351 0
 305 0002 4368     		ldr	r3, [r0, #4]
 306 0004 43F00103 		orr	r3, r3, #1
 307 0008 4360     		str	r3, [r0, #4]
 308 000a 7047     		bx	lr
 309              	.L20:
 352:../stdperiph/source/stm32f37x_sdadc.c ****   }
 353:../stdperiph/source/stm32f37x_sdadc.c ****   else
 354:../stdperiph/source/stm32f37x_sdadc.c ****   {
 355:../stdperiph/source/stm32f37x_sdadc.c ****     /* Reset the ADON bit to disable the SDADC */
 356:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR2 &= (uint32_t)(~SDADC_CR2_ADON);
 310              		.loc 1 356 0
 311 000c 4368     		ldr	r3, [r0, #4]
 312 000e 23F00103 		bic	r3, r3, #1
 313 0012 4360     		str	r3, [r0, #4]
 314 0014 7047     		bx	lr
 315              		.cfi_endproc
 316              	.LFE117:
 318 0016 00BF     		.section	.text.SDADC_InitModeCmd,"ax",%progbits
 319              		.align	2
 320              		.global	SDADC_InitModeCmd
 321              		.thumb
 322              		.thumb_func
 324              	SDADC_InitModeCmd:
 325              	.LFB118:
 357:../stdperiph/source/stm32f37x_sdadc.c ****   }
 358:../stdperiph/source/stm32f37x_sdadc.c **** }
 359:../stdperiph/source/stm32f37x_sdadc.c **** 
 360:../stdperiph/source/stm32f37x_sdadc.c **** /**
 361:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Enables or disables the initialization mode for specified SDADC peripheral.
 362:../stdperiph/source/stm32f37x_sdadc.c ****   * @note   Initialization mode should be enabled before setting the analog input
 363:../stdperiph/source/stm32f37x_sdadc.c ****   *         configuration, the fast conversion mode, the external trigger...
 364:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
 365:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  NewState: new state of the SDADCx peripheral.
 366:../stdperiph/source/stm32f37x_sdadc.c ****   *          This parameter can be: ENABLE or DISABLE.
 367:../stdperiph/source/stm32f37x_sdadc.c ****   *         When enabled, the SDADCx is in initialization mode and the SDADCx can
 368:../stdperiph/source/stm32f37x_sdadc.c ****   *         be configured (except: power down mode, standby mode, slow clock and VREF selection).
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 13


 369:../stdperiph/source/stm32f37x_sdadc.c ****   *         When disabled, the SDADCx isn't in initialization mode and limited
 370:../stdperiph/source/stm32f37x_sdadc.c ****   *         configurations are allowed (regular channel selection, software trigger)
 371:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
 372:../stdperiph/source/stm32f37x_sdadc.c ****   */
 373:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_InitModeCmd(SDADC_TypeDef* SDADCx, FunctionalState NewState)
 374:../stdperiph/source/stm32f37x_sdadc.c **** {
 326              		.loc 1 374 0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 330              		@ link register save eliminated.
 331              	.LVL27:
 375:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
 376:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
 377:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 378:../stdperiph/source/stm32f37x_sdadc.c **** 
 379:../stdperiph/source/stm32f37x_sdadc.c ****   if (NewState != DISABLE)
 332              		.loc 1 379 0
 333 0000 21B1     		cbz	r1, .L23
 380:../stdperiph/source/stm32f37x_sdadc.c ****   {
 381:../stdperiph/source/stm32f37x_sdadc.c ****     /* Set the INIT bit to enter initialization mode */
 382:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR1 |= (uint32_t)SDADC_CR1_INIT;
 334              		.loc 1 382 0
 335 0002 0368     		ldr	r3, [r0]
 336 0004 43F00043 		orr	r3, r3, #-2147483648
 337 0008 0360     		str	r3, [r0]
 338 000a 7047     		bx	lr
 339              	.L23:
 383:../stdperiph/source/stm32f37x_sdadc.c ****   }
 384:../stdperiph/source/stm32f37x_sdadc.c ****   else
 385:../stdperiph/source/stm32f37x_sdadc.c ****   {
 386:../stdperiph/source/stm32f37x_sdadc.c ****     /* Reset the INIT bit to exit initialization mode */
 387:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR1 &= (uint32_t)(~SDADC_CR1_INIT);
 340              		.loc 1 387 0
 341 000c 0368     		ldr	r3, [r0]
 342 000e 23F00043 		bic	r3, r3, #-2147483648
 343 0012 0360     		str	r3, [r0]
 344 0014 7047     		bx	lr
 345              		.cfi_endproc
 346              	.LFE118:
 348 0016 00BF     		.section	.text.SDADC_FastConversionCmd,"ax",%progbits
 349              		.align	2
 350              		.global	SDADC_FastConversionCmd
 351              		.thumb
 352              		.thumb_func
 354              	SDADC_FastConversionCmd:
 355              	.LFB119:
 388:../stdperiph/source/stm32f37x_sdadc.c ****   }
 389:../stdperiph/source/stm32f37x_sdadc.c **** }
 390:../stdperiph/source/stm32f37x_sdadc.c **** 
 391:../stdperiph/source/stm32f37x_sdadc.c **** /**
 392:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Enables or disables the fast conversion mode for the SDADC.
 393:../stdperiph/source/stm32f37x_sdadc.c ****   * @note   When converting a single channel in continuous mode, having enabled
 394:../stdperiph/source/stm32f37x_sdadc.c ****   *         fast mode causes each conversion (except for the first) to execute
 395:../stdperiph/source/stm32f37x_sdadc.c ****   *         3 times faster (taking 120 SDADC cycles rather than 360).
 396:../stdperiph/source/stm32f37x_sdadc.c ****   *         Fast conversion mode has no meaning for conversions which are not continuous.
 397:../stdperiph/source/stm32f37x_sdadc.c ****   * @note   fast conversion mode can be modified only if the SDADC is disabled
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 14


 398:../stdperiph/source/stm32f37x_sdadc.c ****   *         or the INITRDY flag is set. Otherwise the configuration can't be modified.    
 399:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
 400:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  NewState: new state of the selected SDADC fast conversion mode
 401:../stdperiph/source/stm32f37x_sdadc.c ****   *          This parameter can be: ENABLE or DISABLE.
 402:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
 403:../stdperiph/source/stm32f37x_sdadc.c ****   */
 404:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_FastConversionCmd(SDADC_TypeDef* SDADCx, FunctionalState NewState)
 405:../stdperiph/source/stm32f37x_sdadc.c **** {
 356              		.loc 1 405 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360              		@ link register save eliminated.
 361              	.LVL28:
 406:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
 407:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
 408:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 409:../stdperiph/source/stm32f37x_sdadc.c **** 
 410:../stdperiph/source/stm32f37x_sdadc.c ****   if (NewState != DISABLE)
 362              		.loc 1 410 0
 363 0000 21B1     		cbz	r1, .L26
 411:../stdperiph/source/stm32f37x_sdadc.c ****   {
 412:../stdperiph/source/stm32f37x_sdadc.c ****     /* Enable the fast conversion mode */
 413:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR2 |= SDADC_CR2_FAST;
 364              		.loc 1 413 0
 365 0002 4368     		ldr	r3, [r0, #4]
 366 0004 43F08073 		orr	r3, r3, #16777216
 367 0008 4360     		str	r3, [r0, #4]
 368 000a 7047     		bx	lr
 369              	.L26:
 414:../stdperiph/source/stm32f37x_sdadc.c ****   }
 415:../stdperiph/source/stm32f37x_sdadc.c ****   else
 416:../stdperiph/source/stm32f37x_sdadc.c ****   {
 417:../stdperiph/source/stm32f37x_sdadc.c ****     /* Disable the fast conversion mode */
 418:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR2 &= (uint32_t)(~SDADC_CR2_FAST);
 370              		.loc 1 418 0
 371 000c 4368     		ldr	r3, [r0, #4]
 372 000e 23F08073 		bic	r3, r3, #16777216
 373 0012 4360     		str	r3, [r0, #4]
 374 0014 7047     		bx	lr
 375              		.cfi_endproc
 376              	.LFE119:
 378 0016 00BF     		.section	.text.SDADC_VREFSelect,"ax",%progbits
 379              		.align	2
 380              		.global	SDADC_VREFSelect
 381              		.thumb
 382              		.thumb_func
 384              	SDADC_VREFSelect:
 385              	.LFB120:
 419:../stdperiph/source/stm32f37x_sdadc.c ****   }
 420:../stdperiph/source/stm32f37x_sdadc.c **** }
 421:../stdperiph/source/stm32f37x_sdadc.c **** 
 422:../stdperiph/source/stm32f37x_sdadc.c **** /**
 423:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Selects the reference voltage.
 424:../stdperiph/source/stm32f37x_sdadc.c ****   * @note   The reference voltage is common to the all SDADCs (SDADC1, SDADC2 and SDADC3).
 425:../stdperiph/source/stm32f37x_sdadc.c ****   *         The reference voltage selection is available only in SDADC1 and therefore
 426:../stdperiph/source/stm32f37x_sdadc.c ****   *         to select the VREF for SDADC2/SDADC3, SDADC1 clock must be already enabled.
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 15


 427:../stdperiph/source/stm32f37x_sdadc.c ****   * @note   The reference voltage selection can be performed only when the SDADC
 428:../stdperiph/source/stm32f37x_sdadc.c ****   *         is disabled.
 429:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADC_VREF: Reference voltage selection.
 430:../stdperiph/source/stm32f37x_sdadc.c ****   *          This parameter can be one of the following values:
 431:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_VREF_Ext: The reference voltage is forced externally using VREF pin
 432:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_VREF_VREFINT1: The reference voltage is forced internally to 1.22V VREFIN
 433:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_VREF_VREFINT2: The reference voltage is forced internally to 1.8V VREFINT
 434:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_VREF_VDDA: The reference voltage is forced internally to VDDA
 435:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
 436:../stdperiph/source/stm32f37x_sdadc.c ****   */
 437:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_VREFSelect(uint32_t SDADC_VREF)
 438:../stdperiph/source/stm32f37x_sdadc.c **** {
 386              		.loc 1 438 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390              		@ link register save eliminated.
 391              	.LVL29:
 439:../stdperiph/source/stm32f37x_sdadc.c **** uint32_t tmpcr1;
 440:../stdperiph/source/stm32f37x_sdadc.c **** 
 441:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameter */
 442:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_VREF(SDADC_VREF));
 443:../stdperiph/source/stm32f37x_sdadc.c **** 
 444:../stdperiph/source/stm32f37x_sdadc.c ****   /* Get SDADC1_CR1 register value */
 445:../stdperiph/source/stm32f37x_sdadc.c ****   tmpcr1 = SDADC1->CR1;
 392              		.loc 1 445 0
 393 0000 034A     		ldr	r2, .L29
 394 0002 1368     		ldr	r3, [r2]
 395              	.LVL30:
 446:../stdperiph/source/stm32f37x_sdadc.c **** 
 447:../stdperiph/source/stm32f37x_sdadc.c ****   /* Clear the SDADC1_CR1_REFV bits */
 448:../stdperiph/source/stm32f37x_sdadc.c ****   tmpcr1 &= (uint32_t) (~SDADC_CR1_REFV);
 396              		.loc 1 448 0
 397 0004 23F44073 		bic	r3, r3, #768
 398              	.LVL31:
 449:../stdperiph/source/stm32f37x_sdadc.c ****   /* Select the reference voltage */
 450:../stdperiph/source/stm32f37x_sdadc.c ****   tmpcr1 |= SDADC_VREF;
 399              		.loc 1 450 0
 400 0008 1843     		orrs	r0, r0, r3
 401              	.LVL32:
 451:../stdperiph/source/stm32f37x_sdadc.c **** 
 452:../stdperiph/source/stm32f37x_sdadc.c ****   /* Write in SDADC_CR1 */
 453:../stdperiph/source/stm32f37x_sdadc.c ****   SDADC1->CR1 = tmpcr1;
 402              		.loc 1 453 0
 403 000a 1060     		str	r0, [r2]
 404 000c 7047     		bx	lr
 405              	.L30:
 406 000e 00BF     		.align	2
 407              	.L29:
 408 0010 00600140 		.word	1073831936
 409              		.cfi_endproc
 410              	.LFE120:
 412              		.section	.text.SDADC_CalibrationSequenceConfig,"ax",%progbits
 413              		.align	2
 414              		.global	SDADC_CalibrationSequenceConfig
 415              		.thumb
 416              		.thumb_func
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 16


 418              	SDADC_CalibrationSequenceConfig:
 419              	.LFB121:
 454:../stdperiph/source/stm32f37x_sdadc.c **** }
 455:../stdperiph/source/stm32f37x_sdadc.c **** 
 456:../stdperiph/source/stm32f37x_sdadc.c **** /**
 457:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Configures the calibration sequence.
 458:../stdperiph/source/stm32f37x_sdadc.c ****   * @note   After calling SDADC_CalibrationSequenceConfig(), use SDADC_StartCalibration()
 459:../stdperiph/source/stm32f37x_sdadc.c ****   *         to start the calibration process.
 460:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
 461:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADC_CalibrationSequence: Number of calibration sequence to be performed.
 462:../stdperiph/source/stm32f37x_sdadc.c ****   *          This parameter can be one of the following values:
 463:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_CalibrationSequence_1: One calibration sequence will be performed
 464:../stdperiph/source/stm32f37x_sdadc.c ****   *                                      to calculate OFFSET0[11:0] (offset that corresponds to con
 465:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_CalibrationSequence_2: Two calibration sequences will be performed
 466:../stdperiph/source/stm32f37x_sdadc.c ****   *                                      to calculate OFFSET0[11:0] and OFFSET1[11:0]
 467:../stdperiph/source/stm32f37x_sdadc.c ****   *                                      (offsets that correspond to conf0 and conf1)
 468:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_CalibrationSequence_3: Three calibration sequences will be performed
 469:../stdperiph/source/stm32f37x_sdadc.c ****   *                                      to calculate OFFSET0[11:0], OFFSET1[11:0], 
 470:../stdperiph/source/stm32f37x_sdadc.c ****   *                                      and OFFSET2[11:0] (offsets that correspond to conf0, conf1
 471:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
 472:../stdperiph/source/stm32f37x_sdadc.c ****   */
 473:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_CalibrationSequenceConfig(SDADC_TypeDef* SDADCx, uint32_t SDADC_CalibrationSequence)
 474:../stdperiph/source/stm32f37x_sdadc.c **** {
 420              		.loc 1 474 0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 0
 423              		@ frame_needed = 0, uses_anonymous_args = 0
 424              		@ link register save eliminated.
 425              	.LVL33:
 475:../stdperiph/source/stm32f37x_sdadc.c ****   uint32_t tmpcr2;
 476:../stdperiph/source/stm32f37x_sdadc.c **** 
 477:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
 478:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
 479:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_CALIB_SEQUENCE(SDADC_CalibrationSequence));
 480:../stdperiph/source/stm32f37x_sdadc.c **** 
 481:../stdperiph/source/stm32f37x_sdadc.c ****   /* Get SDADC_CR2 register value */
 482:../stdperiph/source/stm32f37x_sdadc.c ****   tmpcr2 = SDADCx->CR2;
 426              		.loc 1 482 0
 427 0000 4368     		ldr	r3, [r0, #4]
 428              	.LVL34:
 483:../stdperiph/source/stm32f37x_sdadc.c **** 
 484:../stdperiph/source/stm32f37x_sdadc.c ****   /* Clear the SDADC_CR2_CALIBCNT bits */
 485:../stdperiph/source/stm32f37x_sdadc.c ****   tmpcr2 &= (uint32_t) (~SDADC_CR2_CALIBCNT);
 429              		.loc 1 485 0
 430 0002 23F00603 		bic	r3, r3, #6
 431              	.LVL35:
 486:../stdperiph/source/stm32f37x_sdadc.c ****   /* Set the calibration sequence */
 487:../stdperiph/source/stm32f37x_sdadc.c ****   tmpcr2 |= SDADC_CalibrationSequence;
 432              		.loc 1 487 0
 433 0006 1943     		orrs	r1, r1, r3
 434              	.LVL36:
 488:../stdperiph/source/stm32f37x_sdadc.c **** 
 489:../stdperiph/source/stm32f37x_sdadc.c ****   /* Write in SDADC_CR2 */
 490:../stdperiph/source/stm32f37x_sdadc.c ****   SDADCx->CR2 = tmpcr2;
 435              		.loc 1 490 0
 436 0008 4160     		str	r1, [r0, #4]
 437 000a 7047     		bx	lr
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 17


 438              		.cfi_endproc
 439              	.LFE121:
 441              		.section	.text.SDADC_StartCalibration,"ax",%progbits
 442              		.align	2
 443              		.global	SDADC_StartCalibration
 444              		.thumb
 445              		.thumb_func
 447              	SDADC_StartCalibration:
 448              	.LFB122:
 491:../stdperiph/source/stm32f37x_sdadc.c **** }
 492:../stdperiph/source/stm32f37x_sdadc.c **** 
 493:../stdperiph/source/stm32f37x_sdadc.c **** /**
 494:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Launches a request to start the calibration sequence.
 495:../stdperiph/source/stm32f37x_sdadc.c ****   * @note   use SDADC_CalibrationSequenceConfig() function to configure the 
 496:../stdperiph/source/stm32f37x_sdadc.c ****   *         calibration sequence then call SDADC_StartCalibration() to start the 
 497:../stdperiph/source/stm32f37x_sdadc.c ****   *         calibration process.  
 498:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
 499:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
 500:../stdperiph/source/stm32f37x_sdadc.c ****   */
 501:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_StartCalibration(SDADC_TypeDef* SDADCx)
 502:../stdperiph/source/stm32f37x_sdadc.c **** {
 449              		.loc 1 502 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453              		@ link register save eliminated.
 454              	.LVL37:
 503:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
 504:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
 505:../stdperiph/source/stm32f37x_sdadc.c **** 
 506:../stdperiph/source/stm32f37x_sdadc.c ****   /* Request a start of the calibration sequence */
 507:../stdperiph/source/stm32f37x_sdadc.c ****   SDADCx->CR2 |= (uint32_t)SDADC_CR2_STARTCALIB;
 455              		.loc 1 507 0
 456 0000 4368     		ldr	r3, [r0, #4]
 457 0002 43F01003 		orr	r3, r3, #16
 458 0006 4360     		str	r3, [r0, #4]
 459 0008 7047     		bx	lr
 460              		.cfi_endproc
 461              	.LFE122:
 463 000a 00BF     		.section	.text.SDADC_ChannelSelect,"ax",%progbits
 464              		.align	2
 465              		.global	SDADC_ChannelSelect
 466              		.thumb
 467              		.thumb_func
 469              	SDADC_ChannelSelect:
 470              	.LFB123:
 508:../stdperiph/source/stm32f37x_sdadc.c **** }
 509:../stdperiph/source/stm32f37x_sdadc.c **** 
 510:../stdperiph/source/stm32f37x_sdadc.c **** /**
 511:../stdperiph/source/stm32f37x_sdadc.c ****   * @}
 512:../stdperiph/source/stm32f37x_sdadc.c ****   */
 513:../stdperiph/source/stm32f37x_sdadc.c **** 
 514:../stdperiph/source/stm32f37x_sdadc.c **** /** @defgroup SDADC_Group2 Regular Channels Configuration functions
 515:../stdperiph/source/stm32f37x_sdadc.c ****  *  @brief   Regular Channels Configuration functions 
 516:../stdperiph/source/stm32f37x_sdadc.c ****  *
 517:../stdperiph/source/stm32f37x_sdadc.c **** @verbatim   
 518:../stdperiph/source/stm32f37x_sdadc.c ****  ===============================================================================
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 18


 519:../stdperiph/source/stm32f37x_sdadc.c ****           ##### Regular Channels Configuration functions ##### 
 520:../stdperiph/source/stm32f37x_sdadc.c ****  ===============================================================================  
 521:../stdperiph/source/stm32f37x_sdadc.c ****     [..] This section provides functions allowing to manage the SDADC regular channels,
 522:../stdperiph/source/stm32f37x_sdadc.c ****          it is composed of 3 sub sections: 
 523:../stdperiph/source/stm32f37x_sdadc.c ****         (+) Configuration and management functions for regular channels:
 524:../stdperiph/source/stm32f37x_sdadc.c ****            (++) Select the channel to be used for regular conversion using
 525:../stdperiph/source/stm32f37x_sdadc.c ****                  SDADC_ChannelSelect() (*)
 526:../stdperiph/source/stm32f37x_sdadc.c ****            (++) Activate the continuous Mode using SDADC_ContinuousModeCmd() (*)
 527:../stdperiph/source/stm32f37x_sdadc.c ****            (++) Perform a software start trigger using SDADC_SoftwareStartConv()
 528:../stdperiph/source/stm32f37x_sdadc.c ****            (++) For SDADC2 and SDADC3, Enable synchronization with SDADC1 using
 529:../stdperiph/source/stm32f37x_sdadc.c ****                  SDADC_RegularSynchroSDADC1()
 530:../stdperiph/source/stm32f37x_sdadc.c ****               -@@- Please Note that the following features for regular channels
 531:../stdperiph/source/stm32f37x_sdadc.c ****                    can be configurated using the SDADC_Init() function:
 532:../stdperiph/source/stm32f37x_sdadc.c ****            (++) Channel selection
 533:../stdperiph/source/stm32f37x_sdadc.c ****            (++) Continuous mode activation
 534:../stdperiph/source/stm32f37x_sdadc.c ****         (+) Get the regular conversion data: Use SDADC_GetConversionValue() to 
 535:../stdperiph/source/stm32f37x_sdadc.c ****             read the conversion value for regular conversion
 536:../stdperiph/source/stm32f37x_sdadc.c ****         (+) Get the SDADC2/SDADC3 regular conversion data synchronized with SDADC1
 537:../stdperiph/source/stm32f37x_sdadc.c ****             Use SDADC_GetConversionSDADC12Value()/SDADC_GetConversionSDADC13Value to 
 538:../stdperiph/source/stm32f37x_sdadc.c ****             read the conversion value of SDADC1 regular conversion concatenated to
 539:../stdperiph/source/stm32f37x_sdadc.c ****             SDADC2/SDADC3 regular conversion
 540:../stdperiph/source/stm32f37x_sdadc.c **** @endverbatim
 541:../stdperiph/source/stm32f37x_sdadc.c ****   * @{
 542:../stdperiph/source/stm32f37x_sdadc.c ****   */
 543:../stdperiph/source/stm32f37x_sdadc.c **** 
 544:../stdperiph/source/stm32f37x_sdadc.c **** /**
 545:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Selects the SDADC channel to be used for regular conversion.
 546:../stdperiph/source/stm32f37x_sdadc.c ****   * @note   Just one channel of the 9 available channels can be selected.
 547:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
 548:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADC_Channel: The SDADC regular channel.
 549:../stdperiph/source/stm32f37x_sdadc.c ****   *          This parameter can be one of the following values:
 550:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_0: SDADC Channel 0 selected
 551:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_1: SDADC Channel 1 selected
 552:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_2: SDADC Channel 2 selected
 553:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_3: SDADC Channel 3 selected
 554:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_4: SDADC Channel 4 selected
 555:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_5: SDADC Channel 5 selected
 556:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_6: SDADC Channel 6 selected
 557:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_7: SDADC Channel 7 selected
 558:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_8: SDADC Channel 8 selected
 559:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
 560:../stdperiph/source/stm32f37x_sdadc.c ****   */
 561:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_ChannelSelect(SDADC_TypeDef* SDADCx, uint32_t SDADC_Channel)
 562:../stdperiph/source/stm32f37x_sdadc.c **** {
 471              		.loc 1 562 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475              		@ link register save eliminated.
 476              	.LVL38:
 563:../stdperiph/source/stm32f37x_sdadc.c **** uint32_t tmpcr2;
 564:../stdperiph/source/stm32f37x_sdadc.c **** 
 565:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
 566:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
 567:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_REGULAR_CHANNEL(SDADC_Channel));
 568:../stdperiph/source/stm32f37x_sdadc.c **** 
 569:../stdperiph/source/stm32f37x_sdadc.c ****   /* Get SDADC_CR2 register value */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 19


 570:../stdperiph/source/stm32f37x_sdadc.c ****   tmpcr2 = SDADCx->CR2;
 477              		.loc 1 570 0
 478 0000 4368     		ldr	r3, [r0, #4]
 479              	.LVL39:
 571:../stdperiph/source/stm32f37x_sdadc.c **** 
 572:../stdperiph/source/stm32f37x_sdadc.c ****   /* Clear the RCH[3:0] bits */
 573:../stdperiph/source/stm32f37x_sdadc.c ****   tmpcr2 &= (uint32_t) (~SDADC_CR2_RCH);
 480              		.loc 1 573 0
 481 0002 23F47023 		bic	r3, r3, #983040
 482              	.LVL40:
 574:../stdperiph/source/stm32f37x_sdadc.c ****   /* Select the regular channel */
 575:../stdperiph/source/stm32f37x_sdadc.c ****   tmpcr2 |= (uint32_t) (SDADC_Channel & 0xFFFF0000);
 483              		.loc 1 575 0
 484 0006 090C     		lsrs	r1, r1, #16
 485              	.LVL41:
 486 0008 0904     		lsls	r1, r1, #16
 487 000a 1943     		orrs	r1, r1, r3
 488              	.LVL42:
 576:../stdperiph/source/stm32f37x_sdadc.c **** 
 577:../stdperiph/source/stm32f37x_sdadc.c ****   /* Write in SDADC_CR2 register */
 578:../stdperiph/source/stm32f37x_sdadc.c ****   SDADCx->CR2 = tmpcr2;
 489              		.loc 1 578 0
 490 000c 4160     		str	r1, [r0, #4]
 491 000e 7047     		bx	lr
 492              		.cfi_endproc
 493              	.LFE123:
 495              		.section	.text.SDADC_ContinuousModeCmd,"ax",%progbits
 496              		.align	2
 497              		.global	SDADC_ContinuousModeCmd
 498              		.thumb
 499              		.thumb_func
 501              	SDADC_ContinuousModeCmd:
 502              	.LFB124:
 579:../stdperiph/source/stm32f37x_sdadc.c **** }
 580:../stdperiph/source/stm32f37x_sdadc.c **** 
 581:../stdperiph/source/stm32f37x_sdadc.c **** /**
 582:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Enables or disables the SDADC continuous conversion mode.
 583:../stdperiph/source/stm32f37x_sdadc.c ****   *         When enabled, the regular channel is converted repeatedly after each
 584:../stdperiph/source/stm32f37x_sdadc.c ****   *         conversion request.
 585:../stdperiph/source/stm32f37x_sdadc.c ****   *         When disabled, the regular channel is converted once for each
 586:../stdperiph/source/stm32f37x_sdadc.c ****   *         conversion request.     
 587:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
 588:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  NewState: new state of the selected SDADC continuous conversion mode
 589:../stdperiph/source/stm32f37x_sdadc.c ****   *          This parameter can be: ENABLE or DISABLE.
 590:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
 591:../stdperiph/source/stm32f37x_sdadc.c ****   */
 592:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_ContinuousModeCmd(SDADC_TypeDef* SDADCx, FunctionalState NewState)
 593:../stdperiph/source/stm32f37x_sdadc.c **** {
 503              		.loc 1 593 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 0, uses_anonymous_args = 0
 507              		@ link register save eliminated.
 508              	.LVL43:
 594:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
 595:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
 596:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 20


 597:../stdperiph/source/stm32f37x_sdadc.c **** 
 598:../stdperiph/source/stm32f37x_sdadc.c ****   if (NewState != DISABLE)
 509              		.loc 1 598 0
 510 0000 21B1     		cbz	r1, .L35
 599:../stdperiph/source/stm32f37x_sdadc.c ****   {
 600:../stdperiph/source/stm32f37x_sdadc.c ****     /* Enable the selected SDADC continuous conversion mode */
 601:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR2 |= (uint32_t)SDADC_CR2_RCONT;
 511              		.loc 1 601 0
 512 0002 4368     		ldr	r3, [r0, #4]
 513 0004 43F48003 		orr	r3, r3, #4194304
 514 0008 4360     		str	r3, [r0, #4]
 515 000a 7047     		bx	lr
 516              	.L35:
 602:../stdperiph/source/stm32f37x_sdadc.c ****   }
 603:../stdperiph/source/stm32f37x_sdadc.c ****   else
 604:../stdperiph/source/stm32f37x_sdadc.c ****   {
 605:../stdperiph/source/stm32f37x_sdadc.c ****     /* Disable the selected SDADC continuous conversion mode */
 606:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR2 &= (uint32_t)(~SDADC_CR2_RCONT);
 517              		.loc 1 606 0
 518 000c 4368     		ldr	r3, [r0, #4]
 519 000e 23F48003 		bic	r3, r3, #4194304
 520 0012 4360     		str	r3, [r0, #4]
 521 0014 7047     		bx	lr
 522              		.cfi_endproc
 523              	.LFE124:
 525 0016 00BF     		.section	.text.SDADC_SoftwareStartConv,"ax",%progbits
 526              		.align	2
 527              		.global	SDADC_SoftwareStartConv
 528              		.thumb
 529              		.thumb_func
 531              	SDADC_SoftwareStartConv:
 532              	.LFB125:
 607:../stdperiph/source/stm32f37x_sdadc.c ****   }
 608:../stdperiph/source/stm32f37x_sdadc.c **** }
 609:../stdperiph/source/stm32f37x_sdadc.c **** 
 610:../stdperiph/source/stm32f37x_sdadc.c **** /**
 611:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Enables the selected SDADC software start conversion of the regular channels.
 612:../stdperiph/source/stm32f37x_sdadc.c ****   * @note   If the flag SDADC_FLAG_RCIP is set or INIT bit is set, calling this
 613:../stdperiph/source/stm32f37x_sdadc.c ****   *         function SDADC_SoftwareStartConv() has no effect.
 614:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
 615:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
 616:../stdperiph/source/stm32f37x_sdadc.c ****   */
 617:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_SoftwareStartConv(SDADC_TypeDef* SDADCx)
 618:../stdperiph/source/stm32f37x_sdadc.c **** {
 533              		.loc 1 618 0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 538              	.LVL44:
 619:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
 620:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
 621:../stdperiph/source/stm32f37x_sdadc.c **** 
 622:../stdperiph/source/stm32f37x_sdadc.c ****   /* Enable the selected SDADC conversion for regular group */
 623:../stdperiph/source/stm32f37x_sdadc.c ****   SDADCx->CR2 |= (uint32_t)SDADC_CR2_RSWSTART;
 539              		.loc 1 623 0
 540 0000 4368     		ldr	r3, [r0, #4]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 21


 541 0002 43F40003 		orr	r3, r3, #8388608
 542 0006 4360     		str	r3, [r0, #4]
 543 0008 7047     		bx	lr
 544              		.cfi_endproc
 545              	.LFE125:
 547 000a 00BF     		.section	.text.SDADC_GetConversionValue,"ax",%progbits
 548              		.align	2
 549              		.global	SDADC_GetConversionValue
 550              		.thumb
 551              		.thumb_func
 553              	SDADC_GetConversionValue:
 554              	.LFB126:
 624:../stdperiph/source/stm32f37x_sdadc.c **** }
 625:../stdperiph/source/stm32f37x_sdadc.c **** 
 626:../stdperiph/source/stm32f37x_sdadc.c **** /**
 627:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Returns the last SDADC conversion result data for regular channel.
 628:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
 629:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval The Data conversion value.
 630:../stdperiph/source/stm32f37x_sdadc.c ****   */
 631:../stdperiph/source/stm32f37x_sdadc.c **** int16_t SDADC_GetConversionValue(SDADC_TypeDef* SDADCx)
 632:../stdperiph/source/stm32f37x_sdadc.c **** {
 555              		.loc 1 632 0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 559              		@ link register save eliminated.
 560              	.LVL45:
 633:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
 634:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
 635:../stdperiph/source/stm32f37x_sdadc.c **** 
 636:../stdperiph/source/stm32f37x_sdadc.c ****   /* Return the selected SDADC conversion value for regular channel */
 637:../stdperiph/source/stm32f37x_sdadc.c ****   return (int16_t) SDADCx->RDATAR;
 561              		.loc 1 637 0
 562 0000 406E     		ldr	r0, [r0, #100]
 563              	.LVL46:
 638:../stdperiph/source/stm32f37x_sdadc.c **** }
 564              		.loc 1 638 0
 565 0002 00B2     		sxth	r0, r0
 566 0004 7047     		bx	lr
 567              		.cfi_endproc
 568              	.LFE126:
 570 0006 00BF     		.section	.text.SDADC_RegularSynchroSDADC1,"ax",%progbits
 571              		.align	2
 572              		.global	SDADC_RegularSynchroSDADC1
 573              		.thumb
 574              		.thumb_func
 576              	SDADC_RegularSynchroSDADC1:
 577              	.LFB127:
 639:../stdperiph/source/stm32f37x_sdadc.c **** 
 640:../stdperiph/source/stm32f37x_sdadc.c **** /**
 641:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Launches SDADC2/SDADC3 regular conversion synchronously with SDADC1.
 642:../stdperiph/source/stm32f37x_sdadc.c ****   * @note   This feature is available only on SDADC2 and SDADC3.
 643:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 2 or 3 to select the SDADC peripheral.
 644:../stdperiph/source/stm32f37x_sdadc.c ****   *         When enabled, a regular conversion is launched at the same moment
 645:../stdperiph/source/stm32f37x_sdadc.c ****   *         that a regular conversion is launched in SDADC1.
 646:../stdperiph/source/stm32f37x_sdadc.c ****   *         When disabled, do not launch a regular conversion synchronously with SDADC1.
 647:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 22


 648:../stdperiph/source/stm32f37x_sdadc.c ****   */
 649:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_RegularSynchroSDADC1(SDADC_TypeDef* SDADCx, FunctionalState NewState)
 650:../stdperiph/source/stm32f37x_sdadc.c **** {
 578              		.loc 1 650 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582              		@ link register save eliminated.
 583              	.LVL47:
 651:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
 652:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_SLAVE_PERIPH(SDADCx));
 653:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 654:../stdperiph/source/stm32f37x_sdadc.c **** 
 655:../stdperiph/source/stm32f37x_sdadc.c ****   if (NewState != DISABLE)
 584              		.loc 1 655 0
 585 0000 21B1     		cbz	r1, .L40
 656:../stdperiph/source/stm32f37x_sdadc.c ****   {
 657:../stdperiph/source/stm32f37x_sdadc.c ****     /* Enable synchronization with SDADC1 on regular conversions */
 658:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR1 |= SDADC_CR1_RSYNC;
 586              		.loc 1 658 0
 587 0002 0368     		ldr	r3, [r0]
 588 0004 43F40043 		orr	r3, r3, #32768
 589 0008 0360     		str	r3, [r0]
 590 000a 7047     		bx	lr
 591              	.L40:
 659:../stdperiph/source/stm32f37x_sdadc.c ****   }
 660:../stdperiph/source/stm32f37x_sdadc.c ****   else
 661:../stdperiph/source/stm32f37x_sdadc.c ****   {
 662:../stdperiph/source/stm32f37x_sdadc.c ****     /* Disable synchronization with SDADC1 on regular conversions */
 663:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR1 &= (uint32_t)~SDADC_CR1_RSYNC;
 592              		.loc 1 663 0
 593 000c 0368     		ldr	r3, [r0]
 594 000e 23F40043 		bic	r3, r3, #32768
 595 0012 0360     		str	r3, [r0]
 596 0014 7047     		bx	lr
 597              		.cfi_endproc
 598              	.LFE127:
 600 0016 00BF     		.section	.text.SDADC_GetConversionSDADC12Value,"ax",%progbits
 601              		.align	2
 602              		.global	SDADC_GetConversionSDADC12Value
 603              		.thumb
 604              		.thumb_func
 606              	SDADC_GetConversionSDADC12Value:
 607              	.LFB128:
 664:../stdperiph/source/stm32f37x_sdadc.c ****   }
 665:../stdperiph/source/stm32f37x_sdadc.c **** }
 666:../stdperiph/source/stm32f37x_sdadc.c **** 
 667:../stdperiph/source/stm32f37x_sdadc.c **** /**
 668:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Returns the last conversion result data for regular channel of SDADC1 and SDADC2.
 669:../stdperiph/source/stm32f37x_sdadc.c ****   *         RSYNC bit of the SDADC2 should be already set.
 670:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  None
 671:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval The Data conversion value for SDADC1 and SDADC2.
 672:../stdperiph/source/stm32f37x_sdadc.c ****   *         In 16-bit MSB: the regular conversion data for SDADC2.
 673:../stdperiph/source/stm32f37x_sdadc.c ****   *          This data is valid only when the flag SDADC_FLAG_REOC of SDADC2 is set.  
 674:../stdperiph/source/stm32f37x_sdadc.c ****   *         In 16-bit LSB: the regular conversion data for SDADC1.
 675:../stdperiph/source/stm32f37x_sdadc.c ****   *          This data is valid only when the flag SDADC_FLAG_REOC of SDADC1 is set.    
 676:../stdperiph/source/stm32f37x_sdadc.c ****   */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 23


 677:../stdperiph/source/stm32f37x_sdadc.c **** uint32_t SDADC_GetConversionSDADC12Value(void)
 678:../stdperiph/source/stm32f37x_sdadc.c **** {
 608              		.loc 1 678 0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              		@ link register save eliminated.
 679:../stdperiph/source/stm32f37x_sdadc.c ****   /* Return the selected conversion value for regular channel of SDADC1 and SDADC2*/
 680:../stdperiph/source/stm32f37x_sdadc.c ****   return (uint32_t) SDADC1->RDATA12R;
 613              		.loc 1 680 0
 614 0000 014B     		ldr	r3, .L43
 615 0002 586F     		ldr	r0, [r3, #116]
 681:../stdperiph/source/stm32f37x_sdadc.c **** }
 616              		.loc 1 681 0
 617 0004 7047     		bx	lr
 618              	.L44:
 619 0006 00BF     		.align	2
 620              	.L43:
 621 0008 00600140 		.word	1073831936
 622              		.cfi_endproc
 623              	.LFE128:
 625              		.section	.text.SDADC_GetConversionSDADC13Value,"ax",%progbits
 626              		.align	2
 627              		.global	SDADC_GetConversionSDADC13Value
 628              		.thumb
 629              		.thumb_func
 631              	SDADC_GetConversionSDADC13Value:
 632              	.LFB129:
 682:../stdperiph/source/stm32f37x_sdadc.c **** 
 683:../stdperiph/source/stm32f37x_sdadc.c **** /**
 684:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Returns the last conversion result data for regular channel of SDADC1 and SDADC3.
 685:../stdperiph/source/stm32f37x_sdadc.c ****   *         RSYNC bit of the SDADC3 should be already set.
 686:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  None
 687:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval The Data conversion value for SDADC1 and SDADC3.
 688:../stdperiph/source/stm32f37x_sdadc.c ****   *         In 16-bit MSB: the regular conversion data for SDADC3.
 689:../stdperiph/source/stm32f37x_sdadc.c ****   *          This data is valid only when the flag SDADC_FLAG_REOC of SDADC3 is set.  
 690:../stdperiph/source/stm32f37x_sdadc.c ****   *         In 16-bit LSB: the regular conversion data for SDADC1.
 691:../stdperiph/source/stm32f37x_sdadc.c ****   *          This data is valid only when the flag SDADC_FLAG_REOC of SDADC1 is set.
 692:../stdperiph/source/stm32f37x_sdadc.c ****   */
 693:../stdperiph/source/stm32f37x_sdadc.c **** uint32_t SDADC_GetConversionSDADC13Value(void)
 694:../stdperiph/source/stm32f37x_sdadc.c **** {
 633              		.loc 1 694 0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 0
 636              		@ frame_needed = 0, uses_anonymous_args = 0
 637              		@ link register save eliminated.
 695:../stdperiph/source/stm32f37x_sdadc.c ****   /* Return the selected conversion value for regular channel of SDADC1 and SDADC3*/
 696:../stdperiph/source/stm32f37x_sdadc.c ****   return (uint32_t) SDADC1->RDATA13R;
 638              		.loc 1 696 0
 639 0000 014B     		ldr	r3, .L46
 640 0002 D86F     		ldr	r0, [r3, #124]
 697:../stdperiph/source/stm32f37x_sdadc.c **** }
 641              		.loc 1 697 0
 642 0004 7047     		bx	lr
 643              	.L47:
 644 0006 00BF     		.align	2
 645              	.L46:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 24


 646 0008 00600140 		.word	1073831936
 647              		.cfi_endproc
 648              	.LFE129:
 650              		.section	.text.SDADC_SoftwareStartInjectedConv,"ax",%progbits
 651              		.align	2
 652              		.global	SDADC_SoftwareStartInjectedConv
 653              		.thumb
 654              		.thumb_func
 656              	SDADC_SoftwareStartInjectedConv:
 657              	.LFB130:
 698:../stdperiph/source/stm32f37x_sdadc.c **** 
 699:../stdperiph/source/stm32f37x_sdadc.c **** /**
 700:../stdperiph/source/stm32f37x_sdadc.c ****   * @}
 701:../stdperiph/source/stm32f37x_sdadc.c ****   */
 702:../stdperiph/source/stm32f37x_sdadc.c **** 
 703:../stdperiph/source/stm32f37x_sdadc.c **** /** @defgroup SDADC_Group3 Injected channels Configuration functions
 704:../stdperiph/source/stm32f37x_sdadc.c ****  *  @brief   Injected channels Configuration functions 
 705:../stdperiph/source/stm32f37x_sdadc.c ****  *
 706:../stdperiph/source/stm32f37x_sdadc.c **** @verbatim   
 707:../stdperiph/source/stm32f37x_sdadc.c ****  ===============================================================================
 708:../stdperiph/source/stm32f37x_sdadc.c ****             ##### Injected channels Configuration functions  #####
 709:../stdperiph/source/stm32f37x_sdadc.c ****  ===============================================================================  
 710:../stdperiph/source/stm32f37x_sdadc.c **** 
 711:../stdperiph/source/stm32f37x_sdadc.c ****     [..] This section provide functions allowing to configure the SDADC Injected
 712:../stdperiph/source/stm32f37x_sdadc.c ****          channels, it is composed of 2 sub sections:
 713:../stdperiph/source/stm32f37x_sdadc.c **** 
 714:../stdperiph/source/stm32f37x_sdadc.c ****          (#) Configuration functions for Injected channels: This subsection provides 
 715:../stdperiph/source/stm32f37x_sdadc.c ****              functions allowing to configure the SDADC injected channels:
 716:../stdperiph/source/stm32f37x_sdadc.c ****              (++) Select the configuration  for the SDADC injected channel
 717:../stdperiph/source/stm32f37x_sdadc.c ****              (++) Activate the continuous Mode  
 718:../stdperiph/source/stm32f37x_sdadc.c ****              (++) External/software trigger source   
 719:../stdperiph/source/stm32f37x_sdadc.c ****              (++) External trigger edge (rising, falling, rising & falling)
 720:../stdperiph/source/stm32f37x_sdadc.c **** 
 721:../stdperiph/source/stm32f37x_sdadc.c ****          (#) Get injected channel conversion data: This subsection provides an
 722:../stdperiph/source/stm32f37x_sdadc.c ****              important function in the SDADC peripheral since it returns the
 723:../stdperiph/source/stm32f37x_sdadc.c ****              converted data of a specific injected channel.
 724:../stdperiph/source/stm32f37x_sdadc.c **** 
 725:../stdperiph/source/stm32f37x_sdadc.c **** @endverbatim
 726:../stdperiph/source/stm32f37x_sdadc.c ****   * @{
 727:../stdperiph/source/stm32f37x_sdadc.c ****   */
 728:../stdperiph/source/stm32f37x_sdadc.c **** 
 729:../stdperiph/source/stm32f37x_sdadc.c **** /**
 730:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Enables the selected SDADC software start conversion of the injected 
 731:../stdperiph/source/stm32f37x_sdadc.c ****   *         channels.
 732:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
 733:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
 734:../stdperiph/source/stm32f37x_sdadc.c ****   */
 735:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_SoftwareStartInjectedConv(SDADC_TypeDef* SDADCx)
 736:../stdperiph/source/stm32f37x_sdadc.c **** {
 658              		.loc 1 736 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 0
 661              		@ frame_needed = 0, uses_anonymous_args = 0
 662              		@ link register save eliminated.
 663              	.LVL48:
 737:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
 738:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 25


 739:../stdperiph/source/stm32f37x_sdadc.c **** 
 740:../stdperiph/source/stm32f37x_sdadc.c ****   /* Start a conversion of the injected group of channels */
 741:../stdperiph/source/stm32f37x_sdadc.c ****   SDADCx->CR2 |= (uint32_t)SDADC_CR2_JSWSTART;
 664              		.loc 1 741 0
 665 0000 4368     		ldr	r3, [r0, #4]
 666 0002 43F40043 		orr	r3, r3, #32768
 667 0006 4360     		str	r3, [r0, #4]
 668 0008 7047     		bx	lr
 669              		.cfi_endproc
 670              	.LFE130:
 672 000a 00BF     		.section	.text.SDADC_InjectedChannelSelect,"ax",%progbits
 673              		.align	2
 674              		.global	SDADC_InjectedChannelSelect
 675              		.thumb
 676              		.thumb_func
 678              	SDADC_InjectedChannelSelect:
 679              	.LFB131:
 742:../stdperiph/source/stm32f37x_sdadc.c **** }
 743:../stdperiph/source/stm32f37x_sdadc.c ****  
 744:../stdperiph/source/stm32f37x_sdadc.c **** /**
 745:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Selects the SDADC injected channel(s).
 746:../stdperiph/source/stm32f37x_sdadc.c ****   * @note   When selected, the SDADC channel is part of the injected group
 747:../stdperiph/source/stm32f37x_sdadc.c ****   *         By default, channel 0 is selected
 748:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
 749:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADC_Channel: The SDADC injected channel.
 750:../stdperiph/source/stm32f37x_sdadc.c ****   *          This parameter can be one or any combination of the following values:
 751:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_0: SDADC Channel 0 selected
 752:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_1: SDADC Channel 1 selected
 753:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_2: SDADC Channel 2 selected
 754:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_3: SDADC Channel 3 selected
 755:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_4: SDADC Channel 4 selected
 756:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_5: SDADC Channel 5 selected
 757:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_6: SDADC Channel 6 selected
 758:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_7: SDADC Channel 7 selected
 759:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_Channel_8: SDADC Channel 8 selected
 760:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
 761:../stdperiph/source/stm32f37x_sdadc.c ****   */
 762:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_InjectedChannelSelect(SDADC_TypeDef* SDADCx, uint32_t SDADC_Channel)
 763:../stdperiph/source/stm32f37x_sdadc.c **** {
 680              		.loc 1 763 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 0
 683              		@ frame_needed = 0, uses_anonymous_args = 0
 684              		@ link register save eliminated.
 685              	.LVL49:
 764:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
 765:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
 766:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_INJECTED_CHANNEL(SDADC_Channel));
 767:../stdperiph/source/stm32f37x_sdadc.c **** 
 768:../stdperiph/source/stm32f37x_sdadc.c ****   /* Select the SDADC injected channel */
 769:../stdperiph/source/stm32f37x_sdadc.c ****   SDADCx->JCHGR = (uint32_t) (SDADC_Channel & 0x0000FFFF);
 686              		.loc 1 769 0
 687 0000 89B2     		uxth	r1, r1
 688              	.LVL50:
 689 0002 4161     		str	r1, [r0, #20]
 690 0004 7047     		bx	lr
 691              		.cfi_endproc
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 26


 692              	.LFE131:
 694 0006 00BF     		.section	.text.SDADC_DelayStartInjectedConvCmd,"ax",%progbits
 695              		.align	2
 696              		.global	SDADC_DelayStartInjectedConvCmd
 697              		.thumb
 698              		.thumb_func
 700              	SDADC_DelayStartInjectedConvCmd:
 701              	.LFB132:
 770:../stdperiph/source/stm32f37x_sdadc.c **** }
 771:../stdperiph/source/stm32f37x_sdadc.c **** 
 772:../stdperiph/source/stm32f37x_sdadc.c **** /**
 773:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Enables or disables delayed start of injected conversions
 774:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
 775:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  NewState: new state of the selected SDADC delay start of injected
 776:../stdperiph/source/stm32f37x_sdadc.c ****   *         conversions. This parameter can be: ENABLE or DISABLE.
 777:../stdperiph/source/stm32f37x_sdadc.c ****   *         When disabled, injected conversions begin as soon as possible after
 778:../stdperiph/source/stm32f37x_sdadc.c ****   *         the request.
 779:../stdperiph/source/stm32f37x_sdadc.c ****   *         When enabled, after a request for injected conversion the SDADC waits
 780:../stdperiph/source/stm32f37x_sdadc.c ****   *         a fixed interval before launching the conversion.
 781:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
 782:../stdperiph/source/stm32f37x_sdadc.c ****   */
 783:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_DelayStartInjectedConvCmd(SDADC_TypeDef* SDADCx, FunctionalState NewState)
 784:../stdperiph/source/stm32f37x_sdadc.c **** {
 702              		.loc 1 784 0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 0
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706              		@ link register save eliminated.
 707              	.LVL51:
 785:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
 786:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
 787:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 788:../stdperiph/source/stm32f37x_sdadc.c **** 
 789:../stdperiph/source/stm32f37x_sdadc.c ****   if (NewState != DISABLE)
 708              		.loc 1 789 0
 709 0000 21B1     		cbz	r1, .L51
 790:../stdperiph/source/stm32f37x_sdadc.c ****   {
 791:../stdperiph/source/stm32f37x_sdadc.c ****     /* Enable delay start of injected conversions */
 792:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR2 |= (uint32_t) (SDADC_CR2_JDS);
 710              		.loc 1 792 0
 711 0002 4368     		ldr	r3, [r0, #4]
 712 0004 43F04003 		orr	r3, r3, #64
 713 0008 4360     		str	r3, [r0, #4]
 714 000a 7047     		bx	lr
 715              	.L51:
 793:../stdperiph/source/stm32f37x_sdadc.c ****   }
 794:../stdperiph/source/stm32f37x_sdadc.c ****   else
 795:../stdperiph/source/stm32f37x_sdadc.c ****   {
 796:../stdperiph/source/stm32f37x_sdadc.c ****     /* Disable delay start of injected conversions */
 797:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR2 &= (uint32_t) ~(SDADC_CR2_JDS);
 716              		.loc 1 797 0
 717 000c 4368     		ldr	r3, [r0, #4]
 718 000e 23F04003 		bic	r3, r3, #64
 719 0012 4360     		str	r3, [r0, #4]
 720 0014 7047     		bx	lr
 721              		.cfi_endproc
 722              	.LFE132:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 27


 724 0016 00BF     		.section	.text.SDADC_InjectedContinuousModeCmd,"ax",%progbits
 725              		.align	2
 726              		.global	SDADC_InjectedContinuousModeCmd
 727              		.thumb
 728              		.thumb_func
 730              	SDADC_InjectedContinuousModeCmd:
 731              	.LFB133:
 798:../stdperiph/source/stm32f37x_sdadc.c ****   }
 799:../stdperiph/source/stm32f37x_sdadc.c **** }
 800:../stdperiph/source/stm32f37x_sdadc.c **** 
 801:../stdperiph/source/stm32f37x_sdadc.c **** /**
 802:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Enables or disables the continuous mode for injected channels for
 803:../stdperiph/source/stm32f37x_sdadc.c ****   *         the specified SDADC
 804:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
 805:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  NewState: new state of the selected SDADC continuous mode
 806:../stdperiph/source/stm32f37x_sdadc.c ****   *         on injected channels. This parameter can be: ENABLE or DISABLE.
 807:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
 808:../stdperiph/source/stm32f37x_sdadc.c ****   */
 809:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_InjectedContinuousModeCmd(SDADC_TypeDef* SDADCx, FunctionalState NewState)
 810:../stdperiph/source/stm32f37x_sdadc.c **** {
 732              		.loc 1 810 0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736              		@ link register save eliminated.
 737              	.LVL52:
 811:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
 812:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
 813:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 814:../stdperiph/source/stm32f37x_sdadc.c **** 
 815:../stdperiph/source/stm32f37x_sdadc.c ****   if (NewState != DISABLE)
 738              		.loc 1 815 0
 739 0000 21B1     		cbz	r1, .L54
 816:../stdperiph/source/stm32f37x_sdadc.c ****   {
 817:../stdperiph/source/stm32f37x_sdadc.c ****     /* Enable the SDADC continuous mode for injected channels */
 818:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR2 |= (uint32_t)SDADC_CR2_JCONT;
 740              		.loc 1 818 0
 741 0002 4368     		ldr	r3, [r0, #4]
 742 0004 43F02003 		orr	r3, r3, #32
 743 0008 4360     		str	r3, [r0, #4]
 744 000a 7047     		bx	lr
 745              	.L54:
 819:../stdperiph/source/stm32f37x_sdadc.c ****   }
 820:../stdperiph/source/stm32f37x_sdadc.c ****   else
 821:../stdperiph/source/stm32f37x_sdadc.c ****   {
 822:../stdperiph/source/stm32f37x_sdadc.c ****     /* Disable the SDADC continuous mode for injected channels */
 823:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR2 &= (uint32_t)(~SDADC_CR2_JCONT);
 746              		.loc 1 823 0
 747 000c 4368     		ldr	r3, [r0, #4]
 748 000e 23F02003 		bic	r3, r3, #32
 749 0012 4360     		str	r3, [r0, #4]
 750 0014 7047     		bx	lr
 751              		.cfi_endproc
 752              	.LFE133:
 754 0016 00BF     		.section	.text.SDADC_ExternalTrigInjectedConvConfig,"ax",%progbits
 755              		.align	2
 756              		.global	SDADC_ExternalTrigInjectedConvConfig
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 28


 757              		.thumb
 758              		.thumb_func
 760              	SDADC_ExternalTrigInjectedConvConfig:
 761              	.LFB134:
 824:../stdperiph/source/stm32f37x_sdadc.c ****   }
 825:../stdperiph/source/stm32f37x_sdadc.c **** }
 826:../stdperiph/source/stm32f37x_sdadc.c **** 
 827:../stdperiph/source/stm32f37x_sdadc.c **** /**
 828:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Configures the SDADCx external trigger for injected channels conversion.
 829:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
 830:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADC_ExternalTrigInjecConv: specifies the SDADC trigger to start injected 
 831:../stdperiph/source/stm32f37x_sdadc.c ****   *    conversion. This parameter can be one of the following values:
 832:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_ExternalTrigInjecConv_T13_CC1: Timer13 capture compare1 selected 
 833:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_ExternalTrigInjecConv_T14_CC1: Timer14 TRGO event selected 
 834:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_ExternalTrigInjecConv_T16_CC1: Timer16 TRGO event selected
 835:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_ExternalTrigInjecConv_T17_CC1: Timer17 capture compare1 selected
 836:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_ExternalTrigInjecConv_T12_CC1: Timer12 capture compare1 selected
 837:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_ExternalTrigInjecConv_T12_CC2: Timer12 capture compare2 selected
 838:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_ExternalTrigInjecConv_T15_CC2: Timer15 capture compare2 selected
 839:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_ExternalTrigInjecConv_T2_CC3: Timer2 capture compare3 selected
 840:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_ExternalTrigInjecConv_T2_CC4: Timer2 capture compare4 selected
 841:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_ExternalTrigInjecConv_T3_CC1: Timer3 capture compare1 selected
 842:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_ExternalTrigInjecConv_T3_CC2: Timer3 capture compare2 selected
 843:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_ExternalTrigInjecConv_T3_CC3: Timer3 capture compare3 selected
 844:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_ExternalTrigInjecConv_T4_CC1: Timer4 capture compare1 selected
 845:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_ExternalTrigInjecConv_T4_CC2: Timer4 capture compare2 selected
 846:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_ExternalTrigInjecConv_T4_CC3: Timer4 capture compare3 selected
 847:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_ExternalTrigInjecConv_T19_CC2: Timer19 capture compare2 selected 
 848:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_ExternalTrigInjecConv_T19_CC3: Timer19 capture compare3 selected
 849:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_ExternalTrigInjecConv_T19_CC4: Timer19 capture compare4 selected
 850:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_ExternalTrigInjecConv_T4_CC4: Timer4 capture compare4 selected
 851:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_ExternalTrigInjecConv_Ext_IT11: External interrupt line 11 event selected
 852:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_ExternalTrigInjecConv_Ext_IT15: External interrupt line 15 event selected
 853:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
 854:../stdperiph/source/stm32f37x_sdadc.c ****   */
 855:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_ExternalTrigInjectedConvConfig(SDADC_TypeDef* SDADCx, uint32_t SDADC_ExternalTrigInjecCo
 856:../stdperiph/source/stm32f37x_sdadc.c **** {
 762              		.loc 1 856 0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 0
 765              		@ frame_needed = 0, uses_anonymous_args = 0
 766              		@ link register save eliminated.
 767              	.LVL53:
 857:../stdperiph/source/stm32f37x_sdadc.c ****   uint32_t tmpreg = 0;
 858:../stdperiph/source/stm32f37x_sdadc.c **** 
 859:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
 860:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
 861:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_EXT_INJEC_TRIG(SDADC_ExternalTrigInjecConv));
 862:../stdperiph/source/stm32f37x_sdadc.c **** 
 863:../stdperiph/source/stm32f37x_sdadc.c ****   /* Get the old register value */
 864:../stdperiph/source/stm32f37x_sdadc.c ****   tmpreg = SDADCx->CR2;
 768              		.loc 1 864 0
 769 0000 4368     		ldr	r3, [r0, #4]
 770              	.LVL54:
 865:../stdperiph/source/stm32f37x_sdadc.c **** 
 866:../stdperiph/source/stm32f37x_sdadc.c ****   /* Clear the old external trigger selection for injected group */
 867:../stdperiph/source/stm32f37x_sdadc.c ****   tmpreg &= (uint32_t) (~SDADC_CR2_JEXTSEL);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 29


 771              		.loc 1 867 0
 772 0002 23F47063 		bic	r3, r3, #3840
 773              	.LVL55:
 868:../stdperiph/source/stm32f37x_sdadc.c ****   /* Set the external event selection for injected group */
 869:../stdperiph/source/stm32f37x_sdadc.c ****   tmpreg |= SDADC_ExternalTrigInjecConv;
 774              		.loc 1 869 0
 775 0006 1943     		orrs	r1, r1, r3
 776              	.LVL56:
 870:../stdperiph/source/stm32f37x_sdadc.c **** 
 871:../stdperiph/source/stm32f37x_sdadc.c ****   /* Store the new register value */
 872:../stdperiph/source/stm32f37x_sdadc.c ****   SDADCx->CR2 = tmpreg;
 777              		.loc 1 872 0
 778 0008 4160     		str	r1, [r0, #4]
 779 000a 7047     		bx	lr
 780              		.cfi_endproc
 781              	.LFE134:
 783              		.section	.text.SDADC_ExternalTrigInjectedConvEdgeConfig,"ax",%progbits
 784              		.align	2
 785              		.global	SDADC_ExternalTrigInjectedConvEdgeConfig
 786              		.thumb
 787              		.thumb_func
 789              	SDADC_ExternalTrigInjectedConvEdgeConfig:
 790              	.LFB135:
 873:../stdperiph/source/stm32f37x_sdadc.c **** }
 874:../stdperiph/source/stm32f37x_sdadc.c **** 
 875:../stdperiph/source/stm32f37x_sdadc.c **** /**
 876:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Configures the SDADCx external trigger edge for injected channels conversion.
 877:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
 878:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADC_ExternalTrigInjecConvEdge: specifies the SDADC external trigger
 879:../stdperiph/source/stm32f37x_sdadc.c ****   *         edge to start injected conversion.
 880:../stdperiph/source/stm32f37x_sdadc.c ****   *          This parameter can be one of the following values:
 881:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_ExternalTrigInjecConvEdge_None: external trigger disabled for
 882:../stdperiph/source/stm32f37x_sdadc.c ****   *          injected conversion
 883:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_ExternalTrigInjecConvEdge_Rising: Each rising edge on the selected
 884:../stdperiph/source/stm32f37x_sdadc.c ****   *          trigger makes a request to launch a injected conversion
 885:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_ExternalTrigInjecConvEdge_Falling: Each falling edge on the selected
 886:../stdperiph/source/stm32f37x_sdadc.c ****   *          trigger makes a request to launch a injected conversion
 887:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_ExternalTrigInjecConvEdge_RisingFalling: Both rising edges and 
 888:../stdperiph/source/stm32f37x_sdadc.c ****   *          falling edges on the selected trigger make requests to launch injected conversions.
 889:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
 890:../stdperiph/source/stm32f37x_sdadc.c ****   */
 891:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_ExternalTrigInjectedConvEdgeConfig(SDADC_TypeDef* SDADCx, uint32_t SDADC_ExternalTrigInj
 892:../stdperiph/source/stm32f37x_sdadc.c **** {
 791              		.loc 1 892 0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 0
 794              		@ frame_needed = 0, uses_anonymous_args = 0
 795              		@ link register save eliminated.
 796              	.LVL57:
 893:../stdperiph/source/stm32f37x_sdadc.c ****   uint32_t tmpreg = 0;
 894:../stdperiph/source/stm32f37x_sdadc.c **** 
 895:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
 896:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
 897:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_EXT_INJEC_TRIG_EDGE(SDADC_ExternalTrigInjecConvEdge));
 898:../stdperiph/source/stm32f37x_sdadc.c **** 
 899:../stdperiph/source/stm32f37x_sdadc.c ****   /* Get the old register value */
 900:../stdperiph/source/stm32f37x_sdadc.c ****   tmpreg = SDADCx->CR2;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 30


 797              		.loc 1 900 0
 798 0000 4368     		ldr	r3, [r0, #4]
 799              	.LVL58:
 901:../stdperiph/source/stm32f37x_sdadc.c **** 
 902:../stdperiph/source/stm32f37x_sdadc.c ****   /* Clear the old external trigger edge for injected group */
 903:../stdperiph/source/stm32f37x_sdadc.c ****   tmpreg &= (uint32_t) (~SDADC_CR2_JEXTEN);
 800              		.loc 1 903 0
 801 0002 23F4C043 		bic	r3, r3, #24576
 802              	.LVL59:
 904:../stdperiph/source/stm32f37x_sdadc.c ****   /* Set the new external trigger edge for injected group */
 905:../stdperiph/source/stm32f37x_sdadc.c ****   tmpreg |= SDADC_ExternalTrigInjecConvEdge;
 803              		.loc 1 905 0
 804 0006 1943     		orrs	r1, r1, r3
 805              	.LVL60:
 906:../stdperiph/source/stm32f37x_sdadc.c **** 
 907:../stdperiph/source/stm32f37x_sdadc.c ****   /* Store the new register value */
 908:../stdperiph/source/stm32f37x_sdadc.c ****   SDADCx->CR2 = tmpreg;
 806              		.loc 1 908 0
 807 0008 4160     		str	r1, [r0, #4]
 808 000a 7047     		bx	lr
 809              		.cfi_endproc
 810              	.LFE135:
 812              		.section	.text.SDADC_GetInjectedChannel,"ax",%progbits
 813              		.align	2
 814              		.global	SDADC_GetInjectedChannel
 815              		.thumb
 816              		.thumb_func
 818              	SDADC_GetInjectedChannel:
 819              	.LFB136:
 909:../stdperiph/source/stm32f37x_sdadc.c **** }
 910:../stdperiph/source/stm32f37x_sdadc.c **** 
 911:../stdperiph/source/stm32f37x_sdadc.c **** /**
 912:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Returns the injected channel most recently converted for
 913:../stdperiph/source/stm32f37x_sdadc.c ****   *         the specified SDADC
 914:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
 915:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval The most recently converted SDADC injected channel.
 916:../stdperiph/source/stm32f37x_sdadc.c ****   *          This parameter can be one of the following values:
 917:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg 0x00000001: SDADC_Channel_0 is recently converted
 918:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg 0x00010002: SDADC_Channel_1 is recently converted
 919:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg 0x00020004: SDADC_Channel_2 is recently converted
 920:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg 0x00030008: SDADC_Channel_3 is recently converted
 921:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg 0x00040010: SDADC_Channel_4 is recently converted
 922:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg 0x00050020: SDADC_Channel_5 is recently converted
 923:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg 0x00060040: SDADC_Channel_6 is recently converted
 924:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg 0x00070080: SDADC_Channel_7 is recently converted
 925:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg 0x00080100: SDADC_Channel_8 is recently converted
 926:../stdperiph/source/stm32f37x_sdadc.c ****   */
 927:../stdperiph/source/stm32f37x_sdadc.c **** uint32_t SDADC_GetInjectedChannel(SDADC_TypeDef* SDADCx)
 928:../stdperiph/source/stm32f37x_sdadc.c **** {
 820              		.loc 1 928 0
 821              		.cfi_startproc
 822              		@ args = 0, pretend = 0, frame = 0
 823              		@ frame_needed = 0, uses_anonymous_args = 0
 824              		@ link register save eliminated.
 825              	.LVL61:
 929:../stdperiph/source/stm32f37x_sdadc.c ****   uint32_t temp = 0;
 930:../stdperiph/source/stm32f37x_sdadc.c ****   
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 31


 931:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
 932:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
 933:../stdperiph/source/stm32f37x_sdadc.c **** 
 934:../stdperiph/source/stm32f37x_sdadc.c ****   /* Get the injected channel most recently converted */
 935:../stdperiph/source/stm32f37x_sdadc.c ****   temp = (uint32_t)(SDADCx->JDATAR>>16);
 826              		.loc 1 935 0
 827 0000 036E     		ldr	r3, [r0, #96]
 828 0002 1B0C     		lsrs	r3, r3, #16
 829              	.LVL62:
 936:../stdperiph/source/stm32f37x_sdadc.c ****   temp = (uint32_t) (((uint32_t)1<<temp) | (temp<<(uint32_t)16));
 830              		.loc 1 936 0
 831 0004 0120     		movs	r0, #1
 832              	.LVL63:
 833 0006 9840     		lsls	r0, r0, r3
 834              	.LVL64:
 937:../stdperiph/source/stm32f37x_sdadc.c **** 
 938:../stdperiph/source/stm32f37x_sdadc.c ****   /* Returns the injected channel most recently converted */
 939:../stdperiph/source/stm32f37x_sdadc.c ****   return (uint32_t) (temp);
 940:../stdperiph/source/stm32f37x_sdadc.c **** }
 835              		.loc 1 940 0
 836 0008 40EA0340 		orr	r0, r0, r3, lsl #16
 837              	.LVL65:
 838 000c 7047     		bx	lr
 839              		.cfi_endproc
 840              	.LFE136:
 842 000e 00BF     		.section	.text.SDADC_GetInjectedConversionValue,"ax",%progbits
 843              		.align	2
 844              		.global	SDADC_GetInjectedConversionValue
 845              		.thumb
 846              		.thumb_func
 848              	SDADC_GetInjectedConversionValue:
 849              	.LFB137:
 941:../stdperiph/source/stm32f37x_sdadc.c **** 
 942:../stdperiph/source/stm32f37x_sdadc.c **** /**
 943:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Returns the SDADC injected channel conversion result
 944:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
 945:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADC_Channel: the most recently converted SDADC injected channel.
 946:../stdperiph/source/stm32f37x_sdadc.c ****   *          This parameter can be one of the following values:
 947:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg 0x00000001: SDADC_Channel_0 is recently converted 
 948:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg 0x00010002: SDADC_Channel_1 is recently converted
 949:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg 0x00020004: SDADC_Channel_2 is recently converted
 950:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg 0x00030008: SDADC_Channel_3 is recently converted
 951:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg 0x00040010: SDADC_Channel_4 is recently converted
 952:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg 0x00050020: SDADC_Channel_5 is recently converted
 953:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg 0x00060040: SDADC_Channel_6 is recently converted
 954:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg 0x00070080: SDADC_Channel_7 is recently converted
 955:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg 0x00080100: SDADC_Channel_8 is recently converted
 956:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval The injected data conversion value.
 957:../stdperiph/source/stm32f37x_sdadc.c ****   */
 958:../stdperiph/source/stm32f37x_sdadc.c **** int16_t SDADC_GetInjectedConversionValue(SDADC_TypeDef* SDADCx, uint32_t* SDADC_Channel)
 959:../stdperiph/source/stm32f37x_sdadc.c **** {
 850              		.loc 1 959 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
 853              		@ frame_needed = 0, uses_anonymous_args = 0
 854              		@ link register save eliminated.
 855              	.LVL66:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 32


 960:../stdperiph/source/stm32f37x_sdadc.c ****   uint32_t tmp = 0;
 961:../stdperiph/source/stm32f37x_sdadc.c **** 
 962:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
 963:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
 964:../stdperiph/source/stm32f37x_sdadc.c **** 
 965:../stdperiph/source/stm32f37x_sdadc.c ****   /* Get SDADC_JDATAR register */
 966:../stdperiph/source/stm32f37x_sdadc.c ****   tmp = (uint32_t)SDADCx->JDATAR;
 856              		.loc 1 966 0
 857 0000 006E     		ldr	r0, [r0, #96]
 858              	.LVL67:
 967:../stdperiph/source/stm32f37x_sdadc.c **** 
 968:../stdperiph/source/stm32f37x_sdadc.c ****   /* Get the injected channel most recently converted */
 969:../stdperiph/source/stm32f37x_sdadc.c ****    *(uint32_t*)SDADC_Channel = (uint32_t) ((uint32_t)((tmp>>8) &0xffff0000) | (((uint32_t)1<<(tmp>>
 859              		.loc 1 969 0
 860 0002 020E     		lsrs	r2, r0, #24
 861 0004 0123     		movs	r3, #1
 862 0006 9340     		lsls	r3, r3, r2
 863 0008 43EA0243 		orr	r3, r3, r2, lsl #16
 864 000c 0B60     		str	r3, [r1]
 970:../stdperiph/source/stm32f37x_sdadc.c **** 
 971:../stdperiph/source/stm32f37x_sdadc.c ****   /* Returns the injected channel conversion data */
 972:../stdperiph/source/stm32f37x_sdadc.c ****   return (int16_t) ((uint32_t)(tmp & 0x0000FFFF));
 973:../stdperiph/source/stm32f37x_sdadc.c **** }
 865              		.loc 1 973 0
 866 000e 00B2     		sxth	r0, r0
 867              	.LVL68:
 868 0010 7047     		bx	lr
 869              		.cfi_endproc
 870              	.LFE137:
 872 0012 00BF     		.section	.text.SDADC_InjectedSynchroSDADC1,"ax",%progbits
 873              		.align	2
 874              		.global	SDADC_InjectedSynchroSDADC1
 875              		.thumb
 876              		.thumb_func
 878              	SDADC_InjectedSynchroSDADC1:
 879              	.LFB138:
 974:../stdperiph/source/stm32f37x_sdadc.c **** 
 975:../stdperiph/source/stm32f37x_sdadc.c **** /**
 976:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Launches injected conversion synchronously with SDADC1.
 977:../stdperiph/source/stm32f37x_sdadc.c ****   * @note   This feature is available only on SDADC2 and SDADC3.
 978:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 2 or 3 to select the SDADC peripheral.
 979:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  NewState: new state of the selected SDADC synchronization with SDADC1
 980:../stdperiph/source/stm32f37x_sdadc.c ****   *          This parameter can be: ENABLE or DISABLE.
 981:../stdperiph/source/stm32f37x_sdadc.c ****   *         When enabled, An injected conversion is launched at the same moment
 982:../stdperiph/source/stm32f37x_sdadc.c ****   *         that an injected conversion is launched in SDADC1.
 983:../stdperiph/source/stm32f37x_sdadc.c ****   *         When disabled, do not launch an injected conversion synchronously with SDADC1.
 984:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
 985:../stdperiph/source/stm32f37x_sdadc.c ****   */
 986:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_InjectedSynchroSDADC1(SDADC_TypeDef* SDADCx, FunctionalState NewState)
 987:../stdperiph/source/stm32f37x_sdadc.c **** {
 880              		.loc 1 987 0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 0
 883              		@ frame_needed = 0, uses_anonymous_args = 0
 884              		@ link register save eliminated.
 885              	.LVL69:
 988:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 33


 989:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_SLAVE_PERIPH(SDADCx));
 990:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 991:../stdperiph/source/stm32f37x_sdadc.c **** 
 992:../stdperiph/source/stm32f37x_sdadc.c ****   if (NewState != DISABLE)
 886              		.loc 1 992 0
 887 0000 21B1     		cbz	r1, .L61
 993:../stdperiph/source/stm32f37x_sdadc.c ****   {
 994:../stdperiph/source/stm32f37x_sdadc.c ****     /* Enable synchronization with SDADC1 on injected conversions */
 995:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR1 |= SDADC_CR1_JSYNC;
 888              		.loc 1 995 0
 889 0002 0368     		ldr	r3, [r0]
 890 0004 43F48043 		orr	r3, r3, #16384
 891 0008 0360     		str	r3, [r0]
 892 000a 7047     		bx	lr
 893              	.L61:
 996:../stdperiph/source/stm32f37x_sdadc.c ****   }
 997:../stdperiph/source/stm32f37x_sdadc.c ****   else
 998:../stdperiph/source/stm32f37x_sdadc.c ****   {
 999:../stdperiph/source/stm32f37x_sdadc.c ****     /* Disable synchronization with SDADC1 on injected conversions */
1000:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR1 &= (uint32_t)~SDADC_CR1_JSYNC;
 894              		.loc 1 1000 0
 895 000c 0368     		ldr	r3, [r0]
 896 000e 23F48043 		bic	r3, r3, #16384
 897 0012 0360     		str	r3, [r0]
 898 0014 7047     		bx	lr
 899              		.cfi_endproc
 900              	.LFE138:
 902 0016 00BF     		.section	.text.SDADC_GetInjectedConversionSDADC12Value,"ax",%progbits
 903              		.align	2
 904              		.global	SDADC_GetInjectedConversionSDADC12Value
 905              		.thumb
 906              		.thumb_func
 908              	SDADC_GetInjectedConversionSDADC12Value:
 909              	.LFB139:
1001:../stdperiph/source/stm32f37x_sdadc.c ****   }
1002:../stdperiph/source/stm32f37x_sdadc.c **** }
1003:../stdperiph/source/stm32f37x_sdadc.c **** 
1004:../stdperiph/source/stm32f37x_sdadc.c **** /**
1005:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Returns the last conversion result data for injected channel of SDADC1 and SDADC2.
1006:../stdperiph/source/stm32f37x_sdadc.c ****   *         JSYNC bit of the SDADC2 should be already set.
1007:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  None
1008:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval The Data conversion value for SDADC1 and SDADC2.
1009:../stdperiph/source/stm32f37x_sdadc.c ****   *         In 16-bit MSB: the regular conversion data for SDADC2.
1010:../stdperiph/source/stm32f37x_sdadc.c ****   *          This data is valid only when the flag SDADC_FLAG_JEOC of SDADC2 is set.  
1011:../stdperiph/source/stm32f37x_sdadc.c ****   *         In 16-bit LSB: the regular conversion data for SDADC1.
1012:../stdperiph/source/stm32f37x_sdadc.c ****   *          This data is valid only when the flag SDADC_FLAG_JEOC of SDADC1 is set.    
1013:../stdperiph/source/stm32f37x_sdadc.c ****   */
1014:../stdperiph/source/stm32f37x_sdadc.c **** uint32_t SDADC_GetInjectedConversionSDADC12Value(void)
1015:../stdperiph/source/stm32f37x_sdadc.c **** {
 910              		.loc 1 1015 0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 0
 913              		@ frame_needed = 0, uses_anonymous_args = 0
 914              		@ link register save eliminated.
1016:../stdperiph/source/stm32f37x_sdadc.c ****   /* Return the selected conversion value for injected channel of SDADC1 and SDADC2*/
1017:../stdperiph/source/stm32f37x_sdadc.c ****   return (uint32_t) SDADC1->JDATA12R;
 915              		.loc 1 1017 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 34


 916 0000 014B     		ldr	r3, .L64
 917 0002 186F     		ldr	r0, [r3, #112]
1018:../stdperiph/source/stm32f37x_sdadc.c **** }
 918              		.loc 1 1018 0
 919 0004 7047     		bx	lr
 920              	.L65:
 921 0006 00BF     		.align	2
 922              	.L64:
 923 0008 00600140 		.word	1073831936
 924              		.cfi_endproc
 925              	.LFE139:
 927              		.section	.text.SDADC_GetInjectedConversionSDADC13Value,"ax",%progbits
 928              		.align	2
 929              		.global	SDADC_GetInjectedConversionSDADC13Value
 930              		.thumb
 931              		.thumb_func
 933              	SDADC_GetInjectedConversionSDADC13Value:
 934              	.LFB140:
1019:../stdperiph/source/stm32f37x_sdadc.c **** 
1020:../stdperiph/source/stm32f37x_sdadc.c **** /**
1021:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Returns the last conversion result data for injected channel of SDADC1 and SDADC3.
1022:../stdperiph/source/stm32f37x_sdadc.c ****   *         JSYNC bit of the SDADC3 should be already set.
1023:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  None
1024:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval The Data conversion value for SDADC1 and SDADC3.
1025:../stdperiph/source/stm32f37x_sdadc.c ****   *         In 16-bit MSB: the injected conversion data for SDADC3.
1026:../stdperiph/source/stm32f37x_sdadc.c ****   *          This data is valid only when the flag SDADC_FLAG_JEOC of SDADC3 is set.  
1027:../stdperiph/source/stm32f37x_sdadc.c ****   *         In 16-bit LSB: the injected conversion data for SDADC1.
1028:../stdperiph/source/stm32f37x_sdadc.c ****   *          This data is valid only when the flag SDADC_FLAG_JEOC of SDADC1 is set.
1029:../stdperiph/source/stm32f37x_sdadc.c ****   */
1030:../stdperiph/source/stm32f37x_sdadc.c **** uint32_t SDADC_GetInjectedConversionSDADC13Value(void)
1031:../stdperiph/source/stm32f37x_sdadc.c **** {
 935              		.loc 1 1031 0
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 0
 938              		@ frame_needed = 0, uses_anonymous_args = 0
 939              		@ link register save eliminated.
1032:../stdperiph/source/stm32f37x_sdadc.c ****   /* Return the selected conversion value for injected channel of SDADC1 and SDADC3*/
1033:../stdperiph/source/stm32f37x_sdadc.c ****   return (uint32_t) SDADC1->JDATA13R;
 940              		.loc 1 1033 0
 941 0000 014B     		ldr	r3, .L67
 942 0002 986F     		ldr	r0, [r3, #120]
1034:../stdperiph/source/stm32f37x_sdadc.c **** }
 943              		.loc 1 1034 0
 944 0004 7047     		bx	lr
 945              	.L68:
 946 0006 00BF     		.align	2
 947              	.L67:
 948 0008 00600140 		.word	1073831936
 949              		.cfi_endproc
 950              	.LFE140:
 952              		.section	.text.SDADC_PowerDownCmd,"ax",%progbits
 953              		.align	2
 954              		.global	SDADC_PowerDownCmd
 955              		.thumb
 956              		.thumb_func
 958              	SDADC_PowerDownCmd:
 959              	.LFB141:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 35


1035:../stdperiph/source/stm32f37x_sdadc.c **** 
1036:../stdperiph/source/stm32f37x_sdadc.c **** /**
1037:../stdperiph/source/stm32f37x_sdadc.c ****   * @}
1038:../stdperiph/source/stm32f37x_sdadc.c ****   */
1039:../stdperiph/source/stm32f37x_sdadc.c **** 
1040:../stdperiph/source/stm32f37x_sdadc.c **** /** @defgroup SDADC_Group4 Power saving functions
1041:../stdperiph/source/stm32f37x_sdadc.c ****  *  @brief   Power saving functions 
1042:../stdperiph/source/stm32f37x_sdadc.c ****  *
1043:../stdperiph/source/stm32f37x_sdadc.c **** @verbatim   
1044:../stdperiph/source/stm32f37x_sdadc.c ****  ===============================================================================
1045:../stdperiph/source/stm32f37x_sdadc.c ****           ##### Power saving functions #####
1046:../stdperiph/source/stm32f37x_sdadc.c ****  ===============================================================================  
1047:../stdperiph/source/stm32f37x_sdadc.c ****     [..] This section provides functions allowing to reduce power consumption: 
1048:../stdperiph/source/stm32f37x_sdadc.c ****         (+) Enable the power down mode when idle using SDADC_PowerDownCmd();
1049:../stdperiph/source/stm32f37x_sdadc.c ****         (+) Enable the standby mode when idle using SDADC_StandbyCmd();
1050:../stdperiph/source/stm32f37x_sdadc.c ****         (+) Enable the slow clock mode using SDADC_SlowClockCmd()
1051:../stdperiph/source/stm32f37x_sdadc.c **** 
1052:../stdperiph/source/stm32f37x_sdadc.c **** @endverbatim
1053:../stdperiph/source/stm32f37x_sdadc.c ****   * @{
1054:../stdperiph/source/stm32f37x_sdadc.c ****   */
1055:../stdperiph/source/stm32f37x_sdadc.c **** 
1056:../stdperiph/source/stm32f37x_sdadc.c **** /**
1057:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Enables or disables the SDADC power down mode when idle.
1058:../stdperiph/source/stm32f37x_sdadc.c ****   * @note   SDADC power down mode when idle is used to cut the consumption when
1059:../stdperiph/source/stm32f37x_sdadc.c ****   *         the SDADC is not converting (when idle).
1060:../stdperiph/source/stm32f37x_sdadc.c ****   * @note   When the SDADC is in power down mode and a conversion is requested, 
1061:../stdperiph/source/stm32f37x_sdadc.c ****   *         the SDADC takes 100us to stabilize before launching the conversion.
1062:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.  
1063:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  NewState: new state of the selected SDADC power down mode when idle
1064:../stdperiph/source/stm32f37x_sdadc.c ****   *          This parameter can be: ENABLE or DISABLE.
1065:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
1066:../stdperiph/source/stm32f37x_sdadc.c ****   */
1067:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_PowerDownCmd(SDADC_TypeDef* SDADCx, FunctionalState NewState)
1068:../stdperiph/source/stm32f37x_sdadc.c **** {
 960              		.loc 1 1068 0
 961              		.cfi_startproc
 962              		@ args = 0, pretend = 0, frame = 0
 963              		@ frame_needed = 0, uses_anonymous_args = 0
 964              		@ link register save eliminated.
 965              	.LVL70:
1069:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
1070:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
1071:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1072:../stdperiph/source/stm32f37x_sdadc.c ****   
1073:../stdperiph/source/stm32f37x_sdadc.c ****   if (NewState != DISABLE)
 966              		.loc 1 1073 0
 967 0000 21B1     		cbz	r1, .L70
1074:../stdperiph/source/stm32f37x_sdadc.c ****   {
1075:../stdperiph/source/stm32f37x_sdadc.c ****     /* Enable the SDADC power-down when idle */
1076:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR1 |= SDADC_CR1_PDI;
 968              		.loc 1 1076 0
 969 0002 0368     		ldr	r3, [r0]
 970 0004 43F48053 		orr	r3, r3, #4096
 971 0008 0360     		str	r3, [r0]
 972 000a 7047     		bx	lr
 973              	.L70:
1077:../stdperiph/source/stm32f37x_sdadc.c ****   }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 36


1078:../stdperiph/source/stm32f37x_sdadc.c ****   else
1079:../stdperiph/source/stm32f37x_sdadc.c ****   {
1080:../stdperiph/source/stm32f37x_sdadc.c ****     /* Disable the SDADCx power-down when idle */
1081:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR1 &= (uint32_t)~SDADC_CR1_PDI;
 974              		.loc 1 1081 0
 975 000c 0368     		ldr	r3, [r0]
 976 000e 23F48053 		bic	r3, r3, #4096
 977 0012 0360     		str	r3, [r0]
 978 0014 7047     		bx	lr
 979              		.cfi_endproc
 980              	.LFE141:
 982 0016 00BF     		.section	.text.SDADC_StandbyCmd,"ax",%progbits
 983              		.align	2
 984              		.global	SDADC_StandbyCmd
 985              		.thumb
 986              		.thumb_func
 988              	SDADC_StandbyCmd:
 989              	.LFB142:
1082:../stdperiph/source/stm32f37x_sdadc.c ****   }
1083:../stdperiph/source/stm32f37x_sdadc.c **** }
1084:../stdperiph/source/stm32f37x_sdadc.c **** 
1085:../stdperiph/source/stm32f37x_sdadc.c **** /**
1086:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Enables or disables the SDADC standby mode when idle.
1087:../stdperiph/source/stm32f37x_sdadc.c ****   * @note   SDADC standby mode when idle is used to cut the consumption when
1088:../stdperiph/source/stm32f37x_sdadc.c ****   *         the SDADC is not converting (when idle).
1089:../stdperiph/source/stm32f37x_sdadc.c ****   * @note   When the SDADC is in standby mode and a conversion is requested, 
1090:../stdperiph/source/stm32f37x_sdadc.c ****   *         the SDADC takes 50us to stabilize before launching the conversion.
1091:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.  
1092:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  NewState: new state of the selected SDADC standby mode when idle
1093:../stdperiph/source/stm32f37x_sdadc.c ****   *          This parameter can be: ENABLE or DISABLE.
1094:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
1095:../stdperiph/source/stm32f37x_sdadc.c ****   */
1096:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_StandbyCmd(SDADC_TypeDef* SDADCx, FunctionalState NewState)
1097:../stdperiph/source/stm32f37x_sdadc.c **** {
 990              		.loc 1 1097 0
 991              		.cfi_startproc
 992              		@ args = 0, pretend = 0, frame = 0
 993              		@ frame_needed = 0, uses_anonymous_args = 0
 994              		@ link register save eliminated.
 995              	.LVL71:
1098:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
1099:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
1100:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1101:../stdperiph/source/stm32f37x_sdadc.c ****   
1102:../stdperiph/source/stm32f37x_sdadc.c ****   if (NewState != DISABLE)
 996              		.loc 1 1102 0
 997 0000 21B1     		cbz	r1, .L73
1103:../stdperiph/source/stm32f37x_sdadc.c ****   {
1104:../stdperiph/source/stm32f37x_sdadc.c ****     /* Enable the standby mode when idle */
1105:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR1 |= SDADC_CR1_SBI;
 998              		.loc 1 1105 0
 999 0002 0368     		ldr	r3, [r0]
 1000 0004 43F40063 		orr	r3, r3, #2048
 1001 0008 0360     		str	r3, [r0]
 1002 000a 7047     		bx	lr
 1003              	.L73:
1106:../stdperiph/source/stm32f37x_sdadc.c ****   }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 37


1107:../stdperiph/source/stm32f37x_sdadc.c ****   else
1108:../stdperiph/source/stm32f37x_sdadc.c ****   {
1109:../stdperiph/source/stm32f37x_sdadc.c ****     /* Disable the standby mode when idle */
1110:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR1 &= (uint32_t)~SDADC_CR1_SBI;
 1004              		.loc 1 1110 0
 1005 000c 0368     		ldr	r3, [r0]
 1006 000e 23F40063 		bic	r3, r3, #2048
 1007 0012 0360     		str	r3, [r0]
 1008 0014 7047     		bx	lr
 1009              		.cfi_endproc
 1010              	.LFE142:
 1012 0016 00BF     		.section	.text.SDADC_SlowClockCmd,"ax",%progbits
 1013              		.align	2
 1014              		.global	SDADC_SlowClockCmd
 1015              		.thumb
 1016              		.thumb_func
 1018              	SDADC_SlowClockCmd:
 1019              	.LFB143:
1111:../stdperiph/source/stm32f37x_sdadc.c ****   }
1112:../stdperiph/source/stm32f37x_sdadc.c **** }
1113:../stdperiph/source/stm32f37x_sdadc.c **** 
1114:../stdperiph/source/stm32f37x_sdadc.c **** /**
1115:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Enables or disables the SDADC in slow clock mode.
1116:../stdperiph/source/stm32f37x_sdadc.c ****   * @note   Slow clock mode (where the SDADC clock frequency should be 1.5MHz)
1117:../stdperiph/source/stm32f37x_sdadc.c ****   *         allowing a lower level of current consumption as well as operation
1118:../stdperiph/source/stm32f37x_sdadc.c ****   *         at a lower minimum voltage.
1119:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.  
1120:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  NewState: new state of the selected SDADC slow clock mode
1121:../stdperiph/source/stm32f37x_sdadc.c ****   *          This parameter can be: ENABLE or DISABLE.
1122:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
1123:../stdperiph/source/stm32f37x_sdadc.c ****   */
1124:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_SlowClockCmd(SDADC_TypeDef* SDADCx, FunctionalState NewState)
1125:../stdperiph/source/stm32f37x_sdadc.c **** {
 1020              		.loc 1 1125 0
 1021              		.cfi_startproc
 1022              		@ args = 0, pretend = 0, frame = 0
 1023              		@ frame_needed = 0, uses_anonymous_args = 0
 1024              		@ link register save eliminated.
 1025              	.LVL72:
1126:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
1127:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
1128:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1129:../stdperiph/source/stm32f37x_sdadc.c **** 
1130:../stdperiph/source/stm32f37x_sdadc.c ****   if (NewState != DISABLE)
 1026              		.loc 1 1130 0
 1027 0000 21B1     		cbz	r1, .L76
1131:../stdperiph/source/stm32f37x_sdadc.c ****   {
1132:../stdperiph/source/stm32f37x_sdadc.c ****     /* Enable the slow clock mode */
1133:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR1 |= SDADC_CR1_SLOWCK;
 1028              		.loc 1 1133 0
 1029 0002 0368     		ldr	r3, [r0]
 1030 0004 43F48063 		orr	r3, r3, #1024
 1031 0008 0360     		str	r3, [r0]
 1032 000a 7047     		bx	lr
 1033              	.L76:
1134:../stdperiph/source/stm32f37x_sdadc.c ****   }
1135:../stdperiph/source/stm32f37x_sdadc.c ****   else
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 38


1136:../stdperiph/source/stm32f37x_sdadc.c ****   {
1137:../stdperiph/source/stm32f37x_sdadc.c ****     /* Disable the slow clock mode */
1138:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR1 &= (uint32_t)~SDADC_CR1_SLOWCK;
 1034              		.loc 1 1138 0
 1035 000c 0368     		ldr	r3, [r0]
 1036 000e 23F48063 		bic	r3, r3, #1024
 1037 0012 0360     		str	r3, [r0]
 1038 0014 7047     		bx	lr
 1039              		.cfi_endproc
 1040              	.LFE143:
 1042 0016 00BF     		.section	.text.SDADC_DMAConfig,"ax",%progbits
 1043              		.align	2
 1044              		.global	SDADC_DMAConfig
 1045              		.thumb
 1046              		.thumb_func
 1048              	SDADC_DMAConfig:
 1049              	.LFB144:
1139:../stdperiph/source/stm32f37x_sdadc.c ****   }
1140:../stdperiph/source/stm32f37x_sdadc.c **** }
1141:../stdperiph/source/stm32f37x_sdadc.c **** 
1142:../stdperiph/source/stm32f37x_sdadc.c **** /**
1143:../stdperiph/source/stm32f37x_sdadc.c ****   * @}
1144:../stdperiph/source/stm32f37x_sdadc.c ****   */
1145:../stdperiph/source/stm32f37x_sdadc.c **** 
1146:../stdperiph/source/stm32f37x_sdadc.c **** /** @defgroup SDADC_Group5 Regular/Injected Channels DMA Configuration function
1147:../stdperiph/source/stm32f37x_sdadc.c ****  *  @brief   Regular/Injected Channels DMA Configuration functions 
1148:../stdperiph/source/stm32f37x_sdadc.c ****  *
1149:../stdperiph/source/stm32f37x_sdadc.c **** @verbatim   
1150:../stdperiph/source/stm32f37x_sdadc.c ****  ===============================================================================
1151:../stdperiph/source/stm32f37x_sdadc.c ****           ##### Regular Channels DMA Configuration functions ##### 
1152:../stdperiph/source/stm32f37x_sdadc.c ****  ===============================================================================  
1153:../stdperiph/source/stm32f37x_sdadc.c ****     [..] This section provides functions allowing to configure the DMA for SDADC regular 
1154:../stdperiph/source/stm32f37x_sdadc.c ****          or injected channels.
1155:../stdperiph/source/stm32f37x_sdadc.c ****     [..] Since converted value is stored into a unique data register, it is useful
1156:../stdperiph/source/stm32f37x_sdadc.c ****          to use DMA for conversion of more than one channel.
1157:../stdperiph/source/stm32f37x_sdadc.c ****          This avoids the loss of the data already stored in the SDADC Data register. 
1158:../stdperiph/source/stm32f37x_sdadc.c ****          When the DMA is enabled for regular/injected channel (using the SDADC_DMAConfig()
1159:../stdperiph/source/stm32f37x_sdadc.c ****          function), after each conversion of a regular/injected channel,
1160:../stdperiph/source/stm32f37x_sdadc.c ****          a DMA request is generated.
1161:../stdperiph/source/stm32f37x_sdadc.c **** 
1162:../stdperiph/source/stm32f37x_sdadc.c **** @endverbatim
1163:../stdperiph/source/stm32f37x_sdadc.c ****   * @{
1164:../stdperiph/source/stm32f37x_sdadc.c ****   */
1165:../stdperiph/source/stm32f37x_sdadc.c **** 
1166:../stdperiph/source/stm32f37x_sdadc.c **** /**
1167:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Configures the DMA transfer for regular/injected conversions.  
1168:../stdperiph/source/stm32f37x_sdadc.c ****   * @note   DMA requests can't be enabled for both regular and injected conversions.
1169:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
1170:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADC_DMATransfer: Specifies the SDADC DMA transfer.
1171:../stdperiph/source/stm32f37x_sdadc.c ****   *          This parameter can be one of the following values:
1172:../stdperiph/source/stm32f37x_sdadc.c ****   *          @arg SDADC_DMATransfer_Regular: When enabled, DMA manages reading the 
1173:../stdperiph/source/stm32f37x_sdadc.c ****   *          data for the regular channel.
1174:../stdperiph/source/stm32f37x_sdadc.c ****   *          @arg SDADC_DMATransfer_Injected: When enabled, DMA manages reading the
1175:../stdperiph/source/stm32f37x_sdadc.c ****   *          data for the injected channel.
1176:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  NewState Indicates the new state of the SDADC DMA interface.
1177:../stdperiph/source/stm32f37x_sdadc.c ****   *           This parameter can be: ENABLE or DISABLE.  
1178:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 39


1179:../stdperiph/source/stm32f37x_sdadc.c ****   */
1180:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_DMAConfig(SDADC_TypeDef* SDADCx, uint32_t SDADC_DMATransfer, FunctionalState NewState)
1181:../stdperiph/source/stm32f37x_sdadc.c **** {
 1050              		.loc 1 1181 0
 1051              		.cfi_startproc
 1052              		@ args = 0, pretend = 0, frame = 0
 1053              		@ frame_needed = 0, uses_anonymous_args = 0
 1054              		@ link register save eliminated.
 1055              	.LVL73:
1182:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
1183:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
1184:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_DMA_TRANSFER(SDADC_DMATransfer));
1185:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1186:../stdperiph/source/stm32f37x_sdadc.c **** 
1187:../stdperiph/source/stm32f37x_sdadc.c ****   if (NewState != DISABLE)
 1056              		.loc 1 1187 0
 1057 0000 1AB1     		cbz	r2, .L79
1188:../stdperiph/source/stm32f37x_sdadc.c ****   {
1189:../stdperiph/source/stm32f37x_sdadc.c ****     /* Enable the DMA transfer */
1190:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR1 |= SDADC_DMATransfer;
 1058              		.loc 1 1190 0
 1059 0002 0368     		ldr	r3, [r0]
 1060 0004 1943     		orrs	r1, r1, r3
 1061              	.LVL74:
 1062 0006 0160     		str	r1, [r0]
 1063 0008 7047     		bx	lr
 1064              	.LVL75:
 1065              	.L79:
1191:../stdperiph/source/stm32f37x_sdadc.c ****   }
1192:../stdperiph/source/stm32f37x_sdadc.c ****   else
1193:../stdperiph/source/stm32f37x_sdadc.c ****   {
1194:../stdperiph/source/stm32f37x_sdadc.c ****     /* Disable the DMA transfer */
1195:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR1 &= (uint32_t)(~SDADC_DMATransfer);
 1066              		.loc 1 1195 0
 1067 000a 0368     		ldr	r3, [r0]
 1068 000c 23EA0101 		bic	r1, r3, r1
 1069              	.LVL76:
 1070 0010 0160     		str	r1, [r0]
 1071 0012 7047     		bx	lr
 1072              		.cfi_endproc
 1073              	.LFE144:
 1075              		.section	.text.SDADC_ITConfig,"ax",%progbits
 1076              		.align	2
 1077              		.global	SDADC_ITConfig
 1078              		.thumb
 1079              		.thumb_func
 1081              	SDADC_ITConfig:
 1082              	.LFB145:
1196:../stdperiph/source/stm32f37x_sdadc.c ****   }
1197:../stdperiph/source/stm32f37x_sdadc.c **** }
1198:../stdperiph/source/stm32f37x_sdadc.c **** 
1199:../stdperiph/source/stm32f37x_sdadc.c **** /**
1200:../stdperiph/source/stm32f37x_sdadc.c ****   * @}
1201:../stdperiph/source/stm32f37x_sdadc.c ****   */
1202:../stdperiph/source/stm32f37x_sdadc.c **** 
1203:../stdperiph/source/stm32f37x_sdadc.c **** /** @defgroup SDADC_Group6 Interrupts and flags management functions
1204:../stdperiph/source/stm32f37x_sdadc.c ****  *  @brief   Interrupts and flags management functions
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 40


1205:../stdperiph/source/stm32f37x_sdadc.c ****  *
1206:../stdperiph/source/stm32f37x_sdadc.c **** @verbatim   
1207:../stdperiph/source/stm32f37x_sdadc.c ****  ===============================================================================
1208:../stdperiph/source/stm32f37x_sdadc.c ****           ##### Interrupts and flags management functions ##### 
1209:../stdperiph/source/stm32f37x_sdadc.c ****  ===============================================================================  
1210:../stdperiph/source/stm32f37x_sdadc.c ****     [..] This section provides functions allowing to configure the SDADC Interrupts and
1211:../stdperiph/source/stm32f37x_sdadc.c ****          get the status and clear flags and Interrupts pending bits.
1212:../stdperiph/source/stm32f37x_sdadc.c **** 
1213:../stdperiph/source/stm32f37x_sdadc.c ****     [..] The SDADC provide 5 Interrupts sources and 10 Flags which can be divided into 3 groups:
1214:../stdperiph/source/stm32f37x_sdadc.c ****   
1215:../stdperiph/source/stm32f37x_sdadc.c ****   *** Flags and Interrupts for SDADC regular channels ***
1216:../stdperiph/source/stm32f37x_sdadc.c ****   ======================================================  
1217:../stdperiph/source/stm32f37x_sdadc.c ****     [..]
1218:../stdperiph/source/stm32f37x_sdadc.c ****         (+)Flags :
1219:../stdperiph/source/stm32f37x_sdadc.c ****            (##) SDADC_FLAG_ROVR : Overrun detection when regular converted data are lost.
1220:../stdperiph/source/stm32f37x_sdadc.c ****            (##) SDADC_FLAG_REOC : Regular channel end of conversion.
1221:../stdperiph/source/stm32f37x_sdadc.c ****            (##) SDADC_FLAG_RCIP: Regular conversion in progress.
1222:../stdperiph/source/stm32f37x_sdadc.c ****      
1223:../stdperiph/source/stm32f37x_sdadc.c ****         (+)Interrupts :
1224:../stdperiph/source/stm32f37x_sdadc.c ****            (##) SDADC_IT_REOC : specifies the interrupt source for end of regular conversion event.
1225:../stdperiph/source/stm32f37x_sdadc.c ****            (##) SDADC_IT_ROVRF : specifies the interrupt source for regular conversion overrun even
1226:../stdperiph/source/stm32f37x_sdadc.c ****   
1227:../stdperiph/source/stm32f37x_sdadc.c ****   
1228:../stdperiph/source/stm32f37x_sdadc.c ****   *** Flags and Interrupts for SDADC Injected channels ***
1229:../stdperiph/source/stm32f37x_sdadc.c ****   ======================================================
1230:../stdperiph/source/stm32f37x_sdadc.c ****     [..]
1231:../stdperiph/source/stm32f37x_sdadc.c ****         (+)Flags :
1232:../stdperiph/source/stm32f37x_sdadc.c ****            (##) SDADC_FLAG_JEOC : Injected channel end of conversion event.
1233:../stdperiph/source/stm32f37x_sdadc.c ****            (##) SDADC_FLAG_JOVR: Injected channel Overrun detection event.
1234:../stdperiph/source/stm32f37x_sdadc.c ****            (##) SDADC_FLAG_JCIP: Injected channel conversion in progress.
1235:../stdperiph/source/stm32f37x_sdadc.c **** 
1236:../stdperiph/source/stm32f37x_sdadc.c ****         (+)Interrupts :
1237:../stdperiph/source/stm32f37x_sdadc.c ****            (##) SDADC_IT_JEOC: specifies the interrupt source for end of injected
1238:../stdperiph/source/stm32f37x_sdadc.c ****                         conversion event.
1239:../stdperiph/source/stm32f37x_sdadc.c ****            (##) SDADC_IT_JOVR: specifies the interrupt source for injected conersion
1240:../stdperiph/source/stm32f37x_sdadc.c ****                         overrun event.
1241:../stdperiph/source/stm32f37x_sdadc.c **** 
1242:../stdperiph/source/stm32f37x_sdadc.c ****   *** General Flags and Interrupts for the SDADC ***
1243:../stdperiph/source/stm32f37x_sdadc.c ****   ================================================
1244:../stdperiph/source/stm32f37x_sdadc.c ****     [..]
1245:../stdperiph/source/stm32f37x_sdadc.c ****         (+)Flags :
1246:../stdperiph/source/stm32f37x_sdadc.c ****            (##) SDADC_FLAG_EOCAL: specifies the end of calibration event.
1247:../stdperiph/source/stm32f37x_sdadc.c ****            (##) SDADC_FLAG_CALIBIP: specifies that calibration is in progress.
1248:../stdperiph/source/stm32f37x_sdadc.c ****            (##) SDADC_FLAG_STABIP:  specifies that stabilization is in progress.
1249:../stdperiph/source/stm32f37x_sdadc.c ****            (##) SDADC_FLAG_INITRDY: specifies that initialization mode is ready .
1250:../stdperiph/source/stm32f37x_sdadc.c **** 
1251:../stdperiph/source/stm32f37x_sdadc.c ****         (+)Interrupts :
1252:../stdperiph/source/stm32f37x_sdadc.c ****            (##) SDADC_IT_EOCAL : specifies the interrupt source for end of calibration event.
1253:../stdperiph/source/stm32f37x_sdadc.c **** 
1254:../stdperiph/source/stm32f37x_sdadc.c ****     [..] User should identify which mode will be used in his application to manage 
1255:../stdperiph/source/stm32f37x_sdadc.c ****          the SDADC controller events: Polling mode or Interrupt mode.
1256:../stdperiph/source/stm32f37x_sdadc.c **** 
1257:../stdperiph/source/stm32f37x_sdadc.c ****     [..] In the Polling Mode it is advised to use the following functions:
1258:../stdperiph/source/stm32f37x_sdadc.c ****          (+) SDADC_GetFlagStatus(): to check if flags events occur.
1259:../stdperiph/source/stm32f37x_sdadc.c ****          (+) SDADC_ClearFlag()    : to clear the flags events.
1260:../stdperiph/source/stm32f37x_sdadc.c **** 
1261:../stdperiph/source/stm32f37x_sdadc.c ****     [..] In the Interrupt Mode it is advised to use the following functions:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 41


1262:../stdperiph/source/stm32f37x_sdadc.c ****          (+) SDADC_ITConfig()         : to enable or disable the interrupt source.
1263:../stdperiph/source/stm32f37x_sdadc.c ****          (+) SDADC_GetITStatus()      : to check if Interrupt occurs.
1264:../stdperiph/source/stm32f37x_sdadc.c ****          (+) SDADC_ClearITPendingBit(): to clear the Interrupt pending Bit 
1265:../stdperiph/source/stm32f37x_sdadc.c ****                                         (corresponding Flag). 
1266:../stdperiph/source/stm32f37x_sdadc.c **** @endverbatim
1267:../stdperiph/source/stm32f37x_sdadc.c ****   * @{
1268:../stdperiph/source/stm32f37x_sdadc.c ****   */ 
1269:../stdperiph/source/stm32f37x_sdadc.c **** 
1270:../stdperiph/source/stm32f37x_sdadc.c **** /**
1271:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Enables or disables the specified SDADC interrupts.
1272:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
1273:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADC_IT: specifies the SDADC interrupt sources to be enabled or disabled. 
1274:../stdperiph/source/stm32f37x_sdadc.c ****   *          This parameter can be one of the following values:
1275:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_IT_EOCAL: End of calibration interrupt
1276:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_IT_JEOC: End of injected conversion interrupt
1277:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_IT_JOVR: Injected conversion overrun interrupt
1278:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_IT_REOC: End of regular conversion interrupt
1279:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_IT_ROVR: Regular conversion overrun interrupt
1280:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  NewState: new state of the specified SDADC interrupts.
1281:../stdperiph/source/stm32f37x_sdadc.c ****   *          This parameter can be: ENABLE or DISABLE.
1282:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
1283:../stdperiph/source/stm32f37x_sdadc.c ****   */
1284:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_ITConfig(SDADC_TypeDef* SDADCx, uint32_t SDADC_IT, FunctionalState NewState)  
1285:../stdperiph/source/stm32f37x_sdadc.c **** {
 1083              		.loc 1 1285 0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 0
 1086              		@ frame_needed = 0, uses_anonymous_args = 0
 1087              		@ link register save eliminated.
 1088              	.LVL77:
1286:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
1287:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
1288:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1289:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_IT(SDADC_IT)); 
1290:../stdperiph/source/stm32f37x_sdadc.c **** 
1291:../stdperiph/source/stm32f37x_sdadc.c ****   if (NewState != DISABLE)
 1089              		.loc 1 1291 0
 1090 0000 1AB1     		cbz	r2, .L82
1292:../stdperiph/source/stm32f37x_sdadc.c ****   {
1293:../stdperiph/source/stm32f37x_sdadc.c ****     /* Enable the selected SDADC interrupts */
1294:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR1 |= SDADC_IT;
 1091              		.loc 1 1294 0
 1092 0002 0368     		ldr	r3, [r0]
 1093 0004 1943     		orrs	r1, r1, r3
 1094              	.LVL78:
 1095 0006 0160     		str	r1, [r0]
 1096 0008 7047     		bx	lr
 1097              	.LVL79:
 1098              	.L82:
1295:../stdperiph/source/stm32f37x_sdadc.c ****   }
1296:../stdperiph/source/stm32f37x_sdadc.c ****   else
1297:../stdperiph/source/stm32f37x_sdadc.c ****   {
1298:../stdperiph/source/stm32f37x_sdadc.c ****     /* Disable the selected SDADC interrupts */
1299:../stdperiph/source/stm32f37x_sdadc.c ****     SDADCx->CR1 &= ((uint32_t)~SDADC_IT);
 1099              		.loc 1 1299 0
 1100 000a 0368     		ldr	r3, [r0]
 1101 000c 23EA0101 		bic	r1, r3, r1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 42


 1102              	.LVL80:
 1103 0010 0160     		str	r1, [r0]
 1104 0012 7047     		bx	lr
 1105              		.cfi_endproc
 1106              	.LFE145:
 1108              		.section	.text.SDADC_GetFlagStatus,"ax",%progbits
 1109              		.align	2
 1110              		.global	SDADC_GetFlagStatus
 1111              		.thumb
 1112              		.thumb_func
 1114              	SDADC_GetFlagStatus:
 1115              	.LFB146:
1300:../stdperiph/source/stm32f37x_sdadc.c ****   }
1301:../stdperiph/source/stm32f37x_sdadc.c **** }
1302:../stdperiph/source/stm32f37x_sdadc.c **** 
1303:../stdperiph/source/stm32f37x_sdadc.c **** /**
1304:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Checks whether the specified SDADC flag is set or not.
1305:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
1306:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADC_FLAG: specifies the flag to check. 
1307:../stdperiph/source/stm32f37x_sdadc.c ****   *          This parameter can be one of the following values:
1308:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_FLAG_EOCAL: End of calibration flag
1309:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_FLAG_JEOC: End of injected conversion flag
1310:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_FLAG_JOVR: Injected conversion overrun flag
1311:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_FLAG_REOC: End of regular conversion flag
1312:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_FLAG_ROVR: Regular conversion overrun flag
1313:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_FLAG_CALIBIP:Calibration in progress status flag
1314:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_FLAG_JCIP: Injected conversion in progress status flag
1315:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_FLAG_RCIP: Regular conversion in progress status flag
1316:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_FLAG_STABIP: Stabilization in progress status flag
1317:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_FLAG_INITRDY: Initialization mode is ready
1318:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval The new state of SDADC_FLAG (SET or RESET).
1319:../stdperiph/source/stm32f37x_sdadc.c ****   */
1320:../stdperiph/source/stm32f37x_sdadc.c **** FlagStatus SDADC_GetFlagStatus(SDADC_TypeDef* SDADCx, uint32_t SDADC_FLAG)
1321:../stdperiph/source/stm32f37x_sdadc.c **** {
 1116              		.loc 1 1321 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 0
 1119              		@ frame_needed = 0, uses_anonymous_args = 0
 1120              		@ link register save eliminated.
 1121              	.LVL81:
1322:../stdperiph/source/stm32f37x_sdadc.c ****   FlagStatus bitstatus = RESET;
1323:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
1324:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
1325:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_GET_FLAG(SDADC_FLAG));
1326:../stdperiph/source/stm32f37x_sdadc.c **** 
1327:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the status of the specified SDADC flag */
1328:../stdperiph/source/stm32f37x_sdadc.c ****   if ((SDADCx->ISR & SDADC_FLAG) != (uint32_t)RESET)
 1122              		.loc 1 1328 0
 1123 0000 8368     		ldr	r3, [r0, #8]
 1124 0002 0B42     		tst	r3, r1
 1125 0004 01D0     		beq	.L86
1329:../stdperiph/source/stm32f37x_sdadc.c ****   {
1330:../stdperiph/source/stm32f37x_sdadc.c ****     /* SDADC_FLAG is set */
1331:../stdperiph/source/stm32f37x_sdadc.c ****     bitstatus = SET;
 1126              		.loc 1 1331 0
 1127 0006 0120     		movs	r0, #1
 1128              	.LVL82:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 43


 1129 0008 7047     		bx	lr
 1130              	.LVL83:
 1131              	.L86:
1332:../stdperiph/source/stm32f37x_sdadc.c ****   }
1333:../stdperiph/source/stm32f37x_sdadc.c ****   else
1334:../stdperiph/source/stm32f37x_sdadc.c ****   {
1335:../stdperiph/source/stm32f37x_sdadc.c ****     /* SDADC_FLAG is reset */
1336:../stdperiph/source/stm32f37x_sdadc.c ****     bitstatus = RESET;
 1132              		.loc 1 1336 0
 1133 000a 0020     		movs	r0, #0
 1134              	.LVL84:
1337:../stdperiph/source/stm32f37x_sdadc.c ****   }
1338:../stdperiph/source/stm32f37x_sdadc.c ****   /* Return the SDADC_FLAG status */
1339:../stdperiph/source/stm32f37x_sdadc.c ****   return  bitstatus;
1340:../stdperiph/source/stm32f37x_sdadc.c **** }
 1135              		.loc 1 1340 0
 1136 000c 7047     		bx	lr
 1137              		.cfi_endproc
 1138              	.LFE146:
 1140 000e 00BF     		.section	.text.SDADC_ClearFlag,"ax",%progbits
 1141              		.align	2
 1142              		.global	SDADC_ClearFlag
 1143              		.thumb
 1144              		.thumb_func
 1146              	SDADC_ClearFlag:
 1147              	.LFB147:
1341:../stdperiph/source/stm32f37x_sdadc.c **** 
1342:../stdperiph/source/stm32f37x_sdadc.c **** /**
1343:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Clears the SDADCx pending flags.
1344:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
1345:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADC_FLAG: specifies the flag to clear.
1346:../stdperiph/source/stm32f37x_sdadc.c ****   *          This parameter can be any combination of the following values:
1347:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_FLAG_EOCAL: End of calibration flag
1348:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_FLAG_JOVR: Injected conversion overrun flag
1349:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_FLAG_ROVR: Regular conversion overrun flag
1350:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
1351:../stdperiph/source/stm32f37x_sdadc.c ****   */
1352:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_ClearFlag(SDADC_TypeDef* SDADCx, uint32_t SDADC_FLAG)
1353:../stdperiph/source/stm32f37x_sdadc.c **** {
 1148              		.loc 1 1353 0
 1149              		.cfi_startproc
 1150              		@ args = 0, pretend = 0, frame = 0
 1151              		@ frame_needed = 0, uses_anonymous_args = 0
 1152              		@ link register save eliminated.
 1153              	.LVL85:
1354:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
1355:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
1356:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_CLEAR_FLAG(SDADC_FLAG));
1357:../stdperiph/source/stm32f37x_sdadc.c **** 
1358:../stdperiph/source/stm32f37x_sdadc.c ****   /* Clear the selected SDADC flags */
1359:../stdperiph/source/stm32f37x_sdadc.c ****   SDADCx->CLRISR |= (uint32_t)SDADC_FLAG;
 1154              		.loc 1 1359 0
 1155 0000 C368     		ldr	r3, [r0, #12]
 1156 0002 1943     		orrs	r1, r1, r3
 1157              	.LVL86:
 1158 0004 C160     		str	r1, [r0, #12]
 1159 0006 7047     		bx	lr
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 44


 1160              		.cfi_endproc
 1161              	.LFE147:
 1163              		.section	.text.SDADC_GetITStatus,"ax",%progbits
 1164              		.align	2
 1165              		.global	SDADC_GetITStatus
 1166              		.thumb
 1167              		.thumb_func
 1169              	SDADC_GetITStatus:
 1170              	.LFB148:
1360:../stdperiph/source/stm32f37x_sdadc.c **** }
1361:../stdperiph/source/stm32f37x_sdadc.c **** 
1362:../stdperiph/source/stm32f37x_sdadc.c **** /**
1363:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Checks whether the specified SDADC interrupt has occurred or not.
1364:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
1365:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADC_IT: specifies the SDADC interrupt source to check. 
1366:../stdperiph/source/stm32f37x_sdadc.c ****   *          This parameter can be one of the following values:
1367:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_IT_EOCAL: End of calibration flag 
1368:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_IT_JEOC: End of injected conversion flag
1369:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_IT_JOVR: Injected conversion overrun flag
1370:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_IT_REOC: End of regular conversion flag
1371:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_IT_ROVR: Regular conversion overrun flag
1372:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval The new state of SDADC_IT (SET or RESET).
1373:../stdperiph/source/stm32f37x_sdadc.c ****   */
1374:../stdperiph/source/stm32f37x_sdadc.c **** ITStatus SDADC_GetITStatus(SDADC_TypeDef* SDADCx, uint32_t SDADC_IT)
1375:../stdperiph/source/stm32f37x_sdadc.c **** {
 1171              		.loc 1 1375 0
 1172              		.cfi_startproc
 1173              		@ args = 0, pretend = 0, frame = 0
 1174              		@ frame_needed = 0, uses_anonymous_args = 0
 1175              		@ link register save eliminated.
 1176              	.LVL87:
1376:../stdperiph/source/stm32f37x_sdadc.c ****   ITStatus bitstatus = RESET;
1377:../stdperiph/source/stm32f37x_sdadc.c ****   uint32_t itstatus = 0, enablestatus = 0;
1378:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
1379:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
1380:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_GET_IT(SDADC_IT));
1381:../stdperiph/source/stm32f37x_sdadc.c **** 
1382:../stdperiph/source/stm32f37x_sdadc.c ****   /* Get the SDADC interrupt pending status */
1383:../stdperiph/source/stm32f37x_sdadc.c ****   itstatus = (uint32_t) (SDADC_IT & SDADCx->ISR);
 1177              		.loc 1 1383 0
 1178 0000 8268     		ldr	r2, [r0, #8]
 1179              	.LVL88:
1384:../stdperiph/source/stm32f37x_sdadc.c ****   /* Get the SDADC IT enable bit status */
1385:../stdperiph/source/stm32f37x_sdadc.c ****   enablestatus = (SDADCx->CR1 & (uint32_t)SDADC_IT);
 1180              		.loc 1 1385 0
 1181 0002 0368     		ldr	r3, [r0]
 1182 0004 0B40     		ands	r3, r3, r1
 1183              	.LVL89:
1386:../stdperiph/source/stm32f37x_sdadc.c **** 
1387:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the status of the specified SDADC interrupt */
1388:../stdperiph/source/stm32f37x_sdadc.c ****   if ((itstatus != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
 1184              		.loc 1 1388 0
 1185 0006 0A42     		tst	r2, r1
 1186 0008 02D0     		beq	.L90
 1187              		.loc 1 1388 0 is_stmt 0 discriminator 1
 1188 000a 1BB9     		cbnz	r3, .L91
1389:../stdperiph/source/stm32f37x_sdadc.c ****   {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 45


1390:../stdperiph/source/stm32f37x_sdadc.c ****     /* SDADC_IT is set */
1391:../stdperiph/source/stm32f37x_sdadc.c ****     bitstatus = SET;
1392:../stdperiph/source/stm32f37x_sdadc.c ****   }
1393:../stdperiph/source/stm32f37x_sdadc.c ****   else
1394:../stdperiph/source/stm32f37x_sdadc.c ****   {
1395:../stdperiph/source/stm32f37x_sdadc.c ****     /* SDADC_IT is reset */
1396:../stdperiph/source/stm32f37x_sdadc.c ****     bitstatus = RESET;
 1189              		.loc 1 1396 0 is_stmt 1
 1190 000c 0020     		movs	r0, #0
 1191              	.LVL90:
 1192 000e 7047     		bx	lr
 1193              	.LVL91:
 1194              	.L90:
 1195 0010 0020     		movs	r0, #0
 1196              	.LVL92:
 1197 0012 7047     		bx	lr
 1198              	.LVL93:
 1199              	.L91:
1391:../stdperiph/source/stm32f37x_sdadc.c ****   }
 1200              		.loc 1 1391 0
 1201 0014 0120     		movs	r0, #1
 1202              	.LVL94:
1397:../stdperiph/source/stm32f37x_sdadc.c ****   }
1398:../stdperiph/source/stm32f37x_sdadc.c ****   /* Return the SDADC_IT status */
1399:../stdperiph/source/stm32f37x_sdadc.c ****   return  bitstatus;
1400:../stdperiph/source/stm32f37x_sdadc.c **** }
 1203              		.loc 1 1400 0
 1204 0016 7047     		bx	lr
 1205              		.cfi_endproc
 1206              	.LFE148:
 1208              		.section	.text.SDADC_ClearITPendingBit,"ax",%progbits
 1209              		.align	2
 1210              		.global	SDADC_ClearITPendingBit
 1211              		.thumb
 1212              		.thumb_func
 1214              	SDADC_ClearITPendingBit:
 1215              	.LFB149:
1401:../stdperiph/source/stm32f37x_sdadc.c **** 
1402:../stdperiph/source/stm32f37x_sdadc.c **** /**
1403:../stdperiph/source/stm32f37x_sdadc.c ****   * @brief  Clears the SDADCx interrupt pending bits.
1404:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADCx: where x can be 1, 2 or 3 to select the SDADC peripheral.
1405:../stdperiph/source/stm32f37x_sdadc.c ****   * @param  SDADC_IT: specifies the SDADC interrupt pending bit to clear.
1406:../stdperiph/source/stm32f37x_sdadc.c ****   *          This parameter can be any combination of the following values:
1407:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_IT_EOCAL: End of calibration flag 
1408:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_IT_JOVR: Injected conversion overrun flag
1409:../stdperiph/source/stm32f37x_sdadc.c ****   *            @arg SDADC_IT_ROVR: Regular conversion overrun flag
1410:../stdperiph/source/stm32f37x_sdadc.c ****   * @retval None
1411:../stdperiph/source/stm32f37x_sdadc.c ****   */
1412:../stdperiph/source/stm32f37x_sdadc.c **** void SDADC_ClearITPendingBit(SDADC_TypeDef* SDADCx, uint32_t SDADC_IT)
1413:../stdperiph/source/stm32f37x_sdadc.c **** {
 1216              		.loc 1 1413 0
 1217              		.cfi_startproc
 1218              		@ args = 0, pretend = 0, frame = 0
 1219              		@ frame_needed = 0, uses_anonymous_args = 0
 1220              		@ link register save eliminated.
 1221              	.LVL95:
1414:../stdperiph/source/stm32f37x_sdadc.c ****   /* Check the parameters */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 46


1415:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_ALL_PERIPH(SDADCx));
1416:../stdperiph/source/stm32f37x_sdadc.c ****   assert_param(IS_SDADC_CLEAR_IT(SDADC_IT));
1417:../stdperiph/source/stm32f37x_sdadc.c **** 
1418:../stdperiph/source/stm32f37x_sdadc.c ****   /* Clear the selected SDADC interrupt pending bits */
1419:../stdperiph/source/stm32f37x_sdadc.c ****   SDADCx->CLRISR |= (uint32_t)SDADC_IT;
 1222              		.loc 1 1419 0
 1223 0000 C368     		ldr	r3, [r0, #12]
 1224 0002 1943     		orrs	r1, r1, r3
 1225              	.LVL96:
 1226 0004 C160     		str	r1, [r0, #12]
 1227 0006 7047     		bx	lr
 1228              		.cfi_endproc
 1229              	.LFE149:
 1231              		.text
 1232              	.Letext0:
 1233              		.file 2 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\machine\\_defaul
 1234              		.file 3 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\sys\\_stdint.h"
 1235              		.file 4 "../cmsis/include/stm32f37x.h"
 1236              		.file 5 "../stdperiph/include/stm32f37x_sdadc.h"
 1237              		.file 6 "../cmsis/include/core_cm4.h"
 1238              		.file 7 "../stdperiph/include/stm32f37x_rcc.h"
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 47


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f37x_sdadc.c
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:22     .text.SDADC_DeInit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:27     .text.SDADC_DeInit:00000000 SDADC_DeInit
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:91     .text.SDADC_DeInit:00000050 $d
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:97     .text.SDADC_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:102    .text.SDADC_Init:00000000 SDADC_Init
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:148    .text.SDADC_StructInit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:153    .text.SDADC_StructInit:00000000 SDADC_StructInit
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:174    .text.SDADC_AINInit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:179    .text.SDADC_AINInit:00000000 SDADC_AINInit
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:221    .text.SDADC_AINStructInit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:226    .text.SDADC_AINStructInit:00000000 SDADC_AINStructInit
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:248    .text.SDADC_ChannelConfig:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:253    .text.SDADC_ChannelConfig:00000000 SDADC_ChannelConfig
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:284    .text.SDADC_ChannelConfig:0000001c $d
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:289    .text.SDADC_Cmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:294    .text.SDADC_Cmd:00000000 SDADC_Cmd
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:319    .text.SDADC_InitModeCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:324    .text.SDADC_InitModeCmd:00000000 SDADC_InitModeCmd
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:349    .text.SDADC_FastConversionCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:354    .text.SDADC_FastConversionCmd:00000000 SDADC_FastConversionCmd
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:379    .text.SDADC_VREFSelect:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:384    .text.SDADC_VREFSelect:00000000 SDADC_VREFSelect
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:408    .text.SDADC_VREFSelect:00000010 $d
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:413    .text.SDADC_CalibrationSequenceConfig:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:418    .text.SDADC_CalibrationSequenceConfig:00000000 SDADC_CalibrationSequenceConfig
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:442    .text.SDADC_StartCalibration:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:447    .text.SDADC_StartCalibration:00000000 SDADC_StartCalibration
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:464    .text.SDADC_ChannelSelect:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:469    .text.SDADC_ChannelSelect:00000000 SDADC_ChannelSelect
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:496    .text.SDADC_ContinuousModeCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:501    .text.SDADC_ContinuousModeCmd:00000000 SDADC_ContinuousModeCmd
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:526    .text.SDADC_SoftwareStartConv:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:531    .text.SDADC_SoftwareStartConv:00000000 SDADC_SoftwareStartConv
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:548    .text.SDADC_GetConversionValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:553    .text.SDADC_GetConversionValue:00000000 SDADC_GetConversionValue
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:571    .text.SDADC_RegularSynchroSDADC1:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:576    .text.SDADC_RegularSynchroSDADC1:00000000 SDADC_RegularSynchroSDADC1
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:601    .text.SDADC_GetConversionSDADC12Value:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:606    .text.SDADC_GetConversionSDADC12Value:00000000 SDADC_GetConversionSDADC12Value
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:621    .text.SDADC_GetConversionSDADC12Value:00000008 $d
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:626    .text.SDADC_GetConversionSDADC13Value:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:631    .text.SDADC_GetConversionSDADC13Value:00000000 SDADC_GetConversionSDADC13Value
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:646    .text.SDADC_GetConversionSDADC13Value:00000008 $d
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:651    .text.SDADC_SoftwareStartInjectedConv:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:656    .text.SDADC_SoftwareStartInjectedConv:00000000 SDADC_SoftwareStartInjectedConv
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:673    .text.SDADC_InjectedChannelSelect:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:678    .text.SDADC_InjectedChannelSelect:00000000 SDADC_InjectedChannelSelect
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:695    .text.SDADC_DelayStartInjectedConvCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:700    .text.SDADC_DelayStartInjectedConvCmd:00000000 SDADC_DelayStartInjectedConvCmd
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:725    .text.SDADC_InjectedContinuousModeCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:730    .text.SDADC_InjectedContinuousModeCmd:00000000 SDADC_InjectedContinuousModeCmd
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:755    .text.SDADC_ExternalTrigInjectedConvConfig:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:760    .text.SDADC_ExternalTrigInjectedConvConfig:00000000 SDADC_ExternalTrigInjectedConvConfig
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:784    .text.SDADC_ExternalTrigInjectedConvEdgeConfig:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:789    .text.SDADC_ExternalTrigInjectedConvEdgeConfig:00000000 SDADC_ExternalTrigInjectedConvEdgeConfig
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s 			page 48


C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:813    .text.SDADC_GetInjectedChannel:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:818    .text.SDADC_GetInjectedChannel:00000000 SDADC_GetInjectedChannel
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:843    .text.SDADC_GetInjectedConversionValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:848    .text.SDADC_GetInjectedConversionValue:00000000 SDADC_GetInjectedConversionValue
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:873    .text.SDADC_InjectedSynchroSDADC1:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:878    .text.SDADC_InjectedSynchroSDADC1:00000000 SDADC_InjectedSynchroSDADC1
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:903    .text.SDADC_GetInjectedConversionSDADC12Value:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:908    .text.SDADC_GetInjectedConversionSDADC12Value:00000000 SDADC_GetInjectedConversionSDADC12Value
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:923    .text.SDADC_GetInjectedConversionSDADC12Value:00000008 $d
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:928    .text.SDADC_GetInjectedConversionSDADC13Value:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:933    .text.SDADC_GetInjectedConversionSDADC13Value:00000000 SDADC_GetInjectedConversionSDADC13Value
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:948    .text.SDADC_GetInjectedConversionSDADC13Value:00000008 $d
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:953    .text.SDADC_PowerDownCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:958    .text.SDADC_PowerDownCmd:00000000 SDADC_PowerDownCmd
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:983    .text.SDADC_StandbyCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:988    .text.SDADC_StandbyCmd:00000000 SDADC_StandbyCmd
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:1013   .text.SDADC_SlowClockCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:1018   .text.SDADC_SlowClockCmd:00000000 SDADC_SlowClockCmd
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:1043   .text.SDADC_DMAConfig:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:1048   .text.SDADC_DMAConfig:00000000 SDADC_DMAConfig
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:1076   .text.SDADC_ITConfig:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:1081   .text.SDADC_ITConfig:00000000 SDADC_ITConfig
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:1109   .text.SDADC_GetFlagStatus:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:1114   .text.SDADC_GetFlagStatus:00000000 SDADC_GetFlagStatus
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:1141   .text.SDADC_ClearFlag:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:1146   .text.SDADC_ClearFlag:00000000 SDADC_ClearFlag
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:1164   .text.SDADC_GetITStatus:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:1169   .text.SDADC_GetITStatus:00000000 SDADC_GetITStatus
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:1209   .text.SDADC_ClearITPendingBit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccG9x7bJ.s:1214   .text.SDADC_ClearITPendingBit:00000000 SDADC_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
