ARM GAS  C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f37x_wwdg.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.WWDG_DeInit,"ax",%progbits
  22              		.align	2
  23              		.global	WWDG_DeInit
  24              		.thumb
  25              		.thumb_func
  27              	WWDG_DeInit:
  28              	.LFB111:
  29              		.file 1 "../stdperiph/source/stm32f37x_wwdg.c"
   1:../stdperiph/source/stm32f37x_wwdg.c **** /**
   2:../stdperiph/source/stm32f37x_wwdg.c ****   ******************************************************************************
   3:../stdperiph/source/stm32f37x_wwdg.c ****   * @file    stm32f37x_wwdg.c
   4:../stdperiph/source/stm32f37x_wwdg.c ****   * @author  MCD Application Team
   5:../stdperiph/source/stm32f37x_wwdg.c ****   * @version V1.0.0
   6:../stdperiph/source/stm32f37x_wwdg.c ****   * @date    20-September-2012
   7:../stdperiph/source/stm32f37x_wwdg.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../stdperiph/source/stm32f37x_wwdg.c ****   *          functionalities of the Window watchdog (WWDG) peripheral:
   9:../stdperiph/source/stm32f37x_wwdg.c ****   *           + Prescaler, Refresh window and Counter configuration
  10:../stdperiph/source/stm32f37x_wwdg.c ****   *           + WWDG activation
  11:../stdperiph/source/stm32f37x_wwdg.c ****   *           + Interrupts and flags management
  12:../stdperiph/source/stm32f37x_wwdg.c ****   *             
  13:../stdperiph/source/stm32f37x_wwdg.c ****   *  @verbatim
  14:../stdperiph/source/stm32f37x_wwdg.c ****   *    
  15:../stdperiph/source/stm32f37x_wwdg.c ****   ============================================================================== 
  16:../stdperiph/source/stm32f37x_wwdg.c ****                            ##### WWDG features ##### 
  17:../stdperiph/source/stm32f37x_wwdg.c ****   ============================================================================== 
  18:../stdperiph/source/stm32f37x_wwdg.c ****     [..] Once enabled the WWDG generates a system reset on expiry of a programmed
  19:../stdperiph/source/stm32f37x_wwdg.c ****         time period, unless the program refreshes the counter (downcounter) 
  20:../stdperiph/source/stm32f37x_wwdg.c ****         before to reach 0x3F value (i.e. a reset is generated when the counter
  21:../stdperiph/source/stm32f37x_wwdg.c ****         value rolls over from 0x40 to 0x3F). 
  22:../stdperiph/source/stm32f37x_wwdg.c ****     [..] An MCU reset is also generated if the counter value is refreshed
  23:../stdperiph/source/stm32f37x_wwdg.c ****          before the counter has reached the refresh window value. This 
  24:../stdperiph/source/stm32f37x_wwdg.c ****          implies that the counter must be refreshed in a limited window.
  25:../stdperiph/source/stm32f37x_wwdg.c **** 
  26:../stdperiph/source/stm32f37x_wwdg.c ****     [..] Once enabled the WWDG cannot be disabled except by a system reset.
  27:../stdperiph/source/stm32f37x_wwdg.c **** 
  28:../stdperiph/source/stm32f37x_wwdg.c ****     [..] WWDGRST flag in RCC_CSR register can be used to inform when a WWDG
  29:../stdperiph/source/stm32f37x_wwdg.c ****          reset occurs.
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s 			page 2


  30:../stdperiph/source/stm32f37x_wwdg.c **** 
  31:../stdperiph/source/stm32f37x_wwdg.c ****     [..] The WWDG counter input clock is derived from the APB clock divided 
  32:../stdperiph/source/stm32f37x_wwdg.c ****          by a programmable prescaler.
  33:../stdperiph/source/stm32f37x_wwdg.c **** 
  34:../stdperiph/source/stm32f37x_wwdg.c ****     [..] WWDG counter clock = PCLK1 / Prescaler.
  35:../stdperiph/source/stm32f37x_wwdg.c ****     [..] WWDG timeout = (WWDG counter clock) * (counter value).
  36:../stdperiph/source/stm32f37x_wwdg.c **** 
  37:../stdperiph/source/stm32f37x_wwdg.c ****     [..] Min-max timeout value @36MHz (PCLK1): ~114us / ~58.3ms.
  38:../stdperiph/source/stm32f37x_wwdg.c **** 
  39:../stdperiph/source/stm32f37x_wwdg.c ****                        ##### How to use this driver ##### 
  40:../stdperiph/source/stm32f37x_wwdg.c ****   ==============================================================================
  41:../stdperiph/source/stm32f37x_wwdg.c ****     [..]
  42:../stdperiph/source/stm32f37x_wwdg.c ****         (#) Enable WWDG clock using RCC_APB1PeriphClockCmd(RCC_APB1Periph_WWDG, ENABLE) 
  43:../stdperiph/source/stm32f37x_wwdg.c ****             function.
  44:../stdperiph/source/stm32f37x_wwdg.c ****               
  45:../stdperiph/source/stm32f37x_wwdg.c ****         (#) Configure the WWDG prescaler using WWDG_SetPrescaler() function.
  46:../stdperiph/source/stm32f37x_wwdg.c ****                              
  47:../stdperiph/source/stm32f37x_wwdg.c ****         (#) Configure the WWDG refresh window using WWDG_SetWindowValue() function.
  48:../stdperiph/source/stm32f37x_wwdg.c ****               
  49:../stdperiph/source/stm32f37x_wwdg.c ****         (#) Set the WWDG counter value and start it using WWDG_Enable() function.
  50:../stdperiph/source/stm32f37x_wwdg.c ****             When the WWDG is enabled the counter value should be configured to 
  51:../stdperiph/source/stm32f37x_wwdg.c ****             a value greater than 0x40 to prevent generating an immediate reset.
  52:../stdperiph/source/stm32f37x_wwdg.c ****               
  53:../stdperiph/source/stm32f37x_wwdg.c ****         (#) Optionally you can enable the Early wakeup interrupt which is 
  54:../stdperiph/source/stm32f37x_wwdg.c ****             generated when the counter reach 0x40.
  55:../stdperiph/source/stm32f37x_wwdg.c ****             Once enabled this interrupt cannot be disabled except by a system reset.
  56:../stdperiph/source/stm32f37x_wwdg.c ****                    
  57:../stdperiph/source/stm32f37x_wwdg.c ****         (#) Then the application program must refresh the WWDG counter at regular
  58:../stdperiph/source/stm32f37x_wwdg.c ****             intervals during normal operation to prevent an MCU reset, using
  59:../stdperiph/source/stm32f37x_wwdg.c ****             WWDG_SetCounter() function. This operation must occur only when
  60:../stdperiph/source/stm32f37x_wwdg.c ****             the counter value is lower than the refresh window value, 
  61:../stdperiph/source/stm32f37x_wwdg.c ****             programmed using WWDG_SetWindowValue().
  62:../stdperiph/source/stm32f37x_wwdg.c ****   
  63:../stdperiph/source/stm32f37x_wwdg.c ****   *  @endverbatim  
  64:../stdperiph/source/stm32f37x_wwdg.c ****   *                             
  65:../stdperiph/source/stm32f37x_wwdg.c ****   ******************************************************************************
  66:../stdperiph/source/stm32f37x_wwdg.c ****   * @attention
  67:../stdperiph/source/stm32f37x_wwdg.c ****   *
  68:../stdperiph/source/stm32f37x_wwdg.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  69:../stdperiph/source/stm32f37x_wwdg.c ****   *
  70:../stdperiph/source/stm32f37x_wwdg.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  71:../stdperiph/source/stm32f37x_wwdg.c ****   * You may not use this file except in compliance with the License.
  72:../stdperiph/source/stm32f37x_wwdg.c ****   * You may obtain a copy of the License at:
  73:../stdperiph/source/stm32f37x_wwdg.c ****   *
  74:../stdperiph/source/stm32f37x_wwdg.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  75:../stdperiph/source/stm32f37x_wwdg.c ****   *
  76:../stdperiph/source/stm32f37x_wwdg.c ****   * Unless required by applicable law or agreed to in writing, software 
  77:../stdperiph/source/stm32f37x_wwdg.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  78:../stdperiph/source/stm32f37x_wwdg.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  79:../stdperiph/source/stm32f37x_wwdg.c ****   * See the License for the specific language governing permissions and
  80:../stdperiph/source/stm32f37x_wwdg.c ****   * limitations under the License.
  81:../stdperiph/source/stm32f37x_wwdg.c ****   *
  82:../stdperiph/source/stm32f37x_wwdg.c ****   ******************************************************************************
  83:../stdperiph/source/stm32f37x_wwdg.c ****   */ 
  84:../stdperiph/source/stm32f37x_wwdg.c **** 
  85:../stdperiph/source/stm32f37x_wwdg.c **** /* Includes ------------------------------------------------------------------*/
  86:../stdperiph/source/stm32f37x_wwdg.c **** #include "stm32f37x_wwdg.h"
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s 			page 3


  87:../stdperiph/source/stm32f37x_wwdg.c **** #include "stm32f37x_rcc.h"
  88:../stdperiph/source/stm32f37x_wwdg.c **** 
  89:../stdperiph/source/stm32f37x_wwdg.c **** /** @addtogroup STM32F37x_StdPeriph_Driver
  90:../stdperiph/source/stm32f37x_wwdg.c ****   * @{
  91:../stdperiph/source/stm32f37x_wwdg.c ****   */
  92:../stdperiph/source/stm32f37x_wwdg.c **** 
  93:../stdperiph/source/stm32f37x_wwdg.c **** /** @defgroup WWDG 
  94:../stdperiph/source/stm32f37x_wwdg.c ****   * @brief WWDG driver modules
  95:../stdperiph/source/stm32f37x_wwdg.c ****   * @{
  96:../stdperiph/source/stm32f37x_wwdg.c ****   */
  97:../stdperiph/source/stm32f37x_wwdg.c **** 
  98:../stdperiph/source/stm32f37x_wwdg.c **** /* Private typedef -----------------------------------------------------------*/
  99:../stdperiph/source/stm32f37x_wwdg.c **** /* Private define ------------------------------------------------------------*/
 100:../stdperiph/source/stm32f37x_wwdg.c **** 
 101:../stdperiph/source/stm32f37x_wwdg.c **** /* ----------- WWDG registers bit address in the alias region ----------- */
 102:../stdperiph/source/stm32f37x_wwdg.c **** #define WWDG_OFFSET       (WWDG_BASE - PERIPH_BASE)
 103:../stdperiph/source/stm32f37x_wwdg.c **** 
 104:../stdperiph/source/stm32f37x_wwdg.c **** /* Alias word address of EWI bit */
 105:../stdperiph/source/stm32f37x_wwdg.c **** #define CFR_OFFSET        (WWDG_OFFSET + 0x04)
 106:../stdperiph/source/stm32f37x_wwdg.c **** #define EWI_BitNumber     0x09
 107:../stdperiph/source/stm32f37x_wwdg.c **** #define CFR_EWI_BB        (PERIPH_BB_BASE + (CFR_OFFSET * 32) + (EWI_BitNumber * 4))
 108:../stdperiph/source/stm32f37x_wwdg.c **** 
 109:../stdperiph/source/stm32f37x_wwdg.c **** /* --------------------- WWDG registers bit mask ------------------------ */
 110:../stdperiph/source/stm32f37x_wwdg.c **** 
 111:../stdperiph/source/stm32f37x_wwdg.c **** /* CFR register bit mask */
 112:../stdperiph/source/stm32f37x_wwdg.c **** #define CFR_WDGTB_MASK    ((uint32_t)0xFFFFFE7F)
 113:../stdperiph/source/stm32f37x_wwdg.c **** #define CFR_W_MASK        ((uint32_t)0xFFFFFF80)
 114:../stdperiph/source/stm32f37x_wwdg.c **** #define BIT_MASK          ((uint8_t)0x7F)
 115:../stdperiph/source/stm32f37x_wwdg.c **** 
 116:../stdperiph/source/stm32f37x_wwdg.c **** /* Private macro -------------------------------------------------------------*/
 117:../stdperiph/source/stm32f37x_wwdg.c **** /* Private variables ---------------------------------------------------------*/
 118:../stdperiph/source/stm32f37x_wwdg.c **** /* Private function prototypes -----------------------------------------------*/
 119:../stdperiph/source/stm32f37x_wwdg.c **** /* Private functions ---------------------------------------------------------*/
 120:../stdperiph/source/stm32f37x_wwdg.c **** 
 121:../stdperiph/source/stm32f37x_wwdg.c **** /** @defgroup WWDG_Private_Functions
 122:../stdperiph/source/stm32f37x_wwdg.c ****   * @{
 123:../stdperiph/source/stm32f37x_wwdg.c ****   */
 124:../stdperiph/source/stm32f37x_wwdg.c **** 
 125:../stdperiph/source/stm32f37x_wwdg.c **** /** @defgroup WWDG_Group1 Prescaler, Refresh window and Counter configuration functions
 126:../stdperiph/source/stm32f37x_wwdg.c ****  *  @brief   Prescaler, Refresh window and Counter configuration functions 
 127:../stdperiph/source/stm32f37x_wwdg.c ****  *
 128:../stdperiph/source/stm32f37x_wwdg.c **** @verbatim   
 129:../stdperiph/source/stm32f37x_wwdg.c ****   ==============================================================================
 130:../stdperiph/source/stm32f37x_wwdg.c ****     ##### Prescaler, Refresh window and Counter configuration functions #####
 131:../stdperiph/source/stm32f37x_wwdg.c ****   ==============================================================================  
 132:../stdperiph/source/stm32f37x_wwdg.c **** 
 133:../stdperiph/source/stm32f37x_wwdg.c **** @endverbatim
 134:../stdperiph/source/stm32f37x_wwdg.c ****   * @{
 135:../stdperiph/source/stm32f37x_wwdg.c ****   */
 136:../stdperiph/source/stm32f37x_wwdg.c **** 
 137:../stdperiph/source/stm32f37x_wwdg.c **** /**
 138:../stdperiph/source/stm32f37x_wwdg.c ****   * @brief  Deinitializes the WWDG peripheral registers to their default reset values.
 139:../stdperiph/source/stm32f37x_wwdg.c ****   * @param  None
 140:../stdperiph/source/stm32f37x_wwdg.c ****   * @retval None
 141:../stdperiph/source/stm32f37x_wwdg.c ****   */
 142:../stdperiph/source/stm32f37x_wwdg.c **** void WWDG_DeInit(void)
 143:../stdperiph/source/stm32f37x_wwdg.c **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s 			page 4


  30              		.loc 1 143 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
 144:../stdperiph/source/stm32f37x_wwdg.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_WWDG, ENABLE);
  39              		.loc 1 144 0
  40 0002 0121     		movs	r1, #1
  41 0004 4FF40060 		mov	r0, #2048
  42 0008 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  43              	.LVL0:
 145:../stdperiph/source/stm32f37x_wwdg.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_WWDG, DISABLE);
  44              		.loc 1 145 0
  45 000c 0021     		movs	r1, #0
  46 000e 4FF40060 		mov	r0, #2048
  47 0012 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  48              	.LVL1:
  49 0016 08BD     		pop	{r3, pc}
  50              		.cfi_endproc
  51              	.LFE111:
  53              		.section	.text.WWDG_SetPrescaler,"ax",%progbits
  54              		.align	2
  55              		.global	WWDG_SetPrescaler
  56              		.thumb
  57              		.thumb_func
  59              	WWDG_SetPrescaler:
  60              	.LFB112:
 146:../stdperiph/source/stm32f37x_wwdg.c **** }
 147:../stdperiph/source/stm32f37x_wwdg.c **** 
 148:../stdperiph/source/stm32f37x_wwdg.c **** /**
 149:../stdperiph/source/stm32f37x_wwdg.c ****   * @brief  Sets the WWDG Prescaler.
 150:../stdperiph/source/stm32f37x_wwdg.c ****   * @param  WWDG_Prescaler: specifies the WWDG Prescaler.
 151:../stdperiph/source/stm32f37x_wwdg.c ****   *          This parameter can be one of the following values:
 152:../stdperiph/source/stm32f37x_wwdg.c ****   *            @arg WWDG_Prescaler_1: WWDG counter clock = (PCLK1/4096)/1
 153:../stdperiph/source/stm32f37x_wwdg.c ****   *            @arg WWDG_Prescaler_2: WWDG counter clock = (PCLK1/4096)/2
 154:../stdperiph/source/stm32f37x_wwdg.c ****   *            @arg WWDG_Prescaler_4: WWDG counter clock = (PCLK1/4096)/4
 155:../stdperiph/source/stm32f37x_wwdg.c ****   *            @arg WWDG_Prescaler_8: WWDG counter clock = (PCLK1/4096)/8
 156:../stdperiph/source/stm32f37x_wwdg.c ****   * @retval None
 157:../stdperiph/source/stm32f37x_wwdg.c ****   */
 158:../stdperiph/source/stm32f37x_wwdg.c **** void WWDG_SetPrescaler(uint32_t WWDG_Prescaler)
 159:../stdperiph/source/stm32f37x_wwdg.c **** {
  61              		.loc 1 159 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66              	.LVL2:
 160:../stdperiph/source/stm32f37x_wwdg.c ****   uint32_t tmpreg = 0;
 161:../stdperiph/source/stm32f37x_wwdg.c ****   /* Check the parameters */
 162:../stdperiph/source/stm32f37x_wwdg.c ****   assert_param(IS_WWDG_PRESCALER(WWDG_Prescaler));
 163:../stdperiph/source/stm32f37x_wwdg.c ****   /* Clear WDGTB[1:0] bits */
 164:../stdperiph/source/stm32f37x_wwdg.c ****   tmpreg = WWDG->CFR & CFR_WDGTB_MASK;
  67              		.loc 1 164 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s 			page 5


  68 0000 034A     		ldr	r2, .L4
  69 0002 5368     		ldr	r3, [r2, #4]
  70 0004 23F4C073 		bic	r3, r3, #384
  71              	.LVL3:
 165:../stdperiph/source/stm32f37x_wwdg.c ****   /* Set WDGTB[1:0] bits according to WWDG_Prescaler value */
 166:../stdperiph/source/stm32f37x_wwdg.c ****   tmpreg |= WWDG_Prescaler;
  72              		.loc 1 166 0
  73 0008 1843     		orrs	r0, r0, r3
  74              	.LVL4:
 167:../stdperiph/source/stm32f37x_wwdg.c ****   /* Store the new value */
 168:../stdperiph/source/stm32f37x_wwdg.c ****   WWDG->CFR = tmpreg;
  75              		.loc 1 168 0
  76 000a 5060     		str	r0, [r2, #4]
  77 000c 7047     		bx	lr
  78              	.L5:
  79 000e 00BF     		.align	2
  80              	.L4:
  81 0010 002C0040 		.word	1073753088
  82              		.cfi_endproc
  83              	.LFE112:
  85              		.section	.text.WWDG_SetWindowValue,"ax",%progbits
  86              		.align	2
  87              		.global	WWDG_SetWindowValue
  88              		.thumb
  89              		.thumb_func
  91              	WWDG_SetWindowValue:
  92              	.LFB113:
 169:../stdperiph/source/stm32f37x_wwdg.c **** }
 170:../stdperiph/source/stm32f37x_wwdg.c **** 
 171:../stdperiph/source/stm32f37x_wwdg.c **** /**
 172:../stdperiph/source/stm32f37x_wwdg.c ****   * @brief  Sets the WWDG window value.
 173:../stdperiph/source/stm32f37x_wwdg.c ****   * @param  WindowValue: specifies the window value to be compared to the downcounter.
 174:../stdperiph/source/stm32f37x_wwdg.c ****   *          This parameter value must be lower than 0x80.
 175:../stdperiph/source/stm32f37x_wwdg.c ****   * @retval None
 176:../stdperiph/source/stm32f37x_wwdg.c ****   */
 177:../stdperiph/source/stm32f37x_wwdg.c **** void WWDG_SetWindowValue(uint8_t WindowValue)
 178:../stdperiph/source/stm32f37x_wwdg.c **** {
  93              		.loc 1 178 0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 8
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
  98              	.LVL5:
  99 0000 82B0     		sub	sp, sp, #8
 100              	.LCFI1:
 101              		.cfi_def_cfa_offset 8
 179:../stdperiph/source/stm32f37x_wwdg.c ****   __IO uint32_t tmpreg = 0;
 102              		.loc 1 179 0
 103 0002 0023     		movs	r3, #0
 104 0004 0193     		str	r3, [sp, #4]
 180:../stdperiph/source/stm32f37x_wwdg.c **** 
 181:../stdperiph/source/stm32f37x_wwdg.c ****   /* Check the parameters */
 182:../stdperiph/source/stm32f37x_wwdg.c ****   assert_param(IS_WWDG_WINDOW_VALUE(WindowValue));
 183:../stdperiph/source/stm32f37x_wwdg.c ****   /* Clear W[6:0] bits */
 184:../stdperiph/source/stm32f37x_wwdg.c **** 
 185:../stdperiph/source/stm32f37x_wwdg.c ****   tmpreg = WWDG->CFR & CFR_W_MASK;
 105              		.loc 1 185 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s 			page 6


 106 0006 074A     		ldr	r2, .L8
 107 0008 5368     		ldr	r3, [r2, #4]
 108 000a 23F07F03 		bic	r3, r3, #127
 109 000e 0193     		str	r3, [sp, #4]
 186:../stdperiph/source/stm32f37x_wwdg.c **** 
 187:../stdperiph/source/stm32f37x_wwdg.c ****   /* Set W[6:0] bits according to WindowValue value */
 188:../stdperiph/source/stm32f37x_wwdg.c ****   tmpreg |= WindowValue & (uint32_t) BIT_MASK;
 110              		.loc 1 188 0
 111 0010 00F07F00 		and	r0, r0, #127
 112              	.LVL6:
 113 0014 019B     		ldr	r3, [sp, #4]
 114 0016 1843     		orrs	r0, r0, r3
 115 0018 0190     		str	r0, [sp, #4]
 189:../stdperiph/source/stm32f37x_wwdg.c **** 
 190:../stdperiph/source/stm32f37x_wwdg.c ****   /* Store the new value */
 191:../stdperiph/source/stm32f37x_wwdg.c ****   WWDG->CFR = tmpreg;
 116              		.loc 1 191 0
 117 001a 019B     		ldr	r3, [sp, #4]
 118 001c 5360     		str	r3, [r2, #4]
 192:../stdperiph/source/stm32f37x_wwdg.c **** }
 119              		.loc 1 192 0
 120 001e 02B0     		add	sp, sp, #8
 121              	.LCFI2:
 122              		.cfi_def_cfa_offset 0
 123              		@ sp needed
 124 0020 7047     		bx	lr
 125              	.L9:
 126 0022 00BF     		.align	2
 127              	.L8:
 128 0024 002C0040 		.word	1073753088
 129              		.cfi_endproc
 130              	.LFE113:
 132              		.section	.text.WWDG_EnableIT,"ax",%progbits
 133              		.align	2
 134              		.global	WWDG_EnableIT
 135              		.thumb
 136              		.thumb_func
 138              	WWDG_EnableIT:
 139              	.LFB114:
 193:../stdperiph/source/stm32f37x_wwdg.c **** 
 194:../stdperiph/source/stm32f37x_wwdg.c **** /**
 195:../stdperiph/source/stm32f37x_wwdg.c ****   * @brief  Enables the WWDG Early Wakeup interrupt(EWI).
 196:../stdperiph/source/stm32f37x_wwdg.c ****   * @note   Once enabled this interrupt cannot be disabled except by a system reset. 
 197:../stdperiph/source/stm32f37x_wwdg.c ****   * @param  None
 198:../stdperiph/source/stm32f37x_wwdg.c ****   * @retval None
 199:../stdperiph/source/stm32f37x_wwdg.c ****   */
 200:../stdperiph/source/stm32f37x_wwdg.c **** void WWDG_EnableIT(void)
 201:../stdperiph/source/stm32f37x_wwdg.c **** {
 140              		.loc 1 201 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 202:../stdperiph/source/stm32f37x_wwdg.c ****   *(__IO uint32_t *) CFR_EWI_BB = (uint32_t)ENABLE;
 145              		.loc 1 202 0
 146 0000 0122     		movs	r2, #1
 147 0002 014B     		ldr	r3, .L11
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s 			page 7


 148 0004 1A60     		str	r2, [r3]
 149 0006 7047     		bx	lr
 150              	.L12:
 151              		.align	2
 152              	.L11:
 153 0008 A4800542 		.word	1107656868
 154              		.cfi_endproc
 155              	.LFE114:
 157              		.section	.text.WWDG_SetCounter,"ax",%progbits
 158              		.align	2
 159              		.global	WWDG_SetCounter
 160              		.thumb
 161              		.thumb_func
 163              	WWDG_SetCounter:
 164              	.LFB115:
 203:../stdperiph/source/stm32f37x_wwdg.c **** }
 204:../stdperiph/source/stm32f37x_wwdg.c **** 
 205:../stdperiph/source/stm32f37x_wwdg.c **** /**
 206:../stdperiph/source/stm32f37x_wwdg.c ****   * @brief  Sets the WWDG counter value.
 207:../stdperiph/source/stm32f37x_wwdg.c ****   * @param  Counter: specifies the watchdog counter value.
 208:../stdperiph/source/stm32f37x_wwdg.c ****   *          This parameter must be a number between 0x40 and 0x7F (to prevent 
 209:../stdperiph/source/stm32f37x_wwdg.c ****   *          generating an immediate reset).
 210:../stdperiph/source/stm32f37x_wwdg.c ****   * @retval None
 211:../stdperiph/source/stm32f37x_wwdg.c ****   */
 212:../stdperiph/source/stm32f37x_wwdg.c **** void WWDG_SetCounter(uint8_t Counter)
 213:../stdperiph/source/stm32f37x_wwdg.c **** {
 165              		.loc 1 213 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 170              	.LVL7:
 214:../stdperiph/source/stm32f37x_wwdg.c ****   /* Check the parameters */
 215:../stdperiph/source/stm32f37x_wwdg.c ****   assert_param(IS_WWDG_COUNTER(Counter));
 216:../stdperiph/source/stm32f37x_wwdg.c ****   /* Write to T[6:0] bits to configure the counter value, no need to do
 217:../stdperiph/source/stm32f37x_wwdg.c ****      a read-modify-write; writing a 0 to WDGA bit does nothing */
 218:../stdperiph/source/stm32f37x_wwdg.c ****   WWDG->CR = Counter & BIT_MASK;
 171              		.loc 1 218 0
 172 0000 00F07F00 		and	r0, r0, #127
 173              	.LVL8:
 174 0004 014B     		ldr	r3, .L14
 175 0006 1860     		str	r0, [r3]
 176 0008 7047     		bx	lr
 177              	.L15:
 178 000a 00BF     		.align	2
 179              	.L14:
 180 000c 002C0040 		.word	1073753088
 181              		.cfi_endproc
 182              	.LFE115:
 184              		.section	.text.WWDG_Enable,"ax",%progbits
 185              		.align	2
 186              		.global	WWDG_Enable
 187              		.thumb
 188              		.thumb_func
 190              	WWDG_Enable:
 191              	.LFB116:
 219:../stdperiph/source/stm32f37x_wwdg.c **** }
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s 			page 8


 220:../stdperiph/source/stm32f37x_wwdg.c **** 
 221:../stdperiph/source/stm32f37x_wwdg.c **** /**
 222:../stdperiph/source/stm32f37x_wwdg.c ****   * @}
 223:../stdperiph/source/stm32f37x_wwdg.c ****   */
 224:../stdperiph/source/stm32f37x_wwdg.c **** 
 225:../stdperiph/source/stm32f37x_wwdg.c **** /** @defgroup WWDG_Group2 WWDG activation functions
 226:../stdperiph/source/stm32f37x_wwdg.c ****  *  @brief   WWDG activation functions 
 227:../stdperiph/source/stm32f37x_wwdg.c ****  *
 228:../stdperiph/source/stm32f37x_wwdg.c **** @verbatim   
 229:../stdperiph/source/stm32f37x_wwdg.c ****   ==============================================================================
 230:../stdperiph/source/stm32f37x_wwdg.c ****                      ##### WWDG activation function #####
 231:../stdperiph/source/stm32f37x_wwdg.c ****   ==============================================================================  
 232:../stdperiph/source/stm32f37x_wwdg.c **** 
 233:../stdperiph/source/stm32f37x_wwdg.c **** @endverbatim
 234:../stdperiph/source/stm32f37x_wwdg.c ****   * @{
 235:../stdperiph/source/stm32f37x_wwdg.c ****   */
 236:../stdperiph/source/stm32f37x_wwdg.c **** 
 237:../stdperiph/source/stm32f37x_wwdg.c **** /**
 238:../stdperiph/source/stm32f37x_wwdg.c ****   * @brief  Enables WWDG and load the counter value.                  
 239:../stdperiph/source/stm32f37x_wwdg.c ****   * @param  Counter: specifies the watchdog counter value.
 240:../stdperiph/source/stm32f37x_wwdg.c ****   *          This parameter must be a number between 0x40 and 0x7F (to prevent 
 241:../stdperiph/source/stm32f37x_wwdg.c ****   *          generating an immediate reset).
 242:../stdperiph/source/stm32f37x_wwdg.c ****   * @retval None
 243:../stdperiph/source/stm32f37x_wwdg.c ****   */
 244:../stdperiph/source/stm32f37x_wwdg.c **** void WWDG_Enable(uint8_t Counter)
 245:../stdperiph/source/stm32f37x_wwdg.c **** {
 192              		.loc 1 245 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 197              	.LVL9:
 246:../stdperiph/source/stm32f37x_wwdg.c ****   /* Check the parameters */
 247:../stdperiph/source/stm32f37x_wwdg.c ****   assert_param(IS_WWDG_COUNTER(Counter));
 248:../stdperiph/source/stm32f37x_wwdg.c ****   WWDG->CR = WWDG_CR_WDGA | Counter;
 198              		.loc 1 248 0
 199 0000 40F08000 		orr	r0, r0, #128
 200              	.LVL10:
 201 0004 014B     		ldr	r3, .L17
 202 0006 1860     		str	r0, [r3]
 203 0008 7047     		bx	lr
 204              	.L18:
 205 000a 00BF     		.align	2
 206              	.L17:
 207 000c 002C0040 		.word	1073753088
 208              		.cfi_endproc
 209              	.LFE116:
 211              		.section	.text.WWDG_GetFlagStatus,"ax",%progbits
 212              		.align	2
 213              		.global	WWDG_GetFlagStatus
 214              		.thumb
 215              		.thumb_func
 217              	WWDG_GetFlagStatus:
 218              	.LFB117:
 249:../stdperiph/source/stm32f37x_wwdg.c **** }
 250:../stdperiph/source/stm32f37x_wwdg.c **** 
 251:../stdperiph/source/stm32f37x_wwdg.c **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s 			page 9


 252:../stdperiph/source/stm32f37x_wwdg.c ****   * @}
 253:../stdperiph/source/stm32f37x_wwdg.c ****   */
 254:../stdperiph/source/stm32f37x_wwdg.c **** 
 255:../stdperiph/source/stm32f37x_wwdg.c **** /** @defgroup WWDG_Group3 Interrupts and flags management functions
 256:../stdperiph/source/stm32f37x_wwdg.c ****  *  @brief   Interrupts and flags management functions 
 257:../stdperiph/source/stm32f37x_wwdg.c ****  *
 258:../stdperiph/source/stm32f37x_wwdg.c **** @verbatim   
 259:../stdperiph/source/stm32f37x_wwdg.c ****   ==============================================================================
 260:../stdperiph/source/stm32f37x_wwdg.c ****                 ##### Interrupts and flags management functions #####
 261:../stdperiph/source/stm32f37x_wwdg.c ****   ==============================================================================  
 262:../stdperiph/source/stm32f37x_wwdg.c **** 
 263:../stdperiph/source/stm32f37x_wwdg.c **** @endverbatim
 264:../stdperiph/source/stm32f37x_wwdg.c ****   * @{
 265:../stdperiph/source/stm32f37x_wwdg.c ****   */
 266:../stdperiph/source/stm32f37x_wwdg.c **** 
 267:../stdperiph/source/stm32f37x_wwdg.c **** /**
 268:../stdperiph/source/stm32f37x_wwdg.c ****   * @brief  Checks whether the Early Wakeup interrupt flag is set or not.
 269:../stdperiph/source/stm32f37x_wwdg.c ****   * @param  None
 270:../stdperiph/source/stm32f37x_wwdg.c ****   * @retval The new state of the Early Wakeup interrupt flag (SET or RESET).
 271:../stdperiph/source/stm32f37x_wwdg.c ****   */
 272:../stdperiph/source/stm32f37x_wwdg.c **** FlagStatus WWDG_GetFlagStatus(void)
 273:../stdperiph/source/stm32f37x_wwdg.c **** {
 219              		.loc 1 273 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              		@ link register save eliminated.
 224              	.LVL11:
 274:../stdperiph/source/stm32f37x_wwdg.c ****   FlagStatus bitstatus = RESET;
 275:../stdperiph/source/stm32f37x_wwdg.c ****     
 276:../stdperiph/source/stm32f37x_wwdg.c ****   if ((WWDG->SR) != (uint32_t)RESET)
 225              		.loc 1 276 0
 226 0000 034B     		ldr	r3, .L22
 227 0002 9B68     		ldr	r3, [r3, #8]
 228 0004 0BB1     		cbz	r3, .L21
 277:../stdperiph/source/stm32f37x_wwdg.c ****   {
 278:../stdperiph/source/stm32f37x_wwdg.c ****     bitstatus = SET;
 229              		.loc 1 278 0
 230 0006 0120     		movs	r0, #1
 231 0008 7047     		bx	lr
 232              	.L21:
 279:../stdperiph/source/stm32f37x_wwdg.c ****   }
 280:../stdperiph/source/stm32f37x_wwdg.c ****   else
 281:../stdperiph/source/stm32f37x_wwdg.c ****   {
 282:../stdperiph/source/stm32f37x_wwdg.c ****     bitstatus = RESET;
 233              		.loc 1 282 0
 234 000a 0020     		movs	r0, #0
 235              	.LVL12:
 283:../stdperiph/source/stm32f37x_wwdg.c ****   }
 284:../stdperiph/source/stm32f37x_wwdg.c ****   return bitstatus;
 285:../stdperiph/source/stm32f37x_wwdg.c **** }
 236              		.loc 1 285 0
 237 000c 7047     		bx	lr
 238              	.L23:
 239 000e 00BF     		.align	2
 240              	.L22:
 241 0010 002C0040 		.word	1073753088
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s 			page 10


 242              		.cfi_endproc
 243              	.LFE117:
 245              		.section	.text.WWDG_ClearFlag,"ax",%progbits
 246              		.align	2
 247              		.global	WWDG_ClearFlag
 248              		.thumb
 249              		.thumb_func
 251              	WWDG_ClearFlag:
 252              	.LFB118:
 286:../stdperiph/source/stm32f37x_wwdg.c **** 
 287:../stdperiph/source/stm32f37x_wwdg.c **** /**
 288:../stdperiph/source/stm32f37x_wwdg.c ****   * @brief  Clears Early Wakeup interrupt flag.
 289:../stdperiph/source/stm32f37x_wwdg.c ****   * @param  None
 290:../stdperiph/source/stm32f37x_wwdg.c ****   * @retval None
 291:../stdperiph/source/stm32f37x_wwdg.c ****   */
 292:../stdperiph/source/stm32f37x_wwdg.c **** void WWDG_ClearFlag(void)
 293:../stdperiph/source/stm32f37x_wwdg.c **** {
 253              		.loc 1 293 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 294:../stdperiph/source/stm32f37x_wwdg.c ****   WWDG->SR = (uint32_t)RESET;
 258              		.loc 1 294 0
 259 0000 0022     		movs	r2, #0
 260 0002 014B     		ldr	r3, .L25
 261 0004 9A60     		str	r2, [r3, #8]
 262 0006 7047     		bx	lr
 263              	.L26:
 264              		.align	2
 265              	.L25:
 266 0008 002C0040 		.word	1073753088
 267              		.cfi_endproc
 268              	.LFE118:
 270              		.text
 271              	.Letext0:
 272              		.file 2 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\machine\\_defaul
 273              		.file 3 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\sys\\_stdint.h"
 274              		.file 4 "../cmsis/include/stm32f37x.h"
 275              		.file 5 "../cmsis/include/core_cm4.h"
 276              		.file 6 "../stdperiph/include/stm32f37x_rcc.h"
ARM GAS  C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f37x_wwdg.c
C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s:22     .text.WWDG_DeInit:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s:27     .text.WWDG_DeInit:00000000 WWDG_DeInit
C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s:54     .text.WWDG_SetPrescaler:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s:59     .text.WWDG_SetPrescaler:00000000 WWDG_SetPrescaler
C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s:81     .text.WWDG_SetPrescaler:00000010 $d
C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s:86     .text.WWDG_SetWindowValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s:91     .text.WWDG_SetWindowValue:00000000 WWDG_SetWindowValue
C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s:128    .text.WWDG_SetWindowValue:00000024 $d
C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s:133    .text.WWDG_EnableIT:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s:138    .text.WWDG_EnableIT:00000000 WWDG_EnableIT
C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s:153    .text.WWDG_EnableIT:00000008 $d
C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s:158    .text.WWDG_SetCounter:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s:163    .text.WWDG_SetCounter:00000000 WWDG_SetCounter
C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s:180    .text.WWDG_SetCounter:0000000c $d
C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s:185    .text.WWDG_Enable:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s:190    .text.WWDG_Enable:00000000 WWDG_Enable
C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s:207    .text.WWDG_Enable:0000000c $d
C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s:212    .text.WWDG_GetFlagStatus:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s:217    .text.WWDG_GetFlagStatus:00000000 WWDG_GetFlagStatus
C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s:241    .text.WWDG_GetFlagStatus:00000010 $d
C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s:246    .text.WWDG_ClearFlag:00000000 $t
C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s:251    .text.WWDG_ClearFlag:00000000 WWDG_ClearFlag
C:\Users\strag\AppData\Local\Temp\cc2RQLS3.s:266    .text.WWDG_ClearFlag:00000008 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
