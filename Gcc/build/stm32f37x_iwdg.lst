ARM GAS  C:\Users\strag\AppData\Local\Temp\cciB2kOV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f37x_iwdg.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.IWDG_WriteAccessCmd,"ax",%progbits
  22              		.align	2
  23              		.global	IWDG_WriteAccessCmd
  24              		.thumb
  25              		.thumb_func
  27              	IWDG_WriteAccessCmd:
  28              	.LFB111:
  29              		.file 1 "../stdperiph/source/stm32f37x_iwdg.c"
   1:../stdperiph/source/stm32f37x_iwdg.c **** /**
   2:../stdperiph/source/stm32f37x_iwdg.c ****   ******************************************************************************
   3:../stdperiph/source/stm32f37x_iwdg.c ****   * @file    stm32f37x_iwdg.c
   4:../stdperiph/source/stm32f37x_iwdg.c ****   * @author  MCD Application Team
   5:../stdperiph/source/stm32f37x_iwdg.c ****   * @version V1.0.0
   6:../stdperiph/source/stm32f37x_iwdg.c ****   * @date    20-September-2012
   7:../stdperiph/source/stm32f37x_iwdg.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../stdperiph/source/stm32f37x_iwdg.c ****   *          functionalities of the Independent watchdog (IWDG) peripheral:           
   9:../stdperiph/source/stm32f37x_iwdg.c ****   *           + Prescaler and Counter configuration
  10:../stdperiph/source/stm32f37x_iwdg.c ****   *           + IWDG activation
  11:../stdperiph/source/stm32f37x_iwdg.c ****   *           + Flag management
  12:../stdperiph/source/stm32f37x_iwdg.c ****   *
  13:../stdperiph/source/stm32f37x_iwdg.c ****   *  @verbatim  
  14:../stdperiph/source/stm32f37x_iwdg.c ****   *  
  15:../stdperiph/source/stm32f37x_iwdg.c ****   ============================================================================== 
  16:../stdperiph/source/stm32f37x_iwdg.c ****                           ##### IWDG features #####
  17:../stdperiph/source/stm32f37x_iwdg.c ****   ============================================================================== 
  18:../stdperiph/source/stm32f37x_iwdg.c ****     [..] The IWDG can be started by either software or hardware (configurable
  19:../stdperiph/source/stm32f37x_iwdg.c ****          through option byte).
  20:../stdperiph/source/stm32f37x_iwdg.c ****              
  21:../stdperiph/source/stm32f37x_iwdg.c ****     [..] The IWDG is clocked by its own dedicated low-speed clock (LSI) and
  22:../stdperiph/source/stm32f37x_iwdg.c ****          thus stays active even if the main clock fails.
  23:../stdperiph/source/stm32f37x_iwdg.c ****          Once the IWDG is started, the LSI is forced ON and cannot be disabled
  24:../stdperiph/source/stm32f37x_iwdg.c ****          (LSI cannot be disabled too), and the counter starts counting down from 
  25:../stdperiph/source/stm32f37x_iwdg.c ****          the reset value of 0xFFF. When it reaches the end of count value (0x000)
  26:../stdperiph/source/stm32f37x_iwdg.c ****          a system reset is generated.
  27:../stdperiph/source/stm32f37x_iwdg.c ****          The IWDG counter should be reloaded at regular intervals to prevent
  28:../stdperiph/source/stm32f37x_iwdg.c ****          an MCU reset.
  29:../stdperiph/source/stm32f37x_iwdg.c ****                              
ARM GAS  C:\Users\strag\AppData\Local\Temp\cciB2kOV.s 			page 2


  30:../stdperiph/source/stm32f37x_iwdg.c ****     [..] The IWDG is implemented in the VDD voltage domain that is still functional
  31:../stdperiph/source/stm32f37x_iwdg.c ****          in STOP and STANDBY mode (IWDG reset can wake-up from STANDBY).
  32:../stdperiph/source/stm32f37x_iwdg.c ****               
  33:../stdperiph/source/stm32f37x_iwdg.c ****     [..] IWDGRST flag in RCC_CSR register can be used to inform when a IWDG
  34:../stdperiph/source/stm32f37x_iwdg.c ****          reset occurs.
  35:../stdperiph/source/stm32f37x_iwdg.c ****               
  36:../stdperiph/source/stm32f37x_iwdg.c ****     [..] Min-max timeout value @40KHz (LSI): ~0.1ms / ~28.3s
  37:../stdperiph/source/stm32f37x_iwdg.c ****          The IWDG timeout may vary due to LSI frequency dispersion. STM32F37x
  38:../stdperiph/source/stm32f37x_iwdg.c ****          devices provide the capability to measure the LSI frequency (LSI clock
  39:../stdperiph/source/stm32f37x_iwdg.c ****          should be seleted as RTC clock which is internally connected to TIM14 CH1
  40:../stdperiph/source/stm32f37x_iwdg.c ****          input capture). The measured value can be used to have an IWDG timeout with
  41:../stdperiph/source/stm32f37x_iwdg.c ****          an acceptable accuracy. 
  42:../stdperiph/source/stm32f37x_iwdg.c ****          For more information, please refer to the STM32F37x Reference manual.
  43:../stdperiph/source/stm32f37x_iwdg.c ****             
  44:../stdperiph/source/stm32f37x_iwdg.c ****                           ##### How to use this driver ##### 
  45:../stdperiph/source/stm32f37x_iwdg.c ****   ============================================================================== 
  46:../stdperiph/source/stm32f37x_iwdg.c ****     [..] This driver allows to use IWDG peripheral with either window option enabled
  47:../stdperiph/source/stm32f37x_iwdg.c ****          or disabled. To do so follow one of the two procedures below.
  48:../stdperiph/source/stm32f37x_iwdg.c ****     (#) Window option is enabled:    
  49:../stdperiph/source/stm32f37x_iwdg.c ****         (++) Start the IWDG using IWDG_Enable() function, when the IWDG is used
  50:../stdperiph/source/stm32f37x_iwdg.c ****              in software mode (no need to enable the LSI, it will be enabled
  51:../stdperiph/source/stm32f37x_iwdg.c ****              by hardware).        
  52:../stdperiph/source/stm32f37x_iwdg.c ****         (++) Enable write access to IWDG_PR and IWDG_RLR registers using
  53:../stdperiph/source/stm32f37x_iwdg.c ****              IWDG_WriteAccessCmd(IWDG_WriteAccess_Enable) function.
  54:../stdperiph/source/stm32f37x_iwdg.c ****         (++) Configure the IWDG prescaler using IWDG_SetPrescaler() function.
  55:../stdperiph/source/stm32f37x_iwdg.c ****         (++) Configure the IWDG counter value using IWDG_SetReload() function.
  56:../stdperiph/source/stm32f37x_iwdg.c ****              This value will be loaded in the IWDG counter each time the counter
  57:../stdperiph/source/stm32f37x_iwdg.c ****              is reloaded, then the IWDG will start counting down from this value.
  58:../stdperiph/source/stm32f37x_iwdg.c ****         (++) Wait for the IWDG registers to be updated using IWDG_GetFlagStatus() function.
  59:../stdperiph/source/stm32f37x_iwdg.c ****         (++) Configure the IWDG refresh window using IWDG_SetWindowValue() function.
  60:../stdperiph/source/stm32f37x_iwdg.c **** 
  61:../stdperiph/source/stm32f37x_iwdg.c ****     (#) Window option is disabled:    
  62:../stdperiph/source/stm32f37x_iwdg.c ****         (++) Enable write access to IWDG_PR and IWDG_RLR registers using
  63:../stdperiph/source/stm32f37x_iwdg.c ****              IWDG_WriteAccessCmd(IWDG_WriteAccess_Enable) function.
  64:../stdperiph/source/stm32f37x_iwdg.c ****         (++) Configure the IWDG prescaler using IWDG_SetPrescaler() function.
  65:../stdperiph/source/stm32f37x_iwdg.c ****         (++) Configure the IWDG counter value using IWDG_SetReload() function.
  66:../stdperiph/source/stm32f37x_iwdg.c ****              This value will be loaded in the IWDG counter each time the counter
  67:../stdperiph/source/stm32f37x_iwdg.c ****              is reloaded, then the IWDG will start counting down from this value.
  68:../stdperiph/source/stm32f37x_iwdg.c ****         (++) Wait for the IWDG registers to be updated using IWDG_GetFlagStatus() function.
  69:../stdperiph/source/stm32f37x_iwdg.c ****         (++) reload the IWDG counter at regular intervals during normal operation 
  70:../stdperiph/source/stm32f37x_iwdg.c ****              to prevent an MCU reset, using IWDG_ReloadCounter() function.
  71:../stdperiph/source/stm32f37x_iwdg.c ****         (++) Start the IWDG using IWDG_Enable() function, when the IWDG is used
  72:../stdperiph/source/stm32f37x_iwdg.c ****              in software mode (no need to enable the LSI, it will be enabled
  73:../stdperiph/source/stm32f37x_iwdg.c ****              by hardware).
  74:../stdperiph/source/stm32f37x_iwdg.c ****               
  75:../stdperiph/source/stm32f37x_iwdg.c ****     @endverbatim
  76:../stdperiph/source/stm32f37x_iwdg.c ****   *    
  77:../stdperiph/source/stm32f37x_iwdg.c ****   ******************************************************************************
  78:../stdperiph/source/stm32f37x_iwdg.c ****   * @attention
  79:../stdperiph/source/stm32f37x_iwdg.c ****   *
  80:../stdperiph/source/stm32f37x_iwdg.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  81:../stdperiph/source/stm32f37x_iwdg.c ****   *
  82:../stdperiph/source/stm32f37x_iwdg.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  83:../stdperiph/source/stm32f37x_iwdg.c ****   * You may not use this file except in compliance with the License.
  84:../stdperiph/source/stm32f37x_iwdg.c ****   * You may obtain a copy of the License at:
  85:../stdperiph/source/stm32f37x_iwdg.c ****   *
  86:../stdperiph/source/stm32f37x_iwdg.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
ARM GAS  C:\Users\strag\AppData\Local\Temp\cciB2kOV.s 			page 3


  87:../stdperiph/source/stm32f37x_iwdg.c ****   *
  88:../stdperiph/source/stm32f37x_iwdg.c ****   * Unless required by applicable law or agreed to in writing, software 
  89:../stdperiph/source/stm32f37x_iwdg.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  90:../stdperiph/source/stm32f37x_iwdg.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  91:../stdperiph/source/stm32f37x_iwdg.c ****   * See the License for the specific language governing permissions and
  92:../stdperiph/source/stm32f37x_iwdg.c ****   * limitations under the License.
  93:../stdperiph/source/stm32f37x_iwdg.c ****   *
  94:../stdperiph/source/stm32f37x_iwdg.c ****   ******************************************************************************
  95:../stdperiph/source/stm32f37x_iwdg.c ****   */
  96:../stdperiph/source/stm32f37x_iwdg.c **** 
  97:../stdperiph/source/stm32f37x_iwdg.c **** /* Includes ------------------------------------------------------------------*/
  98:../stdperiph/source/stm32f37x_iwdg.c **** #include "stm32f37x_iwdg.h"
  99:../stdperiph/source/stm32f37x_iwdg.c **** 
 100:../stdperiph/source/stm32f37x_iwdg.c **** /** @addtogroup STM32F37x_StdPeriph_Driver
 101:../stdperiph/source/stm32f37x_iwdg.c ****   * @{
 102:../stdperiph/source/stm32f37x_iwdg.c ****   */
 103:../stdperiph/source/stm32f37x_iwdg.c **** 
 104:../stdperiph/source/stm32f37x_iwdg.c **** /** @defgroup IWDG 
 105:../stdperiph/source/stm32f37x_iwdg.c ****   * @brief IWDG driver modules
 106:../stdperiph/source/stm32f37x_iwdg.c ****   * @{
 107:../stdperiph/source/stm32f37x_iwdg.c ****   */ 
 108:../stdperiph/source/stm32f37x_iwdg.c **** 
 109:../stdperiph/source/stm32f37x_iwdg.c **** /* Private typedef -----------------------------------------------------------*/
 110:../stdperiph/source/stm32f37x_iwdg.c **** /* Private define ------------------------------------------------------------*/
 111:../stdperiph/source/stm32f37x_iwdg.c **** /* ---------------------- IWDG registers bit mask ----------------------------*/
 112:../stdperiph/source/stm32f37x_iwdg.c **** /* KR register bit mask */
 113:../stdperiph/source/stm32f37x_iwdg.c **** #define KR_KEY_RELOAD    ((uint16_t)0xAAAA)
 114:../stdperiph/source/stm32f37x_iwdg.c **** #define KR_KEY_ENABLE    ((uint16_t)0xCCCC)
 115:../stdperiph/source/stm32f37x_iwdg.c **** 
 116:../stdperiph/source/stm32f37x_iwdg.c **** /* Private macro -------------------------------------------------------------*/
 117:../stdperiph/source/stm32f37x_iwdg.c **** /* Private variables ---------------------------------------------------------*/
 118:../stdperiph/source/stm32f37x_iwdg.c **** /* Private function prototypes -----------------------------------------------*/
 119:../stdperiph/source/stm32f37x_iwdg.c **** /* Private functions ---------------------------------------------------------*/
 120:../stdperiph/source/stm32f37x_iwdg.c **** 
 121:../stdperiph/source/stm32f37x_iwdg.c **** /** @defgroup IWDG_Private_Functions
 122:../stdperiph/source/stm32f37x_iwdg.c ****   * @{
 123:../stdperiph/source/stm32f37x_iwdg.c ****   */
 124:../stdperiph/source/stm32f37x_iwdg.c **** 
 125:../stdperiph/source/stm32f37x_iwdg.c **** /** @defgroup IWDG_Group1 Prescaler and Counter configuration functions
 126:../stdperiph/source/stm32f37x_iwdg.c ****  *  @brief   Prescaler and Counter configuration functions
 127:../stdperiph/source/stm32f37x_iwdg.c ****  *
 128:../stdperiph/source/stm32f37x_iwdg.c **** @verbatim   
 129:../stdperiph/source/stm32f37x_iwdg.c ****   ==============================================================================
 130:../stdperiph/source/stm32f37x_iwdg.c ****             ##### Prescaler and Counter configuration functions #####
 131:../stdperiph/source/stm32f37x_iwdg.c ****   ==============================================================================  
 132:../stdperiph/source/stm32f37x_iwdg.c **** 
 133:../stdperiph/source/stm32f37x_iwdg.c **** @endverbatim
 134:../stdperiph/source/stm32f37x_iwdg.c ****   * @{
 135:../stdperiph/source/stm32f37x_iwdg.c ****   */
 136:../stdperiph/source/stm32f37x_iwdg.c **** 
 137:../stdperiph/source/stm32f37x_iwdg.c **** /**
 138:../stdperiph/source/stm32f37x_iwdg.c ****   * @brief  Enables or disables write access to IWDG_PR and IWDG_RLR registers.
 139:../stdperiph/source/stm32f37x_iwdg.c ****   * @param  IWDG_WriteAccess: new state of write access to IWDG_PR and IWDG_RLR registers.
 140:../stdperiph/source/stm32f37x_iwdg.c ****   *          This parameter can be one of the following values:
 141:../stdperiph/source/stm32f37x_iwdg.c ****   *            @arg IWDG_WriteAccess_Enable: Enable write access to IWDG_PR and IWDG_RLR registers
 142:../stdperiph/source/stm32f37x_iwdg.c ****   *            @arg IWDG_WriteAccess_Disable: Disable write access to IWDG_PR and IWDG_RLR register
 143:../stdperiph/source/stm32f37x_iwdg.c ****   * @retval None
ARM GAS  C:\Users\strag\AppData\Local\Temp\cciB2kOV.s 			page 4


 144:../stdperiph/source/stm32f37x_iwdg.c ****   */
 145:../stdperiph/source/stm32f37x_iwdg.c **** void IWDG_WriteAccessCmd(uint16_t IWDG_WriteAccess)
 146:../stdperiph/source/stm32f37x_iwdg.c **** {
  30              		.loc 1 146 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LVL0:
 147:../stdperiph/source/stm32f37x_iwdg.c ****   /* Check the parameters */
 148:../stdperiph/source/stm32f37x_iwdg.c ****   assert_param(IS_IWDG_WRITE_ACCESS(IWDG_WriteAccess));
 149:../stdperiph/source/stm32f37x_iwdg.c **** 
 150:../stdperiph/source/stm32f37x_iwdg.c ****   IWDG->KR = IWDG_WriteAccess;
  36              		.loc 1 150 0
  37 0000 014B     		ldr	r3, .L2
  38 0002 1860     		str	r0, [r3]
  39 0004 7047     		bx	lr
  40              	.L3:
  41 0006 00BF     		.align	2
  42              	.L2:
  43 0008 00300040 		.word	1073754112
  44              		.cfi_endproc
  45              	.LFE111:
  47              		.section	.text.IWDG_SetPrescaler,"ax",%progbits
  48              		.align	2
  49              		.global	IWDG_SetPrescaler
  50              		.thumb
  51              		.thumb_func
  53              	IWDG_SetPrescaler:
  54              	.LFB112:
 151:../stdperiph/source/stm32f37x_iwdg.c **** }
 152:../stdperiph/source/stm32f37x_iwdg.c **** 
 153:../stdperiph/source/stm32f37x_iwdg.c **** /**
 154:../stdperiph/source/stm32f37x_iwdg.c ****   * @brief  Sets IWDG Prescaler value.
 155:../stdperiph/source/stm32f37x_iwdg.c ****   * @param  IWDG_Prescaler: specifies the IWDG Prescaler value.
 156:../stdperiph/source/stm32f37x_iwdg.c ****   *          This parameter can be one of the following values:
 157:../stdperiph/source/stm32f37x_iwdg.c ****   *            @arg IWDG_Prescaler_4: IWDG prescaler set to 4
 158:../stdperiph/source/stm32f37x_iwdg.c ****   *            @arg IWDG_Prescaler_8: IWDG prescaler set to 8
 159:../stdperiph/source/stm32f37x_iwdg.c ****   *            @arg IWDG_Prescaler_16: IWDG prescaler set to 16
 160:../stdperiph/source/stm32f37x_iwdg.c ****   *            @arg IWDG_Prescaler_32: IWDG prescaler set to 32
 161:../stdperiph/source/stm32f37x_iwdg.c ****   *            @arg IWDG_Prescaler_64: IWDG prescaler set to 64
 162:../stdperiph/source/stm32f37x_iwdg.c ****   *            @arg IWDG_Prescaler_128: IWDG prescaler set to 128
 163:../stdperiph/source/stm32f37x_iwdg.c ****   *            @arg IWDG_Prescaler_256: IWDG prescaler set to 256
 164:../stdperiph/source/stm32f37x_iwdg.c ****   * @retval None
 165:../stdperiph/source/stm32f37x_iwdg.c ****   */
 166:../stdperiph/source/stm32f37x_iwdg.c **** void IWDG_SetPrescaler(uint8_t IWDG_Prescaler)
 167:../stdperiph/source/stm32f37x_iwdg.c **** {
  55              		.loc 1 167 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL1:
 168:../stdperiph/source/stm32f37x_iwdg.c ****   /* Check the parameters */
 169:../stdperiph/source/stm32f37x_iwdg.c ****   assert_param(IS_IWDG_PRESCALER(IWDG_Prescaler));
 170:../stdperiph/source/stm32f37x_iwdg.c **** 
 171:../stdperiph/source/stm32f37x_iwdg.c ****   IWDG->PR = IWDG_Prescaler;
ARM GAS  C:\Users\strag\AppData\Local\Temp\cciB2kOV.s 			page 5


  61              		.loc 1 171 0
  62 0000 014B     		ldr	r3, .L5
  63 0002 5860     		str	r0, [r3, #4]
  64 0004 7047     		bx	lr
  65              	.L6:
  66 0006 00BF     		.align	2
  67              	.L5:
  68 0008 00300040 		.word	1073754112
  69              		.cfi_endproc
  70              	.LFE112:
  72              		.section	.text.IWDG_SetReload,"ax",%progbits
  73              		.align	2
  74              		.global	IWDG_SetReload
  75              		.thumb
  76              		.thumb_func
  78              	IWDG_SetReload:
  79              	.LFB113:
 172:../stdperiph/source/stm32f37x_iwdg.c **** }
 173:../stdperiph/source/stm32f37x_iwdg.c **** 
 174:../stdperiph/source/stm32f37x_iwdg.c **** /**
 175:../stdperiph/source/stm32f37x_iwdg.c ****   * @brief  Sets IWDG Reload value.
 176:../stdperiph/source/stm32f37x_iwdg.c ****   * @param  Reload: specifies the IWDG Reload value.
 177:../stdperiph/source/stm32f37x_iwdg.c ****   *          This parameter must be a number between 0 and 0x0FFF.
 178:../stdperiph/source/stm32f37x_iwdg.c ****   * @retval None
 179:../stdperiph/source/stm32f37x_iwdg.c ****   */
 180:../stdperiph/source/stm32f37x_iwdg.c **** void IWDG_SetReload(uint16_t Reload)
 181:../stdperiph/source/stm32f37x_iwdg.c **** {
  80              		.loc 1 181 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL2:
 182:../stdperiph/source/stm32f37x_iwdg.c ****   /* Check the parameters */
 183:../stdperiph/source/stm32f37x_iwdg.c ****   assert_param(IS_IWDG_RELOAD(Reload));
 184:../stdperiph/source/stm32f37x_iwdg.c ****   IWDG->RLR = Reload;
  86              		.loc 1 184 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 9860     		str	r0, [r3, #8]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 00300040 		.word	1073754112
  94              		.cfi_endproc
  95              	.LFE113:
  97              		.section	.text.IWDG_ReloadCounter,"ax",%progbits
  98              		.align	2
  99              		.global	IWDG_ReloadCounter
 100              		.thumb
 101              		.thumb_func
 103              	IWDG_ReloadCounter:
 104              	.LFB114:
 185:../stdperiph/source/stm32f37x_iwdg.c **** }
 186:../stdperiph/source/stm32f37x_iwdg.c **** 
 187:../stdperiph/source/stm32f37x_iwdg.c **** /**
 188:../stdperiph/source/stm32f37x_iwdg.c ****   * @brief  Reloads IWDG counter with value defined in the reload register
ARM GAS  C:\Users\strag\AppData\Local\Temp\cciB2kOV.s 			page 6


 189:../stdperiph/source/stm32f37x_iwdg.c ****   *   (write access to IWDG_PR and IWDG_RLR registers disabled).
 190:../stdperiph/source/stm32f37x_iwdg.c ****   * @param  None
 191:../stdperiph/source/stm32f37x_iwdg.c ****   * @retval None
 192:../stdperiph/source/stm32f37x_iwdg.c ****   */
 193:../stdperiph/source/stm32f37x_iwdg.c **** void IWDG_ReloadCounter(void)
 194:../stdperiph/source/stm32f37x_iwdg.c **** {
 105              		.loc 1 194 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 195:../stdperiph/source/stm32f37x_iwdg.c ****   IWDG->KR = KR_KEY_RELOAD;
 110              		.loc 1 195 0
 111 0000 4AF6AA22 		movw	r2, #43690
 112 0004 014B     		ldr	r3, .L11
 113 0006 1A60     		str	r2, [r3]
 114 0008 7047     		bx	lr
 115              	.L12:
 116 000a 00BF     		.align	2
 117              	.L11:
 118 000c 00300040 		.word	1073754112
 119              		.cfi_endproc
 120              	.LFE114:
 122              		.section	.text.IWDG_SetWindowValue,"ax",%progbits
 123              		.align	2
 124              		.global	IWDG_SetWindowValue
 125              		.thumb
 126              		.thumb_func
 128              	IWDG_SetWindowValue:
 129              	.LFB115:
 196:../stdperiph/source/stm32f37x_iwdg.c **** }
 197:../stdperiph/source/stm32f37x_iwdg.c **** 
 198:../stdperiph/source/stm32f37x_iwdg.c **** 
 199:../stdperiph/source/stm32f37x_iwdg.c **** /**
 200:../stdperiph/source/stm32f37x_iwdg.c ****   * @brief  Sets the IWDG window value.
 201:../stdperiph/source/stm32f37x_iwdg.c ****   * @param  WindowValue: specifies the window value to be compared to the downcounter.
 202:../stdperiph/source/stm32f37x_iwdg.c ****   * @retval None
 203:../stdperiph/source/stm32f37x_iwdg.c ****   */
 204:../stdperiph/source/stm32f37x_iwdg.c **** void IWDG_SetWindowValue(uint16_t WindowValue)
 205:../stdperiph/source/stm32f37x_iwdg.c **** {
 130              		.loc 1 205 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 135              	.LVL3:
 206:../stdperiph/source/stm32f37x_iwdg.c ****   /* Check the parameters */
 207:../stdperiph/source/stm32f37x_iwdg.c ****   assert_param(IS_IWDG_WINDOW_VALUE(WindowValue));
 208:../stdperiph/source/stm32f37x_iwdg.c ****   IWDG->WINR = WindowValue;
 136              		.loc 1 208 0
 137 0000 014B     		ldr	r3, .L14
 138 0002 1861     		str	r0, [r3, #16]
 139 0004 7047     		bx	lr
 140              	.L15:
 141 0006 00BF     		.align	2
 142              	.L14:
 143 0008 00300040 		.word	1073754112
ARM GAS  C:\Users\strag\AppData\Local\Temp\cciB2kOV.s 			page 7


 144              		.cfi_endproc
 145              	.LFE115:
 147              		.section	.text.IWDG_Enable,"ax",%progbits
 148              		.align	2
 149              		.global	IWDG_Enable
 150              		.thumb
 151              		.thumb_func
 153              	IWDG_Enable:
 154              	.LFB116:
 209:../stdperiph/source/stm32f37x_iwdg.c **** }
 210:../stdperiph/source/stm32f37x_iwdg.c **** 
 211:../stdperiph/source/stm32f37x_iwdg.c **** /**
 212:../stdperiph/source/stm32f37x_iwdg.c ****   * @}
 213:../stdperiph/source/stm32f37x_iwdg.c ****   */
 214:../stdperiph/source/stm32f37x_iwdg.c **** 
 215:../stdperiph/source/stm32f37x_iwdg.c **** /** @defgroup IWDG_Group2 IWDG activation function
 216:../stdperiph/source/stm32f37x_iwdg.c ****  *  @brief   IWDG activation function 
 217:../stdperiph/source/stm32f37x_iwdg.c ****  *
 218:../stdperiph/source/stm32f37x_iwdg.c **** @verbatim   
 219:../stdperiph/source/stm32f37x_iwdg.c ****  ==============================================================================
 220:../stdperiph/source/stm32f37x_iwdg.c ****                           ##### IWDG activation function #####
 221:../stdperiph/source/stm32f37x_iwdg.c ****  ==============================================================================  
 222:../stdperiph/source/stm32f37x_iwdg.c **** 
 223:../stdperiph/source/stm32f37x_iwdg.c **** @endverbatim
 224:../stdperiph/source/stm32f37x_iwdg.c ****   * @{
 225:../stdperiph/source/stm32f37x_iwdg.c ****   */
 226:../stdperiph/source/stm32f37x_iwdg.c **** 
 227:../stdperiph/source/stm32f37x_iwdg.c **** /**
 228:../stdperiph/source/stm32f37x_iwdg.c ****   * @brief  Enables IWDG (write access to IWDG_PR and IWDG_RLR registers disabled).
 229:../stdperiph/source/stm32f37x_iwdg.c ****   * @param  None
 230:../stdperiph/source/stm32f37x_iwdg.c ****   * @retval None
 231:../stdperiph/source/stm32f37x_iwdg.c ****   */
 232:../stdperiph/source/stm32f37x_iwdg.c **** void IWDG_Enable(void)
 233:../stdperiph/source/stm32f37x_iwdg.c **** {
 155              		.loc 1 233 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              		@ link register save eliminated.
 234:../stdperiph/source/stm32f37x_iwdg.c ****   IWDG->KR = KR_KEY_ENABLE;
 160              		.loc 1 234 0
 161 0000 4CF6CC42 		movw	r2, #52428
 162 0004 014B     		ldr	r3, .L17
 163 0006 1A60     		str	r2, [r3]
 164 0008 7047     		bx	lr
 165              	.L18:
 166 000a 00BF     		.align	2
 167              	.L17:
 168 000c 00300040 		.word	1073754112
 169              		.cfi_endproc
 170              	.LFE116:
 172              		.section	.text.IWDG_GetFlagStatus,"ax",%progbits
 173              		.align	2
 174              		.global	IWDG_GetFlagStatus
 175              		.thumb
 176              		.thumb_func
 178              	IWDG_GetFlagStatus:
ARM GAS  C:\Users\strag\AppData\Local\Temp\cciB2kOV.s 			page 8


 179              	.LFB117:
 235:../stdperiph/source/stm32f37x_iwdg.c **** }
 236:../stdperiph/source/stm32f37x_iwdg.c **** 
 237:../stdperiph/source/stm32f37x_iwdg.c **** /**
 238:../stdperiph/source/stm32f37x_iwdg.c ****   * @}
 239:../stdperiph/source/stm32f37x_iwdg.c ****   */
 240:../stdperiph/source/stm32f37x_iwdg.c **** 
 241:../stdperiph/source/stm32f37x_iwdg.c **** /** @defgroup IWDG_Group3 Flag management function 
 242:../stdperiph/source/stm32f37x_iwdg.c ****  *  @brief  Flag management function  
 243:../stdperiph/source/stm32f37x_iwdg.c ****  *
 244:../stdperiph/source/stm32f37x_iwdg.c **** @verbatim   
 245:../stdperiph/source/stm32f37x_iwdg.c ****  ===============================================================================
 246:../stdperiph/source/stm32f37x_iwdg.c ****                       ##### Flag management function ##### 
 247:../stdperiph/source/stm32f37x_iwdg.c ****  ===============================================================================  
 248:../stdperiph/source/stm32f37x_iwdg.c **** 
 249:../stdperiph/source/stm32f37x_iwdg.c **** @endverbatim
 250:../stdperiph/source/stm32f37x_iwdg.c ****   * @{
 251:../stdperiph/source/stm32f37x_iwdg.c ****   */
 252:../stdperiph/source/stm32f37x_iwdg.c **** 
 253:../stdperiph/source/stm32f37x_iwdg.c **** /**
 254:../stdperiph/source/stm32f37x_iwdg.c ****   * @brief  Checks whether the specified IWDG flag is set or not.
 255:../stdperiph/source/stm32f37x_iwdg.c ****   * @param  IWDG_FLAG: specifies the flag to check.
 256:../stdperiph/source/stm32f37x_iwdg.c ****   *          This parameter can be one of the following values:
 257:../stdperiph/source/stm32f37x_iwdg.c ****   *            @arg IWDG_FLAG_PVU: Prescaler Value Update on going
 258:../stdperiph/source/stm32f37x_iwdg.c ****   *            @arg IWDG_FLAG_RVU: Reload Value Update on going
 259:../stdperiph/source/stm32f37x_iwdg.c ****   *            @arg IWDG_FLAG_WVU: Counter Window Value Update on going
 260:../stdperiph/source/stm32f37x_iwdg.c ****   * @retval The new state of IWDG_FLAG (SET or RESET).
 261:../stdperiph/source/stm32f37x_iwdg.c ****   */
 262:../stdperiph/source/stm32f37x_iwdg.c **** FlagStatus IWDG_GetFlagStatus(uint16_t IWDG_FLAG)
 263:../stdperiph/source/stm32f37x_iwdg.c **** {
 180              		.loc 1 263 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 185              	.LVL4:
 264:../stdperiph/source/stm32f37x_iwdg.c ****   FlagStatus bitstatus = RESET;
 265:../stdperiph/source/stm32f37x_iwdg.c ****   /* Check the parameters */
 266:../stdperiph/source/stm32f37x_iwdg.c ****   assert_param(IS_IWDG_FLAG(IWDG_FLAG));
 267:../stdperiph/source/stm32f37x_iwdg.c ****   if ((IWDG->SR & IWDG_FLAG) != (uint32_t)RESET)
 186              		.loc 1 267 0
 187 0000 034B     		ldr	r3, .L22
 188 0002 DB68     		ldr	r3, [r3, #12]
 189 0004 1842     		tst	r0, r3
 190 0006 01D0     		beq	.L21
 268:../stdperiph/source/stm32f37x_iwdg.c ****   {
 269:../stdperiph/source/stm32f37x_iwdg.c ****     bitstatus = SET;
 191              		.loc 1 269 0
 192 0008 0120     		movs	r0, #1
 193              	.LVL5:
 194 000a 7047     		bx	lr
 195              	.LVL6:
 196              	.L21:
 270:../stdperiph/source/stm32f37x_iwdg.c ****   }
 271:../stdperiph/source/stm32f37x_iwdg.c ****   else
 272:../stdperiph/source/stm32f37x_iwdg.c ****   {
 273:../stdperiph/source/stm32f37x_iwdg.c ****     bitstatus = RESET;
ARM GAS  C:\Users\strag\AppData\Local\Temp\cciB2kOV.s 			page 9


 197              		.loc 1 273 0
 198 000c 0020     		movs	r0, #0
 199              	.LVL7:
 274:../stdperiph/source/stm32f37x_iwdg.c ****   }
 275:../stdperiph/source/stm32f37x_iwdg.c ****   /* Return the flag status */
 276:../stdperiph/source/stm32f37x_iwdg.c ****   return bitstatus;
 277:../stdperiph/source/stm32f37x_iwdg.c **** }
 200              		.loc 1 277 0
 201 000e 7047     		bx	lr
 202              	.L23:
 203              		.align	2
 204              	.L22:
 205 0010 00300040 		.word	1073754112
 206              		.cfi_endproc
 207              	.LFE117:
 209              		.text
 210              	.Letext0:
 211              		.file 2 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\machine\\_defaul
 212              		.file 3 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\sys\\_stdint.h"
 213              		.file 4 "../cmsis/include/stm32f37x.h"
 214              		.file 5 "../cmsis/include/core_cm4.h"
ARM GAS  C:\Users\strag\AppData\Local\Temp\cciB2kOV.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f37x_iwdg.c
C:\Users\strag\AppData\Local\Temp\cciB2kOV.s:22     .text.IWDG_WriteAccessCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\cciB2kOV.s:27     .text.IWDG_WriteAccessCmd:00000000 IWDG_WriteAccessCmd
C:\Users\strag\AppData\Local\Temp\cciB2kOV.s:43     .text.IWDG_WriteAccessCmd:00000008 $d
C:\Users\strag\AppData\Local\Temp\cciB2kOV.s:48     .text.IWDG_SetPrescaler:00000000 $t
C:\Users\strag\AppData\Local\Temp\cciB2kOV.s:53     .text.IWDG_SetPrescaler:00000000 IWDG_SetPrescaler
C:\Users\strag\AppData\Local\Temp\cciB2kOV.s:68     .text.IWDG_SetPrescaler:00000008 $d
C:\Users\strag\AppData\Local\Temp\cciB2kOV.s:73     .text.IWDG_SetReload:00000000 $t
C:\Users\strag\AppData\Local\Temp\cciB2kOV.s:78     .text.IWDG_SetReload:00000000 IWDG_SetReload
C:\Users\strag\AppData\Local\Temp\cciB2kOV.s:93     .text.IWDG_SetReload:00000008 $d
C:\Users\strag\AppData\Local\Temp\cciB2kOV.s:98     .text.IWDG_ReloadCounter:00000000 $t
C:\Users\strag\AppData\Local\Temp\cciB2kOV.s:103    .text.IWDG_ReloadCounter:00000000 IWDG_ReloadCounter
C:\Users\strag\AppData\Local\Temp\cciB2kOV.s:118    .text.IWDG_ReloadCounter:0000000c $d
C:\Users\strag\AppData\Local\Temp\cciB2kOV.s:123    .text.IWDG_SetWindowValue:00000000 $t
C:\Users\strag\AppData\Local\Temp\cciB2kOV.s:128    .text.IWDG_SetWindowValue:00000000 IWDG_SetWindowValue
C:\Users\strag\AppData\Local\Temp\cciB2kOV.s:143    .text.IWDG_SetWindowValue:00000008 $d
C:\Users\strag\AppData\Local\Temp\cciB2kOV.s:148    .text.IWDG_Enable:00000000 $t
C:\Users\strag\AppData\Local\Temp\cciB2kOV.s:153    .text.IWDG_Enable:00000000 IWDG_Enable
C:\Users\strag\AppData\Local\Temp\cciB2kOV.s:168    .text.IWDG_Enable:0000000c $d
C:\Users\strag\AppData\Local\Temp\cciB2kOV.s:173    .text.IWDG_GetFlagStatus:00000000 $t
C:\Users\strag\AppData\Local\Temp\cciB2kOV.s:178    .text.IWDG_GetFlagStatus:00000000 IWDG_GetFlagStatus
C:\Users\strag\AppData\Local\Temp\cciB2kOV.s:205    .text.IWDG_GetFlagStatus:00000010 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
