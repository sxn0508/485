ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"DLT698.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.pppfcs16,"ax",%progbits
  22              		.align	2
  23              		.global	pppfcs16
  24              		.thumb
  25              		.thumb_func
  27              	pppfcs16:
  28              	.LFB111:
  29              		.file 1 "../user/source/DLT698.c"
   1:../user/source/DLT698.c **** #include "DLT698.h"
   2:../user/source/DLT698.c **** //#include "DLT698_45.h"
   3:../user/source/DLT698.c **** #include "BaseDef.h"
   4:../user/source/DLT698.c **** 
   5:../user/source/DLT698.c **** #define PPPINITFCS16 0xFFFF
   6:../user/source/DLT698.c **** 
   7:../user/source/DLT698.c **** static int dwDlt698DataLen(UINT8 *ucRcvBuf, int dwRcvLen);
   8:../user/source/DLT698.c **** 
   9:../user/source/DLT698.c **** /*
  10:../user/source/DLT698.c **** * FCS lookup table as calculated by the table generator.
  11:../user/source/DLT698.c **** */
  12:../user/source/DLT698.c **** const UINT16 fcstab[256] = {
  13:../user/source/DLT698.c ****     0x0000, 0x1189, 0x2312, 0x329b, 0x4624, 0x57ad, 0x6536, 0x74bf,
  14:../user/source/DLT698.c ****     0x8c48, 0x9dc1, 0xaf5a, 0xbed3, 0xca6c, 0xdbe5, 0xe97e, 0xf8f7,
  15:../user/source/DLT698.c ****     0x1081, 0x0108, 0x3393, 0x221a, 0x56a5, 0x472c, 0x75b7, 0x643e,
  16:../user/source/DLT698.c ****     0x9cc9, 0x8d40, 0xbfdb, 0xae52, 0xdaed, 0xcb64, 0xf9ff, 0xe876,
  17:../user/source/DLT698.c ****     0x2102, 0x308b, 0x0210, 0x1399, 0x6726, 0x76af, 0x4434, 0x55bd,
  18:../user/source/DLT698.c ****     0xad4a, 0xbcc3, 0x8e58, 0x9fd1, 0xeb6e, 0xfae7, 0xc87c, 0xd9f5,
  19:../user/source/DLT698.c ****     0x3183, 0x200a, 0x1291, 0x0318, 0x77a7, 0x662e, 0x54b5, 0x453c,
  20:../user/source/DLT698.c ****     0xbdcb, 0xac42, 0x9ed9, 0x8f50, 0xfbef, 0xea66, 0xd8fd, 0xc974,
  21:../user/source/DLT698.c ****     0x4204, 0x538d, 0x6116, 0x709f, 0x0420, 0x15a9, 0x2732, 0x36bb,
  22:../user/source/DLT698.c ****     0xce4c, 0xdfc5, 0xed5e, 0xfcd7, 0x8868, 0x99e1, 0xab7a, 0xbaf3,
  23:../user/source/DLT698.c ****     0x5285, 0x430c, 0x7197, 0x601e, 0x14a1, 0x0528, 0x37b3, 0x263a,
  24:../user/source/DLT698.c ****     0xdecd, 0xcf44, 0xfddf, 0xec56, 0x98e9, 0x8960, 0xbbfb, 0xaa72,
  25:../user/source/DLT698.c ****     0x6306, 0x728f, 0x4014, 0x519d, 0x2522, 0x34ab, 0x0630, 0x17b9,
  26:../user/source/DLT698.c ****     0xef4e, 0xfec7, 0xcc5c, 0xddd5, 0xa96a, 0xb8e3, 0x8a78, 0x9bf1,
  27:../user/source/DLT698.c ****     0x7387, 0x620e, 0x5095, 0x411c, 0x35a3, 0x242a, 0x16b1, 0x0738,
  28:../user/source/DLT698.c ****     0xffcf, 0xee46, 0xdcdd, 0xcd54, 0xb9eb, 0xa862, 0x9af9, 0x8b70,
  29:../user/source/DLT698.c ****     0x8408, 0x9581, 0xa71a, 0xb693, 0xc22c, 0xd3a5, 0xe13e, 0xf0b7,
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 2


  30:../user/source/DLT698.c ****     0x0840, 0x19c9, 0x2b52, 0x3adb, 0x4e64, 0x5fed, 0x6d76, 0x7cff,
  31:../user/source/DLT698.c ****     0x9489, 0x8500, 0xb79b, 0xa612, 0xd2ad, 0xc324, 0xf1bf, 0xe036,
  32:../user/source/DLT698.c ****     0x18c1, 0x0948, 0x3bd3, 0x2a5a, 0x5ee5, 0x4f6c, 0x7df7, 0x6c7e,
  33:../user/source/DLT698.c ****     0xa50a, 0xb483, 0x8618, 0x9791, 0xe32e, 0xf2a7, 0xc03c, 0xd1b5,
  34:../user/source/DLT698.c ****     0x2942, 0x38cb, 0x0a50, 0x1bd9, 0x6f66, 0x7eef, 0x4c74, 0x5dfd,
  35:../user/source/DLT698.c ****     0xb58b, 0xa402, 0x9699, 0x8710, 0xf3af, 0xe226, 0xd0bd, 0xc134,
  36:../user/source/DLT698.c ****     0x39c3, 0x284a, 0x1ad1, 0x0b58, 0x7fe7, 0x6e6e, 0x5cf5, 0x4d7c,
  37:../user/source/DLT698.c ****     0xc60c, 0xd785, 0xe51e, 0xf497, 0x8028, 0x91a1, 0xa33a, 0xb2b3,
  38:../user/source/DLT698.c ****     0x4a44, 0x5bcd, 0x6956, 0x78df, 0x0c60, 0x1de9, 0x2f72, 0x3efb,
  39:../user/source/DLT698.c ****     0xd68d, 0xc704, 0xf59f, 0xe416, 0x90a9, 0x8120, 0xb3bb, 0xa232,
  40:../user/source/DLT698.c ****     0x5ac5, 0x4b4c, 0x79d7, 0x685e, 0x1ce1, 0x0d68, 0x3ff3, 0x2e7a,
  41:../user/source/DLT698.c ****     0xe70e, 0xf687, 0xc41c, 0xd595, 0xa12a, 0xb0a3, 0x8238, 0x93b1,
  42:../user/source/DLT698.c ****     0x6b46, 0x7acf, 0x4854, 0x59dd, 0x2d62, 0x3ceb, 0x0e70, 0x1ff9,
  43:../user/source/DLT698.c ****     0xf78f, 0xe606, 0xd49d, 0xc514, 0xb1ab, 0xa022, 0x92b9, 0x8330,
  44:../user/source/DLT698.c ****     0x7bc7, 0x6a4e, 0x58d5, 0x495c, 0x3de3, 0x2c6a, 0x1ef1, 0x0f78};
  45:../user/source/DLT698.c **** 
  46:../user/source/DLT698.c **** /*
  47:../user/source/DLT698.c **** * Calculate a new fcs given the current fcs and the new data.
  48:../user/source/DLT698.c **** */
  49:../user/source/DLT698.c **** //extern UINT16 pppfcs16(fcs, cp, len)
  50:../user/source/DLT698.c **** extern UINT16 pppfcs16(register UINT16 fcs, register unsigned char *cp, register int len)
  51:../user/source/DLT698.c **** {
  30              		.loc 1 51 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LVL0:
  36 0000 10B4     		push	{r4}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 4
  39              		.cfi_offset 4, -4
  52:../user/source/DLT698.c ****     //register UINT16 fcs;
  53:../user/source/DLT698.c ****     //register unsigned char *cp;
  54:../user/source/DLT698.c ****     //register int len;
  55:../user/source/DLT698.c ****     assert(sizeof(UINT16) == 2);
  56:../user/source/DLT698.c ****     assert(((UINT16)-1) > 0);
  57:../user/source/DLT698.c ****     while (len--)
  40              		.loc 1 57 0
  41 0002 09E0     		b	.L2
  42              	.LVL1:
  43              	.L3:
  58:../user/source/DLT698.c ****         fcs = (fcs >> 8) ^ fcstab[(fcs ^ *cp++) & 0xff];
  44              		.loc 1 58 0
  45 0004 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  46 0006 4340     		eors	r3, r3, r0
  47 0008 DBB2     		uxtb	r3, r3
  48 000a 074A     		ldr	r2, .L5
  49 000c 32F81330 		ldrh	r3, [r2, r3, lsl #1]
  50 0010 83EA1020 		eor	r0, r3, r0, lsr #8
  51              	.LVL2:
  57:../user/source/DLT698.c ****         fcs = (fcs >> 8) ^ fcstab[(fcs ^ *cp++) & 0xff];
  52              		.loc 1 57 0
  53 0014 2246     		mov	r2, r4
  54              		.loc 1 58 0
  55 0016 0131     		adds	r1, r1, #1
  56              	.LVL3:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 3


  57              	.L2:
  57:../user/source/DLT698.c ****         fcs = (fcs >> 8) ^ fcstab[(fcs ^ *cp++) & 0xff];
  58              		.loc 1 57 0
  59 0018 541E     		subs	r4, r2, #1
  60              	.LVL4:
  61 001a 002A     		cmp	r2, #0
  62 001c F2D1     		bne	.L3
  59:../user/source/DLT698.c ****     return (~fcs);
  63              		.loc 1 59 0
  64 001e C043     		mvns	r0, r0
  65              	.LVL5:
  60:../user/source/DLT698.c **** }
  66              		.loc 1 60 0
  67 0020 80B2     		uxth	r0, r0
  68 0022 5DF8044B 		ldr	r4, [sp], #4
  69              	.LCFI1:
  70              		.cfi_restore 4
  71              		.cfi_def_cfa_offset 0
  72              	.LVL6:
  73 0026 7047     		bx	lr
  74              	.L6:
  75              		.align	2
  76              	.L5:
  77 0028 00000000 		.word	.LANCHOR0
  78              		.cfi_endproc
  79              	.LFE111:
  81              		.section	.text.dwGetApdu,"ax",%progbits
  82              		.align	2
  83              		.global	dwGetApdu
  84              		.thumb
  85              		.thumb_func
  87              	dwGetApdu:
  88              	.LFB112:
  61:../user/source/DLT698.c **** 
  62:../user/source/DLT698.c **** /*
  63:../user/source/DLT698.c **** *********************************************************************
  64:../user/source/DLT698.c **** * 功    能：帧校验
  65:../user/source/DLT698.c **** * 输    入：
  66:../user/source/DLT698.c **** * 输    出：
  67:../user/source/DLT698.c **** * 作    者：ddy
  68:../user/source/DLT698.c **** * 编写日期：2017-05-24
  69:../user/source/DLT698.c **** * 修改日期: 
  70:../user/source/DLT698.c **** **********************************************************************
  71:../user/source/DLT698.c **** */
  72:../user/source/DLT698.c **** int dwGetApdu(UINT8 *pframe, UINT8 *pAPDU)
  73:../user/source/DLT698.c **** {
  89              		.loc 1 73 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  94              	.LVL7:
  95 0000 70B4     		push	{r4, r5, r6}
  96              	.LCFI2:
  97              		.cfi_def_cfa_offset 12
  98              		.cfi_offset 4, -12
  99              		.cfi_offset 5, -8
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 4


 100              		.cfi_offset 6, -4
 101              	.LVL8:
  74:../user/source/DLT698.c ****     UINT16 uwframeLen;
  75:../user/source/DLT698.c ****     UINT32 nHCSPos;
  76:../user/source/DLT698.c ****     UINT32 nFCSPos;
  77:../user/source/DLT698.c ****     UINT16 uwhcs;
  78:../user/source/DLT698.c ****     UINT16 uwfcs;
  79:../user/source/DLT698.c ****     UINT16 SA_Len;
  80:../user/source/DLT698.c ****     int dwAPDULen = 0;
  81:../user/source/DLT698.c ****     //帧头首字符为: 0x68
  82:../user/source/DLT698.c **** #if 0
  83:../user/source/DLT698.c ****     if (pframe[0] != 0x68)
  84:../user/source/DLT698.c ****     {
  85:../user/source/DLT698.c ****         return -1;
  86:../user/source/DLT698.c ****     }
  87:../user/source/DLT698.c **** 
  88:../user/source/DLT698.c ****     //帧长占2byte，不含头尾
  89:../user/source/DLT698.c ****     uwframeLen = MAKE_WORD(pframe[2], pframe[1]);
  90:../user/source/DLT698.c ****     /*SA地址字节数，0代表1个字节*/
  91:../user/source/DLT698.c ****     SA_Len = (pframe[4] & 0x0F) + 2;
  92:../user/source/DLT698.c ****     nHCSPos += SA_Len + 5;
  93:../user/source/DLT698.c **** 
  94:../user/source/DLT698.c ****     //帧头校验hcs
  95:../user/source/DLT698.c ****     uwhcs = PPPINITFCS16;
  96:../user/source/DLT698.c ****     uwhcs = pppfcs16(uwhcs, pframe + 1, nHCSPos - 1);
  97:../user/source/DLT698.c **** 
  98:../user/source/DLT698.c ****     if (uwhcs != MAKE_WORD(pframe[nHCSPos + 1], pframe[nHCSPos]))
  99:../user/source/DLT698.c ****     {
 100:../user/source/DLT698.c ****         return -1;
 101:../user/source/DLT698.c ****     }
 102:../user/source/DLT698.c **** 
 103:../user/source/DLT698.c **** //帧校验fcs
 104:../user/source/DLT698.c ****     nFCSPos = uwframeLen - 1;
 105:../user/source/DLT698.c ****     uwfcs = PPPINITFCS16;
 106:../user/source/DLT698.c ****     uwfcs = pppfcs16(uwfcs, pframe + 1, nFCSPos - 1);
 107:../user/source/DLT698.c ****     if (uwfcs != MAKE_WORD(pframe[nFCSPos + 1], pframe[nFCSPos]))
 108:../user/source/DLT698.c ****     {
 109:../user/source/DLT698.c ****         return -1;
 110:../user/source/DLT698.c ****     }
 111:../user/source/DLT698.c **** 
 112:../user/source/DLT698.c ****     dwAPDULen = uwframeLen - SA_Len - 8;
 113:../user/source/DLT698.c **** 
 114:../user/source/DLT698.c **** #endif
 115:../user/source/DLT698.c ****     //HardFault
 116:../user/source/DLT698.c ****     //memcpy(pAPDU, pframe, dwAPDULen);
 117:../user/source/DLT698.c ****     //return dwAPDULen;
 118:../user/source/DLT698.c ****     memcpy(pAPDU, pframe, 44);
 102              		.loc 1 118 0
 103 0002 0346     		mov	r3, r0
 104 0004 2030     		adds	r0, r0, #32
 105              	.LVL9:
 106              	.L8:
 107 0006 1E68     		ldr	r6, [r3]	@ unaligned
 108 0008 5D68     		ldr	r5, [r3, #4]	@ unaligned
 109 000a 9C68     		ldr	r4, [r3, #8]	@ unaligned
 110 000c DA68     		ldr	r2, [r3, #12]	@ unaligned
 111 000e 0E60     		str	r6, [r1]	@ unaligned
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 5


 112 0010 4D60     		str	r5, [r1, #4]	@ unaligned
 113 0012 8C60     		str	r4, [r1, #8]	@ unaligned
 114 0014 CA60     		str	r2, [r1, #12]	@ unaligned
 115 0016 1033     		adds	r3, r3, #16
 116 0018 1031     		adds	r1, r1, #16
 117 001a 8342     		cmp	r3, r0
 118 001c F3D1     		bne	.L8
 119 001e 1868     		ldr	r0, [r3]	@ unaligned
 120              	.LVL10:
 121 0020 5A68     		ldr	r2, [r3, #4]	@ unaligned
 122 0022 9B68     		ldr	r3, [r3, #8]	@ unaligned
 123 0024 0860     		str	r0, [r1]	@ unaligned
 124 0026 4A60     		str	r2, [r1, #4]	@ unaligned
 125 0028 8B60     		str	r3, [r1, #8]	@ unaligned
 119:../user/source/DLT698.c ****     return 44;
 120:../user/source/DLT698.c **** }
 126              		.loc 1 120 0
 127 002a 2C20     		movs	r0, #44
 128 002c 70BC     		pop	{r4, r5, r6}
 129              	.LCFI3:
 130              		.cfi_restore 6
 131              		.cfi_restore 5
 132              		.cfi_restore 4
 133              		.cfi_def_cfa_offset 0
 134 002e 7047     		bx	lr
 135              		.cfi_endproc
 136              	.LFE112:
 138              		.section	.text.dwGetOad,"ax",%progbits
 139              		.align	2
 140              		.global	dwGetOad
 141              		.thumb
 142              		.thumb_func
 144              	dwGetOad:
 145              	.LFB116:
 121:../user/source/DLT698.c **** 
 122:../user/source/DLT698.c **** int dwAPduAnalyze(UINT8 *pucBuf, UINT32 dwlen, COLL_STORE_DATA *pstCollStoreData)
 123:../user/source/DLT698.c **** {
 124:../user/source/DLT698.c ****     int Len = 0, Bytes = 0;
 125:../user/source/DLT698.c ****     int Ret = -1;
 126:../user/source/DLT698.c ****     COLL_STORE_DATA *pstCollData = pstCollStoreData;
 127:../user/source/DLT698.c **** 
 128:../user/source/DLT698.c ****     if (GET_Response == pucBuf[0])
 129:../user/source/DLT698.c ****     {
 130:../user/source/DLT698.c ****         switch (pucBuf[1])
 131:../user/source/DLT698.c ****         {
 132:../user/source/DLT698.c ****         case GetResponseNormal:
 133:../user/source/DLT698.c ****         case GetResponseNormalList:
 134:../user/source/DLT698.c ****         {
 135:../user/source/DLT698.c ****             Ret = dwGetResponseNormal(pucBuf, pstCollData);
 136:../user/source/DLT698.c ****         }
 137:../user/source/DLT698.c ****         break;
 138:../user/source/DLT698.c ****         case GetResponseRecord:
 139:../user/source/DLT698.c ****         case GetResponseRecordList:
 140:../user/source/DLT698.c ****         {
 141:../user/source/DLT698.c ****             //Ret = dwGetResponseRecord(pucBuf, pstCollData);
 142:../user/source/DLT698.c ****         }
 143:../user/source/DLT698.c ****         break;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 6


 144:../user/source/DLT698.c ****         case GetResponseNext:
 145:../user/source/DLT698.c ****         {
 146:../user/source/DLT698.c ****             //	Ret = blGetResponseNext(pstChanTaskMsg, &pApduBuf[nPos], ucGetResponse);
 147:../user/source/DLT698.c ****         }
 148:../user/source/DLT698.c ****         break;
 149:../user/source/DLT698.c ****         default:
 150:../user/source/DLT698.c ****             break;
 151:../user/source/DLT698.c ****         }
 152:../user/source/DLT698.c ****     }
 153:../user/source/DLT698.c ****     else if (SECURITY_Response == pucBuf[0])
 154:../user/source/DLT698.c ****     {
 155:../user/source/DLT698.c ****         return -1;
 156:../user/source/DLT698.c ****     }
 157:../user/source/DLT698.c **** 
 158:../user/source/DLT698.c ****     return Ret;
 159:../user/source/DLT698.c **** }
 160:../user/source/DLT698.c **** 
 161:../user/source/DLT698.c **** /**
 162:../user/source/DLT698.c ****  * @note: dlt698 data length area
 163:../user/source/DLT698.c ****  * @author: 
 164:../user/source/DLT698.c ****  * @date: 2017-7-21 15:05:44
 165:../user/source/DLT698.c ****  *-----------------------------------------------------------------
 166:../user/source/DLT698.c ****  */
 167:../user/source/DLT698.c **** inline int dwDlt698Len(UINT8 *ucRcvBuf, int *LenBytes)
 168:../user/source/DLT698.c **** {
 169:../user/source/DLT698.c ****     int Bytes;
 170:../user/source/DLT698.c **** 
 171:../user/source/DLT698.c ****     assert(ucRcvBuf);
 172:../user/source/DLT698.c **** 
 173:../user/source/DLT698.c ****     if (0x00 == (ucRcvBuf[0] & 0x80))
 174:../user/source/DLT698.c ****     {
 175:../user/source/DLT698.c ****         *LenBytes = 1;
 176:../user/source/DLT698.c ****         return ucRcvBuf[0];
 177:../user/source/DLT698.c ****     }
 178:../user/source/DLT698.c **** 
 179:../user/source/DLT698.c ****     Bytes = ucRcvBuf[0] & 0x7F;
 180:../user/source/DLT698.c **** 
 181:../user/source/DLT698.c ****     if (Bytes == 1)
 182:../user/source/DLT698.c ****     {
 183:../user/source/DLT698.c ****         *LenBytes = 2;
 184:../user/source/DLT698.c ****         return (ucRcvBuf[1]);
 185:../user/source/DLT698.c ****     }
 186:../user/source/DLT698.c ****     else if (Bytes == 2)
 187:../user/source/DLT698.c ****     {
 188:../user/source/DLT698.c ****         *LenBytes = 3;
 189:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 8) | (ucRcvBuf[2]));
 190:../user/source/DLT698.c ****     }
 191:../user/source/DLT698.c ****     else if (Bytes == 3)
 192:../user/source/DLT698.c ****     {
 193:../user/source/DLT698.c ****         *LenBytes = 4;
 194:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 16) | (ucRcvBuf[2] << 8) & (ucRcvBuf[3]));
 195:../user/source/DLT698.c ****     }
 196:../user/source/DLT698.c ****     else if (Bytes == 4)
 197:../user/source/DLT698.c ****     {
 198:../user/source/DLT698.c ****         *LenBytes = 5;
 199:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 24) | (ucRcvBuf[2] << 16) & (ucRcvBuf[3] << 8) & (ucRcvBuf[4]));
 200:../user/source/DLT698.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 7


 201:../user/source/DLT698.c **** 
 202:../user/source/DLT698.c ****     return -1;
 203:../user/source/DLT698.c **** }
 204:../user/source/DLT698.c **** 
 205:../user/source/DLT698.c **** int dwDlt698DataLenByOAD(OAD stOAD, UINT8 *pucBuf)
 206:../user/source/DLT698.c **** {
 207:../user/source/DLT698.c ****     UINT8 i;
 208:../user/source/DLT698.c ****     int dwGetResult;
 209:../user/source/DLT698.c ****     INT32 dwRetLen = 0;
 210:../user/source/DLT698.c ****     UINT8 ucDataType = 0;
 211:../user/source/DLT698.c ****     int nRetDataLen = 0;
 212:../user/source/DLT698.c ****     UINT8 ucArrayCount = 0;
 213:../user/source/DLT698.c ****     UINT8 byOI1 = stOAD.OI_date >> 8;
 214:../user/source/DLT698.c ****     UINT8 byOI2 = stOAD.OI_date;
 215:../user/source/DLT698.c ****     UINT8 ucFeature = stOAD.attr_ID;
 216:../user/source/DLT698.c ****     UINT8 ucIndex = stOAD.attr_index;
 217:../user/source/DLT698.c **** 
 218:../user/source/DLT698.c ****     if ((byOI1 >> 4) == 0)
 219:../user/source/DLT698.c ****         byOI1 = byOI1 & 0xF0;
 220:../user/source/DLT698.c ****     return dwDlt698DataLen(pucBuf, 256);
 221:../user/source/DLT698.c **** }
 222:../user/source/DLT698.c **** 
 223:../user/source/DLT698.c **** int dwGetOad(UINT8 *pucStr, OAD *pstOad)
 224:../user/source/DLT698.c **** {
 146              		.loc 1 224 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 151              	.LVL11:
 225:../user/source/DLT698.c ****     pstOad->OI_date = MAKE_WORD(*pucStr, *(pucStr + 1));
 152              		.loc 1 225 0
 153 0000 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 154 0002 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 155 0004 43EA0223 		orr	r3, r3, r2, lsl #8
 156 0008 0B80     		strh	r3, [r1]	@ movhi
 157              	.LVL12:
 226:../user/source/DLT698.c ****     pucStr += 2;
 227:../user/source/DLT698.c **** 
 228:../user/source/DLT698.c ****     pstOad->attr_ID = *pucStr++;
 158              		.loc 1 228 0
 159 000a 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 160 000c 8B70     		strb	r3, [r1, #2]
 161              	.LVL13:
 229:../user/source/DLT698.c ****     pstOad->attr_index = *pucStr++;
 162              		.loc 1 229 0
 163 000e C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 164 0010 CB70     		strb	r3, [r1, #3]
 230:../user/source/DLT698.c **** 
 231:../user/source/DLT698.c ****     return 4;
 232:../user/source/DLT698.c **** }
 165              		.loc 1 232 0
 166 0012 0420     		movs	r0, #4
 167              	.LVL14:
 168 0014 7047     		bx	lr
 169              		.cfi_endproc
 170              	.LFE116:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 8


 172 0016 00BF     		.section	.text.dwDlt698MsLen,"ax",%progbits
 173              		.align	2
 174              		.global	dwDlt698MsLen
 175              		.thumb
 176              		.thumb_func
 178              	dwDlt698MsLen:
 179              	.LFB120:
 233:../user/source/DLT698.c **** 
 234:../user/source/DLT698.c **** int dwGetResponseNormal(UINT8 *pucBuf, COLL_STORE_DATA *pstCollStoreData) //, COLLECT_UNIT_ID stID)
 235:../user/source/DLT698.c **** {
 236:../user/source/DLT698.c ****     UINT8 i;
 237:../user/source/DLT698.c ****     UINT8 ucResultNum;
 238:../user/source/DLT698.c ****     int dwLen;
 239:../user/source/DLT698.c ****     BOOL Ret = true;
 240:../user/source/DLT698.c ****     COLL_STORE_DATA *pstCollData = pstCollStoreData;
 241:../user/source/DLT698.c ****     UINT8 *Ptr = pucBuf;
 242:../user/source/DLT698.c ****     OAD stOAD;
 243:../user/source/DLT698.c ****     extern BOOL blFollowReportSWord;
 244:../user/source/DLT698.c ****     extern UINT8 ucFollowReportSWord[4];
 245:../user/source/DLT698.c ****     UINT8 ucNum;
 246:../user/source/DLT698.c **** 
 247:../user/source/DLT698.c ****     Ptr++; // Get Request
 248:../user/source/DLT698.c **** 
 249:../user/source/DLT698.c ****     switch (*Ptr++)
 250:../user/source/DLT698.c ****     {
 251:../user/source/DLT698.c ****     case GetResponseNormal:
 252:../user/source/DLT698.c ****     {
 253:../user/source/DLT698.c ****         Ptr++;
 254:../user/source/DLT698.c ****         ucResultNum = 1;
 255:../user/source/DLT698.c ****     }
 256:../user/source/DLT698.c ****     break;
 257:../user/source/DLT698.c ****     case GetResponseNormalList:
 258:../user/source/DLT698.c ****     {
 259:../user/source/DLT698.c ****         //SEQUENCE OF ResultNormal
 260:../user/source/DLT698.c ****         Ptr++;
 261:../user/source/DLT698.c ****         if ((ucResultNum = *Ptr++) > 127)
 262:../user/source/DLT698.c ****         {
 263:../user/source/DLT698.c ****             return -1;
 264:../user/source/DLT698.c ****         }
 265:../user/source/DLT698.c ****     }
 266:../user/source/DLT698.c ****     break;
 267:../user/source/DLT698.c ****     default:
 268:../user/source/DLT698.c ****         return -1;
 269:../user/source/DLT698.c ****     }
 270:../user/source/DLT698.c **** 
 271:../user/source/DLT698.c ****     bzero(pstCollData, sizeof(COLL_STORE_DATA));
 272:../user/source/DLT698.c **** 
 273:../user/source/DLT698.c ****     //stCollData.uwConfigNo = uwConfigNo;
 274:../user/source/DLT698.c ****     pstCollData->eDataCls = D_CLASS_REAL;
 275:../user/source/DLT698.c **** 
 276:../user/source/DLT698.c ****     for (i = 0; i < ucResultNum; i++)
 277:../user/source/DLT698.c ****     {
 278:../user/source/DLT698.c ****         Ptr += dwGetOad(Ptr, &pstCollData->stDataUnit[i].stOAD);
 279:../user/source/DLT698.c **** 
 280:../user/source/DLT698.c ****         if (ERROR_INFO == *Ptr)
 281:../user/source/DLT698.c ****         {
 282:../user/source/DLT698.c ****             Ptr++; // Choice
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 9


 283:../user/source/DLT698.c ****             Ptr++; // DAR
 284:../user/source/DLT698.c ****         }
 285:../user/source/DLT698.c ****         else if (RES_DATA == *Ptr)
 286:../user/source/DLT698.c ****         {
 287:../user/source/DLT698.c ****             Ptr++; // Choice
 288:../user/source/DLT698.c ****             if ((dwLen = dwDlt698DataLenByOAD(pstCollData->stDataUnit[i].stOAD, Ptr)) < 0)
 289:../user/source/DLT698.c ****             {
 290:../user/source/DLT698.c ****                 return -1;
 291:../user/source/DLT698.c ****             }
 292:../user/source/DLT698.c **** 
 293:../user/source/DLT698.c ****             pstCollData->stDataUnit[i].uwLen = dwLen;
 294:../user/source/DLT698.c ****             pstCollData->stDataUnit[i].ucPtr = Ptr;
 295:../user/source/DLT698.c ****             pstCollData->stDataUnit[i].ucVal = 1;
 296:../user/source/DLT698.c ****             pstCollData->ucDataNum++;
 297:../user/source/DLT698.c **** 
 298:../user/source/DLT698.c ****             Ptr += dwLen;
 299:../user/source/DLT698.c ****         }
 300:../user/source/DLT698.c ****         else
 301:../user/source/DLT698.c ****         {
 302:../user/source/DLT698.c ****             return -1;
 303:../user/source/DLT698.c ****         }
 304:../user/source/DLT698.c ****     }
 305:../user/source/DLT698.c **** 
 306:../user/source/DLT698.c **** /*********跟随上报标志********/
 307:../user/source/DLT698.c **** #if 0 //stragen
 308:../user/source/DLT698.c ****     if (1 == *Ptr++) //跟随上报标志
 309:../user/source/DLT698.c ****     {
 310:../user/source/DLT698.c ****         //若干个对象属性及其数据  [1]  SEQUENCE OF A-ResultNormal
 311:../user/source/DLT698.c ****         if (1 == *Ptr++)
 312:../user/source/DLT698.c ****         {
 313:../user/source/DLT698.c ****             ucNum = *Ptr++; // 个数SEQUENCE OF A-ResultNormal
 314:../user/source/DLT698.c **** 
 315:../user/source/DLT698.c ****             for (i = 0; i < ucNum; i++)
 316:../user/source/DLT698.c ****             {
 317:../user/source/DLT698.c ****                 Ptr += dwGetOad(Ptr, &stOAD);
 318:../user/source/DLT698.c ****                 if ((0x3320 == stOAD.OI_date) && (0x02 == stOAD.attr_ID) && (0x01 == stOAD.attr_ind
 319:../user/source/DLT698.c ****                 {
 320:../user/source/DLT698.c ****                     if (1 == *Ptr++) //结果类型
 321:../user/source/DLT698.c ****                     {
 322:../user/source/DLT698.c ****                         if (DL_OAD == *Ptr++)
 323:../user/source/DLT698.c ****                         {
 324:../user/source/DLT698.c ****                             stFollowRptInfo[uwConfigNo - 1].ucFollowRptFlag = 1;
 325:../user/source/DLT698.c ****                             stFollowRptInfo[uwConfigNo - 1].stFollowRptEventOAD.OI_date = MAKE_WORD
 326:../user/source/DLT698.c ****                             Ptr += 2;
 327:../user/source/DLT698.c ****                             stFollowRptInfo[uwConfigNo - 1].stFollowRptEventOAD.attr_ID = *Ptr++;
 328:../user/source/DLT698.c ****                             stFollowRptInfo[uwConfigNo - 1].stFollowRptEventOAD.attr_index = *Ptr++
 329:../user/source/DLT698.c ****                         }
 330:../user/source/DLT698.c ****                     }
 331:../user/source/DLT698.c ****                 }
 332:../user/source/DLT698.c ****                 else if (0x2015 == stOAD.OI_date)
 333:../user/source/DLT698.c ****                 {
 334:../user/source/DLT698.c ****                     if (1 == *Ptr++)
 335:../user/source/DLT698.c ****                     {
 336:../user/source/DLT698.c ****                         if (*Ptr++ != DL_BIT_STR)
 337:../user/source/DLT698.c ****                         {
 338:../user/source/DLT698.c ****                             continue;
 339:../user/source/DLT698.c ****                         }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 10


 340:../user/source/DLT698.c ****                         if (*Ptr++ != 32)
 341:../user/source/DLT698.c ****                         {
 342:../user/source/DLT698.c ****                             continue;
 343:../user/source/DLT698.c ****                         }
 344:../user/source/DLT698.c ****                         blFollowReportSWord = TRUE;
 345:../user/source/DLT698.c ****                         memcpy(ucFollowReportSWord, Ptr, 0x04);
 346:../user/source/DLT698.c ****                         Ptr += 4;
 347:../user/source/DLT698.c ****                     }
 348:../user/source/DLT698.c ****                 }
 349:../user/source/DLT698.c ****             }
 350:../user/source/DLT698.c ****         }
 351:../user/source/DLT698.c ****     }
 352:../user/source/DLT698.c **** #endif
 353:../user/source/DLT698.c **** 
 354:../user/source/DLT698.c ****     //blMeterDataChange(stID.ucTaskID, &stCollData);
 355:../user/source/DLT698.c **** 
 356:../user/source/DLT698.c ****     //if (OK != dwDealDataStore(&stCollData, stID))
 357:../user/source/DLT698.c ****     //{
 358:../user/source/DLT698.c ****     //return -1;
 359:../user/source/DLT698.c ****     //}
 360:../user/source/DLT698.c ****     /*数据解析函数，待移植*/
 361:../user/source/DLT698.c ****     //dwDataRowInsertItem(rowArray[i], pstCollData->stDataUnit[k].stOAD, pstCollData->stDataUnit[k]
 362:../user/source/DLT698.c ****     return 1;
 363:../user/source/DLT698.c **** }
 364:../user/source/DLT698.c **** 
 365:../user/source/DLT698.c **** /**
 366:../user/source/DLT698.c ****   ************************************************************************
 367:../user/source/DLT698.c ****   * @brief    : count data length of the frist data in ucRcvBuf
 368:../user/source/DLT698.c ****   * @param    : ucRcvBuf : source code (with data identifier)
 369:../user/source/DLT698.c ****   *             dwRcvLen : valid length of source code
 370:../user/source/DLT698.c ****   * @return   : -1   : error    
 371:../user/source/DLT698.c ****                 else : data length of the frist data in the source code
 372:../user/source/DLT698.c ****   * @author   : Lixg
 373:../user/source/DLT698.c ****   * @version  : 0.1
 374:../user/source/DLT698.c ****   * @date     : 2017-7-21 13:37:37
 375:../user/source/DLT698.c ****   * @modify   : 
 376:../user/source/DLT698.c ****   * @see also : 
 377:../user/source/DLT698.c ****   ************************************************************************
 378:../user/source/DLT698.c ****   * @attention
 379:../user/source/DLT698.c ****   ************************************************************************
 380:../user/source/DLT698.c ****   */
 381:../user/source/DLT698.c **** int dwDlt698DataLen(UINT8 *ucRcvBuf, int dwRcvLen)
 382:../user/source/DLT698.c **** {
 383:../user/source/DLT698.c ****     assert(ucRcvBuf);
 384:../user/source/DLT698.c **** 
 385:../user/source/DLT698.c ****     UINT16 Len = 0;
 386:../user/source/DLT698.c ****     UINT8 *Ptr = ucRcvBuf;
 387:../user/source/DLT698.c **** 
 388:../user/source/DLT698.c ****     int i = 0, j = 0, Res = 0, varLen = 0, varLenB = 0, LenBytes = 0; // 可变长度
 389:../user/source/DLT698.c **** 
 390:../user/source/DLT698.c ****     /* data identify */
 391:../user/source/DLT698.c ****     Ptr++;
 392:../user/source/DLT698.c ****     Len++;
 393:../user/source/DLT698.c **** 
 394:../user/source/DLT698.c ****     switch (ucRcvBuf[0])
 395:../user/source/DLT698.c ****     {
 396:../user/source/DLT698.c ****     case DL_NULL:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 11


 397:../user/source/DLT698.c ****     {
 398:../user/source/DLT698.c ****         /* data length */
 399:../user/source/DLT698.c ****         /* data contents */
 400:../user/source/DLT698.c ****     }
 401:../user/source/DLT698.c ****     break;
 402:../user/source/DLT698.c ****     case DL_ARRAY:
 403:../user/source/DLT698.c ****     {
 404:../user/source/DLT698.c ****         // data length
 405:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 406:../user/source/DLT698.c ****         {
 407:../user/source/DLT698.c ****             return -1;
 408:../user/source/DLT698.c ****         }
 409:../user/source/DLT698.c **** 
 410:../user/source/DLT698.c ****         Len += LenBytes;
 411:../user/source/DLT698.c ****         Ptr += LenBytes;
 412:../user/source/DLT698.c **** 
 413:../user/source/DLT698.c ****         // data contents
 414:../user/source/DLT698.c ****         for (i = 0; i < varLen; i++)
 415:../user/source/DLT698.c ****         {
 416:../user/source/DLT698.c ****             if ((Res = dwDlt698DataLen(Ptr, dwRcvLen - Len)) <= 0)
 417:../user/source/DLT698.c ****             {
 418:../user/source/DLT698.c ****                 return -1;
 419:../user/source/DLT698.c ****             }
 420:../user/source/DLT698.c **** 
 421:../user/source/DLT698.c ****             Ptr += Res;
 422:../user/source/DLT698.c ****             Len += Res;
 423:../user/source/DLT698.c ****         }
 424:../user/source/DLT698.c ****     }
 425:../user/source/DLT698.c ****     break;
 426:../user/source/DLT698.c ****     case DL_STRUCT:
 427:../user/source/DLT698.c ****     {
 428:../user/source/DLT698.c ****         // data length
 429:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 430:../user/source/DLT698.c ****         {
 431:../user/source/DLT698.c ****             return -1;
 432:../user/source/DLT698.c ****         }
 433:../user/source/DLT698.c **** 
 434:../user/source/DLT698.c ****         Len += LenBytes;
 435:../user/source/DLT698.c ****         Ptr += LenBytes;
 436:../user/source/DLT698.c **** 
 437:../user/source/DLT698.c ****         // data contents
 438:../user/source/DLT698.c ****         for (i = 0; i < varLen; i++)
 439:../user/source/DLT698.c ****         {
 440:../user/source/DLT698.c ****             if ((Res = dwDlt698DataLen(Ptr, dwRcvLen - Len)) <= 0)
 441:../user/source/DLT698.c ****             {
 442:../user/source/DLT698.c ****                 return -1;
 443:../user/source/DLT698.c ****             }
 444:../user/source/DLT698.c **** 
 445:../user/source/DLT698.c ****             Ptr += Res;
 446:../user/source/DLT698.c ****             Len += Res;
 447:../user/source/DLT698.c ****         }
 448:../user/source/DLT698.c ****     }
 449:../user/source/DLT698.c ****     break;
 450:../user/source/DLT698.c ****     case DL_BOOL:
 451:../user/source/DLT698.c ****     {
 452:../user/source/DLT698.c ****         /* data length */
 453:../user/source/DLT698.c ****         /* data contents */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 12


 454:../user/source/DLT698.c ****         Ptr++;
 455:../user/source/DLT698.c ****         Len++;
 456:../user/source/DLT698.c ****     }
 457:../user/source/DLT698.c ****     break;
 458:../user/source/DLT698.c ****     case DL_BIT_STR:
 459:../user/source/DLT698.c ****     {
 460:../user/source/DLT698.c ****         /* data length */
 461:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 462:../user/source/DLT698.c ****         {
 463:../user/source/DLT698.c ****             return -1;
 464:../user/source/DLT698.c ****         }
 465:../user/source/DLT698.c **** 
 466:../user/source/DLT698.c ****         Len += LenBytes;
 467:../user/source/DLT698.c ****         Ptr += LenBytes;
 468:../user/source/DLT698.c **** 
 469:../user/source/DLT698.c ****         /* data contents */
 470:../user/source/DLT698.c ****         if (0 == (varLen % 8))
 471:../user/source/DLT698.c ****         {
 472:../user/source/DLT698.c ****             Ptr += varLen / 8;
 473:../user/source/DLT698.c ****             Len += varLen / 8;
 474:../user/source/DLT698.c ****         }
 475:../user/source/DLT698.c ****         else
 476:../user/source/DLT698.c ****         {
 477:../user/source/DLT698.c ****             Ptr += (varLen / 8) + 1;
 478:../user/source/DLT698.c ****             Len += (varLen / 8) + 1;
 479:../user/source/DLT698.c ****         }
 480:../user/source/DLT698.c ****     }
 481:../user/source/DLT698.c ****     break;
 482:../user/source/DLT698.c ****     case DL_D_LONG:
 483:../user/source/DLT698.c ****     {
 484:../user/source/DLT698.c ****         /* data length */
 485:../user/source/DLT698.c ****         /* data contents */
 486:../user/source/DLT698.c ****         Ptr += 4;
 487:../user/source/DLT698.c ****         Len += 4;
 488:../user/source/DLT698.c ****     }
 489:../user/source/DLT698.c ****     break;
 490:../user/source/DLT698.c ****     case DL_D_LONG_UNS:
 491:../user/source/DLT698.c ****     {
 492:../user/source/DLT698.c ****         /* data length */
 493:../user/source/DLT698.c ****         /* data contents */
 494:../user/source/DLT698.c ****         Ptr += 4;
 495:../user/source/DLT698.c ****         Len += 4;
 496:../user/source/DLT698.c ****     }
 497:../user/source/DLT698.c ****     break;
 498:../user/source/DLT698.c ****     case DL_OCTET_STR:
 499:../user/source/DLT698.c ****     {
 500:../user/source/DLT698.c ****         /* data length */
 501:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 502:../user/source/DLT698.c ****         {
 503:../user/source/DLT698.c ****             return -1;
 504:../user/source/DLT698.c ****         }
 505:../user/source/DLT698.c **** 
 506:../user/source/DLT698.c ****         Len += LenBytes;
 507:../user/source/DLT698.c ****         Ptr += LenBytes;
 508:../user/source/DLT698.c **** 
 509:../user/source/DLT698.c ****         /* data contents */
 510:../user/source/DLT698.c ****         Ptr += varLen;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 13


 511:../user/source/DLT698.c ****         Len += varLen;
 512:../user/source/DLT698.c ****     }
 513:../user/source/DLT698.c ****     break;
 514:../user/source/DLT698.c ****     case DL_VISIBLE_STR:
 515:../user/source/DLT698.c ****     {
 516:../user/source/DLT698.c ****         /* data length */
 517:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 518:../user/source/DLT698.c ****         {
 519:../user/source/DLT698.c ****             return -1;
 520:../user/source/DLT698.c ****         }
 521:../user/source/DLT698.c **** 
 522:../user/source/DLT698.c ****         Len += LenBytes;
 523:../user/source/DLT698.c ****         Ptr += LenBytes;
 524:../user/source/DLT698.c **** 
 525:../user/source/DLT698.c ****         /* data contents */
 526:../user/source/DLT698.c ****         Ptr += varLen;
 527:../user/source/DLT698.c ****         Len += varLen;
 528:../user/source/DLT698.c ****     }
 529:../user/source/DLT698.c ****     break;
 530:../user/source/DLT698.c ****     case DL_UTF8_STR:
 531:../user/source/DLT698.c ****     {
 532:../user/source/DLT698.c ****         /* data length */
 533:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 534:../user/source/DLT698.c ****         {
 535:../user/source/DLT698.c ****             return -1;
 536:../user/source/DLT698.c ****         }
 537:../user/source/DLT698.c **** 
 538:../user/source/DLT698.c ****         Len += LenBytes;
 539:../user/source/DLT698.c ****         Ptr += LenBytes;
 540:../user/source/DLT698.c **** 
 541:../user/source/DLT698.c ****         /* data contents */
 542:../user/source/DLT698.c ****         Ptr += varLen;
 543:../user/source/DLT698.c ****         Len += varLen;
 544:../user/source/DLT698.c ****     }
 545:../user/source/DLT698.c ****     break;
 546:../user/source/DLT698.c ****     case DL_INTEGER:
 547:../user/source/DLT698.c ****     {
 548:../user/source/DLT698.c ****         /* data length */
 549:../user/source/DLT698.c ****         /* data contents */
 550:../user/source/DLT698.c ****         Ptr++;
 551:../user/source/DLT698.c ****         Len++;
 552:../user/source/DLT698.c ****     }
 553:../user/source/DLT698.c ****     break;
 554:../user/source/DLT698.c ****     case DL_LONG:
 555:../user/source/DLT698.c ****     {
 556:../user/source/DLT698.c ****         /* data length */
 557:../user/source/DLT698.c ****         /* data contents */
 558:../user/source/DLT698.c ****         Ptr += 2;
 559:../user/source/DLT698.c ****         Len += 2;
 560:../user/source/DLT698.c ****     }
 561:../user/source/DLT698.c ****     break;
 562:../user/source/DLT698.c ****     case DL_CHAR_UNS:
 563:../user/source/DLT698.c ****     {
 564:../user/source/DLT698.c ****         /* data length */
 565:../user/source/DLT698.c ****         /* data contents */
 566:../user/source/DLT698.c ****         Ptr += 1;
 567:../user/source/DLT698.c ****         Len += 1;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 14


 568:../user/source/DLT698.c ****     }
 569:../user/source/DLT698.c ****     break;
 570:../user/source/DLT698.c ****     case DL_LONG_UNS:
 571:../user/source/DLT698.c ****     {
 572:../user/source/DLT698.c ****         /* data length */
 573:../user/source/DLT698.c ****         /* data contents */
 574:../user/source/DLT698.c ****         Ptr += 2;
 575:../user/source/DLT698.c ****         Len += 2;
 576:../user/source/DLT698.c ****     }
 577:../user/source/DLT698.c ****     break;
 578:../user/source/DLT698.c ****     case DL_LONG64:
 579:../user/source/DLT698.c ****     {
 580:../user/source/DLT698.c ****         /* data length */
 581:../user/source/DLT698.c ****         /* data contents */
 582:../user/source/DLT698.c ****         Ptr += 8;
 583:../user/source/DLT698.c ****         Len += 8;
 584:../user/source/DLT698.c ****     }
 585:../user/source/DLT698.c ****     break;
 586:../user/source/DLT698.c ****     case DL_LONG64_UNS:
 587:../user/source/DLT698.c ****     {
 588:../user/source/DLT698.c ****         /* data length */
 589:../user/source/DLT698.c ****         /* data contents */
 590:../user/source/DLT698.c ****         Ptr += 8;
 591:../user/source/DLT698.c ****         Len += 8;
 592:../user/source/DLT698.c ****     }
 593:../user/source/DLT698.c ****     break;
 594:../user/source/DLT698.c ****     case DL_ENUM:
 595:../user/source/DLT698.c ****     {
 596:../user/source/DLT698.c ****         /* data length */
 597:../user/source/DLT698.c ****         /* data contents */
 598:../user/source/DLT698.c ****         Ptr += 1;
 599:../user/source/DLT698.c ****         Len += 1;
 600:../user/source/DLT698.c ****     }
 601:../user/source/DLT698.c ****     break;
 602:../user/source/DLT698.c ****     case DL_FLOAT32:
 603:../user/source/DLT698.c ****     {
 604:../user/source/DLT698.c ****         /* data length */
 605:../user/source/DLT698.c ****         /* data contents */
 606:../user/source/DLT698.c ****         Ptr += 4;
 607:../user/source/DLT698.c ****         Len += 4;
 608:../user/source/DLT698.c ****     }
 609:../user/source/DLT698.c ****     break;
 610:../user/source/DLT698.c ****     case DL_FLOAT64:
 611:../user/source/DLT698.c ****     {
 612:../user/source/DLT698.c ****         /* data length */
 613:../user/source/DLT698.c ****         /* data contents */
 614:../user/source/DLT698.c ****         Ptr += 8;
 615:../user/source/DLT698.c ****         Len += 8;
 616:../user/source/DLT698.c ****     }
 617:../user/source/DLT698.c ****     break;
 618:../user/source/DLT698.c ****     case DL_DATE_TIME:
 619:../user/source/DLT698.c ****     {
 620:../user/source/DLT698.c ****         /* data length */
 621:../user/source/DLT698.c ****         /* data contents */
 622:../user/source/DLT698.c ****         Ptr += 10;
 623:../user/source/DLT698.c ****         Len += 10;
 624:../user/source/DLT698.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 15


 625:../user/source/DLT698.c ****     break;
 626:../user/source/DLT698.c ****     case DL_DATE:
 627:../user/source/DLT698.c ****     {
 628:../user/source/DLT698.c ****         /* data length */
 629:../user/source/DLT698.c ****         /* data contents */
 630:../user/source/DLT698.c ****         Ptr += 5;
 631:../user/source/DLT698.c ****         Len += 5;
 632:../user/source/DLT698.c ****     }
 633:../user/source/DLT698.c ****     break;
 634:../user/source/DLT698.c ****     case DL_TIME:
 635:../user/source/DLT698.c ****     {
 636:../user/source/DLT698.c ****         /* data length */
 637:../user/source/DLT698.c ****         /* data contents */
 638:../user/source/DLT698.c ****         Ptr += 3;
 639:../user/source/DLT698.c ****         Len += 3;
 640:../user/source/DLT698.c ****     }
 641:../user/source/DLT698.c ****     break;
 642:../user/source/DLT698.c ****     case DL_DATE_TIME_S:
 643:../user/source/DLT698.c ****     {
 644:../user/source/DLT698.c ****         /* data length */
 645:../user/source/DLT698.c ****         /* data contents */
 646:../user/source/DLT698.c ****         Ptr += 7;
 647:../user/source/DLT698.c ****         Len += 7;
 648:../user/source/DLT698.c ****     }
 649:../user/source/DLT698.c ****     break;
 650:../user/source/DLT698.c ****     case DL_OI:
 651:../user/source/DLT698.c ****     {
 652:../user/source/DLT698.c ****         /* data length */
 653:../user/source/DLT698.c ****         /* data contents */
 654:../user/source/DLT698.c ****         Ptr += 2;
 655:../user/source/DLT698.c ****         Len += 2;
 656:../user/source/DLT698.c ****     }
 657:../user/source/DLT698.c ****     break;
 658:../user/source/DLT698.c ****     case DL_OAD:
 659:../user/source/DLT698.c ****     {
 660:../user/source/DLT698.c ****         /* data length */
 661:../user/source/DLT698.c ****         /* data contents */
 662:../user/source/DLT698.c ****         Ptr += 4;
 663:../user/source/DLT698.c ****         Len += 4;
 664:../user/source/DLT698.c ****     }
 665:../user/source/DLT698.c ****     break;
 666:../user/source/DLT698.c ****     case DL_ROAD:
 667:../user/source/DLT698.c ****     {
 668:../user/source/DLT698.c ****         Ptr += 4;
 669:../user/source/DLT698.c ****         Len += 4;
 670:../user/source/DLT698.c **** 
 671:../user/source/DLT698.c ****         // OAD number
 672:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 673:../user/source/DLT698.c ****         {
 674:../user/source/DLT698.c ****             return -1;
 675:../user/source/DLT698.c ****         }
 676:../user/source/DLT698.c **** 
 677:../user/source/DLT698.c ****         Len += LenBytes;
 678:../user/source/DLT698.c ****         Ptr += LenBytes;
 679:../user/source/DLT698.c **** 
 680:../user/source/DLT698.c ****         // relevance OAD
 681:../user/source/DLT698.c ****         for (i = 0; i < varLen; i++)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 16


 682:../user/source/DLT698.c ****         {
 683:../user/source/DLT698.c ****             Ptr += 4;
 684:../user/source/DLT698.c ****             Len += 4;
 685:../user/source/DLT698.c ****         }
 686:../user/source/DLT698.c ****     }
 687:../user/source/DLT698.c ****     break;
 688:../user/source/DLT698.c ****     case DL_OMD:
 689:../user/source/DLT698.c ****     {
 690:../user/source/DLT698.c ****         /* data length */
 691:../user/source/DLT698.c ****         /* data contents */
 692:../user/source/DLT698.c ****         Ptr += 4;
 693:../user/source/DLT698.c ****         Len += 4;
 694:../user/source/DLT698.c ****     }
 695:../user/source/DLT698.c ****     break;
 696:../user/source/DLT698.c ****     case DL_TI:
 697:../user/source/DLT698.c ****     {
 698:../user/source/DLT698.c ****         /* data length */
 699:../user/source/DLT698.c ****         /* data contents */
 700:../user/source/DLT698.c ****         Ptr += 3;
 701:../user/source/DLT698.c ****         Len += 3;
 702:../user/source/DLT698.c ****     }
 703:../user/source/DLT698.c ****     break;
 704:../user/source/DLT698.c ****     case DL_TSA: // octet-string
 705:../user/source/DLT698.c ****     {
 706:../user/source/DLT698.c ****         /* data length */
 707:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 708:../user/source/DLT698.c ****         {
 709:../user/source/DLT698.c ****             return -1;
 710:../user/source/DLT698.c ****         }
 711:../user/source/DLT698.c **** 
 712:../user/source/DLT698.c ****         Len += LenBytes;
 713:../user/source/DLT698.c ****         Ptr += LenBytes;
 714:../user/source/DLT698.c **** 
 715:../user/source/DLT698.c ****         /* data contents */
 716:../user/source/DLT698.c ****         Ptr += varLen;
 717:../user/source/DLT698.c ****         Len += varLen;
 718:../user/source/DLT698.c ****     }
 719:../user/source/DLT698.c ****     break;
 720:../user/source/DLT698.c ****     case DL_MAC: // octet-string
 721:../user/source/DLT698.c ****     case DL_RN:  // octet-string
 722:../user/source/DLT698.c ****     {
 723:../user/source/DLT698.c ****         /* data length */
 724:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 725:../user/source/DLT698.c ****         {
 726:../user/source/DLT698.c ****             return -1;
 727:../user/source/DLT698.c ****         }
 728:../user/source/DLT698.c **** 
 729:../user/source/DLT698.c ****         Len += LenBytes;
 730:../user/source/DLT698.c ****         Ptr += LenBytes;
 731:../user/source/DLT698.c **** 
 732:../user/source/DLT698.c ****         /* data contents */
 733:../user/source/DLT698.c ****         Ptr += varLen;
 734:../user/source/DLT698.c ****         Len += varLen;
 735:../user/source/DLT698.c ****     }
 736:../user/source/DLT698.c ****     break;
 737:../user/source/DLT698.c ****     case DL_REGION:
 738:../user/source/DLT698.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 17


 739:../user/source/DLT698.c ****         /* data length */
 740:../user/source/DLT698.c ****         /* data contents */
 741:../user/source/DLT698.c ****         Ptr += 1;
 742:../user/source/DLT698.c ****         Len += 1; // ENUMERATED
 743:../user/source/DLT698.c **** 
 744:../user/source/DLT698.c ****         if ((Res = dwDlt698DataLen(Ptr, dwRcvLen - Len)) < 0)
 745:../user/source/DLT698.c ****         { // start data
 746:../user/source/DLT698.c ****             return -1;
 747:../user/source/DLT698.c ****         }
 748:../user/source/DLT698.c ****         Ptr += Res;
 749:../user/source/DLT698.c ****         Len += Res;
 750:../user/source/DLT698.c **** 
 751:../user/source/DLT698.c ****         if ((Res = dwDlt698DataLen(Ptr, dwRcvLen - Len)) < 0)
 752:../user/source/DLT698.c ****         { // end data
 753:../user/source/DLT698.c ****             return -1;
 754:../user/source/DLT698.c ****         }
 755:../user/source/DLT698.c ****         Ptr += Res;
 756:../user/source/DLT698.c ****         Len += Res;
 757:../user/source/DLT698.c ****     }
 758:../user/source/DLT698.c ****     break;
 759:../user/source/DLT698.c ****     case DL_SCALER_UNIT:
 760:../user/source/DLT698.c ****     {
 761:../user/source/DLT698.c ****         /* data length */
 762:../user/source/DLT698.c ****         /* data contents */
 763:../user/source/DLT698.c ****         Ptr += 1;
 764:../user/source/DLT698.c ****         Len += 1;
 765:../user/source/DLT698.c **** 
 766:../user/source/DLT698.c ****         Ptr += 1;
 767:../user/source/DLT698.c ****         Len += 1; // ENUMERATED
 768:../user/source/DLT698.c ****     }
 769:../user/source/DLT698.c ****     break;
 770:../user/source/DLT698.c ****     case DL_RSD:
 771:../user/source/DLT698.c ****     {
 772:../user/source/DLT698.c ****         if ((Res = dwDlt698RSDLen(Ptr, dwRcvLen - Len)) < 0)
 773:../user/source/DLT698.c ****         {
 774:../user/source/DLT698.c ****             return -1;
 775:../user/source/DLT698.c ****         }
 776:../user/source/DLT698.c **** 
 777:../user/source/DLT698.c ****         Ptr += Res;
 778:../user/source/DLT698.c ****         Len += Res;
 779:../user/source/DLT698.c ****     }
 780:../user/source/DLT698.c ****     break;
 781:../user/source/DLT698.c ****     case DL_CSD:
 782:../user/source/DLT698.c ****     {
 783:../user/source/DLT698.c ****         if (*Ptr == 0)
 784:../user/source/DLT698.c ****         {
 785:../user/source/DLT698.c ****             Ptr += 1; // choice
 786:../user/source/DLT698.c ****             Len += 1;
 787:../user/source/DLT698.c **** 
 788:../user/source/DLT698.c ****             Ptr += 4; // OAD
 789:../user/source/DLT698.c ****             Len += 4;
 790:../user/source/DLT698.c ****         }
 791:../user/source/DLT698.c ****         else if (*Ptr == 1)
 792:../user/source/DLT698.c ****         {
 793:../user/source/DLT698.c ****             Ptr += 1; // choice
 794:../user/source/DLT698.c ****             Len += 1;
 795:../user/source/DLT698.c **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 18


 796:../user/source/DLT698.c ****             Ptr += 4; // OAD
 797:../user/source/DLT698.c ****             Len += 4;
 798:../user/source/DLT698.c **** 
 799:../user/source/DLT698.c ****             // relevance OAD number
 800:../user/source/DLT698.c ****             if ((varLenB = dwDlt698Len(Ptr, &LenBytes)) < 0)
 801:../user/source/DLT698.c ****             {
 802:../user/source/DLT698.c ****                 return -1;
 803:../user/source/DLT698.c ****             }
 804:../user/source/DLT698.c **** 
 805:../user/source/DLT698.c ****             Len += LenBytes;
 806:../user/source/DLT698.c ****             Ptr += LenBytes;
 807:../user/source/DLT698.c **** 
 808:../user/source/DLT698.c ****             // relevance OAD
 809:../user/source/DLT698.c ****             for (j = 0; j < varLenB; j++)
 810:../user/source/DLT698.c ****             {
 811:../user/source/DLT698.c ****                 if (Len > dwRcvLen)
 812:../user/source/DLT698.c ****                 {
 813:../user/source/DLT698.c ****                     return -1;
 814:../user/source/DLT698.c ****                 }
 815:../user/source/DLT698.c **** 
 816:../user/source/DLT698.c ****                 Ptr += 4;
 817:../user/source/DLT698.c ****                 Len += 4;
 818:../user/source/DLT698.c ****             }
 819:../user/source/DLT698.c ****         }
 820:../user/source/DLT698.c ****         else
 821:../user/source/DLT698.c ****         {
 822:../user/source/DLT698.c ****             return -1;
 823:../user/source/DLT698.c ****         }
 824:../user/source/DLT698.c ****     }
 825:../user/source/DLT698.c ****     break;
 826:../user/source/DLT698.c ****     case DL_MS:
 827:../user/source/DLT698.c ****     {
 828:../user/source/DLT698.c ****         if ((Res = dwDlt698MsLen(Ptr, dwRcvLen - Len)) < 0)
 829:../user/source/DLT698.c ****         {
 830:../user/source/DLT698.c ****             return -1;
 831:../user/source/DLT698.c ****         }
 832:../user/source/DLT698.c **** 
 833:../user/source/DLT698.c ****         Ptr += Res;
 834:../user/source/DLT698.c ****         Len += Res;
 835:../user/source/DLT698.c ****     }
 836:../user/source/DLT698.c ****     break;
 837:../user/source/DLT698.c ****     case DL_SID:
 838:../user/source/DLT698.c ****     {
 839:../user/source/DLT698.c ****         /* data length */
 840:../user/source/DLT698.c ****         /* data contents */
 841:../user/source/DLT698.c ****         Ptr += 4;
 842:../user/source/DLT698.c ****         Len += 4;
 843:../user/source/DLT698.c **** 
 844:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 845:../user/source/DLT698.c ****         {
 846:../user/source/DLT698.c ****             return -1;
 847:../user/source/DLT698.c ****         }
 848:../user/source/DLT698.c **** 
 849:../user/source/DLT698.c ****         Len += LenBytes;
 850:../user/source/DLT698.c ****         Ptr += LenBytes;
 851:../user/source/DLT698.c **** 
 852:../user/source/DLT698.c ****         Ptr += varLen;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 19


 853:../user/source/DLT698.c ****         Len += varLen;
 854:../user/source/DLT698.c ****     }
 855:../user/source/DLT698.c ****     break;
 856:../user/source/DLT698.c ****     case DL_SID_MAC:
 857:../user/source/DLT698.c ****     {
 858:../user/source/DLT698.c ****         /* SID */
 859:../user/source/DLT698.c ****         Ptr += 4;
 860:../user/source/DLT698.c ****         Len += 4;
 861:../user/source/DLT698.c **** 
 862:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 863:../user/source/DLT698.c ****         {
 864:../user/source/DLT698.c ****             return -1;
 865:../user/source/DLT698.c ****         }
 866:../user/source/DLT698.c **** 
 867:../user/source/DLT698.c ****         Len += LenBytes;
 868:../user/source/DLT698.c ****         Ptr += LenBytes;
 869:../user/source/DLT698.c **** 
 870:../user/source/DLT698.c ****         Ptr += varLen;
 871:../user/source/DLT698.c ****         Len += varLen;
 872:../user/source/DLT698.c **** 
 873:../user/source/DLT698.c ****         /* MAC */
 874:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 875:../user/source/DLT698.c ****         {
 876:../user/source/DLT698.c ****             return -1;
 877:../user/source/DLT698.c ****         }
 878:../user/source/DLT698.c **** 
 879:../user/source/DLT698.c ****         Len += LenBytes;
 880:../user/source/DLT698.c ****         Ptr += LenBytes;
 881:../user/source/DLT698.c **** 
 882:../user/source/DLT698.c ****         Ptr += varLen;
 883:../user/source/DLT698.c ****         Len += varLen;
 884:../user/source/DLT698.c ****     }
 885:../user/source/DLT698.c ****     break;
 886:../user/source/DLT698.c ****     case DL_COMDCB:
 887:../user/source/DLT698.c ****     {
 888:../user/source/DLT698.c ****         Ptr += 5;
 889:../user/source/DLT698.c ****         Len += 5;
 890:../user/source/DLT698.c ****     }
 891:../user/source/DLT698.c ****     break;
 892:../user/source/DLT698.c ****     case DL_RCSD:
 893:../user/source/DLT698.c ****     {
 894:../user/source/DLT698.c ****         // CSD number
 895:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 896:../user/source/DLT698.c ****         {
 897:../user/source/DLT698.c ****             return -1;
 898:../user/source/DLT698.c ****         }
 899:../user/source/DLT698.c **** 
 900:../user/source/DLT698.c ****         Len += LenBytes;
 901:../user/source/DLT698.c ****         Ptr += LenBytes;
 902:../user/source/DLT698.c **** 
 903:../user/source/DLT698.c ****         // CSD
 904:../user/source/DLT698.c ****         for (i = 0; i < varLen; i++)
 905:../user/source/DLT698.c ****         {
 906:../user/source/DLT698.c ****             if (Len > dwRcvLen)
 907:../user/source/DLT698.c ****             {
 908:../user/source/DLT698.c ****                 return -1;
 909:../user/source/DLT698.c ****             }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 20


 910:../user/source/DLT698.c **** 
 911:../user/source/DLT698.c ****             if (*Ptr == 0)
 912:../user/source/DLT698.c ****             {
 913:../user/source/DLT698.c ****                 Ptr += 1; // choice
 914:../user/source/DLT698.c ****                 Len += 1;
 915:../user/source/DLT698.c **** 
 916:../user/source/DLT698.c ****                 Ptr += 4; // OAD
 917:../user/source/DLT698.c ****                 Len += 4;
 918:../user/source/DLT698.c ****             }
 919:../user/source/DLT698.c ****             else if (*Ptr == 1)
 920:../user/source/DLT698.c ****             {
 921:../user/source/DLT698.c ****                 Ptr += 1; // choice
 922:../user/source/DLT698.c ****                 Len += 1;
 923:../user/source/DLT698.c **** 
 924:../user/source/DLT698.c ****                 Ptr += 4; // OAD
 925:../user/source/DLT698.c ****                 Len += 4;
 926:../user/source/DLT698.c **** 
 927:../user/source/DLT698.c ****                 // relevance OAD number
 928:../user/source/DLT698.c ****                 if ((varLenB = dwDlt698Len(Ptr, &LenBytes)) < 0)
 929:../user/source/DLT698.c ****                 {
 930:../user/source/DLT698.c ****                     return -1;
 931:../user/source/DLT698.c ****                 }
 932:../user/source/DLT698.c **** 
 933:../user/source/DLT698.c ****                 Len += LenBytes;
 934:../user/source/DLT698.c ****                 Ptr += LenBytes;
 935:../user/source/DLT698.c **** 
 936:../user/source/DLT698.c ****                 // relevance OAD
 937:../user/source/DLT698.c ****                 for (j = 0; j < varLenB; j++)
 938:../user/source/DLT698.c ****                 {
 939:../user/source/DLT698.c ****                     if (Len > dwRcvLen)
 940:../user/source/DLT698.c ****                     {
 941:../user/source/DLT698.c ****                         return -1;
 942:../user/source/DLT698.c ****                     }
 943:../user/source/DLT698.c **** 
 944:../user/source/DLT698.c ****                     Ptr += 4;
 945:../user/source/DLT698.c ****                     Len += 4;
 946:../user/source/DLT698.c ****                 }
 947:../user/source/DLT698.c ****             }
 948:../user/source/DLT698.c ****             else
 949:../user/source/DLT698.c ****             {
 950:../user/source/DLT698.c ****                 return -1;
 951:../user/source/DLT698.c ****             }
 952:../user/source/DLT698.c ****         }
 953:../user/source/DLT698.c ****     }
 954:../user/source/DLT698.c ****     break;
 955:../user/source/DLT698.c ****     default:
 956:../user/source/DLT698.c ****         return -1;
 957:../user/source/DLT698.c ****     }
 958:../user/source/DLT698.c **** 
 959:../user/source/DLT698.c ****     if (Len > dwRcvLen)
 960:../user/source/DLT698.c ****     {
 961:../user/source/DLT698.c ****         return -1;
 962:../user/source/DLT698.c ****     }
 963:../user/source/DLT698.c **** 
 964:../user/source/DLT698.c ****     return Len;
 965:../user/source/DLT698.c **** }
 966:../user/source/DLT698.c **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 21


 967:../user/source/DLT698.c ****   ************************************************************************
 968:../user/source/DLT698.c ****   * @brief    : count RSD length in the ucRcvBuf
 969:../user/source/DLT698.c ****   * @param    : ucRcvBuf : source code (do not contain data identifier)
 970:../user/source/DLT698.c ****   *             dwRcvLen : valid length of source code
 971:../user/source/DLT698.c ****   * @return   : -1   : error    
 972:../user/source/DLT698.c ****                 else : data length of RSD in the source code
 973:../user/source/DLT698.c ****   * @author   : Lixg
 974:../user/source/DLT698.c ****   * @version  : 0.1
 975:../user/source/DLT698.c ****   * @date     : 2017-7-21 13:37:37
 976:../user/source/DLT698.c ****   * @modify   : 
 977:../user/source/DLT698.c ****   * @see also : 
 978:../user/source/DLT698.c ****   ************************************************************************
 979:../user/source/DLT698.c ****   * @attention
 980:../user/source/DLT698.c ****   ************************************************************************
 981:../user/source/DLT698.c ****   */
 982:../user/source/DLT698.c **** int dwDlt698RSDLen(UINT8 *ucRcvBuf, int dwRcvLen)
 983:../user/source/DLT698.c **** {
 984:../user/source/DLT698.c ****     assert(ucRcvBuf);
 985:../user/source/DLT698.c **** 
 986:../user/source/DLT698.c ****     UINT16 Len = 0;
 987:../user/source/DLT698.c ****     UINT8 *Ptr = ucRcvBuf;
 988:../user/source/DLT698.c **** 
 989:../user/source/DLT698.c ****     int i = 0, Res = 0, varLen = 0, LenBytes = 0; // 可变长度
 990:../user/source/DLT698.c **** 
 991:../user/source/DLT698.c ****     if (*Ptr == 0)
 992:../user/source/DLT698.c ****     {
 993:../user/source/DLT698.c ****         Ptr += 1;
 994:../user/source/DLT698.c ****         Len += 1; // choice
 995:../user/source/DLT698.c **** 
 996:../user/source/DLT698.c ****         //Ptr += 1;
 997:../user/source/DLT698.c ****         //Len += 1; // NULL
 998:../user/source/DLT698.c ****     }
 999:../user/source/DLT698.c ****     else if (*Ptr == 1)
1000:../user/source/DLT698.c ****     {
1001:../user/source/DLT698.c ****         Ptr += 1;
1002:../user/source/DLT698.c ****         Len += 1; // choice
1003:../user/source/DLT698.c **** 
1004:../user/source/DLT698.c ****         Ptr += 4;
1005:../user/source/DLT698.c ****         Len += 4; // OAD
1006:../user/source/DLT698.c **** 
1007:../user/source/DLT698.c ****         if ((Res = dwDlt698DataLen(Ptr, dwRcvLen - Len)) < 0)
1008:../user/source/DLT698.c ****         { // data
1009:../user/source/DLT698.c ****             return -1;
1010:../user/source/DLT698.c ****         }
1011:../user/source/DLT698.c ****         Ptr += Res;
1012:../user/source/DLT698.c ****         Len += Res;
1013:../user/source/DLT698.c ****     }
1014:../user/source/DLT698.c ****     else if (*Ptr == 2)
1015:../user/source/DLT698.c ****     {
1016:../user/source/DLT698.c ****         Ptr += 1;
1017:../user/source/DLT698.c ****         Len += 1; // choice
1018:../user/source/DLT698.c **** 
1019:../user/source/DLT698.c ****         Ptr += 4;
1020:../user/source/DLT698.c ****         Len += 4; // OAD
1021:../user/source/DLT698.c **** 
1022:../user/source/DLT698.c ****         if ((Res = dwDlt698DataLen(Ptr, dwRcvLen - Len)) < 0)
1023:../user/source/DLT698.c ****         { // start data
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 22


1024:../user/source/DLT698.c ****             return -1;
1025:../user/source/DLT698.c ****         }
1026:../user/source/DLT698.c ****         Ptr += Res;
1027:../user/source/DLT698.c ****         Len += Res;
1028:../user/source/DLT698.c **** 
1029:../user/source/DLT698.c ****         if ((Res = dwDlt698DataLen(Ptr, dwRcvLen - Len)) < 0)
1030:../user/source/DLT698.c ****         { // end data
1031:../user/source/DLT698.c ****             return -1;
1032:../user/source/DLT698.c ****         }
1033:../user/source/DLT698.c ****         Ptr += Res;
1034:../user/source/DLT698.c ****         Len += Res;
1035:../user/source/DLT698.c **** 
1036:../user/source/DLT698.c ****         if ((Res = dwDlt698DataLen(Ptr, dwRcvLen - Len)) < 0)
1037:../user/source/DLT698.c ****         { // TI
1038:../user/source/DLT698.c ****             return -1;
1039:../user/source/DLT698.c ****         }
1040:../user/source/DLT698.c ****         Ptr += Res;
1041:../user/source/DLT698.c ****         Len += Res;
1042:../user/source/DLT698.c ****     }
1043:../user/source/DLT698.c ****     else if (*Ptr == 3)
1044:../user/source/DLT698.c ****     {
1045:../user/source/DLT698.c ****         Ptr += 1;
1046:../user/source/DLT698.c ****         Len += 1; // choice
1047:../user/source/DLT698.c **** 
1048:../user/source/DLT698.c ****         // relevance OAD number
1049:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
1050:../user/source/DLT698.c ****         {
1051:../user/source/DLT698.c ****             return -1;
1052:../user/source/DLT698.c ****         }
1053:../user/source/DLT698.c **** 
1054:../user/source/DLT698.c ****         Len += LenBytes;
1055:../user/source/DLT698.c ****         Ptr += LenBytes;
1056:../user/source/DLT698.c **** 
1057:../user/source/DLT698.c ****         for (i = 0; i < varLen; i++)
1058:../user/source/DLT698.c ****         {
1059:../user/source/DLT698.c ****             Ptr += 4;
1060:../user/source/DLT698.c ****             Len += 4; // OAD
1061:../user/source/DLT698.c **** 
1062:../user/source/DLT698.c ****             if ((Res = dwDlt698DataLen(Ptr, dwRcvLen - Len)) < 0)
1063:../user/source/DLT698.c ****             { // start data
1064:../user/source/DLT698.c ****                 return -1;
1065:../user/source/DLT698.c ****             }
1066:../user/source/DLT698.c ****             Ptr += Res;
1067:../user/source/DLT698.c ****             Len += Res;
1068:../user/source/DLT698.c **** 
1069:../user/source/DLT698.c ****             if ((Res = dwDlt698DataLen(Ptr, dwRcvLen - Len)) < 0)
1070:../user/source/DLT698.c ****             { // end data
1071:../user/source/DLT698.c ****                 return -1;
1072:../user/source/DLT698.c ****             }
1073:../user/source/DLT698.c ****             Ptr += Res;
1074:../user/source/DLT698.c ****             Len += Res;
1075:../user/source/DLT698.c **** 
1076:../user/source/DLT698.c ****             if ((Res = dwDlt698DataLen(Ptr, dwRcvLen - Len)) < 0)
1077:../user/source/DLT698.c ****             { // TI
1078:../user/source/DLT698.c ****                 return -1;
1079:../user/source/DLT698.c ****             }
1080:../user/source/DLT698.c ****             Ptr += Res;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 23


1081:../user/source/DLT698.c ****             Len += Res;
1082:../user/source/DLT698.c ****         }
1083:../user/source/DLT698.c ****     }
1084:../user/source/DLT698.c ****     else if (*Ptr == 4 || *Ptr == 5)
1085:../user/source/DLT698.c ****     {
1086:../user/source/DLT698.c ****         Ptr += 1;
1087:../user/source/DLT698.c ****         Len += 1; // choice
1088:../user/source/DLT698.c **** 
1089:../user/source/DLT698.c ****         Ptr += 7;
1090:../user/source/DLT698.c ****         Len += 7; // data_time_s
1091:../user/source/DLT698.c **** 
1092:../user/source/DLT698.c ****         if ((Res = dwDlt698MsLen(Ptr, dwRcvLen - Len)) < 0)
1093:../user/source/DLT698.c ****         {
1094:../user/source/DLT698.c ****             return -1;
1095:../user/source/DLT698.c ****         }
1096:../user/source/DLT698.c **** 
1097:../user/source/DLT698.c ****         Ptr += Res; // MS
1098:../user/source/DLT698.c ****         Len += Res;
1099:../user/source/DLT698.c ****     }
1100:../user/source/DLT698.c ****     else if (*Ptr == 6 | *Ptr == 7 || *Ptr == 8)
1101:../user/source/DLT698.c ****     {
1102:../user/source/DLT698.c ****         Ptr += 1;
1103:../user/source/DLT698.c ****         Len += 1; // choice
1104:../user/source/DLT698.c **** 
1105:../user/source/DLT698.c ****         Ptr += 7;
1106:../user/source/DLT698.c ****         Len += 7; // data_time_s
1107:../user/source/DLT698.c **** 
1108:../user/source/DLT698.c ****         Ptr += 7;
1109:../user/source/DLT698.c ****         Len += 7; // data_time_s
1110:../user/source/DLT698.c **** 
1111:../user/source/DLT698.c ****         Ptr += 3;
1112:../user/source/DLT698.c ****         Len += 3; // TI
1113:../user/source/DLT698.c **** 
1114:../user/source/DLT698.c ****         if ((Res = dwDlt698MsLen(Ptr, dwRcvLen - Len)) < 0)
1115:../user/source/DLT698.c ****         {
1116:../user/source/DLT698.c ****             return -1;
1117:../user/source/DLT698.c ****         }
1118:../user/source/DLT698.c **** 
1119:../user/source/DLT698.c ****         Ptr += Res; // MS
1120:../user/source/DLT698.c ****         Len += Res;
1121:../user/source/DLT698.c ****     }
1122:../user/source/DLT698.c ****     else if (*Ptr == 9)
1123:../user/source/DLT698.c ****     {
1124:../user/source/DLT698.c ****         Ptr += 1;
1125:../user/source/DLT698.c ****         Len += 1; // choice
1126:../user/source/DLT698.c **** 
1127:../user/source/DLT698.c ****         Ptr += 1;
1128:../user/source/DLT698.c ****         Len += 1; // last n
1129:../user/source/DLT698.c ****     }
1130:../user/source/DLT698.c ****     else if (*Ptr == 10)
1131:../user/source/DLT698.c ****     {
1132:../user/source/DLT698.c ****         Ptr += 1;
1133:../user/source/DLT698.c ****         Len += 1; // choice
1134:../user/source/DLT698.c **** 
1135:../user/source/DLT698.c ****         Ptr += 1;
1136:../user/source/DLT698.c ****         Len += 1; // last n
1137:../user/source/DLT698.c **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 24


1138:../user/source/DLT698.c ****         if ((Res = dwDlt698MsLen(Ptr, dwRcvLen - Len)) < 0)
1139:../user/source/DLT698.c ****         {
1140:../user/source/DLT698.c ****             return -1;
1141:../user/source/DLT698.c ****         }
1142:../user/source/DLT698.c **** 
1143:../user/source/DLT698.c ****         Ptr += Res; // MS
1144:../user/source/DLT698.c ****         Len += Res;
1145:../user/source/DLT698.c ****     }
1146:../user/source/DLT698.c ****     else
1147:../user/source/DLT698.c ****     {
1148:../user/source/DLT698.c ****         return -1;
1149:../user/source/DLT698.c ****     }
1150:../user/source/DLT698.c **** 
1151:../user/source/DLT698.c ****     if (Len > dwRcvLen)
1152:../user/source/DLT698.c ****     {
1153:../user/source/DLT698.c ****         return -1;
1154:../user/source/DLT698.c ****     }
1155:../user/source/DLT698.c **** 
1156:../user/source/DLT698.c ****     return Len;
1157:../user/source/DLT698.c **** }
1158:../user/source/DLT698.c **** 
1159:../user/source/DLT698.c **** /**
1160:../user/source/DLT698.c ****   ************************************************************************
1161:../user/source/DLT698.c ****   * @brief    : count MS length in the ucRcvBuf
1162:../user/source/DLT698.c ****   * @param    : ucRcvBuf : source code (do not contain data identifier)
1163:../user/source/DLT698.c ****   *             dwRcvLen : valid length of source code
1164:../user/source/DLT698.c ****   * @return   : -1   : error    
1165:../user/source/DLT698.c ****                 else : data length of MS in the source code
1166:../user/source/DLT698.c ****   * @author   : Lixg
1167:../user/source/DLT698.c ****   * @version  : 0.1
1168:../user/source/DLT698.c ****   * @date     : 2017-7-21 13:37:37
1169:../user/source/DLT698.c ****   * @modify   : 
1170:../user/source/DLT698.c ****   * @see also : 
1171:../user/source/DLT698.c ****   ************************************************************************
1172:../user/source/DLT698.c ****   * @attention
1173:../user/source/DLT698.c ****   ************************************************************************
1174:../user/source/DLT698.c ****   */
1175:../user/source/DLT698.c **** int dwDlt698MsLen(UINT8 *ucRcvBuf, int dwRcvLen)
1176:../user/source/DLT698.c **** {
 180              		.loc 1 1176 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              	.LVL15:
 185 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 186              	.LCFI4:
 187              		.cfi_def_cfa_offset 24
 188              		.cfi_offset 4, -24
 189              		.cfi_offset 5, -20
 190              		.cfi_offset 6, -16
 191              		.cfi_offset 7, -12
 192              		.cfi_offset 8, -8
 193              		.cfi_offset 14, -4
 194 0004 0D46     		mov	r5, r1
 195              	.LVL16:
1177:../user/source/DLT698.c ****     assert(ucRcvBuf);
1178:../user/source/DLT698.c **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 25


1179:../user/source/DLT698.c ****     UINT16 Len = 0;
1180:../user/source/DLT698.c ****     UINT8 *Ptr = ucRcvBuf;
1181:../user/source/DLT698.c **** 
1182:../user/source/DLT698.c ****     int i = 0, Res = 0, varLen = 0, varLenB = 0, LenBytes = 0; // 可变长度
1183:../user/source/DLT698.c **** 
1184:../user/source/DLT698.c ****     if (*Ptr == 0)
 196              		.loc 1 1184 0
 197 0006 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 198 0008 002B     		cmp	r3, #0
 199 000a 00F00C81 		beq	.L50
1185:../user/source/DLT698.c ****     {
1186:../user/source/DLT698.c ****         Ptr += 1;
1187:../user/source/DLT698.c ****         Len += 1; // choice - no meter
1188:../user/source/DLT698.c ****     }
1189:../user/source/DLT698.c ****     else if (*Ptr == 1)
 200              		.loc 1 1189 0
 201 000e 012B     		cmp	r3, #1
 202 0010 00F00B81 		beq	.L51
1190:../user/source/DLT698.c ****     {
1191:../user/source/DLT698.c ****         Ptr += 1;
1192:../user/source/DLT698.c ****         Len += 1; // choice - all meter
1193:../user/source/DLT698.c ****     }
1194:../user/source/DLT698.c ****     else if (*Ptr == 2)
 203              		.loc 1 1194 0
 204 0014 022B     		cmp	r3, #2
 205 0016 2FD1     		bne	.L13
 206              	.LVL17:
 207              	.LBB49:
 208              	.LBB50:
 173:../user/source/DLT698.c ****     {
 209              		.loc 1 173 0
 210 0018 4178     		ldrb	r1, [r0, #1]	@ zero_extendqisi2
 211              	.LVL18:
 212 001a 11F0800F 		tst	r1, #128
 213 001e 01D1     		bne	.L14
 214              	.LVL19:
 175:../user/source/DLT698.c ****         return ucRcvBuf[0];
 215              		.loc 1 175 0
 216 0020 0123     		movs	r3, #1
 217 0022 1DE0     		b	.L15
 218              	.LVL20:
 219              	.L14:
 179:../user/source/DLT698.c **** 
 220              		.loc 1 179 0
 221 0024 01F07F01 		and	r1, r1, #127
 222              	.LVL21:
 181:../user/source/DLT698.c ****     {
 223              		.loc 1 181 0
 224 0028 0129     		cmp	r1, #1
 225 002a 02D1     		bne	.L16
 226              	.LVL22:
 184:../user/source/DLT698.c ****     }
 227              		.loc 1 184 0
 228 002c 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 229              	.LVL23:
 183:../user/source/DLT698.c ****         return (ucRcvBuf[1]);
 230              		.loc 1 183 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 26


 231 002e 0223     		movs	r3, #2
 232 0030 16E0     		b	.L15
 233              	.LVL24:
 234              	.L16:
 186:../user/source/DLT698.c ****     {
 235              		.loc 1 186 0
 236 0032 0229     		cmp	r1, #2
 237 0034 05D1     		bne	.L17
 238              	.LVL25:
 189:../user/source/DLT698.c ****     }
 239              		.loc 1 189 0
 240 0036 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 241              	.LVL26:
 242 0038 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 243 003a 43EA0121 		orr	r1, r3, r1, lsl #8
 188:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 8) | (ucRcvBuf[2]));
 244              		.loc 1 188 0
 245 003e 0323     		movs	r3, #3
 246 0040 0EE0     		b	.L15
 247              	.LVL27:
 248              	.L17:
 191:../user/source/DLT698.c ****     {
 249              		.loc 1 191 0
 250 0042 0329     		cmp	r1, #3
 251 0044 03D1     		bne	.L18
 252              	.LVL28:
 194:../user/source/DLT698.c ****     }
 253              		.loc 1 194 0
 254 0046 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 255              	.LVL29:
 256 0048 0904     		lsls	r1, r1, #16
 193:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 16) | (ucRcvBuf[2] << 8) & (ucRcvBuf[3]));
 257              		.loc 1 193 0
 258 004a 0423     		movs	r3, #4
 259 004c 08E0     		b	.L15
 260              	.LVL30:
 261              	.L18:
 196:../user/source/DLT698.c ****     {
 262              		.loc 1 196 0
 263 004e 0429     		cmp	r1, #4
 264 0050 03D1     		bne	.L52
 265              	.LVL31:
 199:../user/source/DLT698.c ****     }
 266              		.loc 1 199 0
 267 0052 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 268              	.LVL32:
 269 0054 0906     		lsls	r1, r1, #24
 198:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 24) | (ucRcvBuf[2] << 16) & (ucRcvBuf[3] << 8) & (ucRcvBuf[4]));
 270              		.loc 1 198 0
 271 0056 0523     		movs	r3, #5
 272 0058 02E0     		b	.L15
 273              	.LVL33:
 274              	.L52:
 275              	.LBE50:
 276              	.LBE49:
1182:../user/source/DLT698.c **** 
 277              		.loc 1 1182 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 27


 278 005a 0023     		movs	r3, #0
 279              	.LBB52:
 280              	.LBB51:
 202:../user/source/DLT698.c **** }
 281              		.loc 1 202 0
 282 005c 4FF0FF31 		mov	r1, #-1
 283              	.LVL34:
 284              	.L15:
 285              	.LBE51:
 286              	.LBE52:
1195:../user/source/DLT698.c ****     {
1196:../user/source/DLT698.c ****         Ptr += 1;
1197:../user/source/DLT698.c ****         Len += 1; // choice - sequence of user type
1198:../user/source/DLT698.c **** 
1199:../user/source/DLT698.c ****         // number of user type
1200:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 287              		.loc 1 1200 0
 288 0060 0029     		cmp	r1, #0
 289 0062 C0F2EA80 		blt	.L53
1201:../user/source/DLT698.c ****         {
1202:../user/source/DLT698.c ****             return -1;
1203:../user/source/DLT698.c ****         }
1204:../user/source/DLT698.c **** 
1205:../user/source/DLT698.c ****         Len += LenBytes;
 290              		.loc 1 1205 0
 291 0066 0133     		adds	r3, r3, #1
 292              	.LVL35:
1206:../user/source/DLT698.c ****         Ptr += LenBytes;
1207:../user/source/DLT698.c **** 
1208:../user/source/DLT698.c ****         for (i = 0; i < varLen; i++)
 293              		.loc 1 1208 0
 294 0068 0022     		movs	r2, #0
 295 006a 02E0     		b	.L20
 296              	.LVL36:
 297              	.L21:
1209:../user/source/DLT698.c ****         {
1210:../user/source/DLT698.c ****             Len += 1;
 298              		.loc 1 1210 0 discriminator 3
 299 006c 0133     		adds	r3, r3, #1
 300              	.LVL37:
 301 006e 9BB2     		uxth	r3, r3
 302              	.LVL38:
1208:../user/source/DLT698.c ****         {
 303              		.loc 1 1208 0 discriminator 3
 304 0070 0132     		adds	r2, r2, #1
 305              	.LVL39:
 306              	.L20:
1208:../user/source/DLT698.c ****         {
 307              		.loc 1 1208 0 is_stmt 0 discriminator 1
 308 0072 8A42     		cmp	r2, r1
 309 0074 FADB     		blt	.L21
 310 0076 D9E0     		b	.L12
 311              	.LVL40:
 312              	.L13:
1211:../user/source/DLT698.c ****             Ptr += 1;
1212:../user/source/DLT698.c ****         }
1213:../user/source/DLT698.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 28


1214:../user/source/DLT698.c ****     else if (*Ptr == 3)
 313              		.loc 1 1214 0 is_stmt 1
 314 0078 032B     		cmp	r3, #3
 315 007a 5AD1     		bne	.L22
 316              	.LVL41:
 317              	.LBB53:
 318              	.LBB54:
 173:../user/source/DLT698.c ****     {
 319              		.loc 1 173 0
 320 007c 4678     		ldrb	r6, [r0, #1]	@ zero_extendqisi2
 321 007e 16F0800F 		tst	r6, #128
 322 0082 01D1     		bne	.L23
 323              	.LVL42:
 175:../user/source/DLT698.c ****         return ucRcvBuf[0];
 324              		.loc 1 175 0
 325 0084 0121     		movs	r1, #1
 326              	.LVL43:
 327 0086 1DE0     		b	.L24
 328              	.LVL44:
 329              	.L23:
 179:../user/source/DLT698.c **** 
 330              		.loc 1 179 0
 331 0088 06F07F06 		and	r6, r6, #127
 332              	.LVL45:
 181:../user/source/DLT698.c ****     {
 333              		.loc 1 181 0
 334 008c 012E     		cmp	r6, #1
 335 008e 02D1     		bne	.L25
 336              	.LVL46:
 184:../user/source/DLT698.c ****     }
 337              		.loc 1 184 0
 338 0090 8678     		ldrb	r6, [r0, #2]	@ zero_extendqisi2
 339              	.LVL47:
 183:../user/source/DLT698.c ****         return (ucRcvBuf[1]);
 340              		.loc 1 183 0
 341 0092 0221     		movs	r1, #2
 342              	.LVL48:
 343 0094 16E0     		b	.L24
 344              	.LVL49:
 345              	.L25:
 186:../user/source/DLT698.c ****     {
 346              		.loc 1 186 0
 347 0096 022E     		cmp	r6, #2
 348 0098 05D1     		bne	.L26
 349              	.LVL50:
 189:../user/source/DLT698.c ****     }
 350              		.loc 1 189 0
 351 009a 8678     		ldrb	r6, [r0, #2]	@ zero_extendqisi2
 352              	.LVL51:
 353 009c C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 354 009e 43EA0626 		orr	r6, r3, r6, lsl #8
 188:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 8) | (ucRcvBuf[2]));
 355              		.loc 1 188 0
 356 00a2 0321     		movs	r1, #3
 357              	.LVL52:
 358 00a4 0EE0     		b	.L24
 359              	.LVL53:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 29


 360              	.L26:
 191:../user/source/DLT698.c ****     {
 361              		.loc 1 191 0
 362 00a6 032E     		cmp	r6, #3
 363 00a8 03D1     		bne	.L27
 364              	.LVL54:
 194:../user/source/DLT698.c ****     }
 365              		.loc 1 194 0
 366 00aa 8678     		ldrb	r6, [r0, #2]	@ zero_extendqisi2
 367              	.LVL55:
 368 00ac 3604     		lsls	r6, r6, #16
 193:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 16) | (ucRcvBuf[2] << 8) & (ucRcvBuf[3]));
 369              		.loc 1 193 0
 370 00ae 0421     		movs	r1, #4
 371              	.LVL56:
 372 00b0 08E0     		b	.L24
 373              	.LVL57:
 374              	.L27:
 196:../user/source/DLT698.c ****     {
 375              		.loc 1 196 0
 376 00b2 042E     		cmp	r6, #4
 377 00b4 03D1     		bne	.L54
 378              	.LVL58:
 199:../user/source/DLT698.c ****     }
 379              		.loc 1 199 0
 380 00b6 8678     		ldrb	r6, [r0, #2]	@ zero_extendqisi2
 381              	.LVL59:
 382 00b8 3606     		lsls	r6, r6, #24
 198:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 24) | (ucRcvBuf[2] << 16) & (ucRcvBuf[3] << 8) & (ucRcvBuf[4]));
 383              		.loc 1 198 0
 384 00ba 0521     		movs	r1, #5
 385              	.LVL60:
 386 00bc 02E0     		b	.L24
 387              	.LVL61:
 388              	.L54:
 389              	.LBE54:
 390              	.LBE53:
1182:../user/source/DLT698.c **** 
 391              		.loc 1 1182 0
 392 00be 0021     		movs	r1, #0
 393              	.LVL62:
 394              	.LBB56:
 395              	.LBB55:
 202:../user/source/DLT698.c **** }
 396              		.loc 1 202 0
 397 00c0 4FF0FF36 		mov	r6, #-1
 398              	.LVL63:
 399              	.L24:
 400              	.LBE55:
 401              	.LBE56:
1215:../user/source/DLT698.c ****     {
1216:../user/source/DLT698.c ****         Ptr += 1;
1217:../user/source/DLT698.c ****         Len += 1; // choice - sequence of tsa
1218:../user/source/DLT698.c **** 
1219:../user/source/DLT698.c ****         // number of user type
1220:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 402              		.loc 1 1220 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 30


 403 00c4 002E     		cmp	r6, #0
 404 00c6 C0F2BC80 		blt	.L55
1221:../user/source/DLT698.c ****         {
1222:../user/source/DLT698.c ****             return -1;
1223:../user/source/DLT698.c ****         }
1224:../user/source/DLT698.c **** 
1225:../user/source/DLT698.c ****         Len += LenBytes;
 405              		.loc 1 1225 0
 406 00ca 4B1C     		adds	r3, r1, #1
 407              	.LVL64:
1226:../user/source/DLT698.c ****         Ptr += LenBytes;
 408              		.loc 1 1226 0
 409 00cc 1844     		add	r0, r0, r3
 410              	.LVL65:
1227:../user/source/DLT698.c **** 
1228:../user/source/DLT698.c ****         for (i = 0; i < varLen; i++)
 411              		.loc 1 1228 0
 412 00ce 0024     		movs	r4, #0
 413 00d0 2CE0     		b	.L28
 414              	.LVL66:
 415              	.L34:
 416              	.LBB57:
 417              	.LBB58:
 173:../user/source/DLT698.c ****     {
 418              		.loc 1 173 0
 419 00d2 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 420 00d4 12F0800F 		tst	r2, #128
 421 00d8 01D1     		bne	.L29
 422              	.LVL67:
 175:../user/source/DLT698.c ****         return ucRcvBuf[0];
 423              		.loc 1 175 0
 424 00da 0121     		movs	r1, #1
 425 00dc 1CE0     		b	.L30
 426              	.LVL68:
 427              	.L29:
 179:../user/source/DLT698.c **** 
 428              		.loc 1 179 0
 429 00de 02F07F02 		and	r2, r2, #127
 430              	.LVL69:
 181:../user/source/DLT698.c ****     {
 431              		.loc 1 181 0
 432 00e2 012A     		cmp	r2, #1
 433 00e4 02D1     		bne	.L31
 434              	.LVL70:
 184:../user/source/DLT698.c ****     }
 435              		.loc 1 184 0
 436 00e6 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
 437              	.LVL71:
 183:../user/source/DLT698.c ****         return (ucRcvBuf[1]);
 438              		.loc 1 183 0
 439 00e8 0221     		movs	r1, #2
 440 00ea 15E0     		b	.L30
 441              	.LVL72:
 442              	.L31:
 186:../user/source/DLT698.c ****     {
 443              		.loc 1 186 0
 444 00ec 022A     		cmp	r2, #2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 31


 445 00ee 05D1     		bne	.L32
 446              	.LVL73:
 189:../user/source/DLT698.c ****     }
 447              		.loc 1 189 0
 448 00f0 4178     		ldrb	r1, [r0, #1]	@ zero_extendqisi2
 449 00f2 8278     		ldrb	r2, [r0, #2]	@ zero_extendqisi2
 450              	.LVL74:
 451 00f4 42EA0122 		orr	r2, r2, r1, lsl #8
 188:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 8) | (ucRcvBuf[2]));
 452              		.loc 1 188 0
 453 00f8 0321     		movs	r1, #3
 454 00fa 0DE0     		b	.L30
 455              	.LVL75:
 456              	.L32:
 191:../user/source/DLT698.c ****     {
 457              		.loc 1 191 0
 458 00fc 032A     		cmp	r2, #3
 459 00fe 03D1     		bne	.L33
 460              	.LVL76:
 194:../user/source/DLT698.c ****     }
 461              		.loc 1 194 0
 462 0100 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
 463              	.LVL77:
 464 0102 1204     		lsls	r2, r2, #16
 193:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 16) | (ucRcvBuf[2] << 8) & (ucRcvBuf[3]));
 465              		.loc 1 193 0
 466 0104 0421     		movs	r1, #4
 467 0106 07E0     		b	.L30
 468              	.LVL78:
 469              	.L33:
 196:../user/source/DLT698.c ****     {
 470              		.loc 1 196 0
 471 0108 042A     		cmp	r2, #4
 472 010a 03D1     		bne	.L56
 473              	.LVL79:
 199:../user/source/DLT698.c ****     }
 474              		.loc 1 199 0
 475 010c 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
 476              	.LVL80:
 477 010e 1206     		lsls	r2, r2, #24
 198:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 24) | (ucRcvBuf[2] << 16) & (ucRcvBuf[3] << 8) & (ucRcvBuf[4]));
 478              		.loc 1 198 0
 479 0110 0521     		movs	r1, #5
 480 0112 01E0     		b	.L30
 481              	.LVL81:
 482              	.L56:
 202:../user/source/DLT698.c **** }
 483              		.loc 1 202 0
 484 0114 4FF0FF32 		mov	r2, #-1
 485              	.LVL82:
 486              	.L30:
 487              	.LBE58:
 488              	.LBE57:
1229:../user/source/DLT698.c ****         {
1230:../user/source/DLT698.c ****             if ((varLenB = dwDlt698Len(Ptr, &LenBytes)) < 0)
 489              		.loc 1 1230 0
 490 0118 002A     		cmp	r2, #0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 32


 491 011a C0F29680 		blt	.L57
1231:../user/source/DLT698.c ****             {
1232:../user/source/DLT698.c ****                 return -1;
1233:../user/source/DLT698.c ****             }
1234:../user/source/DLT698.c **** 
1235:../user/source/DLT698.c ****             Len += LenBytes;
 492              		.loc 1 1235 0 discriminator 2
 493 011e 0B44     		add	r3, r3, r1
 494              	.LVL83:
1236:../user/source/DLT698.c ****             Ptr += LenBytes;
1237:../user/source/DLT698.c **** 
1238:../user/source/DLT698.c ****             /* data contents */
1239:../user/source/DLT698.c ****             Ptr += varLenB;
 495              		.loc 1 1239 0 discriminator 2
 496 0120 8F18     		adds	r7, r1, r2
 497 0122 3844     		add	r0, r0, r7
 498              	.LVL84:
1240:../user/source/DLT698.c ****             Len += varLenB;
 499              		.loc 1 1240 0 discriminator 2
 500 0124 12FA83F3 		uxtah	r3, r2, r3
 501              	.LVL85:
 502 0128 9BB2     		uxth	r3, r3
 503              	.LVL86:
1228:../user/source/DLT698.c ****         {
 504              		.loc 1 1228 0 discriminator 2
 505 012a 0134     		adds	r4, r4, #1
 506              	.LVL87:
 507              	.L28:
1228:../user/source/DLT698.c ****         {
 508              		.loc 1 1228 0 is_stmt 0 discriminator 1
 509 012c B442     		cmp	r4, r6
 510 012e D0DB     		blt	.L34
 511 0130 7CE0     		b	.L12
 512              	.LVL88:
 513              	.L22:
1241:../user/source/DLT698.c ****         }
1242:../user/source/DLT698.c ****     }
1243:../user/source/DLT698.c ****     else if (*Ptr == 4)
 514              		.loc 1 1243 0 is_stmt 1
 515 0132 042B     		cmp	r3, #4
 516 0134 2ED1     		bne	.L35
 517              	.LVL89:
 518              	.LBB59:
 519              	.LBB60:
 173:../user/source/DLT698.c ****     {
 520              		.loc 1 173 0
 521 0136 4178     		ldrb	r1, [r0, #1]	@ zero_extendqisi2
 522              	.LVL90:
 523 0138 11F0800F 		tst	r1, #128
 524 013c 01D1     		bne	.L36
 525              	.LVL91:
 175:../user/source/DLT698.c ****         return ucRcvBuf[0];
 526              		.loc 1 175 0
 527 013e 0123     		movs	r3, #1
 528 0140 1DE0     		b	.L37
 529              	.LVL92:
 530              	.L36:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 33


 179:../user/source/DLT698.c **** 
 531              		.loc 1 179 0
 532 0142 01F07F01 		and	r1, r1, #127
 533              	.LVL93:
 181:../user/source/DLT698.c ****     {
 534              		.loc 1 181 0
 535 0146 0129     		cmp	r1, #1
 536 0148 02D1     		bne	.L38
 537              	.LVL94:
 184:../user/source/DLT698.c ****     }
 538              		.loc 1 184 0
 539 014a 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 540              	.LVL95:
 183:../user/source/DLT698.c ****         return (ucRcvBuf[1]);
 541              		.loc 1 183 0
 542 014c 0223     		movs	r3, #2
 543 014e 16E0     		b	.L37
 544              	.LVL96:
 545              	.L38:
 186:../user/source/DLT698.c ****     {
 546              		.loc 1 186 0
 547 0150 0229     		cmp	r1, #2
 548 0152 05D1     		bne	.L39
 549              	.LVL97:
 189:../user/source/DLT698.c ****     }
 550              		.loc 1 189 0
 551 0154 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 552              	.LVL98:
 553 0156 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 554 0158 43EA0121 		orr	r1, r3, r1, lsl #8
 188:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 8) | (ucRcvBuf[2]));
 555              		.loc 1 188 0
 556 015c 0323     		movs	r3, #3
 557 015e 0EE0     		b	.L37
 558              	.LVL99:
 559              	.L39:
 191:../user/source/DLT698.c ****     {
 560              		.loc 1 191 0
 561 0160 0329     		cmp	r1, #3
 562 0162 03D1     		bne	.L40
 563              	.LVL100:
 194:../user/source/DLT698.c ****     }
 564              		.loc 1 194 0
 565 0164 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 566              	.LVL101:
 567 0166 0904     		lsls	r1, r1, #16
 193:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 16) | (ucRcvBuf[2] << 8) & (ucRcvBuf[3]));
 568              		.loc 1 193 0
 569 0168 0423     		movs	r3, #4
 570 016a 08E0     		b	.L37
 571              	.LVL102:
 572              	.L40:
 196:../user/source/DLT698.c ****     {
 573              		.loc 1 196 0
 574 016c 0429     		cmp	r1, #4
 575 016e 03D1     		bne	.L58
 576              	.LVL103:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 34


 199:../user/source/DLT698.c ****     }
 577              		.loc 1 199 0
 578 0170 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 579              	.LVL104:
 580 0172 0906     		lsls	r1, r1, #24
 198:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 24) | (ucRcvBuf[2] << 16) & (ucRcvBuf[3] << 8) & (ucRcvBuf[4]));
 581              		.loc 1 198 0
 582 0174 0523     		movs	r3, #5
 583 0176 02E0     		b	.L37
 584              	.LVL105:
 585              	.L58:
 586              	.LBE60:
 587              	.LBE59:
1182:../user/source/DLT698.c **** 
 588              		.loc 1 1182 0
 589 0178 0023     		movs	r3, #0
 590              	.LBB62:
 591              	.LBB61:
 202:../user/source/DLT698.c **** }
 592              		.loc 1 202 0
 593 017a 4FF0FF31 		mov	r1, #-1
 594              	.LVL106:
 595              	.L37:
 596              	.LBE61:
 597              	.LBE62:
1244:../user/source/DLT698.c ****     {
1245:../user/source/DLT698.c ****         Ptr += 1;
1246:../user/source/DLT698.c ****         Len += 1; // choice - sequence of configno
1247:../user/source/DLT698.c **** 
1248:../user/source/DLT698.c ****         // number of user type
1249:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 598              		.loc 1 1249 0
 599 017e 0029     		cmp	r1, #0
 600 0180 67DB     		blt	.L59
1250:../user/source/DLT698.c ****         {
1251:../user/source/DLT698.c ****             return -1;
1252:../user/source/DLT698.c ****         }
1253:../user/source/DLT698.c **** 
1254:../user/source/DLT698.c ****         Len += LenBytes;
 601              		.loc 1 1254 0
 602 0182 0133     		adds	r3, r3, #1
 603              	.LVL107:
1255:../user/source/DLT698.c ****         Ptr += LenBytes;
1256:../user/source/DLT698.c **** 
1257:../user/source/DLT698.c ****         for (i = 0; i < varLen; i++)
 604              		.loc 1 1257 0
 605 0184 0022     		movs	r2, #0
 606 0186 02E0     		b	.L41
 607              	.LVL108:
 608              	.L42:
1258:../user/source/DLT698.c ****         {
1259:../user/source/DLT698.c ****             Len += 2;
 609              		.loc 1 1259 0 discriminator 3
 610 0188 0233     		adds	r3, r3, #2
 611              	.LVL109:
 612 018a 9BB2     		uxth	r3, r3
 613              	.LVL110:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 35


1257:../user/source/DLT698.c ****         {
 614              		.loc 1 1257 0 discriminator 3
 615 018c 0132     		adds	r2, r2, #1
 616              	.LVL111:
 617              	.L41:
1257:../user/source/DLT698.c ****         {
 618              		.loc 1 1257 0 is_stmt 0 discriminator 1
 619 018e 8A42     		cmp	r2, r1
 620 0190 FADB     		blt	.L42
 621 0192 4BE0     		b	.L12
 622              	.LVL112:
 623              	.L35:
1260:../user/source/DLT698.c ****             Ptr += 2;
1261:../user/source/DLT698.c ****         }
1262:../user/source/DLT698.c ****     }
1263:../user/source/DLT698.c ****     else if (*Ptr == 5 || *Ptr == 6 || *Ptr == 7)
 624              		.loc 1 1263 0 is_stmt 1
 625 0194 053B     		subs	r3, r3, #5
 626 0196 DBB2     		uxtb	r3, r3
 627 0198 022B     		cmp	r3, #2
 628 019a 5ED8     		bhi	.L60
 629              	.LVL113:
 630              	.LBB63:
 631              	.LBB64:
 173:../user/source/DLT698.c ****     {
 632              		.loc 1 173 0
 633 019c 4678     		ldrb	r6, [r0, #1]	@ zero_extendqisi2
 634 019e 16F0800F 		tst	r6, #128
 635 01a2 01D1     		bne	.L43
 636              	.LVL114:
 175:../user/source/DLT698.c ****         return ucRcvBuf[0];
 637              		.loc 1 175 0
 638 01a4 0122     		movs	r2, #1
 639 01a6 1DE0     		b	.L44
 640              	.LVL115:
 641              	.L43:
 179:../user/source/DLT698.c **** 
 642              		.loc 1 179 0
 643 01a8 06F07F06 		and	r6, r6, #127
 644              	.LVL116:
 181:../user/source/DLT698.c ****     {
 645              		.loc 1 181 0
 646 01ac 012E     		cmp	r6, #1
 647 01ae 02D1     		bne	.L45
 648              	.LVL117:
 184:../user/source/DLT698.c ****     }
 649              		.loc 1 184 0
 650 01b0 8678     		ldrb	r6, [r0, #2]	@ zero_extendqisi2
 651              	.LVL118:
 183:../user/source/DLT698.c ****         return (ucRcvBuf[1]);
 652              		.loc 1 183 0
 653 01b2 0222     		movs	r2, #2
 654 01b4 16E0     		b	.L44
 655              	.LVL119:
 656              	.L45:
 186:../user/source/DLT698.c ****     {
 657              		.loc 1 186 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 36


 658 01b6 022E     		cmp	r6, #2
 659 01b8 05D1     		bne	.L46
 660              	.LVL120:
 189:../user/source/DLT698.c ****     }
 661              		.loc 1 189 0
 662 01ba 8678     		ldrb	r6, [r0, #2]	@ zero_extendqisi2
 663              	.LVL121:
 664 01bc C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 665 01be 43EA0626 		orr	r6, r3, r6, lsl #8
 188:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 8) | (ucRcvBuf[2]));
 666              		.loc 1 188 0
 667 01c2 0322     		movs	r2, #3
 668 01c4 0EE0     		b	.L44
 669              	.LVL122:
 670              	.L46:
 191:../user/source/DLT698.c ****     {
 671              		.loc 1 191 0
 672 01c6 032E     		cmp	r6, #3
 673 01c8 03D1     		bne	.L47
 674              	.LVL123:
 194:../user/source/DLT698.c ****     }
 675              		.loc 1 194 0
 676 01ca 8678     		ldrb	r6, [r0, #2]	@ zero_extendqisi2
 677              	.LVL124:
 678 01cc 3604     		lsls	r6, r6, #16
 193:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 16) | (ucRcvBuf[2] << 8) & (ucRcvBuf[3]));
 679              		.loc 1 193 0
 680 01ce 0422     		movs	r2, #4
 681 01d0 08E0     		b	.L44
 682              	.LVL125:
 683              	.L47:
 196:../user/source/DLT698.c ****     {
 684              		.loc 1 196 0
 685 01d2 042E     		cmp	r6, #4
 686 01d4 03D1     		bne	.L61
 687              	.LVL126:
 199:../user/source/DLT698.c ****     }
 688              		.loc 1 199 0
 689 01d6 8678     		ldrb	r6, [r0, #2]	@ zero_extendqisi2
 690              	.LVL127:
 691 01d8 3606     		lsls	r6, r6, #24
 198:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 24) | (ucRcvBuf[2] << 16) & (ucRcvBuf[3] << 8) & (ucRcvBuf[4]));
 692              		.loc 1 198 0
 693 01da 0522     		movs	r2, #5
 694 01dc 02E0     		b	.L44
 695              	.LVL128:
 696              	.L61:
 697              	.LBE64:
 698              	.LBE63:
1182:../user/source/DLT698.c **** 
 699              		.loc 1 1182 0
 700 01de 0022     		movs	r2, #0
 701              	.LBB66:
 702              	.LBB65:
 202:../user/source/DLT698.c **** }
 703              		.loc 1 202 0
 704 01e0 4FF0FF36 		mov	r6, #-1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 37


 705              	.LVL129:
 706              	.L44:
 707              	.LBE65:
 708              	.LBE66:
1264:../user/source/DLT698.c ****     {
1265:../user/source/DLT698.c ****         Ptr += 1;
1266:../user/source/DLT698.c ****         Len += 1; // choice - sequence of region
1267:../user/source/DLT698.c **** 
1268:../user/source/DLT698.c ****         // number of user type
1269:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 709              		.loc 1 1269 0
 710 01e4 002E     		cmp	r6, #0
 711 01e6 3CDB     		blt	.L62
1270:../user/source/DLT698.c ****         {
1271:../user/source/DLT698.c ****             return -1;
1272:../user/source/DLT698.c ****         }
1273:../user/source/DLT698.c **** 
1274:../user/source/DLT698.c ****         Len += LenBytes;
 712              		.loc 1 1274 0
 713 01e8 531C     		adds	r3, r2, #1
 714              	.LVL130:
1275:../user/source/DLT698.c ****         Ptr += LenBytes;
 715              		.loc 1 1275 0
 716 01ea C418     		adds	r4, r0, r3
 717              	.LVL131:
1276:../user/source/DLT698.c **** 
1277:../user/source/DLT698.c ****         for (i = 0; i < varLen; i++)
 718              		.loc 1 1277 0
 719 01ec 4FF00008 		mov	r8, #0
 720 01f0 16E0     		b	.L48
 721              	.LVL132:
 722              	.L49:
1278:../user/source/DLT698.c ****         {
1279:../user/source/DLT698.c ****             Ptr += 1;
 723              		.loc 1 1279 0
 724 01f2 0134     		adds	r4, r4, #1
 725              	.LVL133:
1280:../user/source/DLT698.c ****             Len += 1; // ENUMERATED
 726              		.loc 1 1280 0
 727 01f4 581C     		adds	r0, r3, #1
 728 01f6 87B2     		uxth	r7, r0
 729              	.LVL134:
1281:../user/source/DLT698.c **** 
1282:../user/source/DLT698.c ****             if ((Res = dwDlt698DataLen(Ptr, dwRcvLen - Len)) < 0)
 730              		.loc 1 1282 0
 731 01f8 E91B     		subs	r1, r5, r7
 732 01fa 2046     		mov	r0, r4
 733 01fc FFF7FEFF 		bl	dwDlt698DataLen
 734              	.LVL135:
 735 0200 0028     		cmp	r0, #0
 736 0202 32DB     		blt	.L63
1283:../user/source/DLT698.c ****             { // start data
1284:../user/source/DLT698.c ****                 return -1;
1285:../user/source/DLT698.c ****             }
1286:../user/source/DLT698.c ****             Ptr += Res;
 737              		.loc 1 1286 0
 738 0204 0444     		add	r4, r4, r0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 38


 739              	.LVL136:
1287:../user/source/DLT698.c ****             Len += Res;
 740              		.loc 1 1287 0
 741 0206 3844     		add	r0, r0, r7
 742              	.LVL137:
 743 0208 87B2     		uxth	r7, r0
 744              	.LVL138:
1288:../user/source/DLT698.c **** 
1289:../user/source/DLT698.c ****             if ((Res = dwDlt698DataLen(Ptr, dwRcvLen - Len)) < 0)
 745              		.loc 1 1289 0
 746 020a E91B     		subs	r1, r5, r7
 747 020c 2046     		mov	r0, r4
 748 020e FFF7FEFF 		bl	dwDlt698DataLen
 749              	.LVL139:
 750 0212 0028     		cmp	r0, #0
 751 0214 2DDB     		blt	.L64
1290:../user/source/DLT698.c ****             { // end data
1291:../user/source/DLT698.c ****                 return -1;
1292:../user/source/DLT698.c ****             }
1293:../user/source/DLT698.c ****             Ptr += Res;
 752              		.loc 1 1293 0 discriminator 2
 753 0216 0444     		add	r4, r4, r0
 754              	.LVL140:
1294:../user/source/DLT698.c ****             Len += Res;
 755              		.loc 1 1294 0 discriminator 2
 756 0218 3844     		add	r0, r0, r7
 757              	.LVL141:
 758 021a 83B2     		uxth	r3, r0
 759              	.LVL142:
1277:../user/source/DLT698.c ****         {
 760              		.loc 1 1277 0 discriminator 2
 761 021c 08F10108 		add	r8, r8, #1
 762              	.LVL143:
 763              	.L48:
1277:../user/source/DLT698.c ****         {
 764              		.loc 1 1277 0 is_stmt 0 discriminator 1
 765 0220 B045     		cmp	r8, r6
 766 0222 E6DB     		blt	.L49
 767 0224 02E0     		b	.L12
 768              	.LVL144:
 769              	.L50:
1187:../user/source/DLT698.c ****     }
 770              		.loc 1 1187 0 is_stmt 1
 771 0226 0123     		movs	r3, #1
 772 0228 00E0     		b	.L12
 773              	.L51:
1192:../user/source/DLT698.c ****     }
 774              		.loc 1 1192 0
 775 022a 0123     		movs	r3, #1
 776              	.LVL145:
 777              	.L12:
1295:../user/source/DLT698.c ****         }
1296:../user/source/DLT698.c ****     }
1297:../user/source/DLT698.c ****     else
1298:../user/source/DLT698.c ****     {
1299:../user/source/DLT698.c ****         return -1;
1300:../user/source/DLT698.c ****     }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 39


1301:../user/source/DLT698.c **** 
1302:../user/source/DLT698.c ****     if (Len > dwRcvLen)
 778              		.loc 1 1302 0
 779 022c 1846     		mov	r0, r3
 780 022e 9D42     		cmp	r5, r3
 781 0230 21DA     		bge	.L19
1303:../user/source/DLT698.c ****     {
1304:../user/source/DLT698.c ****         return -1;
 782              		.loc 1 1304 0
 783 0232 4FF0FF30 		mov	r0, #-1
 784 0236 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 785              	.LVL146:
 786              	.L53:
1202:../user/source/DLT698.c ****         }
 787              		.loc 1 1202 0
 788 023a 4FF0FF30 		mov	r0, #-1
 789              	.LVL147:
 790 023e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 791              	.LVL148:
 792              	.L55:
1222:../user/source/DLT698.c ****         }
 793              		.loc 1 1222 0
 794 0242 4FF0FF30 		mov	r0, #-1
 795              	.LVL149:
 796 0246 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 797              	.LVL150:
 798              	.L57:
1232:../user/source/DLT698.c ****             }
 799              		.loc 1 1232 0
 800 024a 4FF0FF30 		mov	r0, #-1
 801              	.LVL151:
 802 024e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 803              	.LVL152:
 804              	.L59:
1251:../user/source/DLT698.c ****         }
 805              		.loc 1 1251 0
 806 0252 4FF0FF30 		mov	r0, #-1
 807              	.LVL153:
 808 0256 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 809              	.LVL154:
 810              	.L60:
1299:../user/source/DLT698.c ****     }
 811              		.loc 1 1299 0
 812 025a 4FF0FF30 		mov	r0, #-1
 813              	.LVL155:
 814 025e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 815              	.LVL156:
 816              	.L62:
1271:../user/source/DLT698.c ****         }
 817              		.loc 1 1271 0
 818 0262 4FF0FF30 		mov	r0, #-1
 819              	.LVL157:
 820 0266 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 821              	.LVL158:
 822              	.L63:
1284:../user/source/DLT698.c ****             }
 823              		.loc 1 1284 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 40


 824 026a 4FF0FF30 		mov	r0, #-1
 825              	.LVL159:
 826 026e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 827              	.LVL160:
 828              	.L64:
1291:../user/source/DLT698.c ****             }
 829              		.loc 1 1291 0
 830 0272 4FF0FF30 		mov	r0, #-1
 831              	.LVL161:
 832              	.L19:
1305:../user/source/DLT698.c ****     }
1306:../user/source/DLT698.c **** 
1307:../user/source/DLT698.c ****     return Len;
1308:../user/source/DLT698.c **** }...
 833              		.loc 1 1308 0
 834 0276 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 835              		.cfi_endproc
 836              	.LFE120:
 838 027a 00BF     		.section	.text.dwDlt698DataLen,"ax",%progbits
 839              		.align	2
 840              		.thumb
 841              		.thumb_func
 843              	dwDlt698DataLen:
 844              	.LFB118:
 382:../user/source/DLT698.c **** {
 845              		.loc 1 382 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849              	.LVL162:
 850 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 851              	.LCFI5:
 852              		.cfi_def_cfa_offset 24
 853              		.cfi_offset 4, -24
 854              		.cfi_offset 5, -20
 855              		.cfi_offset 6, -16
 856              		.cfi_offset 7, -12
 857              		.cfi_offset 8, -8
 858              		.cfi_offset 14, -4
 859 0004 0D46     		mov	r5, r1
 860              	.LVL163:
 391:../user/source/DLT698.c ****     Ptr++;
 861              		.loc 1 391 0
 862 0006 421C     		adds	r2, r0, #1
 863              	.LVL164:
 394:../user/source/DLT698.c ****     switch (ucRcvBuf[0])
 864              		.loc 1 394 0
 865 0008 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 866 000a 602B     		cmp	r3, #96
 867 000c 00F2B083 		bhi	.L197
 868 0010 DFE813F0 		tbh	[pc, r3, lsl #1]
 869              	.LVL165:
 870              	.L69:
 871 0014 6100     		.2byte	(.L68-.L69)/2
 872 0016 6300     		.2byte	(.L70-.L69)/2
 873 0018 9E00     		.2byte	(.L71-.L69)/2
 874 001a A403     		.2byte	(.L198-.L69)/2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 41


 875 001c D900     		.2byte	(.L73-.L69)/2
 876 001e 1601     		.2byte	(.L74-.L69)/2
 877 0020 1801     		.2byte	(.L75-.L69)/2
 878 0022 AE03     		.2byte	(.L197-.L69)/2
 879 0024 AE03     		.2byte	(.L197-.L69)/2
 880 0026 1A01     		.2byte	(.L76-.L69)/2
 881 0028 4501     		.2byte	(.L77-.L69)/2
 882 002a AE03     		.2byte	(.L197-.L69)/2
 883 002c 7001     		.2byte	(.L78-.L69)/2
 884 002e AE03     		.2byte	(.L197-.L69)/2
 885 0030 AE03     		.2byte	(.L197-.L69)/2
 886 0032 A403     		.2byte	(.L198-.L69)/2
 887 0034 9B01     		.2byte	(.L79-.L69)/2
 888 0036 A403     		.2byte	(.L198-.L69)/2
 889 0038 9D01     		.2byte	(.L80-.L69)/2
 890 003a AE03     		.2byte	(.L197-.L69)/2
 891 003c 9F01     		.2byte	(.L81-.L69)/2
 892 003e A101     		.2byte	(.L82-.L69)/2
 893 0040 A403     		.2byte	(.L198-.L69)/2
 894 0042 A301     		.2byte	(.L83-.L69)/2
 895 0044 A501     		.2byte	(.L84-.L69)/2
 896 0046 A701     		.2byte	(.L85-.L69)/2
 897 0048 A901     		.2byte	(.L86-.L69)/2
 898 004a AB01     		.2byte	(.L87-.L69)/2
 899 004c AD01     		.2byte	(.L88-.L69)/2
 900 004e AE03     		.2byte	(.L197-.L69)/2
 901 0050 AE03     		.2byte	(.L197-.L69)/2
 902 0052 AE03     		.2byte	(.L197-.L69)/2
 903 0054 AE03     		.2byte	(.L197-.L69)/2
 904 0056 AE03     		.2byte	(.L197-.L69)/2
 905 0058 AE03     		.2byte	(.L197-.L69)/2
 906 005a AE03     		.2byte	(.L197-.L69)/2
 907 005c AE03     		.2byte	(.L197-.L69)/2
 908 005e AE03     		.2byte	(.L197-.L69)/2
 909 0060 AE03     		.2byte	(.L197-.L69)/2
 910 0062 AE03     		.2byte	(.L197-.L69)/2
 911 0064 AE03     		.2byte	(.L197-.L69)/2
 912 0066 AE03     		.2byte	(.L197-.L69)/2
 913 0068 AE03     		.2byte	(.L197-.L69)/2
 914 006a AE03     		.2byte	(.L197-.L69)/2
 915 006c AE03     		.2byte	(.L197-.L69)/2
 916 006e AE03     		.2byte	(.L197-.L69)/2
 917 0070 AE03     		.2byte	(.L197-.L69)/2
 918 0072 AE03     		.2byte	(.L197-.L69)/2
 919 0074 AE03     		.2byte	(.L197-.L69)/2
 920 0076 AE03     		.2byte	(.L197-.L69)/2
 921 0078 AE03     		.2byte	(.L197-.L69)/2
 922 007a AE03     		.2byte	(.L197-.L69)/2
 923 007c AE03     		.2byte	(.L197-.L69)/2
 924 007e AE03     		.2byte	(.L197-.L69)/2
 925 0080 AE03     		.2byte	(.L197-.L69)/2
 926 0082 AE03     		.2byte	(.L197-.L69)/2
 927 0084 AE03     		.2byte	(.L197-.L69)/2
 928 0086 AE03     		.2byte	(.L197-.L69)/2
 929 0088 AE03     		.2byte	(.L197-.L69)/2
 930 008a AE03     		.2byte	(.L197-.L69)/2
 931 008c AE03     		.2byte	(.L197-.L69)/2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 42


 932 008e AE03     		.2byte	(.L197-.L69)/2
 933 0090 AE03     		.2byte	(.L197-.L69)/2
 934 0092 AE03     		.2byte	(.L197-.L69)/2
 935 0094 AE03     		.2byte	(.L197-.L69)/2
 936 0096 AE03     		.2byte	(.L197-.L69)/2
 937 0098 AE03     		.2byte	(.L197-.L69)/2
 938 009a AE03     		.2byte	(.L197-.L69)/2
 939 009c AE03     		.2byte	(.L197-.L69)/2
 940 009e AE03     		.2byte	(.L197-.L69)/2
 941 00a0 AE03     		.2byte	(.L197-.L69)/2
 942 00a2 AE03     		.2byte	(.L197-.L69)/2
 943 00a4 AE03     		.2byte	(.L197-.L69)/2
 944 00a6 AE03     		.2byte	(.L197-.L69)/2
 945 00a8 AE03     		.2byte	(.L197-.L69)/2
 946 00aa AE03     		.2byte	(.L197-.L69)/2
 947 00ac AE03     		.2byte	(.L197-.L69)/2
 948 00ae AE03     		.2byte	(.L197-.L69)/2
 949 00b0 AE03     		.2byte	(.L197-.L69)/2
 950 00b2 AE03     		.2byte	(.L197-.L69)/2
 951 00b4 AF01     		.2byte	(.L89-.L69)/2
 952 00b6 B101     		.2byte	(.L90-.L69)/2
 953 00b8 B301     		.2byte	(.L91-.L69)/2
 954 00ba E301     		.2byte	(.L92-.L69)/2
 955 00bc E501     		.2byte	(.L93-.L69)/2
 956 00be E701     		.2byte	(.L94-.L69)/2
 957 00c0 1202     		.2byte	(.L95-.L69)/2
 958 00c2 1202     		.2byte	(.L95-.L69)/2
 959 00c4 3D02     		.2byte	(.L96-.L69)/2
 960 00c6 5102     		.2byte	(.L97-.L69)/2
 961 00c8 5302     		.2byte	(.L98-.L69)/2
 962 00ca 5D02     		.2byte	(.L99-.L69)/2
 963 00cc 9702     		.2byte	(.L100-.L69)/2
 964 00ce A102     		.2byte	(.L101-.L69)/2
 965 00d0 CC02     		.2byte	(.L102-.L69)/2
 966 00d2 2403     		.2byte	(.L103-.L69)/2
 967 00d4 2603     		.2byte	(.L104-.L69)/2
 968              		.p2align 1
 969              	.L68:
 392:../user/source/DLT698.c ****     Len++;
 970              		.loc 1 392 0
 971 00d6 0124     		movs	r4, #1
 972 00d8 43E3     		b	.L72
 973              	.L70:
 974              	.LVL166:
 975              	.LBB67:
 976              	.LBB68:
 173:../user/source/DLT698.c ****     if (0x00 == (ucRcvBuf[0] & 0x80))
 977              		.loc 1 173 0
 978 00da 4778     		ldrb	r7, [r0, #1]	@ zero_extendqisi2
 979 00dc 17F0800F 		tst	r7, #128
 980 00e0 01D1     		bne	.L105
 981              	.LVL167:
 175:../user/source/DLT698.c ****         *LenBytes = 1;
 982              		.loc 1 175 0
 983 00e2 0126     		movs	r6, #1
 984 00e4 1DE0     		b	.L106
 985              	.LVL168:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 43


 986              	.L105:
 179:../user/source/DLT698.c ****     Bytes = ucRcvBuf[0] & 0x7F;
 987              		.loc 1 179 0
 988 00e6 07F07F07 		and	r7, r7, #127
 989              	.LVL169:
 181:../user/source/DLT698.c ****     if (Bytes == 1)
 990              		.loc 1 181 0
 991 00ea 012F     		cmp	r7, #1
 992 00ec 02D1     		bne	.L107
 993              	.LVL170:
 184:../user/source/DLT698.c ****         return (ucRcvBuf[1]);
 994              		.loc 1 184 0
 995 00ee 8778     		ldrb	r7, [r0, #2]	@ zero_extendqisi2
 996              	.LVL171:
 183:../user/source/DLT698.c ****         *LenBytes = 2;
 997              		.loc 1 183 0
 998 00f0 0226     		movs	r6, #2
 999 00f2 16E0     		b	.L106
 1000              	.LVL172:
 1001              	.L107:
 186:../user/source/DLT698.c ****     else if (Bytes == 2)
 1002              		.loc 1 186 0
 1003 00f4 022F     		cmp	r7, #2
 1004 00f6 05D1     		bne	.L108
 1005              	.LVL173:
 189:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 8) | (ucRcvBuf[2]));
 1006              		.loc 1 189 0
 1007 00f8 8778     		ldrb	r7, [r0, #2]	@ zero_extendqisi2
 1008              	.LVL174:
 1009 00fa C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1010 00fc 43EA0727 		orr	r7, r3, r7, lsl #8
 188:../user/source/DLT698.c ****         *LenBytes = 3;
 1011              		.loc 1 188 0
 1012 0100 0326     		movs	r6, #3
 1013 0102 0EE0     		b	.L106
 1014              	.LVL175:
 1015              	.L108:
 191:../user/source/DLT698.c ****     else if (Bytes == 3)
 1016              		.loc 1 191 0
 1017 0104 032F     		cmp	r7, #3
 1018 0106 03D1     		bne	.L109
 1019              	.LVL176:
 194:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 16) | (ucRcvBuf[2] << 8) & (ucRcvBuf[3]));
 1020              		.loc 1 194 0
 1021 0108 8778     		ldrb	r7, [r0, #2]	@ zero_extendqisi2
 1022              	.LVL177:
 1023 010a 3F04     		lsls	r7, r7, #16
 193:../user/source/DLT698.c ****         *LenBytes = 4;
 1024              		.loc 1 193 0
 1025 010c 0426     		movs	r6, #4
 1026 010e 08E0     		b	.L106
 1027              	.LVL178:
 1028              	.L109:
 196:../user/source/DLT698.c ****     else if (Bytes == 4)
 1029              		.loc 1 196 0
 1030 0110 042F     		cmp	r7, #4
 1031 0112 03D1     		bne	.L199
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 44


 1032              	.LVL179:
 199:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 24) | (ucRcvBuf[2] << 16) & (ucRcvBuf[3] << 8) & (ucRcvBuf[4]));
 1033              		.loc 1 199 0
 1034 0114 8778     		ldrb	r7, [r0, #2]	@ zero_extendqisi2
 1035              	.LVL180:
 1036 0116 3F06     		lsls	r7, r7, #24
 198:../user/source/DLT698.c ****         *LenBytes = 5;
 1037              		.loc 1 198 0
 1038 0118 0526     		movs	r6, #5
 1039 011a 02E0     		b	.L106
 1040              	.LVL181:
 1041              	.L199:
 1042              	.LBE68:
 1043              	.LBE67:
 388:../user/source/DLT698.c ****     int i = 0, j = 0, Res = 0, varLen = 0, varLenB = 0, LenBytes = 0; // 可变长度
 1044              		.loc 1 388 0
 1045 011c 0026     		movs	r6, #0
 1046              	.LBB70:
 1047              	.LBB69:
 202:../user/source/DLT698.c ****     return -1;
 1048              		.loc 1 202 0
 1049 011e 4FF0FF37 		mov	r7, #-1
 1050              	.LVL182:
 1051              	.L106:
 1052              	.LBE69:
 1053              	.LBE70:
 405:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 1054              		.loc 1 405 0
 1055 0122 002F     		cmp	r7, #0
 1056 0124 C0F22883 		blt	.L200
 410:../user/source/DLT698.c ****         Len += LenBytes;
 1057              		.loc 1 410 0
 1058 0128 741C     		adds	r4, r6, #1
 1059              	.LVL183:
 411:../user/source/DLT698.c ****         Ptr += LenBytes;
 1060              		.loc 1 411 0
 1061 012a 1644     		add	r6, r6, r2
 1062              	.LVL184:
 414:../user/source/DLT698.c ****         for (i = 0; i < varLen; i++)
 1063              		.loc 1 414 0
 1064 012c 4FF00008 		mov	r8, #0
 1065 0130 0BE0     		b	.L110
 1066              	.LVL185:
 1067              	.L111:
 416:../user/source/DLT698.c ****             if ((Res = dwDlt698DataLen(Ptr, dwRcvLen - Len)) <= 0)
 1068              		.loc 1 416 0
 1069 0132 291B     		subs	r1, r5, r4
 1070 0134 3046     		mov	r0, r6
 1071 0136 FFF763FF 		bl	dwDlt698DataLen
 1072              	.LVL186:
 1073 013a 0028     		cmp	r0, #0
 1074 013c 40F32083 		ble	.L201
 421:../user/source/DLT698.c ****             Ptr += Res;
 1075              		.loc 1 421 0 discriminator 2
 1076 0140 0644     		add	r6, r6, r0
 1077              	.LVL187:
 422:../user/source/DLT698.c ****             Len += Res;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 45


 1078              		.loc 1 422 0 discriminator 2
 1079 0142 0444     		add	r4, r4, r0
 1080              	.LVL188:
 1081 0144 A4B2     		uxth	r4, r4
 1082              	.LVL189:
 414:../user/source/DLT698.c ****         for (i = 0; i < varLen; i++)
 1083              		.loc 1 414 0 discriminator 2
 1084 0146 08F10108 		add	r8, r8, #1
 1085              	.LVL190:
 1086              	.L110:
 414:../user/source/DLT698.c ****         for (i = 0; i < varLen; i++)
 1087              		.loc 1 414 0 is_stmt 0 discriminator 1
 1088 014a B845     		cmp	r8, r7
 1089 014c F1DB     		blt	.L111
 1090 014e 08E3     		b	.L72
 1091              	.LVL191:
 1092              	.L71:
 1093              	.LBB71:
 1094              	.LBB72:
 173:../user/source/DLT698.c ****     if (0x00 == (ucRcvBuf[0] & 0x80))
 1095              		.loc 1 173 0 is_stmt 1
 1096 0150 4778     		ldrb	r7, [r0, #1]	@ zero_extendqisi2
 1097 0152 17F0800F 		tst	r7, #128
 1098 0156 01D1     		bne	.L112
 1099              	.LVL192:
 175:../user/source/DLT698.c ****         *LenBytes = 1;
 1100              		.loc 1 175 0
 1101 0158 0126     		movs	r6, #1
 1102 015a 1DE0     		b	.L113
 1103              	.LVL193:
 1104              	.L112:
 179:../user/source/DLT698.c ****     Bytes = ucRcvBuf[0] & 0x7F;
 1105              		.loc 1 179 0
 1106 015c 07F07F07 		and	r7, r7, #127
 1107              	.LVL194:
 181:../user/source/DLT698.c ****     if (Bytes == 1)
 1108              		.loc 1 181 0
 1109 0160 012F     		cmp	r7, #1
 1110 0162 02D1     		bne	.L114
 1111              	.LVL195:
 184:../user/source/DLT698.c ****         return (ucRcvBuf[1]);
 1112              		.loc 1 184 0
 1113 0164 8778     		ldrb	r7, [r0, #2]	@ zero_extendqisi2
 1114              	.LVL196:
 183:../user/source/DLT698.c ****         *LenBytes = 2;
 1115              		.loc 1 183 0
 1116 0166 0226     		movs	r6, #2
 1117 0168 16E0     		b	.L113
 1118              	.LVL197:
 1119              	.L114:
 186:../user/source/DLT698.c ****     else if (Bytes == 2)
 1120              		.loc 1 186 0
 1121 016a 022F     		cmp	r7, #2
 1122 016c 05D1     		bne	.L115
 1123              	.LVL198:
 189:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 8) | (ucRcvBuf[2]));
 1124              		.loc 1 189 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 46


 1125 016e 8778     		ldrb	r7, [r0, #2]	@ zero_extendqisi2
 1126              	.LVL199:
 1127 0170 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1128 0172 43EA0727 		orr	r7, r3, r7, lsl #8
 188:../user/source/DLT698.c ****         *LenBytes = 3;
 1129              		.loc 1 188 0
 1130 0176 0326     		movs	r6, #3
 1131 0178 0EE0     		b	.L113
 1132              	.LVL200:
 1133              	.L115:
 191:../user/source/DLT698.c ****     else if (Bytes == 3)
 1134              		.loc 1 191 0
 1135 017a 032F     		cmp	r7, #3
 1136 017c 03D1     		bne	.L116
 1137              	.LVL201:
 194:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 16) | (ucRcvBuf[2] << 8) & (ucRcvBuf[3]));
 1138              		.loc 1 194 0
 1139 017e 8778     		ldrb	r7, [r0, #2]	@ zero_extendqisi2
 1140              	.LVL202:
 1141 0180 3F04     		lsls	r7, r7, #16
 193:../user/source/DLT698.c ****         *LenBytes = 4;
 1142              		.loc 1 193 0
 1143 0182 0426     		movs	r6, #4
 1144 0184 08E0     		b	.L113
 1145              	.LVL203:
 1146              	.L116:
 196:../user/source/DLT698.c ****     else if (Bytes == 4)
 1147              		.loc 1 196 0
 1148 0186 042F     		cmp	r7, #4
 1149 0188 03D1     		bne	.L202
 1150              	.LVL204:
 199:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 24) | (ucRcvBuf[2] << 16) & (ucRcvBuf[3] << 8) & (ucRcvBuf[4]));
 1151              		.loc 1 199 0
 1152 018a 8778     		ldrb	r7, [r0, #2]	@ zero_extendqisi2
 1153              	.LVL205:
 1154 018c 3F06     		lsls	r7, r7, #24
 198:../user/source/DLT698.c ****         *LenBytes = 5;
 1155              		.loc 1 198 0
 1156 018e 0526     		movs	r6, #5
 1157 0190 02E0     		b	.L113
 1158              	.LVL206:
 1159              	.L202:
 1160              	.LBE72:
 1161              	.LBE71:
 388:../user/source/DLT698.c ****     int i = 0, j = 0, Res = 0, varLen = 0, varLenB = 0, LenBytes = 0; // 可变长度
 1162              		.loc 1 388 0
 1163 0192 0026     		movs	r6, #0
 1164              	.LBB74:
 1165              	.LBB73:
 202:../user/source/DLT698.c ****     return -1;
 1166              		.loc 1 202 0
 1167 0194 4FF0FF37 		mov	r7, #-1
 1168              	.LVL207:
 1169              	.L113:
 1170              	.LBE73:
 1171              	.LBE74:
 429:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 47


 1172              		.loc 1 429 0
 1173 0198 002F     		cmp	r7, #0
 1174 019a C0F2F582 		blt	.L203
 434:../user/source/DLT698.c ****         Len += LenBytes;
 1175              		.loc 1 434 0
 1176 019e 741C     		adds	r4, r6, #1
 1177              	.LVL208:
 435:../user/source/DLT698.c ****         Ptr += LenBytes;
 1178              		.loc 1 435 0
 1179 01a0 1644     		add	r6, r6, r2
 1180              	.LVL209:
 438:../user/source/DLT698.c ****         for (i = 0; i < varLen; i++)
 1181              		.loc 1 438 0
 1182 01a2 4FF00008 		mov	r8, #0
 1183 01a6 0BE0     		b	.L117
 1184              	.LVL210:
 1185              	.L118:
 440:../user/source/DLT698.c ****             if ((Res = dwDlt698DataLen(Ptr, dwRcvLen - Len)) <= 0)
 1186              		.loc 1 440 0
 1187 01a8 291B     		subs	r1, r5, r4
 1188 01aa 3046     		mov	r0, r6
 1189 01ac FFF728FF 		bl	dwDlt698DataLen
 1190              	.LVL211:
 1191 01b0 0028     		cmp	r0, #0
 1192 01b2 40F3ED82 		ble	.L204
 445:../user/source/DLT698.c ****             Ptr += Res;
 1193              		.loc 1 445 0 discriminator 2
 1194 01b6 0644     		add	r6, r6, r0
 1195              	.LVL212:
 446:../user/source/DLT698.c ****             Len += Res;
 1196              		.loc 1 446 0 discriminator 2
 1197 01b8 0444     		add	r4, r4, r0
 1198              	.LVL213:
 1199 01ba A4B2     		uxth	r4, r4
 1200              	.LVL214:
 438:../user/source/DLT698.c ****         for (i = 0; i < varLen; i++)
 1201              		.loc 1 438 0 discriminator 2
 1202 01bc 08F10108 		add	r8, r8, #1
 1203              	.LVL215:
 1204              	.L117:
 438:../user/source/DLT698.c ****         for (i = 0; i < varLen; i++)
 1205              		.loc 1 438 0 is_stmt 0 discriminator 1
 1206 01c0 B845     		cmp	r8, r7
 1207 01c2 F1DB     		blt	.L118
 1208 01c4 CDE2     		b	.L72
 1209              	.LVL216:
 1210              	.L73:
 1211              	.LBB75:
 1212              	.LBB76:
 173:../user/source/DLT698.c ****     if (0x00 == (ucRcvBuf[0] & 0x80))
 1213              		.loc 1 173 0 is_stmt 1
 1214 01c6 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 1215 01c8 13F0800F 		tst	r3, #128
 1216 01cc 01D1     		bne	.L119
 1217              	.LVL217:
 175:../user/source/DLT698.c ****         *LenBytes = 1;
 1218              		.loc 1 175 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 48


 1219 01ce 0122     		movs	r2, #1
 1220              	.LVL218:
 1221 01d0 1DE0     		b	.L120
 1222              	.LVL219:
 1223              	.L119:
 179:../user/source/DLT698.c ****     Bytes = ucRcvBuf[0] & 0x7F;
 1224              		.loc 1 179 0
 1225 01d2 03F07F03 		and	r3, r3, #127
 1226              	.LVL220:
 181:../user/source/DLT698.c ****     if (Bytes == 1)
 1227              		.loc 1 181 0
 1228 01d6 012B     		cmp	r3, #1
 1229 01d8 02D1     		bne	.L121
 1230              	.LVL221:
 184:../user/source/DLT698.c ****         return (ucRcvBuf[1]);
 1231              		.loc 1 184 0
 1232 01da 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 1233              	.LVL222:
 183:../user/source/DLT698.c ****         *LenBytes = 2;
 1234              		.loc 1 183 0
 1235 01dc 0222     		movs	r2, #2
 1236              	.LVL223:
 1237 01de 16E0     		b	.L120
 1238              	.LVL224:
 1239              	.L121:
 186:../user/source/DLT698.c ****     else if (Bytes == 2)
 1240              		.loc 1 186 0
 1241 01e0 022B     		cmp	r3, #2
 1242 01e2 05D1     		bne	.L122
 1243              	.LVL225:
 189:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 8) | (ucRcvBuf[2]));
 1244              		.loc 1 189 0
 1245 01e4 8278     		ldrb	r2, [r0, #2]	@ zero_extendqisi2
 1246              	.LVL226:
 1247 01e6 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1248              	.LVL227:
 1249 01e8 43EA0223 		orr	r3, r3, r2, lsl #8
 188:../user/source/DLT698.c ****         *LenBytes = 3;
 1250              		.loc 1 188 0
 1251 01ec 0322     		movs	r2, #3
 1252 01ee 0EE0     		b	.L120
 1253              	.LVL228:
 1254              	.L122:
 191:../user/source/DLT698.c ****     else if (Bytes == 3)
 1255              		.loc 1 191 0
 1256 01f0 032B     		cmp	r3, #3
 1257 01f2 03D1     		bne	.L123
 1258              	.LVL229:
 194:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 16) | (ucRcvBuf[2] << 8) & (ucRcvBuf[3]));
 1259              		.loc 1 194 0
 1260 01f4 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 1261              	.LVL230:
 1262 01f6 1B04     		lsls	r3, r3, #16
 193:../user/source/DLT698.c ****         *LenBytes = 4;
 1263              		.loc 1 193 0
 1264 01f8 0422     		movs	r2, #4
 1265              	.LVL231:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 49


 1266 01fa 08E0     		b	.L120
 1267              	.LVL232:
 1268              	.L123:
 196:../user/source/DLT698.c ****     else if (Bytes == 4)
 1269              		.loc 1 196 0
 1270 01fc 042B     		cmp	r3, #4
 1271 01fe 03D1     		bne	.L205
 1272              	.LVL233:
 199:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 24) | (ucRcvBuf[2] << 16) & (ucRcvBuf[3] << 8) & (ucRcvBuf[4]));
 1273              		.loc 1 199 0
 1274 0200 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 1275              	.LVL234:
 1276 0202 1B06     		lsls	r3, r3, #24
 198:../user/source/DLT698.c ****         *LenBytes = 5;
 1277              		.loc 1 198 0
 1278 0204 0522     		movs	r2, #5
 1279              	.LVL235:
 1280 0206 02E0     		b	.L120
 1281              	.LVL236:
 1282              	.L205:
 1283              	.LBE76:
 1284              	.LBE75:
 388:../user/source/DLT698.c ****     int i = 0, j = 0, Res = 0, varLen = 0, varLenB = 0, LenBytes = 0; // 可变长度
 1285              		.loc 1 388 0
 1286 0208 0022     		movs	r2, #0
 1287              	.LVL237:
 1288              	.LBB78:
 1289              	.LBB77:
 202:../user/source/DLT698.c ****     return -1;
 1290              		.loc 1 202 0
 1291 020a 4FF0FF33 		mov	r3, #-1
 1292              	.LVL238:
 1293              	.L120:
 1294              	.LBE77:
 1295              	.LBE78:
 461:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 1296              		.loc 1 461 0
 1297 020e 002B     		cmp	r3, #0
 1298 0210 C0F2C282 		blt	.L206
 466:../user/source/DLT698.c ****         Len += LenBytes;
 1299              		.loc 1 466 0
 1300 0214 0132     		adds	r2, r2, #1
 1301              	.LVL239:
 470:../user/source/DLT698.c ****         if (0 == (varLen % 8))
 1302              		.loc 1 470 0
 1303 0216 13F0070F 		tst	r3, #7
 1304 021a 07D1     		bne	.L124
 472:../user/source/DLT698.c ****             Ptr += varLen / 8;
 1305              		.loc 1 472 0
 1306 021c 1C46     		mov	r4, r3
 1307 021e 002B     		cmp	r3, #0
 1308 0220 00DA     		bge	.L125
 1309 0222 DC1D     		adds	r4, r3, #7
 1310              	.L125:
 473:../user/source/DLT698.c ****             Len += varLen / 8;
 1311              		.loc 1 473 0
 1312 0224 02EBE402 		add	r2, r2, r4, asr #3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 50


 1313              	.LVL240:
 1314 0228 94B2     		uxth	r4, r2
 1315              	.LVL241:
 1316 022a 9AE2     		b	.L72
 1317              	.LVL242:
 1318              	.L124:
 477:../user/source/DLT698.c ****             Ptr += (varLen / 8) + 1;
 1319              		.loc 1 477 0
 1320 022c 1C46     		mov	r4, r3
 1321 022e 002B     		cmp	r3, #0
 1322 0230 00DA     		bge	.L126
 1323 0232 DC1D     		adds	r4, r3, #7
 1324              	.L126:
 478:../user/source/DLT698.c ****             Len += (varLen / 8) + 1;
 1325              		.loc 1 478 0
 1326 0234 02EBE404 		add	r4, r2, r4, asr #3
 1327 0238 A4B2     		uxth	r4, r4
 1328 023a 0134     		adds	r4, r4, #1
 1329 023c A4B2     		uxth	r4, r4
 1330              	.LVL243:
 1331 023e 90E2     		b	.L72
 1332              	.LVL244:
 1333              	.L74:
 487:../user/source/DLT698.c ****         Len += 4;
 1334              		.loc 1 487 0
 1335 0240 0524     		movs	r4, #5
 489:../user/source/DLT698.c ****     break;
 1336              		.loc 1 489 0
 1337 0242 8EE2     		b	.L72
 1338              	.LVL245:
 1339              	.L75:
 495:../user/source/DLT698.c ****         Len += 4;
 1340              		.loc 1 495 0
 1341 0244 0524     		movs	r4, #5
 497:../user/source/DLT698.c ****     break;
 1342              		.loc 1 497 0
 1343 0246 8CE2     		b	.L72
 1344              	.LVL246:
 1345              	.L76:
 1346              	.LBB79:
 1347              	.LBB80:
 173:../user/source/DLT698.c ****     if (0x00 == (ucRcvBuf[0] & 0x80))
 1348              		.loc 1 173 0
 1349 0248 4478     		ldrb	r4, [r0, #1]	@ zero_extendqisi2
 1350 024a 14F0800F 		tst	r4, #128
 1351 024e 01D1     		bne	.L127
 1352              	.LVL247:
 175:../user/source/DLT698.c ****         *LenBytes = 1;
 1353              		.loc 1 175 0
 1354 0250 0123     		movs	r3, #1
 1355 0252 1DE0     		b	.L128
 1356              	.LVL248:
 1357              	.L127:
 179:../user/source/DLT698.c ****     Bytes = ucRcvBuf[0] & 0x7F;
 1358              		.loc 1 179 0
 1359 0254 04F07F04 		and	r4, r4, #127
 1360              	.LVL249:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 51


 181:../user/source/DLT698.c ****     if (Bytes == 1)
 1361              		.loc 1 181 0
 1362 0258 012C     		cmp	r4, #1
 1363 025a 02D1     		bne	.L129
 1364              	.LVL250:
 184:../user/source/DLT698.c ****         return (ucRcvBuf[1]);
 1365              		.loc 1 184 0
 1366 025c 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 1367              	.LVL251:
 183:../user/source/DLT698.c ****         *LenBytes = 2;
 1368              		.loc 1 183 0
 1369 025e 0223     		movs	r3, #2
 1370 0260 16E0     		b	.L128
 1371              	.LVL252:
 1372              	.L129:
 186:../user/source/DLT698.c ****     else if (Bytes == 2)
 1373              		.loc 1 186 0
 1374 0262 022C     		cmp	r4, #2
 1375 0264 05D1     		bne	.L130
 1376              	.LVL253:
 189:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 8) | (ucRcvBuf[2]));
 1377              		.loc 1 189 0
 1378 0266 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 1379              	.LVL254:
 1380 0268 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1381 026a 43EA0424 		orr	r4, r3, r4, lsl #8
 188:../user/source/DLT698.c ****         *LenBytes = 3;
 1382              		.loc 1 188 0
 1383 026e 0323     		movs	r3, #3
 1384 0270 0EE0     		b	.L128
 1385              	.LVL255:
 1386              	.L130:
 191:../user/source/DLT698.c ****     else if (Bytes == 3)
 1387              		.loc 1 191 0
 1388 0272 032C     		cmp	r4, #3
 1389 0274 03D1     		bne	.L131
 1390              	.LVL256:
 194:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 16) | (ucRcvBuf[2] << 8) & (ucRcvBuf[3]));
 1391              		.loc 1 194 0
 1392 0276 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 1393              	.LVL257:
 1394 0278 2404     		lsls	r4, r4, #16
 193:../user/source/DLT698.c ****         *LenBytes = 4;
 1395              		.loc 1 193 0
 1396 027a 0423     		movs	r3, #4
 1397 027c 08E0     		b	.L128
 1398              	.LVL258:
 1399              	.L131:
 196:../user/source/DLT698.c ****     else if (Bytes == 4)
 1400              		.loc 1 196 0
 1401 027e 042C     		cmp	r4, #4
 1402 0280 03D1     		bne	.L207
 1403              	.LVL259:
 199:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 24) | (ucRcvBuf[2] << 16) & (ucRcvBuf[3] << 8) & (ucRcvBuf[4]));
 1404              		.loc 1 199 0
 1405 0282 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 1406              	.LVL260:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 52


 1407 0284 2406     		lsls	r4, r4, #24
 198:../user/source/DLT698.c ****         *LenBytes = 5;
 1408              		.loc 1 198 0
 1409 0286 0523     		movs	r3, #5
 1410 0288 02E0     		b	.L128
 1411              	.LVL261:
 1412              	.L207:
 1413              	.LBE80:
 1414              	.LBE79:
 388:../user/source/DLT698.c ****     int i = 0, j = 0, Res = 0, varLen = 0, varLenB = 0, LenBytes = 0; // 可变长度
 1415              		.loc 1 388 0
 1416 028a 0023     		movs	r3, #0
 1417              	.LBB82:
 1418              	.LBB81:
 202:../user/source/DLT698.c ****     return -1;
 1419              		.loc 1 202 0
 1420 028c 4FF0FF34 		mov	r4, #-1
 1421              	.LVL262:
 1422              	.L128:
 1423              	.LBE81:
 1424              	.LBE82:
 501:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 1425              		.loc 1 501 0
 1426 0290 002C     		cmp	r4, #0
 1427 0292 C0F28582 		blt	.L208
 506:../user/source/DLT698.c ****         Len += LenBytes;
 1428              		.loc 1 506 0
 1429 0296 0133     		adds	r3, r3, #1
 1430              	.LVL263:
 511:../user/source/DLT698.c ****         Len += varLen;
 1431              		.loc 1 511 0
 1432 0298 1C44     		add	r4, r4, r3
 1433 029a A4B2     		uxth	r4, r4
 1434              	.LVL264:
 513:../user/source/DLT698.c ****     break;
 1435              		.loc 1 513 0
 1436 029c 61E2     		b	.L72
 1437              	.LVL265:
 1438              	.L77:
 1439              	.LBB83:
 1440              	.LBB84:
 173:../user/source/DLT698.c ****     if (0x00 == (ucRcvBuf[0] & 0x80))
 1441              		.loc 1 173 0
 1442 029e 4478     		ldrb	r4, [r0, #1]	@ zero_extendqisi2
 1443 02a0 14F0800F 		tst	r4, #128
 1444 02a4 01D1     		bne	.L132
 1445              	.LVL266:
 175:../user/source/DLT698.c ****         *LenBytes = 1;
 1446              		.loc 1 175 0
 1447 02a6 0123     		movs	r3, #1
 1448 02a8 1DE0     		b	.L133
 1449              	.LVL267:
 1450              	.L132:
 179:../user/source/DLT698.c ****     Bytes = ucRcvBuf[0] & 0x7F;
 1451              		.loc 1 179 0
 1452 02aa 04F07F04 		and	r4, r4, #127
 1453              	.LVL268:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 53


 181:../user/source/DLT698.c ****     if (Bytes == 1)
 1454              		.loc 1 181 0
 1455 02ae 012C     		cmp	r4, #1
 1456 02b0 02D1     		bne	.L134
 1457              	.LVL269:
 184:../user/source/DLT698.c ****         return (ucRcvBuf[1]);
 1458              		.loc 1 184 0
 1459 02b2 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 1460              	.LVL270:
 183:../user/source/DLT698.c ****         *LenBytes = 2;
 1461              		.loc 1 183 0
 1462 02b4 0223     		movs	r3, #2
 1463 02b6 16E0     		b	.L133
 1464              	.LVL271:
 1465              	.L134:
 186:../user/source/DLT698.c ****     else if (Bytes == 2)
 1466              		.loc 1 186 0
 1467 02b8 022C     		cmp	r4, #2
 1468 02ba 05D1     		bne	.L135
 1469              	.LVL272:
 189:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 8) | (ucRcvBuf[2]));
 1470              		.loc 1 189 0
 1471 02bc 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 1472              	.LVL273:
 1473 02be C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1474 02c0 43EA0424 		orr	r4, r3, r4, lsl #8
 188:../user/source/DLT698.c ****         *LenBytes = 3;
 1475              		.loc 1 188 0
 1476 02c4 0323     		movs	r3, #3
 1477 02c6 0EE0     		b	.L133
 1478              	.LVL274:
 1479              	.L135:
 191:../user/source/DLT698.c ****     else if (Bytes == 3)
 1480              		.loc 1 191 0
 1481 02c8 032C     		cmp	r4, #3
 1482 02ca 03D1     		bne	.L136
 1483              	.LVL275:
 194:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 16) | (ucRcvBuf[2] << 8) & (ucRcvBuf[3]));
 1484              		.loc 1 194 0
 1485 02cc 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 1486              	.LVL276:
 1487 02ce 2404     		lsls	r4, r4, #16
 193:../user/source/DLT698.c ****         *LenBytes = 4;
 1488              		.loc 1 193 0
 1489 02d0 0423     		movs	r3, #4
 1490 02d2 08E0     		b	.L133
 1491              	.LVL277:
 1492              	.L136:
 196:../user/source/DLT698.c ****     else if (Bytes == 4)
 1493              		.loc 1 196 0
 1494 02d4 042C     		cmp	r4, #4
 1495 02d6 03D1     		bne	.L209
 1496              	.LVL278:
 199:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 24) | (ucRcvBuf[2] << 16) & (ucRcvBuf[3] << 8) & (ucRcvBuf[4]));
 1497              		.loc 1 199 0
 1498 02d8 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 1499              	.LVL279:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 54


 1500 02da 2406     		lsls	r4, r4, #24
 198:../user/source/DLT698.c ****         *LenBytes = 5;
 1501              		.loc 1 198 0
 1502 02dc 0523     		movs	r3, #5
 1503 02de 02E0     		b	.L133
 1504              	.LVL280:
 1505              	.L209:
 1506              	.LBE84:
 1507              	.LBE83:
 388:../user/source/DLT698.c ****     int i = 0, j = 0, Res = 0, varLen = 0, varLenB = 0, LenBytes = 0; // 可变长度
 1508              		.loc 1 388 0
 1509 02e0 0023     		movs	r3, #0
 1510              	.LBB86:
 1511              	.LBB85:
 202:../user/source/DLT698.c ****     return -1;
 1512              		.loc 1 202 0
 1513 02e2 4FF0FF34 		mov	r4, #-1
 1514              	.LVL281:
 1515              	.L133:
 1516              	.LBE85:
 1517              	.LBE86:
 517:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 1518              		.loc 1 517 0
 1519 02e6 002C     		cmp	r4, #0
 1520 02e8 C0F25E82 		blt	.L210
 522:../user/source/DLT698.c ****         Len += LenBytes;
 1521              		.loc 1 522 0
 1522 02ec 0133     		adds	r3, r3, #1
 1523              	.LVL282:
 527:../user/source/DLT698.c ****         Len += varLen;
 1524              		.loc 1 527 0
 1525 02ee 1C44     		add	r4, r4, r3
 1526 02f0 A4B2     		uxth	r4, r4
 1527              	.LVL283:
 529:../user/source/DLT698.c ****     break;
 1528              		.loc 1 529 0
 1529 02f2 36E2     		b	.L72
 1530              	.LVL284:
 1531              	.L78:
 1532              	.LBB87:
 1533              	.LBB88:
 173:../user/source/DLT698.c ****     if (0x00 == (ucRcvBuf[0] & 0x80))
 1534              		.loc 1 173 0
 1535 02f4 4478     		ldrb	r4, [r0, #1]	@ zero_extendqisi2
 1536 02f6 14F0800F 		tst	r4, #128
 1537 02fa 01D1     		bne	.L137
 1538              	.LVL285:
 175:../user/source/DLT698.c ****         *LenBytes = 1;
 1539              		.loc 1 175 0
 1540 02fc 0123     		movs	r3, #1
 1541 02fe 1DE0     		b	.L138
 1542              	.LVL286:
 1543              	.L137:
 179:../user/source/DLT698.c ****     Bytes = ucRcvBuf[0] & 0x7F;
 1544              		.loc 1 179 0
 1545 0300 04F07F04 		and	r4, r4, #127
 1546              	.LVL287:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 55


 181:../user/source/DLT698.c ****     if (Bytes == 1)
 1547              		.loc 1 181 0
 1548 0304 012C     		cmp	r4, #1
 1549 0306 02D1     		bne	.L139
 1550              	.LVL288:
 184:../user/source/DLT698.c ****         return (ucRcvBuf[1]);
 1551              		.loc 1 184 0
 1552 0308 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 1553              	.LVL289:
 183:../user/source/DLT698.c ****         *LenBytes = 2;
 1554              		.loc 1 183 0
 1555 030a 0223     		movs	r3, #2
 1556 030c 16E0     		b	.L138
 1557              	.LVL290:
 1558              	.L139:
 186:../user/source/DLT698.c ****     else if (Bytes == 2)
 1559              		.loc 1 186 0
 1560 030e 022C     		cmp	r4, #2
 1561 0310 05D1     		bne	.L140
 1562              	.LVL291:
 189:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 8) | (ucRcvBuf[2]));
 1563              		.loc 1 189 0
 1564 0312 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 1565              	.LVL292:
 1566 0314 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1567 0316 43EA0424 		orr	r4, r3, r4, lsl #8
 188:../user/source/DLT698.c ****         *LenBytes = 3;
 1568              		.loc 1 188 0
 1569 031a 0323     		movs	r3, #3
 1570 031c 0EE0     		b	.L138
 1571              	.LVL293:
 1572              	.L140:
 191:../user/source/DLT698.c ****     else if (Bytes == 3)
 1573              		.loc 1 191 0
 1574 031e 032C     		cmp	r4, #3
 1575 0320 03D1     		bne	.L141
 1576              	.LVL294:
 194:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 16) | (ucRcvBuf[2] << 8) & (ucRcvBuf[3]));
 1577              		.loc 1 194 0
 1578 0322 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 1579              	.LVL295:
 1580 0324 2404     		lsls	r4, r4, #16
 193:../user/source/DLT698.c ****         *LenBytes = 4;
 1581              		.loc 1 193 0
 1582 0326 0423     		movs	r3, #4
 1583 0328 08E0     		b	.L138
 1584              	.LVL296:
 1585              	.L141:
 196:../user/source/DLT698.c ****     else if (Bytes == 4)
 1586              		.loc 1 196 0
 1587 032a 042C     		cmp	r4, #4
 1588 032c 03D1     		bne	.L211
 1589              	.LVL297:
 199:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 24) | (ucRcvBuf[2] << 16) & (ucRcvBuf[3] << 8) & (ucRcvBuf[4]));
 1590              		.loc 1 199 0
 1591 032e 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 1592              	.LVL298:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 56


 1593 0330 2406     		lsls	r4, r4, #24
 198:../user/source/DLT698.c ****         *LenBytes = 5;
 1594              		.loc 1 198 0
 1595 0332 0523     		movs	r3, #5
 1596 0334 02E0     		b	.L138
 1597              	.LVL299:
 1598              	.L211:
 1599              	.LBE88:
 1600              	.LBE87:
 388:../user/source/DLT698.c ****     int i = 0, j = 0, Res = 0, varLen = 0, varLenB = 0, LenBytes = 0; // 可变长度
 1601              		.loc 1 388 0
 1602 0336 0023     		movs	r3, #0
 1603              	.LBB90:
 1604              	.LBB89:
 202:../user/source/DLT698.c ****     return -1;
 1605              		.loc 1 202 0
 1606 0338 4FF0FF34 		mov	r4, #-1
 1607              	.LVL300:
 1608              	.L138:
 1609              	.LBE89:
 1610              	.LBE90:
 533:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 1611              		.loc 1 533 0
 1612 033c 002C     		cmp	r4, #0
 1613 033e C0F23782 		blt	.L212
 538:../user/source/DLT698.c ****         Len += LenBytes;
 1614              		.loc 1 538 0
 1615 0342 0133     		adds	r3, r3, #1
 1616              	.LVL301:
 543:../user/source/DLT698.c ****         Len += varLen;
 1617              		.loc 1 543 0
 1618 0344 1C44     		add	r4, r4, r3
 1619 0346 A4B2     		uxth	r4, r4
 1620              	.LVL302:
 545:../user/source/DLT698.c ****     break;
 1621              		.loc 1 545 0
 1622 0348 0BE2     		b	.L72
 1623              	.LVL303:
 1624              	.L79:
 559:../user/source/DLT698.c ****         Len += 2;
 1625              		.loc 1 559 0
 1626 034a 0324     		movs	r4, #3
 561:../user/source/DLT698.c ****     break;
 1627              		.loc 1 561 0
 1628 034c 09E2     		b	.L72
 1629              	.LVL304:
 1630              	.L80:
 575:../user/source/DLT698.c ****         Len += 2;
 1631              		.loc 1 575 0
 1632 034e 0324     		movs	r4, #3
 577:../user/source/DLT698.c ****     break;
 1633              		.loc 1 577 0
 1634 0350 07E2     		b	.L72
 1635              	.LVL305:
 1636              	.L81:
 583:../user/source/DLT698.c ****         Len += 8;
 1637              		.loc 1 583 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 57


 1638 0352 0924     		movs	r4, #9
 585:../user/source/DLT698.c ****     break;
 1639              		.loc 1 585 0
 1640 0354 05E2     		b	.L72
 1641              	.LVL306:
 1642              	.L82:
 591:../user/source/DLT698.c ****         Len += 8;
 1643              		.loc 1 591 0
 1644 0356 0924     		movs	r4, #9
 593:../user/source/DLT698.c ****     break;
 1645              		.loc 1 593 0
 1646 0358 03E2     		b	.L72
 1647              	.LVL307:
 1648              	.L83:
 607:../user/source/DLT698.c ****         Len += 4;
 1649              		.loc 1 607 0
 1650 035a 0524     		movs	r4, #5
 609:../user/source/DLT698.c ****     break;
 1651              		.loc 1 609 0
 1652 035c 01E2     		b	.L72
 1653              	.LVL308:
 1654              	.L84:
 615:../user/source/DLT698.c ****         Len += 8;
 1655              		.loc 1 615 0
 1656 035e 0924     		movs	r4, #9
 617:../user/source/DLT698.c ****     break;
 1657              		.loc 1 617 0
 1658 0360 FFE1     		b	.L72
 1659              	.LVL309:
 1660              	.L85:
 623:../user/source/DLT698.c ****         Len += 10;
 1661              		.loc 1 623 0
 1662 0362 0B24     		movs	r4, #11
 625:../user/source/DLT698.c ****     break;
 1663              		.loc 1 625 0
 1664 0364 FDE1     		b	.L72
 1665              	.LVL310:
 1666              	.L86:
 631:../user/source/DLT698.c ****         Len += 5;
 1667              		.loc 1 631 0
 1668 0366 0624     		movs	r4, #6
 633:../user/source/DLT698.c ****     break;
 1669              		.loc 1 633 0
 1670 0368 FBE1     		b	.L72
 1671              	.LVL311:
 1672              	.L87:
 639:../user/source/DLT698.c ****         Len += 3;
 1673              		.loc 1 639 0
 1674 036a 0424     		movs	r4, #4
 641:../user/source/DLT698.c ****     break;
 1675              		.loc 1 641 0
 1676 036c F9E1     		b	.L72
 1677              	.LVL312:
 1678              	.L88:
 647:../user/source/DLT698.c ****         Len += 7;
 1679              		.loc 1 647 0
 1680 036e 0824     		movs	r4, #8
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 58


 649:../user/source/DLT698.c ****     break;
 1681              		.loc 1 649 0
 1682 0370 F7E1     		b	.L72
 1683              	.LVL313:
 1684              	.L89:
 655:../user/source/DLT698.c ****         Len += 2;
 1685              		.loc 1 655 0
 1686 0372 0324     		movs	r4, #3
 657:../user/source/DLT698.c ****     break;
 1687              		.loc 1 657 0
 1688 0374 F5E1     		b	.L72
 1689              	.LVL314:
 1690              	.L90:
 663:../user/source/DLT698.c ****         Len += 4;
 1691              		.loc 1 663 0
 1692 0376 0524     		movs	r4, #5
 665:../user/source/DLT698.c ****     break;
 1693              		.loc 1 665 0
 1694 0378 F3E1     		b	.L72
 1695              	.LVL315:
 1696              	.L91:
 1697              	.LBB91:
 1698              	.LBB92:
 173:../user/source/DLT698.c ****     if (0x00 == (ucRcvBuf[0] & 0x80))
 1699              		.loc 1 173 0
 1700 037a 4279     		ldrb	r2, [r0, #5]	@ zero_extendqisi2
 1701 037c 12F0800F 		tst	r2, #128
 1702 0380 01D1     		bne	.L142
 1703              	.LVL316:
 175:../user/source/DLT698.c ****         *LenBytes = 1;
 1704              		.loc 1 175 0
 1705 0382 0124     		movs	r4, #1
 1706 0384 1DE0     		b	.L143
 1707              	.LVL317:
 1708              	.L142:
 179:../user/source/DLT698.c ****     Bytes = ucRcvBuf[0] & 0x7F;
 1709              		.loc 1 179 0
 1710 0386 02F07F02 		and	r2, r2, #127
 1711              	.LVL318:
 181:../user/source/DLT698.c ****     if (Bytes == 1)
 1712              		.loc 1 181 0
 1713 038a 012A     		cmp	r2, #1
 1714 038c 02D1     		bne	.L144
 1715              	.LVL319:
 184:../user/source/DLT698.c ****         return (ucRcvBuf[1]);
 1716              		.loc 1 184 0
 1717 038e 8279     		ldrb	r2, [r0, #6]	@ zero_extendqisi2
 1718              	.LVL320:
 183:../user/source/DLT698.c ****         *LenBytes = 2;
 1719              		.loc 1 183 0
 1720 0390 0224     		movs	r4, #2
 1721 0392 16E0     		b	.L143
 1722              	.LVL321:
 1723              	.L144:
 186:../user/source/DLT698.c ****     else if (Bytes == 2)
 1724              		.loc 1 186 0
 1725 0394 022A     		cmp	r2, #2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 59


 1726 0396 05D1     		bne	.L145
 1727              	.LVL322:
 189:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 8) | (ucRcvBuf[2]));
 1728              		.loc 1 189 0
 1729 0398 8279     		ldrb	r2, [r0, #6]	@ zero_extendqisi2
 1730              	.LVL323:
 1731 039a C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 1732 039c 43EA0222 		orr	r2, r3, r2, lsl #8
 188:../user/source/DLT698.c ****         *LenBytes = 3;
 1733              		.loc 1 188 0
 1734 03a0 0324     		movs	r4, #3
 1735 03a2 0EE0     		b	.L143
 1736              	.LVL324:
 1737              	.L145:
 191:../user/source/DLT698.c ****     else if (Bytes == 3)
 1738              		.loc 1 191 0
 1739 03a4 032A     		cmp	r2, #3
 1740 03a6 03D1     		bne	.L146
 1741              	.LVL325:
 194:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 16) | (ucRcvBuf[2] << 8) & (ucRcvBuf[3]));
 1742              		.loc 1 194 0
 1743 03a8 8279     		ldrb	r2, [r0, #6]	@ zero_extendqisi2
 1744              	.LVL326:
 1745 03aa 1204     		lsls	r2, r2, #16
 193:../user/source/DLT698.c ****         *LenBytes = 4;
 1746              		.loc 1 193 0
 1747 03ac 0424     		movs	r4, #4
 1748 03ae 08E0     		b	.L143
 1749              	.LVL327:
 1750              	.L146:
 196:../user/source/DLT698.c ****     else if (Bytes == 4)
 1751              		.loc 1 196 0
 1752 03b0 042A     		cmp	r2, #4
 1753 03b2 03D1     		bne	.L213
 1754              	.LVL328:
 199:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 24) | (ucRcvBuf[2] << 16) & (ucRcvBuf[3] << 8) & (ucRcvBuf[4]));
 1755              		.loc 1 199 0
 1756 03b4 8279     		ldrb	r2, [r0, #6]	@ zero_extendqisi2
 1757              	.LVL329:
 1758 03b6 1206     		lsls	r2, r2, #24
 198:../user/source/DLT698.c ****         *LenBytes = 5;
 1759              		.loc 1 198 0
 1760 03b8 0524     		movs	r4, #5
 1761 03ba 02E0     		b	.L143
 1762              	.LVL330:
 1763              	.L213:
 1764              	.LBE92:
 1765              	.LBE91:
 388:../user/source/DLT698.c ****     int i = 0, j = 0, Res = 0, varLen = 0, varLenB = 0, LenBytes = 0; // 可变长度
 1766              		.loc 1 388 0
 1767 03bc 0024     		movs	r4, #0
 1768              	.LBB94:
 1769              	.LBB93:
 202:../user/source/DLT698.c ****     return -1;
 1770              		.loc 1 202 0
 1771 03be 4FF0FF32 		mov	r2, #-1
 1772              	.LVL331:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 60


 1773              	.L143:
 1774              	.LBE93:
 1775              	.LBE94:
 672:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 1776              		.loc 1 672 0
 1777 03c2 002A     		cmp	r2, #0
 1778 03c4 C0F2F881 		blt	.L214
 677:../user/source/DLT698.c ****         Len += LenBytes;
 1779              		.loc 1 677 0
 1780 03c8 0534     		adds	r4, r4, #5
 1781              	.LVL332:
 681:../user/source/DLT698.c ****         for (i = 0; i < varLen; i++)
 1782              		.loc 1 681 0
 1783 03ca 0023     		movs	r3, #0
 1784 03cc 02E0     		b	.L147
 1785              	.LVL333:
 1786              	.L148:
 684:../user/source/DLT698.c ****             Len += 4;
 1787              		.loc 1 684 0 discriminator 3
 1788 03ce 0434     		adds	r4, r4, #4
 1789              	.LVL334:
 1790 03d0 A4B2     		uxth	r4, r4
 1791              	.LVL335:
 681:../user/source/DLT698.c ****         for (i = 0; i < varLen; i++)
 1792              		.loc 1 681 0 discriminator 3
 1793 03d2 0133     		adds	r3, r3, #1
 1794              	.LVL336:
 1795              	.L147:
 681:../user/source/DLT698.c ****         for (i = 0; i < varLen; i++)
 1796              		.loc 1 681 0 is_stmt 0 discriminator 1
 1797 03d4 9342     		cmp	r3, r2
 1798 03d6 FADB     		blt	.L148
 1799 03d8 C3E1     		b	.L72
 1800              	.LVL337:
 1801              	.L92:
 693:../user/source/DLT698.c ****         Len += 4;
 1802              		.loc 1 693 0 is_stmt 1
 1803 03da 0524     		movs	r4, #5
 695:../user/source/DLT698.c ****     break;
 1804              		.loc 1 695 0
 1805 03dc C1E1     		b	.L72
 1806              	.LVL338:
 1807              	.L93:
 701:../user/source/DLT698.c ****         Len += 3;
 1808              		.loc 1 701 0
 1809 03de 0424     		movs	r4, #4
 703:../user/source/DLT698.c ****     break;
 1810              		.loc 1 703 0
 1811 03e0 BFE1     		b	.L72
 1812              	.LVL339:
 1813              	.L94:
 1814              	.LBB95:
 1815              	.LBB96:
 173:../user/source/DLT698.c ****     if (0x00 == (ucRcvBuf[0] & 0x80))
 1816              		.loc 1 173 0
 1817 03e2 4478     		ldrb	r4, [r0, #1]	@ zero_extendqisi2
 1818 03e4 14F0800F 		tst	r4, #128
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 61


 1819 03e8 01D1     		bne	.L149
 1820              	.LVL340:
 175:../user/source/DLT698.c ****         *LenBytes = 1;
 1821              		.loc 1 175 0
 1822 03ea 0123     		movs	r3, #1
 1823 03ec 1DE0     		b	.L150
 1824              	.LVL341:
 1825              	.L149:
 179:../user/source/DLT698.c ****     Bytes = ucRcvBuf[0] & 0x7F;
 1826              		.loc 1 179 0
 1827 03ee 04F07F04 		and	r4, r4, #127
 1828              	.LVL342:
 181:../user/source/DLT698.c ****     if (Bytes == 1)
 1829              		.loc 1 181 0
 1830 03f2 012C     		cmp	r4, #1
 1831 03f4 02D1     		bne	.L151
 1832              	.LVL343:
 184:../user/source/DLT698.c ****         return (ucRcvBuf[1]);
 1833              		.loc 1 184 0
 1834 03f6 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 1835              	.LVL344:
 183:../user/source/DLT698.c ****         *LenBytes = 2;
 1836              		.loc 1 183 0
 1837 03f8 0223     		movs	r3, #2
 1838 03fa 16E0     		b	.L150
 1839              	.LVL345:
 1840              	.L151:
 186:../user/source/DLT698.c ****     else if (Bytes == 2)
 1841              		.loc 1 186 0
 1842 03fc 022C     		cmp	r4, #2
 1843 03fe 05D1     		bne	.L152
 1844              	.LVL346:
 189:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 8) | (ucRcvBuf[2]));
 1845              		.loc 1 189 0
 1846 0400 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 1847              	.LVL347:
 1848 0402 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1849 0404 43EA0424 		orr	r4, r3, r4, lsl #8
 188:../user/source/DLT698.c ****         *LenBytes = 3;
 1850              		.loc 1 188 0
 1851 0408 0323     		movs	r3, #3
 1852 040a 0EE0     		b	.L150
 1853              	.LVL348:
 1854              	.L152:
 191:../user/source/DLT698.c ****     else if (Bytes == 3)
 1855              		.loc 1 191 0
 1856 040c 032C     		cmp	r4, #3
 1857 040e 03D1     		bne	.L153
 1858              	.LVL349:
 194:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 16) | (ucRcvBuf[2] << 8) & (ucRcvBuf[3]));
 1859              		.loc 1 194 0
 1860 0410 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 1861              	.LVL350:
 1862 0412 2404     		lsls	r4, r4, #16
 193:../user/source/DLT698.c ****         *LenBytes = 4;
 1863              		.loc 1 193 0
 1864 0414 0423     		movs	r3, #4
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 62


 1865 0416 08E0     		b	.L150
 1866              	.LVL351:
 1867              	.L153:
 196:../user/source/DLT698.c ****     else if (Bytes == 4)
 1868              		.loc 1 196 0
 1869 0418 042C     		cmp	r4, #4
 1870 041a 03D1     		bne	.L215
 1871              	.LVL352:
 199:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 24) | (ucRcvBuf[2] << 16) & (ucRcvBuf[3] << 8) & (ucRcvBuf[4]));
 1872              		.loc 1 199 0
 1873 041c 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 1874              	.LVL353:
 1875 041e 2406     		lsls	r4, r4, #24
 198:../user/source/DLT698.c ****         *LenBytes = 5;
 1876              		.loc 1 198 0
 1877 0420 0523     		movs	r3, #5
 1878 0422 02E0     		b	.L150
 1879              	.LVL354:
 1880              	.L215:
 1881              	.LBE96:
 1882              	.LBE95:
 388:../user/source/DLT698.c ****     int i = 0, j = 0, Res = 0, varLen = 0, varLenB = 0, LenBytes = 0; // 可变长度
 1883              		.loc 1 388 0
 1884 0424 0023     		movs	r3, #0
 1885              	.LBB98:
 1886              	.LBB97:
 202:../user/source/DLT698.c ****     return -1;
 1887              		.loc 1 202 0
 1888 0426 4FF0FF34 		mov	r4, #-1
 1889              	.LVL355:
 1890              	.L150:
 1891              	.LBE97:
 1892              	.LBE98:
 707:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 1893              		.loc 1 707 0
 1894 042a 002C     		cmp	r4, #0
 1895 042c C0F2C881 		blt	.L216
 712:../user/source/DLT698.c ****         Len += LenBytes;
 1896              		.loc 1 712 0
 1897 0430 0133     		adds	r3, r3, #1
 1898              	.LVL356:
 717:../user/source/DLT698.c ****         Len += varLen;
 1899              		.loc 1 717 0
 1900 0432 1C44     		add	r4, r4, r3
 1901 0434 A4B2     		uxth	r4, r4
 1902              	.LVL357:
 719:../user/source/DLT698.c ****     break;
 1903              		.loc 1 719 0
 1904 0436 94E1     		b	.L72
 1905              	.LVL358:
 1906              	.L95:
 1907              	.LBB99:
 1908              	.LBB100:
 173:../user/source/DLT698.c ****     if (0x00 == (ucRcvBuf[0] & 0x80))
 1909              		.loc 1 173 0
 1910 0438 4478     		ldrb	r4, [r0, #1]	@ zero_extendqisi2
 1911 043a 14F0800F 		tst	r4, #128
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 63


 1912 043e 01D1     		bne	.L154
 1913              	.LVL359:
 175:../user/source/DLT698.c ****         *LenBytes = 1;
 1914              		.loc 1 175 0
 1915 0440 0123     		movs	r3, #1
 1916 0442 1DE0     		b	.L155
 1917              	.LVL360:
 1918              	.L154:
 179:../user/source/DLT698.c ****     Bytes = ucRcvBuf[0] & 0x7F;
 1919              		.loc 1 179 0
 1920 0444 04F07F04 		and	r4, r4, #127
 1921              	.LVL361:
 181:../user/source/DLT698.c ****     if (Bytes == 1)
 1922              		.loc 1 181 0
 1923 0448 012C     		cmp	r4, #1
 1924 044a 02D1     		bne	.L156
 1925              	.LVL362:
 184:../user/source/DLT698.c ****         return (ucRcvBuf[1]);
 1926              		.loc 1 184 0
 1927 044c 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 1928              	.LVL363:
 183:../user/source/DLT698.c ****         *LenBytes = 2;
 1929              		.loc 1 183 0
 1930 044e 0223     		movs	r3, #2
 1931 0450 16E0     		b	.L155
 1932              	.LVL364:
 1933              	.L156:
 186:../user/source/DLT698.c ****     else if (Bytes == 2)
 1934              		.loc 1 186 0
 1935 0452 022C     		cmp	r4, #2
 1936 0454 05D1     		bne	.L157
 1937              	.LVL365:
 189:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 8) | (ucRcvBuf[2]));
 1938              		.loc 1 189 0
 1939 0456 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 1940              	.LVL366:
 1941 0458 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1942 045a 43EA0424 		orr	r4, r3, r4, lsl #8
 188:../user/source/DLT698.c ****         *LenBytes = 3;
 1943              		.loc 1 188 0
 1944 045e 0323     		movs	r3, #3
 1945 0460 0EE0     		b	.L155
 1946              	.LVL367:
 1947              	.L157:
 191:../user/source/DLT698.c ****     else if (Bytes == 3)
 1948              		.loc 1 191 0
 1949 0462 032C     		cmp	r4, #3
 1950 0464 03D1     		bne	.L158
 1951              	.LVL368:
 194:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 16) | (ucRcvBuf[2] << 8) & (ucRcvBuf[3]));
 1952              		.loc 1 194 0
 1953 0466 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 1954              	.LVL369:
 1955 0468 2404     		lsls	r4, r4, #16
 193:../user/source/DLT698.c ****         *LenBytes = 4;
 1956              		.loc 1 193 0
 1957 046a 0423     		movs	r3, #4
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 64


 1958 046c 08E0     		b	.L155
 1959              	.LVL370:
 1960              	.L158:
 196:../user/source/DLT698.c ****     else if (Bytes == 4)
 1961              		.loc 1 196 0
 1962 046e 042C     		cmp	r4, #4
 1963 0470 03D1     		bne	.L217
 1964              	.LVL371:
 199:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 24) | (ucRcvBuf[2] << 16) & (ucRcvBuf[3] << 8) & (ucRcvBuf[4]));
 1965              		.loc 1 199 0
 1966 0472 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 1967              	.LVL372:
 1968 0474 2406     		lsls	r4, r4, #24
 198:../user/source/DLT698.c ****         *LenBytes = 5;
 1969              		.loc 1 198 0
 1970 0476 0523     		movs	r3, #5
 1971 0478 02E0     		b	.L155
 1972              	.LVL373:
 1973              	.L217:
 1974              	.LBE100:
 1975              	.LBE99:
 388:../user/source/DLT698.c ****     int i = 0, j = 0, Res = 0, varLen = 0, varLenB = 0, LenBytes = 0; // 可变长度
 1976              		.loc 1 388 0
 1977 047a 0023     		movs	r3, #0
 1978              	.LBB102:
 1979              	.LBB101:
 202:../user/source/DLT698.c ****     return -1;
 1980              		.loc 1 202 0
 1981 047c 4FF0FF34 		mov	r4, #-1
 1982              	.LVL374:
 1983              	.L155:
 1984              	.LBE101:
 1985              	.LBE102:
 724:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 1986              		.loc 1 724 0
 1987 0480 002C     		cmp	r4, #0
 1988 0482 C0F2A181 		blt	.L218
 729:../user/source/DLT698.c ****         Len += LenBytes;
 1989              		.loc 1 729 0
 1990 0486 0133     		adds	r3, r3, #1
 1991              	.LVL375:
 734:../user/source/DLT698.c ****         Len += varLen;
 1992              		.loc 1 734 0
 1993 0488 1C44     		add	r4, r4, r3
 1994 048a A4B2     		uxth	r4, r4
 1995              	.LVL376:
 736:../user/source/DLT698.c ****     break;
 1996              		.loc 1 736 0
 1997 048c 69E1     		b	.L72
 1998              	.LVL377:
 1999              	.L96:
 741:../user/source/DLT698.c ****         Ptr += 1;
 2000              		.loc 1 741 0
 2001 048e 861C     		adds	r6, r0, #2
 2002              	.LVL378:
 744:../user/source/DLT698.c ****         if ((Res = dwDlt698DataLen(Ptr, dwRcvLen - Len)) < 0)
 2003              		.loc 1 744 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 65


 2004 0490 A91E     		subs	r1, r5, #2
 2005 0492 3046     		mov	r0, r6
 2006              	.LVL379:
 2007 0494 FFF7B4FD 		bl	dwDlt698DataLen
 2008              	.LVL380:
 2009 0498 0028     		cmp	r0, #0
 2010 049a C0F29981 		blt	.L219
 2011              	.LVL381:
 749:../user/source/DLT698.c ****         Len += Res;
 2012              		.loc 1 749 0
 2013 049e 841C     		adds	r4, r0, #2
 2014 04a0 A4B2     		uxth	r4, r4
 2015              	.LVL382:
 751:../user/source/DLT698.c ****         if ((Res = dwDlt698DataLen(Ptr, dwRcvLen - Len)) < 0)
 2016              		.loc 1 751 0
 2017 04a2 291B     		subs	r1, r5, r4
 2018 04a4 3044     		add	r0, r0, r6
 2019              	.LVL383:
 2020 04a6 FFF7ABFD 		bl	dwDlt698DataLen
 2021              	.LVL384:
 2022 04aa 0028     		cmp	r0, #0
 2023 04ac C0F29481 		blt	.L220
 756:../user/source/DLT698.c ****         Len += Res;
 2024              		.loc 1 756 0
 2025 04b0 0444     		add	r4, r4, r0
 2026              	.LVL385:
 2027 04b2 A4B2     		uxth	r4, r4
 2028              	.LVL386:
 758:../user/source/DLT698.c ****     break;
 2029              		.loc 1 758 0
 2030 04b4 55E1     		b	.L72
 2031              	.LVL387:
 2032              	.L97:
 767:../user/source/DLT698.c ****         Len += 1; // ENUMERATED
 2033              		.loc 1 767 0
 2034 04b6 0324     		movs	r4, #3
 769:../user/source/DLT698.c ****     break;
 2035              		.loc 1 769 0
 2036 04b8 53E1     		b	.L72
 2037              	.LVL388:
 2038              	.L98:
 2039              	.LBB103:
 772:../user/source/DLT698.c ****         if ((Res = dwDlt698RSDLen(Ptr, dwRcvLen - Len)) < 0)
 2040              		.loc 1 772 0
 2041 04ba 691E     		subs	r1, r5, #1
 2042 04bc 1046     		mov	r0, r2
 2043              	.LVL389:
 2044 04be FFF7FEFF 		bl	dwDlt698RSDLen
 2045              	.LVL390:
 2046 04c2 0028     		cmp	r0, #0
 2047 04c4 C0F28C81 		blt	.L221
 2048              	.LVL391:
 2049              	.LBE103:
 778:../user/source/DLT698.c ****         Len += Res;
 2050              		.loc 1 778 0
 2051 04c8 0130     		adds	r0, r0, #1
 2052              	.LVL392:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 66


 2053 04ca 84B2     		uxth	r4, r0
 2054              	.LVL393:
 780:../user/source/DLT698.c ****     break;
 2055              		.loc 1 780 0
 2056 04cc 49E1     		b	.L72
 2057              	.LVL394:
 2058              	.L99:
 783:../user/source/DLT698.c ****         if (*Ptr == 0)
 2059              		.loc 1 783 0
 2060 04ce 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 2061 04d0 002B     		cmp	r3, #0
 2062 04d2 00F04581 		beq	.L222
 791:../user/source/DLT698.c ****         else if (*Ptr == 1)
 2063              		.loc 1 791 0
 2064 04d6 012B     		cmp	r3, #1
 2065 04d8 40F08681 		bne	.L223
 2066              	.LVL395:
 2067              	.LBB104:
 2068              	.LBB105:
 173:../user/source/DLT698.c ****     if (0x00 == (ucRcvBuf[0] & 0x80))
 2069              		.loc 1 173 0
 2070 04dc 8279     		ldrb	r2, [r0, #6]	@ zero_extendqisi2
 2071 04de 12F0800F 		tst	r2, #128
 2072 04e2 01D1     		bne	.L159
 2073              	.LVL396:
 175:../user/source/DLT698.c ****         *LenBytes = 1;
 2074              		.loc 1 175 0
 2075 04e4 0124     		movs	r4, #1
 2076 04e6 1DE0     		b	.L160
 2077              	.LVL397:
 2078              	.L159:
 179:../user/source/DLT698.c ****     Bytes = ucRcvBuf[0] & 0x7F;
 2079              		.loc 1 179 0
 2080 04e8 02F07F02 		and	r2, r2, #127
 2081              	.LVL398:
 181:../user/source/DLT698.c ****     if (Bytes == 1)
 2082              		.loc 1 181 0
 2083 04ec 012A     		cmp	r2, #1
 2084 04ee 02D1     		bne	.L161
 2085              	.LVL399:
 184:../user/source/DLT698.c ****         return (ucRcvBuf[1]);
 2086              		.loc 1 184 0
 2087 04f0 C279     		ldrb	r2, [r0, #7]	@ zero_extendqisi2
 2088              	.LVL400:
 183:../user/source/DLT698.c ****         *LenBytes = 2;
 2089              		.loc 1 183 0
 2090 04f2 0224     		movs	r4, #2
 2091 04f4 16E0     		b	.L160
 2092              	.LVL401:
 2093              	.L161:
 186:../user/source/DLT698.c ****     else if (Bytes == 2)
 2094              		.loc 1 186 0
 2095 04f6 022A     		cmp	r2, #2
 2096 04f8 05D1     		bne	.L162
 2097              	.LVL402:
 189:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 8) | (ucRcvBuf[2]));
 2098              		.loc 1 189 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 67


 2099 04fa C279     		ldrb	r2, [r0, #7]	@ zero_extendqisi2
 2100              	.LVL403:
 2101 04fc 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 2102 04fe 43EA0222 		orr	r2, r3, r2, lsl #8
 188:../user/source/DLT698.c ****         *LenBytes = 3;
 2103              		.loc 1 188 0
 2104 0502 0324     		movs	r4, #3
 2105 0504 0EE0     		b	.L160
 2106              	.LVL404:
 2107              	.L162:
 191:../user/source/DLT698.c ****     else if (Bytes == 3)
 2108              		.loc 1 191 0
 2109 0506 032A     		cmp	r2, #3
 2110 0508 03D1     		bne	.L163
 2111              	.LVL405:
 194:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 16) | (ucRcvBuf[2] << 8) & (ucRcvBuf[3]));
 2112              		.loc 1 194 0
 2113 050a C279     		ldrb	r2, [r0, #7]	@ zero_extendqisi2
 2114              	.LVL406:
 2115 050c 1204     		lsls	r2, r2, #16
 193:../user/source/DLT698.c ****         *LenBytes = 4;
 2116              		.loc 1 193 0
 2117 050e 0424     		movs	r4, #4
 2118 0510 08E0     		b	.L160
 2119              	.LVL407:
 2120              	.L163:
 196:../user/source/DLT698.c ****     else if (Bytes == 4)
 2121              		.loc 1 196 0
 2122 0512 042A     		cmp	r2, #4
 2123 0514 03D1     		bne	.L224
 2124              	.LVL408:
 199:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 24) | (ucRcvBuf[2] << 16) & (ucRcvBuf[3] << 8) & (ucRcvBuf[4]));
 2125              		.loc 1 199 0
 2126 0516 C279     		ldrb	r2, [r0, #7]	@ zero_extendqisi2
 2127              	.LVL409:
 2128 0518 1206     		lsls	r2, r2, #24
 198:../user/source/DLT698.c ****         *LenBytes = 5;
 2129              		.loc 1 198 0
 2130 051a 0524     		movs	r4, #5
 2131 051c 02E0     		b	.L160
 2132              	.LVL410:
 2133              	.L224:
 2134              	.LBE105:
 2135              	.LBE104:
 388:../user/source/DLT698.c ****     int i = 0, j = 0, Res = 0, varLen = 0, varLenB = 0, LenBytes = 0; // 可变长度
 2136              		.loc 1 388 0
 2137 051e 0024     		movs	r4, #0
 2138              	.LBB107:
 2139              	.LBB106:
 202:../user/source/DLT698.c ****     return -1;
 2140              		.loc 1 202 0
 2141 0520 4FF0FF32 		mov	r2, #-1
 2142              	.LVL411:
 2143              	.L160:
 2144              	.LBE106:
 2145              	.LBE107:
 800:../user/source/DLT698.c ****             if ((varLenB = dwDlt698Len(Ptr, &LenBytes)) < 0)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 68


 2146              		.loc 1 800 0
 2147 0524 002A     		cmp	r2, #0
 2148 0526 C0F26381 		blt	.L225
 805:../user/source/DLT698.c ****             Len += LenBytes;
 2149              		.loc 1 805 0
 2150 052a 0634     		adds	r4, r4, #6
 2151              	.LVL412:
 809:../user/source/DLT698.c ****             for (j = 0; j < varLenB; j++)
 2152              		.loc 1 809 0
 2153 052c 0023     		movs	r3, #0
 2154 052e 05E0     		b	.L164
 2155              	.LVL413:
 2156              	.L165:
 811:../user/source/DLT698.c ****                 if (Len > dwRcvLen)
 2157              		.loc 1 811 0
 2158 0530 A542     		cmp	r5, r4
 2159 0532 C0F26181 		blt	.L226
 817:../user/source/DLT698.c ****                 Len += 4;
 2160              		.loc 1 817 0 discriminator 2
 2161 0536 0434     		adds	r4, r4, #4
 2162              	.LVL414:
 2163 0538 A4B2     		uxth	r4, r4
 2164              	.LVL415:
 809:../user/source/DLT698.c ****             for (j = 0; j < varLenB; j++)
 2165              		.loc 1 809 0 discriminator 2
 2166 053a 0133     		adds	r3, r3, #1
 2167              	.LVL416:
 2168              	.L164:
 809:../user/source/DLT698.c ****             for (j = 0; j < varLenB; j++)
 2169              		.loc 1 809 0 is_stmt 0 discriminator 1
 2170 053c 9342     		cmp	r3, r2
 2171 053e F7DB     		blt	.L165
 2172 0540 0FE1     		b	.L72
 2173              	.LVL417:
 2174              	.L100:
 2175              	.LBB108:
 828:../user/source/DLT698.c ****         if ((Res = dwDlt698MsLen(Ptr, dwRcvLen - Len)) < 0)
 2176              		.loc 1 828 0 is_stmt 1
 2177 0542 691E     		subs	r1, r5, #1
 2178 0544 1046     		mov	r0, r2
 2179              	.LVL418:
 2180 0546 FFF7FEFF 		bl	dwDlt698MsLen
 2181              	.LVL419:
 2182 054a 0028     		cmp	r0, #0
 2183 054c C0F25881 		blt	.L227
 2184              	.LVL420:
 2185              	.LBE108:
 834:../user/source/DLT698.c ****         Len += Res;
 2186              		.loc 1 834 0
 2187 0550 0130     		adds	r0, r0, #1
 2188              	.LVL421:
 2189 0552 84B2     		uxth	r4, r0
 2190              	.LVL422:
 836:../user/source/DLT698.c ****     break;
 2191              		.loc 1 836 0
 2192 0554 05E1     		b	.L72
 2193              	.LVL423:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 69


 2194              	.L101:
 2195              	.LBB109:
 2196              	.LBB110:
 173:../user/source/DLT698.c ****     if (0x00 == (ucRcvBuf[0] & 0x80))
 2197              		.loc 1 173 0
 2198 0556 4479     		ldrb	r4, [r0, #5]	@ zero_extendqisi2
 2199 0558 14F0800F 		tst	r4, #128
 2200 055c 01D1     		bne	.L166
 2201              	.LVL424:
 175:../user/source/DLT698.c ****         *LenBytes = 1;
 2202              		.loc 1 175 0
 2203 055e 0123     		movs	r3, #1
 2204 0560 1DE0     		b	.L167
 2205              	.LVL425:
 2206              	.L166:
 179:../user/source/DLT698.c ****     Bytes = ucRcvBuf[0] & 0x7F;
 2207              		.loc 1 179 0
 2208 0562 04F07F04 		and	r4, r4, #127
 2209              	.LVL426:
 181:../user/source/DLT698.c ****     if (Bytes == 1)
 2210              		.loc 1 181 0
 2211 0566 012C     		cmp	r4, #1
 2212 0568 02D1     		bne	.L168
 2213              	.LVL427:
 184:../user/source/DLT698.c ****         return (ucRcvBuf[1]);
 2214              		.loc 1 184 0
 2215 056a 8479     		ldrb	r4, [r0, #6]	@ zero_extendqisi2
 2216              	.LVL428:
 183:../user/source/DLT698.c ****         *LenBytes = 2;
 2217              		.loc 1 183 0
 2218 056c 0223     		movs	r3, #2
 2219 056e 16E0     		b	.L167
 2220              	.LVL429:
 2221              	.L168:
 186:../user/source/DLT698.c ****     else if (Bytes == 2)
 2222              		.loc 1 186 0
 2223 0570 022C     		cmp	r4, #2
 2224 0572 05D1     		bne	.L169
 2225              	.LVL430:
 189:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 8) | (ucRcvBuf[2]));
 2226              		.loc 1 189 0
 2227 0574 8479     		ldrb	r4, [r0, #6]	@ zero_extendqisi2
 2228              	.LVL431:
 2229 0576 C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 2230 0578 43EA0424 		orr	r4, r3, r4, lsl #8
 188:../user/source/DLT698.c ****         *LenBytes = 3;
 2231              		.loc 1 188 0
 2232 057c 0323     		movs	r3, #3
 2233 057e 0EE0     		b	.L167
 2234              	.LVL432:
 2235              	.L169:
 191:../user/source/DLT698.c ****     else if (Bytes == 3)
 2236              		.loc 1 191 0
 2237 0580 032C     		cmp	r4, #3
 2238 0582 03D1     		bne	.L170
 2239              	.LVL433:
 194:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 16) | (ucRcvBuf[2] << 8) & (ucRcvBuf[3]));
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 70


 2240              		.loc 1 194 0
 2241 0584 8479     		ldrb	r4, [r0, #6]	@ zero_extendqisi2
 2242              	.LVL434:
 2243 0586 2404     		lsls	r4, r4, #16
 193:../user/source/DLT698.c ****         *LenBytes = 4;
 2244              		.loc 1 193 0
 2245 0588 0423     		movs	r3, #4
 2246 058a 08E0     		b	.L167
 2247              	.LVL435:
 2248              	.L170:
 196:../user/source/DLT698.c ****     else if (Bytes == 4)
 2249              		.loc 1 196 0
 2250 058c 042C     		cmp	r4, #4
 2251 058e 03D1     		bne	.L228
 2252              	.LVL436:
 199:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 24) | (ucRcvBuf[2] << 16) & (ucRcvBuf[3] << 8) & (ucRcvBuf[4]));
 2253              		.loc 1 199 0
 2254 0590 8479     		ldrb	r4, [r0, #6]	@ zero_extendqisi2
 2255              	.LVL437:
 2256 0592 2406     		lsls	r4, r4, #24
 198:../user/source/DLT698.c ****         *LenBytes = 5;
 2257              		.loc 1 198 0
 2258 0594 0523     		movs	r3, #5
 2259 0596 02E0     		b	.L167
 2260              	.LVL438:
 2261              	.L228:
 2262              	.LBE110:
 2263              	.LBE109:
 388:../user/source/DLT698.c ****     int i = 0, j = 0, Res = 0, varLen = 0, varLenB = 0, LenBytes = 0; // 可变长度
 2264              		.loc 1 388 0
 2265 0598 0023     		movs	r3, #0
 2266              	.LBB112:
 2267              	.LBB111:
 202:../user/source/DLT698.c ****     return -1;
 2268              		.loc 1 202 0
 2269 059a 4FF0FF34 		mov	r4, #-1
 2270              	.LVL439:
 2271              	.L167:
 2272              	.LBE111:
 2273              	.LBE112:
 844:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 2274              		.loc 1 844 0
 2275 059e 002C     		cmp	r4, #0
 2276 05a0 C0F23281 		blt	.L229
 849:../user/source/DLT698.c ****         Len += LenBytes;
 2277              		.loc 1 849 0
 2278 05a4 0533     		adds	r3, r3, #5
 2279              	.LVL440:
 853:../user/source/DLT698.c ****         Len += varLen;
 2280              		.loc 1 853 0
 2281 05a6 1C44     		add	r4, r4, r3
 2282 05a8 A4B2     		uxth	r4, r4
 2283              	.LVL441:
 855:../user/source/DLT698.c ****     break;
 2284              		.loc 1 855 0
 2285 05aa DAE0     		b	.L72
 2286              	.LVL442:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 71


 2287              	.L102:
 859:../user/source/DLT698.c ****         Ptr += 4;
 2288              		.loc 1 859 0
 2289 05ac 441D     		adds	r4, r0, #5
 2290              	.LVL443:
 2291              	.LBB113:
 2292              	.LBB114:
 173:../user/source/DLT698.c ****     if (0x00 == (ucRcvBuf[0] & 0x80))
 2293              		.loc 1 173 0
 2294 05ae 4379     		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 2295 05b0 13F0800F 		tst	r3, #128
 2296 05b4 01D1     		bne	.L171
 2297              	.LVL444:
 175:../user/source/DLT698.c ****         *LenBytes = 1;
 2298              		.loc 1 175 0
 2299 05b6 0122     		movs	r2, #1
 2300 05b8 1DE0     		b	.L172
 2301              	.LVL445:
 2302              	.L171:
 179:../user/source/DLT698.c ****     Bytes = ucRcvBuf[0] & 0x7F;
 2303              		.loc 1 179 0
 2304 05ba 03F07F03 		and	r3, r3, #127
 2305              	.LVL446:
 181:../user/source/DLT698.c ****     if (Bytes == 1)
 2306              		.loc 1 181 0
 2307 05be 012B     		cmp	r3, #1
 2308 05c0 02D1     		bne	.L173
 2309              	.LVL447:
 184:../user/source/DLT698.c ****         return (ucRcvBuf[1]);
 2310              		.loc 1 184 0
 2311 05c2 8379     		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 2312              	.LVL448:
 183:../user/source/DLT698.c ****         *LenBytes = 2;
 2313              		.loc 1 183 0
 2314 05c4 0222     		movs	r2, #2
 2315 05c6 16E0     		b	.L172
 2316              	.LVL449:
 2317              	.L173:
 186:../user/source/DLT698.c ****     else if (Bytes == 2)
 2318              		.loc 1 186 0
 2319 05c8 022B     		cmp	r3, #2
 2320 05ca 05D1     		bne	.L174
 2321              	.LVL450:
 189:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 8) | (ucRcvBuf[2]));
 2322              		.loc 1 189 0
 2323 05cc 8279     		ldrb	r2, [r0, #6]	@ zero_extendqisi2
 2324 05ce C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 2325              	.LVL451:
 2326 05d0 43EA0223 		orr	r3, r3, r2, lsl #8
 188:../user/source/DLT698.c ****         *LenBytes = 3;
 2327              		.loc 1 188 0
 2328 05d4 0322     		movs	r2, #3
 2329 05d6 0EE0     		b	.L172
 2330              	.LVL452:
 2331              	.L174:
 191:../user/source/DLT698.c ****     else if (Bytes == 3)
 2332              		.loc 1 191 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 72


 2333 05d8 032B     		cmp	r3, #3
 2334 05da 03D1     		bne	.L175
 2335              	.LVL453:
 194:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 16) | (ucRcvBuf[2] << 8) & (ucRcvBuf[3]));
 2336              		.loc 1 194 0
 2337 05dc 8379     		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 2338              	.LVL454:
 2339 05de 1B04     		lsls	r3, r3, #16
 193:../user/source/DLT698.c ****         *LenBytes = 4;
 2340              		.loc 1 193 0
 2341 05e0 0422     		movs	r2, #4
 2342 05e2 08E0     		b	.L172
 2343              	.LVL455:
 2344              	.L175:
 196:../user/source/DLT698.c ****     else if (Bytes == 4)
 2345              		.loc 1 196 0
 2346 05e4 042B     		cmp	r3, #4
 2347 05e6 03D1     		bne	.L230
 2348              	.LVL456:
 199:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 24) | (ucRcvBuf[2] << 16) & (ucRcvBuf[3] << 8) & (ucRcvBuf[4]));
 2349              		.loc 1 199 0
 2350 05e8 8379     		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 2351              	.LVL457:
 2352 05ea 1B06     		lsls	r3, r3, #24
 198:../user/source/DLT698.c ****         *LenBytes = 5;
 2353              		.loc 1 198 0
 2354 05ec 0522     		movs	r2, #5
 2355 05ee 02E0     		b	.L172
 2356              	.LVL458:
 2357              	.L230:
 2358              	.LBE114:
 2359              	.LBE113:
 388:../user/source/DLT698.c ****     int i = 0, j = 0, Res = 0, varLen = 0, varLenB = 0, LenBytes = 0; // 可变长度
 2360              		.loc 1 388 0
 2361 05f0 0022     		movs	r2, #0
 2362              	.LBB116:
 2363              	.LBB115:
 202:../user/source/DLT698.c ****     return -1;
 2364              		.loc 1 202 0
 2365 05f2 4FF0FF33 		mov	r3, #-1
 2366              	.LVL459:
 2367              	.L172:
 2368              	.LBE115:
 2369              	.LBE116:
 862:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 2370              		.loc 1 862 0
 2371 05f6 002B     		cmp	r3, #0
 2372 05f8 C0F20A81 		blt	.L231
 867:../user/source/DLT698.c ****         Len += LenBytes;
 2373              		.loc 1 867 0
 2374 05fc 511D     		adds	r1, r2, #5
 2375              	.LVL460:
 870:../user/source/DLT698.c ****         Ptr += varLen;
 2376              		.loc 1 870 0
 2377 05fe D018     		adds	r0, r2, r3
 2378              	.LVL461:
 2379 0600 2618     		adds	r6, r4, r0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 73


 2380              	.LVL462:
 871:../user/source/DLT698.c ****         Len += varLen;
 2381              		.loc 1 871 0
 2382 0602 0B44     		add	r3, r3, r1
 2383 0604 9BB2     		uxth	r3, r3
 2384              	.LVL463:
 2385              	.LBB117:
 2386              	.LBB118:
 173:../user/source/DLT698.c ****     if (0x00 == (ucRcvBuf[0] & 0x80))
 2387              		.loc 1 173 0
 2388 0606 245C     		ldrb	r4, [r4, r0]	@ zero_extendqisi2
 2389              	.LVL464:
 2390 0608 14F0800F 		tst	r4, #128
 2391 060c 01D1     		bne	.L176
 2392              	.LVL465:
 175:../user/source/DLT698.c ****         *LenBytes = 1;
 2393              		.loc 1 175 0
 2394 060e 0122     		movs	r2, #1
 2395 0610 1CE0     		b	.L177
 2396              	.LVL466:
 2397              	.L176:
 179:../user/source/DLT698.c ****     Bytes = ucRcvBuf[0] & 0x7F;
 2398              		.loc 1 179 0
 2399 0612 04F07F04 		and	r4, r4, #127
 2400              	.LVL467:
 181:../user/source/DLT698.c ****     if (Bytes == 1)
 2401              		.loc 1 181 0
 2402 0616 012C     		cmp	r4, #1
 2403 0618 02D1     		bne	.L178
 2404              	.LVL468:
 184:../user/source/DLT698.c ****         return (ucRcvBuf[1]);
 2405              		.loc 1 184 0
 2406 061a 7478     		ldrb	r4, [r6, #1]	@ zero_extendqisi2
 2407              	.LVL469:
 183:../user/source/DLT698.c ****         *LenBytes = 2;
 2408              		.loc 1 183 0
 2409 061c 0222     		movs	r2, #2
 2410 061e 15E0     		b	.L177
 2411              	.LVL470:
 2412              	.L178:
 186:../user/source/DLT698.c ****     else if (Bytes == 2)
 2413              		.loc 1 186 0
 2414 0620 022C     		cmp	r4, #2
 2415 0622 05D1     		bne	.L179
 2416              	.LVL471:
 189:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 8) | (ucRcvBuf[2]));
 2417              		.loc 1 189 0
 2418 0624 7478     		ldrb	r4, [r6, #1]	@ zero_extendqisi2
 2419              	.LVL472:
 2420 0626 B278     		ldrb	r2, [r6, #2]	@ zero_extendqisi2
 2421 0628 42EA0424 		orr	r4, r2, r4, lsl #8
 188:../user/source/DLT698.c ****         *LenBytes = 3;
 2422              		.loc 1 188 0
 2423 062c 0322     		movs	r2, #3
 2424 062e 0DE0     		b	.L177
 2425              	.LVL473:
 2426              	.L179:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 74


 191:../user/source/DLT698.c ****     else if (Bytes == 3)
 2427              		.loc 1 191 0
 2428 0630 032C     		cmp	r4, #3
 2429 0632 03D1     		bne	.L180
 2430              	.LVL474:
 194:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 16) | (ucRcvBuf[2] << 8) & (ucRcvBuf[3]));
 2431              		.loc 1 194 0
 2432 0634 7478     		ldrb	r4, [r6, #1]	@ zero_extendqisi2
 2433              	.LVL475:
 2434 0636 2404     		lsls	r4, r4, #16
 193:../user/source/DLT698.c ****         *LenBytes = 4;
 2435              		.loc 1 193 0
 2436 0638 0422     		movs	r2, #4
 2437 063a 07E0     		b	.L177
 2438              	.LVL476:
 2439              	.L180:
 196:../user/source/DLT698.c ****     else if (Bytes == 4)
 2440              		.loc 1 196 0
 2441 063c 042C     		cmp	r4, #4
 2442 063e 03D1     		bne	.L232
 2443              	.LVL477:
 199:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 24) | (ucRcvBuf[2] << 16) & (ucRcvBuf[3] << 8) & (ucRcvBuf[4]));
 2444              		.loc 1 199 0
 2445 0640 7478     		ldrb	r4, [r6, #1]	@ zero_extendqisi2
 2446              	.LVL478:
 2447 0642 2406     		lsls	r4, r4, #24
 198:../user/source/DLT698.c ****         *LenBytes = 5;
 2448              		.loc 1 198 0
 2449 0644 0522     		movs	r2, #5
 2450 0646 01E0     		b	.L177
 2451              	.LVL479:
 2452              	.L232:
 202:../user/source/DLT698.c ****     return -1;
 2453              		.loc 1 202 0
 2454 0648 4FF0FF34 		mov	r4, #-1
 2455              	.LVL480:
 2456              	.L177:
 2457              	.LBE118:
 2458              	.LBE117:
 874:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 2459              		.loc 1 874 0
 2460 064c 002C     		cmp	r4, #0
 2461 064e C0F2E380 		blt	.L233
 879:../user/source/DLT698.c ****         Len += LenBytes;
 2462              		.loc 1 879 0
 2463 0652 1344     		add	r3, r3, r2
 2464              	.LVL481:
 883:../user/source/DLT698.c ****         Len += varLen;
 2465              		.loc 1 883 0
 2466 0654 14FA83F4 		uxtah	r4, r4, r3
 2467 0658 A4B2     		uxth	r4, r4
 2468              	.LVL482:
 885:../user/source/DLT698.c ****     break;
 2469              		.loc 1 885 0
 2470 065a 82E0     		b	.L72
 2471              	.LVL483:
 2472              	.L103:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 75


 889:../user/source/DLT698.c ****         Len += 5;
 2473              		.loc 1 889 0
 2474 065c 0624     		movs	r4, #6
 891:../user/source/DLT698.c ****     break;
 2475              		.loc 1 891 0
 2476 065e 80E0     		b	.L72
 2477              	.LVL484:
 2478              	.L104:
 2479              	.LBB119:
 2480              	.LBB120:
 173:../user/source/DLT698.c ****     if (0x00 == (ucRcvBuf[0] & 0x80))
 2481              		.loc 1 173 0
 2482 0660 4678     		ldrb	r6, [r0, #1]	@ zero_extendqisi2
 2483 0662 16F0800F 		tst	r6, #128
 2484 0666 02D1     		bne	.L181
 2485              	.LVL485:
 175:../user/source/DLT698.c ****         *LenBytes = 1;
 2486              		.loc 1 175 0
 2487 0668 4FF0010E 		mov	lr, #1
 2488 066c 22E0     		b	.L182
 2489              	.LVL486:
 2490              	.L181:
 179:../user/source/DLT698.c ****     Bytes = ucRcvBuf[0] & 0x7F;
 2491              		.loc 1 179 0
 2492 066e 06F07F06 		and	r6, r6, #127
 2493              	.LVL487:
 181:../user/source/DLT698.c ****     if (Bytes == 1)
 2494              		.loc 1 181 0
 2495 0672 012E     		cmp	r6, #1
 2496 0674 03D1     		bne	.L183
 2497              	.LVL488:
 184:../user/source/DLT698.c ****         return (ucRcvBuf[1]);
 2498              		.loc 1 184 0
 2499 0676 8678     		ldrb	r6, [r0, #2]	@ zero_extendqisi2
 2500              	.LVL489:
 183:../user/source/DLT698.c ****         *LenBytes = 2;
 2501              		.loc 1 183 0
 2502 0678 4FF0020E 		mov	lr, #2
 2503 067c 1AE0     		b	.L182
 2504              	.LVL490:
 2505              	.L183:
 186:../user/source/DLT698.c ****     else if (Bytes == 2)
 2506              		.loc 1 186 0
 2507 067e 022E     		cmp	r6, #2
 2508 0680 06D1     		bne	.L184
 2509              	.LVL491:
 189:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 8) | (ucRcvBuf[2]));
 2510              		.loc 1 189 0
 2511 0682 8678     		ldrb	r6, [r0, #2]	@ zero_extendqisi2
 2512              	.LVL492:
 2513 0684 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 2514 0686 43EA0626 		orr	r6, r3, r6, lsl #8
 188:../user/source/DLT698.c ****         *LenBytes = 3;
 2515              		.loc 1 188 0
 2516 068a 4FF0030E 		mov	lr, #3
 2517 068e 11E0     		b	.L182
 2518              	.LVL493:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 76


 2519              	.L184:
 191:../user/source/DLT698.c ****     else if (Bytes == 3)
 2520              		.loc 1 191 0
 2521 0690 032E     		cmp	r6, #3
 2522 0692 04D1     		bne	.L185
 2523              	.LVL494:
 194:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 16) | (ucRcvBuf[2] << 8) & (ucRcvBuf[3]));
 2524              		.loc 1 194 0
 2525 0694 8678     		ldrb	r6, [r0, #2]	@ zero_extendqisi2
 2526              	.LVL495:
 2527 0696 3604     		lsls	r6, r6, #16
 193:../user/source/DLT698.c ****         *LenBytes = 4;
 2528              		.loc 1 193 0
 2529 0698 4FF0040E 		mov	lr, #4
 2530 069c 0AE0     		b	.L182
 2531              	.LVL496:
 2532              	.L185:
 196:../user/source/DLT698.c ****     else if (Bytes == 4)
 2533              		.loc 1 196 0
 2534 069e 042E     		cmp	r6, #4
 2535 06a0 04D1     		bne	.L234
 2536              	.LVL497:
 199:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 24) | (ucRcvBuf[2] << 16) & (ucRcvBuf[3] << 8) & (ucRcvBuf[4]));
 2537              		.loc 1 199 0
 2538 06a2 8678     		ldrb	r6, [r0, #2]	@ zero_extendqisi2
 2539              	.LVL498:
 2540 06a4 3606     		lsls	r6, r6, #24
 198:../user/source/DLT698.c ****         *LenBytes = 5;
 2541              		.loc 1 198 0
 2542 06a6 4FF0050E 		mov	lr, #5
 2543 06aa 03E0     		b	.L182
 2544              	.LVL499:
 2545              	.L234:
 2546              	.LBE120:
 2547              	.LBE119:
 388:../user/source/DLT698.c ****     int i = 0, j = 0, Res = 0, varLen = 0, varLenB = 0, LenBytes = 0; // 可变长度
 2548              		.loc 1 388 0
 2549 06ac 4FF0000E 		mov	lr, #0
 2550              	.LBB122:
 2551              	.LBB121:
 202:../user/source/DLT698.c ****     return -1;
 2552              		.loc 1 202 0
 2553 06b0 4FF0FF36 		mov	r6, #-1
 2554              	.LVL500:
 2555              	.L182:
 2556              	.LBE121:
 2557              	.LBE122:
 895:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 2558              		.loc 1 895 0
 2559 06b4 002E     		cmp	r6, #0
 2560 06b6 C0F2B380 		blt	.L235
 900:../user/source/DLT698.c ****         Len += LenBytes;
 2561              		.loc 1 900 0
 2562 06ba 0EF10104 		add	r4, lr, #1
 2563              	.LVL501:
 901:../user/source/DLT698.c ****         Ptr += LenBytes;
 2564              		.loc 1 901 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 77


 2565 06be 02EB0E03 		add	r3, r2, lr
 2566              	.LVL502:
 904:../user/source/DLT698.c ****         for (i = 0; i < varLen; i++)
 2567              		.loc 1 904 0
 2568 06c2 0027     		movs	r7, #0
 2569 06c4 47E0     		b	.L186
 2570              	.LVL503:
 2571              	.L196:
 906:../user/source/DLT698.c ****             if (Len > dwRcvLen)
 2572              		.loc 1 906 0
 2573 06c6 A542     		cmp	r5, r4
 2574 06c8 C0F2AE80 		blt	.L236
 911:../user/source/DLT698.c ****             if (*Ptr == 0)
 2575              		.loc 1 911 0
 2576 06cc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2577 06ce 1AB9     		cbnz	r2, .L187
 2578              	.LVL504:
 916:../user/source/DLT698.c ****                 Ptr += 4; // OAD
 2579              		.loc 1 916 0
 2580 06d0 0533     		adds	r3, r3, #5
 2581              	.LVL505:
 917:../user/source/DLT698.c ****                 Len += 4;
 2582              		.loc 1 917 0
 2583 06d2 0534     		adds	r4, r4, #5
 2584              	.LVL506:
 2585 06d4 A4B2     		uxth	r4, r4
 2586              	.LVL507:
 2587 06d6 3DE0     		b	.L188
 2588              	.L187:
 919:../user/source/DLT698.c ****             else if (*Ptr == 1)
 2589              		.loc 1 919 0
 2590 06d8 012A     		cmp	r2, #1
 2591 06da 40F0A980 		bne	.L237
 2592              	.LVL508:
 924:../user/source/DLT698.c ****                 Ptr += 4; // OAD
 2593              		.loc 1 924 0
 2594 06de 5A1D     		adds	r2, r3, #5
 2595              	.LVL509:
 925:../user/source/DLT698.c ****                 Len += 4;
 2596              		.loc 1 925 0
 2597 06e0 0534     		adds	r4, r4, #5
 2598              	.LVL510:
 2599 06e2 A4B2     		uxth	r4, r4
 2600              	.LVL511:
 2601              	.LBB123:
 2602              	.LBB124:
 173:../user/source/DLT698.c ****     if (0x00 == (ucRcvBuf[0] & 0x80))
 2603              		.loc 1 173 0
 2604 06e4 5979     		ldrb	r1, [r3, #5]	@ zero_extendqisi2
 2605 06e6 11F0800F 		tst	r1, #128
 2606 06ea 02D1     		bne	.L189
 2607              	.LVL512:
 175:../user/source/DLT698.c ****         *LenBytes = 1;
 2608              		.loc 1 175 0
 2609 06ec 4FF0010E 		mov	lr, #1
 2610 06f0 20E0     		b	.L190
 2611              	.LVL513:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 78


 2612              	.L189:
 179:../user/source/DLT698.c ****     Bytes = ucRcvBuf[0] & 0x7F;
 2613              		.loc 1 179 0
 2614 06f2 01F07F01 		and	r1, r1, #127
 2615              	.LVL514:
 181:../user/source/DLT698.c ****     if (Bytes == 1)
 2616              		.loc 1 181 0
 2617 06f6 0129     		cmp	r1, #1
 2618 06f8 03D1     		bne	.L191
 2619              	.LVL515:
 184:../user/source/DLT698.c ****         return (ucRcvBuf[1]);
 2620              		.loc 1 184 0
 2621 06fa 9979     		ldrb	r1, [r3, #6]	@ zero_extendqisi2
 2622              	.LVL516:
 183:../user/source/DLT698.c ****         *LenBytes = 2;
 2623              		.loc 1 183 0
 2624 06fc 4FF0020E 		mov	lr, #2
 2625 0700 18E0     		b	.L190
 2626              	.LVL517:
 2627              	.L191:
 186:../user/source/DLT698.c ****     else if (Bytes == 2)
 2628              		.loc 1 186 0
 2629 0702 0229     		cmp	r1, #2
 2630 0704 06D1     		bne	.L192
 2631              	.LVL518:
 189:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 8) | (ucRcvBuf[2]));
 2632              		.loc 1 189 0
 2633 0706 9979     		ldrb	r1, [r3, #6]	@ zero_extendqisi2
 2634              	.LVL519:
 2635 0708 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 2636 070a 43EA0121 		orr	r1, r3, r1, lsl #8
 188:../user/source/DLT698.c ****         *LenBytes = 3;
 2637              		.loc 1 188 0
 2638 070e 4FF0030E 		mov	lr, #3
 2639 0712 0FE0     		b	.L190
 2640              	.LVL520:
 2641              	.L192:
 191:../user/source/DLT698.c ****     else if (Bytes == 3)
 2642              		.loc 1 191 0
 2643 0714 0329     		cmp	r1, #3
 2644 0716 04D1     		bne	.L193
 2645              	.LVL521:
 194:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 16) | (ucRcvBuf[2] << 8) & (ucRcvBuf[3]));
 2646              		.loc 1 194 0
 2647 0718 9979     		ldrb	r1, [r3, #6]	@ zero_extendqisi2
 2648              	.LVL522:
 2649 071a 0904     		lsls	r1, r1, #16
 193:../user/source/DLT698.c ****         *LenBytes = 4;
 2650              		.loc 1 193 0
 2651 071c 4FF0040E 		mov	lr, #4
 2652 0720 08E0     		b	.L190
 2653              	.LVL523:
 2654              	.L193:
 196:../user/source/DLT698.c ****     else if (Bytes == 4)
 2655              		.loc 1 196 0
 2656 0722 0429     		cmp	r1, #4
 2657 0724 04D1     		bne	.L238
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 79


 2658              	.LVL524:
 199:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 24) | (ucRcvBuf[2] << 16) & (ucRcvBuf[3] << 8) & (ucRcvBuf[4]));
 2659              		.loc 1 199 0
 2660 0726 9979     		ldrb	r1, [r3, #6]	@ zero_extendqisi2
 2661              	.LVL525:
 2662 0728 0906     		lsls	r1, r1, #24
 198:../user/source/DLT698.c ****         *LenBytes = 5;
 2663              		.loc 1 198 0
 2664 072a 4FF0050E 		mov	lr, #5
 2665 072e 01E0     		b	.L190
 2666              	.LVL526:
 2667              	.L238:
 202:../user/source/DLT698.c ****     return -1;
 2668              		.loc 1 202 0
 2669 0730 4FF0FF31 		mov	r1, #-1
 2670              	.LVL527:
 2671              	.L190:
 2672              	.LBE124:
 2673              	.LBE123:
 928:../user/source/DLT698.c ****                 if ((varLenB = dwDlt698Len(Ptr, &LenBytes)) < 0)
 2674              		.loc 1 928 0
 2675 0734 0029     		cmp	r1, #0
 2676 0736 7FDB     		blt	.L239
 933:../user/source/DLT698.c ****                 Len += LenBytes;
 2677              		.loc 1 933 0
 2678 0738 7444     		add	r4, r4, lr
 2679              	.LVL528:
 2680 073a A4B2     		uxth	r4, r4
 2681              	.LVL529:
 934:../user/source/DLT698.c ****                 Ptr += LenBytes;
 2682              		.loc 1 934 0
 2683 073c 02EB0E03 		add	r3, r2, lr
 2684              	.LVL530:
 937:../user/source/DLT698.c ****                 for (j = 0; j < varLenB; j++)
 2685              		.loc 1 937 0
 2686 0740 0022     		movs	r2, #0
 2687 0742 05E0     		b	.L194
 2688              	.LVL531:
 2689              	.L195:
 939:../user/source/DLT698.c ****                     if (Len > dwRcvLen)
 2690              		.loc 1 939 0
 2691 0744 A542     		cmp	r5, r4
 2692 0746 7BDB     		blt	.L240
 944:../user/source/DLT698.c ****                     Ptr += 4;
 2693              		.loc 1 944 0 discriminator 2
 2694 0748 0433     		adds	r3, r3, #4
 2695              	.LVL532:
 945:../user/source/DLT698.c ****                     Len += 4;
 2696              		.loc 1 945 0 discriminator 2
 2697 074a 0434     		adds	r4, r4, #4
 2698              	.LVL533:
 2699 074c A4B2     		uxth	r4, r4
 2700              	.LVL534:
 937:../user/source/DLT698.c ****                 for (j = 0; j < varLenB; j++)
 2701              		.loc 1 937 0 discriminator 2
 2702 074e 0132     		adds	r2, r2, #1
 2703              	.LVL535:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 80


 2704              	.L194:
 937:../user/source/DLT698.c ****                 for (j = 0; j < varLenB; j++)
 2705              		.loc 1 937 0 is_stmt 0 discriminator 1
 2706 0750 8A42     		cmp	r2, r1
 2707 0752 F7DB     		blt	.L195
 2708              	.LVL536:
 2709              	.L188:
 904:../user/source/DLT698.c ****         for (i = 0; i < varLen; i++)
 2710              		.loc 1 904 0 is_stmt 1 discriminator 2
 2711 0754 0137     		adds	r7, r7, #1
 2712              	.LVL537:
 2713              	.L186:
 904:../user/source/DLT698.c ****         for (i = 0; i < varLen; i++)
 2714              		.loc 1 904 0 is_stmt 0 discriminator 1
 2715 0756 B742     		cmp	r7, r6
 2716 0758 B5DB     		blt	.L196
 2717 075a 02E0     		b	.L72
 2718              	.LVL538:
 2719              	.L198:
 455:../user/source/DLT698.c ****         Len++;
 2720              		.loc 1 455 0 is_stmt 1
 2721 075c 0224     		movs	r4, #2
 2722 075e 00E0     		b	.L72
 2723              	.L222:
 789:../user/source/DLT698.c ****             Len += 4;
 2724              		.loc 1 789 0
 2725 0760 0624     		movs	r4, #6
 2726              	.LVL539:
 2727              	.L72:
 959:../user/source/DLT698.c ****     if (Len > dwRcvLen)
 2728              		.loc 1 959 0
 2729 0762 2046     		mov	r0, r4
 2730 0764 A542     		cmp	r5, r4
 2731 0766 6DDA     		bge	.L67
 961:../user/source/DLT698.c ****         return -1;
 2732              		.loc 1 961 0
 2733 0768 4FF0FF30 		mov	r0, #-1
 2734 076c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2735              	.LVL540:
 2736              	.L197:
 956:../user/source/DLT698.c ****         return -1;
 2737              		.loc 1 956 0
 2738 0770 4FF0FF30 		mov	r0, #-1
 2739              	.LVL541:
 2740 0774 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2741              	.LVL542:
 2742              	.L200:
 407:../user/source/DLT698.c ****             return -1;
 2743              		.loc 1 407 0
 2744 0778 4FF0FF30 		mov	r0, #-1
 2745              	.LVL543:
 2746 077c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2747              	.LVL544:
 2748              	.L201:
 418:../user/source/DLT698.c ****                 return -1;
 2749              		.loc 1 418 0
 2750 0780 4FF0FF30 		mov	r0, #-1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 81


 2751              	.LVL545:
 2752 0784 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2753              	.LVL546:
 2754              	.L203:
 431:../user/source/DLT698.c ****             return -1;
 2755              		.loc 1 431 0
 2756 0788 4FF0FF30 		mov	r0, #-1
 2757              	.LVL547:
 2758 078c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2759              	.LVL548:
 2760              	.L204:
 442:../user/source/DLT698.c ****                 return -1;
 2761              		.loc 1 442 0
 2762 0790 4FF0FF30 		mov	r0, #-1
 2763              	.LVL549:
 2764 0794 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2765              	.LVL550:
 2766              	.L206:
 463:../user/source/DLT698.c ****             return -1;
 2767              		.loc 1 463 0
 2768 0798 4FF0FF30 		mov	r0, #-1
 2769              	.LVL551:
 2770 079c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2771              	.LVL552:
 2772              	.L208:
 503:../user/source/DLT698.c ****             return -1;
 2773              		.loc 1 503 0
 2774 07a0 4FF0FF30 		mov	r0, #-1
 2775              	.LVL553:
 2776 07a4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2777              	.LVL554:
 2778              	.L210:
 519:../user/source/DLT698.c ****             return -1;
 2779              		.loc 1 519 0
 2780 07a8 4FF0FF30 		mov	r0, #-1
 2781              	.LVL555:
 2782 07ac BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2783              	.LVL556:
 2784              	.L212:
 535:../user/source/DLT698.c ****             return -1;
 2785              		.loc 1 535 0
 2786 07b0 4FF0FF30 		mov	r0, #-1
 2787              	.LVL557:
 2788 07b4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2789              	.LVL558:
 2790              	.L214:
 674:../user/source/DLT698.c ****             return -1;
 2791              		.loc 1 674 0
 2792 07b8 4FF0FF30 		mov	r0, #-1
 2793              	.LVL559:
 2794 07bc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2795              	.LVL560:
 2796              	.L216:
 709:../user/source/DLT698.c ****             return -1;
 2797              		.loc 1 709 0
 2798 07c0 4FF0FF30 		mov	r0, #-1
 2799              	.LVL561:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 82


 2800 07c4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2801              	.LVL562:
 2802              	.L218:
 726:../user/source/DLT698.c ****             return -1;
 2803              		.loc 1 726 0
 2804 07c8 4FF0FF30 		mov	r0, #-1
 2805              	.LVL563:
 2806 07cc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2807              	.LVL564:
 2808              	.L219:
 746:../user/source/DLT698.c ****             return -1;
 2809              		.loc 1 746 0
 2810 07d0 4FF0FF30 		mov	r0, #-1
 2811              	.LVL565:
 2812 07d4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2813              	.LVL566:
 2814              	.L220:
 753:../user/source/DLT698.c ****             return -1;
 2815              		.loc 1 753 0
 2816 07d8 4FF0FF30 		mov	r0, #-1
 2817              	.LVL567:
 2818 07dc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2819              	.LVL568:
 2820              	.L221:
 2821              	.LBB125:
 774:../user/source/DLT698.c ****             return -1;
 2822              		.loc 1 774 0
 2823 07e0 4FF0FF30 		mov	r0, #-1
 2824              	.LVL569:
 2825 07e4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2826              	.LVL570:
 2827              	.L223:
 2828              	.LBE125:
 822:../user/source/DLT698.c ****             return -1;
 2829              		.loc 1 822 0
 2830 07e8 4FF0FF30 		mov	r0, #-1
 2831              	.LVL571:
 2832 07ec BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2833              	.LVL572:
 2834              	.L225:
 802:../user/source/DLT698.c ****                 return -1;
 2835              		.loc 1 802 0
 2836 07f0 4FF0FF30 		mov	r0, #-1
 2837              	.LVL573:
 2838 07f4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2839              	.LVL574:
 2840              	.L226:
 813:../user/source/DLT698.c ****                     return -1;
 2841              		.loc 1 813 0
 2842 07f8 4FF0FF30 		mov	r0, #-1
 2843              	.LVL575:
 2844 07fc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2845              	.LVL576:
 2846              	.L227:
 2847              	.LBB126:
 830:../user/source/DLT698.c ****             return -1;
 2848              		.loc 1 830 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 83


 2849 0800 4FF0FF30 		mov	r0, #-1
 2850              	.LVL577:
 2851 0804 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2852              	.LVL578:
 2853              	.L229:
 2854              	.LBE126:
 846:../user/source/DLT698.c ****             return -1;
 2855              		.loc 1 846 0
 2856 0808 4FF0FF30 		mov	r0, #-1
 2857              	.LVL579:
 2858 080c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2859              	.LVL580:
 2860              	.L231:
 864:../user/source/DLT698.c ****             return -1;
 2861              		.loc 1 864 0
 2862 0810 4FF0FF30 		mov	r0, #-1
 2863              	.LVL581:
 2864 0814 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2865              	.LVL582:
 2866              	.L233:
 876:../user/source/DLT698.c ****             return -1;
 2867              		.loc 1 876 0
 2868 0818 4FF0FF30 		mov	r0, #-1
 2869 081c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2870              	.LVL583:
 2871              	.L235:
 897:../user/source/DLT698.c ****             return -1;
 2872              		.loc 1 897 0
 2873 0820 4FF0FF30 		mov	r0, #-1
 2874              	.LVL584:
 2875 0824 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2876              	.LVL585:
 2877              	.L236:
 908:../user/source/DLT698.c ****                 return -1;
 2878              		.loc 1 908 0
 2879 0828 4FF0FF30 		mov	r0, #-1
 2880              	.LVL586:
 2881 082c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2882              	.LVL587:
 2883              	.L237:
 950:../user/source/DLT698.c ****                 return -1;
 2884              		.loc 1 950 0
 2885 0830 4FF0FF30 		mov	r0, #-1
 2886              	.LVL588:
 2887 0834 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2888              	.LVL589:
 2889              	.L239:
 930:../user/source/DLT698.c ****                     return -1;
 2890              		.loc 1 930 0
 2891 0838 4FF0FF30 		mov	r0, #-1
 2892              	.LVL590:
 2893 083c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2894              	.LVL591:
 2895              	.L240:
 941:../user/source/DLT698.c ****                         return -1;
 2896              		.loc 1 941 0
 2897 0840 4FF0FF30 		mov	r0, #-1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 84


 2898              	.LVL592:
 2899              	.L67:
 965:../user/source/DLT698.c **** }
 2900              		.loc 1 965 0
 2901 0844 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2902              		.cfi_endproc
 2903              	.LFE118:
 2905              		.section	.text.dwDlt698RSDLen,"ax",%progbits
 2906              		.align	2
 2907              		.global	dwDlt698RSDLen
 2908              		.thumb
 2909              		.thumb_func
 2911              	dwDlt698RSDLen:
 2912              	.LFB119:
 983:../user/source/DLT698.c **** {
 2913              		.loc 1 983 0
 2914              		.cfi_startproc
 2915              		@ args = 0, pretend = 0, frame = 0
 2916              		@ frame_needed = 0, uses_anonymous_args = 0
 2917              	.LVL593:
 2918 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2919              	.LCFI6:
 2920              		.cfi_def_cfa_offset 24
 2921              		.cfi_offset 4, -24
 2922              		.cfi_offset 5, -20
 2923              		.cfi_offset 6, -16
 2924              		.cfi_offset 7, -12
 2925              		.cfi_offset 8, -8
 2926              		.cfi_offset 14, -4
 2927 0004 0D46     		mov	r5, r1
 2928              	.LVL594:
 991:../user/source/DLT698.c ****     if (*Ptr == 0)
 2929              		.loc 1 991 0
 2930 0006 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 2931 0008 002B     		cmp	r3, #0
 2932 000a 00F0A880 		beq	.L258
 999:../user/source/DLT698.c ****     else if (*Ptr == 1)
 2933              		.loc 1 999 0
 2934 000e 012B     		cmp	r3, #1
 2935 0010 09D1     		bne	.L244
 2936              	.LVL595:
1007:../user/source/DLT698.c ****         if ((Res = dwDlt698DataLen(Ptr, dwRcvLen - Len)) < 0)
 2937              		.loc 1 1007 0
 2938 0012 0539     		subs	r1, r1, #5
 2939              	.LVL596:
 2940 0014 0530     		adds	r0, r0, #5
 2941              	.LVL597:
 2942 0016 FFF7FEFF 		bl	dwDlt698DataLen
 2943              	.LVL598:
 2944 001a 0028     		cmp	r0, #0
 2945 001c C0F2A980 		blt	.L259
 2946              	.LVL599:
1012:../user/source/DLT698.c ****         Len += Res;
 2947              		.loc 1 1012 0
 2948 0020 431D     		adds	r3, r0, #5
 2949 0022 9BB2     		uxth	r3, r3
 2950              	.LVL600:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 85


 2951 0024 9EE0     		b	.L243
 2952              	.LVL601:
 2953              	.L244:
1014:../user/source/DLT698.c ****     else if (*Ptr == 2)
 2954              		.loc 1 1014 0
 2955 0026 022B     		cmp	r3, #2
 2956 0028 1ED1     		bne	.L246
 2957              	.LVL602:
1019:../user/source/DLT698.c ****         Ptr += 4;
 2958              		.loc 1 1019 0
 2959 002a 00F10508 		add	r8, r0, #5
 2960              	.LVL603:
1022:../user/source/DLT698.c ****         if ((Res = dwDlt698DataLen(Ptr, dwRcvLen - Len)) < 0)
 2961              		.loc 1 1022 0
 2962 002e 0539     		subs	r1, r1, #5
 2963              	.LVL604:
 2964 0030 4046     		mov	r0, r8
 2965              	.LVL605:
 2966 0032 FFF7FEFF 		bl	dwDlt698DataLen
 2967              	.LVL606:
 2968 0036 0028     		cmp	r0, #0
 2969 0038 C0F29F80 		blt	.L260
1026:../user/source/DLT698.c ****         Ptr += Res;
 2970              		.loc 1 1026 0
 2971 003c 8044     		add	r8, r8, r0
 2972              	.LVL607:
1027:../user/source/DLT698.c ****         Len += Res;
 2973              		.loc 1 1027 0
 2974 003e 0530     		adds	r0, r0, #5
 2975              	.LVL608:
 2976 0040 84B2     		uxth	r4, r0
 2977              	.LVL609:
1029:../user/source/DLT698.c ****         if ((Res = dwDlt698DataLen(Ptr, dwRcvLen - Len)) < 0)
 2978              		.loc 1 1029 0
 2979 0042 291B     		subs	r1, r5, r4
 2980 0044 4046     		mov	r0, r8
 2981              	.LVL610:
 2982 0046 FFF7FEFF 		bl	dwDlt698DataLen
 2983              	.LVL611:
 2984 004a 0028     		cmp	r0, #0
 2985 004c C0F29980 		blt	.L261
 2986              	.LVL612:
1034:../user/source/DLT698.c ****         Len += Res;
 2987              		.loc 1 1034 0
 2988 0050 0444     		add	r4, r4, r0
 2989              	.LVL613:
 2990 0052 A4B2     		uxth	r4, r4
 2991              	.LVL614:
1036:../user/source/DLT698.c ****         if ((Res = dwDlt698DataLen(Ptr, dwRcvLen - Len)) < 0)
 2992              		.loc 1 1036 0
 2993 0054 291B     		subs	r1, r5, r4
 2994 0056 4044     		add	r0, r0, r8
 2995              	.LVL615:
 2996 0058 FFF7FEFF 		bl	dwDlt698DataLen
 2997              	.LVL616:
 2998 005c 0028     		cmp	r0, #0
 2999 005e C0F29480 		blt	.L262
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 86


1041:../user/source/DLT698.c ****         Len += Res;
 3000              		.loc 1 1041 0
 3001 0062 2318     		adds	r3, r4, r0
 3002 0064 9BB2     		uxth	r3, r3
 3003              	.LVL617:
 3004 0066 7DE0     		b	.L243
 3005              	.LVL618:
 3006              	.L246:
1043:../user/source/DLT698.c ****     else if (*Ptr == 3)
 3007              		.loc 1 1043 0
 3008 0068 032B     		cmp	r3, #3
 3009 006a 4DD1     		bne	.L247
 3010              	.LVL619:
 3011              	.LBB127:
 3012              	.LBB128:
 173:../user/source/DLT698.c ****     if (0x00 == (ucRcvBuf[0] & 0x80))
 3013              		.loc 1 173 0
 3014 006c 4778     		ldrb	r7, [r0, #1]	@ zero_extendqisi2
 3015 006e 17F0800F 		tst	r7, #128
 3016 0072 01D1     		bne	.L248
 3017              	.LVL620:
 175:../user/source/DLT698.c ****         *LenBytes = 1;
 3018              		.loc 1 175 0
 3019 0074 0122     		movs	r2, #1
 3020 0076 1DE0     		b	.L249
 3021              	.LVL621:
 3022              	.L248:
 179:../user/source/DLT698.c ****     Bytes = ucRcvBuf[0] & 0x7F;
 3023              		.loc 1 179 0
 3024 0078 07F07F07 		and	r7, r7, #127
 3025              	.LVL622:
 181:../user/source/DLT698.c ****     if (Bytes == 1)
 3026              		.loc 1 181 0
 3027 007c 012F     		cmp	r7, #1
 3028 007e 02D1     		bne	.L250
 3029              	.LVL623:
 184:../user/source/DLT698.c ****         return (ucRcvBuf[1]);
 3030              		.loc 1 184 0
 3031 0080 8778     		ldrb	r7, [r0, #2]	@ zero_extendqisi2
 3032              	.LVL624:
 183:../user/source/DLT698.c ****         *LenBytes = 2;
 3033              		.loc 1 183 0
 3034 0082 0222     		movs	r2, #2
 3035 0084 16E0     		b	.L249
 3036              	.LVL625:
 3037              	.L250:
 186:../user/source/DLT698.c ****     else if (Bytes == 2)
 3038              		.loc 1 186 0
 3039 0086 022F     		cmp	r7, #2
 3040 0088 05D1     		bne	.L251
 3041              	.LVL626:
 189:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 8) | (ucRcvBuf[2]));
 3042              		.loc 1 189 0
 3043 008a 8778     		ldrb	r7, [r0, #2]	@ zero_extendqisi2
 3044              	.LVL627:
 3045 008c C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 3046 008e 43EA0727 		orr	r7, r3, r7, lsl #8
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 87


 188:../user/source/DLT698.c ****         *LenBytes = 3;
 3047              		.loc 1 188 0
 3048 0092 0322     		movs	r2, #3
 3049 0094 0EE0     		b	.L249
 3050              	.LVL628:
 3051              	.L251:
 191:../user/source/DLT698.c ****     else if (Bytes == 3)
 3052              		.loc 1 191 0
 3053 0096 032F     		cmp	r7, #3
 3054 0098 03D1     		bne	.L252
 3055              	.LVL629:
 194:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 16) | (ucRcvBuf[2] << 8) & (ucRcvBuf[3]));
 3056              		.loc 1 194 0
 3057 009a 8778     		ldrb	r7, [r0, #2]	@ zero_extendqisi2
 3058              	.LVL630:
 3059 009c 3F04     		lsls	r7, r7, #16
 193:../user/source/DLT698.c ****         *LenBytes = 4;
 3060              		.loc 1 193 0
 3061 009e 0422     		movs	r2, #4
 3062 00a0 08E0     		b	.L249
 3063              	.LVL631:
 3064              	.L252:
 196:../user/source/DLT698.c ****     else if (Bytes == 4)
 3065              		.loc 1 196 0
 3066 00a2 042F     		cmp	r7, #4
 3067 00a4 03D1     		bne	.L263
 3068              	.LVL632:
 199:../user/source/DLT698.c ****         return ((ucRcvBuf[1] << 24) | (ucRcvBuf[2] << 16) & (ucRcvBuf[3] << 8) & (ucRcvBuf[4]));
 3069              		.loc 1 199 0
 3070 00a6 8778     		ldrb	r7, [r0, #2]	@ zero_extendqisi2
 3071              	.LVL633:
 3072 00a8 3F06     		lsls	r7, r7, #24
 198:../user/source/DLT698.c ****         *LenBytes = 5;
 3073              		.loc 1 198 0
 3074 00aa 0522     		movs	r2, #5
 3075 00ac 02E0     		b	.L249
 3076              	.LVL634:
 3077              	.L263:
 3078              	.LBE128:
 3079              	.LBE127:
 989:../user/source/DLT698.c ****     int i = 0, Res = 0, varLen = 0, LenBytes = 0; // 可变长度
 3080              		.loc 1 989 0
 3081 00ae 0022     		movs	r2, #0
 3082              	.LBB130:
 3083              	.LBB129:
 202:../user/source/DLT698.c ****     return -1;
 3084              		.loc 1 202 0
 3085 00b0 4FF0FF37 		mov	r7, #-1
 3086              	.LVL635:
 3087              	.L249:
 3088              	.LBE129:
 3089              	.LBE130:
1049:../user/source/DLT698.c ****         if ((varLen = dwDlt698Len(Ptr, &LenBytes)) < 0)
 3090              		.loc 1 1049 0
 3091 00b4 002F     		cmp	r7, #0
 3092 00b6 6CDB     		blt	.L264
1054:../user/source/DLT698.c ****         Len += LenBytes;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 88


 3093              		.loc 1 1054 0
 3094 00b8 531C     		adds	r3, r2, #1
 3095              	.LVL636:
1055:../user/source/DLT698.c ****         Ptr += LenBytes;
 3096              		.loc 1 1055 0
 3097 00ba 00EB0308 		add	r8, r0, r3
 3098              	.LVL637:
1057:../user/source/DLT698.c ****         for (i = 0; i < varLen; i++)
 3099              		.loc 1 1057 0
 3100 00be 0026     		movs	r6, #0
 3101 00c0 1FE0     		b	.L253
 3102              	.LVL638:
 3103              	.L254:
1059:../user/source/DLT698.c ****             Ptr += 4;
 3104              		.loc 1 1059 0
 3105 00c2 08F10408 		add	r8, r8, #4
 3106              	.LVL639:
1060:../user/source/DLT698.c ****             Len += 4; // OAD
 3107              		.loc 1 1060 0
 3108 00c6 0433     		adds	r3, r3, #4
 3109              	.LVL640:
 3110 00c8 9CB2     		uxth	r4, r3
 3111              	.LVL641:
1062:../user/source/DLT698.c ****             if ((Res = dwDlt698DataLen(Ptr, dwRcvLen - Len)) < 0)
 3112              		.loc 1 1062 0
 3113 00ca 291B     		subs	r1, r5, r4
 3114 00cc 4046     		mov	r0, r8
 3115 00ce FFF7FEFF 		bl	dwDlt698DataLen
 3116              	.LVL642:
 3117 00d2 0028     		cmp	r0, #0
 3118 00d4 61DB     		blt	.L265
1066:../user/source/DLT698.c ****             Ptr += Res;
 3119              		.loc 1 1066 0
 3120 00d6 8044     		add	r8, r8, r0
 3121              	.LVL643:
1067:../user/source/DLT698.c ****             Len += Res;
 3122              		.loc 1 1067 0
 3123 00d8 0444     		add	r4, r4, r0
 3124              	.LVL644:
 3125 00da A4B2     		uxth	r4, r4
 3126              	.LVL645:
1069:../user/source/DLT698.c ****             if ((Res = dwDlt698DataLen(Ptr, dwRcvLen - Len)) < 0)
 3127              		.loc 1 1069 0
 3128 00dc 291B     		subs	r1, r5, r4
 3129 00de 4046     		mov	r0, r8
 3130              	.LVL646:
 3131 00e0 FFF7FEFF 		bl	dwDlt698DataLen
 3132              	.LVL647:
 3133 00e4 0028     		cmp	r0, #0
 3134 00e6 5CDB     		blt	.L266
1073:../user/source/DLT698.c ****             Ptr += Res;
 3135              		.loc 1 1073 0
 3136 00e8 8044     		add	r8, r8, r0
 3137              	.LVL648:
1074:../user/source/DLT698.c ****             Len += Res;
 3138              		.loc 1 1074 0
 3139 00ea 0444     		add	r4, r4, r0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 89


 3140              	.LVL649:
 3141 00ec A4B2     		uxth	r4, r4
 3142              	.LVL650:
1076:../user/source/DLT698.c ****             if ((Res = dwDlt698DataLen(Ptr, dwRcvLen - Len)) < 0)
 3143              		.loc 1 1076 0
 3144 00ee 291B     		subs	r1, r5, r4
 3145 00f0 4046     		mov	r0, r8
 3146              	.LVL651:
 3147 00f2 FFF7FEFF 		bl	dwDlt698DataLen
 3148              	.LVL652:
 3149 00f6 0028     		cmp	r0, #0
 3150 00f8 57DB     		blt	.L267
1080:../user/source/DLT698.c ****             Ptr += Res;
 3151              		.loc 1 1080 0 discriminator 2
 3152 00fa 8044     		add	r8, r8, r0
 3153              	.LVL653:
1081:../user/source/DLT698.c ****             Len += Res;
 3154              		.loc 1 1081 0 discriminator 2
 3155 00fc 2318     		adds	r3, r4, r0
 3156 00fe 9BB2     		uxth	r3, r3
 3157              	.LVL654:
1057:../user/source/DLT698.c ****         for (i = 0; i < varLen; i++)
 3158              		.loc 1 1057 0 discriminator 2
 3159 0100 0136     		adds	r6, r6, #1
 3160              	.LVL655:
 3161              	.L253:
1057:../user/source/DLT698.c ****         for (i = 0; i < varLen; i++)
 3162              		.loc 1 1057 0 is_stmt 0 discriminator 1
 3163 0102 BE42     		cmp	r6, r7
 3164 0104 DDDB     		blt	.L254
 3165 0106 2DE0     		b	.L243
 3166              	.LVL656:
 3167              	.L247:
1084:../user/source/DLT698.c ****     else if (*Ptr == 4 || *Ptr == 5)
 3168              		.loc 1 1084 0 is_stmt 1
 3169 0108 1A1F     		subs	r2, r3, #4
 3170 010a D2B2     		uxtb	r2, r2
 3171 010c 012A     		cmp	r2, #1
 3172 010e 09D8     		bhi	.L255
 3173              	.LVL657:
 3174              	.LBB131:
1092:../user/source/DLT698.c ****         if ((Res = dwDlt698MsLen(Ptr, dwRcvLen - Len)) < 0)
 3175              		.loc 1 1092 0
 3176 0110 0839     		subs	r1, r1, #8
 3177              	.LVL658:
 3178 0112 0830     		adds	r0, r0, #8
 3179              	.LVL659:
 3180 0114 FFF7FEFF 		bl	dwDlt698MsLen
 3181              	.LVL660:
 3182 0118 0028     		cmp	r0, #0
 3183 011a 4ADB     		blt	.L268
 3184              	.LVL661:
 3185              	.LBE131:
1098:../user/source/DLT698.c ****         Len += Res;
 3186              		.loc 1 1098 0
 3187 011c 00F10803 		add	r3, r0, #8
 3188 0120 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 90


 3189              	.LVL662:
 3190 0122 1FE0     		b	.L243
 3191              	.LVL663:
 3192              	.L255:
1100:../user/source/DLT698.c ****     else if (*Ptr == 6 | *Ptr == 7 || *Ptr == 8)
 3193              		.loc 1 1100 0
 3194 0124 9A1F     		subs	r2, r3, #6
 3195 0126 D2B2     		uxtb	r2, r2
 3196 0128 012A     		cmp	r2, #1
 3197 012a 01D9     		bls	.L256
1100:../user/source/DLT698.c ****     else if (*Ptr == 6 | *Ptr == 7 || *Ptr == 8)
 3198              		.loc 1 1100 0 is_stmt 0 discriminator 1
 3199 012c 082B     		cmp	r3, #8
 3200 012e 09D1     		bne	.L257
 3201              	.L256:
 3202              	.LVL664:
 3203              	.LBB132:
1114:../user/source/DLT698.c ****         if ((Res = dwDlt698MsLen(Ptr, dwRcvLen - Len)) < 0)
 3204              		.loc 1 1114 0 is_stmt 1
 3205 0130 A5F11201 		sub	r1, r5, #18
 3206              	.LVL665:
 3207 0134 1230     		adds	r0, r0, #18
 3208              	.LVL666:
 3209 0136 FFF7FEFF 		bl	dwDlt698MsLen
 3210              	.LVL667:
 3211 013a 0028     		cmp	r0, #0
 3212 013c 3DDB     		blt	.L269
 3213              	.LVL668:
 3214              	.LBE132:
1120:../user/source/DLT698.c ****         Len += Res;
 3215              		.loc 1 1120 0
 3216 013e 1230     		adds	r0, r0, #18
 3217              	.LVL669:
 3218 0140 83B2     		uxth	r3, r0
 3219              	.LVL670:
 3220 0142 0FE0     		b	.L243
 3221              	.LVL671:
 3222              	.L257:
1122:../user/source/DLT698.c ****     else if (*Ptr == 9)
 3223              		.loc 1 1122 0
 3224 0144 092B     		cmp	r3, #9
 3225 0146 0CD0     		beq	.L270
1130:../user/source/DLT698.c ****     else if (*Ptr == 10)
 3226              		.loc 1 1130 0
 3227 0148 0A2B     		cmp	r3, #10
 3228 014a 3AD1     		bne	.L271
 3229              	.LVL672:
 3230              	.LBB133:
1138:../user/source/DLT698.c ****         if ((Res = dwDlt698MsLen(Ptr, dwRcvLen - Len)) < 0)
 3231              		.loc 1 1138 0
 3232 014c 0239     		subs	r1, r1, #2
 3233              	.LVL673:
 3234 014e 0230     		adds	r0, r0, #2
 3235              	.LVL674:
 3236 0150 FFF7FEFF 		bl	dwDlt698MsLen
 3237              	.LVL675:
 3238 0154 0028     		cmp	r0, #0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 91


 3239 0156 38DB     		blt	.L272
 3240              	.LVL676:
 3241              	.LBE133:
1144:../user/source/DLT698.c ****         Len += Res;
 3242              		.loc 1 1144 0
 3243 0158 0230     		adds	r0, r0, #2
 3244              	.LVL677:
 3245 015a 83B2     		uxth	r3, r0
 3246              	.LVL678:
 3247 015c 02E0     		b	.L243
 3248              	.LVL679:
 3249              	.L258:
 994:../user/source/DLT698.c ****         Len += 1; // choice
 3250              		.loc 1 994 0
 3251 015e 0123     		movs	r3, #1
 3252 0160 00E0     		b	.L243
 3253              	.L270:
1128:../user/source/DLT698.c ****         Len += 1; // last n
 3254              		.loc 1 1128 0
 3255 0162 0223     		movs	r3, #2
 3256              	.LVL680:
 3257              	.L243:
1151:../user/source/DLT698.c ****     if (Len > dwRcvLen)
 3258              		.loc 1 1151 0
 3259 0164 1846     		mov	r0, r3
 3260 0166 9D42     		cmp	r5, r3
 3261 0168 31DA     		bge	.L245
1153:../user/source/DLT698.c ****         return -1;
 3262              		.loc 1 1153 0
 3263 016a 4FF0FF30 		mov	r0, #-1
 3264 016e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3265              	.LVL681:
 3266              	.L259:
1009:../user/source/DLT698.c ****             return -1;
 3267              		.loc 1 1009 0
 3268 0172 4FF0FF30 		mov	r0, #-1
 3269              	.LVL682:
 3270 0176 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3271              	.LVL683:
 3272              	.L260:
1024:../user/source/DLT698.c ****             return -1;
 3273              		.loc 1 1024 0
 3274 017a 4FF0FF30 		mov	r0, #-1
 3275              	.LVL684:
 3276 017e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3277              	.LVL685:
 3278              	.L261:
1031:../user/source/DLT698.c ****             return -1;
 3279              		.loc 1 1031 0
 3280 0182 4FF0FF30 		mov	r0, #-1
 3281              	.LVL686:
 3282 0186 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3283              	.LVL687:
 3284              	.L262:
1038:../user/source/DLT698.c ****             return -1;
 3285              		.loc 1 1038 0
 3286 018a 4FF0FF30 		mov	r0, #-1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 92


 3287              	.LVL688:
 3288 018e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3289              	.LVL689:
 3290              	.L264:
1051:../user/source/DLT698.c ****             return -1;
 3291              		.loc 1 1051 0
 3292 0192 4FF0FF30 		mov	r0, #-1
 3293              	.LVL690:
 3294 0196 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3295              	.LVL691:
 3296              	.L265:
1064:../user/source/DLT698.c ****                 return -1;
 3297              		.loc 1 1064 0
 3298 019a 4FF0FF30 		mov	r0, #-1
 3299              	.LVL692:
 3300 019e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3301              	.LVL693:
 3302              	.L266:
1071:../user/source/DLT698.c ****                 return -1;
 3303              		.loc 1 1071 0
 3304 01a2 4FF0FF30 		mov	r0, #-1
 3305              	.LVL694:
 3306 01a6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3307              	.LVL695:
 3308              	.L267:
1078:../user/source/DLT698.c ****                 return -1;
 3309              		.loc 1 1078 0
 3310 01aa 4FF0FF30 		mov	r0, #-1
 3311              	.LVL696:
 3312 01ae BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3313              	.LVL697:
 3314              	.L268:
 3315              	.LBB134:
1094:../user/source/DLT698.c ****             return -1;
 3316              		.loc 1 1094 0
 3317 01b2 4FF0FF30 		mov	r0, #-1
 3318              	.LVL698:
 3319 01b6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3320              	.LVL699:
 3321              	.L269:
 3322              	.LBE134:
 3323              	.LBB135:
1116:../user/source/DLT698.c ****             return -1;
 3324              		.loc 1 1116 0
 3325 01ba 4FF0FF30 		mov	r0, #-1
 3326              	.LVL700:
 3327 01be BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3328              	.LVL701:
 3329              	.L271:
 3330              	.LBE135:
1148:../user/source/DLT698.c ****         return -1;
 3331              		.loc 1 1148 0
 3332 01c2 4FF0FF30 		mov	r0, #-1
 3333              	.LVL702:
 3334 01c6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3335              	.LVL703:
 3336              	.L272:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 93


 3337              	.LBB136:
1140:../user/source/DLT698.c ****             return -1;
 3338              		.loc 1 1140 0
 3339 01ca 4FF0FF30 		mov	r0, #-1
 3340              	.LVL704:
 3341              	.L245:
 3342              	.LBE136:
1157:../user/source/DLT698.c **** }
 3343              		.loc 1 1157 0
 3344 01ce BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3345              		.cfi_endproc
 3346              	.LFE119:
 3348 01d2 00BF     		.section	.text.dwDlt698DataLenByOAD,"ax",%progbits
 3349              		.align	2
 3350              		.global	dwDlt698DataLenByOAD
 3351              		.thumb
 3352              		.thumb_func
 3354              	dwDlt698DataLenByOAD:
 3355              	.LFB115:
 206:../user/source/DLT698.c **** {
 3356              		.loc 1 206 0
 3357              		.cfi_startproc
 3358              		@ args = 0, pretend = 0, frame = 8
 3359              		@ frame_needed = 0, uses_anonymous_args = 0
 3360              	.LVL705:
 3361 0000 00B5     		push	{lr}
 3362              	.LCFI7:
 3363              		.cfi_def_cfa_offset 4
 3364              		.cfi_offset 14, -4
 3365 0002 83B0     		sub	sp, sp, #12
 3366              	.LCFI8:
 3367              		.cfi_def_cfa_offset 16
 3368 0004 0190     		str	r0, [sp, #4]
 3369 0006 0846     		mov	r0, r1
 3370              	.LVL706:
 220:../user/source/DLT698.c ****     return dwDlt698DataLen(pucBuf, 256);
 3371              		.loc 1 220 0
 3372 0008 4FF48071 		mov	r1, #256
 3373              	.LVL707:
 3374 000c FFF7FEFF 		bl	dwDlt698DataLen
 3375              	.LVL708:
 221:../user/source/DLT698.c **** }
 3376              		.loc 1 221 0
 3377 0010 03B0     		add	sp, sp, #12
 3378              	.LCFI9:
 3379              		.cfi_def_cfa_offset 4
 3380              		@ sp needed
 3381 0012 5DF804FB 		ldr	pc, [sp], #4
 3382              		.cfi_endproc
 3383              	.LFE115:
 3385 0016 00BF     		.section	.text.dwGetResponseNormal,"ax",%progbits
 3386              		.align	2
 3387              		.global	dwGetResponseNormal
 3388              		.thumb
 3389              		.thumb_func
 3391              	dwGetResponseNormal:
 3392              	.LFB117:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 94


 235:../user/source/DLT698.c **** {
 3393              		.loc 1 235 0
 3394              		.cfi_startproc
 3395              		@ args = 0, pretend = 0, frame = 0
 3396              		@ frame_needed = 0, uses_anonymous_args = 0
 3397              	.LVL709:
 3398 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3399              	.LCFI10:
 3400              		.cfi_def_cfa_offset 24
 3401              		.cfi_offset 4, -24
 3402              		.cfi_offset 5, -20
 3403              		.cfi_offset 6, -16
 3404              		.cfi_offset 7, -12
 3405              		.cfi_offset 8, -8
 3406              		.cfi_offset 14, -4
 3407              	.LVL710:
 249:../user/source/DLT698.c ****     switch (*Ptr++)
 3408              		.loc 1 249 0
 3409 0004 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 3410 0006 012B     		cmp	r3, #1
 3411 0008 02D0     		beq	.L278
 3412 000a 022B     		cmp	r3, #2
 3413 000c 04D0     		beq	.L279
 3414 000e 44E0     		b	.L289
 3415              	.L278:
 253:../user/source/DLT698.c ****         Ptr++;
 3416              		.loc 1 253 0
 3417 0010 C51C     		adds	r5, r0, #3
 3418              	.LVL711:
 254:../user/source/DLT698.c ****         ucResultNum = 1;
 3419              		.loc 1 254 0
 3420 0012 4FF00108 		mov	r8, #1
 256:../user/source/DLT698.c ****     break;
 3421              		.loc 1 256 0
 3422 0016 05E0     		b	.L280
 3423              	.LVL712:
 3424              	.L279:
 261:../user/source/DLT698.c ****         if ((ucResultNum = *Ptr++) > 127)
 3425              		.loc 1 261 0
 3426 0018 051D     		adds	r5, r0, #4
 3427              	.LVL713:
 3428 001a 90F80380 		ldrb	r8, [r0, #3]	@ zero_extendqisi2
 3429              	.LVL714:
 3430 001e 18F0800F 		tst	r8, #128
 3431 0022 3ED1     		bne	.L286
 3432              	.LVL715:
 3433              	.L280:
 3434 0024 0F46     		mov	r7, r1
 3435              	.LVL716:
 271:../user/source/DLT698.c ****     bzero(pstCollData, sizeof(COLL_STORE_DATA));
 3436              		.loc 1 271 0
 3437 0026 40F2FC52 		movw	r2, #1532
 3438 002a 0021     		movs	r1, #0
 3439              	.LVL717:
 3440 002c 3846     		mov	r0, r7
 3441              	.LVL718:
 3442 002e FFF7FEFF 		bl	memset
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 95


 3443              	.LVL719:
 274:../user/source/DLT698.c ****     pstCollData->eDataCls = D_CLASS_REAL;
 3444              		.loc 1 274 0
 3445 0032 0123     		movs	r3, #1
 3446 0034 3B70     		strb	r3, [r7]
 3447              	.LVL720:
 276:../user/source/DLT698.c ****     for (i = 0; i < ucResultNum; i++)
 3448              		.loc 1 276 0
 3449 0036 0024     		movs	r4, #0
 3450 0038 2AE0     		b	.L281
 3451              	.LVL721:
 3452              	.L284:
 278:../user/source/DLT698.c ****         Ptr += dwGetOad(Ptr, &pstCollData->stDataUnit[i].stOAD);
 3453              		.loc 1 278 0
 3454 003a 04EB4403 		add	r3, r4, r4, lsl #1
 3455 003e 9900     		lsls	r1, r3, #2
 3456 0040 0831     		adds	r1, r1, #8
 3457 0042 3944     		add	r1, r1, r7
 3458 0044 2846     		mov	r0, r5
 3459 0046 FFF7FEFF 		bl	dwGetOad
 3460              	.LVL722:
 3461 004a 2A18     		adds	r2, r5, r0
 3462              	.LVL723:
 280:../user/source/DLT698.c ****         if (ERROR_INFO == *Ptr)
 3463              		.loc 1 280 0
 3464 004c 2B5C     		ldrb	r3, [r5, r0]	@ zero_extendqisi2
 3465 004e 0BB9     		cbnz	r3, .L282
 3466              	.LVL724:
 283:../user/source/DLT698.c ****             Ptr++; // DAR
 3467              		.loc 1 283 0
 3468 0050 951C     		adds	r5, r2, #2
 3469              	.LVL725:
 3470 0052 1BE0     		b	.L283
 3471              	.LVL726:
 3472              	.L282:
 285:../user/source/DLT698.c ****         else if (RES_DATA == *Ptr)
 3473              		.loc 1 285 0
 3474 0054 012B     		cmp	r3, #1
 3475 0056 28D1     		bne	.L287
 287:../user/source/DLT698.c ****             Ptr++; // Choice
 3476              		.loc 1 287 0
 3477 0058 551C     		adds	r5, r2, #1
 3478              	.LVL727:
 288:../user/source/DLT698.c ****             if ((dwLen = dwDlt698DataLenByOAD(pstCollData->stDataUnit[i].stOAD, Ptr)) < 0)
 3479              		.loc 1 288 0
 3480 005a 04EB4402 		add	r2, r4, r4, lsl #1
 3481 005e 9300     		lsls	r3, r2, #2
 3482 0060 3B44     		add	r3, r3, r7
 3483 0062 2946     		mov	r1, r5
 3484 0064 9868     		ldr	r0, [r3, #8]
 3485 0066 FFF7FEFF 		bl	dwDlt698DataLenByOAD
 3486              	.LVL728:
 3487 006a 0028     		cmp	r0, #0
 3488 006c 21DB     		blt	.L288
 293:../user/source/DLT698.c ****             pstCollData->stDataUnit[i].uwLen = dwLen;
 3489              		.loc 1 293 0
 3490 006e 6200     		lsls	r2, r4, #1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 96


 3491 0070 1119     		adds	r1, r2, r4
 3492 0072 8B00     		lsls	r3, r1, #2
 3493 0074 1946     		mov	r1, r3
 3494 0076 3B44     		add	r3, r3, r7
 3495 0078 D881     		strh	r0, [r3, #14]	@ movhi
 294:../user/source/DLT698.c ****             pstCollData->stDataUnit[i].ucPtr = Ptr;
 3496              		.loc 1 294 0
 3497 007a 1D61     		str	r5, [r3, #16]
 295:../user/source/DLT698.c ****             pstCollData->stDataUnit[i].ucVal = 1;
 3498              		.loc 1 295 0
 3499 007c 0B46     		mov	r3, r1
 3500 007e 3B44     		add	r3, r3, r7
 3501 0080 0122     		movs	r2, #1
 3502 0082 1A73     		strb	r2, [r3, #12]
 296:../user/source/DLT698.c ****             pstCollData->ucDataNum++;
 3503              		.loc 1 296 0
 3504 0084 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3505 0086 1344     		add	r3, r3, r2
 3506 0088 BB71     		strb	r3, [r7, #6]
 298:../user/source/DLT698.c ****             Ptr += dwLen;
 3507              		.loc 1 298 0
 3508 008a 0544     		add	r5, r5, r0
 3509              	.LVL729:
 3510              	.L283:
 276:../user/source/DLT698.c ****     for (i = 0; i < ucResultNum; i++)
 3511              		.loc 1 276 0 discriminator 2
 3512 008c 0134     		adds	r4, r4, #1
 3513              	.LVL730:
 3514 008e E4B2     		uxtb	r4, r4
 3515              	.LVL731:
 3516              	.L281:
 276:../user/source/DLT698.c ****     for (i = 0; i < ucResultNum; i++)
 3517              		.loc 1 276 0 is_stmt 0 discriminator 1
 3518 0090 4445     		cmp	r4, r8
 3519 0092 D2D3     		bcc	.L284
 362:../user/source/DLT698.c ****     return 1;
 3520              		.loc 1 362 0 is_stmt 1
 3521 0094 0120     		movs	r0, #1
 3522 0096 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3523              	.LVL732:
 3524              	.L289:
 268:../user/source/DLT698.c ****         return -1;
 3525              		.loc 1 268 0
 3526 009a 4FF0FF30 		mov	r0, #-1
 3527              	.LVL733:
 3528 009e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3529              	.LVL734:
 3530              	.L286:
 263:../user/source/DLT698.c ****             return -1;
 3531              		.loc 1 263 0
 3532 00a2 4FF0FF30 		mov	r0, #-1
 3533              	.LVL735:
 3534 00a6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3535              	.LVL736:
 3536              	.L287:
 302:../user/source/DLT698.c ****             return -1;
 3537              		.loc 1 302 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 97


 3538 00aa 4FF0FF30 		mov	r0, #-1
 3539 00ae BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3540              	.LVL737:
 3541              	.L288:
 290:../user/source/DLT698.c ****                 return -1;
 3542              		.loc 1 290 0
 3543 00b2 4FF0FF30 		mov	r0, #-1
 3544              	.LVL738:
 363:../user/source/DLT698.c **** }
 3545              		.loc 1 363 0
 3546 00b6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3547              		.cfi_endproc
 3548              	.LFE117:
 3550 00ba 00BF     		.section	.text.dwAPduAnalyze,"ax",%progbits
 3551              		.align	2
 3552              		.global	dwAPduAnalyze
 3553              		.thumb
 3554              		.thumb_func
 3556              	dwAPduAnalyze:
 3557              	.LFB113:
 123:../user/source/DLT698.c **** {
 3558              		.loc 1 123 0
 3559              		.cfi_startproc
 3560              		@ args = 0, pretend = 0, frame = 0
 3561              		@ frame_needed = 0, uses_anonymous_args = 0
 3562              	.LVL739:
 3563 0000 08B5     		push	{r3, lr}
 3564              	.LCFI11:
 3565              		.cfi_def_cfa_offset 8
 3566              		.cfi_offset 3, -8
 3567              		.cfi_offset 14, -4
 3568              	.LVL740:
 128:../user/source/DLT698.c ****     if (GET_Response == pucBuf[0])
 3569              		.loc 1 128 0
 3570 0002 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 3571 0004 852B     		cmp	r3, #133
 3572 0006 07D1     		bne	.L294
 130:../user/source/DLT698.c ****         switch (pucBuf[1])
 3573              		.loc 1 130 0
 3574 0008 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 3575 000a 013B     		subs	r3, r3, #1
 3576 000c 012B     		cmp	r3, #1
 3577 000e 06D8     		bhi	.L295
 3578 0010 1146     		mov	r1, r2
 3579              	.LVL741:
 3580              	.LBB137:
 135:../user/source/DLT698.c ****             Ret = dwGetResponseNormal(pucBuf, pstCollData);
 3581              		.loc 1 135 0
 3582 0012 FFF7FEFF 		bl	dwGetResponseNormal
 3583              	.LVL742:
 3584              	.LBE137:
 137:../user/source/DLT698.c ****         break;
 3585              		.loc 1 137 0
 3586 0016 08BD     		pop	{r3, pc}
 3587              	.LVL743:
 3588              	.L294:
 155:../user/source/DLT698.c ****         return -1;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 98


 3589              		.loc 1 155 0
 3590 0018 4FF0FF30 		mov	r0, #-1
 3591              	.LVL744:
 3592 001c 08BD     		pop	{r3, pc}
 3593              	.LVL745:
 3594              	.L295:
 125:../user/source/DLT698.c ****     int Ret = -1;
 3595              		.loc 1 125 0
 3596 001e 4FF0FF30 		mov	r0, #-1
 3597              	.LVL746:
 159:../user/source/DLT698.c **** }
 3598              		.loc 1 159 0
 3599 0022 08BD     		pop	{r3, pc}
 3600              		.cfi_endproc
 3601              	.LFE113:
 3603              		.global	fcstab
 3604              		.section	.rodata.fcstab,"a",%progbits
 3605              		.align	2
 3606              		.set	.LANCHOR0,. + 0
 3609              	fcstab:
 3610 0000 0000     		.short	0
 3611 0002 8911     		.short	4489
 3612 0004 1223     		.short	8978
 3613 0006 9B32     		.short	12955
 3614 0008 2446     		.short	17956
 3615 000a AD57     		.short	22445
 3616 000c 3665     		.short	25910
 3617 000e BF74     		.short	29887
 3618 0010 488C     		.short	-29624
 3619 0012 C19D     		.short	-25151
 3620 0014 5AAF     		.short	-20646
 3621 0016 D3BE     		.short	-16685
 3622 0018 6CCA     		.short	-13716
 3623 001a E5DB     		.short	-9243
 3624 001c 7EE9     		.short	-5762
 3625 001e F7F8     		.short	-1801
 3626 0020 8110     		.short	4225
 3627 0022 0801     		.short	264
 3628 0024 9333     		.short	13203
 3629 0026 1A22     		.short	8730
 3630 0028 A556     		.short	22181
 3631 002a 2C47     		.short	18220
 3632 002c B775     		.short	30135
 3633 002e 3E64     		.short	25662
 3634 0030 C99C     		.short	-25399
 3635 0032 408D     		.short	-29376
 3636 0034 DBBF     		.short	-16421
 3637 0036 52AE     		.short	-20910
 3638 0038 EDDA     		.short	-9491
 3639 003a 64CB     		.short	-13468
 3640 003c FFF9     		.short	-1537
 3641 003e 76E8     		.short	-6026
 3642 0040 0221     		.short	8450
 3643 0042 8B30     		.short	12427
 3644 0044 1002     		.short	528
 3645 0046 9913     		.short	5017
 3646 0048 2667     		.short	26406
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 99


 3647 004a AF76     		.short	30383
 3648 004c 3444     		.short	17460
 3649 004e BD55     		.short	21949
 3650 0050 4AAD     		.short	-21174
 3651 0052 C3BC     		.short	-17213
 3652 0054 588E     		.short	-29096
 3653 0056 D19F     		.short	-24623
 3654 0058 6EEB     		.short	-5266
 3655 005a E7FA     		.short	-1305
 3656 005c 7CC8     		.short	-14212
 3657 005e F5D9     		.short	-9739
 3658 0060 8331     		.short	12675
 3659 0062 0A20     		.short	8202
 3660 0064 9112     		.short	4753
 3661 0066 1803     		.short	792
 3662 0068 A777     		.short	30631
 3663 006a 2E66     		.short	26158
 3664 006c B554     		.short	21685
 3665 006e 3C45     		.short	17724
 3666 0070 CBBD     		.short	-16949
 3667 0072 42AC     		.short	-21438
 3668 0074 D99E     		.short	-24871
 3669 0076 508F     		.short	-28848
 3670 0078 EFFB     		.short	-1041
 3671 007a 66EA     		.short	-5530
 3672 007c FDD8     		.short	-9987
 3673 007e 74C9     		.short	-13964
 3674 0080 0442     		.short	16900
 3675 0082 8D53     		.short	21389
 3676 0084 1661     		.short	24854
 3677 0086 9F70     		.short	28831
 3678 0088 2004     		.short	1056
 3679 008a A915     		.short	5545
 3680 008c 3227     		.short	10034
 3681 008e BB36     		.short	14011
 3682 0090 4CCE     		.short	-12724
 3683 0092 C5DF     		.short	-8251
 3684 0094 5EED     		.short	-4770
 3685 0096 D7FC     		.short	-809
 3686 0098 6888     		.short	-30616
 3687 009a E199     		.short	-26143
 3688 009c 7AAB     		.short	-21638
 3689 009e F3BA     		.short	-17677
 3690 00a0 8552     		.short	21125
 3691 00a2 0C43     		.short	17164
 3692 00a4 9771     		.short	29079
 3693 00a6 1E60     		.short	24606
 3694 00a8 A114     		.short	5281
 3695 00aa 2805     		.short	1320
 3696 00ac B337     		.short	14259
 3697 00ae 3A26     		.short	9786
 3698 00b0 CDDE     		.short	-8499
 3699 00b2 44CF     		.short	-12476
 3700 00b4 DFFD     		.short	-545
 3701 00b6 56EC     		.short	-5034
 3702 00b8 E998     		.short	-26391
 3703 00ba 6089     		.short	-30368
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 100


 3704 00bc FBBB     		.short	-17413
 3705 00be 72AA     		.short	-21902
 3706 00c0 0663     		.short	25350
 3707 00c2 8F72     		.short	29327
 3708 00c4 1440     		.short	16404
 3709 00c6 9D51     		.short	20893
 3710 00c8 2225     		.short	9506
 3711 00ca AB34     		.short	13483
 3712 00cc 3006     		.short	1584
 3713 00ce B917     		.short	6073
 3714 00d0 4EEF     		.short	-4274
 3715 00d2 C7FE     		.short	-313
 3716 00d4 5CCC     		.short	-13220
 3717 00d6 D5DD     		.short	-8747
 3718 00d8 6AA9     		.short	-22166
 3719 00da E3B8     		.short	-18205
 3720 00dc 788A     		.short	-30088
 3721 00de F19B     		.short	-25615
 3722 00e0 8773     		.short	29575
 3723 00e2 0E62     		.short	25102
 3724 00e4 9550     		.short	20629
 3725 00e6 1C41     		.short	16668
 3726 00e8 A335     		.short	13731
 3727 00ea 2A24     		.short	9258
 3728 00ec B116     		.short	5809
 3729 00ee 3807     		.short	1848
 3730 00f0 CFFF     		.short	-49
 3731 00f2 46EE     		.short	-4538
 3732 00f4 DDDC     		.short	-8995
 3733 00f6 54CD     		.short	-12972
 3734 00f8 EBB9     		.short	-17941
 3735 00fa 62A8     		.short	-22430
 3736 00fc F99A     		.short	-25863
 3737 00fe 708B     		.short	-29840
 3738 0100 0884     		.short	-31736
 3739 0102 8195     		.short	-27263
 3740 0104 1AA7     		.short	-22758
 3741 0106 93B6     		.short	-18797
 3742 0108 2CC2     		.short	-15828
 3743 010a A5D3     		.short	-11355
 3744 010c 3EE1     		.short	-7874
 3745 010e B7F0     		.short	-3913
 3746 0110 4008     		.short	2112
 3747 0112 C919     		.short	6601
 3748 0114 522B     		.short	11090
 3749 0116 DB3A     		.short	15067
 3750 0118 644E     		.short	20068
 3751 011a ED5F     		.short	24557
 3752 011c 766D     		.short	28022
 3753 011e FF7C     		.short	31999
 3754 0120 8994     		.short	-27511
 3755 0122 0085     		.short	-31488
 3756 0124 9BB7     		.short	-18533
 3757 0126 12A6     		.short	-23022
 3758 0128 ADD2     		.short	-11603
 3759 012a 24C3     		.short	-15580
 3760 012c BFF1     		.short	-3649
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 101


 3761 012e 36E0     		.short	-8138
 3762 0130 C118     		.short	6337
 3763 0132 4809     		.short	2376
 3764 0134 D33B     		.short	15315
 3765 0136 5A2A     		.short	10842
 3766 0138 E55E     		.short	24293
 3767 013a 6C4F     		.short	20332
 3768 013c F77D     		.short	32247
 3769 013e 7E6C     		.short	27774
 3770 0140 0AA5     		.short	-23286
 3771 0142 83B4     		.short	-19325
 3772 0144 1886     		.short	-31208
 3773 0146 9197     		.short	-26735
 3774 0148 2EE3     		.short	-7378
 3775 014a A7F2     		.short	-3417
 3776 014c 3CC0     		.short	-16324
 3777 014e B5D1     		.short	-11851
 3778 0150 4229     		.short	10562
 3779 0152 CB38     		.short	14539
 3780 0154 500A     		.short	2640
 3781 0156 D91B     		.short	7129
 3782 0158 666F     		.short	28518
 3783 015a EF7E     		.short	32495
 3784 015c 744C     		.short	19572
 3785 015e FD5D     		.short	24061
 3786 0160 8BB5     		.short	-19061
 3787 0162 02A4     		.short	-23550
 3788 0164 9996     		.short	-26983
 3789 0166 1087     		.short	-30960
 3790 0168 AFF3     		.short	-3153
 3791 016a 26E2     		.short	-7642
 3792 016c BDD0     		.short	-12099
 3793 016e 34C1     		.short	-16076
 3794 0170 C339     		.short	14787
 3795 0172 4A28     		.short	10314
 3796 0174 D11A     		.short	6865
 3797 0176 580B     		.short	2904
 3798 0178 E77F     		.short	32743
 3799 017a 6E6E     		.short	28270
 3800 017c F55C     		.short	23797
 3801 017e 7C4D     		.short	19836
 3802 0180 0CC6     		.short	-14836
 3803 0182 85D7     		.short	-10363
 3804 0184 1EE5     		.short	-6882
 3805 0186 97F4     		.short	-2921
 3806 0188 2880     		.short	-32728
 3807 018a A191     		.short	-28255
 3808 018c 3AA3     		.short	-23750
 3809 018e B3B2     		.short	-19789
 3810 0190 444A     		.short	19012
 3811 0192 CD5B     		.short	23501
 3812 0194 5669     		.short	26966
 3813 0196 DF78     		.short	30943
 3814 0198 600C     		.short	3168
 3815 019a E91D     		.short	7657
 3816 019c 722F     		.short	12146
 3817 019e FB3E     		.short	16123
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 102


 3818 01a0 8DD6     		.short	-10611
 3819 01a2 04C7     		.short	-14588
 3820 01a4 9FF5     		.short	-2657
 3821 01a6 16E4     		.short	-7146
 3822 01a8 A990     		.short	-28503
 3823 01aa 2081     		.short	-32480
 3824 01ac BBB3     		.short	-19525
 3825 01ae 32A2     		.short	-24014
 3826 01b0 C55A     		.short	23237
 3827 01b2 4C4B     		.short	19276
 3828 01b4 D779     		.short	31191
 3829 01b6 5E68     		.short	26718
 3830 01b8 E11C     		.short	7393
 3831 01ba 680D     		.short	3432
 3832 01bc F33F     		.short	16371
 3833 01be 7A2E     		.short	11898
 3834 01c0 0EE7     		.short	-6386
 3835 01c2 87F6     		.short	-2425
 3836 01c4 1CC4     		.short	-15332
 3837 01c6 95D5     		.short	-10859
 3838 01c8 2AA1     		.short	-24278
 3839 01ca A3B0     		.short	-20317
 3840 01cc 3882     		.short	-32200
 3841 01ce B193     		.short	-27727
 3842 01d0 466B     		.short	27462
 3843 01d2 CF7A     		.short	31439
 3844 01d4 5448     		.short	18516
 3845 01d6 DD59     		.short	23005
 3846 01d8 622D     		.short	11618
 3847 01da EB3C     		.short	15595
 3848 01dc 700E     		.short	3696
 3849 01de F91F     		.short	8185
 3850 01e0 8FF7     		.short	-2161
 3851 01e2 06E6     		.short	-6650
 3852 01e4 9DD4     		.short	-11107
 3853 01e6 14C5     		.short	-15084
 3854 01e8 ABB1     		.short	-20053
 3855 01ea 22A0     		.short	-24542
 3856 01ec B992     		.short	-27975
 3857 01ee 3083     		.short	-31952
 3858 01f0 C77B     		.short	31687
 3859 01f2 4E6A     		.short	27214
 3860 01f4 D558     		.short	22741
 3861 01f6 5C49     		.short	18780
 3862 01f8 E33D     		.short	15843
 3863 01fa 6A2C     		.short	11370
 3864 01fc F11E     		.short	7921
 3865 01fe 780F     		.short	3960
 3866              		.text
 3867              	.Letext0:
 3868              		.file 2 "../user/include/BaseDef.h"
 3869              		.file 3 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\machine\\_defaul
 3870              		.file 4 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\sys\\_stdint.h"
 3871              		.file 5 "../user/include/DLT698_45.h"
 3872              		.file 6 "../user/include/DLT698.h"
 3873              		.file 7 "<built-in>"
 3874              		.file 8 "../cmsis/include/core_cm4.h"
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 103


ARM GAS  C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s 			page 104


DEFINED SYMBOLS
                            *ABS*:00000000 DLT698.c
C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s:22     .text.pppfcs16:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s:27     .text.pppfcs16:00000000 pppfcs16
C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s:77     .text.pppfcs16:00000028 $d
C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s:82     .text.dwGetApdu:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s:87     .text.dwGetApdu:00000000 dwGetApdu
C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s:139    .text.dwGetOad:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s:144    .text.dwGetOad:00000000 dwGetOad
C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s:173    .text.dwDlt698MsLen:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s:178    .text.dwDlt698MsLen:00000000 dwDlt698MsLen
C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s:843    .text.dwDlt698DataLen:00000000 dwDlt698DataLen
C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s:839    .text.dwDlt698DataLen:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s:871    .text.dwDlt698DataLen:00000014 $d
C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s:968    .text.dwDlt698DataLen:000000d6 $t
C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s:2911   .text.dwDlt698RSDLen:00000000 dwDlt698RSDLen
C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s:2906   .text.dwDlt698RSDLen:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s:3349   .text.dwDlt698DataLenByOAD:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s:3354   .text.dwDlt698DataLenByOAD:00000000 dwDlt698DataLenByOAD
C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s:3386   .text.dwGetResponseNormal:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s:3391   .text.dwGetResponseNormal:00000000 dwGetResponseNormal
C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s:3551   .text.dwAPduAnalyze:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s:3556   .text.dwAPduAnalyze:00000000 dwAPduAnalyze
C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s:3609   .rodata.fcstab:00000000 fcstab
C:\Users\strag\AppData\Local\Temp\ccZwAiMo.s:3605   .rodata.fcstab:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memset
