ARM GAS  C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f37x_crc.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.CRC_DeInit,"ax",%progbits
  22              		.align	2
  23              		.global	CRC_DeInit
  24              		.thumb
  25              		.thumb_func
  27              	CRC_DeInit:
  28              	.LFB111:
  29              		.file 1 "../stdperiph/source/stm32f37x_crc.c"
   1:../stdperiph/source/stm32f37x_crc.c **** /**
   2:../stdperiph/source/stm32f37x_crc.c ****   ******************************************************************************
   3:../stdperiph/source/stm32f37x_crc.c ****   * @file    stm32f37x_crc.c
   4:../stdperiph/source/stm32f37x_crc.c ****   * @author  MCD Application Team
   5:../stdperiph/source/stm32f37x_crc.c ****   * @version V1.0.0
   6:../stdperiph/source/stm32f37x_crc.c ****   * @date    20-September-2012
   7:../stdperiph/source/stm32f37x_crc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../stdperiph/source/stm32f37x_crc.c ****   *          functionalities of CRC computation unit peripheral:
   9:../stdperiph/source/stm32f37x_crc.c ****   *            + Configuration of the CRC computation unit
  10:../stdperiph/source/stm32f37x_crc.c ****   *            + CRC computation of one/many 32-bit data
  11:../stdperiph/source/stm32f37x_crc.c ****   *            + CRC Independent register (IDR) access
  12:../stdperiph/source/stm32f37x_crc.c ****   *
  13:../stdperiph/source/stm32f37x_crc.c ****   *  @verbatim
  14:../stdperiph/source/stm32f37x_crc.c ****  ===============================================================================
  15:../stdperiph/source/stm32f37x_crc.c ****                      ##### How to use this driver #####
  16:../stdperiph/source/stm32f37x_crc.c ****  ===============================================================================
  17:../stdperiph/source/stm32f37x_crc.c ****     [..]
  18:../stdperiph/source/stm32f37x_crc.c ****     
  19:../stdperiph/source/stm32f37x_crc.c ****          (+) Enable CRC AHB clock using RCC_AHBPeriphClockCmd(RCC_AHBPeriph_CRC, ENABLE)
  20:../stdperiph/source/stm32f37x_crc.c ****              function
  21:../stdperiph/source/stm32f37x_crc.c ****          (+) Select the polynomial size: 7-bit, 8-bit, 16-bit or 32-bit
  22:../stdperiph/source/stm32f37x_crc.c ****          (+) Set the polynomial coefficients using CRC_SetPolynomial()  
  23:../stdperiph/source/stm32f37x_crc.c ****          (+) If required, select the reverse operation on input data 
  24:../stdperiph/source/stm32f37x_crc.c ****              using CRC_ReverseInputDataSelect()  
  25:../stdperiph/source/stm32f37x_crc.c ****          (+) If required, enable the reverse operation on output data
  26:../stdperiph/source/stm32f37x_crc.c ****              using CRC_ReverseOutputDataCmd(Enable)
  27:../stdperiph/source/stm32f37x_crc.c ****          (+) If required, set the initialization remainder value using
  28:../stdperiph/source/stm32f37x_crc.c ****              CRC_SetInitRegister()
  29:../stdperiph/source/stm32f37x_crc.c ****          (+) use CRC_CalcCRC() function to compute the CRC of a 32-bit data
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s 			page 2


  30:../stdperiph/source/stm32f37x_crc.c ****              or use CRC_CalcBlockCRC() function to compute the CRC if a 32-bit 
  31:../stdperiph/source/stm32f37x_crc.c ****              data buffer
  32:../stdperiph/source/stm32f37x_crc.c ****             (@) To compute the CRC of a new data use CRC_ResetDR() to reset
  33:../stdperiph/source/stm32f37x_crc.c ****                  the CRC computation unit before starting the computation
  34:../stdperiph/source/stm32f37x_crc.c ****                  otherwise you can get wrong CRC values.
  35:../stdperiph/source/stm32f37x_crc.c ****       
  36:../stdperiph/source/stm32f37x_crc.c ****      @endverbatim
  37:../stdperiph/source/stm32f37x_crc.c ****   *  
  38:../stdperiph/source/stm32f37x_crc.c ****   ******************************************************************************
  39:../stdperiph/source/stm32f37x_crc.c ****   * @attention
  40:../stdperiph/source/stm32f37x_crc.c ****   *
  41:../stdperiph/source/stm32f37x_crc.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  42:../stdperiph/source/stm32f37x_crc.c ****   *
  43:../stdperiph/source/stm32f37x_crc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  44:../stdperiph/source/stm32f37x_crc.c ****   * You may not use this file except in compliance with the License.
  45:../stdperiph/source/stm32f37x_crc.c ****   * You may obtain a copy of the License at:
  46:../stdperiph/source/stm32f37x_crc.c ****   *
  47:../stdperiph/source/stm32f37x_crc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  48:../stdperiph/source/stm32f37x_crc.c ****   *
  49:../stdperiph/source/stm32f37x_crc.c ****   * Unless required by applicable law or agreed to in writing, software 
  50:../stdperiph/source/stm32f37x_crc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  51:../stdperiph/source/stm32f37x_crc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  52:../stdperiph/source/stm32f37x_crc.c ****   * See the License for the specific language governing permissions and
  53:../stdperiph/source/stm32f37x_crc.c ****   * limitations under the License.
  54:../stdperiph/source/stm32f37x_crc.c ****   *
  55:../stdperiph/source/stm32f37x_crc.c ****   ******************************************************************************
  56:../stdperiph/source/stm32f37x_crc.c ****   */
  57:../stdperiph/source/stm32f37x_crc.c **** 
  58:../stdperiph/source/stm32f37x_crc.c **** /* Includes ------------------------------------------------------------------*/
  59:../stdperiph/source/stm32f37x_crc.c **** #include "stm32f37x_crc.h"
  60:../stdperiph/source/stm32f37x_crc.c **** #include "stm32f37x_rcc.h"
  61:../stdperiph/source/stm32f37x_crc.c **** 
  62:../stdperiph/source/stm32f37x_crc.c **** /** @addtogroup STM32F37x_StdPeriph_Driver
  63:../stdperiph/source/stm32f37x_crc.c ****   * @{
  64:../stdperiph/source/stm32f37x_crc.c ****   */
  65:../stdperiph/source/stm32f37x_crc.c **** 
  66:../stdperiph/source/stm32f37x_crc.c **** /** @defgroup CRC 
  67:../stdperiph/source/stm32f37x_crc.c ****   * @brief CRC driver modules
  68:../stdperiph/source/stm32f37x_crc.c ****   * @{
  69:../stdperiph/source/stm32f37x_crc.c ****   */
  70:../stdperiph/source/stm32f37x_crc.c **** 
  71:../stdperiph/source/stm32f37x_crc.c **** /* Private typedef -----------------------------------------------------------*/
  72:../stdperiph/source/stm32f37x_crc.c **** /* Private define ------------------------------------------------------------*/
  73:../stdperiph/source/stm32f37x_crc.c **** /* Private macro -------------------------------------------------------------*/
  74:../stdperiph/source/stm32f37x_crc.c **** /* Private variables ---------------------------------------------------------*/
  75:../stdperiph/source/stm32f37x_crc.c **** /* Private function prototypes -----------------------------------------------*/
  76:../stdperiph/source/stm32f37x_crc.c **** /* Private functions ---------------------------------------------------------*/
  77:../stdperiph/source/stm32f37x_crc.c **** 
  78:../stdperiph/source/stm32f37x_crc.c **** /** @defgroup CRC_Private_Functions
  79:../stdperiph/source/stm32f37x_crc.c ****   * @{
  80:../stdperiph/source/stm32f37x_crc.c ****   */
  81:../stdperiph/source/stm32f37x_crc.c **** 
  82:../stdperiph/source/stm32f37x_crc.c **** /** @defgroup CRC_Group1 Configuration of the CRC computation unit functions
  83:../stdperiph/source/stm32f37x_crc.c ****  *  @brief   Configuration of the CRC computation unit functions 
  84:../stdperiph/source/stm32f37x_crc.c ****  *
  85:../stdperiph/source/stm32f37x_crc.c **** @verbatim
  86:../stdperiph/source/stm32f37x_crc.c ****  ===============================================================================
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s 			page 3


  87:../stdperiph/source/stm32f37x_crc.c ****                      ##### CRC configuration functions #####
  88:../stdperiph/source/stm32f37x_crc.c ****  ===============================================================================
  89:../stdperiph/source/stm32f37x_crc.c **** 
  90:../stdperiph/source/stm32f37x_crc.c **** @endverbatim
  91:../stdperiph/source/stm32f37x_crc.c ****   * @{
  92:../stdperiph/source/stm32f37x_crc.c ****   */
  93:../stdperiph/source/stm32f37x_crc.c **** 
  94:../stdperiph/source/stm32f37x_crc.c **** /**
  95:../stdperiph/source/stm32f37x_crc.c ****   * @brief  Deinitializes CRC peripheral registers to their default reset values.
  96:../stdperiph/source/stm32f37x_crc.c ****   * @param  None
  97:../stdperiph/source/stm32f37x_crc.c ****   * @retval None
  98:../stdperiph/source/stm32f37x_crc.c ****   */
  99:../stdperiph/source/stm32f37x_crc.c **** void CRC_DeInit(void)
 100:../stdperiph/source/stm32f37x_crc.c **** {
  30              		.loc 1 100 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 101:../stdperiph/source/stm32f37x_crc.c ****   /* Set DR register to reset value */
 102:../stdperiph/source/stm32f37x_crc.c ****   CRC->DR = 0xFFFFFFFF;
  35              		.loc 1 102 0
  36 0000 054B     		ldr	r3, .L2
  37 0002 4FF0FF32 		mov	r2, #-1
  38 0006 1A60     		str	r2, [r3]
 103:../stdperiph/source/stm32f37x_crc.c **** 
 104:../stdperiph/source/stm32f37x_crc.c ****   /* Set the POL register to the reset value: 0x04C11DB7 */
 105:../stdperiph/source/stm32f37x_crc.c ****   CRC->POL = 0x04C11DB7;
  39              		.loc 1 105 0
  40 0008 0449     		ldr	r1, .L2+4
  41 000a 5961     		str	r1, [r3, #20]
 106:../stdperiph/source/stm32f37x_crc.c **** 
 107:../stdperiph/source/stm32f37x_crc.c ****   /* Reset IDR register */
 108:../stdperiph/source/stm32f37x_crc.c ****   CRC->IDR = 0x00;
  42              		.loc 1 108 0
  43 000c 0021     		movs	r1, #0
  44 000e 1971     		strb	r1, [r3, #4]
 109:../stdperiph/source/stm32f37x_crc.c **** 
 110:../stdperiph/source/stm32f37x_crc.c ****   /* Set INIT register to reset value */
 111:../stdperiph/source/stm32f37x_crc.c ****   CRC->INIT = 0xFFFFFFFF;
  45              		.loc 1 111 0
  46 0010 1A61     		str	r2, [r3, #16]
 112:../stdperiph/source/stm32f37x_crc.c **** 
 113:../stdperiph/source/stm32f37x_crc.c ****   /* Reset the CRC calculation unit */
 114:../stdperiph/source/stm32f37x_crc.c ****   CRC->CR = CRC_CR_RESET;
  47              		.loc 1 114 0
  48 0012 0122     		movs	r2, #1
  49 0014 9A60     		str	r2, [r3, #8]
  50 0016 7047     		bx	lr
  51              	.L3:
  52              		.align	2
  53              	.L2:
  54 0018 00300240 		.word	1073885184
  55 001c B71DC104 		.word	79764919
  56              		.cfi_endproc
  57              	.LFE111:
  59              		.section	.text.CRC_ResetDR,"ax",%progbits
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s 			page 4


  60              		.align	2
  61              		.global	CRC_ResetDR
  62              		.thumb
  63              		.thumb_func
  65              	CRC_ResetDR:
  66              	.LFB112:
 115:../stdperiph/source/stm32f37x_crc.c **** }
 116:../stdperiph/source/stm32f37x_crc.c **** 
 117:../stdperiph/source/stm32f37x_crc.c **** /**
 118:../stdperiph/source/stm32f37x_crc.c ****   * @brief  Resets the CRC calculation unit and sets INIT register content in DR register.
 119:../stdperiph/source/stm32f37x_crc.c ****   * @param  None
 120:../stdperiph/source/stm32f37x_crc.c ****   * @retval None
 121:../stdperiph/source/stm32f37x_crc.c ****   */
 122:../stdperiph/source/stm32f37x_crc.c **** void CRC_ResetDR(void)
 123:../stdperiph/source/stm32f37x_crc.c **** {
  67              		.loc 1 123 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
 124:../stdperiph/source/stm32f37x_crc.c ****   /* Reset CRC generator */
 125:../stdperiph/source/stm32f37x_crc.c ****   CRC->CR |= CRC_CR_RESET;
  72              		.loc 1 125 0
  73 0000 024A     		ldr	r2, .L5
  74 0002 9368     		ldr	r3, [r2, #8]
  75 0004 43F00103 		orr	r3, r3, #1
  76 0008 9360     		str	r3, [r2, #8]
  77 000a 7047     		bx	lr
  78              	.L6:
  79              		.align	2
  80              	.L5:
  81 000c 00300240 		.word	1073885184
  82              		.cfi_endproc
  83              	.LFE112:
  85              		.section	.text.CRC_PolynomialSizeSelect,"ax",%progbits
  86              		.align	2
  87              		.global	CRC_PolynomialSizeSelect
  88              		.thumb
  89              		.thumb_func
  91              	CRC_PolynomialSizeSelect:
  92              	.LFB113:
 126:../stdperiph/source/stm32f37x_crc.c **** }
 127:../stdperiph/source/stm32f37x_crc.c **** 
 128:../stdperiph/source/stm32f37x_crc.c **** /**
 129:../stdperiph/source/stm32f37x_crc.c ****   * @brief  Selects the polynomial size.
 130:../stdperiph/source/stm32f37x_crc.c ****   * @param  CRC_PolSize: Specifies the polynomial size.
 131:../stdperiph/source/stm32f37x_crc.c ****   *          This parameter can be:
 132:../stdperiph/source/stm32f37x_crc.c ****   *           @arg CRC_PolSize_7: 7-bit polynomial for CRC calculation
 133:../stdperiph/source/stm32f37x_crc.c ****   *           @arg CRC_PolSize_8: 8-bit polynomial for CRC calculation
 134:../stdperiph/source/stm32f37x_crc.c ****   *           @arg CRC_PolSize_16: 16-bit polynomial for CRC calculation
 135:../stdperiph/source/stm32f37x_crc.c ****   *           @arg CRC_PolSize_32: 32-bit polynomial for CRC calculation
 136:../stdperiph/source/stm32f37x_crc.c ****   * @retval None
 137:../stdperiph/source/stm32f37x_crc.c ****   */
 138:../stdperiph/source/stm32f37x_crc.c **** void CRC_PolynomialSizeSelect(uint32_t CRC_PolSize)
 139:../stdperiph/source/stm32f37x_crc.c **** {
  93              		.loc 1 139 0
  94              		.cfi_startproc
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s 			page 5


  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
  98              	.LVL0:
 140:../stdperiph/source/stm32f37x_crc.c ****   uint32_t tmpcr = 0;
 141:../stdperiph/source/stm32f37x_crc.c **** 
 142:../stdperiph/source/stm32f37x_crc.c ****   /* Check the parameter */
 143:../stdperiph/source/stm32f37x_crc.c ****   assert_param(IS_CRC_POL_SIZE(CRC_PolSize));
 144:../stdperiph/source/stm32f37x_crc.c **** 
 145:../stdperiph/source/stm32f37x_crc.c ****   /* Get CR register value */
 146:../stdperiph/source/stm32f37x_crc.c ****   tmpcr = CRC->CR;
  99              		.loc 1 146 0
 100 0000 034A     		ldr	r2, .L8
 101 0002 9368     		ldr	r3, [r2, #8]
 102              	.LVL1:
 147:../stdperiph/source/stm32f37x_crc.c **** 
 148:../stdperiph/source/stm32f37x_crc.c ****   /* Reset POL_SIZE bits */
 149:../stdperiph/source/stm32f37x_crc.c ****   tmpcr &= (uint32_t)~((uint32_t)CRC_CR_POLSIZE);
 103              		.loc 1 149 0
 104 0004 23F01803 		bic	r3, r3, #24
 105              	.LVL2:
 150:../stdperiph/source/stm32f37x_crc.c ****   /* Set the polynomial size */
 151:../stdperiph/source/stm32f37x_crc.c ****   tmpcr |= (uint32_t)CRC_PolSize;
 106              		.loc 1 151 0
 107 0008 1843     		orrs	r0, r0, r3
 108              	.LVL3:
 152:../stdperiph/source/stm32f37x_crc.c **** 
 153:../stdperiph/source/stm32f37x_crc.c ****   /* Write to CR register */
 154:../stdperiph/source/stm32f37x_crc.c ****   CRC->CR = (uint32_t)tmpcr;
 109              		.loc 1 154 0
 110 000a 9060     		str	r0, [r2, #8]
 111 000c 7047     		bx	lr
 112              	.L9:
 113 000e 00BF     		.align	2
 114              	.L8:
 115 0010 00300240 		.word	1073885184
 116              		.cfi_endproc
 117              	.LFE113:
 119              		.section	.text.CRC_ReverseInputDataSelect,"ax",%progbits
 120              		.align	2
 121              		.global	CRC_ReverseInputDataSelect
 122              		.thumb
 123              		.thumb_func
 125              	CRC_ReverseInputDataSelect:
 126              	.LFB114:
 155:../stdperiph/source/stm32f37x_crc.c **** }
 156:../stdperiph/source/stm32f37x_crc.c **** 
 157:../stdperiph/source/stm32f37x_crc.c **** /**
 158:../stdperiph/source/stm32f37x_crc.c ****   * @brief  Selects the reverse operation to be performed on input data.
 159:../stdperiph/source/stm32f37x_crc.c ****   * @param  CRC_ReverseInputData: Specifies the reverse operation on input data.
 160:../stdperiph/source/stm32f37x_crc.c ****   *          This parameter can be:
 161:../stdperiph/source/stm32f37x_crc.c ****   *            @arg CRC_ReverseInputData_No: No reverse operation is performed
 162:../stdperiph/source/stm32f37x_crc.c ****   *            @arg CRC_ReverseInputData_8bits: reverse operation performed on 8 bits
 163:../stdperiph/source/stm32f37x_crc.c ****   *            @arg CRC_ReverseInputData_16bits: reverse operation performed on 16 bits
 164:../stdperiph/source/stm32f37x_crc.c ****   *            @arg CRC_ReverseInputData_32bits: reverse operation performed on 32 bits
 165:../stdperiph/source/stm32f37x_crc.c ****   * @retval None
 166:../stdperiph/source/stm32f37x_crc.c ****   */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s 			page 6


 167:../stdperiph/source/stm32f37x_crc.c **** void CRC_ReverseInputDataSelect(uint32_t CRC_ReverseInputData)
 168:../stdperiph/source/stm32f37x_crc.c **** {
 127              		.loc 1 168 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              		@ link register save eliminated.
 132              	.LVL4:
 169:../stdperiph/source/stm32f37x_crc.c ****   uint32_t tmpcr = 0;
 170:../stdperiph/source/stm32f37x_crc.c **** 
 171:../stdperiph/source/stm32f37x_crc.c ****   /* Check the parameter */
 172:../stdperiph/source/stm32f37x_crc.c ****   assert_param(IS_CRC_REVERSE_INPUT_DATA(CRC_ReverseInputData));
 173:../stdperiph/source/stm32f37x_crc.c **** 
 174:../stdperiph/source/stm32f37x_crc.c ****   /* Get CR register value */
 175:../stdperiph/source/stm32f37x_crc.c ****   tmpcr = CRC->CR;
 133              		.loc 1 175 0
 134 0000 034A     		ldr	r2, .L11
 135 0002 9368     		ldr	r3, [r2, #8]
 136              	.LVL5:
 176:../stdperiph/source/stm32f37x_crc.c **** 
 177:../stdperiph/source/stm32f37x_crc.c ****   /* Reset REV_IN bits */
 178:../stdperiph/source/stm32f37x_crc.c ****   tmpcr &= (uint32_t)~((uint32_t)CRC_CR_REV_IN);
 137              		.loc 1 178 0
 138 0004 23F06003 		bic	r3, r3, #96
 139              	.LVL6:
 179:../stdperiph/source/stm32f37x_crc.c ****   /* Set the reverse operation */
 180:../stdperiph/source/stm32f37x_crc.c ****   tmpcr |= (uint32_t)CRC_ReverseInputData;
 140              		.loc 1 180 0
 141 0008 1843     		orrs	r0, r0, r3
 142              	.LVL7:
 181:../stdperiph/source/stm32f37x_crc.c **** 
 182:../stdperiph/source/stm32f37x_crc.c ****   /* Write to CR register */
 183:../stdperiph/source/stm32f37x_crc.c ****   CRC->CR = (uint32_t)tmpcr;
 143              		.loc 1 183 0
 144 000a 9060     		str	r0, [r2, #8]
 145 000c 7047     		bx	lr
 146              	.L12:
 147 000e 00BF     		.align	2
 148              	.L11:
 149 0010 00300240 		.word	1073885184
 150              		.cfi_endproc
 151              	.LFE114:
 153              		.section	.text.CRC_ReverseOutputDataCmd,"ax",%progbits
 154              		.align	2
 155              		.global	CRC_ReverseOutputDataCmd
 156              		.thumb
 157              		.thumb_func
 159              	CRC_ReverseOutputDataCmd:
 160              	.LFB115:
 184:../stdperiph/source/stm32f37x_crc.c **** }
 185:../stdperiph/source/stm32f37x_crc.c **** 
 186:../stdperiph/source/stm32f37x_crc.c **** /**
 187:../stdperiph/source/stm32f37x_crc.c ****   * @brief  Enables or disable the reverse operation on output data.
 188:../stdperiph/source/stm32f37x_crc.c ****   *         The reverse operation on output data is performed on 32-bit.
 189:../stdperiph/source/stm32f37x_crc.c ****   * @param  NewState: new state of the reverse operation on output data.
 190:../stdperiph/source/stm32f37x_crc.c ****   *          This parameter can be: ENABLE or DISABLE.
 191:../stdperiph/source/stm32f37x_crc.c ****   * @retval None
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s 			page 7


 192:../stdperiph/source/stm32f37x_crc.c ****   */
 193:../stdperiph/source/stm32f37x_crc.c **** void CRC_ReverseOutputDataCmd(FunctionalState NewState)
 194:../stdperiph/source/stm32f37x_crc.c **** {
 161              		.loc 1 194 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166              	.LVL8:
 195:../stdperiph/source/stm32f37x_crc.c ****   /* Check the parameters */
 196:../stdperiph/source/stm32f37x_crc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 197:../stdperiph/source/stm32f37x_crc.c **** 
 198:../stdperiph/source/stm32f37x_crc.c ****   if (NewState != DISABLE)
 167              		.loc 1 198 0
 168 0000 28B1     		cbz	r0, .L14
 199:../stdperiph/source/stm32f37x_crc.c ****   {
 200:../stdperiph/source/stm32f37x_crc.c ****     /* Enable reverse operation on output data */
 201:../stdperiph/source/stm32f37x_crc.c ****     CRC->CR |= CRC_CR_REV_OUT;
 169              		.loc 1 201 0
 170 0002 064A     		ldr	r2, .L16
 171 0004 9368     		ldr	r3, [r2, #8]
 172 0006 43F08003 		orr	r3, r3, #128
 173 000a 9360     		str	r3, [r2, #8]
 174 000c 7047     		bx	lr
 175              	.L14:
 202:../stdperiph/source/stm32f37x_crc.c ****   }
 203:../stdperiph/source/stm32f37x_crc.c ****   else
 204:../stdperiph/source/stm32f37x_crc.c ****   {
 205:../stdperiph/source/stm32f37x_crc.c ****     /* Disable reverse operation on output data */
 206:../stdperiph/source/stm32f37x_crc.c ****     CRC->CR &= (uint32_t)~((uint32_t)CRC_CR_REV_OUT);
 176              		.loc 1 206 0
 177 000e 034A     		ldr	r2, .L16
 178 0010 9368     		ldr	r3, [r2, #8]
 179 0012 23F08003 		bic	r3, r3, #128
 180 0016 9360     		str	r3, [r2, #8]
 181 0018 7047     		bx	lr
 182              	.L17:
 183 001a 00BF     		.align	2
 184              	.L16:
 185 001c 00300240 		.word	1073885184
 186              		.cfi_endproc
 187              	.LFE115:
 189              		.section	.text.CRC_SetInitRegister,"ax",%progbits
 190              		.align	2
 191              		.global	CRC_SetInitRegister
 192              		.thumb
 193              		.thumb_func
 195              	CRC_SetInitRegister:
 196              	.LFB116:
 207:../stdperiph/source/stm32f37x_crc.c ****   }
 208:../stdperiph/source/stm32f37x_crc.c **** }
 209:../stdperiph/source/stm32f37x_crc.c **** 
 210:../stdperiph/source/stm32f37x_crc.c **** /**
 211:../stdperiph/source/stm32f37x_crc.c ****   * @brief  Initializes the INIT register.
 212:../stdperiph/source/stm32f37x_crc.c ****   * @note   After resetting CRC calculation unit, CRC_InitValue is stored in DR register
 213:../stdperiph/source/stm32f37x_crc.c ****   * @param  CRC_InitValue: Programmable initial CRC value
 214:../stdperiph/source/stm32f37x_crc.c ****   * @retval None
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s 			page 8


 215:../stdperiph/source/stm32f37x_crc.c ****   */
 216:../stdperiph/source/stm32f37x_crc.c **** void CRC_SetInitRegister(uint32_t CRC_InitValue)
 217:../stdperiph/source/stm32f37x_crc.c **** {
 197              		.loc 1 217 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              		@ link register save eliminated.
 202              	.LVL9:
 218:../stdperiph/source/stm32f37x_crc.c ****   CRC->INIT = CRC_InitValue;
 203              		.loc 1 218 0
 204 0000 014B     		ldr	r3, .L19
 205 0002 1861     		str	r0, [r3, #16]
 206 0004 7047     		bx	lr
 207              	.L20:
 208 0006 00BF     		.align	2
 209              	.L19:
 210 0008 00300240 		.word	1073885184
 211              		.cfi_endproc
 212              	.LFE116:
 214              		.section	.text.CRC_SetPolynomial,"ax",%progbits
 215              		.align	2
 216              		.global	CRC_SetPolynomial
 217              		.thumb
 218              		.thumb_func
 220              	CRC_SetPolynomial:
 221              	.LFB117:
 219:../stdperiph/source/stm32f37x_crc.c **** }
 220:../stdperiph/source/stm32f37x_crc.c **** 
 221:../stdperiph/source/stm32f37x_crc.c **** /**
 222:../stdperiph/source/stm32f37x_crc.c ****   * @brief  Initializes the polynomail coefficients.
 223:../stdperiph/source/stm32f37x_crc.c ****   * @param  CRC_Pol: Polynomial to be used for CRC calculation.
 224:../stdperiph/source/stm32f37x_crc.c ****   * @retval None
 225:../stdperiph/source/stm32f37x_crc.c ****   */
 226:../stdperiph/source/stm32f37x_crc.c **** void CRC_SetPolynomial(uint32_t CRC_Pol)
 227:../stdperiph/source/stm32f37x_crc.c **** {
 222              		.loc 1 227 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226              		@ link register save eliminated.
 227              	.LVL10:
 228:../stdperiph/source/stm32f37x_crc.c ****   CRC->POL = CRC_Pol;
 228              		.loc 1 228 0
 229 0000 014B     		ldr	r3, .L22
 230 0002 5861     		str	r0, [r3, #20]
 231 0004 7047     		bx	lr
 232              	.L23:
 233 0006 00BF     		.align	2
 234              	.L22:
 235 0008 00300240 		.word	1073885184
 236              		.cfi_endproc
 237              	.LFE117:
 239              		.section	.text.CRC_CalcCRC,"ax",%progbits
 240              		.align	2
 241              		.global	CRC_CalcCRC
 242              		.thumb
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s 			page 9


 243              		.thumb_func
 245              	CRC_CalcCRC:
 246              	.LFB118:
 229:../stdperiph/source/stm32f37x_crc.c **** }
 230:../stdperiph/source/stm32f37x_crc.c **** 
 231:../stdperiph/source/stm32f37x_crc.c **** /**
 232:../stdperiph/source/stm32f37x_crc.c ****   * @}
 233:../stdperiph/source/stm32f37x_crc.c ****   */
 234:../stdperiph/source/stm32f37x_crc.c **** 
 235:../stdperiph/source/stm32f37x_crc.c **** /** @defgroup CRC_Group2 CRC computation of one/many 32-bit data functions
 236:../stdperiph/source/stm32f37x_crc.c ****  *  @brief   CRC computation of one/many 32-bit data functions
 237:../stdperiph/source/stm32f37x_crc.c ****  *
 238:../stdperiph/source/stm32f37x_crc.c **** @verbatim
 239:../stdperiph/source/stm32f37x_crc.c ****  ===============================================================================
 240:../stdperiph/source/stm32f37x_crc.c ****                      ##### CRC computation functions #####
 241:../stdperiph/source/stm32f37x_crc.c ****  ===============================================================================
 242:../stdperiph/source/stm32f37x_crc.c **** 
 243:../stdperiph/source/stm32f37x_crc.c **** @endverbatim
 244:../stdperiph/source/stm32f37x_crc.c ****   * @{
 245:../stdperiph/source/stm32f37x_crc.c ****   */
 246:../stdperiph/source/stm32f37x_crc.c **** 
 247:../stdperiph/source/stm32f37x_crc.c **** /**
 248:../stdperiph/source/stm32f37x_crc.c ****   * @brief  Computes the 32-bit CRC of a given data word(32-bit).
 249:../stdperiph/source/stm32f37x_crc.c ****   * @param  CRC_Data: data word(32-bit) to compute its CRC
 250:../stdperiph/source/stm32f37x_crc.c ****   * @retval 32-bit CRC
 251:../stdperiph/source/stm32f37x_crc.c ****   */
 252:../stdperiph/source/stm32f37x_crc.c **** uint32_t CRC_CalcCRC(uint32_t CRC_Data)
 253:../stdperiph/source/stm32f37x_crc.c **** {
 247              		.loc 1 253 0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251              		@ link register save eliminated.
 252              	.LVL11:
 254:../stdperiph/source/stm32f37x_crc.c ****   CRC->DR = CRC_Data;
 253              		.loc 1 254 0
 254 0000 014B     		ldr	r3, .L25
 255 0002 1860     		str	r0, [r3]
 255:../stdperiph/source/stm32f37x_crc.c ****   
 256:../stdperiph/source/stm32f37x_crc.c ****   return (CRC->DR);
 256              		.loc 1 256 0
 257 0004 1868     		ldr	r0, [r3]
 258              	.LVL12:
 257:../stdperiph/source/stm32f37x_crc.c **** }
 259              		.loc 1 257 0
 260 0006 7047     		bx	lr
 261              	.L26:
 262              		.align	2
 263              	.L25:
 264 0008 00300240 		.word	1073885184
 265              		.cfi_endproc
 266              	.LFE118:
 268              		.section	.text.CRC_CalcCRC16bits,"ax",%progbits
 269              		.align	2
 270              		.global	CRC_CalcCRC16bits
 271              		.thumb
 272              		.thumb_func
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s 			page 10


 274              	CRC_CalcCRC16bits:
 275              	.LFB119:
 258:../stdperiph/source/stm32f37x_crc.c **** 
 259:../stdperiph/source/stm32f37x_crc.c **** /**
 260:../stdperiph/source/stm32f37x_crc.c ****   * @brief  Computes the 16-bit CRC of a given 16-bit data.
 261:../stdperiph/source/stm32f37x_crc.c ****   * @param  CRC_Data: data half-word(16-bit) to compute its CRC
 262:../stdperiph/source/stm32f37x_crc.c ****   * @retval 16-bit CRC
 263:../stdperiph/source/stm32f37x_crc.c ****   */
 264:../stdperiph/source/stm32f37x_crc.c **** uint32_t CRC_CalcCRC16bits(uint16_t CRC_Data)
 265:../stdperiph/source/stm32f37x_crc.c **** {
 276              		.loc 1 265 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280              		@ link register save eliminated.
 281              	.LVL13:
 266:../stdperiph/source/stm32f37x_crc.c ****   *(uint16_t*)(CRC_BASE) = (uint16_t) CRC_Data;
 282              		.loc 1 266 0
 283 0000 014B     		ldr	r3, .L28
 284 0002 1880     		strh	r0, [r3]	@ movhi
 267:../stdperiph/source/stm32f37x_crc.c ****   
 268:../stdperiph/source/stm32f37x_crc.c ****   return (CRC->DR);
 285              		.loc 1 268 0
 286 0004 1868     		ldr	r0, [r3]
 287              	.LVL14:
 269:../stdperiph/source/stm32f37x_crc.c **** }
 288              		.loc 1 269 0
 289 0006 7047     		bx	lr
 290              	.L29:
 291              		.align	2
 292              	.L28:
 293 0008 00300240 		.word	1073885184
 294              		.cfi_endproc
 295              	.LFE119:
 297              		.section	.text.CRC_CalcCRC8bits,"ax",%progbits
 298              		.align	2
 299              		.global	CRC_CalcCRC8bits
 300              		.thumb
 301              		.thumb_func
 303              	CRC_CalcCRC8bits:
 304              	.LFB120:
 270:../stdperiph/source/stm32f37x_crc.c **** 
 271:../stdperiph/source/stm32f37x_crc.c **** /**
 272:../stdperiph/source/stm32f37x_crc.c ****   * @brief  Computes the 8-bit CRC of a given 8-bit data.
 273:../stdperiph/source/stm32f37x_crc.c ****   * @param  CRC_Data: 8-bit data to compute its CRC
 274:../stdperiph/source/stm32f37x_crc.c ****   * @retval 8-bit CRC
 275:../stdperiph/source/stm32f37x_crc.c ****   */
 276:../stdperiph/source/stm32f37x_crc.c **** uint32_t CRC_CalcCRC8bits(uint8_t CRC_Data)
 277:../stdperiph/source/stm32f37x_crc.c **** {
 305              		.loc 1 277 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 310              	.LVL15:
 278:../stdperiph/source/stm32f37x_crc.c ****   *(uint8_t*)(CRC_BASE) = (uint8_t) CRC_Data;
 311              		.loc 1 278 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s 			page 11


 312 0000 014B     		ldr	r3, .L31
 313 0002 1870     		strb	r0, [r3]
 279:../stdperiph/source/stm32f37x_crc.c **** 
 280:../stdperiph/source/stm32f37x_crc.c ****   return (CRC->DR);
 314              		.loc 1 280 0
 315 0004 1868     		ldr	r0, [r3]
 316              	.LVL16:
 281:../stdperiph/source/stm32f37x_crc.c **** }
 317              		.loc 1 281 0
 318 0006 7047     		bx	lr
 319              	.L32:
 320              		.align	2
 321              	.L31:
 322 0008 00300240 		.word	1073885184
 323              		.cfi_endproc
 324              	.LFE120:
 326              		.section	.text.CRC_CalcBlockCRC,"ax",%progbits
 327              		.align	2
 328              		.global	CRC_CalcBlockCRC
 329              		.thumb
 330              		.thumb_func
 332              	CRC_CalcBlockCRC:
 333              	.LFB121:
 282:../stdperiph/source/stm32f37x_crc.c **** 
 283:../stdperiph/source/stm32f37x_crc.c **** /**
 284:../stdperiph/source/stm32f37x_crc.c ****   * @brief  Computes the 32-bit CRC of a given buffer of data word(32-bit).
 285:../stdperiph/source/stm32f37x_crc.c ****   * @param  pBuffer: pointer to the buffer containing the data to be computed
 286:../stdperiph/source/stm32f37x_crc.c ****   * @param  BufferLength: length of the buffer to be computed
 287:../stdperiph/source/stm32f37x_crc.c ****   * @retval 32-bit CRC
 288:../stdperiph/source/stm32f37x_crc.c ****   */
 289:../stdperiph/source/stm32f37x_crc.c **** uint32_t CRC_CalcBlockCRC(uint32_t pBuffer[], uint32_t BufferLength)
 290:../stdperiph/source/stm32f37x_crc.c **** {
 334              		.loc 1 290 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              		@ link register save eliminated.
 339              	.LVL17:
 340 0000 10B4     		push	{r4}
 341              	.LCFI0:
 342              		.cfi_def_cfa_offset 4
 343              		.cfi_offset 4, -4
 344              	.LVL18:
 291:../stdperiph/source/stm32f37x_crc.c ****   uint32_t index = 0;
 292:../stdperiph/source/stm32f37x_crc.c ****   
 293:../stdperiph/source/stm32f37x_crc.c ****   for(index = 0; index < BufferLength; index++)
 345              		.loc 1 293 0
 346 0002 0023     		movs	r3, #0
 347 0004 04E0     		b	.L34
 348              	.LVL19:
 349              	.L35:
 294:../stdperiph/source/stm32f37x_crc.c ****   {
 295:../stdperiph/source/stm32f37x_crc.c ****     CRC->DR = pBuffer[index];
 350              		.loc 1 295 0 discriminator 3
 351 0006 50F82340 		ldr	r4, [r0, r3, lsl #2]
 352 000a 054A     		ldr	r2, .L37
 353 000c 1460     		str	r4, [r2]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s 			page 12


 293:../stdperiph/source/stm32f37x_crc.c ****   {
 354              		.loc 1 293 0 discriminator 3
 355 000e 0133     		adds	r3, r3, #1
 356              	.LVL20:
 357              	.L34:
 293:../stdperiph/source/stm32f37x_crc.c ****   {
 358              		.loc 1 293 0 is_stmt 0 discriminator 1
 359 0010 8B42     		cmp	r3, r1
 360 0012 F8D3     		bcc	.L35
 296:../stdperiph/source/stm32f37x_crc.c ****   }
 297:../stdperiph/source/stm32f37x_crc.c ****   return (CRC->DR);
 361              		.loc 1 297 0 is_stmt 1
 362 0014 024B     		ldr	r3, .L37
 363              	.LVL21:
 364 0016 1868     		ldr	r0, [r3]
 365              	.LVL22:
 298:../stdperiph/source/stm32f37x_crc.c **** }
 366              		.loc 1 298 0
 367 0018 5DF8044B 		ldr	r4, [sp], #4
 368              	.LCFI1:
 369              		.cfi_restore 4
 370              		.cfi_def_cfa_offset 0
 371 001c 7047     		bx	lr
 372              	.L38:
 373 001e 00BF     		.align	2
 374              	.L37:
 375 0020 00300240 		.word	1073885184
 376              		.cfi_endproc
 377              	.LFE121:
 379              		.section	.text.CRC_GetCRC,"ax",%progbits
 380              		.align	2
 381              		.global	CRC_GetCRC
 382              		.thumb
 383              		.thumb_func
 385              	CRC_GetCRC:
 386              	.LFB122:
 299:../stdperiph/source/stm32f37x_crc.c **** 
 300:../stdperiph/source/stm32f37x_crc.c **** /**
 301:../stdperiph/source/stm32f37x_crc.c ****   * @brief  Returns the current CRC value.
 302:../stdperiph/source/stm32f37x_crc.c ****   * @param  None
 303:../stdperiph/source/stm32f37x_crc.c ****   * @retval 32-bit CRC
 304:../stdperiph/source/stm32f37x_crc.c ****   */
 305:../stdperiph/source/stm32f37x_crc.c **** uint32_t CRC_GetCRC(void)
 306:../stdperiph/source/stm32f37x_crc.c **** {
 387              		.loc 1 306 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 307:../stdperiph/source/stm32f37x_crc.c ****   return (CRC->DR);
 392              		.loc 1 307 0
 393 0000 014B     		ldr	r3, .L40
 394 0002 1868     		ldr	r0, [r3]
 308:../stdperiph/source/stm32f37x_crc.c **** }
 395              		.loc 1 308 0
 396 0004 7047     		bx	lr
 397              	.L41:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s 			page 13


 398 0006 00BF     		.align	2
 399              	.L40:
 400 0008 00300240 		.word	1073885184
 401              		.cfi_endproc
 402              	.LFE122:
 404              		.section	.text.CRC_SetIDRegister,"ax",%progbits
 405              		.align	2
 406              		.global	CRC_SetIDRegister
 407              		.thumb
 408              		.thumb_func
 410              	CRC_SetIDRegister:
 411              	.LFB123:
 309:../stdperiph/source/stm32f37x_crc.c **** 
 310:../stdperiph/source/stm32f37x_crc.c **** /**
 311:../stdperiph/source/stm32f37x_crc.c ****   * @}
 312:../stdperiph/source/stm32f37x_crc.c ****   */
 313:../stdperiph/source/stm32f37x_crc.c **** 
 314:../stdperiph/source/stm32f37x_crc.c **** /** @defgroup CRC_Group3 CRC Independent Register (IDR) access functions
 315:../stdperiph/source/stm32f37x_crc.c ****  *  @brief   CRC Independent Register (IDR) access (write/read) functions
 316:../stdperiph/source/stm32f37x_crc.c ****  *
 317:../stdperiph/source/stm32f37x_crc.c **** @verbatim
 318:../stdperiph/source/stm32f37x_crc.c ****  ===============================================================================
 319:../stdperiph/source/stm32f37x_crc.c ****            ##### CRC Independent Register (IDR) access functions #####
 320:../stdperiph/source/stm32f37x_crc.c ****  ===============================================================================
 321:../stdperiph/source/stm32f37x_crc.c **** 
 322:../stdperiph/source/stm32f37x_crc.c **** @endverbatim
 323:../stdperiph/source/stm32f37x_crc.c ****   * @{
 324:../stdperiph/source/stm32f37x_crc.c ****   */
 325:../stdperiph/source/stm32f37x_crc.c **** 
 326:../stdperiph/source/stm32f37x_crc.c **** /**
 327:../stdperiph/source/stm32f37x_crc.c ****   * @brief  Stores an 8-bit data in the Independent Data(ID) register.
 328:../stdperiph/source/stm32f37x_crc.c ****   * @param  CRC_IDValue: 8-bit value to be stored in the ID register 					
 329:../stdperiph/source/stm32f37x_crc.c ****   * @retval None
 330:../stdperiph/source/stm32f37x_crc.c ****   */
 331:../stdperiph/source/stm32f37x_crc.c **** void CRC_SetIDRegister(uint8_t CRC_IDValue)
 332:../stdperiph/source/stm32f37x_crc.c **** {
 412              		.loc 1 332 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 417              	.LVL23:
 333:../stdperiph/source/stm32f37x_crc.c ****   CRC->IDR = CRC_IDValue;
 418              		.loc 1 333 0
 419 0000 014B     		ldr	r3, .L43
 420 0002 1871     		strb	r0, [r3, #4]
 421 0004 7047     		bx	lr
 422              	.L44:
 423 0006 00BF     		.align	2
 424              	.L43:
 425 0008 00300240 		.word	1073885184
 426              		.cfi_endproc
 427              	.LFE123:
 429              		.section	.text.CRC_GetIDRegister,"ax",%progbits
 430              		.align	2
 431              		.global	CRC_GetIDRegister
 432              		.thumb
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s 			page 14


 433              		.thumb_func
 435              	CRC_GetIDRegister:
 436              	.LFB124:
 334:../stdperiph/source/stm32f37x_crc.c **** }
 335:../stdperiph/source/stm32f37x_crc.c **** 
 336:../stdperiph/source/stm32f37x_crc.c **** /**
 337:../stdperiph/source/stm32f37x_crc.c ****   * @brief  Returns the 8-bit data stored in the Independent Data(ID) register
 338:../stdperiph/source/stm32f37x_crc.c ****   * @param  None
 339:../stdperiph/source/stm32f37x_crc.c ****   * @retval 8-bit value of the ID register 
 340:../stdperiph/source/stm32f37x_crc.c ****   */
 341:../stdperiph/source/stm32f37x_crc.c **** uint8_t CRC_GetIDRegister(void)
 342:../stdperiph/source/stm32f37x_crc.c **** {
 437              		.loc 1 342 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		@ link register save eliminated.
 343:../stdperiph/source/stm32f37x_crc.c ****   return (CRC->IDR);
 442              		.loc 1 343 0
 443 0000 014B     		ldr	r3, .L46
 444 0002 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 344:../stdperiph/source/stm32f37x_crc.c **** }
 445              		.loc 1 344 0
 446 0004 7047     		bx	lr
 447              	.L47:
 448 0006 00BF     		.align	2
 449              	.L46:
 450 0008 00300240 		.word	1073885184
 451              		.cfi_endproc
 452              	.LFE124:
 454              		.text
 455              	.Letext0:
 456              		.file 2 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\machine\\_defaul
 457              		.file 3 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\sys\\_stdint.h"
 458              		.file 4 "../cmsis/include/stm32f37x.h"
 459              		.file 5 "../cmsis/include/core_cm4.h"
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f37x_crc.c
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:22     .text.CRC_DeInit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:27     .text.CRC_DeInit:00000000 CRC_DeInit
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:54     .text.CRC_DeInit:00000018 $d
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:60     .text.CRC_ResetDR:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:65     .text.CRC_ResetDR:00000000 CRC_ResetDR
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:81     .text.CRC_ResetDR:0000000c $d
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:86     .text.CRC_PolynomialSizeSelect:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:91     .text.CRC_PolynomialSizeSelect:00000000 CRC_PolynomialSizeSelect
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:115    .text.CRC_PolynomialSizeSelect:00000010 $d
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:120    .text.CRC_ReverseInputDataSelect:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:125    .text.CRC_ReverseInputDataSelect:00000000 CRC_ReverseInputDataSelect
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:149    .text.CRC_ReverseInputDataSelect:00000010 $d
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:154    .text.CRC_ReverseOutputDataCmd:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:159    .text.CRC_ReverseOutputDataCmd:00000000 CRC_ReverseOutputDataCmd
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:185    .text.CRC_ReverseOutputDataCmd:0000001c $d
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:190    .text.CRC_SetInitRegister:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:195    .text.CRC_SetInitRegister:00000000 CRC_SetInitRegister
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:210    .text.CRC_SetInitRegister:00000008 $d
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:215    .text.CRC_SetPolynomial:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:220    .text.CRC_SetPolynomial:00000000 CRC_SetPolynomial
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:235    .text.CRC_SetPolynomial:00000008 $d
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:240    .text.CRC_CalcCRC:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:245    .text.CRC_CalcCRC:00000000 CRC_CalcCRC
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:264    .text.CRC_CalcCRC:00000008 $d
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:269    .text.CRC_CalcCRC16bits:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:274    .text.CRC_CalcCRC16bits:00000000 CRC_CalcCRC16bits
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:293    .text.CRC_CalcCRC16bits:00000008 $d
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:298    .text.CRC_CalcCRC8bits:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:303    .text.CRC_CalcCRC8bits:00000000 CRC_CalcCRC8bits
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:322    .text.CRC_CalcCRC8bits:00000008 $d
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:327    .text.CRC_CalcBlockCRC:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:332    .text.CRC_CalcBlockCRC:00000000 CRC_CalcBlockCRC
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:375    .text.CRC_CalcBlockCRC:00000020 $d
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:380    .text.CRC_GetCRC:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:385    .text.CRC_GetCRC:00000000 CRC_GetCRC
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:400    .text.CRC_GetCRC:00000008 $d
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:405    .text.CRC_SetIDRegister:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:410    .text.CRC_SetIDRegister:00000000 CRC_SetIDRegister
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:425    .text.CRC_SetIDRegister:00000008 $d
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:430    .text.CRC_GetIDRegister:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:435    .text.CRC_GetIDRegister:00000000 CRC_GetIDRegister
C:\Users\strag\AppData\Local\Temp\ccyyBkZK.s:450    .text.CRC_GetIDRegister:00000008 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
