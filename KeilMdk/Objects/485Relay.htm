<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\485Relay.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\485Relay.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050041: Last Updated: Mon Nov 05 09:08:46 2018
<BR><P>
<H3>Maximum Stack Usage =       1160 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
vNowEnergy_Modifier &rArr; vNow_Frozen_Modify_Mothod &rArr; Flash_Write_Word &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f37x_it.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[1e]">CAN1_RX0_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[1d]">CAN1_TX_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[34]">CEC_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[44]">COMP_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[3c]">DMA2_Channel1_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[3d]">DMA2_Channel2_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[3e]">DMA2_Channel3_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[3f]">DMA2_Channel4_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[40]">DMA2_Channel5_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f37x_it.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[4f]">Default_Reset</a> from dlt645.o(.text) referenced 2 times from dlt645.o(.constdata)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[12]">EXTI2_TS_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[5f]">Estatus_Modify_CurrentEvent</a> from dlt645.o(.text) referenced 5 times from dlt645.o(.constdata)
 <LI><a href="#[5f]">Estatus_Modify_CurrentEvent</a> from dlt645.o(.text) referenced from dlt645.o(.text)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[49]">FPU_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[4d]">Get_VChange_State</a> from dlt645.o(.text) referenced 2 times from dlt645.o(.constdata)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f37x_it.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f37x_it.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f37x_it.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f37x_it.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[4e]">Query_Voltage_Limit</a> from dlt645.o(.text) referenced 2 times from dlt645.o(.constdata)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[41]">SDADC1_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[42]">SDADC2_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[43]">SDADC3_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[39]">SPI3_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f37x_it.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[63]">Set_Voltage_Limit</a> from dlt645.o(.text) referenced from dlt645.o(.constdata)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f37x_it.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[4b]">SystemInit</a> from system_stm32f37x.o(.text) referenced from startup_stm32f37x.o(.text)
 <LI><a href="#[c]">TAMPER_STAMP_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[35]">TIM12_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[36]">TIM13_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[37]">TIM14_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[22]">TIM15_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[23]">TIM16_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[24]">TIM17_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[25]">TIM18_DAC2_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[48]">TIM19_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from stm32f37x_it.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[38]">TIM5_IRQHandler</a> from stm32f37x_it.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[3a]">TIM6_DAC1_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[3b]">TIM7_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from stm32f37x_it.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from stm32f37x_it.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from stm32f37x_it.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[47]">USBWakeUp_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[45]">USB_HP_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[46]">USB_LP_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f37x_it.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f37x.o(.text) referenced from startup_stm32f37x.o(RESET)
 <LI><a href="#[4c]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f37x.o(.text)
 <LI><a href="#[4a]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[62]">vAccountEnergy_Modify</a> from dlt645.o(.text) referenced 9 times from dlt645.o(.constdata)
 <LI><a href="#[5b]">vCurrent_CTRatio_ReadSet</a> from dlt645.o(.text) referenced 2 times from dlt645.o(.constdata)
 <LI><a href="#[5a]">vCurrent_CTRatio_Set</a> from dlt645.o(.text) referenced 2 times from dlt645.o(.constdata)
 <LI><a href="#[9d]">vCurrent_Limit_Modify</a> from dlt645.o(.text) referenced from dlt645.o(.text)
 <LI><a href="#[59]">vCurrent_Limit_ReadSet</a> from dlt645.o(.text) referenced 2 times from dlt645.o(.constdata)
 <LI><a href="#[58]">vCurrent_Limit_Set</a> from dlt645.o(.text) referenced 2 times from dlt645.o(.constdata)
 <LI><a href="#[98]">vCurrent_Modify</a> from dlt645.o(.text) referenced from dlt645.o(.text)
 <LI><a href="#[5c]">vCurrent_TransFormer_Capacity_ReadSet</a> from dlt645.o(.text) referenced 2 times from dlt645.o(.constdata)
 <LI><a href="#[61]">vDayfrozen_Modifier</a> from dlt645.o(.text) referenced 3 times from dlt645.o(.constdata)
 <LI><a href="#[54]">vEnergy_Modify_AbleSet</a> from dlt645.o(.text) referenced 2 times from dlt645.o(.constdata)
 <LI><a href="#[55]">vEnergy_Modify_RaitoSet</a> from dlt645.o(.text) referenced 2 times from dlt645.o(.constdata)
 <LI><a href="#[57]">vEnergy_Modify_ReadSet</a> from dlt645.o(.text) referenced from dlt645.o(.constdata)
 <LI><a href="#[56]">vEnergy_Modify_Reset</a> from dlt645.o(.text) referenced 2 times from dlt645.o(.constdata)
 <LI><a href="#[65]">vLoadProfile_Current_Modify</a> from dlt645.o(.text) referenced 4 times from dlt645.o(.constdata)
 <LI><a href="#[64]">vLoadProfile_Voltage_Modify</a> from dlt645.o(.text) referenced 4 times from dlt645.o(.constdata)
 <LI><a href="#[60]">vNowEnergy_Modifier</a> from dlt645.o(.text) referenced 9 times from dlt645.o(.constdata)
 <LI><a href="#[5d]">vRead_Version</a> from dlt645.o(.text) referenced 2 times from dlt645.o(.constdata)
 <LI><a href="#[5e]">vVoltageHandle</a> from dlt645.o(.text) referenced 4 times from dlt645.o(.constdata)
 <LI><a href="#[52]">vVoltage_SetMaxMaxValue</a> from dlt645.o(.text) referenced from dlt645.o(.constdata)
 <LI><a href="#[50]">vVoltage_SetMaxValue</a> from dlt645.o(.text) referenced from dlt645.o(.constdata)
 <LI><a href="#[53]">vVoltage_SetMinMinValue</a> from dlt645.o(.text) referenced from dlt645.o(.constdata)
 <LI><a href="#[51]">vVoltage_SetMinValue</a> from dlt645.o(.text) referenced from dlt645.o(.constdata)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[4c]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(.text)
</UL>
<P><STRONG><a name="[e5]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[66]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[e4]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[e6]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[e7]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[e8]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[e9]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[ea]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_TS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>SDADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>SDADC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>SDADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM18_DAC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>TIM19_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM6_DAC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>USB_HP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>USB_LP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f37x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[b7]"></a>FLASH_SetLatency</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInterFlash_Init
</UL>

<P><STRONG><a name="[eb]"></a>FLASH_HalfCycleAccessCmd</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f37x_flash.o(.text), UNUSED)

<P><STRONG><a name="[ec]"></a>FLASH_PrefetchBufferCmd</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f37x_flash.o(.text), UNUSED)

<P><STRONG><a name="[b4]"></a>FLASH_Unlock</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f37x_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEProm_Write
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Word
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_Reset
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_AbleSet
</UL>

<P><STRONG><a name="[b5]"></a>FLASH_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f37x_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEProm_Write
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Word
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_Reset
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_AbleSet
</UL>

<P><STRONG><a name="[69]"></a>FLASH_GetStatus</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f37x_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[68]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, stm32f37x_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_WriteUser
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_SRAMParityConfig
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_VDD_SD12Config
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_VDDAConfig
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_BOOTConfig
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_UserConfig
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_RDPConfig
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_EnableWRP
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_ProgramData
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_Erase
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseAllPages
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[6a]"></a>FLASH_ErasePage</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32f37x_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEProm_Write
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Word
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_Reset
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_AbleSet
</UL>

<P><STRONG><a name="[6b]"></a>FLASH_EraseAllPages</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, stm32f37x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[6c]"></a>FLASH_ProgramWord</STRONG> (Thumb, 104 bytes, Stack size 20 bytes, stm32f37x_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Word
</UL>

<P><STRONG><a name="[6d]"></a>FLASH_ProgramHalfWord</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, stm32f37x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEProm_Write
</UL>

<P><STRONG><a name="[ed]"></a>FLASH_OB_Unlock</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f37x_flash.o(.text), UNUSED)

<P><STRONG><a name="[ee]"></a>FLASH_OB_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f37x_flash.o(.text), UNUSED)

<P><STRONG><a name="[ef]"></a>FLASH_OB_Launch</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f37x_flash.o(.text), UNUSED)

<P><STRONG><a name="[6f]"></a>FLASH_OB_GetRDP</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f37x_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_Erase
</UL>

<P><STRONG><a name="[6e]"></a>FLASH_OB_Erase</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, stm32f37x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_GetRDP
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[70]"></a>FLASH_OB_ProgramData</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, stm32f37x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[71]"></a>FLASH_OB_EnableWRP</STRONG> (Thumb, 182 bytes, Stack size 28 bytes, stm32f37x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[72]"></a>FLASH_OB_RDPConfig</STRONG> (Thumb, 148 bytes, Stack size 12 bytes, stm32f37x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[73]"></a>FLASH_OB_UserConfig</STRONG> (Thumb, 82 bytes, Stack size 20 bytes, stm32f37x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[74]"></a>FLASH_OB_BOOTConfig</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, stm32f37x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[75]"></a>FLASH_OB_VDDAConfig</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, stm32f37x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[76]"></a>FLASH_OB_VDD_SD12Config</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, stm32f37x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[77]"></a>FLASH_OB_SRAMParityConfig</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, stm32f37x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[78]"></a>FLASH_OB_WriteUser</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, stm32f37x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[f0]"></a>FLASH_OB_GetUser</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f37x_flash.o(.text), UNUSED)

<P><STRONG><a name="[f1]"></a>FLASH_OB_GetWRP</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f37x_flash.o(.text), UNUSED)

<P><STRONG><a name="[f2]"></a>FLASH_ITConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f37x_flash.o(.text), UNUSED)

<P><STRONG><a name="[f3]"></a>FLASH_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f37x_flash.o(.text), UNUSED)

<P><STRONG><a name="[b8]"></a>FLASH_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f37x_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInterFlash_Init
</UL>

<P><STRONG><a name="[79]"></a>GPIO_DeInit</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, stm32f37x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphResetCmd
</UL>

<P><STRONG><a name="[bd]"></a>GPIO_Init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, stm32f37x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGPIO_Init
</UL>

<P><STRONG><a name="[f4]"></a>GPIO_StructInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f37x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f5]"></a>GPIO_PinLockConfig</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f37x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c0]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vFeedExtWatchDog
</UL>

<P><STRONG><a name="[f6]"></a>GPIO_ReadInputData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f37x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[f7]"></a>GPIO_ReadOutputData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f37x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f8]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f37x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f9]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f37x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[be]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f37x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vLed_Light
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vFeedExtWatchDog
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGPIO_Init
</UL>

<P><STRONG><a name="[fa]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f37x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, stm32f37x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGPIO_Init
</UL>

<P><STRONG><a name="[c5]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f37x_misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vNVIC_IRQ_Config
</UL>

<P><STRONG><a name="[d5]"></a>NVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, stm32f37x_misc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vIRQ_UART_Config
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vIRQ_TIME_Config
</UL>

<P><STRONG><a name="[fb]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f37x_misc.o(.text), UNUSED)

<P><STRONG><a name="[fc]"></a>NVIC_SystemLPConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f37x_misc.o(.text), UNUSED)

<P><STRONG><a name="[c7]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f37x_misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fd]"></a>RCC_DeInit</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[fe]"></a>RCC_HSEConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[7c]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f37x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
</UL>

<P><STRONG><a name="[7b]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32f37x_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>

<P><STRONG><a name="[ff]"></a>RCC_AdjustHSICalibrationValue</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[100]"></a>RCC_HSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[101]"></a>RCC_LSEConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[102]"></a>RCC_LSEDriveConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[103]"></a>RCC_LSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[104]"></a>RCC_PLLConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[105]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[106]"></a>RCC_PREDIV1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[107]"></a>RCC_ClockSecuritySystemCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[108]"></a>RCC_MCOConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[109]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[10a]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[10b]"></a>RCC_HCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[10c]"></a>RCC_PCLK1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[10d]"></a>RCC_PCLK2Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[10e]"></a>RCC_ADCCLKConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[10f]"></a>RCC_SDADCCLKConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[110]"></a>RCC_CECCLKConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[111]"></a>RCC_I2CCLKConfig</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[112]"></a>RCC_USARTCLKConfig</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[113]"></a>RCC_USBCLKConfig</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[92]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 546 bytes, Stack size 16 bytes, stm32f37x_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[114]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[115]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[116]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGPIO_Init
</UL>

<P><STRONG><a name="[de]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUart_Init
</UL>

<P><STRONG><a name="[d6]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUart_Init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimer_Init
</UL>

<P><STRONG><a name="[7a]"></a>RCC_AHBPeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
</UL>

<P><STRONG><a name="[7f]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
</UL>

<P><STRONG><a name="[7e]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
</UL>

<P><STRONG><a name="[117]"></a>RCC_ITConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[118]"></a>RCC_ClearFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[119]"></a>RCC_GetITStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[11a]"></a>RCC_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f37x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>TIM_DeInit</STRONG> (Thumb, 348 bytes, Stack size 8 bytes, stm32f37x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[d7]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimer_Init
</UL>

<P><STRONG><a name="[11b]"></a>TIM_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[11c]"></a>TIM_PrescalerConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[11d]"></a>TIM_CounterModeConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[11e]"></a>TIM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[11f]"></a>TIM_SetAutoreload</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[120]"></a>TIM_GetCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[121]"></a>TIM_GetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[122]"></a>TIM_UpdateDisableConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[123]"></a>TIM_UpdateRequestConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[124]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[125]"></a>TIM_SelectOnePulseMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[126]"></a>TIM_SetClockDivision</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[d8]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimer_Init
</UL>

<P><STRONG><a name="[127]"></a>TIM_BDTRConfig</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[128]"></a>TIM_BDTRStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[129]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[12a]"></a>TIM_OC1Init</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[db]"></a>TIM_OC2Init</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, stm32f37x_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC2Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimer_Init
</UL>

<P><STRONG><a name="[12b]"></a>TIM_OC3Init</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[12c]"></a>TIM_OC4Init</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[12d]"></a>TIM_OCStructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[12e]"></a>TIM_SelectOCxM</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[12f]"></a>TIM_SetCompare1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[130]"></a>TIM_SetCompare2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[131]"></a>TIM_SetCompare3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[132]"></a>TIM_SetCompare4</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[133]"></a>TIM_ForcedOC1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[134]"></a>TIM_ForcedOC2Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[135]"></a>TIM_ForcedOC3Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[136]"></a>TIM_ForcedOC4Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[137]"></a>TIM_CCPreloadControl</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[138]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[da]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimer_Init
</UL>

<P><STRONG><a name="[139]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[13a]"></a>TIM_OC4PreloadConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[13b]"></a>TIM_OC1FastConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[13c]"></a>TIM_OC2FastConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[13d]"></a>TIM_OC3FastConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[13e]"></a>TIM_OC4FastConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[13f]"></a>TIM_ClearOC1Ref</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[140]"></a>TIM_ClearOC2Ref</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[141]"></a>TIM_ClearOC3Ref</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[142]"></a>TIM_ClearOC4Ref</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[143]"></a>TIM_OC1PolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[144]"></a>TIM_OC1NPolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[145]"></a>TIM_OC2PolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[146]"></a>TIM_OC3PolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[147]"></a>TIM_OC4PolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[148]"></a>TIM_SelectOCREFClear</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[dc]"></a>TIM_CCxCmd</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, stm32f37x_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_CCxCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimer_Init
</UL>

<P><STRONG><a name="[149]"></a>TIM_CCxNCmd</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[14a]"></a>TIM_SelectCOM</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>TIM_SetIC4Prescaler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[86]"></a>TIM_SetIC3Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[84]"></a>TIM_SetIC2Prescaler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[82]"></a>TIM_SetIC1Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[80]"></a>TIM_ICInit</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, stm32f37x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC3Prescaler
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC4Prescaler
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI3_Config
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI4_Config
</UL>

<P><STRONG><a name="[14b]"></a>TIM_ICStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>TIM_PWMIConfig</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, stm32f37x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[14c]"></a>TIM_GetCapture1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[14d]"></a>TIM_GetCapture2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[14e]"></a>TIM_GetCapture3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[14f]"></a>TIM_GetCapture4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[d9]"></a>TIM_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimer_Init
</UL>

<P><STRONG><a name="[150]"></a>TIM_GenerateEvent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[151]"></a>TIM_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[152]"></a>TIM_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[d1]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f37x_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[d2]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[153]"></a>TIM_DMAConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[154]"></a>TIM_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[155]"></a>TIM_SelectCCDMA</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[156]"></a>TIM_InternalClockConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[8b]"></a>TIM_SelectInputTrigger</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRxExternalClockConfig
</UL>

<P><STRONG><a name="[8a]"></a>TIM_ITRxExternalClockConfig</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, stm32f37x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
</UL>

<P><STRONG><a name="[8c]"></a>TIM_TIxExternalClockConfig</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, stm32f37x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[8e]"></a>TIM_ETRConfig</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, stm32f37x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode2Config
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode1Config
</UL>

<P><STRONG><a name="[8d]"></a>TIM_ETRClockMode1Config</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, stm32f37x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[8f]"></a>TIM_ETRClockMode2Config</STRONG> (Thumb, 32 bytes, Stack size 20 bytes, stm32f37x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[157]"></a>TIM_SelectOutputTrigger</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[158]"></a>TIM_SelectSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[159]"></a>TIM_SelectMasterSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[15a]"></a>TIM_EncoderInterfaceConfig</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[15b]"></a>TIM_SelectHallSensor</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[15c]"></a>TIM_RemapConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f37x_tim.o(.text), UNUSED)

<P><STRONG><a name="[90]"></a>USART_DeInit</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, stm32f37x_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[91]"></a>USART_Init</STRONG> (Thumb, 196 bytes, Stack size 72 bytes, stm32f37x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUart_Init
</UL>

<P><STRONG><a name="[15d]"></a>USART_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[15e]"></a>USART_ClockInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[15f]"></a>USART_ClockStructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[e0]"></a>USART_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUart_Init
</UL>

<P><STRONG><a name="[160]"></a>USART_DirectionModeCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[df]"></a>USART_OverSampling8Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUart_Init
</UL>

<P><STRONG><a name="[161]"></a>USART_OneBitMethodCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[162]"></a>USART_MSBFirstCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[163]"></a>USART_DataInvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[164]"></a>USART_InvPinCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[165]"></a>USART_SWAPPinCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[166]"></a>USART_ReceiverTimeOutCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[167]"></a>USART_SetReceiverTimeOut</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[168]"></a>USART_SetPrescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[169]"></a>USART_STOPModeCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[16a]"></a>USART_StopModeWakeUpSourceConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[16b]"></a>USART_AutoBaudRateCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[16c]"></a>USART_AutoBaudRateConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[d0]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[ce]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[16d]"></a>USART_SetAddress</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[16e]"></a>USART_MuteModeCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[16f]"></a>USART_MuteModeWakeUpConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[170]"></a>USART_AddressDetectionConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[171]"></a>USART_LINBreakDetectLengthConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[172]"></a>USART_LINCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[173]"></a>USART_HalfDuplexCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[174]"></a>USART_SetGuardTime</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[175]"></a>USART_SmartCardCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[176]"></a>USART_SmartCardNACKCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[177]"></a>USART_SetAutoRetryCount</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[178]"></a>USART_SetBlockLength</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[179]"></a>USART_IrDAConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[17a]"></a>USART_IrDACmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[17b]"></a>USART_DECmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[17c]"></a>USART_DEPolarityConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[17d]"></a>USART_SetDEAssertionTime</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[17e]"></a>USART_SetDEDeassertionTime</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[17f]"></a>USART_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[180]"></a>USART_DMAReceptionErrorConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[a2]"></a>USART_ITConfig</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, stm32f37x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUart_Init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_DataPut
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRead_Version
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_ReadSet
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vVoltage_SetMinValue
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vVoltage_SetMaxValue
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_Reset
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_RaitoSet
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_AbleSet
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_TransFormer_Capacity_ReadSet
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_CTRatio_ReadSet
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_Limit_ReadSet
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_CTRatio_Set
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_Limit_Set
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Reset
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Voltage_Limit
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Voltage_Limit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_VChange_State
</UL>

<P><STRONG><a name="[181]"></a>USART_RequestCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[182]"></a>USART_OverrunDetectionConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[183]"></a>USART_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[184]"></a>USART_ClearFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f37x_usart.o(.text), UNUSED)

<P><STRONG><a name="[cc]"></a>USART_GetITStatus</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, stm32f37x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[cf]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f37x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[93]"></a>blRecvFrame</STRONG> (Thumb, 240 bytes, Stack size 16 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = blRecvFrame &rArr; ucDrv_Buf_GetBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDrv_Buf_GetBytes
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blTime2_Update
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwCheckFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RsvFrameHandle
</UL>

<P><STRONG><a name="[5f]"></a>Estatus_Modify_CurrentEvent</STRONG> (Thumb, 326 bytes, Stack size 24 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Estatus_Modify_CurrentEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Estatus
</UL>
<BR>[Address Reference Count : 2]<UL><LI> dlt645.o(.text)
<LI> dlt645.o(.constdata)
</UL>
<P><STRONG><a name="[9d]"></a>vCurrent_Limit_Modify</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dlt645.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.text)
</UL>
<P><STRONG><a name="[98]"></a>vCurrent_Modify</STRONG> (Thumb, 758 bytes, Stack size 24 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = vCurrent_Modify &rArr; vGet_Current
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrentTriple_Modify_Method
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blCurrentSingle_Modify_Method
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGet_Current
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPut_Current
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.text)
</UL>
<P><STRONG><a name="[ca]"></a>vDBDataID_Handle</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vDBDataID_Handle
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[185]"></a>vINFRDataID_Handle</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, dlt645.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>Get_VChange_State</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104<LI>Call Chain = Get_VChange_State &rArr; Flash_Write_Word &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDrv_Buf_PutBytes
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blDrv_Buf_IsEmpty
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_DataPut
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Word
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.constdata)
</UL>
<P><STRONG><a name="[63]"></a>Set_Voltage_Limit</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112<LI>Call Chain = Set_Voltage_Limit &rArr; Flash_Write_Word &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDrv_Buf_PutBytes
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blDrv_Buf_IsEmpty
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_DataPut
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Word
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Voltage
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.constdata)
</UL>
<P><STRONG><a name="[4e]"></a>Query_Voltage_Limit</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Query_Voltage_Limit &rArr; Uart_DataPut &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDrv_Buf_PutBytes
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blDrv_Buf_IsEmpty
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_DataPut
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLowByte
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHighByte
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.constdata)
</UL>
<P><STRONG><a name="[4f]"></a>Default_Reset</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104<LI>Call Chain = Default_Reset &rArr; Flash_Write_Word &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDrv_Buf_PutBytes
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blDrv_Buf_IsEmpty
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_DataPut
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Word
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLowByte
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHighByte
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.constdata)
</UL>
<P><STRONG><a name="[a8]"></a>Voltage_Modifier_Method</STRONG> (Thumb, 312 bytes, Stack size 16 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Voltage_Modifier_Method
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vLoadProfile_Voltage_Modify
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_Modifier
</UL>

<P><STRONG><a name="[a6]"></a>Voltage_Modifier</STRONG> (Thumb, 574 bytes, Stack size 16 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Voltage_Modifier &rArr; Get_Voltage
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_Modifier_Method
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCD_Verity
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLowByte
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHighByte
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Voltage
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vVoltageHandle
</UL>

<P><STRONG><a name="[5e]"></a>vVoltageHandle</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = vVoltageHandle &rArr; Voltage_Modifier &rArr; Get_Voltage
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_Modifier
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.constdata)
</UL>
<P><STRONG><a name="[a9]"></a>blVoltage_Create</STRONG> (Thumb, 570 bytes, Stack size 16 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = blVoltage_Create &rArr; GetLowByte
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLowByte
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHighByte
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoltageTimeOutHandle
</UL>

<P><STRONG><a name="[aa]"></a>Voltage_Change_Init</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Voltage_Change_Init &rArr; Get_Voltage
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEProm_Read
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Voltage
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ac]"></a>vCurrent_Limit_DefaultSet</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104<LI>Call Chain = vCurrent_Limit_DefaultSet &rArr; Flash_Write_Word &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Word
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read_Word
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[186]"></a>vCurrentDirect_Modify</STRONG> (Thumb, 190 bytes, Stack size 0 bytes, dlt645.o(.text), UNUSED)

<P><STRONG><a name="[58]"></a>vCurrent_Limit_Set</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = vCurrent_Limit_Set &rArr; Uart_DataPut &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDrv_Buf_PutBytes
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blDrv_Buf_IsEmpty
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_DataPut
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.constdata)
</UL>
<P><STRONG><a name="[5a]"></a>vCurrent_CTRatio_Set</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = vCurrent_CTRatio_Set &rArr; Uart_DataPut &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDrv_Buf_PutBytes
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blDrv_Buf_IsEmpty
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_DataPut
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.constdata)
</UL>
<P><STRONG><a name="[59]"></a>vCurrent_Limit_ReadSet</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = vCurrent_Limit_ReadSet &rArr; vPut_Current
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDrv_Buf_PutBytes
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blDrv_Buf_IsEmpty
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_DataPut
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPut_Current
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.constdata)
</UL>
<P><STRONG><a name="[5b]"></a>vCurrent_CTRatio_ReadSet</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = vCurrent_CTRatio_ReadSet &rArr; Uart_DataPut &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDrv_Buf_PutBytes
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blDrv_Buf_IsEmpty
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_DataPut
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLowByte
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHighByte
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.constdata)
</UL>
<P><STRONG><a name="[5c]"></a>vCurrent_TransFormer_Capacity_ReadSet</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = vCurrent_TransFormer_Capacity_ReadSet &rArr; Uart_DataPut &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDrv_Buf_PutBytes
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blDrv_Buf_IsEmpty
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_DataPut
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLowByte
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHighByte
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.constdata)
</UL>
<P><STRONG><a name="[187]"></a>vCurrent_Count_Clear</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dlt645.o(.text), UNUSED)

<P><STRONG><a name="[ae]"></a>vEnergy_Modify_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vEnergy_Modify_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEProm_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[af]"></a>vNow_Frozen_Modify_Mothod</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120<LI>Call Chain = vNow_Frozen_Modify_Mothod &rArr; Flash_Write_Word &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Word
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read_Word
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDayfrozen_Modifier
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vNowEnergy_Modifier
</UL>

<P><STRONG><a name="[60]"></a>vNowEnergy_Modifier</STRONG> (Thumb, 646 bytes, Stack size 40 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160<LI>Call Chain = vNowEnergy_Modifier &rArr; vNow_Frozen_Modify_Mothod &rArr; Flash_Write_Word &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Word
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vNow_Frozen_Modify_Mothod
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_Energy
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Energy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.constdata)
</UL>
<P><STRONG><a name="[61]"></a>vDayfrozen_Modifier</STRONG> (Thumb, 314 bytes, Stack size 40 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160<LI>Call Chain = vDayfrozen_Modifier &rArr; vNow_Frozen_Modify_Mothod &rArr; Flash_Write_Word &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Word
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vNow_Frozen_Modify_Mothod
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_Energy
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Energy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.constdata)
</UL>
<P><STRONG><a name="[b3]"></a>vAccountEnergy_Modify_Mothod</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = vAccountEnergy_Modify_Mothod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAccountEnergy_Modify
</UL>

<P><STRONG><a name="[62]"></a>vAccountEnergy_Modify</STRONG> (Thumb, 348 bytes, Stack size 24 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = vAccountEnergy_Modify &rArr; vAccountEnergy_Modify_Mothod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAccountEnergy_Modify_Mothod
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_Energy
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Energy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.constdata)
</UL>
<P><STRONG><a name="[54]"></a>vEnergy_Modify_AbleSet</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104<LI>Call Chain = vEnergy_Modify_AbleSet &rArr; Flash_Write_Word &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDrv_Buf_PutBytes
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blDrv_Buf_IsEmpty
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_DataPut
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Word
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEProm_Read
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.constdata)
</UL>
<P><STRONG><a name="[55]"></a>vEnergy_Modify_RaitoSet</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112<LI>Call Chain = vEnergy_Modify_RaitoSet &rArr; Flash_Write_Word &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDrv_Buf_PutBytes
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blDrv_Buf_IsEmpty
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_DataPut
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Word
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEProm_Read
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.constdata)
</UL>
<P><STRONG><a name="[56]"></a>vEnergy_Modify_Reset</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104<LI>Call Chain = vEnergy_Modify_Reset &rArr; Flash_Write_Word &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDrv_Buf_PutBytes
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blDrv_Buf_IsEmpty
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_DataPut
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Word
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEProm_Read
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.constdata)
</UL>
<P><STRONG><a name="[50]"></a>vVoltage_SetMaxValue</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104<LI>Call Chain = vVoltage_SetMaxValue &rArr; Flash_Write_Word &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDrv_Buf_PutBytes
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blDrv_Buf_IsEmpty
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Word
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read_Word
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Voltage
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.constdata)
</UL>
<P><STRONG><a name="[51]"></a>vVoltage_SetMinValue</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104<LI>Call Chain = vVoltage_SetMinValue &rArr; Flash_Write_Word &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDrv_Buf_PutBytes
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blDrv_Buf_IsEmpty
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Word
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEProm_Read
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Voltage
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.constdata)
</UL>
<P><STRONG><a name="[52]"></a>vVoltage_SetMaxMaxValue</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dlt645.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.constdata)
</UL>
<P><STRONG><a name="[53]"></a>vVoltage_SetMinMinValue</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dlt645.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.constdata)
</UL>
<P><STRONG><a name="[57]"></a>vEnergy_Modify_ReadSet</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = vEnergy_Modify_ReadSet &rArr; ucDrv_Buf_PutBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDrv_Buf_PutBytes
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blDrv_Buf_IsEmpty
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read_Word
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.constdata)
</UL>
<P><STRONG><a name="[64]"></a>vLoadProfile_Voltage_Modify</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = vLoadProfile_Voltage_Modify &rArr; Get_Voltage
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_Modifier_Method
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLowByte
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHighByte
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Voltage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.constdata)
</UL>
<P><STRONG><a name="[65]"></a>vLoadProfile_Current_Modify</STRONG> (Thumb, 76 bytes, Stack size 20 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = vLoadProfile_Current_Modify
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.constdata)
</UL>
<P><STRONG><a name="[5d]"></a>vRead_Version</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = vRead_Version &rArr; Uart_DataPut &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDrv_Buf_PutBytes
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blDrv_Buf_IsEmpty
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_DataPut
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dlt645.o(.constdata)
</UL>
<P><STRONG><a name="[b6]"></a>vInterFlash_Init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vInterFlash_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetLatency
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b9]"></a>EEProm_Write</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
</UL>

<P><STRONG><a name="[9e]"></a>Flash_Write_Word</STRONG> (Thumb, 166 bytes, Stack size 1064 bytes, flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1088<LI>Call Chain = Flash_Write_Word &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vVoltage_SetMinValue
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vVoltage_SetMaxValue
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_Reset
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_RaitoSet
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_AbleSet
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDayfrozen_Modifier
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vNowEnergy_Modifier
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vNow_Frozen_Modify_Mothod
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_Limit_DefaultSet
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Reset
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Voltage_Limit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_VChange_State
</UL>

<P><STRONG><a name="[ad]"></a>Flash_Read_Word</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_ReadSet
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vVoltage_SetMaxValue
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vNow_Frozen_Modify_Mothod
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_Limit_DefaultSet
</UL>

<P><STRONG><a name="[ab]"></a>EEProm_Read</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vVoltage_SetMinValue
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_Reset
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_RaitoSet
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_AbleSet
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_Change_Init
</UL>

<P><STRONG><a name="[ba]"></a>vGPIO_Init</STRONG> (Thumb, 320 bytes, Stack size 16 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = vGPIO_Init &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bf]"></a>vFeedExtWatchDog</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vFeedExtWatchDog
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c1]"></a>vLed_Light</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vLed_Light
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4a]"></a>main</STRONG> (Thumb, 256 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104<LI>Call Chain = main &rArr; vCurrent_Limit_DefaultSet &rArr; Flash_Write_Word &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUart_Init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimer_Init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vNVIC_IRQ_Config
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RsvFrameHandle
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoltageTimeOutHandle
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vLed_Light
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vFeedExtWatchDog
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGPIO_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInterFlash_Init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDrv_Buf_PutBytes
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blTime2_Update
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blDrv_Buf_IsEmpty
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_DataPut
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_Init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_Limit_DefaultSet
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_Change_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blVoltage_Create
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDBDataID_Handle
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blRecvFrame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f37x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f37x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f37x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f37x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f37x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f37x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f37x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f37x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f37x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, stm32f37x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USART1_IRQHandler &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blDrv_Buf_IsFull
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blDrv_Buf_IsEmpty
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f37x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, stm32f37x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USART3_IRQHandler &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blDrv_Buf_IsFull
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blDrv_Buf_IsEmpty
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, stm32f37x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM2_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f37x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>SystemInit</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, system_stm32f37x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f37x.o(.text)
</UL>
<P><STRONG><a name="[188]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, system_stm32f37x.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>vTimer_Init</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = vTimer_Init &rArr; vIRQ_TIME_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vIRQ_TIME_Config
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxCmd
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2PreloadConfig
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2Init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[95]"></a>blTime2_Update</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, time.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoltageTimeOutHandle
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blRecvFrame
</UL>

<P><STRONG><a name="[c8]"></a>vUart_Init</STRONG> (Thumb, 220 bytes, Stack size 32 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = vUart_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vIRQ_UART_Config
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_OverSampling8Cmd
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a0]"></a>blDrv_Buf_IsEmpty</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RsvFrameHandle
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoltageTimeOutHandle
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRead_Version
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_ReadSet
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vVoltage_SetMinValue
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vVoltage_SetMaxValue
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_Reset
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_RaitoSet
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_AbleSet
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_TransFormer_Capacity_ReadSet
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_CTRatio_ReadSet
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_Limit_ReadSet
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_CTRatio_Set
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_Limit_Set
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Reset
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Voltage_Limit
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Voltage_Limit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_VChange_State
</UL>

<P><STRONG><a name="[cd]"></a>blDrv_Buf_IsFull</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[189]"></a>ucDrv_Buf_EmpLen</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[e1]"></a>ucDrv_Buf_DataLen</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDrv_Buf_PutBytes
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDrv_Buf_GetBytes
</UL>

<P><STRONG><a name="[94]"></a>ucDrv_Buf_GetBytes</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ucDrv_Buf_GetBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDrv_Buf_DataLen
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blRecvFrame
</UL>

<P><STRONG><a name="[9f]"></a>ucDrv_Buf_PutBytes</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ucDrv_Buf_PutBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDrv_Buf_DataLen
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RsvFrameHandle
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoltageTimeOutHandle
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRead_Version
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_ReadSet
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vVoltage_SetMinValue
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vVoltage_SetMaxValue
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_Reset
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_RaitoSet
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_AbleSet
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_TransFormer_Capacity_ReadSet
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_CTRatio_ReadSet
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_Limit_ReadSet
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_CTRatio_Set
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_Limit_Set
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Reset
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Voltage_Limit
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Voltage_Limit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_VChange_State
</UL>

<P><STRONG><a name="[a1]"></a>Uart_DataPut</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Uart_DataPut &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RsvFrameHandle
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoltageTimeOutHandle
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRead_Version
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_Reset
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_RaitoSet
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEnergy_Modify_AbleSet
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_TransFormer_Capacity_ReadSet
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_CTRatio_ReadSet
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_Limit_ReadSet
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_CTRatio_Set
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_Limit_Set
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Reset
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Voltage_Limit
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Voltage_Limit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_VChange_State
</UL>

<P><STRONG><a name="[b0]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAccountEnergy_Modify_Mothod
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vNow_Frozen_Modify_Mothod
</UL>

<P><STRONG><a name="[e3]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[18a]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[e2]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[18b]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[67]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[18c]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[18d]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[18e]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[18f]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[87]"></a>TI4_Config</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, stm32f37x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[85]"></a>TI3_Config</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, stm32f37x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[83]"></a>TI2_Config</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, stm32f37x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[81]"></a>TI1_Config</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, stm32f37x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[96]"></a>dwCheckFrame</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, dlt645.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blRecvFrame
</UL>

<P><STRONG><a name="[97]"></a>Get_Estatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, dlt645.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Estatus_Modify_CurrentEvent
</UL>

<P><STRONG><a name="[9b]"></a>vPut_Current</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vPut_Current
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_Limit_ReadSet
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_Modify
</UL>

<P><STRONG><a name="[99]"></a>vGet_Current</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vGet_Current
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_Modify
</UL>

<P><STRONG><a name="[9c]"></a>blCurrentSingle_Modify_Method</STRONG> (Thumb, 526 bytes, Stack size 12 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = blCurrentSingle_Modify_Method
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_Modify
</UL>

<P><STRONG><a name="[9a]"></a>vCurrentTriple_Modify_Method</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = vCurrentTriple_Modify_Method
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_Modify
</UL>

<P><STRONG><a name="[a3]"></a>Get_Voltage</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Get_Voltage
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vLoadProfile_Voltage_Modify
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vVoltage_SetMinValue
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vVoltage_SetMaxValue
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_Change_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_Modifier
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Voltage_Limit
</UL>

<P><STRONG><a name="[a5]"></a>GetHighByte</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetHighByte
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vLoadProfile_Voltage_Modify
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_TransFormer_Capacity_ReadSet
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_CTRatio_ReadSet
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blVoltage_Create
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_Modifier
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Reset
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Voltage_Limit
</UL>

<P><STRONG><a name="[a4]"></a>GetLowByte</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetLowByte
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vLoadProfile_Voltage_Modify
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_TransFormer_Capacity_ReadSet
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCurrent_CTRatio_ReadSet
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blVoltage_Create
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_Modifier
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Reset
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Voltage_Limit
</UL>

<P><STRONG><a name="[a7]"></a>BCD_Verity</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BCD_Verity
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_Modifier
</UL>

<P><STRONG><a name="[b1]"></a>Get_Energy</STRONG> (Thumb, 118 bytes, Stack size 20 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Get_Energy
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAccountEnergy_Modify
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDayfrozen_Modifier
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vNowEnergy_Modifier
</UL>

<P><STRONG><a name="[b2]"></a>Fill_Energy</STRONG> (Thumb, 222 bytes, Stack size 20 bytes, dlt645.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Fill_Energy
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAccountEnergy_Modify
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDayfrozen_Modifier
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vNowEnergy_Modifier
</UL>

<P><STRONG><a name="[c6]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c2]"></a>VoltageTimeOutHandle</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = VoltageTimeOutHandle &rArr; Uart_DataPut &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDrv_Buf_PutBytes
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blTime2_Update
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blDrv_Buf_IsEmpty
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_DataPut
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blVoltage_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c3]"></a>RsvFrameHandle</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = RsvFrameHandle &rArr; blRecvFrame &rArr; ucDrv_Buf_GetBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDrv_Buf_PutBytes
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blDrv_Buf_IsEmpty
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_DataPut
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blRecvFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c4]"></a>vNVIC_IRQ_Config</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vNVIC_IRQ_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d3]"></a>SetSysClock</STRONG> (Thumb, 188 bytes, Stack size 12 bytes, system_stm32f37x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[d4]"></a>vIRQ_TIME_Config</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vIRQ_TIME_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimer_Init
</UL>

<P><STRONG><a name="[dd]"></a>vIRQ_UART_Config</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vIRQ_UART_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vUart_Init
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
